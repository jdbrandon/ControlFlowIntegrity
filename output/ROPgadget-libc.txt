Gadgets information
============================================================
0x0000000000017a94 : adc al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x58
0x00000000000cfafa : adc al, 0 ; add byte ptr [rax], al ; add dword ptr [rbp + 7], esi ; ret
0x0000000000146df0 : adc al, 0 ; add byte ptr [rax], al ; fdivr qword ptr [rbx] ; add byte ptr [rax], al ; ret 0xffef
0x000000000014f508 : adc al, 0 ; add byte ptr [rax], al ; hlt ; ret 0
0x000000000015f500 : adc al, 0 ; add byte ptr [rax], al ; in al, dx ; ret 1
0x000000000014f5c0 : adc al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x000000000015f4b8 : adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 1
0x000000000014f578 : adc al, 0 ; add byte ptr [rax], al ; ret
0x00000000000dc432 : adc al, 0 ; add byte ptr [rax], al ; sub eax, edx ; ret
0x00000000000dc725 : adc al, 0 ; add byte ptr [rax], al ; syscall
0x000000000014f5a8 : adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x00000000000dcb92 : adc al, 0x24 ; add rsp, 0x18 ; mov eax, edx ; ret
0x00000000000d6185 : adc al, 0x24 ; add rsp, 0x18 ; mov rax, rdx ; ret
0x00000000000afa9a : adc al, 0x24 ; mov rdx, qword ptr [rsp + 0x28] ; call rax
0x0000000000030ebb : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x000000000014642c : adc al, 0x32 ; add byte ptr [rax], al ; sal byte ptr [rsi], 1 ; out dx, eax ; call qword ptr [rsi]
0x000000000014682c : adc al, 0x36 ; add byte ptr [rax], al ; mov al, 0x42 ; out dx, eax ; jmp qword ptr [rcx]
0x0000000000142150 : adc al, 0x3e ; cld ; call rsp
0x000000000013ddc0 : adc al, 0x43 ; out dx, al ; jmp rsp
0x000000000007c290 : adc al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000093dbb : adc al, 0x48 ; lea eax, [rdi + rax + 0x30] ; ret
0x0000000000021dba : adc al, 0x48 ; mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000142af0 : adc al, 0x62 ; std ; call rsp
0x000000000014952c : adc al, 0x63 ; add byte ptr [rax], al ; nop ; jno 0x14952c ; call rdi
0x0000000000142b70 : adc al, 0x6a ; std ; jmp rsp
0x0000000000142be0 : adc al, 0x6e ; std ; jmp rsp
0x0000000000141ce0 : adc al, 0x71 ; sti ; dec esp ; ret 1
0x000000000015ab2c : adc al, 0x79 ; add dword ptr [rax], eax ; and dh, ah ; stc ; call qword ptr [rax]
0x000000000013fac8 : adc al, 0x7a ; cmc ; call rsp
0x00000000000bc351 : adc al, 0x80 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003692b : adc al, 0x83 ; loop 0x36938 ; jne 0x36940 ; xor eax, eax ; ret
0x000000000015b92c : adc al, 0x87 ; add dword ptr [rax], eax ; nop ; cli ; jmp rdx
0x00000000000e37e6 : adc al, 0x89 ; ret
0x00000000000e6f0c : adc al, 0x8a ; add eax, dword ptr [rsi + rdx] ; ret
0x00000000000717e2 : adc al, 0x8a ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000000a798c : adc al, 0x90 ; add rax, rdx ; jmp rax
0x000000000005418e : adc al, 0x95 ; add byte ptr [rax], 0 ; add byte ptr [rcx + 1], cl ; ret 0x3145
0x00000000000a6c31 : adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x00000000000584ec : adc al, 0x98 ; add rax, rdx ; jmp rax
0x00000000001423c8 : adc al, 0x99 ; cld ; jmp rsp
0x0000000000083d27 : adc al, 0xa ; jmp r10
0x00000000000615eb : adc al, 0xa0 ; add rax, rdx ; jmp rax
0x000000000014db2c : adc al, 0xa9 ; add byte ptr [rax], al ; jo 0x14db6e ; hlt ; call rax
0x00000000000b4955 : adc al, 0xb0 ; add rax, rdx ; jmp rax
0x000000000014e82c : adc al, 0xb6 ; add byte ptr [rax], al ; nop ; hlt ; jmp qword ptr [rbx]
0x0000000000033df7 : adc al, 0xb7 ; add rdx, rdi ; jmp rdx
0x0000000000080745 : adc al, 0xb8 ; add rax, rdx ; jmp rax
0x00000000000bdcde : adc al, 0xbe ; cmove eax, ecx ; ret
0x0000000000036898 : adc al, 0xc7 ; setne al ; movzx eax, al ; ret
0x00000000000368c8 : adc al, 0xc7 ; xor eax, eax ; ret
0x0000000000160b2c : adc al, 0xd9 ; add dword ptr [rax], eax ; adc byte ptr [rsi - 5], ah ; call rsp
0x000000000009571a : adc al, 0xe ; jne 0x95715 ; ret
0x000000000011bc03 : adc al, 0xe ; mov byte ptr [rax + rcx], dl ; ret
0x0000000000002b3b : adc al, 0xe7 ; ret
0x000000000011d759 : adc al, 0xea ; test rdx, rdx ; je 0x11d76d ; call rdx
0x0000000000101705 : adc al, 0xeb ; ret 0x8b4c
0x00000000000e3f95 : adc al, 1 ; add byte ptr [rax], al ; syscall
0x000000000014289d : adc al, 2 ; add byte ptr [rsp + rsi - 3], al ; jmp rsp
0x00000000000e55a3 : adc al, 5 ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000008987b : adc al, 6 ; jne 0x89878 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000093806 : adc al, 7 ; cmp edx, ecx ; je 0x93807 ; ret
0x000000000009372a : adc al, 7 ; test dl, dl ; jne 0x93727 ; ret
0x0000000000143a2c : adc al, 8 ; add byte ptr [rax], al ; xor byte ptr [rsi], dl ; out dx, al ; call rax
0x000000000011bc06 : adc al, 8 ; ret
0x00000000001444b5 : adc al, byte ptr [rax] ; add al, bh ; xchg eax, edi ; out dx, al ; jmp qword ptr [rcx]
0x00000000000d5265 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000000792 : adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x000000000000efcc : adc al, byte ptr [rax] ; or eax, dword ptr [rax] ; push rax ; call qword ptr [rax]
0x00000000000533d5 : adc al, byte ptr [rbx - 0x110343] ; call qword ptr [rax]
0x00000000001544bd : adc al, byte ptr [rcx] ; add al, al ; mov edi, esp ; jmp qword ptr [rsi]
0x000000000011900b : adc al, ch ; jmp rbx
0x0000000000035b67 : adc al, ch ; ret
0x00000000000bbde8 : adc al, ch ; ret 0xf635
0x0000000000130a60 : adc bh, bl ; cmc ; push qword ptr [rax] ; fcompi st(5) ; jmp qword ptr [rax]
0x00000000000e276d : adc bh, byte ptr [rax + 0x88] ; syscall
0x000000000011a6fe : adc bh, byte ptr [rax + 3] ; syscall
0x0000000000003a7b : adc bh, byte ptr [rax] ; cwde ; ret
0x000000000014ca21 : adc bh, ch ; jmp qword ptr [rcx]
0x00000000000fac03 : adc bh, dh ; ret 0x8080
0x000000000003596c : adc bl, bl ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x00000000000899d5 : adc bl, ch ; call 0xffffffffc3d9232a
0x0000000000083a55 : adc bl, ch ; call 0xffffffffc400c3aa
0x00000000000851f5 : adc bl, ch ; call 0xffffffffc400db4a
0x0000000000045d06 : adc bl, ch ; jge 0x45d5c ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000034c22 : adc bl, ch ; ret 0x1f0f
0x0000000000089205 : adc bl, dh ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x00000000000de84b : adc bl, dh ; ret
0x0000000000077c9e : adc byte ptr [r11 + 0xe], r14b ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000011e5e1 : adc byte ptr [r13 + 0x5b0975c0], r8b ; ret
0x00000000000836a2 : adc byte ptr [r15], cl ; mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x4201
0x00000000000bbae2 : adc byte ptr [r8 + 0x39], cl ; ret
0x000000000007577e : adc byte ptr [r8 + 1], cl ; ret 0x3948
0x00000000000af0d0 : adc byte ptr [r8 + r9*4 + 0x63], al ; adc cl, byte ptr [rax + 1] ; ret
0x0000000000078ba6 : adc byte ptr [r8 - 0x77], cl ; ret 0x19e9
0x00000000000b5a25 : adc byte ptr [r8 - 0x7d], r9b ; ret
0x00000000000773f1 : adc byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000a39a1 : adc byte ptr [r9], r13b ; ret 0x428d
0x0000000000082221 : adc byte ptr [rax + 0x33], cl ; push rdi ; or byte ptr [rax + 0x39], cl ; ret 0x5d74
0x00000000000bbae3 : adc byte ptr [rax + 0x39], cl ; ret
0x00000000000be459 : adc byte ptr [rax + 0x39], cl ; ret 0x574
0x000000000007d8b4 : adc byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000000c8ebf : adc byte ptr [rax + 0x39], cl ; ret 0xd377
0x000000000003527e : adc byte ptr [rax + 0x48d00148], al ; shr eax, 0x3f ; ret
0x0000000000104056 : adc byte ptr [rax + 0x63], cl ; cmc ; mov eax, 0x81 ; syscall
0x00000000000e2f99 : adc byte ptr [rax + 1], bh ; pop rbx ; ret
0x000000000010befa : adc byte ptr [rax + 1], bh ; ret
0x00000000000949fe : adc byte ptr [rax + 1], cl ; clc ; ret
0x00000000000463ce : adc byte ptr [rax + 1], cl ; ret
0x0000000000093db6 : adc byte ptr [rax + 1], cl ; ret 0x147c
0x000000000007577f : adc byte ptr [rax + 1], cl ; ret 0x3948
0x0000000000039fcb : adc byte ptr [rax + 1], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x8966
0x0000000000039fca : adc byte ptr [rax + 1], r9b ; ror byte ptr [rax - 0x77], 1 ; ret 0x8966
0x00000000000aeaf5 : adc byte ptr [rax + 3], bh ; syscall
0x000000000010ea89 : adc byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000af0d1 : adc byte ptr [rax + rcx*4 + 0x63], al ; adc cl, byte ptr [rax + 1] ; ret
0x00000000000e6f09 : adc byte ptr [rax - 0x73], cl ; adc al, 0x8a ; add eax, dword ptr [rsi + rdx] ; ret
0x000000000002e887 : adc byte ptr [rax - 0x73], cl ; add al, 0xb2 ; mov eax, dword ptr [rdi + rax] ; ret
0x00000000000ecd73 : adc byte ptr [rax - 0x73], cl ; add ecx, dword ptr [rbp - 0x77] ; ret
0x000000000008e454 : adc byte ptr [rax - 0x73], cl ; jg 0x8e471 ; jne 0x8e448 ; ret
0x00000000000e6cb7 : adc byte ptr [rax - 0x73], cl ; or al, 0xb1 ; add eax, dword ptr [rdx + rcx] ; ret
0x00000000000e6f08 : adc byte ptr [rax - 0x73], r9b ; adc al, 0x8a ; add eax, dword ptr [rsi + rdx] ; ret
0x0000000000021dbd : adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000000ec1db : adc byte ptr [rax - 0x75], cl ; cmp byte ptr [r8 - 0x77], r9b ; ret 0x2b48
0x000000000008e87e : adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x000000000010aad7 : adc byte ptr [rax - 0x76be05ad], cl ; ror byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000e14bf : adc byte ptr [rax - 0x77], cl ; add byte ptr [r8 - 0x77], r9b ; ret
0x00000000000f0886 : adc byte ptr [rax - 0x77], cl ; clc ; test edx, edx ; jne 0xf0898 ; ret
0x0000000000033bcb : adc byte ptr [rax - 0x77], cl ; enter 0x5d5b, 0x41 ; pop rsp ; ret
0x0000000000070bdb : adc byte ptr [rax - 0x77], cl ; jo 0x70bf9 ; mov qword ptr [rax + 0x40], rcx ; ret
0x00000000000e1396 : adc byte ptr [rax - 0x77], cl ; jo 0xe13a8 ; ret
0x0000000000106b4b : adc byte ptr [rax - 0x77], cl ; out dx, eax ; call r14
0x0000000000070b9b : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x00000000000e13cb : adc byte ptr [rax - 0x77], cl ; push rsi ; or byte ptr [rax - 0x77], cl ; jo 0xe13ed ; ret
0x000000000007de80 : adc byte ptr [rax - 0x77], cl ; push rsp ; and al, 0x28 ; call rax
0x0000000000070b9f : adc byte ptr [rax - 0x77], cl ; ret
0x0000000000078ba7 : adc byte ptr [rax - 0x77], cl ; ret 0x19e9
0x00000000000cfde5 : adc byte ptr [rax - 0x77], cl ; ret 0x349
0x000000000003c138 : adc byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000f12c1 : adc byte ptr [rax - 0x77], cl ; ret 0x8548
0x000000000007e742 : adc byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000075f67 : adc byte ptr [rax - 0x7d], cl ; jg 0x75f8d ; add byte ptr [rcx + rcx - 0xd], dh ; ret
0x00000000000b5a26 : adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000081d53 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000081074 : adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000008ed56 : adc byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000034df5 : adc byte ptr [rax - 0x7d], cl ; ret 0x8001
0x0000000000077cc9 : adc byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000069780 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000000773f2 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000d9538 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001084b2 : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x00000000000946a9 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000013292d : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000000dbd08 : adc byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000006a018 : adc byte ptr [rax], al ; add byte ptr [rax], al ; test ecx, ecx ; je 0x6a031 ; ret
0x00000000000f0dab : adc byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000ec5e7 : adc byte ptr [rax], al ; je 0xec5f6 ; xor eax, eax ; ret
0x0000000000042599 : adc byte ptr [rax], al ; mov eax, 0x38 ; syscall
0x00000000000352a2 : adc byte ptr [rax], al ; orpd xmm0, xmm1 ; ret
0x00000000000430d2 : adc byte ptr [rax], al ; ret
0x00000000000928d6 : adc byte ptr [rbp + 0x40e57fc9], al ; or byte ptr [rdi], dh ; ret
0x000000000011e5e2 : adc byte ptr [rbp + 0x5b0975c0], al ; ret
0x00000000000961df : adc byte ptr [rbp + rcx*4 + 0x4e], cl ; adc byte ptr [rcx + 0x39], al ; ret
0x0000000000089348 : adc byte ptr [rbp - 0x1b], dh ; mov rax, rdi ; ret
0x000000000008e458 : adc byte ptr [rbp - 0x1b], dh ; ret
0x0000000000101ecf : adc byte ptr [rbp - 0x49f0be37], al ; ret 0x48d
0x00000000000533dc : adc byte ptr [rbp - 0x6bf001bf], cl ; ret 0xd284
0x00000000000977d1 : adc byte ptr [rbp - 0xc0d8a2e], al ; ret
0x00000000000964aa : adc byte ptr [rbp - 0xd], dh ; ret
0x00000000000f0a49 : adc byte ptr [rbx + 0x5d], bl ; and eax, 0xc ; pop r12 ; ret
0x000000000007e873 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002b5f4 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000145133 : adc byte ptr [rbx + 0xa500202], al ; ret
0x0000000000077c9f : adc byte ptr [rbx + 0xe], dh ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x0000000000112cde : adc byte ptr [rbx + rcx*4 + 0x24], cl ; ret 0x854d
0x000000000007a6ea : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000007961b : adc byte ptr [rbx - 0x58], dh ; nop ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000014cd60 : adc byte ptr [rbx - 0xd], ch ; jmp qword ptr [rcx]
0x0000000000004b60 : adc byte ptr [rbx], dl ; or dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000961e3 : adc byte ptr [rcx + 0x39], al ; ret
0x000000000003e536 : adc byte ptr [rcx + 0x39], cl ; ret
0x00000000000961e2 : adc byte ptr [rcx + 0x39], r8b ; ret
0x00000000000fcad7 : adc byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; ret
0x000000000003b3d5 : adc byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x53c
0x000000000003b504 : adc byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000112e42 : adc byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8348
0x0000000000103106 : adc byte ptr [rcx + rcx*4 - 0x18], al ; syscall
0x000000000004834a : adc byte ptr [rcx - 0x73], al ; dec byte ptr [r15] ; xchg eax, esp ; ret 0xd284
0x0000000000053d6e : adc byte ptr [rcx - 0x73], al ; dec byte ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000033d06 : adc byte ptr [rcx - 0x77], cl ; ret 0x1674
0x00000000000e3ff5 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x00000000000a16b8 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000a39a2 : adc byte ptr [rcx], ch ; ret 0x428d
0x0000000000039916 : adc byte ptr [rcx], ch ; ret 0xc269
0x000000000007a6ed : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000002b5c5 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000dc534 : adc byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd6 ; ja 0xdc549 ; ret
0x0000000000132e54 : adc byte ptr [rdi - 3], dl ; push rax ; push rsi ; std ; jmp rax
0x000000000002ecc9 : adc byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x00000000000f4e72 : adc byte ptr [rdi], cl ; mov bh, 0xf6 ; or eax, esi ; bswap eax ; ret
0x00000000000836a3 : adc byte ptr [rdi], cl ; mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x4201
0x00000000001159b9 : adc byte ptr [rdi], cl ; test byte ptr [rax + 0x1000001], dl ; ret 0x894c
0x00000000000ccce5 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x38b
0x00000000000038d9 : adc byte ptr [rdx + 0x71], bh ; xchg eax, ebx ; and cl, ah ; ret
0x00000000000c7cb4 : adc byte ptr [rdx + 0xf], al ; mov dh, 4 ; xor byte ptr [rcx], bh ; ret 0x1772
0x00000000000474d7 : adc byte ptr [rdx + rdx*8 + 0x394ce475], al ; ret
0x000000000000078e : adc byte ptr [rdx], ah ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x000000000014bc0c : adc byte ptr [rdx], al ; pop rbp ; ret
0x0000000000145f80 : adc byte ptr [rdx], ch ; out dx, eax ; jmp qword ptr [rsi]
0x0000000000083e75 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x0000000000089ebb : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000160b30 : adc byte ptr [rsi - 5], ah ; call rsp
0x0000000000039ba2 : adc byte ptr [rsp + 8], al ; add rsp, 0x18 ; ret
0x000000000000042b : adc byte ptr [rsp + rcx], bl ; ret 0x4412
0x00000000000a2bee : adc byte ptr [rsp - 0x10], al ; ret
0x0000000000047233 : adc byte ptr [rsp - 4], al ; ret
0x0000000000047279 : adc byte ptr [rsp - 8], al ; ret
0x000000000013e129 : adc ch, bh ; call rsp
0x00000000000bb9ae : adc cl, byte ptr [r8 - 0x7d] ; ret
0x00000000000a36f5 : adc cl, byte ptr [rax + 0x29] ; ret 0x6948
0x00000000000a3676 : adc cl, byte ptr [rax + 0x29] ; ret 0x8948
0x000000000010a77f : adc cl, byte ptr [rax + 0x31] ; ret 0x8948
0x00000000000af0d5 : adc cl, byte ptr [rax + 1] ; ret
0x000000000008252e : adc cl, byte ptr [rax - 0x77] ; ret 0x348
0x00000000000911d3 : adc cl, byte ptr [rax - 0x77] ; ret 0x8948
0x00000000000bb9af : adc cl, byte ptr [rax - 0x7d] ; ret
0x0000000000083a45 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000001473a0 : adc cl, ch ; out dx, eax ; call qword ptr [rbx]
0x000000000006b7d7 : adc cl, ch ; ret
0x000000000015a4f0 : adc cl, cl ; stc ; jmp rax
0x00000000000892a4 : adc dh, bh ; ret
0x000000000015e900 : adc dh, dh ; cli ; call rdi
0x000000000010731a : adc dh, dh ; ret 0x7401
0x00000000000022ab : adc dh, dl ; ret
0x000000000000266e : adc dl, bh ; enter -0x1ee6, -0x4c ; hlt ; out 0xdf, eax ; syscall
0x00000000000f0b0b : adc dword ptr [rax - 0x7b], ecx ; sal byte ptr [rbp - 0x11], cl ; leave ; ret
0x00000000000836a7 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4201
0x00000000000bb6b1 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4401
0x0000000000042597 : adc dword ptr [rax], eax ; adc byte ptr [rax], al ; mov eax, 0x38 ; syscall
0x00000000000d51f5 : adc dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000000b2ed2 : adc dword ptr [rax], eax ; and byte ptr [rcx], al ; mov eax, 0x38 ; syscall
0x0000000000021ef9 : adc dword ptr [rax], eax ; ret
0x0000000000021f08 : adc dword ptr [rax], r8d ; ret
0x00000000000317ee : adc dword ptr [rbp - 0x77], eax ; ret 0x8341
0x0000000000039d9c : adc dword ptr [rbp], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000ea3ee : adc dword ptr [rbx + 0x5d], ebx ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000ffb91 : adc dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x000000000010084e : adc dword ptr [rcx + 0x4e0c1f0], ecx ; add eax, 8 ; ret
0x00000000000e2623 : adc dword ptr [rcx], eax ; add byte ptr [rax], al ; call rax
0x00000000001593f5 : adc dword ptr [rcx], eax ; add byte ptr [rax], cl ; xchg eax, ebx ; stc ; call qword ptr [rdx]
0x0000000000035364 : adc dword ptr [rdi], ecx ; ret
0x000000000003532d : adc dword ptr [rdi], ecx ; subsd xmm0, xmm1 ; ret
0x00000000000356a2 : adc dword ptr [rdi], ecx ; subss xmm0, xmm1 ; ret
0x00000000001593f4 : adc dword ptr fs:[rcx], eax ; add byte ptr [rax], cl ; xchg eax, ebx ; stc ; call qword ptr [rdx]
0x00000000000949fa : adc eax, 0x10ef8348 ; add rax, rdi ; ret
0x000000000011964f : adc eax, 0x2510d4 ; add rsp, 8 ; ret
0x00000000001113ad : adc eax, 0x25cc4e ; mov qword ptr fs:[rax], rdx ; ret
0x00000000000f110d : adc eax, 0x27c08e ; pop rbp ; ret
0x00000000000defe2 : adc eax, 0x28d189 ; add rsp, 8 ; ret
0x0000000000036d31 : adc eax, 0x332336 ; ret
0x000000000002dc9d : adc eax, 0x33ce1b ; ret
0x00000000000cff1e : adc eax, 0x39000001 ; ret 0x8e0f
0x000000000009568a : adc eax, 0x3b30478b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x00000000000fc2db : adc eax, 0x5b010027 ; ret
0x000000000011d177 : adc eax, 0xc0310025 ; test ecx, ecx ; jne 0x11d191 ; ret
0x00000000000959aa : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x00000000000e452d : adc eax, 0xebe8ef89 ; ret 0
0x00000000000dc685 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000103c85 : adc eax, dword ptr [rbx + rax*4] ; ret
0x00000000000cc429 : adc eax, dword ptr [rcx + rcx*8 + 0x63480f75] ; ret 0x8948
0x00000000000e3ef5 : adc eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x000000000004567d : adc eax, eax ; ret
0x0000000000023112 : adc eax, ebp ; pop rax ; ret
0x00000000000457b6 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x00000000000e940c : adc ebp, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000012d1a5 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x00000000000f4088 : adc ebp, ebx ; ret
0x000000000006f7ab : adc ebp, ebx ; shl byte ptr [rsi - 0x70], 1 ; xor eax, eax ; ret
0x000000000005ad9f : adc ebx, -1 ; inc dword ptr [rcx - 9] ; ret
0x000000000006f785 : adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000025435 : adc ebx, ebp ; ret 0x8b48
0x000000000015edb1 : adc ebx, edi ; call qword ptr [rax]
0x0000000000141879 : adc ebx, edi ; jmp rsp
0x000000000003b030 : adc ecx, dword ptr [rax - 0x73] ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f9aa2 : adc ecx, dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000030a53 : adc ecx, dword ptr [rax - 0x7d] ; ret 0x4901
0x00000000000960a4 : adc ecx, dword ptr [rax - 0x7d] ; ret 0x8b04
0x000000000002ae94 : adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x0000000000049bf6 : adc ecx, dword ptr [rcx + rax - 0x1e] ; call qword ptr [r11 + rax*8]
0x000000000005521e : adc ecx, dword ptr [rcx + rax - 0xe] ; call qword ptr [r11 + rax*8]
0x0000000000098adb : adc ecx, dword ptr [rcx - 0x7d] ; ret 0x4901
0x00000000000c0f25 : adc ecx, dword ptr [rcx - 0x7d] ; ret 0x8b10
0x00000000001317d8 : adc edi, dword ptr [rdi] ; clc ; jmp qword ptr [rcx]
0x000000000013e0d9 : adc edi, ebp ; jmp rsp
0x0000000000098348 : adc esi, dword ptr [rbp + rax - 0x77] ; ret 0xc9eb
0x000000000012e6be : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, 0xc7 ; ret 0xe71f
0x000000000010672c : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000ffb72 : adc esi, esi ; ret 0x7507
0x000000000007a1a9 : adc esi, esi ; ret 0xf02
0x0000000000089204 : adc r11b, r14b ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x0000000000103c84 : adc r8d, dword ptr [rbx + rax*4] ; ret
0x00000000000457b5 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x00000000000892a3 : adc sil, r15b ; ret
0x000000000013ecc7 : add ah, ah ; add esi, ebx ; jmp rsp
0x000000000013e7a7 : add ah, ah ; imul bh ; jmp rsp
0x000000000014265f : add ah, ah ; in eax, dx ; cld ; call rsp
0x000000000013ea87 : add ah, ah ; int1 ; call rsp
0x000000000013f087 : add ah, ah ; jns 0x13f082 ; jmp rsp
0x000000000013e5e7 : add ah, ah ; mov ah, 0xef ; jmp rsp
0x000000000014e7fb : add ah, ah ; mov ch, 0 ; add byte ptr [rax], dl ; nop ; hlt ; jmp qword ptr [rbx]
0x000000000013f82f : add ah, ah ; mov ch, 0xf4 ; call rsp
0x000000000015e8fb : add ah, ah ; mov dh, 1 ; add byte ptr [rax], dl ; idiv dl ; call rdi
0x000000000015eafb : add ah, ah ; mov eax, 0x200001 ; sti ; jmp qword ptr [rax]
0x000000000014134f : add ah, ah ; movsxd rdi, edx ; jmp rsp
0x0000000000142abf : add ah, ah ; pop rdi ; std ; call rsp
0x000000000014124f : add ah, ah ; pop rsp ; cli ; jmp rsp
0x000000000015f5fb : add ah, ah ; ret
0x000000000013ebbf : add ah, ah ; sal edx, 1 ; call rsp
0x0000000000144ffb : add ah, ah ; sbb eax, 0xeae00000 ; out dx, al ; jmp qword ptr [rsi]
0x000000000015c7fb : add ah, ah ; xchg eax, ebp ; add dword ptr [rax], eax ; or byte ptr [rdx], 0xfc ; jmp qword ptr [rcx]
0x00000000001467fb : add ah, ah ; xor eax, 0x42800000 ; out dx, eax ; jmp qword ptr [rcx]
0x00000000001476db : add ah, al ; add byte ptr [rax], r8b ; loopne 0x1476e9 ; out dx, eax ; jmp qword ptr [rdi]
0x00000000001404d7 : add ah, al ; and al, bh ; jmp rsp
0x000000000013ec1f : add ah, al ; in eax, dx ; jmp rsp
0x00000000001407b7 : add ah, al ; ja 0x1407b8 ; call rsp
0x000000000014129f : add ah, al ; pop rsi ; cli ; call rsp
0x000000000013e72f : add ah, al ; ret
0x000000000013e70f : add ah, al ; ret 0xffef
0x000000000013f22f : add ah, al ; sahf ; jmp rsp
0x0000000000154adb : add ah, al ; sbb byte ptr [rcx], al ; add byte ptr [rax + 0x73], ah ; clc ; jmp qword ptr [rsi]
0x000000000014311f : add ah, al ; std ; std ; call rsp
0x0000000000145ddb : add ah, al ; sub eax, dword ptr [rax] ; add al, al ; and ebp, edi ; jmp rsp
0x0000000000142437 : add ah, al ; test al, 0xfc ; call rsp
0x000000000013ee6f : add ah, al ; xor esi, ebx ; jmp rsp
0x0000000000157813 : add ah, bh ; add dword ptr [r8], r8d ; mov byte ptr [rax], al ; stc ; call rcx
0x000000000009461a : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000009463d : add ah, bh ; add eax, dword ptr [rax] ; ret
0x0000000000094718 : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000000945f1 : add ah, bh ; inc dword ptr [rbx] ; pop rbx ; ret
0x000000000015aa13 : add ah, bh ; ja 0x15aa20 ; add byte ptr [rax - 0x1f], bl ; stc ; call rcx
0x000000000014e813 : add ah, bh ; mov ch, 0 ; add byte ptr [rax], ch ; nop ; hlt ; jmp qword ptr [rcx]
0x0000000000146813 : add ah, bh ; xor eax, 0x42980000 ; out dx, eax ; jmp qword ptr [rbx]
0x00000000001460f3 : add ah, bl ; add byte ptr cs:[rax], al ; sub byte ptr [rsi], ch ; out dx, eax ; call qword ptr [rsi]
0x00000000001613f3 : add ah, bl ; loope 0x161400 ; add byte ptr [rax - 0x73], bl ; sti ; call rdx
0x00000000001612f3 : add ah, bl ; loopne 0x161300 ; add byte ptr [rax - 0x78], ch ; sti ; call rcx
0x000000000014f5f3 : add ah, bl ; ret
0x000000000014f4f3 : add ah, bl ; ret 0
0x0000000000144cf3 : add ah, bl ; sbb al, byte ptr [rax] ; add byte ptr [rax - 0x3e], ch ; out dx, al ; jmp qword ptr [rdi]
0x00000000001588d5 : add ah, byte ptr [rcx + 0xa] ; ret
0x0000000000155803 : add ah, ch ; and eax, 0x9bf80001 ; clc ; jmp rdi
0x000000000015a703 : add ah, ch ; je 0x15a710 ; add byte ptr [rax], cl ; sar ecx, cl ; call qword ptr [rax]
0x000000000015ea03 : add ah, ch ; mov bh, 1 ; add byte ptr [rax - 9], cl ; sti ; jmp qword ptr [rsi]
0x0000000000149b03 : add ah, ch ; push -0x7cf80000 ; jmp qword ptr [rcx]
0x000000000015f503 : add ah, ch ; ret 1
0x000000000015a9e3 : add ah, cl ; ja 0x15a9f0 ; add byte ptr [rax - 0x20], bh ; stc ; call qword ptr [rax]
0x0000000000148d5b : add ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax + 0x57], ah ; jmp rcx
0x000000000015f5e3 : add ah, cl ; ret
0x00000000001467e3 : add ah, cl ; xor eax, 0x42680000 ; out dx, eax ; jmp qword ptr [rbx]
0x0000000000141877 : add ah, dh ; adc ebx, edi ; jmp rsp
0x000000000014610b : add ah, dh ; add byte ptr cs:[rax], al ; xor byte ptr [rsi], ch ; out dx, eax ; jmp qword ptr [rdx]
0x0000000000143177 : add ah, dh ; add esi, edi ; call rsp
0x000000000013f59f : add ah, dh ; and esp, esi ; jmp rsp
0x000000000014108f : add ah, dh ; cli ; call rsp
0x000000000013df67 : add ah, dh ; fsubp st(6) ; jmp rsp
0x000000000014bb0b : add ah, dh ; mov byte ptr [rax], al ; add byte ptr [rax - 0xc], dh ; jmp qword ptr [rbx]
0x0000000000140e57 : add ah, dh ; or bh, dl ; jmp rsp
0x00000000001406bf : add ah, dh ; out 0xf8, eax ; jmp rsp
0x00000000001421bf : add ah, dh ; push rsp ; cld ; call rsp
0x000000000013e737 : add ah, dh ; ret
0x000000000014f50b : add ah, dh ; ret 0
0x0000000000142b3f : add ah, dh ; std ; call rsp
0x00000000001423e7 : add ah, dh ; wait ; cld ; call rsp
0x000000000013f10f : add ah, dh ; xchg bl, dh ; jmp rsp
0x0000000000147feb : add ah, dl ; add byte ptr [r8], r8b ; add byte ptr [rsi], dl ; call qword ptr [rcx]
0x000000000013edaf : add ah, dl ; and esi, ebx ; call rsp
0x0000000000160eeb : add ah, dl ; fadd qword ptr [rcx] ; add al, dl ; jg 0x160ef6 ; jmp qword ptr [rax]
0x0000000000143047 : add ah, dl ; hlt ; std ; call rsp
0x000000000015a4eb : add ah, dl ; jb 0x15a4f8 ; add byte ptr [rax], dl ; leave ; stc ; jmp rax
0x000000000013f3bf : add ah, dl ; leave ; call rsp
0x000000000013e42f : add ah, dl ; mov ebp, edi ; jmp rsp
0x000000000015eceb : add ah, dl ; mov edx, 0x7f00001 ; sti ; jmp qword ptr [rax]
0x0000000000142cf7 : add ah, dl ; nop ; std ; jmp rsp
0x000000000015f4eb : add ah, dl ; ret 1
0x00000000001425f7 : add ah, dl ; xlatb ; cld ; call rsp
0x000000000010d975 : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000449b0 : add al, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000000337af : add al, 0 ; add byte ptr [rax], al ; jmp 0x3377c
0x000000000010767b : add al, 0 ; add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rax]
0x0000000000095a33 : add al, 0 ; add byte ptr [rax], al ; ret
0x00000000000d63b3 : add al, 0 ; add byte ptr [rax], al ; syscall
0x00000000000c32fc : add al, 0 ; add byte ptr [rbp - 0x7cb7feb5], cl ; ret
0x000000000010e7e7 : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000694db : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000faaae : add al, 0 ; add byte ptr [rbx - 0x7cb7db84], cl ; call qword ptr [rax]
0x0000000000062083 : add al, 0 ; add byte ptr [rdi], cl ; ret
0x000000000003f29e : add al, 0 ; add byte ptr [rdi], cl ; ret 0xc801
0x0000000000162d21 : add al, 0 ; add byte ptr [rdx + 2], bl ; add byte ptr [rax], al ; ret
0x00000000000ebdf9 : add al, 0 ; add byte ptr [rdx], al ; call rax
0x00000000000936c8 : add al, 0 ; lea rax, [rdi + 4] ; ret
0x0000000000093618 : add al, 0 ; mov rax, rdi ; ret
0x00000000000e4d34 : add al, 0 ; movzx edi, di ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000430d1 : add al, 0x10 ; add bl, dh ; ret
0x0000000000094679 : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000000a2b5a : add al, 0x16 ; add rsp, 0x18 ; ret
0x00000000000e6f0f : add al, 0x16 ; ret
0x0000000000022b15 : add al, 0x17 ; add al, ch ; ret
0x00000000000850ba : add al, 0x17 ; sub eax, ecx ; ret
0x000000000015551c : add al, 0x23 ; add dword ptr [rax], eax ; push rax ; nop ; clc ; jmp qword ptr [rsi]
0x00000000001138ee : add al, 0x24 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x000000000009d6a4 : add al, 0x24 ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4104
0x000000000010d4d5 : add al, 0x24 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000dc83d : add al, 0x24 ; add rsp, 0x28 ; ret
0x00000000000e63fc : add al, 0x24 ; add rsp, 0x38 ; ret
0x00000000000e646d : add al, 0x24 ; add rsp, 0x40 ; ret
0x0000000000107ae1 : add al, 0x24 ; call qword ptr [r11]
0x0000000000027b3a : add al, 0x24 ; call qword ptr [rbx]
0x000000000002300a : add al, 0x24 ; call rbx
0x0000000000082392 : add al, 0x24 ; je 0x82468 ; call rax
0x00000000000daf9b : add al, 0x24 ; jmp 0xdaf3c
0x00000000000d6a90 : add al, 0x24 ; mov eax, 0 ; syscall
0x00000000000e41e0 : add al, 0x24 ; mov eax, 0x130 ; syscall
0x00000000000e0110 : add al, 0x24 ; mov eax, 0x1a ; syscall
0x00000000000b2d70 : add al, 0x24 ; mov eax, 0x22 ; syscall
0x00000000000b2de0 : add al, 0x24 ; mov eax, 0x23 ; syscall
0x00000000000e43a0 : add al, 0x24 ; mov eax, 0x2a ; syscall
0x00000000000e4300 : add al, 0x24 ; mov eax, 0x2b ; syscall
0x00000000000e4730 : add al, 0x24 ; mov eax, 0x2e ; syscall
0x00000000000e4600 : add al, 0x24 ; mov eax, 0x2f ; syscall
0x00000000000dcf20 : add al, 0x24 ; mov eax, 0x4a ; syscall
0x00000000000dcfc0 : add al, 0x24 ; mov eax, 0x4b ; syscall
0x00000000000d72b0 : add al, 0x24 ; mov eax, 0x55 ; syscall
0x00000000000d6b00 : add al, 0x24 ; mov eax, 1 ; syscall
0x00000000000d6840 : add al, 0x24 ; mov eax, 2 ; syscall
0x00000000000d7150 : add al, 0x24 ; mov eax, 3 ; syscall
0x00000000000daeb0 : add al, 0x24 ; mov eax, 7 ; syscall
0x00000000000e35f0 : add al, 0x24 ; mov eax, 8 ; syscall
0x000000000009612f : add al, 0x24 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000220ee : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000e3587 : add al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x0000000000021de5 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000ffb8d : add al, 0x2b ; mov byte ptr [rbx + 0x11], dl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000100707 : add al, 0x2b ; pop rbx ; pop rbp ; ret
0x000000000007b3e5 : add al, 0x2f ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000007b33e : add al, 0x2f ; add byte ptr [rcx], al ; pop rbx ; ret
0x000000000008771e : add al, 0x31 ; ret
0x00000000000fee24 : add al, 0x31 ; ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; ret
0x00000000000bdc46 : add al, 0x31 ; sar byte ptr [rbx], 0x56 ; add al, 0x74 ; add dh, bl ; ret
0x000000000013eac0 : add al, 0x33 ; call rsp
0x0000000000141018 : add al, 0x37 ; cli ; jmp rsp
0x000000000008761a : add al, 0x37 ; ret
0x000000000007169f : add al, 0x3a ; ret
0x000000000013eee8 : add al, 0x3c ; call rsp
0x0000000000142998 : add al, 0x44 ; std ; jmp rsp
0x000000000010199b : add al, 0x48 ; add edx, 1 ; syscall
0x000000000010983b : add al, 0x48 ; add esp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x00000000000d546c : add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000936d9 : add al, 0x48 ; lea eax, [rdi + 5] ; ret
0x00000000000936e9 : add al, 0x48 ; lea eax, [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x0000000000093689 : add al, 0x48 ; lea eax, [rdi + 7] ; ret
0x0000000000100a42 : add al, 0x48 ; lea eax, [rdi + rsi + 8] ; ret
0x0000000000071378 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000070f1c : add al, 0x48 ; mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000093639 : add al, 0x48 ; mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x00000000000935d9 : add al, 0x48 ; mov eax, edi ; ret
0x00000000000858b8 : add al, 0x48 ; xor eax, eax ; ret
0x0000000000021e76 : add al, 0x49 ; lea edi, [rsi + rdx] ; call rax
0x00000000000e4c2b : add al, 0x4c ; movsxd rdx, ecx ; syscall
0x00000000000eff28 : add al, 0x50 ; shr ax, 0xe ; and eax, 1 ; ret
0x0000000000142a28 : add al, 0x55 ; std ; jmp rsp
0x0000000000141b78 : add al, 0x56 ; sti ; call rsp
0x0000000000141bb8 : add al, 0x59 ; sti ; call rsp
0x00000000000c031a : add al, 0x5d ; pop r12 ; ret
0x000000000002e8b1 : add al, 0x72 ; or al, 0xf3 ; ret
0x000000000009f601 : add al, 0x73 ; cmp al, 0x83 ; ret 0x8b05
0x00000000000c313b : add al, 0x74 ; add al, 0xa8 ; add dword ptr [rcx + rax*4 - 0xa], esi ; ret 0x7408
0x00000000000bdc4b : add al, 0x74 ; add dh, bl ; ret
0x00000000000bdd39 : add al, 0x74 ; cmp al, 0x11 ; je 0xbdd51 ; xor eax, eax ; ret
0x00000000000bcff7 : add al, 0x75 ; jle 0xbcff5 ; ret 0x7408
0x00000000000c310d : add al, 0x75 ; mov bl, 0x8b ; pop rax ; or bh, dh ; ret
0x00000000000bdea3 : add al, 0x75 ; or dh, bl ; ret
0x000000000002ae92 : add al, 0x77 ; adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x000000000002eca4 : add al, 0x78 ; and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002ecc4 : add al, 0x78 ; and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002ec04 : add al, 0x78 ; and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002ec84 : add al, 0x78 ; and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002eba4 : add al, 0x78 ; and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002ec44 : add al, 0x78 ; and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002ebe4 : add al, 0x78 ; and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002ec24 : add al, 0x78 ; and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000002ed44 : add al, 0x78 ; and eax, 1 ; ret
0x000000000002ebc4 : add al, 0x78 ; and eax, 2 ; movzx eax, ax ; ret
0x000000000002ec64 : add al, 0x78 ; and eax, 4 ; movzx eax, ax ; ret
0x000000000002eb84 : add al, 0x78 ; and eax, 8 ; movzx eax, ax ; ret
0x00000000000bdd26 : add al, 0x7c ; out dx, eax ; nop dword ptr [rax - 0x45] ; ret
0x00000000000c5b1a : add al, 0x7c ; ret
0x000000000006b682 : add al, 0x80 ; add rax, r8 ; jmp rax
0x000000000006af2c : add al, 0x81 ; add rax, rcx ; jmp rax
0x0000000000058324 : add al, 0x81 ; add rcx, rax ; jmp rcx
0x000000000009483d : add al, 0x81 ; je 0x9481d ; ret
0x0000000000094839 : add al, 0x81 ; sub eax, dword ptr [rcx + r8*4] ; je 0x94821 ; ret
0x00000000000934ae : add al, 0x82 ; add r10, rax ; jmp r10
0x000000000002cede : add al, 0x82 ; add r8, rdx ; jmp r8
0x0000000000022478 : add al, 0x82 ; add rdx, rax ; jmp rdx
0x00000000000947ea : add al, 0x82 ; sub eax, dword ptr [rdx + rcx*4] ; je 0x947d8 ; ret
0x000000000008bd07 : add al, 0x82 ; sub eax, ecx ; ret
0x000000000003402b : add al, 0x83 ; add rax, rbx ; jmp rax
0x0000000000076758 : add al, 0x83 ; loopne 0x76761 ; ret
0x00000000000742d2 : add al, 0x83 ; out 1, al ; mov eax, esi ; ret
0x0000000000103c86 : add al, 0x83 ; ret
0x0000000000094882 : add al, 0x85 ; leave ; mov dword ptr [rdx], ecx ; jne 0x94880 ; ret
0x00000000000964a6 : add al, 0x85 ; ror byte ptr [rcx - 0xc0c8af0], cl ; ret
0x00000000000451b6 : add al, 0x86 ; add r8, rsi ; cmp ecx, 0x2f ; jmp r8
0x00000000000abe16 : add al, 0x86 ; add rax, rsi ; jmp rax
0x000000000006afe4 : add al, 0x86 ; add rsi, rax ; jmp rsi
0x00000000000a9dd5 : add al, 0x87 ; add rax, rdi ; jmp rax
0x000000000010e75c : add al, 0x87 ; add rdi, rax ; jmp rdi
0x00000000000960be : add al, 0x87 ; test r8d, r8d ; jne 0x96098 ; ret
0x0000000000093533 : add al, 0x89 ; cld ; mov rax, rdi ; ret
0x00000000000947ed : add al, 0x8a ; je 0x947d5 ; ret
0x00000000000977cf : add al, 0x8b ; adc byte ptr [rbp - 0xc0d8a2e], al ; ret
0x00000000000e4af1 : add al, 0x8b ; and al, 0xc ; add rsp, 0x18 ; ret
0x00000000000960a8 : add al, 0x8b ; or al, byte ptr [rbp - 0xc0e8a37] ; ret
0x00000000000516f8 : add al, 0x8b ; or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x000000000006b829 : add al, 0x8e ; add rsi, rax ; jmp rsi
0x000000000004bc2a : add al, 0x90 ; add rax, r12 ; jmp rax
0x0000000000052b92 : add al, 0x90 ; add rax, r13 ; jmp rax
0x000000000013fba0 : add al, 0x91 ; cmc ; jmp rsp
0x000000000014ca1c : add al, 0x98 ; add byte ptr [rax], al ; loopne 0x14ca3b ; std ; jmp qword ptr [rcx]
0x00000000000e6cbd : add al, 0xa ; ret
0x000000000002f686 : add al, 0xa2 ; add rdx, rax ; jmp rdx
0x00000000000c313d : add al, 0xa8 ; add dword ptr [rcx + rax*4 - 0xa], esi ; ret 0x7408
0x000000000007e418 : add al, 0xb2 ; add byte ptr cs:[rax + 0x39], cl ; ror dword ptr [rdi], cl ; xchg eax, ebp ; ret 0x8348
0x000000000002e88a : add al, 0xb2 ; mov eax, dword ptr [rdi + rax] ; ret
0x0000000000114af7 : add al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000002ef5c : add al, 0xb8 ; ret
0x00000000000945ad : add al, 0xbe ; add rsi, rax ; jmp rsi
0x00000000000962fb : add al, 0xc3 ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000015f91c : add al, 0xc7 ; add dword ptr [rax], eax ; nop ; sti ; call qword ptr [rsi]
0x000000000015fd1c : add al, 0xcb ; add dword ptr [rax], eax ; sar byte ptr [rbx], 0xfb ; jmp qword ptr [rdx]
0x00000000000ae389 : add al, 0xd0 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000368eb : add al, 0xd7 ; xor eax, eax ; ret
0x000000000002c1c3 : add al, 0xd8 ; test rax, rax ; je 0x2c1d7 ; call rax
0x0000000000045711 : add al, 0xde ; lea r9, [rdx] ; jmp 0x45769
0x0000000000047001 : add al, 0xde ; lea r9, [rdx] ; jmp 0x47059
0x0000000000028752 : add al, 0xe9 ; ret 0xfffa
0x00000000000bbc86 : add al, 0xeb ; ret 0xc883
0x000000000002eba9 : add al, 0xf ; mov bh, 0xc0 ; ret
0x00000000000b5ad2 : add al, 0xf ; mov dh, 0x57 ; add ebx, ebp ; mov cl, 0xf3 ; ret
0x0000000000095595 : add al, 0xf ; test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x00000000000c718a : add al, 0xf ; xchg eax, ebp ; ret 0x2041
0x00000000000a1a5a : add al, 0xf ; xchg eax, ebp ; ret 0xbbe9
0x00000000000a18aa : add al, 0xf ; xchg eax, ebp ; ret 0xf883
0x00000000000f9731 : add al, 0xf ; xchg eax, esi ; ret
0x00000000000718bb : add al, 0xf3 ; ret
0x0000000000036961 : add al, 0xf6 ; ret 0x7402
0x0000000000089310 : add al, 0xf6 ; ret 0x7408
0x00000000000b9799 : add al, 0xf7 ; jmp 0xb9763
0x00000000001431b9 : add al, 0xfe ; jmp rsp
0x000000000015368d : add al, 1 ; add byte ptr [rax + 0xd], dh ; clc ; call rsi
0x00000000000955c8 : add al, 1 ; add byte ptr [rax], al ; ret
0x00000000000d7c20 : add al, 1 ; add byte ptr [rax], al ; syscall
0x000000000013fa95 : add al, 1 ; add byte ptr [rdx + rbp*2 - 0xb], dh ; jmp rsp
0x0000000000069fd1 : add al, 1 ; ret
0x0000000000142728 : add al, 1 ; std ; call rsp
0x000000000006a042 : add al, 1 ; xor eax, eax ; ret
0x000000000014261d : add al, 2 ; add byte ptr [rcx - 4], dl ; call rsp
0x000000000000048f : add al, 4 ; ret 0x6080
0x00000000000e6e29 : add al, 6 ; shr eax, cl ; and eax, 1 ; ret
0x0000000000083ab1 : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000002e88d : add al, 7 ; ret
0x00000000000937d6 : add al, 7 ; test r8b, r8b ; jne 0x937c8 ; ret
0x0000000000075f87 : add al, 8 ; add byte ptr [rax], al ; ret
0x000000000007da1f : add al, 8 ; add dword ptr [rax + 0x39], ecx ; ret
0x00000000000a2da2 : add al, 8 ; ret
0x000000000014ca1f : add al, ah ; adc bh, ch ; jmp qword ptr [rcx]
0x0000000000153a4f : add al, ah ; clc ; jmp qword ptr [rbx]
0x0000000000143f6f : add al, ah ; jno 0x143f65 ; jmp rsp
0x0000000000158d9f : add al, ah ; jp 0x158da0 ; jmp qword ptr [rbx]
0x000000000000fa67 : add al, ah ; ret
0x000000000000839f : add al, ah ; ret 0xc
0x000000000015a68f : add al, ah ; sar cl, 1 ; call rcx
0x000000000015d59f : add al, ah ; scasb al, byte ptr [rdi] ; cli ; call qword ptr [rdi]
0x0000000000145ddf : add al, al ; and ebp, edi ; jmp rsp
0x000000000015fd1f : add al, al ; cmp edi, ebx ; jmp qword ptr [rdx]
0x0000000000151abf : add al, al ; mov bl, 0xf6 ; jmp rcx
0x00000000001544bf : add al, al ; mov edi, esp ; jmp qword ptr [rsi]
0x000000000014a36f : add al, al ; stosb byte ptr [rdi], al ; call qword ptr [rsi]
0x000000000014f8a7 : add al, bh ; cmc ; call rsi
0x00000000001479d7 : add al, bh ; jge 0x1479cf ; call qword ptr [rsi]
0x0000000000146eb7 : add al, bh ; ret
0x000000000015a3a7 : add al, bh ; ret 0xfff9
0x0000000000155807 : add al, bh ; wait ; clc ; jmp rdi
0x00000000001444b7 : add al, bh ; xchg eax, edi ; out dx, al ; jmp qword ptr [rcx]
0x0000000000151137 : add al, bh ; xor dh, dh ; call rax
0x0000000000149e37 : add al, bl ; cdq ; jmp qword ptr [rsi]
0x00000000001523c7 : add al, bl ; fdecstp ; call qword ptr [rax]
0x0000000000146aa7 : add al, bl ; insd dword ptr [rdi], dx ; out dx, eax ; jmp rax
0x000000000014e4d7 : add al, bl ; jg 0x14e4d3 ; call qword ptr [rsi]
0x0000000000155da7 : add al, bl ; mov al, 0xf8 ; call rdi
0x000000000014c837 : add al, bl ; pop rax ; jmp qword ptr [rbx]
0x00000000000e5cf8 : add al, bl ; ret
0x0000000000083a41 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x0000000000142aee : add al, byte ptr [rax] ; adc al, 0x62 ; std ; call rsp
0x0000000000142b6e : add al, byte ptr [rax] ; adc al, 0x6a ; std ; jmp rsp
0x0000000000142bde : add al, byte ptr [rax] ; adc al, 0x6e ; std ; jmp rsp
0x0000000000142996 : add al, byte ptr [rax] ; add al, 0x44 ; std ; jmp rsp
0x0000000000142a26 : add al, byte ptr [rax] ; add al, 0x55 ; std ; jmp rsp
0x0000000000142726 : add al, byte ptr [rax] ; add al, 1 ; std ; call rsp
0x000000000002ecfb : add al, byte ptr [rax] ; add bl, dh ; ret
0x00000000000b316e : add al, byte ptr [rax] ; add byte ptr [rax + 0x3a], bh ; syscall
0x00000000000e358a : add al, byte ptr [rax] ; add byte ptr [rax + 0x5f], bl ; call rax
0x0000000000088903 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x000000000014349d : add al, byte ptr [rax] ; add byte ptr [rax - 0x11], dl ; in eax, dx ; jmp rdx
0x00000000000b9794 : add al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; add al, 0xf7 ; jmp 0xb9768
0x00000000000a5aaf : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000010a8a5 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0xb43
0x000000000007fc6e : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000024e17 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000de102 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x000000000003c159 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xed75
0x0000000000005e82 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000010cb07 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x10 ; call rcx
0x000000000010f517 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; call rcx
0x000000000010eb57 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x68 ; call rcx
0x00000000001089e5 : add al, byte ptr [rax] ; add byte ptr [rax], al ; cmp edx, 3 ; jbe 0x1089f9 ; ret
0x000000000011b3a2 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000011145d : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00000000001075c0 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [rax]
0x00000000001138f0 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x00000000000e5973 : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000095a13 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000d6822 : add al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000aeb54 : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000c1aff : add al, byte ptr [rax] ; add byte ptr [rbx + 0x394104c0], al ; ret 0x6a7e
0x0000000000070824 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000371f1 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000007679 : add al, byte ptr [rax] ; add byte ptr [rdx], dl ; add byte ptr [rbx], cl ; add al, dl ; ret
0x00000000000cfc02 : add al, byte ptr [rax] ; add dh, dh ; ret 0xf01
0x0000000000142f8e : add al, byte ptr [rax] ; and al, 0xe6 ; std ; jmp rsp
0x000000000011322d : add al, byte ptr [rax] ; call 0x2f4c4
0x0000000000142e76 : add al, byte ptr [rax] ; hlt ; ret
0x0000000000142b3e : add al, byte ptr [rax] ; hlt ; std ; call rsp
0x0000000000142abe : add al, byte ptr [rax] ; in al, 0x5f ; std ; call rsp
0x000000000014265e : add al, byte ptr [rax] ; in al, 0xed ; cld ; call rsp
0x00000000000936a9 : add al, byte ptr [rax] ; lea rax, [rdi + 2] ; ret
0x0000000000142c66 : add al, byte ptr [rax] ; mov ah, 0x71 ; std ; call rsp
0x0000000000142d0e : add al, byte ptr [rax] ; mov ah, 0x9d ; std ; call rsp
0x00000000001425de : add al, byte ptr [rax] ; mov ah, 0xd3 ; cld ; jmp rsp
0x0000000000142eb6 : add al, byte ptr [rax] ; mov ah, 0xd4 ; std ; jmp rsp
0x0000000000142fae : add al, byte ptr [rax] ; mov ah, 0xe7 ; std ; jmp rsp
0x00000000000935f9 : add al, byte ptr [rax] ; mov rax, rdi ; ret
0x00000000001431b6 : add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; add al, 0xfe ; jmp rsp
0x0000000000142d2e : add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; movsb byte ptr [rdi], byte ptr [rsi] ; std ; call rsp
0x000000000010e758 : add al, byte ptr [rax] ; movsxd rax, dword ptr [rdi + rax*4] ; add rdi, rax ; jmp rdi
0x00000000000aeb9a : add al, byte ptr [rax] ; nop dword ptr [rax - 0x34] ; pop rbx ; ret
0x00000000000f9abb : add al, byte ptr [rax] ; pop r12 ; ret
0x0000000000076503 : add al, byte ptr [rax] ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x00000000000e2ef2 : add al, byte ptr [rax] ; pop rbx ; ret
0x000000000014261e : add al, byte ptr [rax] ; push rsp ; loope 0x142624 ; call rsp
0x0000000000142e6e : add al, byte ptr [rax] ; ret 0xfffd
0x0000000000142fde : add al, byte ptr [rax] ; xchg eax, esp ; out dx, al ; std ; jmp rsp
0x000000000014289e : add al, byte ptr [rax] ; xor al, 0xfd ; jmp rsp
0x0000000000149178 : add al, byte ptr [rbp + 0xa] ; ret
0x000000000015f4b4 : add al, byte ptr [rbp + 0xe] ; or byte ptr [rax + rax], dl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 1
0x00000000000283ce : add al, byte ptr [rbx + 0x394907e0] ; ret
0x00000000000f07d2 : add al, byte ptr [rcx + 0x39] ; ret
0x00000000000d67ea : add al, byte ptr [rcx] ; add byte ptr [rax], al ; syscall
0x000000000007da62 : add al, byte ptr [rdi + rcx + 0x46] ; ret 0x22e9
0x0000000000142d0d : add al, byte ptr cs:[rax] ; mov ah, 0x9d ; std ; call rsp
0x0000000000142fdd : add al, byte ptr ds:[rax] ; xchg eax, esp ; out dx, al ; std ; jmp rsp
0x00000000000efabf : add al, byte ptr es:[rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000142e75 : add al, byte ptr ss:[rax] ; hlt ; ret
0x0000000000142e6d : add al, byte ptr ss:[rax] ; ret 0xfffd
0x00000000001466b7 : add al, ch ; cmp edi, ebp ; jmp qword ptr [rbx]
0x000000000006bf3e : add al, ch ; in al, dx ; ret 6
0x000000000007447e : add al, ch ; in al, dx ; ret 7
0x0000000000119d89 : add al, ch ; int1 ; ret
0x0000000000060cab : add al, ch ; jmp rsi
0x000000000009280b : add al, ch ; lahf ; ret 0xfff9
0x00000000000284ef : add al, ch ; mov ebx, 0x89000065 ; ret 0xe283
0x0000000000119e8c : add al, ch ; out dx, al ; ret 0xfff1
0x0000000000022b17 : add al, ch ; ret
0x00000000000d04a8 : add al, ch ; ret 0x13e
0x0000000000079fa8 : add al, ch ; ret 0x767
0x00000000000790a8 : add al, ch ; ret 0x776
0x00000000000394d8 : add al, ch ; ret 0xb72
0x0000000000080c78 : add al, ch ; ret 0xfb93
0x00000000000fba58 : add al, ch ; ret 0xfdb6
0x00000000000fd4d8 : add al, ch ; ret 0xff32
0x00000000000f38d8 : add al, ch ; ret 0xffce
0x000000000009285e : add al, ch ; ret 0xfff9
0x000000000015dd27 : add al, ch ; ret 0xfffa
0x000000000015f697 : add al, ch ; sub ebx, edi ; jmp qword ptr [rbx]
0x0000000000155427 : add al, ch ; xchg eax, edi ; jmp qword ptr [rsi]
0x000000000015fa27 : add al, ch ; xor ebx, edi ; call rdx
0x000000000014a637 : add al, cl ; mov dl, 0xf2 ; call qword ptr [rsi]
0x0000000000146847 : add al, cl ; out dx, eax ; jmp qword ptr [rbx]
0x0000000000160117 : add al, cl ; sti ; jmp qword ptr [rbx]
0x000000000015bd6f : add al, dh ; and bh, ah ; jmp qword ptr [rdi]
0x000000000014c57f : add al, dh ; jmp qword ptr [rdx]
0x000000000015d1bf : add al, dh ; lahf ; cli ; call qword ptr [rdi]
0x000000000014669f : add al, dl ; cmp edi, ebp ; jmp qword ptr [rcx]
0x0000000000160eef : add al, dl ; jg 0x160ef2 ; jmp qword ptr [rax]
0x000000000014adcf : add al, dl ; leave ; jmp qword ptr [rcx]
0x000000000014d0cf : add al, dl ; lodsb al, byte ptr [rsi] ; jmp rax
0x000000000014e8bf : add al, dl ; nop ; hlt ; jmp qword ptr [rbx]
0x000000000014642f : add al, dl ; out dx, eax ; call qword ptr [rsi]
0x000000000000767f : add al, dl ; ret
0x0000000000159d3f : add al, dl ; test al, 0xf9 ; jmp rdx
0x00000000000dd617 : add bh, al ; and al, 0xb8 ; sbb byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000000b481c : add bh, bh ; ret
0x00000000000d6106 : add bh, byte ptr [rax + 0x16] ; jbe 0xd6119 ; ret
0x00000000000cfa80 : add bh, byte ptr [rax + 0xf] ; je 0xcfa99 ; ret
0x00000000000471c8 : add bh, byte ptr [rax + 1] ; ret
0x00000000000d6eeb : add bh, byte ptr [rax - 1] ; ret
0x00000000000dbdf3 : add bh, dh ; fisub dword ptr [rcx + rcx*4 + 0x10] ; or eax, 0xffffffff ; ret
0x00000000000bcfd1 : add bh, dh ; ret
0x0000000000035697 : add bh, dh ; shl byte ptr [rcx], cl ; ret 0xf66
0x00000000000b59ec : add bl, al ; mov eax, 0xffffffff ; ret
0x0000000000085ba1 : add bl, al ; mov r10, r8 ; jmp 0x85b9d
0x00000000000b461c : add bl, al ; nop ; mov eax, 0xfffa ; ret
0x000000000010c07d : add bl, al ; nop ; nop dword ptr [rax - 0x45] ; xor eax, eax ; ret
0x00000000000bdc81 : add bl, al ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000009779b : add bl, al ; nop dword ptr [rax] ; ret
0x000000000011c1a2 : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000036c2e : add bl, al ; xor eax, eax ; ret
0x0000000000132557 : add bl, bh ; inc ebx ; add dh, bh ; jmp rdi
0x000000000015eb01 : add bl, bh ; jmp qword ptr [rax]
0x0000000000035a58 : add bl, bl ; insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x00000000000b841a : add bl, byte ptr [r11 + 0x5d] ; ret
0x0000000000100667 : add bl, byte ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000b841b : add bl, byte ptr [rbx + 0x5d] ; ret
0x00000000000b9415 : add bl, byte ptr [rcx - 0x7c0608bf] ; ret 0x8d01
0x00000000000b3f2c : add bl, ch ; add edx, dword ptr [rax + 0x6348d389] ; ret
0x0000000000021731 : add bl, ch ; or byte ptr [rax - 1], cl ; ret 0x3941
0x00000000000be03b : add bl, ch ; or eax, 0x83499066 ; ret 0x4104
0x0000000000049d22 : add bl, ch ; ret
0x00000000000337b2 : add bl, ch ; ret 0x2e66
0x0000000000041bd5 : add bl, ch ; ret 0x5d9
0x000000000003f923 : add bl, ch ; ret 0x8b44
0x000000000007d857 : add bl, ch ; ret 0x8d48
0x000000000010921b : add bl, ch ; ret 0x9066
0x000000000002dd1f : add bl, dh ; ret
0x000000000006aeae : add bl, sil ; ret
0x0000000000082686 : add byte ptr [r11 + 0x5d], r11b ; pop r12 ; ret
0x00000000000af806 : add byte ptr [r13 - 0x77], 0x64 ; xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000b47ce : add byte ptr [r14 + rbp - 0x48], sil ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000e14c2 : add byte ptr [r8 - 0x77], r9b ; ret
0x000000000005e270 : add byte ptr [r8 - 0x7d], r9b ; ret
0x000000000010273b : add byte ptr [r8 - 0x7d], r9b ; ret 0x3108
0x00000000000290fd : add byte ptr [r8 - 0x7d], r9b ; ret 0x4901
0x000000000014739d : add byte ptr [r8], al ; adc cl, ch ; out dx, eax ; call qword ptr [rbx]
0x0000000000056e95 : add byte ptr [r8], al ; add cl, ch ; in eax, dx ; ret
0x0000000000074aa4 : add byte ptr [r8], al ; nop dword ptr [rax - 0x34] ; mov edx, eax ; jmp 0x74a58
0x0000000000114016 : add byte ptr [r8], r8b ; add byte ptr [rax], al ; add bl, ch ; ret 0x9066
0x00000000000d1441 : add byte ptr [r8], r8b ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000147fed : add byte ptr [r8], r8b ; add byte ptr [rsi], dl ; call qword ptr [rcx]
0x00000000001479d5 : add byte ptr [r8], r8b ; clc ; jge 0x1479d1 ; call qword ptr [rsi]
0x00000000000e1b0d : add byte ptr [r9], r8b ; mov rbx, rax ; jmp 0xe1ade
0x00000000000daf25 : add byte ptr [rax + 0x10f], bh ; syscall
0x00000000000e384e : add byte ptr [rax + 0x121], bh ; syscall
0x00000000000760a7 : add byte ptr [rax + 0x178980ce], al ; ret
0x000000000015f0bf : add byte ptr [rax + 0x1c], dl ; sti ; jmp qword ptr [rax]
0x000000000003562f : add byte ptr [rax + 0x1fe8c17f], al ; ret
0x00000000000b46ef : add byte ptr [rax + 0x20], bh ; ret
0x000000000015f25f : add byte ptr [rax + 0x21], al ; sti ; call qword ptr [rdi]
0x000000000014d68f : add byte ptr [rax + 0x24], al ; hlt ; jmp qword ptr [rdi]
0x000000000014c067 : add byte ptr [rax + 0x26], ch ; call qword ptr [rsi]
0x00000000000777f7 : add byte ptr [rax + 0x29], cl ; ret
0x00000000000c7845 : add byte ptr [rax + 0x29], cl ; ret 0x148
0x00000000000a72bc : add byte ptr [rax + 0x29], cl ; ret 0x2948
0x000000000007f4d4 : add byte ptr [rax + 0x29], cl ; ret 0x8348
0x000000000004f5ab : add byte ptr [rax + 0x29], cl ; ret 0x8349
0x000000000007b55d : add byte ptr [rax + 0x29], cl ; ret 0x8d49
0x000000000000e87f : add byte ptr [rax + 0x2b], dh ; or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000010a514 : add byte ptr [rax + 0x31], cl ; ret 0x8949
0x000000000015fa77 : add byte ptr [rax + 0x34], bh ; sti ; jmp rsp
0x000000000014db2f : add byte ptr [rax + 0x35], dh ; hlt ; call rax
0x00000000001452b3 : add byte ptr [rax + 0x3680000], bl ; out dx, eax ; call qword ptr [rsi]
0x000000000014f57f : add byte ptr [rax + 0x36], dl ; cmc ; jmp qword ptr [rbx]
0x00000000001452cb : add byte ptr [rax + 0x3700000], dh ; out dx, eax ; call qword ptr [rsi]
0x00000000001464a7 : add byte ptr [rax + 0x37], ch ; out dx, eax ; jmp qword ptr [rdi]
0x000000000004259a : add byte ptr [rax + 0x38], bh ; syscall
0x00000000001485bf : add byte ptr [rax + 0x38], dh ; jmp qword ptr [rsi]
0x000000000002699b : add byte ptr [rax + 0x39], cl ; ret
0x000000000007f445 : add byte ptr [rax + 0x39], cl ; ret 0x1374
0x000000000002b448 : add byte ptr [rax + 0x39], cl ; ret 0x7b73
0x000000000007c2d6 : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000007ba16 : add byte ptr [rax + 0x39], cl ; ret 0xb76
0x00000000000f0a00 : add byte ptr [rax + 0x39], cl ; ret 0xda75
0x000000000007daba : add byte ptr [rax + 0x39], cl ; ror dword ptr [rdi], cl ; xchg eax, ebp ; ret 0x8348
0x000000000008749e : add byte ptr [rax + 0x39], cl ; sal dword ptr [rbp - 0xc], 1 ; ret
0x00000000000b3170 : add byte ptr [rax + 0x3a], bh ; syscall
0x000000000004292b : add byte ptr [rax + 0x3e], bh ; movsxd rdi, ebx ; syscall
0x00000000000b473f : add byte ptr [rax + 0x40], bh ; ret
0x0000000000160057 : add byte ptr [rax + 0x40], ch ; sti ; jmp qword ptr [rdx]
0x0000000000160167 : add byte ptr [rax + 0x42], bh ; sti ; call qword ptr [rsi]
0x00000000001467e7 : add byte ptr [rax + 0x42], ch ; out dx, eax ; jmp qword ptr [rbx]
0x00000000001467cf : add byte ptr [rax + 0x42], dl ; out dx, eax ; jmp qword ptr [rcx]
0x0000000000148857 : add byte ptr [rax + 0x43], ch ; jmp qword ptr [rcx]
0x000000000013dbcd : add byte ptr [rax + 0x43], dl ; pop rcx ; clc ; ret 0x6e1f
0x00000000001605bf : add byte ptr [rax + 0x46], dl ; sti ; call rdx
0x0000000000148d5f : add byte ptr [rax + 0x57], ah ; jmp rcx
0x000000000014de87 : add byte ptr [rax + 0x59], ch ; hlt ; jmp qword ptr [rax]
0x000000000014de9f : add byte ptr [rax + 0x59], dh ; hlt ; jmp qword ptr [rdx]
0x000000000000b417 : add byte ptr [rax + 0x5a], dh ; or dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000001f520 : add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x00000000000e358c : add byte ptr [rax + 0x5f], bl ; call rax
0x00000000000a7989 : add byte ptr [rax + 0x63], cl ; adc al, 0x90 ; add rax, rdx ; jmp rax
0x00000000000b4cfa : add byte ptr [rax + 0x63], cl ; adc al, 0x98 ; add rax, rdx ; jmp rax
0x0000000000033df4 : add byte ptr [rax + 0x63], cl ; adc al, 0xb7 ; add rdx, rdi ; jmp rdx
0x0000000000080742 : add byte ptr [rax + 0x63], cl ; adc al, 0xb8 ; add rax, rdx ; jmp rax
0x000000000006143a : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rdx, rax ; jmp rdx
0x0000000000034028 : add byte ptr [rax + 0x63], cl ; add al, 0x83 ; add rax, rbx ; jmp rax
0x000000000010e759 : add byte ptr [rax + 0x63], cl ; add al, 0x87 ; add rdi, rax ; jmp rdi
0x000000000006b826 : add byte ptr [rax + 0x63], cl ; add al, 0x8e ; add rsi, rax ; jmp rsi
0x000000000004bc27 : add byte ptr [rax + 0x63], cl ; add al, 0x90 ; add rax, r12 ; jmp rax
0x0000000000052b8f : add byte ptr [rax + 0x63], cl ; add al, 0x90 ; add rax, r13 ; jmp rax
0x00000000000945aa : add byte ptr [rax + 0x63], cl ; add al, 0xbe ; add rsi, rax ; jmp rsi
0x000000000011d252 : add byte ptr [rax + 0x63], cl ; clc ; mov eax, 0x3e ; syscall
0x000000000006b74c : add byte ptr [rax + 0x63], cl ; or al, 0x88 ; add rax, rcx ; jmp rax
0x0000000000033d8d : add byte ptr [rax + 0x63], cl ; ret
0x000000000006aa1a : add byte ptr [rax + 0x63], cl ; ret 0x3948
0x000000000010bbff : add byte ptr [rax + 0x63], cl ; ret 0x448b
0x00000000000c2ef1 : add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x00000000000c3008 : add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x00000000000bac92 : add byte ptr [rax + 0x63], cl ; ret 0xb60f
0x000000000007cc2e : add byte ptr [rax + 0x63], cl ; stc ; mov eax, 3 ; syscall
0x00000000000e000f : add byte ptr [rax + 0x63], cl ; std ; mov eax, 3 ; syscall
0x0000000000042930 : add byte ptr [rax + 0x63], cl ; sti ; syscall
0x0000000000154857 : add byte ptr [rax + 0x67], bh ; clc ; jmp qword ptr [rdx]
0x0000000000154adf : add byte ptr [rax + 0x73], ah ; clc ; jmp qword ptr [rsi]
0x0000000000083a3f : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x000000000004458f : add byte ptr [rax + 0x752fff78], al ; cmp cl, byte ptr [rax - 0x77] ; ret 0x8d48
0x0000000000158d47 : add byte ptr [rax + 0x7a], bl ; stc ; jmp qword ptr [rax]
0x000000000015c49f : add byte ptr [rax + 0x7b], ah ; cli ; call qword ptr [rax]
0x0000000000149897 : add byte ptr [rax + 0x7c], bl ; call rcx
0x00000000000b462f : add byte ptr [rax + 0x7e], bh ; ret
0x00000000000b455f : add byte ptr [rax + 0x7f], bh ; ret
0x0000000000036218 : add byte ptr [rax + 0x7f], bh ; syscall
0x0000000000036252 : add byte ptr [rax + 0x82], bh ; syscall
0x00000000000f07b5 : add byte ptr [rax + 0xca], bh ; syscall
0x000000000015368f : add byte ptr [rax + 0xd], dh ; clc ; call rsi
0x00000000000b4d2e : add byte ptr [rax + 0xe5], bh ; syscall
0x000000000004502d : add byte ptr [rax + 0xe], bh ; syscall
0x000000000002ec48 : add byte ptr [rax + 0xf], al ; mov bh, 0xc0 ; ret
0x0000000000078a91 : add byte ptr [rax + 0xf], al ; mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000087579 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x0000000000083557 : add byte ptr [rax + 0xf], cl ; ret 0x4b80
0x00000000001190dc : add byte ptr [rax + 0xf], cl ; ret 0x8348
0x000000000004dc9f : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000a4ae8 : add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x0000000000102326 : add byte ptr [rax + 0xf], cl ; ret 0xff81
0x00000000000b4617 : add byte ptr [rax + 0xfc17], bh ; ret
0x00000000000d9608 : add byte ptr [rax + 1], bh ; pop rbx ; ret
0x0000000000047145 : add byte ptr [rax + 1], bh ; ret
0x0000000000088905 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x000000000003b246 : add byte ptr [rax + 1], cl ; ret
0x00000000000983bf : add byte ptr [rax + 1], cl ; ret 0x1a75
0x0000000000092bfb : add byte ptr [rax + 1], cl ; ret 0x8348
0x00000000000a2966 : add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000001452b7 : add byte ptr [rax + 3], ch ; out dx, eax ; call qword ptr [rsi]
0x0000000000145287 : add byte ptr [rax + 3], cl ; out dx, eax ; jmp qword ptr [rdi]
0x00000000001452cf : add byte ptr [rax + 3], dh ; out dx, eax ; call qword ptr [rsi]
0x000000000014becf : add byte ptr [rax + 5], dl ; jmp qword ptr [rcx]
0x000000000014ee3f : add byte ptr [rax + 7], al ; cmc ; jmp qword ptr [rcx]
0x000000000014ee57 : add byte ptr [rax + 7], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001572d3 : add byte ptr [rax + rax*2 - 0x1587ffff], bh ; clc ; jmp qword ptr [rbx]
0x00000000001572a3 : add byte ptr [rax + rax*2 - 0x1597ffff], cl ; clc ; call qword ptr [rdi]
0x000000000013fd4f : add byte ptr [rax + rax*2 - 0xa], al ; jmp rsp
0x000000000015f25b : add byte ptr [rax + rax*8 + 1], al ; add byte ptr [rax + 0x21], al ; sti ; call qword ptr [rdi]
0x0000000000030a4f : add byte ptr [rax + rax*8 - 0x7cb7ec8c], al ; ret 0x4901
0x00000000000b0f07 : add byte ptr [rax + rax*8 - 0x7cb7f48c], al ; ret
0x000000000013f367 : add byte ptr [rax + rax*8], ah ; call rsp
0x000000000015f243 : add byte ptr [rax + rax*8], ch ; add dword ptr [rax], eax ; sub byte ptr [rcx], ah ; sti ; jmp qword ptr [rdx]
0x00000000000694da : add byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000062082 : add byte ptr [rax + rax], al ; add byte ptr [rdi], cl ; ret
0x000000000000d5df : add byte ptr [rax + rax], bh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x000000000014f557 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; ret
0x000000000015f457 : add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; ret 1
0x000000000007e6b9 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000007e889 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000014f4b7 : add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0
0x000000000014f507 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; hlt ; ret 0
0x000000000015f4ff : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, dx ; ret 1
0x000000000014f5bf : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x000000000014f577 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret
0x000000000014f5a7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x0000000000095ff5 : add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, [rdi - 0x10] ; ret
0x0000000000144ad3 : add byte ptr [rax + rbx - 0x56180000], bh ; out dx, al ; jmp qword ptr [rax]
0x000000000013ef57 : add byte ptr [rax + rbx*2], ah ; call rsp
0x000000000014ca1b : add byte ptr [rax + rbx*4], al ; add byte ptr [rax], al ; loopne 0x14ca3c ; std ; jmp qword ptr [rcx]
0x0000000000153a9b : add byte ptr [rax + rcx + 0x27c00001], al ; clc ; jmp qword ptr [rdx]
0x0000000000153ab3 : add byte ptr [rax + rcx + 0x27d80001], bl ; clc ; call qword ptr [rsi]
0x00000000000e8c75 : add byte ptr [rax + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x00000000000cfa85 : add byte ptr [rax + rcx - 0xd], dh ; ret
0x00000000000df421 : add byte ptr [rax + rcx - 9], dh ; ret 0xfc07
0x000000000004328a : add byte ptr [rax + rcx*2 - 0x75], ah ; add byte ptr [rax - 0x77], cl ; ret 0x19e8
0x000000000015fac3 : add byte ptr [rax + rcx*8 + 0x37180001], ch ; sti ; jmp qword ptr [rax]
0x000000000015fa73 : add byte ptr [rax + rcx*8 + 1], bl ; add byte ptr [rax + 0x34], bh ; sti ; jmp rsp
0x000000000015fa23 : add byte ptr [rax + rcx*8], cl ; add dword ptr [rax], eax ; call 0xffffffffd315f566
0x0000000000153a4b : add byte ptr [rax + rcx], dh ; add dword ptr [rax], eax ; loopne 0x153a80 ; clc ; jmp qword ptr [rbx]
0x0000000000143a2b : add byte ptr [rax + rcx], dl ; add byte ptr [rax], al ; xor byte ptr [rsi], dl ; out dx, al ; call rax
0x0000000000146aa3 : add byte ptr [rax + rdi + 0x6dd80000], cl ; out dx, eax ; jmp rax
0x0000000000141d7f : add byte ptr [rax + rdx*4 - 5], al ; jmp rsp
0x000000000014349f : add byte ptr [rax - 0x11], dl ; in eax, dx ; jmp rdx
0x0000000000150167 : add byte ptr [rax - 0x12], bh ; cmc ; jmp qword ptr [rdi]
0x00000000000fd9c8 : add byte ptr [rax - 0x168b7f80], 0x89 ; ret 0x894c
0x00000000001572d7 : add byte ptr [rax - 0x16], bh ; clc ; jmp qword ptr [rbx]
0x00000000001572a7 : add byte ptr [rax - 0x16], ch ; clc ; call qword ptr [rdi]
0x0000000000030d44 : add byte ptr [rax - 0x178b7f80], 0x89 ; ret 0x8b4c
0x000000000014b587 : add byte ptr [rax - 0x19], cl ; jmp qword ptr [rax]
0x000000000010dc02 : add byte ptr [rax - 0x1a8b7f80], 0x89 ; ret 0x8948
0x000000000015aa17 : add byte ptr [rax - 0x1f], bl ; stc ; call rcx
0x000000000015a9e7 : add byte ptr [rax - 0x20], bh ; stc ; call qword ptr [rax]
0x000000000015a96f : add byte ptr [rax - 0x22], dl ; stc ; call rcx
0x0000000000036a85 : add byte ptr [rax - 0x2d], cl ; loopne 0x36adb ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000000000156837 : add byte ptr [rax - 0x30], bh ; clc ; jmp qword ptr [rdi]
0x000000000015de57 : add byte ptr [rax - 0x31], bh ; cli ; jmp qword ptr [rbx]
0x000000000003c452 : add byte ptr [rax - 0x39], cl ; ret
0x00000000000b0a9f : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000095a1f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00000000000959ff : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x0000000000095a5f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x0000000000095a0f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x0000000000095a4f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000014d34f : add byte ptr [rax - 0x3b], ah ; call qword ptr [rbx]
0x0000000000144cf7 : add byte ptr [rax - 0x3e], ch ; out dx, al ; jmp qword ptr [rdi]
0x0000000000144cc7 : add byte ptr [rax - 0x3e], cl ; out dx, al ; jmp qword ptr [rcx]
0x0000000000035939 : add byte ptr [rax - 0x3f000001], al ; shr eax, 0x1f ; ret
0x000000000003568e : add byte ptr [rax - 0x3f91f09a], al ; ret
0x0000000000101997 : add byte ptr [rax - 0x3f], cl ; cli ; add al, 0x48 ; add edx, 1 ; syscall
0x000000000002b32d : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000000a710d : add byte ptr [rax - 0x46], cl ; ret
0x000000000003b560 : add byte ptr [rax - 0x48], cl ; ret 0xffff
0x0000000000146cc7 : add byte ptr [rax - 0x49], ch ; out dx, eax ; jmp rcx
0x0000000000059ff4 : add byte ptr [rax - 0x49f0a206], al ; ret 0x840f
0x000000000014d1c7 : add byte ptr [rax - 0x4a], bh ; jmp qword ptr [rcx]
0x000000000015a09f : add byte ptr [rax - 0x50], dh ; stc ; call rdi
0x0000000000021ade : add byte ptr [rax - 0x55bfe0f1], dl ; ret
0x000000000016193f : add byte ptr [rax - 0x58], dh ; sti ; jmp qword ptr [rsi]
0x00000000001448af : add byte ptr [rax - 0x5b], ah ; out dx, al ; call qword ptr [rdi]
0x00000000001448f7 : add byte ptr [rax - 0x5b], bh ; out dx, al ; call qword ptr [rdi]
0x0000000000144897 : add byte ptr [rax - 0x5b], bl ; out dx, al ; call qword ptr [rsi]
0x00000000001448c7 : add byte ptr [rax - 0x5b], ch ; out dx, al ; call qword ptr [rsi]
0x0000000000144837 : add byte ptr [rax - 0x5b], cl ; out dx, al ; jmp qword ptr [rcx]
0x00000000001448df : add byte ptr [rax - 0x5b], dh ; out dx, al ; call qword ptr [rdi]
0x000000000014487f : add byte ptr [rax - 0x5b], dl ; out dx, al ; call qword ptr [rbx]
0x0000000000149eef : add byte ptr [rax - 0x66], ah ; call rcx
0x000000000014e82f : add byte ptr [rax - 0x70], al ; hlt ; jmp qword ptr [rbx]
0x000000000014e847 : add byte ptr [rax - 0x70], bl ; hlt ; jmp qword ptr [rcx]
0x000000000014e85f : add byte ptr [rax - 0x70], dh ; hlt ; jmp qword ptr [rbx]
0x000000000015551f : add byte ptr [rax - 0x70], dl ; clc ; jmp qword ptr [rsi]
0x00000000001613f7 : add byte ptr [rax - 0x73], bl ; sti ; call rdx
0x00000000000b9796 : add byte ptr [rax - 0x73], cl ; add al, 0xf7 ; jmp 0xb9766
0x000000000007f683 : add byte ptr [rax - 0x73], cl ; add eax, 0x2e9f95 ; ret
0x000000000009603f : add byte ptr [rax - 0x73], cl ; clc ; ret
0x000000000009604f : add byte ptr [rax - 0x73], cl ; cld ; ret
0x00000000000fcf8f : add byte ptr [rax - 0x73], cl ; cmp eax, 0x2708c5 ; call rax
0x000000000009602f : add byte ptr [rax - 0x73], cl ; hlt ; ret
0x0000000000042725 : add byte ptr [rax - 0x73], cl ; xor eax, 0x1f3 ; call rax
0x000000000006e020 : add byte ptr [rax - 0x73], cl ; xor eax, 0x38 ; call rax
0x000000000007a5d8 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffe670 ; call rax
0x000000000007a150 : add byte ptr [rax - 0x73], cl ; xor eax, 0xffffeaf8 ; call rax
0x00000000000791d8 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffa70 ; call rax
0x000000000006e330 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffd28 ; call rax
0x0000000000078f18 : add byte ptr [rax - 0x73], cl ; xor eax, 0xfffffd30 ; call rax
0x0000000000081d4f : add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000e33cf : add byte ptr [rax - 0x75], cl ; add al, 0 ; add byte ptr [rax], al ; ret
0x00000000000b23da : add byte ptr [rax - 0x75], cl ; add byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000039291 : add byte ptr [rax - 0x75], cl ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x00000000000a4f2f : add byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000000000011981a : add byte ptr [rax - 0x75], cl ; add eax, 0x250f06 ; call qword ptr [rax]
0x00000000001191aa : add byte ptr [rax - 0x75], cl ; add eax, 0x251576 ; call qword ptr [rax]
0x00000000000dd642 : add byte ptr [rax - 0x75], cl ; and al, 0xb0 ; ret
0x000000000011dd97 : add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000d1bd7 : add byte ptr [rax - 0x75], cl ; jl 0xd1c08 ; sub byte ptr [rax - 0x7d], cl ; ret 0x4d01
0x00000000000d1bd6 : add byte ptr [rax - 0x75], cl ; jl 0xd1c09 ; sub byte ptr [rax - 0x7d], cl ; ret 0x4d01
0x00000000000e33c7 : add byte ptr [rax - 0x75], cl ; pop rax ; ret
0x000000000007d577 : add byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0x7404
0x00000000000e5d01 : add byte ptr [rax - 0x75], cl ; sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x0000000000075f37 : add byte ptr [rax - 0x75], cl ; sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000057eb1 : add byte ptr [rax - 0x75], cl ; xor eax, 0x3110a7 ; call rax
0x000000000005285d : add byte ptr [rax - 0x75], cl ; xor eax, 0x3166fb ; call rax
0x000000000004cf39 : add byte ptr [rax - 0x75], cl ; xor eax, 0x31c01f ; call rax
0x0000000000047c05 : add byte ptr [rax - 0x75], cl ; xor eax, 0x321353 ; call rax
0x00000000000deae2 : add byte ptr [rax - 0x76b7ffc8], al ; ret
0x000000000006cf94 : add byte ptr [rax - 0x76b80000], al ; ret 0x4375
0x00000000000f309f : add byte ptr [rax - 0x76b80000], al ; ret 0x4875
0x0000000000107ade : add byte ptr [rax - 0x77], cl ; add al, 0x24 ; call qword ptr [r11]
0x00000000000878e4 : add byte ptr [rax - 0x77], cl ; add eax, 0x2e401c ; ret
0x0000000000083516 : add byte ptr [rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x00000000000f34ef : add byte ptr [rax - 0x77], cl ; clc ; add rsp, 8 ; ret
0x000000000006f6c8 : add byte ptr [rax - 0x77], cl ; clc ; jmp 0x6f695
0x00000000000de928 : add byte ptr [rax - 0x77], cl ; clc ; mov byte ptr [r9 - 1], 0 ; ret
0x00000000000f1c7f : add byte ptr [rax - 0x77], cl ; clc ; pop rbx ; ret
0x000000000008e3bf : add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000046de8 : add byte ptr [rax - 0x77], cl ; dec byte ptr [rax - 0x77] ; ret 0x8948
0x000000000009778f : add byte ptr [rax - 0x77], cl ; enter 0x31c3, -0x40 ; ret
0x0000000000078739 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000069782 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000007fc37 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x000000000007b9e6 : add byte ptr [rax - 0x77], cl ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x00000000000ca110 : add byte ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x75] ; or cl, byte ptr [rax - 0x77] ; ret 0x31e8
0x00000000000737cf : add byte ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x77] ; ret 0x8d4a
0x0000000000082da2 : add byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 0x11] ; call rdx
0x0000000000034975 : add byte ptr [rax - 0x77], cl ; fistp qword ptr [rax + 3] ; syscall
0x00000000000bd2c7 : add byte ptr [rax - 0x77], cl ; fisttp qword ptr [rax - 0x77] ; ret
0x00000000000ba337 : add byte ptr [rax - 0x77], cl ; fisttp qword ptr [rax - 0x7d] ; ret
0x000000000011bd61 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x0000000000108101 : add byte ptr [rax - 0x77], cl ; fisttp word ptr [rax - 0x75] ; and al, 8 ; call rcx
0x0000000000117ac4 : add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret
0x0000000000071315 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0x28
0x00000000000e8295 : add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xf912
0x000000000006ea75 : add byte ptr [rax - 0x77], cl ; imul eax ; ret 0xfb35
0x00000000000ae703 : add byte ptr [rax - 0x77], cl ; je 0xae733 ; or al, ch ; ret 0xf70c
0x000000000006ef47 : add byte ptr [rax - 0x77], cl ; jmp 0x48f578a0
0x00000000000a9097 : add byte ptr [rax - 0x77], cl ; jmp 0x49cd19ed
0x00000000000a92a7 : add byte ptr [rax - 0x77], cl ; jmp 0x49cd1bfd
0x00000000000af125 : add byte ptr [rax - 0x77], cl ; loop 0xaf117 ; ret 0x272
0x000000000006c9a9 : add byte ptr [rax - 0x77], cl ; mov al, byte ptr [rax + 1] ; add byte ptr [rax], al ; ret
0x0000000000076d7b : add byte ptr [rax - 0x77], cl ; mov edx, 0x140 ; pop rbx ; ret
0x0000000000108c8d : add byte ptr [rax - 0x77], cl ; out dx, al ; call rbx
0x00000000000830cb : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x00000000000ed2dc : add byte ptr [rax - 0x77], cl ; out dx, eax ; call 0x79566
0x000000000010767e : add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rax]
0x0000000000108ebc : add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x000000000002b420 : add byte ptr [rax - 0x77], cl ; out dx, eax ; mov eax, 3 ; syscall
0x00000000000efb53 : add byte ptr [rax - 0x77], cl ; push rbp ; nop ; mov rdx, r12 ; call rax
0x0000000000114826 : add byte ptr [rax - 0x77], cl ; push rdi ; sbb bl, dh ; ret
0x000000000007fd83 : add byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x0000000000025bc7 : add byte ptr [rax - 0x77], cl ; ret
0x000000000004328e : add byte ptr [rax - 0x77], cl ; ret 0x19e8
0x0000000000103882 : add byte ptr [rax - 0x77], cl ; ret 0x1be
0x000000000009ed07 : add byte ptr [rax - 0x77], cl ; ret 0x2944
0x00000000000449b2 : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x000000000006cf97 : add byte ptr [rax - 0x77], cl ; ret 0x4375
0x0000000000103915 : add byte ptr [rax - 0x77], cl ; ret 0x46c7
0x00000000000f30a2 : add byte ptr [rax - 0x77], cl ; ret 0x4875
0x000000000005f93a : add byte ptr [rax - 0x77], cl ; ret 0x4de8
0x00000000000ddab6 : add byte ptr [rax - 0x77], cl ; ret 0x74e9
0x00000000000b7311 : add byte ptr [rax - 0x77], cl ; ret 0x775
0x00000000000cfaaf : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000c6c56 : add byte ptr [rax - 0x77], cl ; ret 0x84c6
0x00000000000b14e2 : add byte ptr [rax - 0x77], cl ; ret 0x84e9
0x000000000010a987 : add byte ptr [rax - 0x77], cl ; ret 0x850f
0x000000000002b877 : add byte ptr [rax - 0x77], cl ; ret 0x8548
0x000000000006a8dc : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000008281a : add byte ptr [rax - 0x77], cl ; ret 0x8949
0x000000000004e245 : add byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000002d6bf : add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x000000000006ded8 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000a7037 : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000010a8a7 : add byte ptr [rax - 0x77], cl ; ret 0xb43
0x00000000000af601 : add byte ptr [rax - 0x77], cl ; ret 0xb5e9
0x00000000000e96d6 : add byte ptr [rax - 0x77], cl ; ret 0xb9
0x000000000002114e : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000d47b2 : add byte ptr [rax - 0x77], cl ; ret 0xc889
0x00000000000defff : add byte ptr [rax - 0x77], cl ; ret 0xcfeb
0x0000000000099ff2 : add byte ptr [rax - 0x77], cl ; ret 0xd929
0x00000000000ae625 : add byte ptr [rax - 0x77], cl ; ret 0xdb31
0x0000000000069aef : add byte ptr [rax - 0x77], cl ; ret 0xdce9
0x000000000003c15d : add byte ptr [rax - 0x77], cl ; ret 0xed75
0x000000000008f66b : add byte ptr [rax - 0x77], cl ; ret 0xf748
0x000000000008344a : add byte ptr [rax - 0x77], cl ; ret 0xff31
0x000000000005a6ea : add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret
0x0000000000093962 : add byte ptr [rax - 0x77], cl ; stc ; mov qword ptr [rdx], rcx ; ret
0x00000000000797e9 : add byte ptr [rax - 0x77], cl ; sti ; je 0x797ff ; pop rbx ; ret
0x00000000000b31bf : add byte ptr [rax - 0x77], cl ; xlatb ; mov eax, r8d ; syscall
0x00000000000d5dff : add byte ptr [rax - 0x77], cl ; xlatb ; syscall
0x000000000010ec50 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x10ec68 ; ret
0x000000000010ec70 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x10ec88 ; ret
0x000000000010f5b8 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x10f5d0 ; ret
0x000000000010f5d8 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x10f5f0 ; ret
0x000000000010f618 : add byte ptr [rax - 0x77], cl ; xor cl, byte ptr [rax - 0x77] ; jp 0x10f630 ; ret
0x00000000000822cf : add byte ptr [rax - 0x77], cl ; xor eax, 0x2e9599 ; ret
0x00000000000f4d9f : add byte ptr [rax - 0x77], cl ; xor eax, eax ; ret
0x00000000001612f7 : add byte ptr [rax - 0x78], ch ; sti ; call rcx
0x00000000000d5e41 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x00000000000f4cf6 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rdi + 0x48], 0x89 ; ret 0x8348
0x000000000011205f : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x1d], cl ; pop rbx ; ret
0x00000000000341dc : add byte ptr [rax - 0x7d], cl ; and al, 0x38 ; or ebx, ebp ; ret 0x1f0f
0x000000000007fc70 : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000092d30 : add byte ptr [rax - 0x7d], cl ; cli ; dec dword ptr [rcx - 0x77] ; ret
0x00000000000fb417 : add byte ptr [rax - 0x7d], cl ; in al, dx ; xor byte ptr [rcx], 0xc0 ; pop rbx ; ret
0x000000000011e02a : add byte ptr [rax - 0x7d], cl ; inc dword ptr [rcx] ; ja 0x11e03f ; ret
0x0000000000022c47 : add byte ptr [rax - 0x7d], cl ; ret
0x000000000007d80f : add byte ptr [rax - 0x7d], cl ; ret 0x110
0x000000000010273c : add byte ptr [rax - 0x7d], cl ; ret 0x3108
0x00000000000ddfe3 : add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x000000000006e12c : add byte ptr [rax - 0x7d], cl ; ret 0x4401
0x0000000000031b2c : add byte ptr [rax - 0x7d], cl ; ret 0x4508
0x0000000000023026 : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000065167 : add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000003b0ff : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000000e51aa : add byte ptr [rax - 0x7d], cl ; ret 0x4814
0x0000000000093c7f : add byte ptr [rax - 0x7d], cl ; ret 0x4840
0x0000000000028680 : add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x00000000000a5d0f : add byte ptr [rax - 0x7d], cl ; ret 0x4909
0x0000000000064ee7 : add byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x000000000010017f : add byte ptr [rax - 0x7d], cl ; ret 0x4c0c
0x000000000007b500 : add byte ptr [rax - 0x7d], cl ; ret 0x4d07
0x0000000000088aff : add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x0000000000088a8f : add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x0000000000041b87 : add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000009c61f : add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x00000000000c4777 : add byte ptr [rax - 0x7d], cl ; ret 0x8308
0x00000000000f50ce : add byte ptr [rax - 0x7d], cl ; ret 0x901
0x00000000000fbff0 : add byte ptr [rax - 0x7d], cl ; ret 0xe801
0x000000000005c3c7 : add byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x000000000004788f : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000002adbb : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x00000000000451e7 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x39 ; ret 0xb87f
0x00000000000eaa97 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x000000000003c6cf : add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x4801
0x00000000000a0c28 : add byte ptr [rax - 0x7d], cl ; stc ; dec dword ptr [rcx - 0x77] ; ret 0x7c74
0x000000000015515f : add byte ptr [rax - 0x7e], al ; clc ; jmp qword ptr [rsi]
0x0000000000155197 : add byte ptr [rax - 0x7e], bl ; clc ; jmp qword ptr [rdi]
0x00000000000a3690 : add byte ptr [rax - 0x7f], cl ; cli ; ret 0x10
0x00000000000b00d0 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x00000000000394d1 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0xb72
0x00000000000fd4d1 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0xff32
0x0000000000070761 : add byte ptr [rax - 0x7f], cl ; ret
0x000000000002f048 : add byte ptr [rax - 0x7f], cl ; ret 0x200
0x000000000011a58a : add byte ptr [rax - 0x9ffffff], al ; ret
0x000000000014bb0f : add byte ptr [rax - 0xc], dh ; jmp qword ptr [rbx]
0x00000000000dd2d5 : add byte ptr [rax - 1], bh ; jmp 0xdd2a6
0x000000000011b38a : add byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x00000000000348a5 : add byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000002b5ff : add byte ptr [rax - 1], bh ; ret
0x000000000007aafe : add byte ptr [rax - 1], dil ; ret
0x000000000015046f : add byte ptr [rax - 6], ah ; cmc ; call rcx
0x000000000015ea07 : add byte ptr [rax - 9], cl ; sti ; jmp qword ptr [rsi]
0x000000000007447b : add byte ptr [rax], 0 ; add al, ch ; in al, dx ; ret 7
0x0000000000057da4 : add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000079fa5 : add byte ptr [rax], 0 ; add al, ch ; ret 0x767
0x00000000000790a5 : add byte ptr [rax], 0 ; add al, ch ; ret 0x776
0x00000000000394d5 : add byte ptr [rax], 0 ; add al, ch ; ret 0xb72
0x00000000000fd4d5 : add byte ptr [rax], 0 ; add al, ch ; ret 0xff32
0x00000000000f38d5 : add byte ptr [rax], 0 ; add al, ch ; ret 0xffce
0x000000000006a093 : add byte ptr [rax], 0 ; add bl, dh ; ret
0x000000000006ea72 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; imul eax ; ret 0xfb35
0x00000000000abdb4 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000006c53b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x00000000000e33c3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x00000000000831cb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; nop dword ptr [rax - 0x56] ; ret
0x00000000001022eb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000007b6fb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x0000000000102303 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000006f6bb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009044b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000006eb91 : add byte ptr [rax], 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000054190 : add byte ptr [rax], 0 ; add byte ptr [rcx + 1], cl ; ret 0x3145
0x000000000013e53d : add byte ptr [rax], 0 ; movsb byte ptr [rdi], byte ptr [rsi] ; movsb byte ptr [rdi], byte ptr [rsi] ; out dx, eax ; jmp rsp
0x0000000000035c03 : add byte ptr [rax], 0 ; ret
0x000000000015eaff : add byte ptr [rax], ah ; add bl, bh ; jmp qword ptr [rax]
0x00000000000b2ed3 : add byte ptr [rax], ah ; add dword ptr [rax + 0x38], edi ; syscall
0x00000000000ec22f : add byte ptr [rax], ah ; add rsp, 0x10 ; pop rbx ; ret
0x000000000001a417 : add byte ptr [rax], ah ; call qword ptr [rcx]
0x000000000002ec88 : add byte ptr [rax], ah ; movzx eax, ax ; ret
0x000000000015ab2f : add byte ptr [rax], ah ; out 0xf9, al ; call qword ptr [rax]
0x000000000014a32f : add byte ptr [rax], ah ; stosb byte ptr [rdi], al ; jmp rax
0x000000000000e72f : add byte ptr [rax], ah ; test byte ptr [rip], 0 ; ret
0x000000000014642a : add byte ptr [rax], al ; adc al, 0x32 ; add byte ptr [rax], al ; sal byte ptr [rsi], 1 ; out dx, eax ; call qword ptr [rsi]
0x000000000014682a : add byte ptr [rax], al ; adc al, 0x36 ; add byte ptr [rax], al ; mov al, 0x42 ; out dx, eax ; jmp qword ptr [rcx]
0x000000000013ddbe : add byte ptr [rax], al ; adc al, 0x43 ; out dx, al ; jmp rsp
0x000000000014952a : add byte ptr [rax], al ; adc al, 0x63 ; add byte ptr [rax], al ; nop ; jno 0x14952e ; call rdi
0x000000000015ab2a : add byte ptr [rax], al ; adc al, 0x79 ; add dword ptr [rax], eax ; and dh, ah ; stc ; call qword ptr [rax]
0x000000000015b92a : add byte ptr [rax], al ; adc al, 0x87 ; add dword ptr [rax], eax ; nop ; cli ; jmp rdx
0x000000000014db2a : add byte ptr [rax], al ; adc al, 0xa9 ; add byte ptr [rax], al ; jo 0x14db70 ; hlt ; call rax
0x000000000014e82a : add byte ptr [rax], al ; adc al, 0xb6 ; add byte ptr [rax], al ; nop ; hlt ; jmp qword ptr [rbx]
0x0000000000160b2a : add byte ptr [rax], al ; adc al, 0xd9 ; add dword ptr [rax], eax ; adc byte ptr [rsi - 5], ah ; call rsp
0x0000000000143a2a : add byte ptr [rax], al ; adc al, 8 ; add byte ptr [rax], al ; xor byte ptr [rsi], dl ; out dx, al ; call rax
0x0000000000000790 : add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x000000000000efca : add byte ptr [rax], al ; adc al, byte ptr [rax] ; or eax, dword ptr [rax] ; push rax ; call qword ptr [rax]
0x000000000014cd5e : add byte ptr [rax], al ; adc byte ptr [rbx - 0xd], ch ; jmp qword ptr [rcx]
0x0000000000145f7e : add byte ptr [rax], al ; adc byte ptr [rdx], ch ; out dx, eax ; jmp qword ptr [rsi]
0x000000000014739e : add byte ptr [rax], al ; adc cl, ch ; out dx, eax ; call qword ptr [rbx]
0x00000000001593f2 : add byte ptr [rax], al ; adc dword ptr fs:[rcx], eax ; add byte ptr [rax], cl ; xchg eax, ebx ; stc ; call qword ptr [rdx]
0x000000000015f5f9 : add byte ptr [rax], al ; add ah, ah ; ret
0x000000000014f5d9 : add byte ptr [rax], al ; add ah, al ; ret
0x000000000014f5f1 : add byte ptr [rax], al ; add ah, bl ; ret
0x000000000014f4f1 : add byte ptr [rax], al ; add ah, bl ; ret 0
0x000000000015f501 : add byte ptr [rax], al ; add ah, ch ; ret 1
0x000000000015f5e1 : add byte ptr [rax], al ; add ah, cl ; ret
0x000000000014f509 : add byte ptr [rax], al ; add ah, dh ; ret 0
0x000000000015f4e9 : add byte ptr [rax], al ; add ah, dl ; ret 1
0x000000000015551a : add byte ptr [rax], al ; add al, 0x23 ; add dword ptr [rax], eax ; push rax ; nop ; clc ; jmp qword ptr [rsi]
0x000000000013eabe : add byte ptr [rax], al ; add al, 0x33 ; call rsp
0x000000000013eee6 : add byte ptr [rax], al ; add al, 0x3c ; call rsp
0x000000000014ca1a : add byte ptr [rax], al ; add al, 0x98 ; add byte ptr [rax], al ; loopne 0x14ca3d ; std ; jmp qword ptr [rcx]
0x000000000015f91a : add byte ptr [rax], al ; add al, 0xc7 ; add dword ptr [rax], eax ; nop ; sti ; call qword ptr [rsi]
0x000000000015fd1a : add byte ptr [rax], al ; add al, 0xcb ; add dword ptr [rax], eax ; sar byte ptr [rbx], 0xfb ; jmp qword ptr [rdx]
0x000000000007447c : add byte ptr [rax], al ; add al, ch ; in al, dx ; ret 7
0x0000000000119d87 : add byte ptr [rax], al ; add al, ch ; int1 ; ret
0x0000000000119e8a : add byte ptr [rax], al ; add al, ch ; out dx, al ; ret 0xfff1
0x0000000000038795 : add byte ptr [rax], al ; add al, ch ; ret
0x00000000000d04a6 : add byte ptr [rax], al ; add al, ch ; ret 0x13e
0x0000000000079fa6 : add byte ptr [rax], al ; add al, ch ; ret 0x767
0x00000000000790a6 : add byte ptr [rax], al ; add al, ch ; ret 0x776
0x00000000000394d6 : add byte ptr [rax], al ; add al, ch ; ret 0xb72
0x0000000000080c76 : add byte ptr [rax], al ; add al, ch ; ret 0xfb93
0x00000000000fba56 : add byte ptr [rax], al ; add al, ch ; ret 0xfdb6
0x00000000000fd4d6 : add byte ptr [rax], al ; add al, ch ; ret 0xff32
0x00000000000f38d6 : add byte ptr [rax], al ; add al, ch ; ret 0xffce
0x00000000000bcfcf : add byte ptr [rax], al ; add bh, dh ; ret
0x00000000000b59ea : add byte ptr [rax], al ; add bl, al ; mov eax, 0xffffffff ; ret
0x0000000000097799 : add byte ptr [rax], al ; add bl, al ; nop dword ptr [rax] ; ret
0x0000000000036c2c : add byte ptr [rax], al ; add bl, al ; xor eax, eax ; ret
0x0000000000035a56 : add byte ptr [rax], al ; add bl, bl ; insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x00000000000be039 : add byte ptr [rax], al ; add bl, ch ; or eax, 0x83499066 ; ret 0x4104
0x00000000000d78f8 : add byte ptr [rax], al ; add bl, ch ; ret
0x00000000000337b0 : add byte ptr [rax], al ; add bl, ch ; ret 0x2e66
0x0000000000041bd3 : add byte ptr [rax], al ; add bl, ch ; ret 0x5d9
0x000000000007d855 : add byte ptr [rax], al ; add bl, ch ; ret 0x8d48
0x0000000000114019 : add byte ptr [rax], al ; add bl, ch ; ret 0x9066
0x000000000002dd1d : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000000daf23 : add byte ptr [rax], al ; add byte ptr [rax + 0x10f], bh ; syscall
0x00000000000e384c : add byte ptr [rax], al ; add byte ptr [rax + 0x121], bh ; syscall
0x00000000000777f5 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000c7843 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x148
0x00000000000a72ba : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x2948
0x000000000007f4d2 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8348
0x000000000004f5a9 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8349
0x000000000007b55b : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8d49
0x000000000010a512 : add byte ptr [rax], al ; add byte ptr [rax + 0x31], cl ; ret 0x8949
0x0000000000026999 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000013dbcb : add byte ptr [rax], al ; add byte ptr [rax + 0x43], dl ; pop rcx ; clc ; ret 0x6e1f
0x000000000010bbfd : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x448b
0x00000000000c2eef : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x00000000000c3006 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x000000000004292e : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; sti ; syscall
0x00000000000b462d : add byte ptr [rax], al ; add byte ptr [rax + 0x7e], bh ; ret
0x00000000000b455d : add byte ptr [rax], al ; add byte ptr [rax + 0x7f], bh ; ret
0x0000000000036216 : add byte ptr [rax], al ; add byte ptr [rax + 0x7f], bh ; syscall
0x0000000000036250 : add byte ptr [rax], al ; add byte ptr [rax + 0x82], bh ; syscall
0x00000000000f07b3 : add byte ptr [rax], al ; add byte ptr [rax + 0xca], bh ; syscall
0x00000000000b4d2c : add byte ptr [rax], al ; add byte ptr [rax + 0xe5], bh ; syscall
0x000000000004502b : add byte ptr [rax], al ; add byte ptr [rax + 0xe], bh ; syscall
0x00000000001190da : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8348
0x00000000000773f4 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000102324 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xff81
0x00000000000d9606 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; pop rbx ; ret
0x0000000000047143 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x0000000000094934 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x000000000003b244 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x00000000000983bd : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x1a75
0x0000000000092bf9 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8348
0x0000000000030a4d : add byte ptr [rax], al ; add byte ptr [rax + rax*8 - 0x7cb7ec8c], al ; ret 0x4901
0x00000000000cb09d : add byte ptr [rax], al ; add byte ptr [rax + rax*8 - 0x7cb7f48c], al ; ret
0x000000000015f455 : add byte ptr [rax], al ; add byte ptr [rax + rax], ch ; add byte ptr [rax], al ; ret 1
0x000000000014f4b5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dh ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0
0x0000000000095ff3 : add byte ptr [rax], al ; add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, [rdi - 0x10] ; ret
0x00000000000e8c73 : add byte ptr [rax], al ; add byte ptr [rax + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x00000000000cfa83 : add byte ptr [rax], al ; add byte ptr [rax + rcx - 0xd], dh ; ret
0x0000000000099ea6 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000e882d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000003568c : add byte ptr [rax], al ; add byte ptr [rax - 0x3f91f09a], al ; ret
0x000000000002b32b : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x0000000000021adc : add byte ptr [rax], al ; add byte ptr [rax - 0x55bfe0f1], dl ; ret
0x000000000009603d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x000000000009604d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x000000000009602d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x0000000000081d4d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000a4f2d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00000000000dd640 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; and al, 0xb0 ; ret
0x00000000000e33c5 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop rax ; ret
0x000000000007d575 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0x7404
0x0000000000107adc : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; add al, 0x24 ; call qword ptr [r11]
0x000000000006f6c6 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; jmp 0x6f697
0x00000000000962ed : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000007b9e4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x00000000000737cd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fimul word ptr [rax - 0x77] ; ret 0x8d4a
0x0000000000082da0 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 0x11] ; call rdx
0x00000000000bd2c5 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fisttp qword ptr [rax - 0x77] ; ret
0x0000000000071313 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0x28
0x00000000000e8293 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret 0xf912
0x000000000006ea73 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; imul eax ; ret 0xfb35
0x00000000000ae701 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; je 0xae735 ; or al, ch ; ret 0xf70c
0x00000000000af123 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; loop 0xaf119 ; ret 0x272
0x00000000000830c9 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rbx ; call rax
0x00000000000ed2da : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call 0x79568
0x000000000010767c : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rax]
0x0000000000114824 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; push rdi ; sbb bl, dh ; ret
0x000000000003c7f3 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000103880 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x000000000009ed05 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2944
0x000000000005f938 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x4de8
0x00000000000cfaad : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000006ded6 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000a7b4d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000002114c : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000d47b0 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc889
0x0000000000099ff0 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xd929
0x00000000000ae623 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xdb31
0x000000000003c15b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xed75
0x00000000000d5dfd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xlatb ; syscall
0x00000000000f4d9d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; xor eax, eax ; ret
0x00000000000d5e3f : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x000000000011205d : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x1d], cl ; pop rbx ; ret
0x000000000003382a : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000007d80d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x110
0x000000000006e12a : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4401
0x0000000000023024 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000003b0fd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000000000e51a8 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4814
0x000000000002867e : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x000000000010017d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c0c
0x0000000000088afd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x0000000000088a8d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x000000000009c61d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x000000000005c4fd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x0000000000058585 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x000000000009c1ed : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x4801
0x00000000000dd2d3 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; jmp 0xdd2a8
0x00000000000348a3 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; pop rbx ; ret
0x0000000000035f3b : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000001a415 : add byte ptr [rax], al ; add byte ptr [rax], ah ; call qword ptr [rcx]
0x0000000000114017 : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, ch ; ret 0x9066
0x000000000002dd1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000006decb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000010bbfb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x448b
0x00000000001186ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x00000000000e882b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000009603b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; clc ; ret
0x000000000009604b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; cld ; ret
0x000000000009602b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; hlt ; ret
0x00000000000962eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000005f936 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x4de8
0x00000000000cfaab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000000a7b4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000003bd3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000007d80b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x110
0x00000000000ecabb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000003b0fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000000000088afb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x0000000000088a8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x000000000009c61b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8301
0x000000000005c4fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x000000000001a413 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; call qword ptr [rcx]
0x000000000001a411 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; call qword ptr [rcx]
0x00000000000d4b59 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000000084b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rcx]
0x000000000013d42a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x000000000000417a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000010612 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d
0x000000000000636a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1f
0x00000000001276a2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000000520 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2800
0x000000000000a222 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2c
0x000000000000d5e2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x000000000000fffa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x000000000000a8b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x34
0x000000000000a3ea : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x42
0x00000000000077f2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x44
0x0000000000007ada : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x58
0x0000000000163cca : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000001635aa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x000000000013001b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; stosd dword ptr [rdi], eax ; jmp qword ptr [rax]
0x0000000000090a6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000039411 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x000000000002219b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret 0x4101
0x0000000000083e2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000013d42b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x00000000000d4b5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000000959dc : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x00000000000ae28c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000036dbc : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; ret
0x00000000000dd9d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000741d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x000000000011acce : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0xd6f06
0x0000000000107073 : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rax]
0x000000000011dd6c : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x00000000000084b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rcx]
0x00000000001296cc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000012887c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x0000000000035a55 : add byte ptr [rax], al ; add byte ptr [rax], al ; fld xword ptr [rsp - 0x18] ; ret
0x000000000004cba6 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000095c92 : add byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x95c8f ; ret
0x000000000009602c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi - 0xc] ; ret
0x000000000009604c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi - 4] ; ret
0x000000000009603c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, [rdi - 8] ; ret
0x0000000000162ed0 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov ah, 5 ; add byte ptr [rax], al ; ret
0x00000000000f0e2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [r9], r8d ; xor eax, eax ; ret
0x00000000000b462c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x7e ; ret
0x0000000000039de4 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000047142 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000006c53c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x00000000000f4083 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rbx] ; jmp 0xf4055
0x00000000000e96ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, eax ; jmp 0xe96a1
0x0000000000114f2c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; ret
0x000000000008e9bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rcx ; ret
0x000000000006b5fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000010858e : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000f4d9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x00000000000e33c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x000000000006f6c5 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; jmp 0x6f698
0x00000000000962ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000021adb : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; nop dword ptr [rax - 0x56] ; ret
0x0000000000021acc : add byte ptr [rax], al ; add byte ptr [rax], al ; nop dword ptr [rax - 0x56] ; ret
0x00000000000e5947 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000000000039412 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000079aa0 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002bb52 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000013d42c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x000000000013dbca : add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; pop r9 ; clc ; ret 0x6e1f
0x000000000000417c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000010614 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d
0x000000000012869c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x0000000000128e34 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x000000000000636c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1f
0x00000000001276a4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000000522 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2800
0x000000000000a224 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2c
0x000000000000d5e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x000000000000fffc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x000000000000a8b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x34
0x000000000000a3ec : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x42
0x00000000000077f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x44
0x0000000000007adc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x58
0x0000000000163ccc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000001635ac : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x000000000013001d : add byte ptr [rax], al ; add byte ptr [rax], al ; stosd dword ptr [rdi], eax ; jmp qword ptr [rax]
0x000000000015f454 : add byte ptr [rax], al ; add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; ret 1
0x00000000000d6a72 : add byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000002bb5c : add byte ptr [rax], al ; add byte ptr [rax], al ; test esi, esi ; je 0x2bb26 ; pop rbx ; ret
0x000000000014f4b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0
0x0000000000039316 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000006c8fc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000021e1c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor edi, edi ; mov eax, edx ; syscall
0x000000000008539c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor edx, edx ; mov eax, edx ; ret
0x000000000009044c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000001461de : add byte ptr [rax], al ; add byte ptr [rax], dh ; out dx, eax ; call qword ptr [rbx]
0x0000000000132e4d : add byte ptr [rax], al ; add byte ptr [rax], dh ; push rdi ; std ; call qword ptr [rax]
0x0000000000130afd : add byte ptr [rax], al ; add byte ptr [rax], dl ; cmp esi, esi ; jmp qword ptr [rax]
0x00000000000a9d08 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x7d], cl ; ret
0x0000000000077629 : add byte ptr [rax], al ; add byte ptr [rbp + 0x4f0f48ff], al ; ret 0x8948
0x000000000002bb5d : add byte ptr [rax], al ; add byte ptr [rbp + 0x5bb974f6], al ; ret
0x0000000000114e98 : add byte ptr [rax], al ; add byte ptr [rbp + 3], dh ; ret
0x0000000000096c5f : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x20 ; call rbx
0x00000000000be40d : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000095c93 : add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dh ; ret
0x00000000000bfd95 : add byte ptr [rax], al ; add byte ptr [rbp - 0x3dbaf02e], al ; jmp 0xbfd79
0x00000000000e3120 : add byte ptr [rax], al ; add byte ptr [rbp - 0x3dbaf02e], al ; ret
0x00000000000beced : add byte ptr [rax], al ; add byte ptr [rbp - 0x76d68740], al ; ret 0x8b49
0x0000000000047435 : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret
0x000000000006a019 : add byte ptr [rax], al ; add byte ptr [rbp - 0xcf78b37], al ; ret
0x0000000000094638 : add byte ptr [rax], al ; add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x00000000001089e6 : add byte ptr [rax], al ; add byte ptr [rbx + 0x27603fa], al ; ret
0x00000000000f1076 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000098343 : add byte ptr [rax], al ; add byte ptr [rbx + 0x57413f8], al ; mov edx, eax ; jmp 0x98321
0x000000000009a993 : add byte ptr [rax], al ; add byte ptr [rbx + 0x57413f8], al ; mov edx, eax ; jmp 0x9a971
0x000000000009cf13 : add byte ptr [rax], al ; add byte ptr [rbx + 0x57413f8], al ; mov edx, eax ; jmp 0x9cef1
0x0000000000051538 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; mov eax, edx ; pop r12 ; ret
0x00000000000f268d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; mov eax, esi ; pop r12 ; ret
0x0000000000036fdc : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000021f5c : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000243e6 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000114bf5 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; xor eax, eax ; pop r12 ; ret
0x00000000000741d5 : add byte ptr [rax], al ; add byte ptr [rbx + 0xf89cfe1], al ; ret
0x0000000000081bf8 : add byte ptr [rax], al ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x00000000000fe5c4 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x32], ah ; syscall
0x00000000001016ff : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x4a], al ; adc al, 0xeb ; ret 0x8b4c
0x0000000000116190 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x4d], al ; mov byte ptr [rax + 1], cl ; ret
0x000000000005346e : add byte ptr [rax], al ; add byte ptr [rbx - 0x110343], al ; call qword ptr [rax]
0x0000000000053dfe : add byte ptr [rax], al ; add byte ptr [rbx - 0x114743], al ; call qword ptr [rax]
0x0000000000039413 : add byte ptr [rax], al ; add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x000000000002057c : add byte ptr [rax], al ; add byte ptr [rbx - 0x76ff4783], al ; ret
0x000000000006e603 : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; call 0xffffffffc3632773
0x00000000000abe65 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7fbb5], cl ; ret
0x00000000000bc151 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7ce7dbb4], cl ; ret
0x00000000000283d8 : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], cl ; ret
0x000000000003d071 : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret
0x00000000000f21cd : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; ret
0x00000000000dff3b : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x0000000000077414 : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x000000000006f990 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5c], al ; ret
0x0000000000051757 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5d], al ; ret
0x0000000000051681 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; ret
0x0000000000054191 : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret 0x3145
0x000000000010a1ea : add byte ptr [rax], al ; add byte ptr [rcx + rcx + 0x48], dh ; add esp, 0x48 ; ret
0x00000000000eb2e5 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*2 - 0x75], ah ; xor byte ptr [rax - 0x7d], cl ; ret 0xf601
0x000000000006724f : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0x24], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x000000000011129a : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call qword ptr [rax]
0x0000000000096ec2 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x16], cl ; mov rdi, rbp ; call rbx
0x0000000000097501 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x17], cl ; mov rdi, rbp ; call rbx
0x0000000000036d87 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x3a], cl ; mov eax, ecx ; syscall
0x00000000000deeed : add byte ptr [rax], al ; add byte ptr [rcx + rcx*8 - 0x7cb7848c], al ; ret
0x000000000015a371 : add byte ptr [rax], al ; add byte ptr [rcx + rsi*2 + 1], bl ; add byte ptr [rax], cl ; ret 0xfff9
0x00000000000389ed : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; or byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x00000000000c8eb9 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; push rdi ; adc byte ptr [rax + 0x39], cl ; ret 0xd377
0x00000000000434fd : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret
0x00000000000ce431 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; and cl, r13b ; ret 0xfff8
0x00000000000cf1d9 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; push rbp ; and byte ptr [rcx - 0x7d], al ; ret 0x4a01
0x000000000008f106 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000092744 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x2b4c
0x000000000003c7b1 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x894c
0x0000000000055edc : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x000000000010b80d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7cb76fec], cl ; ret 0x4801
0x000000000002219d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret 0x4101
0x000000000003e4bd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4901
0x0000000000083e2d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000014c4ce : add byte ptr [rax], al ; add byte ptr [rcx - 0xd], al ; jmp rdx
0x000000000013d42d : add byte ptr [rax], al ; add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x0000000000088be4 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x0000000000088c0a : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x00000000000c41be : add byte ptr [rax], al ; add byte ptr [rcx], al ; fdivr dword ptr [rcx] ; ret
0x00000000000cfafb : add byte ptr [rax], al ; add byte ptr [rcx], al ; jne 0xcfb0f ; ret
0x00000000000442a4 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x1ee9
0x0000000000092f45 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ror dword ptr [rax - 0x39], 1 ; ret 0xffff
0x0000000000087a94 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret
0x00000000000ccd2e : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x2975
0x00000000000ccd20 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x3775
0x00000000000ccd12 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x4575
0x00000000000ac70e : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x748d
0x00000000000ab688 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x7c8d
0x00000000000ab064 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8944
0x00000000000ab0f7 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0x8d41
0x00000000000ac673 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret 0xf889
0x00000000000dc433 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; sal bl, 1 ; ret
0x0000000000098361 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; in eax, dx ; mov edx, eax ; jmp 0x9831e
0x000000000009a9b1 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; in eax, dx ; mov edx, eax ; jmp 0x9a96e
0x000000000009cf31 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; in eax, dx ; mov edx, eax ; jmp 0x9ceee
0x0000000000038d52 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000855d4 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ret
0x00000000000b2ec3 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rcx - 0x7f], cl ; ret 0x2d0
0x00000000000956d2 : add byte ptr [rax], al ; add byte ptr [rdi + 2], bh ; neg eax ; ret
0x00000000000a4314 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x55 ; ret 0xf41
0x00000000000278dd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x50 ; dec dword ptr [rcx - 0x7d] ; ret 0x4801
0x0000000000088b3d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x0000000000094579 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xea81
0x00000000000f11f5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8348
0x000000000011b5ac : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8964
0x0000000000043793 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8d48
0x00000000000cd577 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc1e9
0x00000000000bdbb4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc931
0x0000000000043e75 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xfbe9
0x00000000000aaa03 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x8d44
0x00000000000cf576 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000000c9325 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe2c1
0x0000000000069931 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd089
0x00000000000b7007 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000000b7cf9 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe283
0x000000000014ac59 : add byte ptr [rax], al ; add byte ptr [rdx + rdi*2], al ; add byte ptr [rax], dh ; ret 0xfff2
0x0000000000088a52 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000000d6109 : add byte ptr [rax], al ; add byte ptr [rsi + 2], dh ; ret
0x0000000000021abb : add byte ptr [rax], al ; add byte ptr [rsi - 0x70], ah ; nop dword ptr [rax - 0x56] ; ret
0x0000000000147fee : add byte ptr [rax], al ; add byte ptr [rsi], dl ; call qword ptr [rcx]
0x0000000000146e71 : add byte ptr [rax], al ; add byte ptr [rsp + rdi], bl ; add byte ptr [rax], bl ; ret
0x0000000000056e96 : add byte ptr [rax], al ; add cl, ch ; in eax, dx ; ret
0x000000000002968b : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000002a074 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffe
0x000000000014acde : add byte ptr [rax], al ; add dh, 0xf2 ; jmp rcx
0x000000000011a98b : add byte ptr [rax], al ; add dh, dh ; ret
0x000000000011bbe8 : add byte ptr [rax], al ; add dh, dh ; ret 0x7402
0x0000000000075f58 : add byte ptr [rax], al ; add dh, dh ; ret 0x7508
0x00000000000c6db3 : add byte ptr [rax], al ; add dh, dh ; ret 0xf10
0x00000000000eda42 : add byte ptr [rax], al ; add dh, dh ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp qword ptr [rax]
0x00000000000cfafc : add byte ptr [rax], al ; add dword ptr [rbp + 7], esi ; ret
0x000000000015b35a : add byte ptr [rax], al ; add dword ptr [rcx], 0xfa1b9000 ; jmp qword ptr [rdx]
0x00000000001184c4 : add byte ptr [rax], al ; add edx, eax ; jmp 0x118461
0x00000000000959de : add byte ptr [rax], al ; add rax, 3 ; ret
0x0000000000088904 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x0000000000145286 : add byte ptr [rax], al ; add rbp, rdi ; jmp qword ptr [rdi]
0x000000000010cb09 : add byte ptr [rax], al ; add rdi, 0x10 ; call rcx
0x000000000010f519 : add byte ptr [rax], al ; add rdi, 0x58 ; call rcx
0x000000000010eb59 : add byte ptr [rax], al ; add rdi, 0x68 ; call rcx
0x000000000010be0c : add byte ptr [rax], al ; add rdi, 0xc8 ; call rcx
0x00000000000ae28e : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000036dbe : add byte ptr [rax], al ; add rsp, 0x10 ; ret
0x00000000000a13ee : add byte ptr [rax], al ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000036455 : add byte ptr [rax], al ; add rsp, 0x108 ; ret
0x0000000000035e64 : add byte ptr [rax], al ; add rsp, 0x148 ; ret
0x00000000000eb79e : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000110b2b : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x0000000000035be2 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000d7082 : add byte ptr [rax], al ; add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x000000000003615e : add byte ptr [rax], al ; add rsp, 0xd0 ; ret
0x0000000000044f18 : add byte ptr [rax], al ; add rsp, 8 ; mov eax, edx ; ret
0x0000000000023297 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000355ae : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000014493a : add byte ptr [rax], al ; and al, 0x17 ; add byte ptr [rax], al ; nop ; movsd dword ptr [rdi], dword ptr [rsi] ; out dx, al ; call qword ptr [rsi]
0x000000000014543a : add byte ptr [rax], al ; and al, 0x22 ; add byte ptr [rax], al ; mov al, 7 ; out dx, eax ; call qword ptr [rdi]
0x000000000013f5e6 : add byte ptr [rax], al ; and al, 0x31 ; hlt ; call rsp
0x000000000013ef56 : add byte ptr [rax], al ; and al, 0x58 ; call rsp
0x000000000013f6f6 : add byte ptr [rax], al ; and al, 0x59 ; hlt ; jmp rsp
0x000000000013f86e : add byte ptr [rax], al ; and al, 0xbe ; hlt ; jmp rsp
0x000000000013f366 : add byte ptr [rax], al ; and al, 0xc0 ; call rsp
0x000000000013e74e : add byte ptr [rax], al ; and al, 0xcd ; out dx, eax ; call rsp
0x000000000016193a : add byte ptr [rax], al ; and al, 0xe7 ; add dword ptr [rax], eax ; jo 0x1618f3 ; sti ; jmp qword ptr [rsi]
0x000000000014d68e : add byte ptr [rax], al ; and al, 0xf4 ; jmp qword ptr [rdi]
0x000000000000bfe2 : add byte ptr [rax], al ; and al, byte ptr [rax] ; or eax, dword ptr [rax] ; ret 0xc
0x00000000000e3723 : add byte ptr [rax], al ; and eax, 0xfffff000 ; or eax, edi ; ret
0x000000000002ef8f : add byte ptr [rax], al ; and eax, esi ; ret
0x00000000000741d6 : add byte ptr [rax], al ; and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x0000000000088b3e : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x0000000000085770 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000087578 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x0000000000144ad6 : add byte ptr [rax], al ; call 0x2114398b
0x00000000001466b6 : add byte ptr [rax], al ; call 0x241455fb
0x000000000009280a : add byte ptr [rax], al ; call 0x2eab4
0x0000000000119e8b : add byte ptr [rax], al ; call 0x36184
0x000000000011acd0 : add byte ptr [rax], al ; call 0xd6f04
0x000000000007447d : add byte ptr [rax], al ; call 0xf0774
0x00000000000744f0 : add byte ptr [rax], al ; call 0xf07a4
0x0000000000107075 : add byte ptr [rax], al ; call qword ptr [rax]
0x0000000000039132 : add byte ptr [rax], al ; call qword ptr [rbx]
0x00000000000084b6 : add byte ptr [rax], al ; call qword ptr [rcx]
0x0000000000021de9 : add byte ptr [rax], al ; call rax
0x0000000000108c49 : add byte ptr [rax], al ; call rbx
0x000000000010be13 : add byte ptr [rax], al ; call rcx
0x00000000001296ce : add byte ptr [rax], al ; call rdi
0x0000000000030ebf : add byte ptr [rax], al ; call rdx
0x000000000012887e : add byte ptr [rax], al ; call rsp
0x000000000014f8a6 : add byte ptr [rax], al ; clc ; cmc ; call rsi
0x00000000001479d6 : add byte ptr [rax], al ; clc ; jge 0x1479d0 ; call qword ptr [rsi]
0x0000000000146eb6 : add byte ptr [rax], al ; clc ; ret
0x00000000001444b6 : add byte ptr [rax], al ; clc ; xchg eax, edi ; out dx, al ; jmp qword ptr [rcx]
0x0000000000151136 : add byte ptr [rax], al ; clc ; xor dh, dh ; call rax
0x0000000000157812 : add byte ptr [rax], al ; cld ; add dword ptr [r8], r8d ; mov byte ptr [rax], al ; stc ; call rcx
0x000000000015aa12 : add byte ptr [rax], al ; cld ; ja 0x15aa21 ; add byte ptr [rax - 0x1f], bl ; stc ; call rcx
0x000000000014e812 : add byte ptr [rax], al ; cld ; mov ch, 0 ; add byte ptr [rax], ch ; nop ; hlt ; jmp qword ptr [rcx]
0x0000000000146812 : add byte ptr [rax], al ; cld ; xor eax, 0x42980000 ; out dx, eax ; jmp qword ptr [rbx]
0x000000000011079b : add byte ptr [rax], al ; cmovne eax, edx ; add rsp, 0x78 ; ret
0x0000000000154852 : add byte ptr [rax], al ; cmp al, 0x16 ; add dword ptr [rax], eax ; js 0x1548ca ; clc ; jmp qword ptr [rdx]
0x0000000000144952 : add byte ptr [rax], al ; cmp al, 0x17 ; add byte ptr [rax], al ; cwde ; movsd dword ptr [rdi], dword ptr [rsi] ; out dx, al ; call qword ptr [rdi]
0x000000000015de52 : add byte ptr [rax], al ; cmp al, 0xac ; add dword ptr [rax], eax ; js 0x15de32 ; cli ; jmp qword ptr [rbx]
0x000000000014fd52 : add byte ptr [rax], al ; cmp al, 0xcb ; add byte ptr [rax], al ; test al, 0xe1 ; cmc ; jmp qword ptr [rbx]
0x000000000014b646 : add byte ptr [rax], al ; cmp al, ch ; jmp rbx
0x000000000014d3c6 : add byte ptr [rax], al ; cmp bh, al ; jmp qword ptr [rsi]
0x0000000000151496 : add byte ptr [rax], al ; cmp byte ptr [rbp - 0xa], ch ; call qword ptr [rdi]
0x000000000014fbb6 : add byte ptr [rax], al ; cmp byte ptr [rbp - 0xb], ch ; jmp qword ptr [rbx]
0x0000000000143b86 : add byte ptr [rax], al ; cmp byte ptr [rdi], bl ; out dx, al ; jmp qword ptr [rsi]
0x0000000000148786 : add byte ptr [rax], al ; cmp byte ptr [rdx - 0xe], al ; call rsp
0x0000000000098344 : add byte ptr [rax], al ; cmp eax, 0x13 ; je 0x98358 ; mov edx, eax ; jmp 0x98320
0x000000000009a994 : add byte ptr [rax], al ; cmp eax, 0x13 ; je 0x9a9a8 ; mov edx, eax ; jmp 0x9a970
0x000000000009cf14 : add byte ptr [rax], al ; cmp eax, 0x13 ; je 0x9cf28 ; mov edx, eax ; jmp 0x9cef0
0x00000000000b3184 : add byte ptr [rax], al ; cmp eax, 0xfffff001 ; jae 0xb3197 ; ret
0x00000000000a618b : add byte ptr [rax], al ; cmp edi, edx ; je 0xa61a0 ; mov eax, ecx ; ret
0x00000000001089e7 : add byte ptr [rax], al ; cmp edx, 3 ; jbe 0x1089f7 ; ret
0x00000000000b46bc : add byte ptr [rax], al ; cmp rdx, rcx ; jne 0xb46f8 ; ret
0x000000000014f6a6 : add byte ptr [rax], al ; cwde ; cmp ch, dh ; call qword ptr [rdx]
0x000000000014bb46 : add byte ptr [rax], al ; cwde ; hlt ; call qword ptr [rsi]
0x0000000000144956 : add byte ptr [rax], al ; cwde ; movsd dword ptr [rdi], dword ptr [rsi] ; out dx, al ; call qword ptr [rdi]
0x0000000000146816 : add byte ptr [rax], al ; cwde ; out dx, eax ; jmp qword ptr [rbx]
0x000000000014bd16 : add byte ptr [rax], al ; cwde ; std ; call rsi
0x00000000001448f2 : add byte ptr [rax], al ; fcom qword ptr [rsi] ; add byte ptr [rax], al ; js 0x1448a8 ; out dx, al ; call qword ptr [rdi]
0x000000000014c836 : add byte ptr [rax], al ; fcomp dword ptr [rax - 0xd] ; jmp qword ptr [rbx]
0x0000000000144df2 : add byte ptr [rax], al ; fcomp qword ptr [rbx] ; add byte ptr [rax], al ; test al, 0xdb ; out dx, al ; jmp qword ptr [rbx]
0x000000000014e4d6 : add byte ptr [rax], al ; fdivr dword ptr [rdi - 0xc] ; call qword ptr [rsi]
0x0000000000146df2 : add byte ptr [rax], al ; fdivr qword ptr [rbx] ; add byte ptr [rax], al ; ret 0xffef
0x0000000000161fd2 : add byte ptr [rax], al ; fld dword ptr [rbx] ; add byte ptr [rax], al ; ret
0x0000000000035a57 : add byte ptr [rax], al ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000146aa6 : add byte ptr [rax], al ; fsubr dword ptr [rbp - 0x11] ; jmp rax
0x00000000001460f2 : add byte ptr [rax], al ; fsubr qword ptr [rsi] ; add byte ptr [rax], al ; sub byte ptr [rsi], ch ; out dx, eax ; call qword ptr [rsi]
0x000000000014610a : add byte ptr [rax], al ; hlt ; add byte ptr cs:[rax], al ; xor byte ptr [rsi], ch ; out dx, eax ; jmp qword ptr [rdx]
0x000000000013f59e : add byte ptr [rax], al ; hlt ; and esp, esi ; jmp rsp
0x000000000013df66 : add byte ptr [rax], al ; hlt ; fsubp st(6) ; jmp rsp
0x000000000013f67e : add byte ptr [rax], al ; hlt ; jmp rsp
0x000000000014bb0a : add byte ptr [rax], al ; hlt ; mov byte ptr [rax], al ; add byte ptr [rax - 0xc], dh ; jmp qword ptr [rbx]
0x000000000013e736 : add byte ptr [rax], al ; hlt ; ret
0x000000000014f50a : add byte ptr [rax], al ; hlt ; ret 0
0x000000000013f10e : add byte ptr [rax], al ; hlt ; xchg bl, dh ; jmp rsp
0x0000000000144ffa : add byte ptr [rax], al ; in al, 0x1d ; add byte ptr [rax], al ; loopne 0x144ff5 ; out dx, al ; jmp qword ptr [rsi]
0x000000000013ea86 : add byte ptr [rax], al ; in al, 0x46 ; int1 ; call rsp
0x000000000013f086 : add byte ptr [rax], al ; in al, 0x79 ; jmp rsp
0x000000000015c7fa : add byte ptr [rax], al ; in al, 0x95 ; add dword ptr [rax], eax ; or byte ptr [rdx], 0xfc ; jmp qword ptr [rcx]
0x000000000013e5e6 : add byte ptr [rax], al ; in al, 0xb4 ; out dx, eax ; jmp rsp
0x000000000013f82e : add byte ptr [rax], al ; in al, 0xb5 ; hlt ; call rsp
0x000000000015e8fa : add byte ptr [rax], al ; in al, 0xb6 ; add dword ptr [rax], eax ; adc dh, dh ; cli ; call rdi
0x000000000015eafa : add byte ptr [rax], al ; in al, 0xb8 ; add dword ptr [rax], eax ; and byte ptr [rax], al ; sti ; jmp qword ptr [rax]
0x000000000013ebbe : add byte ptr [rax], al ; in al, 0xd1 ; call rsp
0x000000000013ebfe : add byte ptr [rax], al ; in al, 0xe8 ; jmp rsp
0x000000000013e7a6 : add byte ptr [rax], al ; in al, 0xf6 ; out dx, eax ; jmp rsp
0x000000000013ecc6 : add byte ptr [rax], al ; in al, 3 ; jmp rsp
0x0000000000155802 : add byte ptr [rax], al ; in al, dx ; and eax, 0x9bf80001 ; clc ; jmp rdi
0x000000000015a702 : add byte ptr [rax], al ; in al, dx ; je 0x15a711 ; add byte ptr [rax], cl ; sar ecx, cl ; call qword ptr [rax]
0x000000000015ea02 : add byte ptr [rax], al ; in al, dx ; mov bh, 1 ; add byte ptr [rax - 9], cl ; sti ; jmp qword ptr [rsi]
0x0000000000149b02 : add byte ptr [rax], al ; in al, dx ; push -0x7cf80000 ; jmp qword ptr [rcx]
0x000000000015f502 : add byte ptr [rax], al ; in al, dx ; ret 1
0x000000000014b582 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add dword ptr [rax], 0 ; out 0xf2, eax ; jmp qword ptr [rax]
0x0000000000145282 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; and byte ptr [rax], al ; add byte ptr [rax + 3], cl ; out dx, eax ; jmp qword ptr [rdi]
0x000000000014ee82 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; mov esp, 0x7c80000 ; cmc ; jmp rax
0x0000000000148782 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; push rbp ; add byte ptr [rax], al ; cmp byte ptr [rdx - 0xe], al ; call rsp
0x0000000000158782 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; push rbp ; add dword ptr [rax], eax ; or byte ptr [rax - 7], ah ; jmp qword ptr [rax]
0x0000000000150162 : add byte ptr [rax], al ; iretq ; add byte ptr [rax], al ; js 0x150161 ; cmc ; jmp qword ptr [rdi]
0x0000000000160162 : add byte ptr [rax], al ; iretq ; add dword ptr [rax], eax ; js 0x1601b5 ; sti ; call qword ptr [rsi]
0x000000000013f066 : add byte ptr [rax], al ; ja 0x13f063 ; jmp rsp
0x00000000000d610a : add byte ptr [rax], al ; jbe 0xd6115 ; ret
0x000000000010a1eb : add byte ptr [rax], al ; je 0x10a200 ; add rsp, 0x48 ; ret
0x000000000013eb3e : add byte ptr [rax], al ; je 0x13eb08 ; jmp rsp
0x000000000013eca6 : add byte ptr [rax], al ; je 0x13ecad ; call rsp
0x000000000013f13e : add byte ptr [rax], al ; je 0x13f0d1 ; jmp rsp
0x000000000013f2be : add byte ptr [rax], al ; je 0x13f27e ; call rsp
0x000000000013f57e : add byte ptr [rax], al ; je 0x13f5a1 ; hlt ; call rsp
0x000000000014ca8a : add byte ptr [rax], al ; je 0x14ca2f ; add byte ptr [rax], al ; mov al, 0x61 ; call qword ptr [rdi]
0x000000000014d68a : add byte ptr [rax], al ; je 0x14d63b ; add byte ptr [rax], al ; and al, 0xf4 ; jmp qword ptr [rdi]
0x000000000015368a : add byte ptr [rax], al ; je 0x15369b ; add dword ptr [rax], eax ; jo 0x1536a8 ; clc ; call rsi
0x000000000015a68a : add byte ptr [rax], al ; je 0x15a70b ; add dword ptr [rax], eax ; loopne 0x15a66b ; stc ; call rcx
0x000000000015eb8a : add byte ptr [rax], al ; je 0x15eb50 ; add dword ptr [rax], eax ; mov al, 1 ; sti ; call qword ptr [rsi]
0x0000000000081b8e : add byte ptr [rax], al ; je 0x81b9c ; ret
0x0000000000081bf9 : add byte ptr [rax], al ; je 0x81c05 ; ret
0x00000000000831ea : add byte ptr [rax], al ; je 0x831f4 ; ret
0x00000000000909ee : add byte ptr [rax], al ; je 0x90a08 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000095ff4 : add byte ptr [rax], al ; je 0x96068 ; lea rax, [rdi - 0x10] ; ret
0x00000000000cfa84 : add byte ptr [rax], al ; je 0xcfa95 ; ret
0x00000000000d57ec : add byte ptr [rax], al ; je 0xd57fd ; ret
0x00000000000e8c74 : add byte ptr [rax], al ; je 0xe8c88 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000162aa2 : add byte ptr [rax], al ; jg 0x162ab3 ; add byte ptr [rax], al ; ret
0x00000000000956d3 : add byte ptr [rax], al ; jg 0x956df ; neg eax ; ret
0x0000000000144892 : add byte ptr [rax], al ; jl 0x1448b5 ; add byte ptr [rax], al ; pop rax ; movsd dword ptr [rdi], dword ptr [rsi] ; out dx, al ; call qword ptr [rsi]
0x0000000000149892 : add byte ptr [rax], al ; jl 0x149905 ; add byte ptr [rax], al ; pop rax ; jl 0x149896 ; call rcx
0x0000000000151492 : add byte ptr [rax], al ; jl 0x151481 ; add byte ptr [rax], al ; cmp byte ptr [rbp - 0xa], ch ; call qword ptr [rdi]
0x000000000015a992 : add byte ptr [rax], al ; jl 0x15aa16 ; add dword ptr [rax], eax ; or bh, bl ; stc ; jmp rax
0x000000000015b792 : add byte ptr [rax], al ; jl 0x15b724 ; add dword ptr [rax], eax ; test al, 0x42 ; cli ; jmp qword ptr [rbx]
0x000000000015f692 : add byte ptr [rax], al ; jl 0x15f663 ; add dword ptr [rax], eax ; call 0x2415f1cf
0x00000000000337b1 : add byte ptr [rax], al ; jmp 0x3377a
0x0000000000041bd4 : add byte ptr [rax], al ; jmp 0x41b9d
0x000000000005ad9c : add byte ptr [rax], al ; jmp 0x5812f
0x000000000007d856 : add byte ptr [rax], al ; jmp 0x7d81f
0x000000000007f40b : add byte ptr [rax], al ; jmp 0x7f3b5
0x00000000000d78f9 : add byte ptr [rax], al ; jmp 0xd78c3
0x000000000014c57e : add byte ptr [rax], al ; jmp qword ptr [rdx]
0x00000000000498e4 : add byte ptr [rax], al ; jmp rax
0x000000000014c4cf : add byte ptr [rax], al ; jmp rdx
0x0000000000114e99 : add byte ptr [rax], al ; jne 0x114ea4 ; ret
0x0000000000114ed9 : add byte ptr [rax], al ; jne 0x114ee4 ; ret
0x000000000003ab63 : add byte ptr [rax], al ; jne 0x3aba0 ; add rsp, 8 ; ret
0x000000000003d403 : add byte ptr [rax], al ; jne 0x3d440 ; add rsp, 8 ; ret
0x000000000003fc83 : add byte ptr [rax], al ; jne 0x3fcc0 ; add rsp, 8 ; ret
0x0000000000095c94 : add byte ptr [rax], al ; jne 0x95c8d ; ret
0x0000000000098563 : add byte ptr [rax], al ; jne 0x985a0 ; add rsp, 8 ; ret
0x000000000009abc3 : add byte ptr [rax], al ; jne 0x9ac00 ; add rsp, 8 ; ret
0x000000000009d133 : add byte ptr [rax], al ; jne 0x9d170 ; add rsp, 8 ; ret
0x000000000013e2ae : add byte ptr [rax], al ; jns 0x13e2a7 ; call rsp
0x00000000001448de : add byte ptr [rax], al ; jo 0x14488c ; out dx, al ; call qword ptr [rdi]
0x00000000001452ce : add byte ptr [rax], al ; jo 0x1452da ; out dx, eax ; call qword ptr [rsi]
0x00000000001485be : add byte ptr [rax], al ; jo 0x1485ff ; jmp qword ptr [rsi]
0x000000000014bb0e : add byte ptr [rax], al ; jo 0x14bb0b ; jmp qword ptr [rbx]
0x000000000014db2e : add byte ptr [rax], al ; jo 0x14db6c ; hlt ; call rax
0x000000000014de9e : add byte ptr [rax], al ; jo 0x14df00 ; hlt ; jmp qword ptr [rdx]
0x000000000014e85e : add byte ptr [rax], al ; jo 0x14e7f7 ; hlt ; jmp qword ptr [rbx]
0x000000000014ac5a : add byte ptr [rax], al ; jp 0x14ac66 ; add byte ptr [rax], dh ; ret 0xfff2
0x00000000001448f6 : add byte ptr [rax], al ; js 0x1448a4 ; out dx, al ; call qword ptr [rdi]
0x000000000014d1c6 : add byte ptr [rax], al ; js 0x14d185 ; jmp qword ptr [rcx]
0x0000000000150166 : add byte ptr [rax], al ; js 0x15015d ; cmc ; jmp qword ptr [rdi]
0x0000000000096c60 : add byte ptr [rax], al ; lea r9, [rsp + 0x20] ; call rbx
0x0000000000096306 : add byte ptr [rax], al ; lea rax, [rdi + 8] ; ret
0x00000000000b9795 : add byte ptr [rax], al ; lea rax, [rdi + rsi*8] ; jmp 0xb9767
0x0000000000095ecb : add byte ptr [rax], al ; lea rax, [rdi - 0x10] ; ret
0x000000000009602e : add byte ptr [rax], al ; lea rax, [rdi - 0xc] ; ret
0x000000000009604e : add byte ptr [rax], al ; lea rax, [rdi - 4] ; ret
0x000000000009603e : add byte ptr [rax], al ; lea rax, [rdi - 8] ; ret
0x000000000007f682 : add byte ptr [rax], al ; lea rax, [rip + 0x2e9f95] ; ret
0x00000000000fcf8e : add byte ptr [rax], al ; lea rdi, [rip + 0x2708c5] ; call rax
0x0000000000042724 : add byte ptr [rax], al ; lea rsi, [rip + 0x1f3] ; call rax
0x000000000006e01f : add byte ptr [rax], al ; lea rsi, [rip + 0x38] ; call rax
0x000000000007a14f : add byte ptr [rax], al ; lea rsi, [rip - 0x1508] ; call rax
0x000000000007a5d7 : add byte ptr [rax], al ; lea rsi, [rip - 0x1990] ; call rax
0x0000000000078f17 : add byte ptr [rax], al ; lea rsi, [rip - 0x2d0] ; call rax
0x000000000006e32f : add byte ptr [rax], al ; lea rsi, [rip - 0x2d8] ; call rax
0x00000000000791d7 : add byte ptr [rax], al ; lea rsi, [rip - 0x590] ; call rax
0x0000000000146cc2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; cmp al, byte ptr [rax] ; add byte ptr [rax - 0x49], ch ; out dx, eax ; jmp rcx
0x000000000014d1c2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; lahf ; add byte ptr [rax], al ; js 0x14d189 ; jmp qword ptr [rcx]
0x000000000014f5c2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x0000000000144cc2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; sbb al, byte ptr [rax] ; add byte ptr [rax - 0x3e], cl ; out dx, al ; jmp qword ptr [rcx]
0x00000000001441c2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; sldt word ptr [rax] ; or byte ptr [rdx - 0x12], bh ; jmp qword ptr [rdx]
0x000000000015b8c2 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; xchg byte ptr [rcx], al ; add byte ptr [rax], cl ; cli ; call qword ptr [rsi]
0x0000000000143f6e : add byte ptr [rax], al ; loopne 0x143fe8 ; out dx, al ; jmp rsp
0x0000000000144ffe : add byte ptr [rax], al ; loopne 0x144ff1 ; out dx, al ; jmp qword ptr [rsi]
0x00000000001476de : add byte ptr [rax], al ; loopne 0x1476e6 ; out dx, eax ; jmp qword ptr [rdi]
0x000000000014ca1e : add byte ptr [rax], al ; loopne 0x14ca39 ; std ; jmp qword ptr [rcx]
0x000000000013f8d6 : add byte ptr [rax], al ; mov ah, 0x17 ; cmc ; jmp rsp
0x00000000001452ca : add byte ptr [rax], al ; mov ah, 0x20 ; add byte ptr [rax], al ; jo 0x1452de ; out dx, eax ; call qword ptr [rsi]
0x00000000001467ca : add byte ptr [rax], al ; mov ah, 0x35 ; add byte ptr [rax], al ; push rax ; out dx, eax ; jmp qword ptr [rcx]
0x000000000014adca : add byte ptr [rax], al ; mov ah, 0x7b ; add byte ptr [rax], al ; ror cl, 1 ; jmp qword ptr [rcx]
0x000000000014c4ca : add byte ptr [rax], al ; mov ah, 0x92 ; add byte ptr [rax], al ; add byte ptr [rcx - 0xd], al ; jmp rdx
0x000000000013eb16 : add byte ptr [rax], al ; mov ah, 0xbb ; jmp rsp
0x0000000000162ed2 : add byte ptr [rax], al ; mov ah, 5 ; add byte ptr [rax], al ; ret
0x000000000014682e : add byte ptr [rax], al ; mov al, 0x42 ; out dx, eax ; jmp qword ptr [rcx]
0x000000000014ca8e : add byte ptr [rax], al ; mov al, 0x61 ; call qword ptr [rdi]
0x000000000014543e : add byte ptr [rax], al ; mov al, 7 ; out dx, eax ; call qword ptr [rdi]
0x0000000000149466 : add byte ptr [rax], al ; mov byte ptr [rdi - 0xe], ch ; jmp qword ptr [rsi]
0x00000000001023b6 : add byte ptr [rax], al ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x00000000000f0e2e : add byte ptr [rax], al ; mov dword ptr [r9], r8d ; xor eax, eax ; ret
0x0000000000025432 : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; jmp 0x253ff
0x0000000000052119 : add byte ptr [rax], al ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000047118 : add byte ptr [rax], al ; mov dword ptr [rdx], ecx ; ret
0x00000000000d6028 : add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000daf24 : add byte ptr [rax], al ; mov eax, 0x10f ; syscall
0x00000000000e384d : add byte ptr [rax], al ; mov eax, 0x121 ; syscall
0x00000000000b46ee : add byte ptr [rax], al ; mov eax, 0x20 ; ret
0x00000000000b316f : add byte ptr [rax], al ; mov eax, 0x3a ; syscall
0x00000000000b462e : add byte ptr [rax], al ; mov eax, 0x7e ; ret
0x00000000000b455e : add byte ptr [rax], al ; mov eax, 0x7f ; ret
0x0000000000036217 : add byte ptr [rax], al ; mov eax, 0x7f ; syscall
0x0000000000036251 : add byte ptr [rax], al ; mov eax, 0x82 ; syscall
0x00000000000f07b4 : add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x000000000004502c : add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x00000000000b4d2d : add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x00000000000dd2d4 : add byte ptr [rax], al ; mov eax, 0xffffffff ; jmp 0xdd2a7
0x000000000011b389 : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x00000000000348a4 : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000002b5fe : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000d9607 : add byte ptr [rax], al ; mov eax, 1 ; pop rbx ; ret
0x0000000000047144 : add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000001084a0 : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x20] ; mov dword ptr [rsi + 8], eax ; ret
0x0000000000077415 : add byte ptr [rax], al ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dc3be : add byte ptr [rax], al ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000dff3c : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000082258 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x00000000000a619b : add byte ptr [rax], al ; mov eax, ecx ; ret
0x00000000000b3d96 : add byte ptr [rax], al ; mov eax, ecx ; syscall
0x0000000000022612 : add byte ptr [rax], al ; mov eax, edi ; ret
0x00000000000e929b : add byte ptr [rax], al ; mov eax, edx ; add rsp, 8 ; ret
0x00000000000f21ce : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006a212 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000051817 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x00000000000f23ad : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x00000000000742c4 : add byte ptr [rax], al ; mov eax, esi ; ret
0x00000000000b2afd : add byte ptr [rax], al ; mov edi, dword ptr [rsp + 0xc] ; movsxd r10, ecx ; syscall
0x00000000000f4085 : add byte ptr [rax], al ; mov edx, dword ptr [rbx] ; jmp 0xf4053
0x00000000000e96ae : add byte ptr [rax], al ; mov edx, eax ; jmp 0xe969f
0x00000000000f086a : add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x00000000000fe5c5 : add byte ptr [rax], al ; mov esi, dword ptr fs:[rdx] ; syscall
0x000000000014f8a2 : add byte ptr [rax], al ; mov esi, es ; add byte ptr [rax], al ; clc ; cmc ; call rsi
0x00000000000dc417 : add byte ptr [rax], al ; mov esi, esi ; movsxd rdi, edi ; mov eax, ecx ; syscall
0x00000000001618d2 : add byte ptr [rax], al ; mov esp, 0x880001e6 ; movsd dword ptr [rdi], dword ptr [rsi] ; sti ; jmp rdx
0x000000000014e4d2 : add byte ptr [rax], al ; mov esp, 0xd80000b2 ; jg 0x14e4d8 ; call qword ptr [rsi]
0x00000000001479d2 : add byte ptr [rax], al ; mov esp, 0xf8000047 ; jge 0x1479d4 ; call qword ptr [rsi]
0x000000000014f6a2 : add byte ptr [rax], al ; mov esp, es ; add byte ptr [rax], al ; cwde ; cmp ch, dh ; call qword ptr [rdx]
0x00000000000efb52 : add byte ptr [rax], al ; mov qword ptr [rbp - 0x70], rdx ; mov rdx, r12 ; call rax
0x0000000000114825 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x18], rdx ; ret
0x0000000000114f2e : add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; ret
0x000000000008e9be : add byte ptr [rax], al ; mov qword ptr [rdi], rcx ; ret
0x000000000006b5fe : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x0000000000074ca0 : add byte ptr [rax], al ; mov qword ptr [rdx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000010ec4f : add byte ptr [rax], al ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x00000000001084dc : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000039ef7 : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x00000000000d5730 : add byte ptr [rax], al ; mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x00000000001084b4 : add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x000000000007b580 : add byte ptr [rax], al ; mov qword ptr [rsi], rax ; mov rax, r8 ; ret
0x00000000000f4d9e : add byte ptr [rax], al ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x0000000000107add : add byte ptr [rax], al ; mov qword ptr [rsp], rax ; call qword ptr [r11]
0x000000000002f04e : add byte ptr [rax], al ; mov qword ptr fs:[rax], rdx ; ret
0x000000000011145f : add byte ptr [rax], al ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00000000000f0fb5 : add byte ptr [rax], al ; mov r10, rcx ; syscall
0x00000000000abd6e : add byte ptr [rax], al ; mov r10d, r8d ; jmp 0xabd48
0x0000000000101700 : add byte ptr [rax], al ; mov r9d, dword ptr [rdx + 0x14] ; jmp 0x1016d1
0x0000000000035e7c : add byte ptr [rax], al ; mov rax, -1 ; ret
0x00000000000959fe : add byte ptr [rax], al ; mov rax, 1 ; ret
0x0000000000095a0e : add byte ptr [rax], al ; mov rax, 2 ; ret
0x0000000000095a1e : add byte ptr [rax], al ; mov rax, 3 ; ret
0x0000000000095a2e : add byte ptr [rax], al ; mov rax, 4 ; ret
0x0000000000095a3e : add byte ptr [rax], al ; mov rax, 5 ; ret
0x0000000000095a4e : add byte ptr [rax], al ; mov rax, 6 ; ret
0x0000000000095a5e : add byte ptr [rax], al ; mov rax, 7 ; ret
0x00000000000e33c6 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x0000000000039290 : add byte ptr [rax], al ; mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000113b86 : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x0000000000119819 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x250f06] ; call qword ptr [rax]
0x00000000001191a9 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x251576] ; call qword ptr [rax]
0x00000000000dd641 : add byte ptr [rax], al ; mov rax, qword ptr [rsp - 0x50] ; ret
0x00000000000f9d36 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d7a87 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000069781 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000003965c : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x0000000000034824 : add byte ptr [rax], al ; mov rax, rcx ; pop rbx ; ret
0x000000000003482e : add byte ptr [rax], al ; mov rax, rcx ; ret
0x00000000000f34ee : add byte ptr [rax], al ; mov rax, rdi ; add rsp, 8 ; ret
0x000000000006f6c7 : add byte ptr [rax], al ; mov rax, rdi ; jmp 0x6f696
0x000000000008e3be : add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000001199ba : add byte ptr [rax], al ; mov rax, rdx ; add rsp, 8 ; ret
0x000000000007fd82 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006d2e3 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x000000000007a69e : add byte ptr [rax], al ; mov rcx, qword ptr [rdi] ; mov qword ptr [rdx], rcx ; ret
0x0000000000097502 : add byte ptr [rax], al ; mov rcx, r13 ; mov rdi, rbp ; call rbx
0x00000000000daf7a : add byte ptr [rax], al ; mov rdi, qword ptr [rsp + 8] ; syscall
0x000000000011129b : add byte ptr [rax], al ; mov rdi, r13 ; call qword ptr [rax]
0x00000000000827ab : add byte ptr [rax], al ; mov rdi, r14 ; mov rdx, r15 ; call rax
0x00000000000ed2db : add byte ptr [rax], al ; mov rdi, rbp ; call 0x79567
0x000000000010767d : add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rax]
0x0000000000108ebb : add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rbx]
0x00000000000831b6 : add byte ptr [rax], al ; mov rdi, rbx ; call 0x1f477
0x000000000010747a : add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [rax]
0x000000000006b4d4 : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x00000000000d5dfe : add byte ptr [rax], al ; mov rdi, rdx ; syscall
0x00000000001138f2 : add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x0000000000096ec3 : add byte ptr [rax], al ; mov rdx, r13 ; mov rdi, rbp ; call rbx
0x0000000000057eb0 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x3110a7] ; call rax
0x000000000005285c : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x3166fb] ; call rax
0x000000000004cf38 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x31c01f] ; call rax
0x0000000000047c04 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x321353] ; call rax
0x00000000001183ad : add byte ptr [rax], al ; mov rsi, r12 ; mov edi, ebx ; call 0xe4649
0x0000000000036d88 : add byte ptr [rax], al ; mov rsi, r8 ; mov eax, ecx ; syscall
0x0000000000036065 : add byte ptr [rax], al ; mov rsi, rax ; mov eax, ecx ; syscall
0x0000000000108c8c : add byte ptr [rax], al ; mov rsi, rbp ; call rbx
0x00000000000830ca : add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000011a841 : add byte ptr [rax], al ; mov rsi, rbx ; call 0xd6a74
0x0000000000082da1 : add byte ptr [rax], al ; mov rsi, rbx ; mov rdi, r13 ; call rdx
0x00000000000b2887 : add byte ptr [rax], al ; mov rsi, rdi ; mov eax, ecx ; syscall
0x000000000014e85a : add byte ptr [rax], al ; mov sil, 0 ; add byte ptr [rax - 0x70], dh ; hlt ; jmp qword ptr [rbx]
0x00000000001572a2 : add byte ptr [rax], al ; mov word ptr [rax + 1], es ; add byte ptr [rax - 0x16], ch ; clc ; call qword ptr [rdi]
0x00000000000d57f6 : add byte ptr [rax], al ; mov word ptr [rdi], si ; xor al, al ; ret
0x0000000000039f41 : add byte ptr [rax], al ; mov word ptr [rsi + 0xc], ax ; xor eax, eax ; ret
0x0000000000039f88 : add byte ptr [rax], al ; mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x00000000001544ba : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; adc al, byte ptr [rcx] ; add al, al ; mov edi, esp ; jmp qword ptr [rsi]
0x000000000013e306 : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; jl 0x13e2ff ; jmp rsp
0x000000000014e8ba : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; mov dh, 0 ; add al, dl ; nop ; hlt ; jmp qword ptr [rbx]
0x000000000015f0ba : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; mov esi, 0x1c500001 ; sti ; jmp qword ptr [rax]
0x000000000013e53e : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; movsb byte ptr [rdi], byte ptr [rsi] ; out dx, eax ; jmp rsp
0x00000000001485ba : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; push rbx ; add byte ptr [rax], al ; jo 0x148603 ; jmp qword ptr [rsi]
0x000000000014f4ba : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0
0x000000000015f4ba : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 1
0x00000000001605ba : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; rol dword ptr [rcx], cl ; add byte ptr [rax + 0x46], dl ; sti ; call rdx
0x0000000000144836 : add byte ptr [rax], al ; movsq qword ptr [rdi], qword ptr [rsi] ; out dx, al ; jmp qword ptr [rcx]
0x000000000006b67e : add byte ptr [rax], al ; movsxd rax, dword ptr [r8 + rax*4] ; add rax, r8 ; jmp rax
0x00000000000dbed0 : add byte ptr [rax], al ; movsxd rdi, dword ptr [rsp + 0xc] ; mov eax, ecx ; syscall
0x000000000004292f : add byte ptr [rax], al ; movsxd rdi, ebx ; syscall
0x00000000000dbd64 : add byte ptr [rax], al ; movsxd rdi, edi ; mov eax, ecx ; syscall
0x000000000010056e : add byte ptr [rax], al ; movsxd rsi, esi ; mov byte ptr [rdi + rsi], 0 ; ret
0x00000000000cfb1e : add byte ptr [rax], al ; movzx eax, byte ptr [rdi + 9] ; and eax, 0xf ; ret
0x000000000014e82e : add byte ptr [rax], al ; nop ; hlt ; jmp qword ptr [rbx]
0x000000000014952e : add byte ptr [rax], al ; nop ; jno 0x14952a ; call rdi
0x000000000014493e : add byte ptr [rax], al ; nop ; movsd dword ptr [rdi], dword ptr [rsi] ; out dx, al ; call qword ptr [rsi]
0x0000000000021abc : add byte ptr [rax], al ; nop ; nop dword ptr [rax - 0x56] ; ret
0x00000000000854f2 : add byte ptr [rax], al ; nop dword ptr [rax - 0x34] ; jmp 0x854c3
0x000000000006c54b : add byte ptr [rax], al ; nop dword ptr [rax - 0x34] ; mov edx, eax ; jmp 0x6c547
0x000000000006f14f : add byte ptr [rax], al ; nop dword ptr [rax - 0x34] ; mov edx, eax ; jmp 0x6f0f0
0x000000000006f21c : add byte ptr [rax], al ; nop dword ptr [rax - 0x34] ; mov edx, eax ; jmp 0x6f212
0x000000000006f30e : add byte ptr [rax], al ; nop dword ptr [rax - 0x34] ; mov edx, eax ; jmp 0x6f2c0
0x000000000006f4b8 : add byte ptr [rax], al ; nop dword ptr [rax - 0x34] ; mov edx, eax ; jmp 0x6f462
0x000000000006fe6a : add byte ptr [rax], al ; nop dword ptr [rax - 0x34] ; mov edx, eax ; jmp 0x6fe19
0x0000000000070036 : add byte ptr [rax], al ; nop dword ptr [rax - 0x34] ; mov edx, eax ; jmp 0x6ffdb
0x00000000000701fc : add byte ptr [rax], al ; nop dword ptr [rax - 0x34] ; mov edx, eax ; jmp 0x701a0
0x0000000000074510 : add byte ptr [rax], al ; nop dword ptr [rax - 0x34] ; mov edx, eax ; jmp 0x744be
0x0000000000074aa5 : add byte ptr [rax], al ; nop dword ptr [rax - 0x34] ; mov edx, eax ; jmp 0x74a57
0x0000000000074c00 : add byte ptr [rax], al ; nop dword ptr [rax - 0x34] ; mov edx, eax ; jmp 0x74ba9
0x0000000000074bff : add byte ptr [rax], al ; nop dword ptr [rax - 0x34] ; mov edx, eax ; jmp 0x74baa
0x0000000000074f30 : add byte ptr [rax], al ; nop dword ptr [rax - 0x34] ; mov edx, eax ; jmp 0x74ede
0x0000000000070ea2 : add byte ptr [rax], al ; nop dword ptr [rax - 0x34] ; pop rbx ; ret
0x00000000000702a0 : add byte ptr [rax], al ; nop dword ptr [rax - 0x34] ; pop rdx ; ret
0x000000000009389e : add byte ptr [rax], al ; nop dword ptr [rax - 0x45] ; xor eax, eax ; ret
0x000000000007673e : add byte ptr [rax], al ; nop dword ptr [rax - 0x56] ; and dword ptr [rdi], 0xffffffcf ; ret
0x000000000007a99e : add byte ptr [rax], al ; nop dword ptr [rax - 0x56] ; mov rax, rdi ; ret
0x0000000000021ace : add byte ptr [rax], al ; nop dword ptr [rax - 0x56] ; ret
0x000000000007383e : add byte ptr [rax], al ; nop dword ptr [rax - 0x56] ; xor eax, eax ; ret
0x0000000000155422 : add byte ptr [rax], al ; or al, 0x22 ; add dword ptr [rax], eax ; call 0x27154cbd
0x0000000000146922 : add byte ptr [rax], al ; or al, 0x37 ; add byte ptr [rax], al ; test al, 0x46 ; out dx, eax ; jmp rax
0x000000000015b422 : add byte ptr [rax], al ; or al, 0x82 ; add dword ptr [rax], eax ; test al, 0x1e ; cli ; call rcx
0x000000000015fa22 : add byte ptr [rax], al ; or al, 0xc8 ; add dword ptr [rax], eax ; call 0xffffffffd315f567
0x00000000001441c6 : add byte ptr [rax], al ; or byte ptr [rdx - 0x12], bh ; jmp qword ptr [rdx]
0x00000000001484b6 : add byte ptr [rax], al ; or byte ptr [rdx], ch ; call rcx
0x00000000000361aa : add byte ptr [rax], al ; or eax, 0xffffffff ; ret
0x00000000000341db : add byte ptr [rax], al ; or qword ptr [rsp + 0x38], 9 ; jmp 0x341b0
0x000000000014b586 : add byte ptr [rax], al ; out 0xf2, eax ; jmp qword ptr [rax]
0x000000000006f991 : add byte ptr [rax], al ; pop r12 ; ret
0x0000000000051758 : add byte ptr [rax], al ; pop r13 ; ret
0x0000000000051682 : add byte ptr [rax], al ; pop r14 ; ret
0x0000000000149896 : add byte ptr [rax], al ; pop rax ; jl 0x149892 ; call rcx
0x0000000000149895 : add byte ptr [rax], al ; pop rax ; jl 0x149893 ; call rcx
0x0000000000144896 : add byte ptr [rax], al ; pop rax ; movsd dword ptr [rdi], dword ptr [rsi] ; out dx, al ; call qword ptr [rsi]
0x000000000014e846 : add byte ptr [rax], al ; pop rax ; nop ; hlt ; jmp qword ptr [rcx]
0x00000000000e358b : add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x00000000000e5949 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000094639 : add byte ptr [rax], al ; pop rbx ; and eax, 0x3fc00 ; ret
0x0000000000039414 : add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000006e604 : add byte ptr [rax], al ; pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; ret
0x000000000006dc98 : add byte ptr [rax], al ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x00000000000f1077 : add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000051539 : add byte ptr [rax], al ; pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x00000000000f268e : add byte ptr [rax], al ; pop rbx ; pop rbp ; mov eax, esi ; pop r12 ; ret
0x000000000006e863 : add byte ptr [rax], al ; pop rbx ; pop rbp ; mov rax, rdx ; pop r12 ; ret
0x000000000001fed1 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000021f5d : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000243e7 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000114bf6 : add byte ptr [rax], al ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x000000000002bb54 : add byte ptr [rax], al ; pop rbx ; ret
0x000000000013d42e : add byte ptr [rax], al ; pop rcx ; clc ; ret 0x6e1f
0x000000000015b372 : add byte ptr [rax], al ; pop rsp ; add dword ptr [rcx], 0xfa1ba800 ; jmp rax
0x0000000000146e72 : add byte ptr [rax], al ; pop rsp ; cmp al, 0 ; add byte ptr [rax], bl ; ret
0x000000000015fa72 : add byte ptr [rax], al ; pop rsp ; enter 1, 0x78 ; xor al, 0xfb ; jmp rsp
0x000000000015a372 : add byte ptr [rax], al ; pop rsp ; jno 0x15a37f ; add byte ptr [rax], cl ; ret 0xfff9
0x000000000014bd72 : add byte ptr [rax], al ; pop rsp ; mov eax, dword ptr [rax] ; add byte ptr [rax], bl ; push rdx ; jmp rsp
0x0000000000149a72 : add byte ptr [rax], al ; pop rsp ; push -0x7f080000 ; jmp rsi
0x0000000000158872 : add byte ptr [rax], al ; pop rsp ; push rsi ; add dword ptr [rax], eax ; cmp byte ptr [rbx - 7], ah ; jmp qword ptr [rax]
0x000000000015f272 : add byte ptr [rax], al ; pop rsp ; rol byte ptr [rcx], 0 ; cwde ; sti ; call rdx
0x000000000014f57e : add byte ptr [rax], al ; push rax ; cmc ; jmp qword ptr [rbx]
0x000000000014487e : add byte ptr [rax], al ; push rax ; movsd dword ptr [rdi], dword ptr [rsi] ; out dx, al ; call qword ptr [rbx]
0x000000000014349e : add byte ptr [rax], al ; push rax ; out dx, eax ; in eax, dx ; jmp rdx
0x00000000001467ce : add byte ptr [rax], al ; push rax ; out dx, eax ; jmp qword ptr [rcx]
0x000000000013dbcc : add byte ptr [rax], al ; push rax ; pop r9 ; clc ; ret 0x6e1f
0x000000000013e0d6 : add byte ptr [rax], al ; push rsp ; adc edi, ebp ; jmp rsp
0x000000000015a96a : add byte ptr [rax], al ; push rsp ; ja 0x15a979 ; add byte ptr [rax - 0x22], dl ; stc ; call rcx
0x000000000014a36a : add byte ptr [rax], al ; push rsp ; jno 0x14a378 ; add al, al ; stosb byte ptr [rdi], al ; call qword ptr [rsi]
0x000000000015de6a : add byte ptr [rax], al ; push rsp ; lodsb al, byte ptr [rsi] ; add dword ptr [rax], eax ; nop ; iretd ; cli ; jmp qword ptr [rbx]
0x000000000015bd6a : add byte ptr [rax], al ; push rsp ; mov eax, dword ptr [rcx] ; add al, dh ; and bh, ah ; jmp qword ptr [rdi]
0x0000000000143f6a : add byte ptr [rax], al ; push rsp ; or eax, 0x71e00000 ; out dx, al ; jmp rsp
0x000000000015046a : add byte ptr [rax], al ; push rsp ; rol byte ptr [rax], cl ; add byte ptr [rax - 6], ah ; cmc ; call rcx
0x000000000013ee16 : add byte ptr [rax], al ; push rsp ; sub esi, ebx ; call rsp
0x00000000001444b2 : add byte ptr [rax], al ; pushfq ; adc al, byte ptr [rax] ; add al, bh ; xchg eax, edi ; out dx, al ; jmp qword ptr [rcx]
0x00000000001452b2 : add byte ptr [rax], al ; pushfq ; and byte ptr [rax], al ; add byte ptr [rax + 3], ch ; out dx, eax ; call qword ptr [rsi]
0x0000000000146eb2 : add byte ptr [rax], al ; pushfq ; cmp al, 0 ; add al, bh ; ret
0x00000000001601b2 : add byte ptr [rax], al ; pushfq ; iretd ; add dword ptr [rax], eax ; sbb byte ptr [rbx - 5], al ; call qword ptr [rsi]
0x000000000014fbb2 : add byte ptr [rax], al ; pushfq ; leave ; add byte ptr [rax], al ; cmp byte ptr [rbp - 0xb], ch ; jmp qword ptr [rbx]
0x000000000015e3b2 : add byte ptr [rax], al ; pushfq ; mov cl, 1 ; add byte ptr [rax], cl ; out 0xfa, eax ; jmp qword ptr [rbx]
0x000000000015beb2 : add byte ptr [rax], al ; pushfq ; mov word ptr [rcx], es ; add byte ptr [rax], bh ; pop rsp ; cli ; jmp qword ptr [rsi]
0x00000000001484b2 : add byte ptr [rax], al ; pushfq ; push rdx ; add byte ptr [rax], al ; or byte ptr [rdx], ch ; call rcx
0x00000000001466b2 : add byte ptr [rax], al ; pushfq ; xor al, 0 ; add al, ch ; cmp edi, ebp ; jmp qword ptr [rbx]
0x000000000000094f : add byte ptr [rax], al ; ret
0x000000000011fa26 : add byte ptr [rax], al ; ret 0
0x0000000000126c66 : add byte ptr [rax], al ; ret 0x12
0x0000000000010616 : add byte ptr [rax], al ; ret 0x1d
0x000000000012869e : add byte ptr [rax], al ; ret 0x1d4
0x0000000000128e36 : add byte ptr [rax], al ; ret 0x1d5
0x000000000000636e : add byte ptr [rax], al ; ret 0x1f
0x00000000001276a6 : add byte ptr [rax], al ; ret 0x24
0x0000000000000524 : add byte ptr [rax], al ; ret 0x2800
0x000000000000a226 : add byte ptr [rax], al ; ret 0x2c
0x000000000000d5e6 : add byte ptr [rax], al ; ret 0x31
0x000000000000fffe : add byte ptr [rax], al ; ret 0x33
0x000000000000a8b6 : add byte ptr [rax], al ; ret 0x34
0x000000000000a3ee : add byte ptr [rax], al ; ret 0x42
0x00000000000077f6 : add byte ptr [rax], al ; ret 0x44
0x000000000000085e : add byte ptr [rax], al ; ret 0x440c
0x0000000000007ade : add byte ptr [rax], al ; ret 0x58
0x0000000000126466 : add byte ptr [rax], al ; ret 0xc
0x0000000000126866 : add byte ptr [rax], al ; ret 0xf
0x0000000000144cc6 : add byte ptr [rax], al ; ret 0xffee
0x0000000000146dde : add byte ptr [rax], al ; ret 0xffef
0x000000000013eb5e : add byte ptr [rax], al ; ret 0xfff2
0x0000000000000df6 : add byte ptr [rax], al ; ret 1
0x0000000000000fe6 : add byte ptr [rax], al ; ret 2
0x0000000000129e62 : add byte ptr [rax], al ; ret 3
0x000000000012a062 : add byte ptr [rax], al ; ret 4
0x0000000000125c8e : add byte ptr [rax], al ; ret 5
0x000000000000e447 : add byte ptr [rax], al ; ret 6
0x00000000000018c2 : add byte ptr [rax], al ; ret 7
0x000000000012a862 : add byte ptr [rax], al ; ret 8
0x0000000000126066 : add byte ptr [rax], al ; ret 9
0x000000000012a05e : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x000000000015f25a : add byte ptr [rax], al ; rol byte ptr [rcx], 0 ; and ebx, edi ; call qword ptr [rdi]
0x0000000000162326 : add byte ptr [rax], al ; rol byte ptr [rdx], cl ; add byte ptr [rax], al ; ret 6
0x00000000001458ae : add byte ptr [rax], al ; ror byte ptr [rdi], 1 ; out dx, eax ; jmp qword ptr [rcx]
0x000000000014adce : add byte ptr [rax], al ; ror cl, 1 ; jmp qword ptr [rcx]
0x000000000014642e : add byte ptr [rax], al ; sal byte ptr [rsi], 1 ; out dx, eax ; call qword ptr [rsi]
0x000000000014669e : add byte ptr [rax], al ; sar byte ptr [rcx], 1 ; out dx, eax ; jmp qword ptr [rcx]
0x00000000001308be : add byte ptr [rax], al ; sar dh, 0xf4 ; ljmp ptr [rax] ; push rsp ; call rax
0x0000000000144832 : add byte ptr [rax], al ; sbb al, 0x16 ; add byte ptr [rax], al ; movsq qword ptr [rdi], qword ptr [rsi] ; out dx, al ; jmp qword ptr [rcx]
0x0000000000156832 : add byte ptr [rax], al ; sbb al, 0x36 ; add dword ptr [rax], eax ; js 0x156813 ; clc ; jmp qword ptr [rdi]
0x000000000014c032 : add byte ptr [rax], al ; sbb al, 0x8e ; add byte ptr [rax], al ; test al, 0x25 ; jmp rdx
0x000000000014c832 : add byte ptr [rax], al ; sbb al, 0x96 ; add byte ptr [rax], al ; fcomp dword ptr [rax - 0xd] ; jmp qword ptr [rbx]
0x000000000015ed32 : add byte ptr [rax], al ; sbb al, 0xbb ; add dword ptr [rax], eax ; or byte ptr [rax], cl ; sti ; call rdi
0x0000000000151132 : add byte ptr [rax], al ; sbb al, 0xdf ; add byte ptr [rax], al ; clc ; xor dh, dh ; call rax
0x000000000014bd76 : add byte ptr [rax], al ; sbb bh, bh ; jmp rsp
0x0000000000017ad4 : add byte ptr [rax], al ; sbb byte ptr [rax], al ; ret 0x58
0x00000000000cfb0e : add byte ptr [rax], al ; setne al ; lea eax, [rax + rax*8 + 5] ; ret
0x0000000000145dde : add byte ptr [rax], al ; shl byte ptr [rbx], 0xef ; jmp rsp
0x000000000015fe9f : add byte ptr [rax], al ; sti ; call qword ptr [rsi]
0x0000000000144b1f : add byte ptr [rax], al ; stosb byte ptr [rdi], al ; out dx, al ; jmp qword ptr [rdi]
0x000000000013f7ee : add byte ptr [rax], al ; stosd dword ptr [rdi], eax ; hlt ; jmp rsp
0x000000000013001f : add byte ptr [rax], al ; stosd dword ptr [rdi], eax ; jmp qword ptr [rax]
0x000000000015f456 : add byte ptr [rax], al ; sub al, 0 ; add byte ptr [rax], al ; ret 1
0x0000000000158d42 : add byte ptr [rax], al ; sub al, 0x5b ; add dword ptr [rax], eax ; pop rax ; jp 0x158d4d ; jmp qword ptr [rax]
0x000000000014b642 : add byte ptr [rax], al ; sub al, 0x84 ; add byte ptr [rax], al ; cmp al, ch ; jmp rbx
0x000000000014bb42 : add byte ptr [rax], al ; sub al, 0x89 ; add byte ptr [rax], al ; cwde ; hlt ; call qword ptr [rsi]
0x000000000015e642 : add byte ptr [rax], al ; sub al, 0xb4 ; add dword ptr [rax], eax ; mov ch, ch ; cli ; call qword ptr [rsi]
0x000000000014e842 : add byte ptr [rax], al ; sub al, 0xb6 ; add byte ptr [rax], al ; pop rax ; nop ; hlt ; jmp qword ptr [rcx]
0x000000000015f242 : add byte ptr [rax], al ; sub al, 0xc0 ; add dword ptr [rax], eax ; sub byte ptr [rcx], ah ; sti ; jmp qword ptr [rdx]
0x000000000014f542 : add byte ptr [rax], al ; sub al, 0xc3 ; add byte ptr [rax], al ; sub byte ptr [rsi], dh ; cmc ; jmp qword ptr [rdx]
0x00000000001460f6 : add byte ptr [rax], al ; sub byte ptr [rsi], ch ; out dx, eax ; call qword ptr [rsi]
0x000000000014f546 : add byte ptr [rax], al ; sub byte ptr [rsi], dh ; cmc ; jmp qword ptr [rdx]
0x0000000000145f7a : add byte ptr [rax], al ; sub eax, 0x2a100000 ; out dx, eax ; jmp qword ptr [rsi]
0x00000000000dc434 : add byte ptr [rax], al ; sub eax, edx ; ret
0x0000000000035921 : add byte ptr [rax], al ; sub eax, edx ; sar eax, 0x10 ; ret
0x00000000000a69f5 : add byte ptr [rax], al ; sub eax, edx ; sub ecx, eax ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000079e76 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, [r8 - 1] ; ret
0x00000000000852a1 : add byte ptr [rax], al ; sub rax, rdx ; ret
0x00000000000fb416 : add byte ptr [rax], al ; sub rsp, -0x80 ; xor eax, eax ; pop rbx ; ret
0x000000000001fec8 : add byte ptr [rax], al ; syscall
0x000000000014c036 : add byte ptr [rax], al ; test al, 0x25 ; jmp rdx
0x0000000000146926 : add byte ptr [rax], al ; test al, 0x46 ; out dx, eax ; jmp rax
0x0000000000144986 : add byte ptr [rax], al ; test al, 0xa5 ; out dx, al ; call qword ptr [rdi]
0x0000000000144df6 : add byte ptr [rax], al ; test al, 0xdb ; out dx, al ; jmp qword ptr [rbx]
0x000000000014fd56 : add byte ptr [rax], al ; test al, 0xe1 ; cmc ; jmp qword ptr [rbx]
0x000000000014de9a : add byte ptr [rax], al ; test byte ptr [rax + rax - 0xba69000], ch ; jmp qword ptr [rdx]
0x000000000014669a : add byte ptr [rax], al ; test byte ptr [rax + rax], dh ; add al, dl ; cmp edi, ebp ; jmp qword ptr [rcx]
0x000000000013ef06 : add byte ptr [rax], al ; test byte ptr [rax - 0xd], al ; jmp rsp
0x0000000000153a9a : add byte ptr [rax], al ; test byte ptr [rax], cl ; add dword ptr [rax], eax ; shl byte ptr [rdi], 0xf8 ; jmp qword ptr [rdx]
0x0000000000158d9a : add byte ptr [rax], al ; test byte ptr [rbx + 1], bl ; add al, ah ; jp 0x158da5 ; jmp qword ptr [rbx]
0x000000000015d59a : add byte ptr [rax], al ; test byte ptr [rbx - 0x511fffff], ah ; cli ; call qword ptr [rdi]
0x000000000015c49a : add byte ptr [rax], al ; test byte ptr [rdx + 0x7b600001], dl ; cli ; call qword ptr [rax]
0x000000000014349a : add byte ptr [rax], al ; test byte ptr [rdx], al ; add byte ptr [rax], al ; push rax ; out dx, eax ; in eax, dx ; jmp rdx
0x000000000013e126 : add byte ptr [rax], al ; test byte ptr [rdx], dl ; out dx, eax ; call rsp
0x000000000015a09a : add byte ptr [rax], al ; test byte ptr [rsi + 1], ch ; add byte ptr [rax - 0x50], dh ; stc ; call rdi
0x000000000013e026 : add byte ptr [rax], al ; test byte ptr [rsi], cl ; out dx, eax ; call rsp
0x000000000015fe9a : add byte ptr [rax], al ; test cl, ah ; add dword ptr [rax], eax ; add byte ptr [rsi], bh ; sti ; call qword ptr [rsi]
0x000000000006a01a : add byte ptr [rax], al ; test ecx, ecx ; je 0x6a02f ; ret
0x00000000000bfd96 : add byte ptr [rax], al ; test edx, edx ; cmovne eax, edx ; jmp 0xbfd78
0x00000000000e3121 : add byte ptr [rax], al ; test edx, edx ; cmovne eax, edx ; ret
0x00000000000effcd : add byte ptr [rax], al ; test edx, edx ; jne 0xeffde ; ret
0x000000000002bb5e : add byte ptr [rax], al ; test esi, esi ; je 0x2bb24 ; pop rbx ; ret
0x000000000011205e : add byte ptr [rax], al ; test rdx, rdx ; jne 0x112050 ; pop rbx ; ret
0x000000000014cd5a : add byte ptr [rax], al ; wait ; add byte ptr [rax], al ; adc byte ptr [rbx - 0xd], ch ; jmp qword ptr [rcx]
0x000000000014c57a : add byte ptr [rax], al ; xchg eax, ebx ; add byte ptr [rax], al ; jmp qword ptr [rdx]
0x00000000001458aa : add byte ptr [rax], al ; xchg eax, esp ; add byte ptr es:[rax], al ; ror byte ptr [rdi], 1 ; out dx, eax ; jmp qword ptr [rcx]
0x00000000001553aa : add byte ptr [rax], al ; xchg eax, esp ; and dword ptr [rcx], eax ; add byte ptr [rax], dh ; xchg al, bh ; jmp qword ptr [rdx]
0x000000000015edaa : add byte ptr [rax], al ; xchg eax, esp ; mov ebx, 0x11a00001 ; sti ; call qword ptr [rax]
0x000000000013e726 : add byte ptr [rax], al ; xchg eax, esp ; ret
0x000000000013eb66 : add byte ptr [rax], al ; xchg eax, esp ; ret 0xfff2
0x000000000013dee6 : add byte ptr [rax], al ; xchg eax, esp ; scasd eax, dword ptr [rdi] ; out dx, al ; jmp rsp
0x000000000013f91e : add byte ptr [rax], al ; xchg eax, esp ; sub ebp, esi ; jmp rsp
0x000000000014f4b6 : add byte ptr [rax], al ; xor al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0
0x000000000013e1ae : add byte ptr [rax], al ; xor al, 0x32 ; out dx, eax ; jmp rsp
0x000000000013efbe : add byte ptr [rax], al ; xor al, 0x63 ; inc esp ; ret
0x000000000015e74a : add byte ptr [rax], al ; xor al, 0xb5 ; add dword ptr [rax], eax ; sal al, 1 ; cli ; call qword ptr [rbx]
0x000000000015f94a : add byte ptr [rax], al ; xor al, 0xc7 ; add dword ptr [rax], eax ; nop ; sti ; jmp qword ptr [rbx]
0x00000000001430de : add byte ptr [rax], al ; xor al, 0xf9 ; std ; call rsp
0x0000000000153a4a : add byte ptr [rax], al ; xor al, 8 ; add dword ptr [rax], eax ; loopne 0x153a81 ; clc ; jmp qword ptr [rbx]
0x00000000000d6114 : add byte ptr [rax], al ; xor al, al ; ret
0x00000000001461df : add byte ptr [rax], al ; xor bh, ch ; call qword ptr [rbx]
0x00000000000dbbaa : add byte ptr [rax], al ; xor byte ptr [rcx], 0xc0 ; ret
0x0000000000132e4e : add byte ptr [rax], al ; xor byte ptr [rdi - 3], dl ; call qword ptr [rax]
0x000000000014f5de : add byte ptr [rax], al ; xor byte ptr [rsi], 0xf5 ; jmp qword ptr [rdx]
0x000000000014610e : add byte ptr [rax], al ; xor byte ptr [rsi], ch ; out dx, eax ; jmp qword ptr [rdx]
0x0000000000143a2e : add byte ptr [rax], al ; xor byte ptr [rsi], dl ; out dx, al ; call rax
0x00000000000814fc : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x18 ; ret
0x000000000008061e : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x0000000000038d53 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011909f : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000003896a : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00000000000457f6 : add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000039b6f : add byte ptr [rax], al ; xor eax, edx ; ret
0x0000000000098362 : add byte ptr [rax], al ; xor ebp, ebp ; mov edx, eax ; jmp 0x9831d
0x000000000009a9b2 : add byte ptr [rax], al ; xor ebp, ebp ; mov edx, eax ; jmp 0x9a96d
0x000000000009cf32 : add byte ptr [rax], al ; xor ebp, ebp ; mov edx, eax ; jmp 0x9ceed
0x0000000000021e1e : add byte ptr [rax], al ; xor edi, edi ; mov eax, edx ; syscall
0x000000000008539e : add byte ptr [rax], al ; xor edx, edx ; mov eax, edx ; ret
0x0000000000036e98 : add byte ptr [rax], al ; xor edx, edx ; mov rsi, r8 ; mov eax, ecx ; syscall
0x00000000000878c1 : add byte ptr [rax], al ; xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x00000000000f0e04 : add byte ptr [rax], al ; xor esi, esi ; mov eax, ecx ; movsxd rdi, r8d ; syscall
0x0000000000088aed : add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000148787 : add byte ptr [rax], bh ; call rsp
0x000000000014fbb7 : add byte ptr [rax], bh ; insd dword ptr [rdi], dx ; cmc ; jmp qword ptr [rbx]
0x0000000000158877 : add byte ptr [rax], bh ; movsxd rdi, ecx ; jmp qword ptr [rax]
0x000000000015beb7 : add byte ptr [rax], bh ; pop rsp ; cli ; jmp qword ptr [rsi]
0x0000000000144a47 : add byte ptr [rax], bl ; cmpsb byte ptr [rsi], byte ptr [rdi] ; out dx, al ; call rsp
0x0000000000155917 : add byte ptr [rax], bl ; movsb byte ptr [rdi], byte ptr [rsi] ; clc ; jmp qword ptr [rcx]
0x000000000015d3b7 : add byte ptr [rax], bl ; movsd dword ptr [rdi], dword ptr [rsi] ; cli ; call qword ptr [rsi]
0x000000000014bd77 : add byte ptr [rax], bl ; push rdx ; jmp rsp
0x0000000000146e77 : add byte ptr [rax], bl ; ret
0x00000000001601b7 : add byte ptr [rax], bl ; sti ; call qword ptr [rsi]
0x0000000000145283 : add byte ptr [rax], ch ; add byte ptr [rax + 3], cl ; out dx, eax ; jmp qword ptr [rdi]
0x000000000015f247 : add byte ptr [rax], ch ; and ebx, edi ; jmp qword ptr [rdx]
0x000000000014f547 : add byte ptr [rax], ch ; cmc ; jmp qword ptr [rdx]
0x000000000014e817 : add byte ptr [rax], ch ; nop ; hlt ; jmp qword ptr [rcx]
0x00000000001460f7 : add byte ptr [rax], ch ; out dx, eax ; call qword ptr [rsi]
0x000000000015b8c7 : add byte ptr [rax], cl ; cli ; call qword ptr [rsi]
0x00000000001441c7 : add byte ptr [rax], cl ; jp 0x1441bd ; jmp qword ptr [rdx]
0x000000000002ebe8 : add byte ptr [rax], cl ; movzx eax, ax ; ret
0x000000000015ed37 : add byte ptr [rax], cl ; or bl, bh ; call rdi
0x000000000015e3b7 : add byte ptr [rax], cl ; out 0xfa, eax ; jmp qword ptr [rbx]
0x000000000015a377 : add byte ptr [rax], cl ; ret 0xfff9
0x000000000015a707 : add byte ptr [rax], cl ; sar ecx, cl ; call qword ptr [rax]
0x000000000015feb7 : add byte ptr [rax], cl ; sti ; call qword ptr [rsi]
0x00000000001484b7 : add byte ptr [rax], cl ; sub dh, dl ; call rcx
0x00000000001593f7 : add byte ptr [rax], cl ; xchg eax, ebx ; stc ; call qword ptr [rdx]
0x000000000000fa3f : add byte ptr [rax], dh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000014481f : add byte ptr [rax], dh ; movsd dword ptr [rdi], dword ptr [rsi] ; out dx, al ; jmp qword ptr [rcx]
0x00000000001461e0 : add byte ptr [rax], dh ; out dx, eax ; call qword ptr [rbx]
0x000000000014610f : add byte ptr [rax], dh ; out dx, eax ; jmp qword ptr [rdx]
0x0000000000132e4f : add byte ptr [rax], dh ; push rdi ; std ; call qword ptr [rax]
0x000000000014ac5f : add byte ptr [rax], dh ; ret 0xfff2
0x0000000000151dbf : add byte ptr [rax], dh ; ret 0xfff6
0x00000000001553af : add byte ptr [rax], dh ; xchg al, bh ; jmp qword ptr [rdx]
0x0000000000042598 : add byte ptr [rax], dl ; add byte ptr [rax + 0x38], bh ; syscall
0x00000000000f0daa : add byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000698e5 : add byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000698f3 : add byte ptr [rax], dl ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000130aff : add byte ptr [rax], dl ; cmp esi, esi ; jmp qword ptr [rax]
0x000000000014e14f : add byte ptr [rax], dl ; hlt ; jmp rdi
0x000000000015e8ff : add byte ptr [rax], dl ; idiv dl ; call rdi
0x000000000015a4ef : add byte ptr [rax], dl ; leave ; stc ; jmp rax
0x000000000015597f : add byte ptr [rax], dl ; movsd dword ptr [rdi], dword ptr [rsi] ; clc ; call qword ptr [rsi]
0x000000000002ecc8 : add byte ptr [rax], dl ; movzx eax, ax ; ret
0x000000000014e7ff : add byte ptr [rax], dl ; nop ; hlt ; jmp qword ptr [rbx]
0x000000000015624f : add byte ptr [rax], dl ; ret
0x0000000000003eb7 : add byte ptr [rax], dl ; ret 0xc
0x0000000000160b2f : add byte ptr [rax], dl ; sti ; call rsp
0x0000000000145f7f : add byte ptr [rax], dl ; sub ch, bh ; jmp qword ptr [rsi]
0x0000000000150e8f : add byte ptr [rax], dl ; sub dh, dh ; jmp qword ptr [rax]
0x000000000015f5f8 : add byte ptr [rax], r8b ; add ah, ah ; ret
0x00000000000a449d : add byte ptr [rax], r8b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000096305 : add byte ptr [rax], r8b ; lea rax, [rdi + 8] ; ret
0x00000000001476dd : add byte ptr [rax], r8b ; loopne 0x1476e7 ; out dx, eax ; jmp qword ptr [rdi]
0x00000000001023b5 : add byte ptr [rax], r8b ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x00000000000b46ed : add byte ptr [rax], r8b ; mov eax, 0x20 ; ret
0x000000000002b5fd : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; ret
0x0000000000096915 : add byte ptr [rax], r8b ; mov eax, 1 ; ret
0x000000000006eef5 : add byte ptr [rax], r8b ; mov eax, edi ; ret
0x00000000000abd6d : add byte ptr [rax], r8b ; mov r10d, r8d ; jmp 0xabd49
0x00000000000445c5 : add byte ptr [rax], r8b ; mov rax, rbx ; pop rbx ; ret
0x000000000003482d : add byte ptr [rax], r8b ; mov rax, rcx ; ret
0x000000000008e3bd : add byte ptr [rax], r8b ; mov rax, rdi ; ret
0x00000000000831b5 : add byte ptr [rax], r8b ; mov rdi, rbx ; call 0x1f478
0x00000000000d57f5 : add byte ptr [rax], r8b ; mov word ptr [rdi], si ; xor al, al ; ret
0x0000000000074f2f : add byte ptr [rax], r8b ; nop dword ptr [rax - 0x34] ; mov edx, eax ; jmp 0x74edf
0x000000000010f70d : add byte ptr [rax], r8b ; nop dword ptr [rax - 0x45] ; xor eax, eax ; ret
0x000000000007a95d : add byte ptr [rax], r8b ; nop dword ptr [rax - 0x56] ; ret
0x000000000010658d : add byte ptr [rax], r8b ; nop dword ptr [rax - 0x56] ; xor eax, eax ; ret
0x00000000000445bd : add byte ptr [rax], r8b ; pop rbx ; ret
0x0000000000046ebd : add byte ptr [rax], r8b ; ret
0x00000000000bedcd : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bd035 : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; ret
0x00000000000457f5 : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x00000000000956dd : add byte ptr [rax], r8b ; xor rax, rax ; ret
0x00000000000c162f : add byte ptr [rbp + 0x29], al ; ret 0x2948
0x00000000000a9d0a : add byte ptr [rbp + 0x31], al ; ror byte ptr [rax - 0x7d], cl ; ret
0x000000000003ab64 : add byte ptr [rbp + 0x31], dh ; add rsp, 8 ; ret
0x00000000000435dd : add byte ptr [rbp + 0x39], cl ; ret 0x830f
0x0000000000103997 : add byte ptr [rbp + 0x480c74c0], al ; add esp, 8 ; ret
0x000000000007762b : add byte ptr [rbp + 0x4f0f48ff], al ; ret 0x8948
0x000000000002bb5f : add byte ptr [rbp + 0x5bb974f6], al ; ret
0x00000000000c4542 : add byte ptr [rbp + 0x634c0143], cl ; ret
0x000000000010097f : add byte ptr [rbp + 0x63], cl ; ret
0x000000000007f053 : add byte ptr [rbp + 0xa], dh ; jmp 0x7f085
0x000000000007f58b : add byte ptr [rbp + 0xa], dh ; jmp 0x7f5bd
0x0000000000082dfa : add byte ptr [rbp + 0xa], dh ; jmp 0x82e2c
0x00000000000b1bb3 : add byte ptr [rbp + 0xa], dh ; jmp 0xb1be5
0x000000000007f53b : add byte ptr [rbp + 0xb], dh ; jmp 0x7f570
0x00000000000f6e22 : add byte ptr [rbp + 0xb], dh ; jmp 0xf6e56
0x00000000000dd789 : add byte ptr [rbp + 0xc], dh ; add rsp, 0x10 ; pop rbx ; ret
0x000000000011c340 : add byte ptr [rbp + 0xd], dh ; add rsp, 0x38 ; ret
0x0000000000045e7f : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x0000000000045d6f : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000000000114e9a : add byte ptr [rbp + 3], dh ; ret
0x000000000002f456 : add byte ptr [rbp + 7], dh ; add rsp, 0x18 ; ret
0x00000000000ee805 : add byte ptr [rbp + 7], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003922e : add byte ptr [rbp + 7], dh ; pop rbx ; ret
0x00000000000bd225 : add byte ptr [rbp + 8], dh ; pop rbx ; ret
0x00000000000eff50 : add byte ptr [rbp + rax - 0xd], dh ; ret
0x000000000015b7b3 : add byte ptr [rbp + rax*4 + 0x42b80001], bl ; cli ; call qword ptr [rsi]
0x0000000000145f7b : add byte ptr [rbp + rbp], ah ; add byte ptr [rax], dl ; sub ch, bh ; jmp qword ptr [rsi]
0x0000000000141ff7 : add byte ptr [rbp + rcx - 4], ah ; call rsp
0x00000000000db57a : add byte ptr [rbp + rcx*4 + 0x25], cl ; ret
0x0000000000096c61 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x20 ; call rbx
0x00000000000be40f : add byte ptr [rbp + rcx*4 + 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000140957 : add byte ptr [rbp + rcx*4 - 7], dl ; call rsp
0x0000000000143f6b : add byte ptr [rbp + rcx], dl ; add al, ah ; jno 0x143f69 ; jmp rsp
0x000000000013f32f : add byte ptr [rbp + rdi*4 - 0xd], al ; jmp rsp
0x0000000000148783 : add byte ptr [rbp + rdx*2], ch ; add byte ptr [rax], bh ; call rsp
0x00000000001467cb : add byte ptr [rbp + rsi + 0x42500000], dh ; out dx, eax ; jmp qword ptr [rcx]
0x00000000001309e0 : add byte ptr [rbp + rsi*8 - 0xa61ef01], bl ; jmp qword ptr [rax]
0x00000000001403ef : add byte ptr [rbp + rsi*8 - 9], dh ; jmp rsp
0x0000000000095c95 : add byte ptr [rbp - 0x10], dh ; ret
0x00000000000bfd97 : add byte ptr [rbp - 0x3dbaf02e], al ; jmp 0xbfd77
0x00000000000e3122 : add byte ptr [rbp - 0x3dbaf02e], al ; ret
0x000000000011dcec : add byte ptr [rbp - 0x3f], dh ; add rsp, 8 ; ret
0x00000000001617c3 : add byte ptr [rbp - 0x5cf7ffff], ch ; sti ; call qword ptr [rsi]
0x00000000001617ab : add byte ptr [rbp - 0x5cffffff], dl ; sti ; call qword ptr [rsi]
0x00000000000519f9 : add byte ptr [rbp - 0x73], al ; jl 0x51a23 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000becef : add byte ptr [rbp - 0x76d68740], al ; ret 0x8b49
0x00000000000af807 : add byte ptr [rbp - 0x77], 0x64 ; xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000abd6f : add byte ptr [rbp - 0x77], al ; ret 0xcfeb
0x00000000000452b0 : add byte ptr [rbp - 0x77], cl ; ret
0x00000000000d0d83 : add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x85 ; ret 0
0x00000000000fdd38 : add byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], 0x85 ; ret
0x00000000000582a7 : add byte ptr [rbp - 0x7cb749f4], cl ; ret 0x8d01
0x00000000000c32fe : add byte ptr [rbp - 0x7cb7feb5], cl ; ret
0x00000000000bbfc7 : add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x0000000000130944 : add byte ptr [rbp - 0xb], al ; inc dword ptr [rax + 0x46] ; cmc ; jmp qword ptr [rax]
0x000000000006a01b : add byte ptr [rbp - 0xcf78b37], al ; ret
0x0000000000103101 : add byte ptr [rbx + 0x1074ffff], al ; mov eax, r13d ; syscall
0x000000000009463a : add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x00000000001089e8 : add byte ptr [rbx + 0x27603fa], al ; ret
0x00000000000e5a01 : add byte ptr [rbx + 0x286a180d], cl ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000007aa0f : add byte ptr [rbx + 0x2f0d6d05], al ; add byte ptr [rcx], al ; ret
0x00000000000c1b01 : add byte ptr [rbx + 0x394104c0], al ; ret 0x6a7e
0x00000000000b3fa8 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000f1078 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000006dc99 : add byte ptr [rbx + 0x48], bl ; mov eax, ebp ; pop rbp ; pop r12 ; ret
0x00000000000b2afe : add byte ptr [rbx + 0x4c0c247c], cl ; movsxd rdx, ecx ; syscall
0x0000000000098345 : add byte ptr [rbx + 0x57413f8], al ; mov edx, eax ; jmp 0x9831f
0x000000000009a995 : add byte ptr [rbx + 0x57413f8], al ; mov edx, eax ; jmp 0x9a96f
0x000000000009cf15 : add byte ptr [rbx + 0x57413f8], al ; mov edx, eax ; jmp 0x9ceef
0x000000000005153a : add byte ptr [rbx + 0x5d], bl ; mov eax, edx ; pop r12 ; ret
0x00000000000f268f : add byte ptr [rbx + 0x5d], bl ; mov eax, esi ; pop r12 ; ret
0x000000000006e864 : add byte ptr [rbx + 0x5d], bl ; mov rax, rdx ; pop r12 ; ret
0x00000000000242e1 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000001fed2 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000021f5e : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000243e8 : add byte ptr [rbx + 0x5d], bl ; ret
0x00000000000ca157 : add byte ptr [rbx + 0x5d], bl ; xor eax, eax ; pop r12 ; ret
0x000000000010bbe6 : add byte ptr [rbx + 0x634801ea], al ; ret 0xd285
0x000000000006f7a9 : add byte ptr [rbx + 0x66d0eb13], cl ; nop ; xor eax, eax ; ret
0x00000000000741d7 : add byte ptr [rbx + 0xf89cfe1], al ; ret
0x0000000000000794 : add byte ptr [rbx + 1], al ; ret 0x102
0x0000000000162323 : add byte ptr [rbx + 2], cl ; add byte ptr [rax], al ; rol byte ptr [rdx], cl ; add byte ptr [rax], al ; ret 6
0x0000000000081bfa : add byte ptr [rbx + rax - 0xd], dh ; ret
0x000000000013ddbf : add byte ptr [rbx + rax*2], dl ; out dx, al ; jmp rsp
0x000000000014b583 : add byte ptr [rbx + rax*4], ch ; add byte ptr [rax - 0x19], cl ; jmp qword ptr [rax]
0x000000000014f57b : add byte ptr [rbx + rax*8], ah ; add byte ptr [rax + 0x36], dl ; cmc ; jmp qword ptr [rbx]
0x000000000014f543 : add byte ptr [rbx + rax*8], ch ; add byte ptr [rax], al ; sub byte ptr [rsi], dh ; cmc ; jmp qword ptr [rdx]
0x0000000000155da3 : add byte ptr [rbx + rbp - 0x4f27ffff], cl ; clc ; call rdi
0x000000000013ee17 : add byte ptr [rbx + rbp - 0xd], dl ; call rsp
0x0000000000140287 : add byte ptr [rbx + rbp*2 - 9], dh ; call rsp
0x000000000013f7ef : add byte ptr [rbx + rbp*4 - 0xc], ah ; jmp rsp
0x0000000000158d9b : add byte ptr [rbx + rbx*2 + 0x7ae00001], al ; stc ; jmp qword ptr [rbx]
0x000000000013fa2f : add byte ptr [rbx + rbx*2 - 0xb], ah ; call rsp
0x0000000000158d43 : add byte ptr [rbx + rbx*2], ch ; add dword ptr [rax], eax ; pop rax ; jp 0x158d4c ; jmp qword ptr [rax]
0x0000000000141dbf : add byte ptr [rbx + rbx*4 - 5], dh ; call rsp
0x00000000000fe5c6 : add byte ptr [rbx + rcx*4 + 0x32], ah ; syscall
0x0000000000101701 : add byte ptr [rbx + rcx*4 + 0x4a], al ; adc al, 0xeb ; ret 0x8b4c
0x0000000000116192 : add byte ptr [rbx + rcx*4 + 0x4d], al ; mov byte ptr [rax + 1], cl ; ret
0x0000000000047097 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x00000000000457a7 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x000000000015bd6b : add byte ptr [rbx + rcx*4 + 1], dl ; add al, dh ; and bh, ah ; jmp qword ptr [rdi]
0x00000000000bcc87 : add byte ptr [rbx + rcx*4 + 5], cl ; ret 0x2a
0x000000000014bd73 : add byte ptr [rbx + rcx*4], bl ; add byte ptr [rax], bl ; push rdx ; jmp rsp
0x000000000015fd1b : add byte ptr [rbx + rcx*8], al ; add dword ptr [rax], eax ; sar byte ptr [rbx], 0xfb ; jmp qword ptr [rdx]
0x000000000014fd53 : add byte ptr [rbx + rcx*8], bh ; add byte ptr [rax], al ; test al, 0xe1 ; cmc ; jmp qword ptr [rbx]
0x0000000000141a4f : add byte ptr [rbx + rdi - 5], dh ; jmp rsp
0x000000000014adcb : add byte ptr [rbx + rdi*2 - 0x36300000], dh ; jmp qword ptr [rcx]
0x00000000001407f7 : add byte ptr [rbx + rdi*2], ah ; stc ; jmp rsp
0x00000000001414e7 : add byte ptr [rbx + rdi*2], dh ; cli ; jmp rsp
0x000000000015edab : add byte ptr [rbx + rdi*4 + 0x11a00001], dl ; sti ; call qword ptr [rax]
0x000000000015ed33 : add byte ptr [rbx + rdi*4], bl ; add dword ptr [rax], eax ; or byte ptr [rax], cl ; sti ; call rdi
0x00000000001485bb : add byte ptr [rbx + rdx*2 + 0x38700000], ah ; jmp qword ptr [rsi]
0x000000000014c57b : add byte ptr [rbx + rdx*4], ah ; add al, dh ; jmp qword ptr [rdx]
0x00000000001605bb : add byte ptr [rbx + rdx*8 + 0x46500001], ah ; sti ; call rdx
0x000000000014249f : add byte ptr [rbx + rsi*4 - 4], al ; jmp rsp
0x000000000013eabf : add byte ptr [rbx + rsi], al ; call rsp
0x0000000000053470 : add byte ptr [rbx - 0x110343], al ; call qword ptr [rax]
0x0000000000053e00 : add byte ptr [rbx - 0x114743], al ; call qword ptr [rax]
0x00000000000b3d7b : add byte ptr [rbx - 0x2f76ff06], al ; jle 0xb3d8e ; ret
0x000000000002d74f : add byte ptr [rbx - 0x387cfe40], al ; add dword ptr [rax - 0x7d], ecx ; ret 0x8310
0x000000000007302f : add byte ptr [rbx - 0x3b7cb7fe], cl ; sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000015d59b : add byte ptr [rbx - 0x511fffff], al ; cli ; call qword ptr [rdi]
0x0000000000043aaf : add byte ptr [rbx - 0x73], al ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000039294 : add byte ptr [rbx - 0x75], bl ; pop rax ; ret
0x000000000002057e : add byte ptr [rbx - 0x76ff4783], al ; ret
0x000000000006e605 : add byte ptr [rbx - 0x77], bl ; call 0xffffffffc3632771
0x0000000000021cf3 : add byte ptr [rbx - 0x7a2dcf00], cl ; ror byte ptr [rdi], 0x94 ; ret 0x8d48
0x00000000000faab0 : add byte ptr [rbx - 0x7cb7db84], cl ; call qword ptr [rax]
0x00000000000abe67 : add byte ptr [rbx - 0x7cb7fbb5], cl ; ret
0x00000000000ff437 : add byte ptr [rbx - 0x7cb7fe40], al ; ret 0x3904
0x00000000000bc153 : add byte ptr [rbx - 0x7ce7dbb4], cl ; ret
0x000000000007da1b : add byte ptr [rbx - 0x7d], cl ; add al, 8 ; add dword ptr [rax + 0x39], ecx ; ret
0x000000000007d94f : add byte ptr [rbx - 0x7d], cl ; sub al, 8 ; add dword ptr [rax + 0x39], ecx ; ret
0x0000000000140637 : add byte ptr [rbx - 8], ah ; jmp rsp
0x000000000015aef0 : add byte ptr [rbx], 0xfa ; jmp qword ptr [rax]
0x000000000015551b : add byte ptr [rbx], al ; add dword ptr [rax], eax ; push rax ; nop ; clc ; jmp qword ptr [rsi]
0x0000000000132e4a : add byte ptr [rbx], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; xor byte ptr [rdi - 3], dl ; call qword ptr [rax]
0x000000000007a6e7 : add byte ptr [rbx], ch ; push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000000fa65 : add byte ptr [rbx], cl ; add al, ah ; ret
0x000000000000839d : add byte ptr [rbx], cl ; add al, ah ; ret 0xc
0x000000000000767d : add byte ptr [rbx], cl ; add al, dl ; ret
0x000000000000e445 : add byte ptr [rbx], cl ; add byte ptr [rax], al ; ret 6
0x0000000000003eb5 : add byte ptr [rbx], cl ; add byte ptr [rax], dl ; ret 0xc
0x0000000000142217 : add byte ptr [rbx], dh ; cld ; call rsp
0x000000000013efbf : add byte ptr [rbx], dh ; inc esp ; ret
0x000000000014952b : add byte ptr [rbx], dl ; add byte ptr [rax], al ; nop ; jno 0x14952d ; call rdi
0x00000000000a6197 : add byte ptr [rcx + 0x16e], bh ; mov eax, ecx ; ret
0x00000000000a6196 : add byte ptr [rcx + 0x16e], dil ; mov eax, ecx ; ret
0x000000000005211a : add byte ptr [rcx + 0x1b802], cl ; add byte ptr [rax], al ; ret
0x00000000000283c8 : add byte ptr [rcx + 0x29], cl ; ret
0x000000000003d073 : add byte ptr [rcx + 0x39], cl ; ret
0x0000000000089446 : add byte ptr [rcx + 0x39], cl ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x0000000000057e17 : add byte ptr [rcx + 0x415d5bc8], cl ; pop rsp ; pop r13 ; ret
0x00000000000f21cf : add byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; ret
0x00000000000dff3d : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x000000000006ef92 : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x0000000000077416 : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x000000000007d71b : add byte ptr [rcx + 0x548d48cf], cl ; ret
0x00000000001453ab : add byte ptr [rcx + 0x5a00000], dl ; out dx, eax ; jmp qword ptr [rdx]
0x000000000006f992 : add byte ptr [rcx + 0x5c], al ; ret
0x0000000000051759 : add byte ptr [rcx + 0x5d], al ; ret
0x0000000000051683 : add byte ptr [rcx + 0x5e], al ; ret
0x000000000006b67f : add byte ptr [rcx + 0x63], cl ; add al, 0x80 ; add rax, r8 ; jmp rax
0x000000000002d2f0 : add byte ptr [rcx + 0x63], cl ; cld ; mov eax, 3 ; syscall
0x00000000000b9680 : add byte ptr [rcx + 0x63], cl ; ret 0x348b
0x000000000003141f : add byte ptr [rcx + 0x63], cl ; std ; mov eax, 3 ; syscall
0x00000000000c3fcb : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000044be6 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8348
0x000000000007b5b5 : add byte ptr [rcx + 0xf], al ; xchg eax, esi ; ret 0x8348
0x00000000000a4109 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x894c
0x00000000000e5720 : add byte ptr [rcx + 1], cl ; fisttp qword ptr [rax + 0x39] ; ret
0x0000000000054193 : add byte ptr [rcx + 1], cl ; ret 0x3145
0x0000000000000859 : add byte ptr [rcx + 4], cl ; or al, 1 ; add byte ptr [rax], al ; ret 0x440c
0x0000000000080add : add byte ptr [rcx + rax - 0x18], cl ; jmp rax
0x000000000014739b : add byte ptr [rcx + rax*2 - 0x16f00000], al ; out dx, eax ; call qword ptr [rbx]
0x000000000013e6e7 : add byte ptr [rcx + rax*8 - 0x11], ah ; jmp rsp
0x000000000013eb3f : add byte ptr [rcx + rax*8 - 0xe], dh ; jmp rsp
0x0000000000142727 : add byte ptr [rcx + rax], al ; std ; call rsp
0x0000000000007ad7 : add byte ptr [rcx + rax], cl ; add byte ptr [rax], al ; ret 0x58
0x0000000000095ba7 : add byte ptr [rcx + rbp - 0x40], al ; ret
0x0000000000140077 : add byte ptr [rcx + rbp - 9], ah ; jmp rsp
0x000000000014db2b : add byte ptr [rcx + rbp*4], dl ; add byte ptr [rax], al ; jo 0x14db6f ; hlt ; call rax
0x000000000013f6f7 : add byte ptr [rcx + rbx*2], ah ; hlt ; jmp rsp
0x0000000000141bb7 : add byte ptr [rcx + rbx*2], al ; sti ; call rsp
0x00000000001423c7 : add byte ptr [rcx + rbx*4], dl ; cld ; jmp rsp
0x0000000000160b2b : add byte ptr [rcx + rbx*8], dl ; add dword ptr [rax], eax ; adc byte ptr [rsi - 5], ah ; call rsp
0x000000000010a1ec : add byte ptr [rcx + rcx + 0x48], dh ; add esp, 0x48 ; ret
0x000000000012605f : add byte ptr [rcx + rcx + 0x9bf0000], bh ; add byte ptr [rax], al ; ret 9
0x0000000000075f6c : add byte ptr [rcx + rcx - 0xd], dh ; ret
0x00000000000eb2e7 : add byte ptr [rcx + rcx*2 - 0x75], ah ; xor byte ptr [rax - 0x7d], cl ; ret 0xf601
0x00000000000b0634 : add byte ptr [rcx + rcx*4 + 0x10], ah ; add rsp, 0x18 ; ret
0x00000000000b0712 : add byte ptr [rcx + rcx*4 + 0x10], ah ; add rsp, 8 ; ret
0x0000000000067251 : add byte ptr [rcx + rcx*4 + 0x24], cl ; fmul dword ptr [rax - 0x7d] ; ret
0x000000000015bbbb : add byte ptr [rcx + rcx*4 + 0x4c800001], ah ; cli ; jmp qword ptr [rdx]
0x000000000007de4d : add byte ptr [rcx + rcx*4 + 0x7c], cl ; and al, 0x28 ; mov rdi, r15 ; call qword ptr [rax]
0x000000000011129c : add byte ptr [rcx + rcx*4 - 0x11], cl ; call qword ptr [rax]
0x000000000002d27b : add byte ptr [rcx + rcx*4 - 0x11], cl ; mov eax, 3 ; syscall
0x0000000000096ec4 : add byte ptr [rcx + rcx*4 - 0x16], cl ; mov rdi, rbp ; call rbx
0x0000000000097503 : add byte ptr [rcx + rcx*4 - 0x17], cl ; mov rdi, rbp ; call rbx
0x00000000001183ae : add byte ptr [rcx + rcx*4 - 0x1a], cl ; mov edi, ebx ; call 0xe4648
0x0000000000036d89 : add byte ptr [rcx + rcx*4 - 0x3a], cl ; mov eax, ecx ; syscall
0x00000000000827ac : add byte ptr [rcx + rcx*4 - 9], cl ; mov rdx, r15 ; call rax
0x000000000014bb43 : add byte ptr [rcx + rcx*4], ch ; add byte ptr [rax], al ; cwde ; hlt ; call qword ptr [rsi]
0x000000000014fbb3 : add byte ptr [rcx + rcx*8 + 0x6d380000], bl ; cmc ; jmp qword ptr [rbx]
0x00000000000deeef : add byte ptr [rcx + rcx*8 - 0x7cb7848c], al ; ret
0x000000000013e2af : add byte ptr [rcx + rdi*2 - 0x11], al ; call rsp
0x000000000015ab2b : add byte ptr [rcx + rdi*2], dl ; add dword ptr [rax], eax ; and dh, ah ; stc ; call qword ptr [rax]
0x00000000001430df : add byte ptr [rcx + rdi*8], dh ; std ; call rsp
0x00000000001593f3 : add byte ptr [rcx + rdx + 1], ah ; add byte ptr [rax], cl ; xchg eax, ebx ; stc ; call qword ptr [rdx]
0x000000000013e0d7 : add byte ptr [rcx + rdx - 0x11], dl ; jmp rsp
0x0000000000141b0f : add byte ptr [rcx + rdx*2 - 5], ah ; jmp rsp
0x00000000001410df : add byte ptr [rcx + rdx*2 - 6], dl ; call rsp
0x000000000013fb9f : add byte ptr [rcx + rdx*4], al ; cmc ; jmp rsp
0x000000000014175f : add byte ptr [rcx + rdx*8 - 6], dl ; call rsp
0x000000000015a373 : add byte ptr [rcx + rsi*2 + 1], bl ; add byte ptr [rax], cl ; ret 0xfff9
0x000000000015a3a3 : add byte ptr [rcx + rsi*2 - 0x3d07ffff], cl ; stc ; call rdi
0x0000000000141ce7 : add byte ptr [rcx + rsi*2], ah ; sti ; jmp rsp
0x000000000014a36b : add byte ptr [rcx + rsi*2], dl ; add al, al ; stosb byte ptr [rdi], al ; call qword ptr [rsi]
0x0000000000141cdf : add byte ptr [rcx + rsi*2], dl ; sti ; dec esp ; ret 1
0x000000000015e3b3 : add byte ptr [rcx + rsi*4 - 0x18f7ffff], bl ; cli ; jmp qword ptr [rbx]
0x000000000013f5e7 : add byte ptr [rcx + rsi], ah ; hlt ; call rsp
0x0000000000002437 : add byte ptr [rcx - 0x23], al ; out 0xa9, al ; ret 0xbd07
0x00000000000941e4 : add byte ptr [rcx - 0x2f], cl ; call 0xffffffffc31dcf42
0x000000000014d3c3 : add byte ptr [rcx - 0x38c80000], ch ; jmp qword ptr [rsi]
0x00000000000430ce : add byte ptr [rcx - 0x3a], al ; add al, 0x10 ; add bl, dh ; ret
0x00000000000c87e4 : add byte ptr [rcx - 0x3e3fce2f], cl ; jmp 0x4cf7dfb
0x00000000000d96f6 : add byte ptr [rcx - 0x3e3fce2f], cl ; jmp 0x4d08d0d
0x000000000009bdcb : add byte ptr [rcx - 0x43], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000015d3b3 : add byte ptr [rcx - 0x5ae7ffff], bl ; cli ; call qword ptr [rsi]
0x00000000000c1460 : add byte ptr [rcx - 0x73], al ; add dword ptr [rcx], edi ; ret 0x8e0f
0x00000000000b648d : add byte ptr [rcx - 0x73], cl ; add dword ptr [r8 + 0x39], r9d ; ret
0x00000000000c8e97 : add byte ptr [rcx - 0x75], cl ; cmp byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x00000000000389ef : add byte ptr [rcx - 0x75], cl ; or byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x00000000000c8ebb : add byte ptr [rcx - 0x75], cl ; push rdi ; adc byte ptr [rax + 0x39], cl ; ret 0xd377
0x0000000000115a1f : add byte ptr [rcx - 0x75], cl ; push rsi ; sbb byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8b41
0x00000000000434ff : add byte ptr [rcx - 0x75], cl ; ret
0x00000000000ce433 : add byte ptr [rcx - 0x77], al ; and cl, r13b ; ret 0xfff8
0x00000000000cf1db : add byte ptr [rcx - 0x77], al ; push rbp ; and byte ptr [rcx - 0x7d], al ; ret 0x4a01
0x00000000000f07cb : add byte ptr [rcx - 0x77], al ; ret
0x0000000000049d1f : add byte ptr [rcx - 0x77], cl ; add bl, ch ; ret
0x0000000000059316 : add byte ptr [rcx - 0x77], cl ; fisttp dword ptr [rcx - 0x77] ; ret 0x8b44
0x00000000000500e9 : add byte ptr [rcx - 0x77], cl ; ret
0x0000000000045198 : add byte ptr [rcx - 0x77], cl ; ret 0x18b9
0x0000000000092746 : add byte ptr [rcx - 0x77], cl ; ret 0x2b4c
0x0000000000032da9 : add byte ptr [rcx - 0x77], cl ; ret 0x59e9
0x000000000003c7b3 : add byte ptr [rcx - 0x77], cl ; ret 0x894c
0x0000000000055ede : add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x00000000001553ab : add byte ptr [rcx - 0x79cfffff], dl ; clc ; jmp qword ptr [rdx]
0x000000000010b80f : add byte ptr [rcx - 0x7cb76fec], cl ; ret 0x4801
0x0000000000062e98 : add byte ptr [rcx - 0x7d], al ; in eax, dx ; add dword ptr [rax + 1], ecx ; ret
0x000000000002ba3c : add byte ptr [rcx - 0x7d], al ; ret
0x000000000002219f : add byte ptr [rcx - 0x7d], al ; ret 0x4101
0x00000000000a6938 : add byte ptr [rcx - 0x7d], al ; stc ; add dword ptr [rdi], ecx ; sahf ; ret 0xd129
0x000000000002453e : add byte ptr [rcx - 0x7d], cl ; ret
0x000000000003e4bf : add byte ptr [rcx - 0x7d], cl ; ret 0x4901
0x0000000000083e2f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000007d860 : add byte ptr [rcx - 0x7d], cl ; sub al, 8 ; add dword ptr [rax + 0x39], ecx ; ret
0x00000000000dc418 : add byte ptr [rcx - 0x9cb70a], cl ; mov eax, ecx ; syscall
0x00000000000b3d7e : add byte ptr [rcx - 0xcfd8130], cl ; ret
0x000000000014c4d0 : add byte ptr [rcx - 0xd], al ; jmp rdx
0x000000000013d42f : add byte ptr [rcx - 0xd], bl ; clc ; ret 0x6e1f
0x000000000014261f : add byte ptr [rcx - 4], dl ; call rsp
0x0000000000088be6 : add byte ptr [rcx - 9], cl ; ret 1
0x0000000000088c0c : add byte ptr [rcx - 9], cl ; ret 2
0x000000000011a58b : add byte ptr [rcx], 0 ; add dh, dh ; ret
0x00000000001516a1 : add byte ptr [rcx], 2 ; ret
0x000000000013292b : add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000000a3e7 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x42
0x000000000002ef8d : add byte ptr [rcx], al ; add byte ptr [rax], al ; and eax, esi ; ret
0x0000000000110c8b : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000088735 : add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000008529f : add byte ptr [rcx], al ; add byte ptr [rax], al ; sub rax, rdx ; ret
0x000000000013f9e5 : add byte ptr [rcx], al ; add byte ptr [rsp + rcx*2 - 0xb], al ; jmp rsp
0x00000000000d10c8 : add byte ptr [rcx], al ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000c41c0 : add byte ptr [rcx], al ; fdivr dword ptr [rcx] ; ret
0x00000000000f5ea4 : add byte ptr [rcx], al ; jmp 0xf5c5b
0x00000000000f6284 : add byte ptr [rcx], al ; jmp 0xf605b
0x00000000000cfafd : add byte ptr [rcx], al ; jne 0xcfb0d ; ret
0x00000000000e1b0e : add byte ptr [rcx], al ; mov rbx, rax ; jmp 0xe1add
0x000000000002eca8 : add byte ptr [rcx], al ; movzx eax, ax ; ret
0x000000000007b340 : add byte ptr [rcx], al ; pop rbx ; ret
0x000000000007aa15 : add byte ptr [rcx], al ; ret
0x00000000000442a6 : add byte ptr [rcx], al ; ret 0x1ee9
0x00000000001159bf : add byte ptr [rcx], al ; ret 0x894c
0x00000000001184c5 : add byte ptr [rcx], al ; ret 0x94eb
0x0000000000092f47 : add byte ptr [rcx], al ; ror dword ptr [rax - 0x39], 1 ; ret 0xffff
0x00000000000c402b : add byte ptr [rcx], bh ; ret 0x4e0f
0x00000000000ce5da : add byte ptr [rcx], bh ; ret 0x840f
0x00000000000cff21 : add byte ptr [rcx], bh ; ret 0x8e0f
0x000000000007e336 : add byte ptr [rcx], bh ; ret 0xa7e
0x00000000000a618c : add byte ptr [rcx], bh ; xlatb ; je 0xa619f ; mov eax, ecx ; ret
0x00000000000855dd : add byte ptr [rcx], ch ; ret
0x00000000000ccd30 : add byte ptr [rcx], ch ; ret 0x2975
0x00000000000ccd22 : add byte ptr [rcx], ch ; ret 0x3775
0x00000000000ccd14 : add byte ptr [rcx], ch ; ret 0x4575
0x00000000000ac710 : add byte ptr [rcx], ch ; ret 0x748d
0x00000000000ab68a : add byte ptr [rcx], ch ; ret 0x7c8d
0x00000000000ab066 : add byte ptr [rcx], ch ; ret 0x8944
0x00000000000ab0f9 : add byte ptr [rcx], ch ; ret 0x8d41
0x00000000000ac675 : add byte ptr [rcx], ch ; ret 0xf889
0x00000000000dc435 : add byte ptr [rcx], ch ; sal bl, 1 ; ret
0x00000000000423ee : add byte ptr [rcx], cl ; ret 0x840f
0x00000000000358d0 : add byte ptr [rcx], cl ; ret 0xd089
0x00000000000a4817 : add byte ptr [rcx], dh ; dec dword ptr [rax + 0x39] ; ret 0x840f
0x0000000000098363 : add byte ptr [rcx], dh ; in eax, dx ; mov edx, eax ; jmp 0x9831c
0x000000000009a9b3 : add byte ptr [rcx], dh ; in eax, dx ; mov edx, eax ; jmp 0x9a96c
0x000000000009cf33 : add byte ptr [rcx], dh ; in eax, dx ; mov edx, eax ; jmp 0x9ceec
0x000000000010cd60 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000038d54 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000855d6 : add byte ptr [rcx], dh ; ret
0x00000000000616b9 : add byte ptr [rcx], dh ; rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x000000000011d1ba : add byte ptr [rcx], dh ; rol byte ptr [rbp - 0x7b], 0xc0 ; jne 0x11d1d0 ; ret
0x00000000000f008a : add byte ptr [rcx], dh ; rol byte ptr [rbp - 0x7b], 0xc0 ; jne 0xf00a0 ; ret
0x00000000000f020a : add byte ptr [rcx], dh ; rol byte ptr [rbp - 0x7b], 0xc0 ; jne 0xf0220 ; ret
0x00000000000f038a : add byte ptr [rcx], dh ; rol byte ptr [rbp - 0x7b], 0xc0 ; jne 0xf03a0 ; ret
0x00000000000f057a : add byte ptr [rcx], dh ; rol byte ptr [rbp - 0x7b], 0xc0 ; jne 0xf0590 ; ret
0x00000000000f06fa : add byte ptr [rcx], dh ; rol byte ptr [rbp - 0x7b], 0xc0 ; jne 0xf0710 ; ret
0x000000000011d0fa : add byte ptr [rcx], dh ; rol byte ptr [rbp - 0x7b], 0xc9 ; jne 0x11d110 ; ret
0x00000000000f00ca : add byte ptr [rcx], dh ; rol byte ptr [rbp - 0x7b], 0xc9 ; jne 0xf00e0 ; ret
0x00000000000f024a : add byte ptr [rcx], dh ; rol byte ptr [rbp - 0x7b], 0xc9 ; jne 0xf0260 ; ret
0x00000000000f048a : add byte ptr [rcx], dh ; rol byte ptr [rbp - 0x7b], 0xc9 ; jne 0xf04a0 ; ret
0x00000000000f05ba : add byte ptr [rcx], dh ; rol byte ptr [rbp - 0x7b], 0xc9 ; jne 0xf05d0 ; ret
0x00000000000f073a : add byte ptr [rcx], dh ; rol byte ptr [rbp - 0x7b], 0xc9 ; jne 0xf0750 ; ret
0x000000000011d1fa : add byte ptr [rcx], dh ; rol byte ptr [rbp - 0x7b], 0xd2 ; jne 0x11d210 ; ret
0x00000000000f010a : add byte ptr [rcx], dh ; rol byte ptr [rbp - 0x7b], 0xd2 ; jne 0xf0120 ; ret
0x00000000000f028a : add byte ptr [rcx], dh ; rol byte ptr [rbp - 0x7b], 0xd2 ; jne 0xf02a0 ; ret
0x00000000000f03ca : add byte ptr [rcx], dh ; rol byte ptr [rbp - 0x7b], 0xd2 ; jne 0xf03e0 ; ret
0x00000000000f05fa : add byte ptr [rcx], dh ; rol byte ptr [rbp - 0x7b], 0xd2 ; jne 0xf0610 ; ret
0x000000000011d13a : add byte ptr [rcx], dh ; rol byte ptr [rbp - 0x7b], 0xdb ; jne 0x11d150 ; ret
0x00000000000f014a : add byte ptr [rcx], dh ; rol byte ptr [rbp - 0x7b], 0xdb ; jne 0xf0160 ; ret
0x00000000000f02ca : add byte ptr [rcx], dh ; rol byte ptr [rbp - 0x7b], 0xdb ; jne 0xf02e0 ; ret
0x00000000000f04ca : add byte ptr [rcx], dh ; rol byte ptr [rbp - 0x7b], 0xdb ; jne 0xf04e0 ; ret
0x00000000000f063a : add byte ptr [rcx], dh ; rol byte ptr [rbp - 0x7b], 0xdb ; jne 0xf0650 ; ret
0x00000000000262f9 : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; ret
0x00000000000983d7 : add byte ptr [rcx], dh ; ror byte ptr [rax + 1], cl ; ret 0xe974
0x0000000000038b53 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000011a9d5 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000878c2 : add byte ptr [rcx], dh ; ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x00000000000283bd : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0x39], cl ; ret
0x0000000000036e99 : add byte ptr [rcx], dh ; ror byte ptr [rcx + rcx*4 - 0x3a], cl ; mov eax, ecx ; syscall
0x00000000000ffc56 : add byte ptr [rcx], dh ; ror byte ptr [rcx - 0x76b7f3a9], 0x3e ; ret
0x00000000000b2ec5 : add byte ptr [rcx], dh ; ror byte ptr [rcx - 0x7f], cl ; ret 0x2d0
0x00000000000da505 : add byte ptr [rcx], dh ; sal byte ptr [rcx], cl ; div byte ptr [rcx] ; shr al, 0xff ; ret 0xffff
0x000000000015597b : add byte ptr [rdi + 1], ah ; add byte ptr [rax], dl ; movsd dword ptr [rdi], dword ptr [rsi] ; clc ; call qword ptr [rsi]
0x00000000000956d4 : add byte ptr [rdi + 2], bh ; neg eax ; ret
0x0000000000162aa3 : add byte ptr [rdi + 7], bh ; add byte ptr [rax], al ; ret
0x000000000008266e : add byte ptr [rdi + rax*2 + 0x4c], dh ; mov esi, esp ; mov rdi, rbx ; call rax
0x000000000013e7ff : add byte ptr [rdi + rax*2 - 0x10], dl ; jmp rsp
0x0000000000140767 : add byte ptr [rdi + rax*2 - 7], dl ; jmp rsp
0x000000000015b92b : add byte ptr [rdi + rax*4], dl ; add dword ptr [rax], eax ; nop ; cli ; jmp rdx
0x000000000015f91b : add byte ptr [rdi + rax*8], al ; add dword ptr [rax], eax ; nop ; sti ; call qword ptr [rsi]
0x000000000015f94b : add byte ptr [rdi + rax*8], dh ; add dword ptr [rax], eax ; nop ; sti ; jmp qword ptr [rbx]
0x000000000015515b : add byte ptr [rdi + rbx + 1], al ; add byte ptr [rax - 0x7e], al ; clc ; jmp qword ptr [rsi]
0x0000000000155193 : add byte ptr [rdi + rbx + 1], bh ; add byte ptr [rax - 0x7e], bl ; clc ; jmp qword ptr [rdi]
0x000000000013f8ff : add byte ptr [rdi + rbx - 0xb], dl ; jmp rsp
0x000000000014d1c3 : add byte ptr [rdi + rbx*4 - 0x49880000], ch ; jmp qword ptr [rcx]
0x000000000015d1bb : add byte ptr [rdi + rbx*4 - 0x600fffff], ah ; cli ; call qword ptr [rdi]
0x0000000000140357 : add byte ptr [rdi + rbx*8 - 9], dl ; call rsp
0x0000000000151133 : add byte ptr [rdi + rbx*8], bl ; add byte ptr [rax], al ; clc ; xor dh, dh ; call rax
0x00000000001441c3 : add byte ptr [rdi + rcx + 0x7a080000], ch ; out dx, al ; jmp qword ptr [rdx]
0x000000000012685f : add byte ptr [rdi + rcx + 0xfbf0000], bh ; add byte ptr [rax], al ; ret 0xf
0x00000000001541d3 : add byte ptr [rdi + rcx - 0x7337ffff], bh ; cld ; jmp rax
0x000000000013fdd7 : add byte ptr [rdi + rcx*2 - 0xa], ah ; jmp rsp
0x00000000001601b3 : add byte ptr [rdi + rcx*8 + 0x43180001], bl ; sti ; call qword ptr [rsi]
0x0000000000160163 : add byte ptr [rdi + rcx*8 + 1], cl ; add byte ptr [rax + 0x42], bh ; sti ; call qword ptr [rsi]
0x0000000000150163 : add byte ptr [rdi + rcx*8], cl ; add byte ptr [rax - 0x12], bh ; cmc ; jmp qword ptr [rdi]
0x000000000002eba8 : add byte ptr [rdi + rcx], al ; mov bh, 0xc0 ; ret
0x000000000014493b : add byte ptr [rdi + rdx], ah ; add byte ptr [rax], al ; nop ; movsd dword ptr [rdi], dword ptr [rsi] ; out dx, al ; call qword ptr [rsi]
0x0000000000144953 : add byte ptr [rdi + rdx], bh ; add byte ptr [rax], al ; cwde ; movsd dword ptr [rdi], dword ptr [rsi] ; out dx, al ; call qword ptr [rdi]
0x000000000015a96b : add byte ptr [rdi + rsi*2 + 1], dl ; add byte ptr [rax - 0x22], dl ; stc ; call rcx
0x000000000013f067 : add byte ptr [rdi + rsi*2 - 0xd], al ; jmp rsp
0x000000000013f2bf : add byte ptr [rdi + rsi*4 - 0xd], dh ; call rsp
0x0000000000140d67 : add byte ptr [rdi + rsi*8 - 7], al ; call rsp
0x00000000001430bf : add byte ptr [rdi + rsi*8], dh ; std ; jmp rsp
0x0000000000141017 : add byte ptr [rdi + rsi], al ; cli ; jmp rsp
0x0000000000146923 : add byte ptr [rdi + rsi], cl ; add byte ptr [rax], al ; test al, 0x46 ; out dx, eax ; jmp rax
0x0000000000159901 : add byte ptr [rdi], 2 ; ret
0x000000000016193b : add byte ptr [rdi], ah ; add dword ptr [rax], eax ; jo 0x1618f2 ; sti ; jmp qword ptr [rsi]
0x0000000000035812 : add byte ptr [rdi], bh ; movd xmm0, eax ; mov dword ptr [rdi], edx ; ret
0x00000000000a4316 : add byte ptr [rdi], cl ; mov bh, 0x55 ; ret 0xf41
0x00000000000e4d35 : add byte ptr [rdi], cl ; mov bh, 0xff ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002ed41 : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x2ecd2 ; loopne 0x2ed52 ; ret
0x00000000000e6664 : add byte ptr [rdi], cl ; mov bh, 4 ; js 0xe65f5 ; loopne 0xe6675 ; ret
0x000000000003b6ef : add byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000278df : add byte ptr [rdi], cl ; mov dh, 0x50 ; dec dword ptr [rcx - 0x7d] ; ret 0x4801
0x0000000000032b10 : add byte ptr [rdi], cl ; mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000850cf : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000093d3f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x0000000000093d4f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x0000000000093d2f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000009040f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x0000000000088b5f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x0000000000088b4f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x0000000000088b3f : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x000000000009457b : add byte ptr [rdi], cl ; popfq ; ret 0xea81
0x000000000003564b : add byte ptr [rdi], cl ; push rsp ; ret
0x0000000000062085 : add byte ptr [rdi], cl ; ret
0x000000000011079c : add byte ptr [rdi], cl ; ret 0x8348
0x000000000011b5ae : add byte ptr [rdi], cl ; ret 0x8964
0x0000000000043795 : add byte ptr [rdi], cl ; ret 0x8d48
0x0000000000030d61 : add byte ptr [rdi], cl ; ret 0x8d49
0x00000000000cd579 : add byte ptr [rdi], cl ; ret 0xc1e9
0x000000000003f2a0 : add byte ptr [rdi], cl ; ret 0xc801
0x00000000000bdbb6 : add byte ptr [rdi], cl ; ret 0xc931
0x0000000000043e77 : add byte ptr [rdi], cl ; ret 0xfbe9
0x00000000000aaa05 : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x8d44
0x000000000009438e : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xc383
0x0000000000097ae6 : add byte ptr [rdi], cl ; test byte ptr [rbx], bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000097fb6 : add byte ptr [rdi], cl ; test byte ptr [rbx], cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000b0132 : add byte ptr [rdi], cl ; test byte ptr [rdi + rdi*8 - 1], ch ; dec dword ptr [rax - 0x77] ; ret 0xb9
0x000000000005f7b5 : add byte ptr [rdi], cl ; test dword ptr [rcx], edi ; ret 0xffff
0x00000000000cf578 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000044bf0 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x854d
0x00000000000fdc49 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd120
0x00000000000c9327 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe2c1
0x0000000000085372 : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x144
0x00000000000c6dc3 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x3d
0x0000000000069934 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd089
0x00000000000b700a : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000000b7cfc : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe283
0x000000000005a3fe : add byte ptr [rdi], cl ; xchg ebp, esi ; xor eax, 0x83480000 ; ret
0x00000000000601f5 : add byte ptr [rdi], cl ; xchg ebx, eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000005fdf6 : add byte ptr [rdi], cl ; xchg edi, eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000060581 : add byte ptr [rdi], cl ; xchg esi, edi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000092806 : add byte ptr [rdx + 0x1f2], bh ; call 0x2eab8
0x0000000000092859 : add byte ptr [rdx + 0x1f5], bh ; call 0x2eab8
0x00000000000615e8 : add byte ptr [rdx + 0x63], cl ; adc al, 0xa0 ; add rax, rdx ; jmp rax
0x000000000002f683 : add byte ptr [rdx + 0x63], cl ; add al, 0xa2 ; add rdx, rax ; jmp rdx
0x00000000000a5b0b : add byte ptr [rdx + 0xf], dh ; jmp 0xa5b87
0x0000000000162d23 : add byte ptr [rdx + 2], bl ; add byte ptr [rax], al ; ret
0x00000000000e0e96 : add byte ptr [rdx + rax + 0x5b], dh ; ret
0x000000000014349b : add byte ptr [rdx + rax - 0x10b00000], al ; in eax, dx ; jmp rdx
0x000000000015b423 : add byte ptr [rdx + rax*4], cl ; add dword ptr [rax], eax ; test al, 0x1e ; cli ; call rcx
0x000000000013fa97 : add byte ptr [rdx + rbp*2 - 0xb], dh ; jmp rsp
0x0000000000142b6f : add byte ptr [rdx + rbp*2], dl ; std ; jmp rsp
0x0000000000144cc3 : add byte ptr [rdx + rbx - 0x3db80000], ch ; out dx, al ; jmp qword ptr [rcx]
0x000000000013f57f : add byte ptr [rdx + rbx - 0xc], dh ; call rsp
0x000000000013fbb7 : add byte ptr [rdx + rbx*4], ah ; cmc ; call rsp
0x00000000000710b3 : add byte ptr [rdx + rcx + 0x5b], dh ; ret
0x000000000013f13f : add byte ptr [rdx + rcx*4 - 0xd], dh ; jmp rsp
0x000000000014fcd3 : add byte ptr [rdx + rcx*8 - 0x40f80000], bh ; cmc ; jmp qword ptr [rbx]
0x0000000000146cc3 : add byte ptr [rdx + rdi - 0x48980000], ch ; out dx, eax ; jmp rcx
0x000000000014212f : add byte ptr [rdx + rdi - 4], al ; call rsp
0x000000000014ac5b : add byte ptr [rdx + rdi*2], al ; add byte ptr [rax], dh ; ret 0xfff2
0x000000000013fac7 : add byte ptr [rdx + rdi*2], dl ; cmc ; call rsp
0x0000000000126c5f : add byte ptr [rdx + rdx + 0x12bf0000], bh ; add byte ptr [rax], al ; ret 0x12
0x00000000001444b3 : add byte ptr [rdx + rdx - 0x68080000], bl ; out dx, al ; jmp qword ptr [rcx]
0x00000000001544bb : add byte ptr [rdx + rdx - 0x743fffff], ah ; cld ; jmp qword ptr [rsi]
0x00000000001484b3 : add byte ptr [rdx + rdx*2 + 0x2a080000], bl ; call rcx
0x000000000014c4cb : add byte ptr [rdx + rdx*4 + 0x41000000], dh ; jmp rdx
0x000000000015c49b : add byte ptr [rdx + rdx*4 + 0x7b600001], al ; cli ; call qword ptr [rax]
0x000000000014098f : add byte ptr [rdx + rdx*4], ah ; stc ; jmp rsp
0x000000000015046b : add byte ptr [rdx + rdx*8], dl ; add byte ptr [rax - 6], ah ; cmc ; call rcx
0x00000000001464a3 : add byte ptr [rdx + rsi + 0x37680000], cl ; out dx, eax ; jmp qword ptr [rdi]
0x00000000001464d3 : add byte ptr [rdx + rsi + 0x37980000], bh ; out dx, eax ; jmp qword ptr [rdi]
0x00000000000b63fb : add byte ptr [rdx + rsi + 0xf], dh ; mov dh, 0x43 ; add cl, byte ptr [rax - 0x7d] ; ret
0x000000000014e4d3 : add byte ptr [rdx + rsi*4 + 0x7fd80000], bh ; hlt ; call qword ptr [rsi]
0x000000000013e1af : add byte ptr [rdx + rsi], dh ; out dx, eax ; jmp rsp
0x000000000014642b : add byte ptr [rdx + rsi], dl ; add byte ptr [rax], al ; sal byte ptr [rsi], 1 ; out dx, eax ; call qword ptr [rsi]
0x00000000000d0d80 : add byte ptr [rdx - 0x7abaffd7], dh ; ror byte ptr [rdi], 0x85 ; ret 0
0x00000000000e92a7 : add byte ptr [rdx - 1], bh ; mov eax, edx ; ret
0x00000000000e92a6 : add byte ptr [rdx - 1], dil ; mov eax, edx ; ret
0x0000000000162d1f : add byte ptr [rdx], ah ; add al, 0 ; add byte ptr [rdx + 2], bl ; add byte ptr [rax], al ; ret
0x000000000011750c : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffe
0x000000000014543b : add byte ptr [rdx], ah ; add byte ptr [rax], al ; mov al, 7 ; out dx, eax ; call qword ptr [rdi]
0x0000000000003eb3 : add byte ptr [rdx], ah ; add byte ptr [rbx], cl ; add byte ptr [rax], dl ; ret 0xc
0x000000000002f04c : add byte ptr [rdx], al ; add byte ptr [rax], al ; mov qword ptr fs:[rax], rdx ; ret
0x000000000002ecfa : add byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x00000000001039b6 : add byte ptr [rdx], al ; add rsp, 8 ; ret
0x00000000000ebdfb : add byte ptr [rdx], al ; call rax
0x000000000002ec08 : add byte ptr [rdx], al ; movzx eax, ax ; ret
0x0000000000155423 : add byte ptr [rdx], cl ; add dword ptr [rax], eax ; call 0x27154cbc
0x00000000000ec211 : add byte ptr [rdx], cl ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000e1d97 : add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000000fa63 : add byte ptr [rdx], dl ; add byte ptr [rbx], cl ; add al, ah ; ret
0x000000000000839b : add byte ptr [rdx], dl ; add byte ptr [rbx], cl ; add al, ah ; ret 0xc
0x000000000000767b : add byte ptr [rdx], dl ; add byte ptr [rbx], cl ; add al, dl ; ret
0x000000000000e443 : add byte ptr [rdx], dl ; add byte ptr [rbx], cl ; add byte ptr [rax], al ; ret 6
0x000000000000a6ab : add byte ptr [rdx], dl ; add byte ptr [rbx], cl ; add byte ptr [rax], dl ; ret 0xc
0x0000000000142aef : add byte ptr [rdx], dl ; std ; call rsp
0x000000000006d2e0 : add byte ptr [rip + 0x48000000], al ; mov eax, edx ; pop rbx ; ret
0x0000000000000428 : add byte ptr [rip + 0xc1c107c], al ; ret 0x4412
0x00000000000e3724 : add byte ptr [rip - 0x1000], ah ; or eax, edi ; ret
0x00000000000b3185 : add byte ptr [rip - 0xfff], bh ; jae 0xb3196 ; ret
0x00000000000f086b : add byte ptr [rsi + 0x80], bh ; syscall
0x00000000001110e3 : add byte ptr [rsi + 0xa], bh ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000000e06fe : add byte ptr [rsi + 0xf], ah ; ret
0x0000000000093c4c : add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000088a54 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000001458ab : add byte ptr [rsi + 0xfd00000], dl ; out dx, eax ; jmp qword ptr [rcx]
0x00000000000d610b : add byte ptr [rsi + 2], dh ; ret
0x0000000000107679 : add byte ptr [rsi + 4], bh ; mov rdi, rbp ; call qword ptr [rax]
0x00000000001400ff : add byte ptr [rsi + rax*2 - 9], al ; jmp rsp
0x000000000015b8c3 : add byte ptr [rsi + rax*4 + 0x44080001], ch ; cli ; call qword ptr [rsi]
0x000000000014f8a3 : add byte ptr [rsi + rax*8 + 0x4af80000], cl ; cmc ; call rsi
0x0000000000162baf : add byte ptr [rsi + rax], ch ; add byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x00000000000b47cf : add byte ptr [rsi + rbp - 0x48], dh ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000015a09b : add byte ptr [rsi + rbp*2 - 0x4f8fffff], al ; stc ; call rdi
0x0000000000141cb7 : add byte ptr [rsi + rbp*2], ah ; sti ; jmp rsp
0x0000000000142bdf : add byte ptr [rsi + rbp*2], dl ; std ; jmp rsp
0x0000000000140ca7 : add byte ptr [rsi + rbp*8 - 7], dl ; jmp rsp
0x000000000014d0cb : add byte ptr [rsi + rbx*4 - 0x53300000], dh ; jmp rax
0x00000000000909ef : add byte ptr [rsi + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x000000000014c033 : add byte ptr [rsi + rcx*4], bl ; add byte ptr [rax], al ; test al, 0x25 ; jmp rdx
0x000000000014c063 : add byte ptr [rsi + rcx*4], cl ; add byte ptr [rax + 0x26], ch ; call qword ptr [rsi]
0x000000000015f0bb : add byte ptr [rsi + rdi*4 + 0x1c500001], ah ; sti ; jmp qword ptr [rax]
0x000000000013f86f : add byte ptr [rsi + rdi*4], ah ; hlt ; jmp rsp
0x000000000013eca7 : add byte ptr [rsi + rdi*8 - 0xe], dh ; call rsp
0x000000000014214f : add byte ptr [rsi + rdi], dl ; cld ; call rsp
0x00000000001448c3 : add byte ptr [rsi + rdx - 0x5a980000], ch ; out dx, al ; call qword ptr [rsi]
0x00000000001448ab : add byte ptr [rsi + rdx - 0x5aa00000], dl ; out dx, al ; call qword ptr [rdi]
0x0000000000158873 : add byte ptr [rsi + rdx*2 + 1], bl ; add byte ptr [rax], bh ; movsxd rdi, ecx ; jmp qword ptr [rax]
0x0000000000141b77 : add byte ptr [rsi + rdx*2], al ; sti ; call rsp
0x0000000000141167 : add byte ptr [rsi + rdx*2], dh ; cli ; call rsp
0x000000000014c833 : add byte ptr [rsi + rdx*4], bl ; add byte ptr [rax], al ; fcomp dword ptr [rax - 0xd] ; jmp qword ptr [rbx]
0x000000000014487b : add byte ptr [rsi + rdx], ah ; add byte ptr [rax - 0x5b], dl ; out dx, al ; call qword ptr [rbx]
0x0000000000144893 : add byte ptr [rsi + rdx], bh ; add byte ptr [rax - 0x5b], bl ; out dx, al ; call qword ptr [rsi]
0x0000000000154853 : add byte ptr [rsi + rdx], bh ; add dword ptr [rax], eax ; js 0x1548c9 ; clc ; jmp qword ptr [rdx]
0x0000000000144833 : add byte ptr [rsi + rdx], bl ; add byte ptr [rax], al ; movsq qword ptr [rdi], qword ptr [rsi] ; out dx, al ; jmp qword ptr [rcx]
0x000000000014e8bb : add byte ptr [rsi + rsi*4 - 0x6f300000], ah ; hlt ; jmp qword ptr [rbx]
0x000000000014e8a3 : add byte ptr [rsi + rsi*4 - 0x6f480000], cl ; hlt ; jmp qword ptr [rcx]
0x000000000014e85b : add byte ptr [rsi + rsi*4], al ; add byte ptr [rax - 0x70], dh ; hlt ; jmp qword ptr [rbx]
0x000000000014e843 : add byte ptr [rsi + rsi*4], ch ; add byte ptr [rax], al ; pop rax ; nop ; hlt ; jmp qword ptr [rcx]
0x000000000014e82b : add byte ptr [rsi + rsi*4], dl ; add byte ptr [rax], al ; nop ; hlt ; jmp qword ptr [rbx]
0x000000000014308f : add byte ptr [rsi + rsi*8 - 3], dh ; call rsp
0x0000000000156833 : add byte ptr [rsi + rsi], bl ; add dword ptr [rax], eax ; js 0x156812 ; clc ; jmp qword ptr [rdi]
0x000000000014682b : add byte ptr [rsi + rsi], dl ; add byte ptr [rax], al ; mov al, 0x42 ; out dx, eax ; jmp qword ptr [rcx]
0x00000000001618d3 : add byte ptr [rsi - 0x5a77ffff], bh ; sti ; jmp rdx
0x0000000000021abd : add byte ptr [rsi - 0x70], ah ; nop dword ptr [rax - 0x56] ; ret
0x00000000001404f7 : add byte ptr [rsi - 8], ah ; jmp rsp
0x000000000015e74b : add byte ptr [rsi*4 - 0xf2fffff], dh ; cli ; call qword ptr [rbx]
0x0000000000142f8f : add byte ptr [rsi], ah ; std ; jmp rsp
0x0000000000141917 : add byte ptr [rsi], ah ; sti ; jmp rsp
0x0000000000149893 : add byte ptr [rsi], bh ; add byte ptr [rax + 0x7c], bl ; call rcx
0x000000000015fea0 : add byte ptr [rsi], bh ; sti ; call qword ptr [rsi]
0x00000000000fba54 : add byte ptr [rsi], dl ; add byte ptr [rax], al ; add al, ch ; ret 0xfdb6
0x0000000000147ff0 : add byte ptr [rsi], dl ; call qword ptr [rcx]
0x000000000015368b : add byte ptr [rsp + rax + 1], dh ; add byte ptr [rax + 0xd], dh ; clc ; call rsi
0x00000000001476c3 : add byte ptr [rsp + rax*2 - 0x380000], ch ; out dx, eax ; jmp qword ptr [rbx]
0x000000000005cfdf : add byte ptr [rsp + rax*2 - 0x75], ah ; and cl, byte ptr [rax - 0x39] ; ret 0xfffe
0x0000000000142997 : add byte ptr [rsp + rax*2], al ; std ; jmp rsp
0x000000000014b643 : add byte ptr [rsp + rax*4], ch ; add byte ptr [rax], al ; cmp al, ch ; jmp rbx
0x000000000014f6a3 : add byte ptr [rsp + rax*8 + 0x38980000], cl ; cmc ; call qword ptr [rdx]
0x000000000015f693 : add byte ptr [rsp + rax*8 + 1], bh ; add al, ch ; sub ebx, edi ; jmp qword ptr [rbx]
0x000000000014de9b : add byte ptr [rsp + rbp*4 + 0x59700000], al ; hlt ; jmp qword ptr [rdx]
0x000000000015de53 : add byte ptr [rsp + rbp*4], bh ; add dword ptr [rax], eax ; js 0x15de31 ; cli ; jmp qword ptr [rbx]
0x000000000014de83 : add byte ptr [rsp + rbp*4], ch ; add byte ptr [rax + 0x59], ch ; hlt ; jmp qword ptr [rax]
0x0000000000150e8b : add byte ptr [rsp + rbx*8], dh ; add byte ptr [rax], dl ; sub dh, dh ; jmp qword ptr [rax]
0x000000000012645f : add byte ptr [rsp + rcx + 0xcbf0000], bh ; add byte ptr [rax], al ; ret 0xc
0x000000000013f9e7 : add byte ptr [rsp + rcx*2 - 0xb], al ; jmp rsp
0x000000000013f67f : add byte ptr [rsp + rcx*2 - 0xc], ah ; jmp rsp
0x000000000014becb : add byte ptr [rsp + rcx*4 + 0x5500000], dh ; jmp qword ptr [rcx]
0x000000000015beb3 : add byte ptr [rsp + rcx*4 + 0x5c380001], bl ; cli ; jmp qword ptr [rsi]
0x000000000013fb7f : add byte ptr [rsp + rcx*4 - 0xb], al ; jmp rsp
0x000000000015fe9b : add byte ptr [rsp + rcx*8 + 0x3e000001], al ; sti ; call qword ptr [rsi]
0x000000000015feb3 : add byte ptr [rsp + rcx*8 + 0x3e080001], bl ; sti ; call qword ptr [rsi]
0x000000000013f3ff : add byte ptr [rsp + rcx*8 - 0xd], ah ; jmp rsp
0x000000000013eee7 : add byte ptr [rsp + rdi], al ; call rsp
0x0000000000146e73 : add byte ptr [rsp + rdi], bl ; add byte ptr [rax], bl ; ret
0x0000000000141117 : add byte ptr [rsp + rdx*2 - 6], dl ; jmp rsp
0x000000000014669b : add byte ptr [rsp + rsi + 0x39d00000], al ; out dx, eax ; jmp qword ptr [rcx]
0x00000000001466b3 : add byte ptr [rsp + rsi + 0x39e80000], bl ; out dx, eax ; jmp qword ptr [rbx]
0x000000000014289f : add byte ptr [rsp + rsi - 3], al ; jmp rsp
0x000000000015a68b : add byte ptr [rsp + rsi*2 + 1], dh ; add al, ah ; sar cl, 1 ; call rcx
0x000000000015a6b3 : add byte ptr [rsp + rsi*2 - 0x2e67ffff], bl ; stc ; jmp rax
0x000000000015e643 : add byte ptr [rsp + rsi*4], ch ; add dword ptr [rax], eax ; mov ch, ch ; cli ; call qword ptr [rsi]
0x000000000014d68b : add byte ptr [rsp], dh ; add byte ptr [rax + 0x24], al ; hlt ; jmp qword ptr [rdi]
0x000000000007d337 : add byte ptr cs:[rax + 0x39], cl ; ret
0x000000000007f444 : add byte ptr cs:[rax + 0x39], cl ; ret 0x1374
0x000000000007c2d5 : add byte ptr cs:[rax + 0x39], cl ; ret 0x840f
0x000000000007ba15 : add byte ptr cs:[rax + 0x39], cl ; ret 0xb76
0x000000000007dab9 : add byte ptr cs:[rax + 0x39], cl ; ror dword ptr [rdi], cl ; xchg eax, ebp ; ret 0x8348
0x00000000000878e3 : add byte ptr cs:[rax - 0x77], cl ; add eax, 0x2e401c ; ret
0x0000000000083515 : add byte ptr cs:[rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x000000000007f36f : add byte ptr cs:[rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000007f3fc : add byte ptr cs:[rax - 0x77], cl ; ret
0x0000000000082819 : add byte ptr cs:[rax - 0x77], cl ; ret 0x8949
0x00000000000fda94 : add byte ptr cs:[rax], al ; add al, ch ; ret
0x00000000000831e9 : add byte ptr cs:[rax], al ; je 0x831f5 ; ret
0x00000000000767cd : add byte ptr cs:[rax], al ; nop dword ptr [rax - 0x34] ; pop rdx ; ret
0x00000000001460f5 : add byte ptr cs:[rax], al ; sub byte ptr [rsi], ch ; out dx, eax ; call qword ptr [rsi]
0x000000000014610d : add byte ptr cs:[rax], al ; xor byte ptr [rsi], ch ; out dx, eax ; jmp qword ptr [rdx]
0x0000000000074f2e : add byte ptr cs:[rax], r8b ; nop dword ptr [rax - 0x34] ; mov edx, eax ; jmp 0x74ee0
0x000000000007f052 : add byte ptr cs:[rbp + 0xa], dh ; jmp 0x7f086
0x000000000007f58a : add byte ptr cs:[rbp + 0xa], dh ; jmp 0x7f5be
0x0000000000082df9 : add byte ptr cs:[rbp + 0xa], dh ; jmp 0x82e2d
0x000000000007e335 : add byte ptr cs:[rcx], bh ; ret 0xa7e
0x000000000004292d : add byte ptr ds:[rax], al ; add byte ptr [rax + 0x63], cl ; sti ; syscall
0x00000000000e0e95 : add byte ptr ds:[rdx + rax + 0x5b], dh ; ret
0x00000000000fd42d : add byte ptr es:[rax - 0x77], cl ; ret 0x8948
0x0000000000036b3e : add byte ptr es:[rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000001458ad : add byte ptr es:[rax], al ; ror byte ptr [rdi], 1 ; out dx, eax ; jmp qword ptr [rcx]
0x00000000000f9066 : add byte ptr es:[rcx + rcx*4 + 0x10], ah ; add rsp, 0x18 ; ret
0x00000000001039b5 : add byte ptr es:[rdx], al ; add rsp, 8 ; ret
0x00000000000e311f : add byte ptr fs:[rax], al ; add byte ptr [rbp - 0x3dbaf02e], al ; ret
0x000000000013df65 : add byte ptr fs:[rax], al ; hlt ; fsubp st(6) ; jmp rsp
0x0000000000078738 : add byte ptr gs:[rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000ccd1f : add byte ptr gs:[rax], al ; add byte ptr [rcx], ch ; ret 0x3775
0x00000000000fea77 : add byte ptr gs:[rbx + 0x5d], bl ; pop r12 ; ret
0x000000000014682d : add byte ptr ss:[rax], al ; mov al, 0x42 ; out dx, eax ; jmp qword ptr [rcx]
0x0000000000162a9f : add ch, al ; add eax, 0x77f0000 ; add byte ptr [rax], al ; ret
0x000000000012f1fc : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000012f1fd : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x00000000000a398f : add ch, byte ptr [rcx] ; ret 0x48d
0x000000000007177a : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000003cc6f : add ch, cl ; ret
0x000000000005f697 : add ch, cl ; ret 0xfffb
0x0000000000130905 : add ch, dh ; inc esi ; add ch, dh ; jmp qword ptr [rsi]
0x0000000000130909 : add ch, dh ; jmp qword ptr [rsi]
0x00000000000742cf : add cl, al ; out dx, al ; add al, 0x83 ; out 1, al ; mov eax, esi ; ret
0x0000000000157819 : add cl, bh ; call rcx
0x00000000000e0ae7 : add cl, bl ; ret 0xcad9
0x00000000000e2ee5 : add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x00000000000b6400 : add cl, byte ptr [r8 - 0x7d] ; ret
0x00000000000a2811 : add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x000000000003b5c0 : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x00000000000ffbff : add cl, byte ptr [rax + 0x39] ; ret 0x1b72
0x00000000000ffbf1 : add cl, byte ptr [rax + 0x39] ; ret 0x2972
0x000000000007093a : add cl, byte ptr [rax + 0x39] ; ret 0x5877
0x0000000000055815 : add cl, byte ptr [rax + 0x39] ; ret 0x8f0f
0x00000000000e2ee6 : add cl, byte ptr [rax + 0x39] ; ret 0xf48
0x000000000007d4e9 : add cl, byte ptr [rax - 0x73] ; push rsp ; ret
0x0000000000093503 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000000649f5 : add cl, byte ptr [rax - 0x77] ; test dword ptr [rax - 0x16000002], ecx ; ret 0xffd3
0x000000000007a68a : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x00000000000defd6 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret 0x4808
0x00000000000892f8 : add cl, byte ptr [rax - 0x7d] ; mov dword ptr [rdx], 0xf6001f0f ; ret 0x7404
0x00000000000b6401 : add cl, byte ptr [rax - 0x7d] ; ret
0x00000000000839d0 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00000000000a09a5 : add cl, byte ptr [rax - 0x7d] ; ret 0x491e
0x000000000006ae5f : add cl, byte ptr [rax - 0x7d] ; ret 0x8301
0x000000000001fb7b : add cl, byte ptr [rax - 0x7d] ; ret 0x8304
0x000000000011481d : add cl, byte ptr [rax - 0x7d] ; ret 0xb804
0x000000000006b333 : add cl, byte ptr [rax - 0x7d] ; ret 0xe902
0x0000000000083a33 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x0000000000114849 : add cl, byte ptr [rax - 0x7d] ; ret 0xf04
0x0000000000047614 : add cl, byte ptr [rbp + 0x39] ; ret
0x000000000003b599 : add cl, byte ptr [rcx + 0x29] ; ret 0x8b48
0x000000000003e672 : add cl, byte ptr [rcx + 0x39] ; ret 0x870f
0x0000000000047358 : add cl, byte ptr [rcx + rcx*4 - 0x3e] ; jmp 0x47374
0x000000000010a837 : add cl, byte ptr [rcx - 0x77] ; ret
0x0000000000043c00 : add cl, byte ptr [rcx - 0x7d] ; ret 0xe901
0x00000000000432fd : add cl, byte ptr [rcx - 0x7d] ; ret 0xf01
0x000000000007609e : add cl, byte ptr [rcx - 0xcfa8be9] ; ret
0x000000000002ebc8 : add cl, byte ptr [rdi] ; mov bh, 0xc0 ; ret
0x00000000000d6ec7 : add cl, byte ptr [rdi] ; ret 0x48c3
0x00000000000cefab : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret
0x0000000000000488 : add cl, byte ptr [rdx] ; add dword ptr [rax + rax*4], ecx ; push rbx ; add al, 4 ; ret 0x6080
0x000000000015c38e : add cl, byte ptr [rsi + 0x41380e0a] ; ret
0x000000000005ad9d : add cl, ch ; adc ebx, -1 ; inc dword ptr [rcx - 9] ; ret
0x0000000000056e98 : add cl, ch ; in eax, dx ; ret
0x000000000002968d : add cl, ch ; ret
0x000000000004c2a3 : add cl, ch ; ret 0xffbf
0x000000000002a076 : add cl, ch ; ret 0xfffe
0x000000000014ace0 : add dh, 0xf2 ; jmp rcx
0x00000000001023b7 : add dh, al ; add al, byte ptr [rax] ; pop rbx ; ret
0x00000000000bb727 : add dh, al ; or byte ptr [r10], r8b ; xor eax, eax ; ret
0x000000000013255b : add dh, bh ; jmp rdi
0x00000000001296c7 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000000361cb : add dh, bl ; ret
0x000000000010df16 : add dh, byte ptr [rdi + rax - 0x48] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000010df15 : add dh, byte ptr ds:[rdi + rax - 0x48] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000005806f : add dh, dh ; ret
0x000000000008e3ff : add dh, dh ; ret 0x7402
0x00000000000892ff : add dh, dh ; ret 0x7404
0x000000000006c8d7 : add dh, dh ; ret 0x7420
0x0000000000075f5a : add dh, dh ; ret 0x7508
0x00000000000cfc04 : add dh, dh ; ret 0xf01
0x00000000000c65d7 : add dh, dh ; ret 0xf10
0x00000000000ed575 : add dh, dh ; test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rax]
0x00000000000eda44 : add dh, dh ; test dword ptr [rdi + rdi*8 - 1], edi ; jmp qword ptr [rax]
0x00000000000b481b : add dil, r15b ; ret
0x0000000000130a84 : add dl, ah ; cmc ; inc eax ; loopne 0x130a87 ; jmp qword ptr [rax]
0x0000000000145136 : add dl, byte ptr [rax + 0xa] ; ret
0x000000000014d454 : add dword ptr [r14], 3 ; mov byte ptr [rcx], al ; ret
0x00000000000b6490 : add dword ptr [r8 + 0x39], r9d ; ret
0x000000000003b6f2 : add dword ptr [r8 - 0x7d], ecx ; ret
0x00000000000f1cef : add dword ptr [r8], eax ; mov rax, rdi ; pop rbx ; ret
0x00000000001404f5 : add dword ptr [r8], r8d ; clc ; jmp rsp
0x0000000000157815 : add dword ptr [r8], r8d ; mov byte ptr [rax], al ; stc ; call rcx
0x00000000000be018 : add dword ptr [r9 + 0x39], r8d ; ret
0x00000000000bb7c8 : add dword ptr [rax + 0x1b807], ecx ; add byte ptr [rax], al ; ret
0x00000000000478b2 : add dword ptr [rax + 0x29], ecx ; ret 0x148
0x00000000000b2ed5 : add dword ptr [rax + 0x38], edi ; syscall
0x00000000000445f9 : add dword ptr [rax + 0x39], ecx ; fdiv dword ptr [rbp - 0xf] ; pop rbx ; ret
0x0000000000027a63 : add dword ptr [rax + 0x39], ecx ; ret
0x0000000000093374 : add dword ptr [rax + 0x39], ecx ; ret 0x1475
0x000000000008ff14 : add dword ptr [rax + 0x39], ecx ; ret 0x860f
0x000000000008fded : add dword ptr [rax + 0x39], ecx ; ret 0x870f
0x0000000000046841 : add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x000000000003cb52 : add dword ptr [rax + 0x39], ecx ; ret 0x8e0f
0x00000000000a0f12 : add dword ptr [rax + 0x39], ecx ; ret 0xe877
0x000000000003a4d7 : add dword ptr [rax + 0x39], ecx ; ret 0xeb75
0x000000000009f9fd : add dword ptr [rax + 0x39], ecx ; ret 0xed77
0x000000000009300c : add dword ptr [rax + 0x39], ecx ; ret 0xee75
0x000000000004549b : add dword ptr [rax + 0x39], ecx ; sal byte ptr [rbp - 0x11], 1 ; xor eax, eax ; ret
0x000000000010bbe9 : add dword ptr [rax + 0x63], ecx ; ret 0xd285
0x000000000015f5f4 : add dword ptr [rax + 0xe], ebp ; or byte ptr [rax + rax], al ; add ah, ah ; ret
0x000000000014bc09 : add dword ptr [rax + 0xe], edx ; adc byte ptr [rdx], al ; pop rbp ; ret
0x0000000000148738 : add dword ptr [rax + 0xe], edx ; and byte ptr [rax + 0xa], cl ; ret
0x00000000000eb26b : add dword ptr [rax + 0xf], eax ; ret 0xc3f3
0x00000000000991e6 : add dword ptr [rax + 0xf], ecx ; ret 0xc148
0x000000000005953b : add dword ptr [rax + 1], ecx ; ret
0x000000000003451e : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00000000000bb743 : add dword ptr [rax + 1], edi ; ret
0x000000000000048a : add dword ptr [rax + rax*4], ecx ; push rbx ; add al, 4 ; ret 0x6080
0x00000000000dbd62 : add dword ptr [rax + rax], edx ; movsxd rdi, edi ; mov eax, ecx ; syscall
0x00000000000874d5 : add dword ptr [rax + rcx*4 + 1], eax ; jne 0x874c7 ; ret
0x000000000010955d : add dword ptr [rax + rdx + 0x31], esi ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000009723e : add dword ptr [rax - 0x6af03f7b], edx ; ret 0xf883
0x00000000000b582d : add dword ptr [rax - 0x6bf08406], eax ; ret 0xb60f
0x0000000000030163 : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x00000000000e2ee2 : add dword ptr [rax - 0x73], ecx ; add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x0000000000064ce5 : add dword ptr [rax - 0x75], ecx ; cmp al, ch ; ret 0xfba6
0x0000000000109869 : add dword ptr [rax - 0x75], ecx ; outsd dx, dword ptr [rsi] ; and byte ptr [rdi], cl ; ret 0x8b48
0x00000000000abd24 : add dword ptr [rax - 0x77], ecx ; fmul dword ptr [rbx - 0x7cb7fbc0] ; ret
0x0000000000079703 : add dword ptr [rax - 0x77], ecx ; push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x00000000000767c1 : add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x0000000000085459 : add dword ptr [rax - 0x77], ecx ; ret
0x00000000001005a4 : add dword ptr [rax - 0x78], eax ; ja 0x1005af ; ret
0x00000000000bccdd : add dword ptr [rax - 0x7cb7e9f4], ecx ; ret 0x4401
0x00000000000f972d : add dword ptr [rax - 0x7d], ecx ; cli ; add al, 0xf ; xchg eax, esi ; ret
0x0000000000091110 : add dword ptr [rax - 0x7d], ecx ; out dx, al ; add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x000000000002224a : add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000ff43a : add dword ptr [rax - 0x7d], ecx ; ret 0x3904
0x00000000000315ba : add dword ptr [rax - 0x7d], ecx ; ret 0x3908
0x00000000000e5f8f : add dword ptr [rax - 0x7d], ecx ; ret 0x3920
0x0000000000027007 : add dword ptr [rax - 0x7d], ecx ; ret 0x4001
0x000000000004366c : add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x00000000000fe9fc : add dword ptr [rax - 0x7d], ecx ; ret 0x4104
0x00000000000cb272 : add dword ptr [rax - 0x7d], ecx ; ret 0x4408
0x0000000000037789 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000000256c6 : add dword ptr [rax - 0x7d], ecx ; ret 0x4804
0x0000000000026211 : add dword ptr [rax - 0x7d], ecx ; ret 0x4901
0x0000000000037a21 : add dword ptr [rax - 0x7d], ecx ; ret 0x4c01
0x00000000000ae24c : add dword ptr [rax - 0x7d], ecx ; ret 0x4c48
0x00000000000c435f : add dword ptr [rax - 0x7d], ecx ; ret 0x8001
0x00000000000cc56f : add dword ptr [rax - 0x7d], ecx ; ret 0x8301
0x000000000002d755 : add dword ptr [rax - 0x7d], ecx ; ret 0x8310
0x00000000000a3f03 : add dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x00000000000da94e : add dword ptr [rax - 0x7d], ecx ; ret 0xe801
0x000000000014b585 : add dword ptr [rax], 0 ; out 0xf2, eax ; jmp qword ptr [rax]
0x00000000000d10c7 : add dword ptr [rax], 1 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000e5cbb : add dword ptr [rax], 1 ; ret
0x000000000014214e : add dword ptr [rax], eax ; adc al, 0x3e ; cld ; call rsp
0x0000000000141cde : add dword ptr [rax], eax ; adc al, 0x71 ; sti ; dec esp ; ret 1
0x000000000013fac6 : add dword ptr [rax], eax ; adc al, 0x7a ; cmc ; call rsp
0x00000000001423c6 : add dword ptr [rax], eax ; adc al, 0x99 ; cld ; jmp rsp
0x0000000000160b2e : add dword ptr [rax], eax ; adc byte ptr [rsi - 5], ah ; call rsp
0x000000000015a4ee : add dword ptr [rax], eax ; adc cl, cl ; stc ; jmp rax
0x000000000015e8fe : add dword ptr [rax], eax ; adc dh, dh ; cli ; call rdi
0x0000000000141016 : add dword ptr [rax], eax ; add al, 0x37 ; cli ; jmp rsp
0x0000000000141b76 : add dword ptr [rax], eax ; add al, 0x56 ; sti ; call rsp
0x0000000000141bb6 : add dword ptr [rax], eax ; add al, 0x59 ; sti ; call rsp
0x000000000013fb9e : add dword ptr [rax], eax ; add al, 0x91 ; cmc ; jmp rsp
0x0000000000060ca9 : add dword ptr [rax], eax ; add al, ch ; jmp rsi
0x0000000000092809 : add dword ptr [rax], eax ; add al, ch ; lahf ; ret 0xfff9
0x00000000000284ed : add dword ptr [rax], eax ; add al, ch ; mov ebx, 0x89000065 ; ret 0xe283
0x00000000000c7745 : add dword ptr [rax], eax ; add al, ch ; ret
0x000000000009285c : add dword ptr [rax], eax ; add al, ch ; ret 0xfff9
0x000000000006c9ae : add dword ptr [rax], eax ; add bl, dh ; ret
0x000000000006aa18 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x3948
0x000000000009ebbb : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0x00000000001153f8 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000108eba : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x00000000000ae07b : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000c6c54 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x84c6
0x00000000000c7760 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000002d6bd : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x000000000008f669 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x0000000000092d2e : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; cli ; dec dword ptr [rcx - 0x77] ; ret
0x0000000000051418 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000ddfe1 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x0000000000031b2a : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4508
0x000000000007b4fe : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4d07
0x000000000002adb9 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x00000000000a0c26 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; stc ; dec dword ptr [rcx - 0x77] ; ret 0x7c74
0x000000000007075f : add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000001296ca : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000012887a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000001286a2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000012869a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x0000000000128e32 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x0000000000095c91 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rbp - 0x10], dh ; ret
0x00000000000e3002 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000110b29 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x0000000000082a4b : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000956d1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0x956e1 ; neg eax ; ret
0x0000000000041bd2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x41b9f
0x000000000007d854 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x7d821
0x00000000000d78f7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0xd78c5
0x00000000000498e2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x0000000000114e97 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0x114ea6 ; ret
0x0000000000114ed7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0x114ee6 ; ret
0x0000000000096c5e : add dword ptr [rax], eax ; add byte ptr [rax], al ; lea r9, [rsp + 0x20] ; call rbx
0x0000000000047116 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov dword ptr [rdx], ecx ; ret
0x00000000000f07b2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xca ; syscall
0x00000000000b4d2b : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xe5 ; syscall
0x000000000010bfc7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000082256 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x0000000000114823 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi + 0x18], rdx ; ret
0x00000000001084da : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000001016fe : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov r9d, dword ptr [rdx + 0x14] ; jmp 0x1016d3
0x0000000000107478 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call qword ptr [rax]
0x000000000006b4d2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000006f98f : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop r12 ; ret
0x0000000000051756 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop r13 ; ret
0x0000000000051680 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop r14 ; ret
0x00000000000b2574 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000243e5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000007114d : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000002b145 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000d6ae2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000000effcb : add dword ptr [rax], eax ; add byte ptr [rax], al ; test edx, edx ; jne 0xeffe0 ; ret
0x000000000006a036 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000098360 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor ebp, ebp ; mov edx, eax ; jmp 0x9831f
0x000000000009a9b0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor ebp, ebp ; mov edx, eax ; jmp 0x9a96f
0x000000000009cf30 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor ebp, ebp ; mov edx, eax ; jmp 0x9ceef
0x00000000000db578 : add dword ptr [rax], eax ; add byte ptr [rbp + rcx*4 + 0x25], cl ; ret
0x00000000000c3c80 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00000000000d7e66 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000426d7 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000015aeee : add dword ptr [rax], eax ; add byte ptr [rbx], 0xfa ; jmp qword ptr [rax]
0x00000000000283c6 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x29], cl ; ret
0x00000000000c3fc9 : add dword ptr [rax], eax ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x00000000000827aa : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 9], cl ; mov rdx, r15 ; call rax
0x000000000009005d : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000002453c : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000000001159bd : add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret 0x894c
0x00000000000c4029 : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret 0x4e0f
0x00000000000ce5d8 : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret 0x840f
0x00000000000cff1f : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret 0x8e0f
0x00000000000a618a : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; xlatb ; je 0xa61a1 ; mov eax, ecx ; ret
0x00000000000262f7 : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; ret
0x00000000000c3fbc : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x854d
0x00000000000c6dc1 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x3d
0x0000000000093c4a : add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000015fe9e : add dword ptr [rax], eax ; add byte ptr [rsi], bh ; sti ; call qword ptr [rsi]
0x000000000011a58c : add dword ptr [rax], eax ; add dh, dh ; ret
0x0000000000141916 : add dword ptr [rax], eax ; and al, 0x26 ; sti ; jmp rsp
0x0000000000141cb6 : add dword ptr [rax], eax ; and al, 0x6e ; sti ; jmp rsp
0x0000000000141ce6 : add dword ptr [rax], eax ; and al, 0x71 ; sti ; jmp rsp
0x00000000001407f6 : add dword ptr [rax], eax ; and al, 0x7b ; stc ; jmp rsp
0x000000000014098e : add dword ptr [rax], eax ; and al, 0x92 ; stc ; jmp rsp
0x000000000013fbb6 : add dword ptr [rax], eax ; and al, 0x9a ; cmc ; call rsp
0x000000000015eafe : add dword ptr [rax], eax ; and byte ptr [rax], al ; sti ; jmp qword ptr [rax]
0x000000000015ab2e : add dword ptr [rax], eax ; and dh, ah ; stc ; call qword ptr [rax]
0x000000000015f25e : add dword ptr [rax], eax ; and ebx, edi ; call qword ptr [rdi]
0x000000000015f696 : add dword ptr [rax], eax ; call 0x2415f1cb
0x0000000000155426 : add dword ptr [rax], eax ; call 0x27154cb9
0x000000000015fa26 : add dword ptr [rax], eax ; call 0xffffffffd315f563
0x00000000001404f6 : add dword ptr [rax], eax ; clc ; jmp rsp
0x000000000015a3a6 : add dword ptr [rax], eax ; clc ; ret 0xfff9
0x0000000000155806 : add dword ptr [rax], eax ; clc ; wait ; clc ; jmp rdi
0x000000000013f9e6 : add dword ptr [rax], eax ; cmc ; jmp rsp
0x0000000000158876 : add dword ptr [rax], eax ; cmp byte ptr [rbx - 7], ah ; jmp qword ptr [rax]
0x000000000015ffee : add dword ptr [rax], eax ; cmp byte ptr [rdi], 0xfb ; jmp qword ptr [rax]
0x000000000014212e : add dword ptr [rax], eax ; cmp r15b, spl ; call rsp
0x000000000008749d : add dword ptr [rax], eax ; cmp rcx, rdx ; jne 0x874a0 ; ret
0x000000000015a6b6 : add dword ptr [rax], eax ; cwde ; sar ecx, 1 ; jmp rax
0x000000000015f276 : add dword ptr [rax], eax ; cwde ; sti ; call rdx
0x0000000000153d76 : add dword ptr [rax], eax ; cwde ; sub edi, eax ; jmp rsi
0x0000000000153ab6 : add dword ptr [rax], eax ; fsub dword ptr [rdi] ; clc ; call qword ptr [rsi]
0x0000000000141876 : add dword ptr [rax], eax ; hlt ; adc ebx, edi ; jmp rsp
0x0000000000143176 : add dword ptr [rax], eax ; hlt ; add esi, edi ; call rsp
0x000000000014108e : add dword ptr [rax], eax ; hlt ; cli ; call rsp
0x0000000000140e56 : add dword ptr [rax], eax ; hlt ; or bh, dl ; jmp rsp
0x00000000001406be : add dword ptr [rax], eax ; hlt ; out 0xf8, eax ; jmp rsp
0x00000000001421be : add dword ptr [rax], eax ; hlt ; push rsp ; cld ; call rsp
0x00000000001423e6 : add dword ptr [rax], eax ; hlt ; wait ; cld ; call rsp
0x0000000000140d66 : add dword ptr [rax], eax ; idiv ecx ; call rsp
0x000000000015ea06 : add dword ptr [rax], eax ; idiv rbx ; jmp qword ptr [rsi]
0x0000000000140ebe : add dword ptr [rax], eax ; in al, 0x15 ; cli ; jmp rsp
0x000000000014124e : add dword ptr [rax], eax ; in al, 0x5c ; cli ; jmp rsp
0x000000000014134e : add dword ptr [rax], eax ; in al, 0x63 ; cli ; jmp rsp
0x000000000013fa96 : add dword ptr [rax], eax ; je 0x13fb09 ; cmc ; jmp rsp
0x0000000000141a4e : add dword ptr [rax], eax ; je 0x141a92 ; sti ; jmp rsp
0x0000000000141dbe : add dword ptr [rax], eax ; je 0x141d62 ; sti ; call rsp
0x000000000014308e : add dword ptr [rax], eax ; je 0x14308d ; std ; call rsp
0x000000000011b22b : add dword ptr [rax], eax ; jmp 0x11b1f5
0x000000000015368e : add dword ptr [rax], eax ; jo 0x1536a4 ; clc ; call rsi
0x000000000015a09e : add dword ptr [rax], eax ; jo 0x15a057 ; stc ; call rdi
0x000000000016193e : add dword ptr [rax], eax ; jo 0x1618ef ; sti ; jmp qword ptr [rsi]
0x0000000000140636 : add dword ptr [rax], eax ; jrcxz 0x140638 ; jmp rsp
0x0000000000154856 : add dword ptr [rax], eax ; js 0x1548c6 ; clc ; jmp qword ptr [rdx]
0x0000000000156836 : add dword ptr [rax], eax ; js 0x15680f ; clc ; jmp qword ptr [rdi]
0x00000000001572d6 : add dword ptr [rax], eax ; js 0x1572c9 ; clc ; jmp qword ptr [rbx]
0x00000000001572d5 : add dword ptr [rax], eax ; js 0x1572ca ; clc ; jmp qword ptr [rbx]
0x000000000015a9e6 : add dword ptr [rax], eax ; js 0x15a9cf ; stc ; call qword ptr [rax]
0x000000000015de56 : add dword ptr [rax], eax ; js 0x15de2e ; cli ; jmp qword ptr [rbx]
0x000000000015fa76 : add dword ptr [rax], eax ; js 0x15fab3 ; sti ; jmp rsp
0x0000000000160166 : add dword ptr [rax], eax ; js 0x1601b1 ; sti ; call qword ptr [rsi]
0x0000000000153a4e : add dword ptr [rax], eax ; loopne 0x153a7d ; clc ; jmp qword ptr [rbx]
0x0000000000158d9e : add dword ptr [rax], eax ; loopne 0x158e21 ; stc ; jmp qword ptr [rbx]
0x000000000015a68e : add dword ptr [rax], eax ; loopne 0x15a667 ; stc ; call rcx
0x000000000015d59e : add dword ptr [rax], eax ; loopne 0x15d555 ; cli ; call qword ptr [rdi]
0x0000000000141cf6 : add dword ptr [rax], eax ; mov ah, 0x71 ; sti ; call qword ptr [rbx + rax*8]
0x0000000000140876 : add dword ptr [rax], eax ; mov ah, 0x85 ; stc ; call rsp
0x000000000014237e : add dword ptr [rax], eax ; mov ah, 0x8d ; cld ; jmp rsp
0x0000000000141e5e : add dword ptr [rax], eax ; mov ah, 0xb7 ; sti ; jmp rsp
0x00000000001405b6 : add dword ptr [rax], eax ; mov ah, 0xc2 ; clc ; jmp rsp
0x000000000015aade : add dword ptr [rax], eax ; mov al, 0xe4 ; stc ; jmp rax
0x000000000015eb8e : add dword ptr [rax], eax ; mov al, 1 ; sti ; call qword ptr [rsi]
0x000000000014249e : add dword ptr [rax], eax ; mov bl, 0xfc ; jmp rsp
0x0000000000157816 : add dword ptr [rax], eax ; mov byte ptr [rax], al ; stc ; call rcx
0x000000000015e646 : add dword ptr [rax], eax ; mov ch, ch ; cli ; call qword ptr [rsi]
0x0000000000093a45 : add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x00000000000f1cf0 : add dword ptr [rax], eax ; mov rax, rdi ; pop rbx ; ret
0x0000000000093961 : add dword ptr [rax], eax ; mov rcx, rdi ; mov qword ptr [rdx], rcx ; ret
0x00000000001420a6 : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; sub ah, bh ; call rsp
0x0000000000141546 : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; xchg edx, edi ; call rsp
0x0000000000141a2e : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; xor edi, ebx ; jmp rsp
0x0000000000142116 : add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; xor edi, esp ; call rsp
0x000000000015b92e : add dword ptr [rax], eax ; nop ; cli ; jmp rdx
0x000000000015de6e : add dword ptr [rax], eax ; nop ; iretd ; cli ; jmp qword ptr [rbx]
0x000000000015b35e : add dword ptr [rax], eax ; nop ; sbb edi, edx ; jmp qword ptr [rdx]
0x000000000015f91e : add dword ptr [rax], eax ; nop ; sti ; call qword ptr [rsi]
0x000000000015f94e : add dword ptr [rax], eax ; nop ; sti ; jmp qword ptr [rbx]
0x0000000000141d7e : add dword ptr [rax], eax ; nop ; sti ; jmp rsp
0x000000000015e3b6 : add dword ptr [rax], eax ; or bh, ah ; cli ; jmp qword ptr [rbx]
0x000000000015a996 : add dword ptr [rax], eax ; or bh, bl ; stc ; jmp rax
0x000000000015a706 : add dword ptr [rax], eax ; or bl, dl ; stc ; call qword ptr [rax]
0x0000000000158786 : add dword ptr [rax], eax ; or byte ptr [rax - 7], ah ; jmp qword ptr [rax]
0x000000000015ed36 : add dword ptr [rax], eax ; or byte ptr [rax], cl ; sti ; call rdi
0x000000000015c7fe : add dword ptr [rax], eax ; or byte ptr [rdx], 0xfc ; jmp qword ptr [rcx]
0x000000000015feb6 : add dword ptr [rax], eax ; or byte ptr [rsi], bh ; sti ; call qword ptr [rsi]
0x0000000000158d46 : add dword ptr [rax], eax ; pop rax ; jp 0x158d49 ; jmp qword ptr [rax]
0x000000000015aa16 : add dword ptr [rax], eax ; pop rax ; loope 0x15aa19 ; call rcx
0x000000000013fa2e : add dword ptr [rax], eax ; pop rbx ; cmc ; call rsp
0x000000000015a96e : add dword ptr [rax], eax ; push rax ; fdivp st(1) ; call rcx
0x000000000015551e : add dword ptr [rax], eax ; push rax ; nop ; clc ; jmp qword ptr [rsi]
0x000000000015f0be : add dword ptr [rax], eax ; push rax ; sbb al, 0xfb ; jmp qword ptr [rax]
0x00000000001605be : add dword ptr [rax], eax ; push rax ; sti ; call rdx
0x0000000000141b0e : add dword ptr [rax], eax ; push rcx ; sti ; jmp rsp
0x0000000000140356 : add dword ptr [rax], eax ; push rsp ; fcompi st(7) ; call rsp
0x0000000000140ca6 : add dword ptr [rax], eax ; push rsp ; out dx, al ; stc ; jmp rsp
0x00000000001410de : add dword ptr [rax], eax ; push rsp ; push rcx ; cli ; call rsp
0x0000000000141116 : add dword ptr [rax], eax ; push rsp ; push rsp ; cli ; jmp rsp
0x00000000001405be : add dword ptr [rax], eax ; push rsp ; ret
0x000000000014175e : add dword ptr [rax], eax ; push rsp ; sar edx, 1 ; call rsp
0x0000000000140766 : add dword ptr [rax], eax ; push rsp ; stc ; jmp rsp
0x0000000000085ba0 : add dword ptr [rax], eax ; ret
0x000000000015e74e : add dword ptr [rax], eax ; sal al, 1 ; cli ; call qword ptr [rbx]
0x000000000015fd1e : add dword ptr [rax], eax ; sar byte ptr [rbx], 0xfb ; jmp qword ptr [rdx]
0x0000000000160eee : add dword ptr [rax], eax ; sar byte ptr [rdi - 5], 1 ; jmp qword ptr [rax]
0x00000000001601b6 : add dword ptr [rax], eax ; sbb byte ptr [rbx - 5], al ; call qword ptr [rsi]
0x000000000015fac6 : add dword ptr [rax], eax ; sbb byte ptr [rdi], dh ; sti ; jmp qword ptr [rax]
0x0000000000153a9e : add dword ptr [rax], eax ; shl byte ptr [rdi], 0xf8 ; jmp qword ptr [rdx]
0x000000000015f246 : add dword ptr [rax], eax ; sub byte ptr [rcx], ah ; sti ; jmp qword ptr [rdx]
0x0000000000140076 : add dword ptr [rax], eax ; sub edi, esi ; jmp rsp
0x000000000015b376 : add dword ptr [rax], eax ; test al, 0x1b ; cli ; jmp rax
0x000000000015b426 : add dword ptr [rax], eax ; test al, 0x1e ; cli ; call rcx
0x000000000015b796 : add dword ptr [rax], eax ; test al, 0x42 ; cli ; jmp qword ptr [rbx]
0x00000000001421ee : add dword ptr [rax], eax ; test byte ptr [rax - 4], ah ; jmp rsp
0x0000000000140746 : add dword ptr [rax], eax ; test byte ptr [rax - 7], al ; jmp rsp
0x000000000014255e : add dword ptr [rax], eax ; xchg eax, esp ; ret 0xfffc
0x0000000000141a8e : add dword ptr [rax], eax ; xchg eax, esp ; sti ; call rsp
0x0000000000141ef6 : add dword ptr [rax], eax ; xchg eax, esp ; xlatb ; sti ; jmp rsp
0x0000000000141166 : add dword ptr [rax], eax ; xor al, 0x56 ; cli ; call rsp
0x0000000000142216 : add dword ptr [rax], eax ; xor al, 0x63 ; cld ; call rsp
0x00000000001414e6 : add dword ptr [rax], eax ; xor al, 0x7b ; cli ; jmp rsp
0x0000000000140686 : add dword ptr [rax], eax ; xor al, 0xe5 ; clc ; call rsp
0x00000000001430be : add dword ptr [rax], eax ; xor al, 0xf7 ; std ; jmp rsp
0x0000000000140de6 : add dword ptr [rax], eax ; xor al, 0xfd ; stc ; jmp rsp
0x000000000008e3ab : add dword ptr [rax], edi ; ret 0x4788
0x00000000001031bc : add dword ptr [rax], esp ; je 0x1031a5 ; ret
0x00000000000c180b : add dword ptr [rbp + 0x39], eax ; ret 0x8e0f
0x0000000000113b20 : add dword ptr [rbp + 0x48], esi ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000ba4d1 : add dword ptr [rbp + 0x75], ebx ; jmp 0xba524
0x0000000000092a6e : add dword ptr [rbp + 0x79c689c0], eax ; ret
0x00000000000f1ccc : add dword ptr [rbp + 0xf], eax ; mov dh, 0x42 ; dec dword ptr [rcx - 0x7d] ; ret
0x00000000000aa9c6 : add dword ptr [rbp + 1], ecx ; ret
0x00000000000cfafe : add dword ptr [rbp + 7], esi ; ret
0x000000000003692e : add dword ptr [rbp + 7], esi ; xor eax, eax ; ret
0x000000000011720e : add dword ptr [rbp + r9*4 + 0x35], r9d ; call rsi
0x000000000011720f : add dword ptr [rbp + rcx*4 + 0x35], ecx ; call rsi
0x0000000000095cc7 : add dword ptr [rbp - 0x1a], esi ; ret
0x00000000000874d8 : add dword ptr [rbp - 0x1b], esi ; ret
0x0000000000113a52 : add dword ptr [rbp - 0x1c], esi ; mov rax, qword ptr [rdi + 8] ; call qword ptr [rax]
0x00000000000454c4 : add dword ptr [rbp - 0x1f], esi ; mov eax, 1 ; ret
0x00000000000ae45d : add dword ptr [rbp - 0x28], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000085b51 : add dword ptr [rbp - 0x3c], esi ; nop dword ptr [rax] ; ret
0x000000000007b637 : add dword ptr [rbp - 0x77], ecx ; ret
0x00000000000f3291 : add dword ptr [rbp - 0x7b], eax ; sal byte ptr [rbp - 0x17], 0xf3 ; ret
0x0000000000091114 : add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x00000000000e1b0c : add dword ptr [rbp], 1 ; mov rbx, rax ; jmp 0xe1adf
0x0000000000092c02 : add dword ptr [rbx + 0x294803e0], eax ; ret
0x00000000000026d6 : add dword ptr [rbx + 0x2b], 0x821055b8 ; ret 0x617e
0x000000000007e330 : add dword ptr [rbx + 0x2eae3905], ecx ; add byte ptr [rcx], bh ; ret 0xa7e
0x00000000000336db : add dword ptr [rbx + 0xf450afa], eax ; ret 0x8348
0x00000000000fe2d1 : add dword ptr [rbx - 0x1f37b], ecx ; dec dword ptr [rax + 0x39] ; ret 0x870f
0x000000000002d752 : add dword ptr [rbx - 0x7cb7fe39], eax ; ret 0x8310
0x00000000000c101a : add dword ptr [rbx - 0x7cb7fe40], eax ; ret 0x4801
0x000000000007b341 : add dword ptr [rbx - 0xd], ebx ; ret
0x00000000000bdcdc : add dword ptr [rbx], edi ; adc al, 0xbe ; cmove eax, ecx ; ret
0x000000000010ec85 : add dword ptr [rcx + 0x1b802], ecx ; add byte ptr [rax], al ; ret
0x000000000009620f : add dword ptr [rcx + 0x39], eax ; ret
0x000000000008ef90 : add dword ptr [rcx + 0x39], ecx ; ret
0x0000000000087d17 : add dword ptr [rcx + 0x39], ecx ; ret 0x672
0x0000000000094388 : add dword ptr [rcx + 0x3ffe3], eax ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xc383
0x00000000000bba36 : add dword ptr [rcx + 0x5e], eax ; neg eax ; pop r15 ; ret
0x00000000000bb9f3 : add dword ptr [rcx + 0x5f], eax ; ret
0x0000000000085b83 : add dword ptr [rcx + 0xf], eax ; mov dh, 0x49 ; dec dword ptr [rcx - 0x7d] ; ret 0x8401
0x000000000003f7bb : add dword ptr [rcx + 1], ecx ; ret 0xf49
0x00000000000c313f : add dword ptr [rcx + rax*4 - 0xa], esi ; ret 0x7408
0x0000000000095cc4 : add dword ptr [rcx + rcx*4 + 1], eax ; jne 0x95cb7 ; ret
0x0000000000102af0 : add dword ptr [rcx + rcx*4 - 0x5c], ecx ; ret
0x00000000001007a4 : add dword ptr [rcx + rcx*8 + 0x6348e775], eax ; ret 0xc741
0x00000000000bdc7a : add dword ptr [rcx - 0x1d], edi ; mov eax, 1 ; ret
0x0000000000043604 : add dword ptr [rcx - 0x3a], eax ; jmp qword ptr [r8]
0x000000000007977d : add dword ptr [rcx - 0x3b7cb7fd], ecx ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000010bfb5 : add dword ptr [rcx - 0x77], eax ; add byte ptr [rax + 1], bh ; ret
0x00000000000c1ba7 : add dword ptr [rcx - 0x77], ecx ; ret 0x6348
0x000000000005ff06 : add dword ptr [rcx - 0x77], ecx ; ret 0x76e9
0x00000000000432fa : add dword ptr [rcx - 0x78], eax ; add cl, byte ptr [rcx - 0x7d] ; ret 0xf01
0x00000000000a0745 : add dword ptr [rcx - 0x7d], eax ; ret
0x00000000000a9ce5 : add dword ptr [rcx - 0x7d], ecx ; ret
0x000000000010076f : add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x000000000009d6a6 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4104
0x000000000003f7c3 : add dword ptr [rcx - 0x7d], ecx ; ret 0xeb01
0x000000000002ba40 : add dword ptr [rcx - 0x7d], ecx ; shr dword ptr [rax + 0x41], 0x39 ; ret
0x000000000015b35d : add dword ptr [rcx], 0xfa1b9000 ; jmp qword ptr [rdx]
0x000000000015b375 : add dword ptr [rcx], 0xfa1ba800 ; jmp rax
0x0000000000141015 : add dword ptr [rcx], 0xfa370400 ; jmp rsp
0x0000000000095f2b : add dword ptr [rcx], eax ; add byte ptr [rax], al ; lea rax, [rdi - 0x10] ; ret
0x00000000000d68ee : add dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x000000000013fa2d : add dword ptr [rcx], eax ; add byte ptr [rbx + rbx*2 - 0xb], ah ; call rsp
0x00000000000c1190 : add dword ptr [rcx], eax ; add dword ptr [rcx], eax ; add ecx, eax ; jmp 0x4cf07a7
0x00000000000c1192 : add dword ptr [rcx], eax ; add ecx, eax ; jmp 0x4cf07a5
0x00000000000624e3 : add dword ptr [rcx], ebp ; ret
0x00000000000c0078 : add dword ptr [rcx], edi ; ret
0x00000000000c98b0 : add dword ptr [rcx], edi ; ret 0x8c0f
0x00000000000c1464 : add dword ptr [rcx], edi ; ret 0x8e0f
0x00000000000451eb : add dword ptr [rcx], edi ; ret 0xb87f
0x00000000000c1b62 : add dword ptr [rcx], edi ; ret 0xe97f
0x0000000000108b4b : add dword ptr [rcx], edi ; ret 0xf077
0x00000000000bf81e : add dword ptr [rcx], edi ; ret 0xf57f
0x0000000000063131 : add dword ptr [rcx], esi ; rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x00000000000ffc13 : add dword ptr [rcx], esi ; ror byte ptr [rax - 0x77], 0x37 ; ret
0x0000000000028c40 : add dword ptr [rcx], esi ; ror byte ptr [rax - 0x7d], cl ; ret 0x4901
0x0000000000028871 : add dword ptr [rcx], esi ; ror byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000114af4 : add dword ptr [rdi + 0x28], 4 ; mov eax, 1 ; ret
0x0000000000114b04 : add dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x000000000011e02e : add dword ptr [rdi + 7], esi ; ret
0x0000000000034c1e : add dword ptr [rdi + rbx*2], edi ; je 0x34c39 ; jmp 0x34bed
0x0000000000003a1e : add dword ptr [rdi + rdx - 0x16], 0x5a ; int1 ; mov dl, 0x1e ; ret
0x000000000008f9d7 : add dword ptr [rdi - 0x1a], edi ; ret
0x0000000000090be8 : add dword ptr [rdi - 0x2b], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010199f : add dword ptr [rdi], ecx ; add eax, 0x48c48348 ; pop rbx ; pop rbp ; ret
0x000000000002eca9 : add dword ptr [rdi], ecx ; mov bh, 0xc0 ; ret
0x0000000000102738 : add dword ptr [rdi], ecx ; mov dh, 0x45 ; add byte ptr [rax - 0x7d], cl ; ret 0x3108
0x00000000000a693c : add dword ptr [rdi], ecx ; sahf ; ret 0xd129
0x0000000000094394 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ror dword ptr [rdi], -0x51 ; ret
0x0000000000056fdd : add dword ptr [rdi], ecx ; test dword ptr [rax + rbp*8 - 0x5d160001], esp ; ret 0xffff
0x00000000000cfbfe : add dword ptr [rdi], ecx ; test dword ptr [rbx - 0x9fffffe], ebx ; ret 0xf01
0x00000000000c3148 : add dword ptr [rdi], ecx ; test dword ptr [rdi + rdi*8 - 1], esi ; push rsi ; ret 0x7420
0x0000000000043871 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x000000000009483a : add dword ptr [rdx + 0x2b], 0xd7748104 ; ret
0x0000000000069fcf : add dword ptr [rdx + 4], 1 ; ret
0x000000000006a040 : add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x00000000000e5a3f : add dword ptr [rdx + rax*2], 1 ; ret
0x00000000000ea2e7 : add dword ptr [rdx + rdx*8 + 0x3948ec75], eax ; ret
0x0000000000145145 : add dword ptr [rdx], 0x44 ; ret
0x000000000014c7b4 : add dword ptr [rdx], 0x51 ; ret
0x000000000015002c : add dword ptr [rdx], 0x57 ; ret
0x0000000000158e0b : add dword ptr [rdx], 0x5b ; ret
0x0000000000146fcc : add dword ptr [rdx], 0x6b ; ret
0x000000000014c7bd : add dword ptr [rdx], 0x6d ; ret
0x00000000001516a2 : add dword ptr [rdx], eax ; ret
0x000000000007b33b : add dword ptr [rip + 0x2f04b6], 1 ; pop rbx ; ret
0x000000000007aa10 : add dword ptr [rip + 0x2f0d6d], 1 ; ret
0x000000000004d579 : add dword ptr [rip - 0x7d000000], ebp ; ret 0x8b01
0x0000000000022190 : add dword ptr [rsi - 0x13], edi ; mov byte ptr [rdi], 0 ; ret
0x00000000000e5cf5 : add dword ptr [rsi - 0x77], esp ; add al, bl ; ret
0x000000000014d455 : add dword ptr [rsi], 3 ; mov byte ptr [rcx], al ; ret
0x0000000000156835 : add dword ptr ss:[rax], eax ; js 0x156810 ; clc ; jmp qword ptr [rdi]
0x00000000000ffc3a : add eax, 0x10 ; ret
0x0000000000021ef6 : add eax, 0x112530 ; ret
0x0000000000021f06 : add eax, 0x1146b1 ; ret
0x00000000000d30f0 : add eax, 0x14634800 ; nop ; add rax, rdx ; jmp rax
0x00000000000441b1 : add eax, 0x15b8 ; add byte ptr [rcx - 0x75], cl ; ret
0x000000000011ded5 : add eax, 0x250896 ; test eax, eax ; jne 0x11dee9 ; ret
0x000000000011981d : add eax, 0x250f06 ; call qword ptr [rax]
0x00000000001191ad : add eax, 0x251576 ; call qword ptr [rax]
0x0000000000111562 : add eax, 0x257921 ; add rsp, 8 ; ret
0x0000000000111522 : add eax, 0x2579c9 ; add rsp, 8 ; ret
0x000000000011149a : add eax, 0x257ad9 ; add rsp, 8 ; ret
0x00000000001114e2 : add eax, 0x257b01 ; add rsp, 8 ; ret
0x0000000000104006 : add eax, 0x264fe5 ; mov rax, qword ptr fs:[rax] ; ret
0x000000000010719e : add eax, 0x266d45 ; add rsp, 8 ; ret
0x0000000000107185 : add eax, 0x266d5e ; test eax, eax ; je 0x107199 ; ret
0x00000000001066fa : add eax, 0x267781 ; add rsp, 8 ; ret
0x00000000001066c2 : add eax, 0x2677b9 ; add rsp, 8 ; ret
0x000000000010669e : add eax, 0x2677dd ; add rsp, 8 ; ret
0x00000000000fd842 : add eax, 0x26d069 ; ret
0x00000000000fcf08 : add eax, 0x26d98b ; add rsp, 8 ; ret
0x00000000000e6396 : add eax, 0x282ac5 ; mov eax, dword ptr [rax + 0x38] ; ret
0x00000000000e0937 : add eax, 0x28b964 ; add rsp, 0x18 ; ret
0x00000000000e08d0 : add eax, 0x28ba0b ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e0380 : add eax, 0x28becb ; add rsp, 8 ; ret
0x00000000000e031d : add eax, 0x28bf4e ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dd9f8 : add eax, 0x28cdc3 ; add rsp, 8 ; ret
0x00000000000df073 : add eax, 0x28d0f8 ; add rsp, 8 ; ret
0x00000000000deffb : add eax, 0x28d170 ; mov rdx, rax ; jmp 0xdefdb
0x0000000000087a93 : add eax, 0x29000000 ; ret
0x00000000000a4614 : add eax, 0x2c9f1f ; add rsp, 8 ; ret
0x00000000000e06fd : add eax, 0x2e0f6600 ; ret
0x0000000000087929 : add eax, 0x2e3fda ; add rsp, 8 ; ret
0x00000000000878e7 : add eax, 0x2e401c ; ret
0x0000000000080d75 : add eax, 0x2e83aa ; test eax, eax ; js 0x80d89 ; ret
0x000000000007f734 : add eax, 0x2e9797 ; mov qword ptr [rax], rdi ; ret
0x000000000007f686 : add eax, 0x2e9f95 ; ret
0x000000000007e129 : add eax, 0x2eac8a ; xor edi, edi ; call qword ptr [rax]
0x000000000007f741 : add eax, 0x2ec09e ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000007a976 : add eax, 0x2ef6c5 ; ret
0x000000000007b33c : add eax, 0x2f04b6 ; add dword ptr [rbx - 0xd], ebx ; ret
0x000000000007aa9a : add eax, 0x2f0ce5 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000069834 : add eax, 0x301ee7 ; pop rbx ; pop rbp ; ret
0x000000000014d453 : add eax, 0x3068345 ; mov byte ptr [rcx], al ; ret
0x0000000000036d54 : add eax, 0x33230f ; mov eax, edx ; ret
0x0000000000036d05 : add eax, 0x33235e ; ret
0x0000000000036cf5 : add eax, 0x332372 ; ret
0x0000000000039cda : add eax, 0x3347d7 ; add rsp, 8 ; ret
0x0000000000035da5 : add eax, 0x3389c6 ; test eax, eax ; jne 0x35db9 ; ret
0x000000000002e7f2 : add eax, 0x33a5e1 ; mov qword ptr [rax], rdx ; ret
0x000000000002b366 : add eax, 0x33f5b5 ; ret
0x0000000000023236 : add eax, 0x34b125 ; ret
0x0000000000023226 : add eax, 0x34b145 ; ret
0x000000000001f51c : add eax, 0x34b3c7 ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000001631cd : add eax, 0x3ee0000 ; add byte ptr [rax], al ; ret 5
0x00000000000d1f0e : add eax, 0x41000000 ; pop rsp ; ret
0x0000000000157bc5 : add eax, 0x41200e4a ; ret
0x000000000006d2e1 : add eax, 0x48000000 ; mov eax, edx ; pop rbx ; ret
0x00000000001019a1 : add eax, 0x48c48348 ; pop rbx ; pop rbp ; ret
0x000000000009354e : add eax, 0x48fb4789 ; mov eax, edi ; ret
0x0000000000125c89 : add eax, 0x5bd0000 ; add byte ptr [rax], al ; ret 5
0x000000000012a25d : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x00000000000854bb : add eax, 0x5c415d5b ; ret
0x0000000000162aa1 : add eax, 0x77f0000 ; add byte ptr [rax], al ; ret
0x000000000013fac5 : add eax, 0x7a140001 ; cmc ; call rsp
0x00000000000e3554 : add eax, 0x7cc08548 ; je 0xe3565 ; ret
0x000000000011906b : add eax, 0x89480000 ; fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000000f0fbb : add eax, 0x89c78944 ; ret
0x00000000000e002e : add eax, 0x89ffffff ; ret
0x000000000011b47a : add eax, 0x8c48348 ; ret
0x000000000011150e : add eax, 0xa0 ; add rsp, 8 ; ret
0x000000000011154e : add eax, 0xa8 ; add rsp, 8 ; ret
0x000000000009dc2f : add eax, 0xb8480000 ; ret 0xffff
0x000000000011909e : add eax, 0xc0310000 ; pop rbx ; pop rbp ; ret
0x0000000000000429 : add eax, 0xc1c107c ; ret 0x4412
0x000000000003c450 : add eax, 0xc7480000 ; ret
0x00000000000e2f2d : add eax, 0xd8894800 ; pop rbx ; ret
0x000000000002a073 : add eax, 0xe9000000 ; ret 0xfffe
0x00000000000f0d86 : add eax, 0xfa05894c ; ret
0x000000000003f91f : add eax, 0xfe2dc ; jmp 0x3f8ee
0x00000000000f0e0e : add eax, 0xfff0003d ; dec dword ptr [rax - 0x77] ; ret 0x1776
0x00000000000451e9 : add eax, 1 ; cmp edx, eax ; jg 0x451b0 ; ret
0x00000000000e5c93 : add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x00000000000e5cf3 : add eax, 1 ; mov word ptr [rdx], ax ; ret
0x00000000000898bf : add eax, 1 ; ret
0x0000000000023006 : add eax, 2 ; mov dword ptr [rsp], eax ; call rbx
0x00000000000959c8 : add eax, 2 ; ret
0x00000000000959e1 : add eax, 3 ; ret
0x0000000000100854 : add eax, 8 ; ret
0x00000000000220ed : add eax, dword ptr [0] ; ret
0x00000000000c4667 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x000000000003efc6 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000e55ee : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000fe5c3 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov esi, dword ptr fs:[rdx] ; syscall
0x0000000000111299 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call qword ptr [rax]
0x0000000000095a23 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000001fec6 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000fdd36 : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], 0x85 ; ret
0x00000000000c215f : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x7cb7febd], cl ; ret
0x00000000000f07c9 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x00000000001184c3 : add eax, dword ptr [rax] ; add byte ptr [rcx], al ; ret 0x94eb
0x00000000000b63e5 : add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000009438c : add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xc383
0x00000000000f0869 : add eax, dword ptr [rax] ; add byte ptr [rsi + 0x80], bh ; syscall
0x00000000000dd3bf : add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x000000000009461c : add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000009463f : add eax, dword ptr [rax] ; ret
0x000000000002d3bf : add eax, dword ptr [rax] ; syscall
0x00000000000ff156 : add eax, dword ptr [rbx + 0x2948fce0] ; ret
0x0000000000033642 : add eax, dword ptr [rbx - 0x6bf0fc08] ; ret 0xfe9
0x00000000001005a1 : add eax, dword ptr [rbx - 0x77bffe12] ; ja 0x1005b2 ; ret
0x000000000001fbad : add eax, dword ptr [rbx - 0x7cb70038] ; ret 0xeb04
0x00000000000dc502 : add eax, dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000d650f : add eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x0000000000034810 : add eax, dword ptr [rdi + 0x20] ; pop rbx ; ret
0x0000000000158632 : add eax, dword ptr [rdi + 0xe] ; xor byte ptr [rsi + rcx + 0x18], dh ; ret
0x0000000000094215 : add eax, dword ptr [rdi + rcx - 0x4a] ; ret 0x3945
0x000000000011cb48 : add eax, dword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x00000000000e6cbc : add eax, dword ptr [rdx + rcx] ; ret
0x00000000001425f5 : add eax, dword ptr [rdx] ; add ah, dl ; xlatb ; cld ; call rsp
0x00000000000e6f0e : add eax, dword ptr [rsi + rdx] ; ret
0x000000000000fa60 : add eax, dword ptr [rsi] ; add byte ptr [rdx], dl ; add byte ptr [rbx], cl ; add al, ah ; ret
0x0000000000094701 : add eax, eax ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000006b685 : add eax, eax ; jmp rax
0x000000000004d138 : add eax, eax ; mov eax, r8d ; ret
0x0000000000093e68 : add eax, eax ; ret
0x00000000000651df : add eax, ebp ; jmp 0x651a9
0x0000000000052b95 : add eax, ebp ; jmp rax
0x000000000002f207 : add eax, ebp ; ret
0x00000000000e6e78 : add eax, ebp ; ret 0xfa93
0x00000000000d6245 : add eax, ebx ; cmp rdi, rsi ; ja 0xd61e8 ; pop rbx ; ret
0x000000000003402e : add eax, ebx ; jmp rax
0x000000000006af2f : add eax, ecx ; jmp rax
0x000000000008890a : add eax, ecx ; ret
0x0000000000093e65 : add eax, edi ; add rax, r8 ; ret
0x0000000000088907 : add eax, edi ; add rax, rcx ; ret
0x00000000000a9dd8 : add eax, edi ; jmp rax
0x000000000008757f : add eax, edi ; ret
0x0000000000109505 : add eax, edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000002cee1 : add eax, edx ; jmp r8
0x00000000000584ef : add eax, edx ; jmp rax
0x000000000010951e : add eax, edx ; ret
0x0000000000035281 : add eax, edx ; shr rax, 0x3f ; ret
0x000000000008589e : add eax, edx ; sub rax, rdi ; ret
0x00000000000dd3bd : add eax, esi ; add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x00000000000451b9 : add eax, esi ; cmp ecx, 0x2f ; jmp r8
0x00000000000abe19 : add eax, esi ; jmp rax
0x00000000000a37e5 : add eax, esi ; ret
0x000000000004bc2d : add eax, esp ; jmp rax
0x000000000004d067 : add ebp, 0x30 ; pop rbx ; mov eax, ebp ; pop rbp ; ret
0x00000000000a2ced : add ebp, dword ptr [rcx] ; ret 0x48d
0x0000000000106915 : add ebp, dword ptr [rcx] ; ret 0x8166
0x00000000000375ee : add ebp, dword ptr [rsp + 8] ; mov rsi, rbp ; call r12
0x00000000000bce61 : add ebp, eax ; pop rcx ; ret
0x00000000001452b9 : add ebp, edi ; call qword ptr [rsi]
0x0000000000142729 : add ebp, edi ; call rsp
0x0000000000145289 : add ebp, edi ; jmp qword ptr [rdi]
0x0000000000003122 : add ebp, esi ; mov ecx, 0xd4a3e95a ; pop rsp ; ret 0x52c0
0x00000000001034ee : add ebx, dword ptr [r11 + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000001034ef : add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000000e3508 : add ebx, dword ptr [rbx + 0x5d] ; ret
0x00000000000457f1 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000e5d09 : add ebx, eax ; ret
0x00000000000b5ad6 : add ebx, ebp ; mov cl, 0xf3 ; ret
0x0000000000074cbf : add ebx, ebp ; ret
0x00000000000c91c8 : add ebx, ecx ; jmp r11
0x000000000015eb91 : add ebx, edi ; call qword ptr [rsi]
0x00000000000e6e2f : add ebx, esi ; ret
0x0000000000089278 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0x89269 ; ret
0x0000000000034c1c : add ecx, 1 ; cmp al, 0x5f ; je 0x34c3b ; jmp 0x34bef
0x00000000000bdcda : add ecx, 1 ; cmp edx, dword ptr [rsi + rdi*4] ; cmove eax, ecx ; ret
0x00000000000f328f : add ecx, 1 ; test r8d, r8d ; jne 0xf3289 ; ret
0x0000000000110c75 : add ecx, dword ptr [rax + 0x29] ; fimul dword ptr [rax - 0x7d] ; ret 0x4812
0x00000000000fabd3 : add ecx, dword ptr [rax + 0x29] ; fimul dword ptr [rax - 0x7d] ; ret 0xe801
0x000000000007bf24 : add ecx, dword ptr [rax + 0x29] ; ret
0x00000000000fbfc0 : add ecx, dword ptr [rax + 0x29] ; ret 0x7a8d
0x00000000000cfb60 : add ecx, dword ptr [rax + 1] ; ret
0x0000000000083629 : add ecx, dword ptr [rax + 1] ; ret 0x6348
0x0000000000100a00 : add ecx, dword ptr [rax - 0x68] ; shr rax, 4 ; ret
0x00000000000de848 : add ecx, dword ptr [rax - 0x77] ; adc bl, dh ; ret
0x0000000000089a7a : add ecx, dword ptr [rax - 0x77] ; clc ; jne 0x89a94 ; ret
0x000000000009655a : add ecx, dword ptr [rax - 0x77] ; clc ; jne 0x96574 ; ret
0x000000000009351e : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x00000000000909d1 : add ecx, dword ptr [rax - 0x77] ; fisttp word ptr [rax + 0x29] ; ret 0x2948
0x00000000000a6e3f : add ecx, dword ptr [rax - 0x77] ; ret 0x8d48
0x00000000000e28c7 : add ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x48 ; ret 0xc148
0x000000000006da42 : add ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000132e4b : add ecx, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], dh ; push rdi ; std ; call qword ptr [rax]
0x00000000000ecd78 : add ecx, dword ptr [rbp - 0x77] ; ret
0x0000000000115890 : add ecx, dword ptr [rbx + 0x408b8c55] ; or byte ptr [rcx], bh ; ret 0x1d75
0x0000000000022243 : add ecx, dword ptr [rbx - 0x7cb77efc] ; ret 0x4801
0x000000000004512c : add ecx, dword ptr [rcx + 0x29] ; ret
0x0000000000083570 : add ecx, dword ptr [rcx + rcx*4 + 0x4b] ; mov rdi, r9 ; call rcx
0x00000000000ed6ff : add ecx, dword ptr [rcx + rcx*4 - 0x5b] ; push -0x76000001 ; ret 0x8948
0x00000000000c88fd : add ecx, dword ptr [rcx] ; ret 0xf983
0x000000000006ed1e : add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000033645 : add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xfe9
0x00000000000e4d75 : add ecx, eax ; cmp rdx, rcx ; jb 0xe4d88 ; ret
0x00000000000c1194 : add ecx, eax ; jmp 0x4cf07a3
0x0000000000058327 : add ecx, eax ; jmp rcx
0x00000000000a3a2a : add ecx, eax ; mov qword ptr [rdi + 0x20], rcx ; pop rbx ; pop rbp ; ret
0x000000000010106e : add ecx, ebp ; ret 0xfffd
0x000000000011c7c8 : add ecx, ebx ; call rax
0x00000000000e0dd4 : add ecx, ebx ; ret
0x00000000000946a0 : add ecx, esi ; jmp rcx
0x000000000010cad5 : add edi, 0x10 ; call rcx
0x0000000000106a75 : add edi, 0x18 ; xor eax, eax ; call rbx
0x0000000000108c45 : add edi, 0x23b0 ; call rbx
0x0000000000108c88 : add edi, 0x23b0 ; mov rsi, rbp ; call rbx
0x00000000000f0c24 : add edi, 0x28 ; mov eax, r9d ; syscall
0x000000000010f51c : add edi, 0x58 ; call rcx
0x000000000010eb5c : add edi, 0x68 ; call rcx
0x000000000010be0f : add edi, 0xc8 ; call rcx
0x00000000000b5a8b : add edi, 1 ; test dl, dl ; jne 0xb5a75 ; ret
0x0000000000093501 : add edi, 2 ; mov rax, rdi ; ret
0x000000000009351c : add edi, 3 ; mov rax, rdi ; ret
0x0000000000093531 : add edi, 4 ; mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x000000000009354c : add edi, 5 ; mov dword ptr [rdi - 5], eax ; mov rax, rdi ; ret
0x000000000009356e : add edi, 6 ; mov dword ptr [rdi - 6], eax ; mov rax, rdi ; ret
0x0000000000131620 : add edi, dword ptr [rbx] ; clc ; call qword ptr [rcx]
0x000000000010e75f : add edi, eax ; jmp rdi
0x00000000001007b4 : add edi, eax ; mov eax, edx ; mov qword ptr [r9], rdi ; ret
0x0000000000113424 : add edi, edi ; movsxd rdi, edi ; mov byte ptr [rdx + rdi], 0 ; ret
0x000000000015aef1 : add edi, edx ; jmp qword ptr [rax]
0x00000000000366c9 : add edi, esi ; ret 0
0x00000000001001a1 : add edx, 0xc ; cmp rdx, r8 ; jne 0x100192 ; ret
0x000000000010199d : add edx, 1 ; syscall
0x00000000001007fe : add edx, 2 ; mov dword ptr [r8], ecx ; mov qword ptr [r9], r10 ; ret
0x0000000000100771 : add edx, 2 ; mov dword ptr [r8], edx ; mov qword ptr [r9], r10 ; ret
0x00000000000b3f2e : add edx, dword ptr [rax + 0x6348d389] ; ret
0x0000000000093d68 : add edx, eax ; jl 0x93dd7 ; add rax, rdi ; ret
0x0000000000093d78 : add edx, eax ; jl 0x93dd9 ; lea rax, [rdi + rax + 0x10] ; ret
0x0000000000093d98 : add edx, eax ; jl 0x93dd9 ; lea rax, [rdi + rax + 0x20] ; ret
0x0000000000093db8 : add edx, eax ; jl 0x93dd9 ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000001184c6 : add edx, eax ; jmp 0x11845f
0x00000000000934b1 : add edx, eax ; jmp r10
0x000000000002247b : add edx, eax ; jmp rdx
0x0000000000046412 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x000000000001f5da : add edx, ecx ; cmp esi, ecx ; cmovge eax, edx ; jmp 0x1f5b4
0x00000000000bc217 : add edx, ecx ; jmp rdx
0x0000000000033dfa : add edx, edi ; jmp rdx
0x0000000000055220 : add edx, esi ; call qword ptr [r11 + rax*8]
0x0000000000094660 : add edx, esi ; jmp rdx
0x0000000000049bf8 : add edx, esp ; call qword ptr [r11 + rax*8]
0x00000000000ffc11 : add esi, 1 ; xor eax, eax ; mov qword ptr [rdi], rsi ; ret
0x0000000000021636 : add esi, 8 ; jmp 0x215fb
0x00000000001009e5 : add esi, dword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000001108fe : add esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rbx + 0x5d], bl ; ret
0x000000000008538e : add esi, dword ptr [rdi + 0x40] ; movsx edx, dh ; mov eax, edx ; ret
0x00000000001089eb : add esi, dword ptr [rsi + 2] ; ret
0x00000000000bd127 : add esi, dword ptr [rsi + rax + 0x48] ; add esp, 8 ; ret
0x0000000000093a43 : add esi, eax ; add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x00000000000eaa9b : add esi, eax ; jmp qword ptr [rax]
0x000000000006afe7 : add esi, eax ; jmp rsi
0x00000000001147e7 : add esi, eax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x000000000013ecc9 : add esi, ebx ; jmp rsp
0x0000000000081bfc : add esi, ebx ; ret
0x0000000000143179 : add esi, edi ; call rsp
0x000000000009471b : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x00000000000bba81 : add esi, esi ; or esi, r11d ; jne 0xbba97 ; ret
0x00000000000890e0 : add esi, esi ; ret
0x000000000003691e : add esi, esi ; ret 0xf304
0x00000000000dd2b7 : add esp, 0x10 ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000e2f97 : add esp, 0x10 ; mov eax, 1 ; pop rbx ; ret
0x0000000000082978 : add esp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x00000000000fcad5 : add esp, 0x10 ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010977f : add esp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x00000000000e0984 : add esp, 0x10 ; mov rax, rbx ; pop rbx ; ret
0x000000000002b5f2 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000431ee : add esp, 0x10 ; pop rbx ; ret
0x0000000000036dae : add esp, 0x10 ; ret
0x00000000000d10d4 : add esp, 0x10 ; xor al, al ; pop rbx ; ret
0x000000000002b5c3 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007a771 : add esp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000088733 : add esp, 0x100 ; ret
0x000000000008529d : add esp, 0x100 ; sub rax, rdx ; ret
0x00000000000698e3 : add esp, 0x1000 ; pop rbx ; ret
0x00000000000698f1 : add esp, 0x1000 ; xor eax, eax ; pop rbx ; ret
0x0000000000036458 : add esp, 0x108 ; ret
0x00000000000d7b1e : add esp, 0x120 ; pop rbx ; ret
0x00000000000366f6 : add esp, 0x140 ; pop rbx ; ret
0x0000000000035e67 : add esp, 0x148 ; ret
0x0000000000069e82 : add esp, 0x18 ; mov eax, edx ; ret
0x00000000000d1002 : add esp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000082572 : add esp, 0x18 ; mov rax, rcx ; pop rbx ; pop rbp ; ret
0x00000000000d6188 : add esp, 0x18 ; mov rax, rdx ; ret
0x0000000000069ebe : add esp, 0x18 ; movzx eax, al ; neg eax ; ret
0x0000000000114d34 : add esp, 0x18 ; movzx eax, al ; ret
0x0000000000113b79 : add esp, 0x18 ; pop rbx ; movzx eax, al ; pop rbp ; ret
0x000000000006953c : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000023e15 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000044684 : add esp, 0x18 ; pop rbx ; xor eax, eax ; pop rbp ; ret
0x00000000000231c3 : add esp, 0x18 ; ret
0x00000000000446ba : add esp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000d70d7 : add esp, 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000dbad0 : add esp, 0x20 ; mov eax, ebx ; pop rbx ; ret
0x00000000000478ba : add esp, 0x20 ; mov rax, rbx ; pop rbx ; ret
0x000000000006dfa8 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000035b93 : add esp, 0x20 ; pop rbx ; ret
0x00000000000b164e : add esp, 0x20 ; sar eax, 0x1f ; pop rbx ; ret
0x000000000006cca7 : add esp, 0x20 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d7085 : add esp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00000000000e3826 : add esp, 0x28 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000e453a : add esp, 0x28 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000a351c : add esp, 0x28 ; mov rax, rdx ; ret
0x0000000000111979 : add esp, 0x28 ; pop rbp ; pop r12 ; ret
0x0000000000021c36 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000036e1e : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000002209b : add esp, 0x28 ; ret
0x00000000000f11e5 : add esp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000b4d51 : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000106673 : add esp, 0x30 ; pop rbx ; ret
0x00000000000fe5e1 : add esp, 0x30 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f5ab2 : add esp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000110902 : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000afec2 : add esp, 0x38 ; ret
0x00000000000b0826 : add esp, 0x40 ; mov eax, edx ; pop rbx ; ret
0x0000000000036771 : add esp, 0x40 ; pop rbx ; ret
0x00000000000e6470 : add esp, 0x40 ; ret
0x000000000010d680 : add esp, 0x40 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e2194 : add esp, 0x408 ; ret
0x000000000004775c : add esp, 0x440 ; pop rbx ; ret
0x00000000000d824a : add esp, 0x48 ; movzx eax, al ; ret
0x000000000007668c : add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000001019a3 : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000dd514 : add esp, 0x48 ; ret
0x00000000001075e0 : add esp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000107520 : add esp, 0x50 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dcde8 : add esp, 0x58 ; pop rbx ; pop rbp ; ret
0x00000000000d6f33 : add esp, 0x58 ; ret
0x00000000000dc173 : add esp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00000000000ca63e : add esp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000106dcb : add esp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000d6f82 : add esp, 0x68 ; pop rbx ; pop rbp ; ret
0x00000000001119f4 : add esp, 0x68 ; ret
0x0000000000096612 : add esp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d6945 : add esp, 0x78 ; ret
0x0000000000051813 : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x00000000000742c0 : add esp, 0x80 ; mov eax, esi ; ret
0x0000000000042a0f : add esp, 0x80 ; pop rbx ; ret
0x000000000006a091 : add esp, 0x80 ; ret
0x0000000000038966 : add esp, 0x80 ; xor eax, eax ; pop rbx ; ret
0x000000000003652e : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000111f2d : add esp, 0x88 ; ret
0x00000000000e4dca : add esp, 0x90 ; pop rbx ; ret
0x0000000000077648 : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x000000000006993b : add esp, 0x98 ; ret
0x00000000001104a3 : add esp, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000000000037105 : add esp, 0xa8 ; ret
0x000000000006a557 : add esp, 0xd0 ; mov eax, edx ; pop rbx ; ret
0x00000000000a370d : add esp, 0xd0 ; pop rbx ; ret
0x0000000000036082 : add esp, 0xd0 ; ret
0x000000000004329c : add esp, 0xd8 ; ret
0x00000000000ee97c : add esp, 0xe8 ; pop rbx ; pop rbp ; ret
0x000000000010ce07 : add esp, 8 ; add eax, 2 ; ret
0x0000000000100703 : add esp, 8 ; lea eax, [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x00000000000b8415 : add esp, 8 ; lea rax, [rbx + 2] ; pop rbx ; pop rbp ; ret
0x00000000000b82ea : add esp, 8 ; lea rax, [rbx + 8] ; pop rbx ; pop rbp ; ret
0x000000000004cfea : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000a1744 : add esp, 8 ; mov eax, ecx ; pop rbx ; pop rbp ; ret
0x000000000006a6ad : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000044f1b : add esp, 8 ; mov eax, edx ; ret
0x000000000006c6d1 : add esp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000076584 : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000330e3 : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000006ea14 : add esp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000008212c : add esp, 8 ; mov rax, rdx ; ret
0x0000000000038ca4 : add esp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x00000000000225fd : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x0000000000042a56 : add esp, 8 ; movzx eax, al ; ret
0x00000000001030a2 : add esp, 8 ; movzx eax, ax ; ret
0x0000000000109fb3 : add esp, 8 ; pop rbx ; movzx eax, al ; pop rbp ; ret
0x0000000000109519 : add esp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x0000000000021839 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000023215 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000036363 : add esp, 8 ; pop rbx ; ret
0x00000000000be2fb : add esp, 8 ; pop rbx ; xor eax, eax ; pop rbp ; ret
0x0000000000021ee3 : add esp, 8 ; ret
0x0000000000118ed9 : add esp, 8 ; sar eax, 0x1f ; ret
0x0000000000114e5c : add esp, 8 ; shr eax, 0x1f ; ret
0x00000000000243c8 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000cc2c4 : add esp, 8 ; xor eax, eax ; ret
0x00000000000f972c : add qword ptr [r8 - 0x7d], r9 ; cli ; add al, 0xf ; xchg eax, esi ; ret
0x00000000000bf679 : add qword ptr [r8 - 0x7d], rcx ; ret
0x00000000000d10c6 : add qword ptr [r8], 1 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000028c3f : add qword ptr [r9], r14 ; ror byte ptr [rax - 0x7d], cl ; ret 0x4901
0x00000000001031bb : add qword ptr [rax], r12 ; je 0x1031a6 ; ret
0x00000000001031ba : add qword ptr [rax], r12 ; je 0x1031a7 ; ret
0x00000000001405b5 : add qword ptr [rax], r8 ; mov ah, 0xc2 ; clc ; jmp rsp
0x00000000001405bd : add qword ptr [rax], r8 ; push rsp ; ret
0x0000000000085b50 : add qword ptr [rbp - 0x3c], rsi ; nop dword ptr [rax] ; ret
0x00000000000e1b0b : add qword ptr [rbp], 1 ; mov rbx, rax ; jmp 0xe1ae0
0x0000000000028870 : add qword ptr [rcx], rsi ; ror byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000000934b0 : add r10, rax ; jmp r10
0x00000000000c91c7 : add r11, r9 ; jmp r11
0x000000000002cee0 : add r8, rdx ; jmp r8
0x00000000000451b8 : add r8, rsi ; cmp ecx, 0x2f ; jmp r8
0x00000000000936a8 : add r8b, byte ptr [r8] ; lea rax, [rdi + 2] ; ret
0x00000000000935f8 : add r8b, byte ptr [r8] ; mov rax, rdi ; ret
0x000000000004d137 : add r8d, eax ; mov eax, r8d ; ret
0x000000000011c7c7 : add r9, r11 ; call rax
0x0000000000047357 : add r9b, byte ptr [r9 + rcx*4 - 0x3e] ; jmp 0x47375
0x00000000000ffbf0 : add r9b, byte ptr [rax + 0x39] ; ret 0x2972
0x00000000000451e8 : add rax, 1 ; cmp edx, eax ; jg 0x451b1 ; ret
0x00000000000959d0 : add rax, 1 ; ret
0x00000000000959c7 : add rax, 2 ; ret
0x00000000000959e0 : add rax, 3 ; ret
0x00000000000220ec : add rax, qword ptr [0] ; ret
0x000000000003480f : add rax, qword ptr [rdi + 0x20] ; pop rbx ; ret
0x000000000011cb47 : add rax, qword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x00000000000220eb : add rax, qword ptr fs:[0] ; ret
0x000000000004bc2c : add rax, r12 ; jmp rax
0x0000000000052b94 : add rax, r13 ; jmp rax
0x000000000006b684 : add rax, r8 ; jmp rax
0x0000000000093e67 : add rax, r8 ; ret
0x00000000000935b8 : add rax, r9 ; jmp rax
0x000000000003402d : add rax, rbx ; jmp rax
0x000000000006af2e : add rax, rcx ; jmp rax
0x0000000000088909 : add rax, rcx ; ret
0x0000000000093e64 : add rax, rdi ; add rax, r8 ; ret
0x0000000000088906 : add rax, rdi ; add rax, rcx ; ret
0x00000000000a9dd7 : add rax, rdi ; jmp rax
0x000000000008757e : add rax, rdi ; ret
0x00000000000584ee : add rax, rdx ; jmp rax
0x0000000000035280 : add rax, rdx ; shr rax, 0x3f ; ret
0x000000000008589d : add rax, rdx ; sub rax, rdi ; ret
0x00000000000abe18 : add rax, rsi ; jmp rax
0x00000000000375ed : add rbp, qword ptr [rsp + 8] ; mov rsi, rbp ; call r12
0x0000000000145288 : add rbp, rdi ; jmp qword ptr [rdi]
0x0000000000034c1b : add rcx, 1 ; cmp al, 0x5f ; je 0x34c3c ; jmp 0x34bf0
0x00000000000e4d74 : add rcx, rax ; cmp rdx, rcx ; jb 0xe4d89 ; ret
0x0000000000058326 : add rcx, rax ; jmp rcx
0x00000000000a3a29 : add rcx, rax ; mov qword ptr [rdi + 0x20], rcx ; pop rbx ; pop rbp ; ret
0x000000000009469f : add rcx, rsi ; jmp rcx
0x000000000010cad4 : add rdi, 0x10 ; call rcx
0x0000000000106a74 : add rdi, 0x18 ; xor eax, eax ; call rbx
0x0000000000108c44 : add rdi, 0x23b0 ; call rbx
0x00000000000f0c23 : add rdi, 0x28 ; mov eax, r9d ; syscall
0x000000000010f51b : add rdi, 0x58 ; call rcx
0x000000000010eb5b : add rdi, 0x68 ; call rcx
0x000000000010be0e : add rdi, 0xc8 ; call rcx
0x00000000000b5a8a : add rdi, 1 ; test dl, dl ; jne 0xb5a76 ; ret
0x0000000000093500 : add rdi, 2 ; mov rax, rdi ; ret
0x000000000009351b : add rdi, 3 ; mov rax, rdi ; ret
0x000000000010e75e : add rdi, rax ; jmp rdi
0x00000000001007b3 : add rdi, rax ; mov eax, edx ; mov qword ptr [r9], rdi ; ret
0x000000000010199c : add rdx, 1 ; syscall
0x0000000000049bf7 : add rdx, r12 ; call qword ptr [r11 + rax*8]
0x000000000005521f : add rdx, r14 ; call qword ptr [r11 + rax*8]
0x0000000000046411 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000093d67 : add rdx, rax ; jl 0x93dd8 ; add rax, rdi ; ret
0x0000000000093d66 : add rdx, rax ; jl 0x93dd9 ; add rax, rdi ; ret
0x000000000002247a : add rdx, rax ; jmp rdx
0x00000000000bc216 : add rdx, rcx ; jmp rdx
0x0000000000033df9 : add rdx, rdi ; jmp rdx
0x000000000009465f : add rdx, rsi ; jmp rdx
0x00000000000ffc10 : add rsi, 1 ; xor eax, eax ; mov qword ptr [rdi], rsi ; ret
0x0000000000021635 : add rsi, 8 ; jmp 0x215fc
0x000000000006afe6 : add rsi, rax ; jmp rsi
0x00000000001147e6 : add rsi, rax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x0000000000082977 : add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x000000000010977e : add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x00000000000e0983 : add rsp, 0x10 ; mov rax, rbx ; pop rbx ; ret
0x000000000002b5f1 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000431ed : add rsp, 0x10 ; pop rbx ; ret
0x0000000000036dad : add rsp, 0x10 ; ret
0x00000000000d10d3 : add rsp, 0x10 ; xor al, al ; pop rbx ; ret
0x000000000007a770 : add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x0000000000088732 : add rsp, 0x100 ; ret
0x00000000000698e2 : add rsp, 0x1000 ; pop rbx ; ret
0x0000000000036457 : add rsp, 0x108 ; ret
0x00000000000d7b1d : add rsp, 0x120 ; pop rbx ; ret
0x00000000000366f5 : add rsp, 0x140 ; pop rbx ; ret
0x0000000000035e66 : add rsp, 0x148 ; ret
0x0000000000069e81 : add rsp, 0x18 ; mov eax, edx ; ret
0x00000000000d1001 : add rsp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000082571 : add rsp, 0x18 ; mov rax, rcx ; pop rbx ; pop rbp ; ret
0x00000000000d6187 : add rsp, 0x18 ; mov rax, rdx ; ret
0x0000000000069ebd : add rsp, 0x18 ; movzx eax, al ; neg eax ; ret
0x0000000000114d33 : add rsp, 0x18 ; movzx eax, al ; ret
0x0000000000113b78 : add rsp, 0x18 ; pop rbx ; movzx eax, al ; pop rbp ; ret
0x0000000000023e14 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000044683 : add rsp, 0x18 ; pop rbx ; xor eax, eax ; pop rbp ; ret
0x00000000000231c2 : add rsp, 0x18 ; ret
0x00000000000446b9 : add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000dbacf : add rsp, 0x20 ; mov eax, ebx ; pop rbx ; ret
0x00000000000478b9 : add rsp, 0x20 ; mov rax, rbx ; pop rbx ; ret
0x000000000006dfa7 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000035b92 : add rsp, 0x20 ; pop rbx ; ret
0x00000000000b164d : add rsp, 0x20 ; sar eax, 0x1f ; pop rbx ; ret
0x00000000000d7084 : add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00000000000e3825 : add rsp, 0x28 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000e4539 : add rsp, 0x28 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000a351b : add rsp, 0x28 ; mov rax, rdx ; ret
0x0000000000111978 : add rsp, 0x28 ; pop rbp ; pop r12 ; ret
0x0000000000036e1d : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000002209a : add rsp, 0x28 ; ret
0x00000000000f11e4 : add rsp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000b4d50 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000106672 : add rsp, 0x30 ; pop rbx ; ret
0x0000000000110901 : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000afec1 : add rsp, 0x38 ; ret
0x00000000000b0825 : add rsp, 0x40 ; mov eax, edx ; pop rbx ; ret
0x0000000000036770 : add rsp, 0x40 ; pop rbx ; ret
0x00000000000e646f : add rsp, 0x40 ; ret
0x00000000000e2193 : add rsp, 0x408 ; ret
0x000000000004775b : add rsp, 0x440 ; pop rbx ; ret
0x00000000000d8249 : add rsp, 0x48 ; movzx eax, al ; ret
0x00000000001019a2 : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000dd513 : add rsp, 0x48 ; ret
0x00000000001075df : add rsp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dcde7 : add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x00000000000d6f32 : add rsp, 0x58 ; ret
0x00000000000dc172 : add rsp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00000000000ca63d : add rsp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d6f81 : add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x00000000001119f3 : add rsp, 0x68 ; ret
0x0000000000096611 : add rsp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d6944 : add rsp, 0x78 ; ret
0x00000000000742bf : add rsp, 0x80 ; mov eax, esi ; ret
0x0000000000042a0e : add rsp, 0x80 ; pop rbx ; ret
0x000000000006a090 : add rsp, 0x80 ; ret
0x000000000003652d : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000111f2c : add rsp, 0x88 ; ret
0x00000000000e4dc9 : add rsp, 0x90 ; pop rbx ; ret
0x0000000000077647 : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x000000000006993a : add rsp, 0x98 ; ret
0x00000000001104a2 : add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000000000037104 : add rsp, 0xa8 ; ret
0x00000000000a370c : add rsp, 0xd0 ; pop rbx ; ret
0x0000000000036081 : add rsp, 0xd0 ; ret
0x000000000004329b : add rsp, 0xd8 ; ret
0x00000000000ee97b : add rsp, 0xe8 ; pop rbx ; pop rbp ; ret
0x000000000010ce06 : add rsp, 8 ; add eax, 2 ; ret
0x0000000000100702 : add rsp, 8 ; lea eax, [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x000000000004cfe9 : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000a1743 : add rsp, 8 ; mov eax, ecx ; pop rbx ; pop rbp ; ret
0x000000000006a6ac : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000044f1a : add rsp, 8 ; mov eax, edx ; ret
0x000000000006c6d0 : add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000076583 : add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000330e2 : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000006ea13 : add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000008212b : add rsp, 8 ; mov rax, rdx ; ret
0x0000000000038ca3 : add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x00000000000225fc : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x0000000000042a55 : add rsp, 8 ; movzx eax, al ; ret
0x00000000001030a1 : add rsp, 8 ; movzx eax, ax ; ret
0x0000000000109fb2 : add rsp, 8 ; pop rbx ; movzx eax, al ; pop rbp ; ret
0x0000000000109518 : add rsp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x0000000000023214 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000036362 : add rsp, 8 ; pop rbx ; ret
0x00000000000be2fa : add rsp, 8 ; pop rbx ; xor eax, eax ; pop rbp ; ret
0x0000000000021ee2 : add rsp, 8 ; ret
0x0000000000118ed8 : add rsp, 8 ; sar eax, 0x1f ; ret
0x0000000000114e5b : add rsp, 8 ; shr eax, 0x1f ; ret
0x00000000000243c7 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000cc2c3 : add rsp, 8 ; xor eax, eax ; ret
0x00000000000bb726 : add sil, al ; or byte ptr [r10], r8b ; xor eax, eax ; ret
0x00000000000e5d06 : add word ptr [rax], 1 ; ret
0x00000000000e5a3e : add word ptr [rdx + rax*2], 1 ; ret
0x0000000000023022 : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000011de08 : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000011e00e : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000090a10 : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000a60a5 : and al, 0 ; add byte ptr [rax], al ; syscall
0x000000000011e029 : and al, 0 ; cmp rdi, 1 ; ja 0x11e040 ; ret
0x000000000011dceb : and al, 0 ; jne 0x11dcb9 ; add rsp, 8 ; ret
0x000000000011de19 : and al, 0 ; sub rsp, 8 ; call 0xca038
0x00000000000c7743 : and al, 0x10 ; add dword ptr [rax], eax ; add al, ch ; ret
0x000000000011bd68 : and al, 0x10 ; call rax
0x000000000007e0a1 : and al, 0x10 ; call rdx
0x000000000003596b : and al, 0x10 ; fld xword ptr [rsp + 8] ; ret
0x00000000000e143f : and al, 0x10 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000106b4a : and al, 0x10 ; mov rdi, rbp ; call r14
0x0000000000097027 : and al, 0x10 ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x00000000000855db : and al, 0x14 ; add byte ptr [rcx], ch ; ret
0x00000000000dce39 : and al, 0x14 ; syscall
0x000000000014493c : and al, 0x17 ; add byte ptr [rax], al ; nop ; movsd dword ptr [rdi], dword ptr [rsi] ; out dx, al ; call qword ptr [rsi]
0x000000000011accc : and al, 0x18 ; add byte ptr [rax], al ; add byte ptr [rax], al ; call 0xd6f08
0x000000000011accb : and al, 0x18 ; add byte ptr [rax], al ; add byte ptr [rax], al ; call 0xd6f09
0x00000000000e44f6 : and al, 0x18 ; call 0xf07c4
0x000000000002b0e4 : and al, 0x18 ; call r15
0x0000000000021dc1 : and al, 0x18 ; call rax
0x0000000000022f5a : and al, 0x18 ; call rbx
0x000000000010c3d3 : and al, 0x18 ; call rcx
0x00000000000ef74e : and al, 0x18 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x00000000000ef7ce : and al, 0x18 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00000000000934e9 : and al, 0x18 ; mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x00000000000d69b8 : and al, 0x18 ; mov eax, 0x101 ; syscall
0x00000000000e451a : and al, 0x18 ; mov eax, ebx ; movsxd r10, ecx ; syscall
0x00000000000ebdf6 : and al, 0x18 ; mov edi, 0x2000004 ; call rax
0x000000000011c3c1 : and al, 0x18 ; mov rax, rdx ; add rsp, 0x28 ; ret
0x00000000000a23e5 : and al, 0x18 ; mov rdi, qword ptr [r13] ; call r12
0x00000000000ebce9 : and al, 0x18 ; mov rsi, qword ptr [rsp + 8] ; call rax
0x00000000000dce34 : and al, 0x18 ; movsxd rdi, dword ptr [rsp + 0x14] ; syscall
0x0000000000117ac2 : and al, 0x1d ; add byte ptr [rax - 0x77], cl ; fsubp st(0) ; ret
0x000000000000094d : and al, 0x20 ; add byte ptr [rax], al ; ret
0x00000000000d31e7 : and al, 0x20 ; call 0x1f474
0x0000000000096c65 : and al, 0x20 ; call rbx
0x000000000010c1c0 : and al, 0x20 ; call rcx
0x0000000000096cff : and al, 0x20 ; lea rcx, [rax + 4] ; call rbx
0x000000000007e09c : and al, 0x20 ; mov qword ptr [rsp + 0x10], rcx ; call rdx
0x000000000002b0df : and al, 0x20 ; mov rdi, qword ptr [rsp + 0x18] ; call r15
0x00000000000bfc42 : and al, 0x20 ; mov rdi, r15 ; call 0xbbf27
0x0000000000096880 : and al, 0x20 ; mov rsi, r13 ; lea rcx, [rax + 4] ; call rbx
0x000000000014543c : and al, 0x22 ; add byte ptr [rax], al ; mov al, 7 ; out dx, eax ; call qword ptr [rdi]
0x000000000012d344 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x0000000000141918 : and al, 0x26 ; sti ; jmp rsp
0x000000000011c33e : and al, 0x28 ; add byte ptr [rbp + 0xd], dh ; add rsp, 0x38 ; ret
0x000000000007de84 : and al, 0x28 ; call rax
0x0000000000080541 : and al, 0x28 ; mov rdi, r12 ; call rax
0x000000000007de51 : and al, 0x28 ; mov rdi, r15 ; call qword ptr [rax]
0x00000000000e0d60 : and al, 0x29 ; or byte ptr [rdi], 0x95 ; ret 0xd3eb
0x0000000000102aee : and al, 0x2c ; add dword ptr [rcx + rcx*4 - 0x5c], ecx ; ret
0x0000000000044be4 : and al, 0x30 ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8348
0x00000000000c6c52 : and al, 0x30 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x84c6
0x00000000000c775e : and al, 0x30 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000d78f4 : and al, 0x30 ; mov edx, 1 ; jmp 0xd78c8
0x0000000000114cad : and al, 0x30 ; mov qword ptr [rsp + 8], rax ; xor eax, eax ; call rdx
0x00000000000971ef : and al, 0x30 ; mov rcx, r13 ; mov rdi, rbp ; call rbx
0x000000000013f5e8 : and al, 0x31 ; hlt ; call rsp
0x0000000000044bee : and al, 0x38 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x854d
0x00000000000a3232 : and al, 0x38 ; call rax
0x00000000000dd50f : and al, 0x38 ; mov eax, edx ; add rsp, 0x48 ; ret
0x00000000000341e0 : and al, 0x38 ; or ebx, ebp ; ret 0x1f0f
0x000000000007cc23 : and al, 0x3f ; xor cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x1589
0x00000000000254a2 : and al, 0x40 ; mov dword ptr [rsp + 8], eax ; call r14
0x0000000000025c88 : and al, 0x40 ; mov dword ptr [rsp + 8], eax ; call r15
0x00000000000253a8 : and al, 0x40 ; mov dword ptr [rsp + 8], eax ; call rbx
0x00000000000a322d : and al, 0x40 ; mov rax, qword ptr [rsp + 0x38] ; call rax
0x0000000000025a2c : and al, 0x40 ; xor edx, edx ; mov dword ptr [rsp + 8], eax ; call r14
0x0000000000107ae2 : and al, 0x41 ; call qword ptr [rbx]
0x00000000001115c5 : and al, 0x41 ; pop rsp ; ret
0x000000000009cb92 : and al, 0x44 ; sbb eax, dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0x840f
0x000000000002b5f0 : and al, 0x48 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dcb93 : and al, 0x48 ; add esp, 0x18 ; mov eax, edx ; ret
0x00000000000d6186 : and al, 0x48 ; add esp, 0x18 ; mov rax, rdx ; ret
0x000000000010d4d6 : and al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000006dfa6 : and al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dc83e : and al, 0x48 ; add esp, 0x28 ; ret
0x00000000000e63fd : and al, 0x48 ; add esp, 0x38 ; ret
0x00000000000e646e : and al, 0x48 ; add esp, 0x40 ; ret
0x0000000000027415 : and al, 0x48 ; call rax
0x0000000000096734 : and al, 0x48 ; lea ecx, [rax + 1] ; call rbx
0x0000000000027a15 : and al, 0x48 ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000096130 : and al, 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000afa9b : and al, 0x48 ; mov edx, dword ptr [rsp + 0x28] ; call rax
0x00000000000e45a2 : and al, 0x48 ; mov edx, eax ; call 0xf0826
0x0000000000090810 : and al, 0x48 ; test esi, esi ; jne 0x9082b ; jmp 0x907e1
0x00000000000d5214 : and al, 0x49 ; mov edx, ecx ; mov eax, 0x11 ; syscall
0x00000000000e3f14 : and al, 0x49 ; mov edx, ecx ; mov eax, 0x113 ; syscall
0x00000000000e3fb4 : and al, 0x49 ; mov edx, ecx ; mov eax, 0x114 ; syscall
0x00000000000dba04 : and al, 0x49 ; mov edx, ecx ; mov eax, 0x115 ; syscall
0x00000000000e4084 : and al, 0x49 ; mov edx, ecx ; mov eax, 0x116 ; syscall
0x00000000000d5284 : and al, 0x49 ; mov edx, ecx ; mov eax, 0x12 ; syscall
0x00000000000dcd54 : and al, 0x49 ; mov edx, ecx ; mov eax, 0x17 ; syscall
0x00000000000e47a4 : and al, 0x49 ; mov edx, ecx ; mov eax, 0x2c ; syscall
0x00000000000e4594 : and al, 0x49 ; mov edx, ecx ; mov eax, 0x2d ; syscall
0x00000000000e4e14 : and al, 0x49 ; mov edx, ecx ; mov eax, 0x45 ; syscall
0x00000000000e4e84 : and al, 0x49 ; mov edx, ecx ; mov eax, 0x46 ; syscall
0x00000000000e3bd4 : and al, 0x49 ; mov edx, ecx ; mov eax, 0xe8 ; syscall
0x00000000000f986b : and al, 0x4c ; mov edi, esp ; call rax
0x0000000000131fb4 : and al, 0x4d ; stc ; jmp qword ptr [rdx - 0x3c0006b3]
0x00000000000c3fc7 : and al, 0x50 ; add dword ptr [rax], eax ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x000000000002817c : and al, 0x50 ; mov dword ptr [rsp + 8], eax ; call r12
0x000000000002894b : and al, 0x50 ; mov dword ptr [rsp + 8], eax ; call r15
0x0000000000029a95 : and al, 0x50 ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x00000000000423ea : and al, 0x54 ; sbb eax, dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0x840f
0x000000000013ef58 : and al, 0x58 ; call rsp
0x000000000002951a : and al, 0x58 ; mov dword ptr [rsp + 8], eax ; call r15
0x0000000000026e74 : and al, 0x58 ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000013f6f8 : and al, 0x59 ; hlt ; jmp rsp
0x0000000000141cb8 : and al, 0x6e ; sti ; jmp rsp
0x00000000000c4027 : and al, 0x71 ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret 0x4e0f
0x0000000000141ce8 : and al, 0x71 ; sti ; jmp rsp
0x00000000000d1f38 : and al, 0x74 ; sal byte ptr [rcx], 1 ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000e8cad : and al, 0x74 ; sbb byte ptr [rbx + 0x5d], bl ; xor eax, eax ; pop r12 ; ret
0x00000000000c3fba : and al, 0x78 ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x854d
0x0000000000027b36 : and al, 0x78 ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x00000000001407f8 : and al, 0x7b ; stc ; jmp rsp
0x00000000000df323 : and al, 0x83 ; ret
0x00000000000442a2 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x1ee9
0x00000000000b29e7 : and al, 0x89 ; enter 0x6348, 0x7c ; and al, 8 ; syscall
0x000000000002b907 : and al, 0x89 ; ret
0x00000000000fff41 : and al, 0x89 ; ret 0xc148
0x00000000000d6fa1 : and al, 0x8b ; jl 0xd6fcf ; or al, 0x89 ; ret
0x0000000000029449 : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000140990 : and al, 0x92 ; stc ; jmp rsp
0x0000000000026997 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000013fbb8 : and al, 0x9a ; cmc ; call rsp
0x00000000000c9323 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe2c1
0x000000000002732f : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000dd646 : and al, 0xb0 ; ret
0x00000000000d6841 : and al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000d47ae : and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc889
0x00000000000d6a91 : and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000000d6b01 : and al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000000d7151 : and al, 0xb8 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000b2d71 : and al, 0xb8 ; and al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000b2de1 : and al, 0xb8 ; and eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000007f468 : and al, 0xb8 ; or byte ptr [rax], al ; add al, ch ; ret
0x00000000000e35f1 : and al, 0xb8 ; or byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000000e0111 : and al, 0xb8 ; sbb al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000dd61a : and al, 0xb8 ; sbb byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000000e43a1 : and al, 0xb8 ; sub al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000dc8cb : and al, 0xb8 ; sub byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x00000000000e4301 : and al, 0xb8 ; sub eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000e41e1 : and al, 0xb8 ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x000000000013f870 : and al, 0xbe ; hlt ; jmp rsp
0x00000000000bcd8b : and al, 0xc ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000069e7f : and al, 0xc ; add rsp, 0x18 ; mov eax, edx ; ret
0x0000000000023e12 : and al, 0xc ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000003970d : and al, 0xc ; add rsp, 0x18 ; ret
0x00000000000b2b22 : and al, 0xc ; add rsp, 0x28 ; ret
0x000000000011c373 : and al, 0xc ; add rsp, 0x38 ; ret
0x00000000000e4cde : and al, 0xc ; mov eax, ebx ; movsxd r10, ecx ; syscall
0x00000000000dbed5 : and al, 0xc ; mov eax, ecx ; syscall
0x00000000000b2b01 : and al, 0xc ; movsxd r10, ecx ; syscall
0x00000000000dbaad : and al, 0xc ; movsxd rdi, dword ptr [rsp + 8] ; mov eax, ebx ; syscall
0x0000000000043791 : and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8d48
0x000000000013f368 : and al, 0xc0 ; call rsp
0x000000000000219d : and al, 0xc7 ; jno 0x21ee ; ret 0x1dd4
0x00000000000e34f8 : and al, 0xc8 ; mov qword ptr [rsp - 0x30], r9 ; syscall
0x000000000013e750 : and al, 0xcd ; out dx, eax ; call rsp
0x00000000001431b4 : and al, 0xd ; add al, byte ptr [rax] ; movsb byte ptr [rdi], byte ptr [rsi] ; add al, 0xfe ; jmp rsp
0x00000000000e34fd : and al, 0xd0 ; syscall
0x0000000000035b63 : and al, 0xdb ; jl 0x35b91 ; adc al, ch ; ret
0x0000000000142f90 : and al, 0xe6 ; std ; jmp rsp
0x000000000016193c : and al, 0xe7 ; add dword ptr [rax], eax ; jo 0x1618f1 ; sti ; jmp qword ptr [rsi]
0x00000000000d6ec5 : and al, 0xe8 ; add cl, byte ptr [rdi] ; ret 0x48c3
0x00000000000f91fe : and al, 0xe8 ; cld ; ret
0x00000000000359e1 : and al, 0xe8 ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x0000000000035a7b : and al, 0xe8 ; fstp xword ptr [rdi] ; ret
0x0000000000101f11 : and al, 0xe8 ; mov dword ptr [rsi], eax ; mov eax, 1 ; ret
0x00000000000f49f6 : and al, 0xe8 ; mov eax, 0x83 ; syscall
0x0000000000035a5b : and al, 0xe8 ; ret
0x00000000000d4d88 : and al, 0xe8 ; ret 0xffda
0x00000000000dbd05 : and al, 0xeb ; mov eax, 0x10 ; syscall
0x00000000000dc5e2 : and al, 0xeb ; ror byte ptr [rdi], 0x1f ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000472bc : and al, 0xec ; fld xword ptr [rsp - 0x18] ; ret
0x000000000007075d : and al, 0xf0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x0000000000035bff : and al, 0xf0 ; and eax, 0x8000 ; ret
0x0000000000035a77 : and al, 0xf0 ; fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x0000000000035b35 : and al, 0xf0 ; mov dword ptr [rdi], eax ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000a2bea : and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x00000000000a2bf0 : and al, 0xf0 ; ret
0x00000000000dbd15 : and al, 0xf3 ; ret
0x000000000014d691 : and al, 0xf4 ; jmp qword ptr [rdi]
0x0000000000150d81 : and al, 0xf6 ; jmp qword ptr [rsi]
0x00000000000da291 : and al, 0xf6 ; ret
0x000000000008e516 : and al, 0xf8 ; jne 0x8e3f6 ; ret
0x0000000000047275 : and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000004727b : and al, 0xf8 ; ret
0x0000000000059738 : and al, 0xf8 ; xor byte ptr [rax], al ; call rax
0x000000000004722f : and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x0000000000047235 : and al, 0xfc ; ret
0x0000000000035c2b : and al, 0xfe ; fldcw word ptr [rsp - 2] ; ret
0x0000000000035c2f : and al, 0xfe ; ret
0x00000000000d71f5 : and al, 1 ; add byte ptr [rax], al ; syscall
0x0000000000142b3d : and al, 2 ; add ah, dh ; std ; call rsp
0x00000000000e4c2a : and al, 4 ; movsxd r10, ecx ; syscall
0x0000000000107071 : and al, 8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rax]
0x000000000004386f : and al, 8 ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x8341
0x00000000000a13de : and al, 8 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000002f473 : and al, 8 ; add rsp, 0x18 ; ret
0x00000000000dc6f4 : and al, 8 ; add rsp, 0x28 ; ret
0x000000000006ca76 : and al, 8 ; call 0x78d04
0x000000000006ca75 : and al, 8 ; call 0x78d05
0x000000000010924f : and al, 8 ; call qword ptr [rax]
0x000000000008351a : and al, 8 ; call qword ptr [rdx]
0x0000000000028180 : and al, 8 ; call r12
0x00000000000254a6 : and al, 8 ; call r14
0x0000000000025c8c : and al, 8 ; call r15
0x000000000002206e : and al, 8 ; call rax
0x00000000000253ac : and al, 8 ; call rbx
0x0000000000108108 : and al, 8 ; call rcx
0x0000000000035aae : and al, 8 ; fscale ; fstp st(1) ; ret
0x0000000000104c3f : and al, 8 ; jne 0x104c30 ; add rsp, 0x18 ; ret
0x00000000000e44f2 : and al, 8 ; mov dword ptr [rsp + 0x18], edi ; call 0xf07c8
0x00000000000dc6cf : and al, 8 ; mov eax, 0x13 ; syscall
0x00000000000dc76f : and al, 8 ; mov eax, 0x14 ; syscall
0x00000000000e354c : and al, 8 ; mov eax, 0x38 ; syscall
0x0000000000036291 : and al, 8 ; mov eax, 0x82 ; syscall
0x00000000000dbab2 : and al, 8 ; mov eax, ebx ; syscall
0x000000000006cb5c : and al, 8 ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x0000000000027410 : and al, 8 ; mov rdi, qword ptr [rsp + 0x48] ; call rax
0x0000000000110a9e : and al, 8 ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000375f0 : and al, 8 ; mov rsi, rbp ; call r12
0x00000000000b2943 : and al, 8 ; or rdi, 0xffffffffffffffff ; mov eax, ecx ; syscall
0x00000000000c0315 : and al, 8 ; pop rbx ; mov eax, dword ptr [rbp + 4] ; pop rbp ; pop r12 ; ret
0x000000000003596f : and al, 8 ; ret
0x00000000000b29ed : and al, 8 ; syscall
0x0000000000114cb2 : and al, 8 ; xor eax, eax ; call rdx
0x00000000001404d9 : and al, bh ; jmp rsp
0x0000000000162d20 : and al, byte ptr [rax + rax] ; add byte ptr [rdx + 2], bl ; add byte ptr [rax], al ; ret
0x0000000000035be0 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000355ac : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000b2d52 : and al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000000bfe4 : and al, byte ptr [rax] ; or eax, dword ptr [rax] ; ret 0xc
0x0000000000155425 : and al, byte ptr [rcx] ; add al, ch ; xchg eax, edi ; jmp qword ptr [rsi]
0x00000000000e388b : and al, byte ptr [rcx] ; add byte ptr [rax], al ; syscall
0x0000000000142aed : and al, byte ptr [rdx] ; add byte ptr [rdx], dl ; std ; call rsp
0x0000000000131fec : and al, byte ptr [rsi - 7] ; jmp qword ptr [rdx]
0x0000000000083a4a : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x000000000002eca6 : and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002ecc6 : and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002ec06 : and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002ec86 : and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002eba6 : and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002ec46 : and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002ebe6 : and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002ec26 : and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000015bd71 : and bh, ah ; jmp qword ptr [rdi]
0x000000000004d577 : and bh, al ; add dword ptr [rip - 0x7d000000], ebp ; ret 0x8b01
0x00000000000f2ed8 : and bh, byte ptr [rax + 0x59] ; syscall
0x0000000000002f38 : and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000000a3a2e : and byte ptr [r11 + 0x5d], r11b ; ret
0x0000000000082407 : and byte ptr [r8 + 0x31], r9b ; ret 0x93be
0x000000000007c6e5 : and byte ptr [r8 + 0x39], r9b ; ret
0x0000000000075672 : and byte ptr [r8 - 0x75], r9b ; sbb byte ptr [r8 + 0x29], cl ; ret 0x8948
0x00000000000794e8 : and byte ptr [r9 + 0x5bc03113], cl ; ret
0x0000000000082408 : and byte ptr [rax + 0x31], cl ; ret 0x93be
0x000000000007c6e6 : and byte ptr [rax + 0x39], cl ; ret
0x000000000014873b : and byte ptr [rax + 0xa], cl ; ret
0x0000000000093d96 : and byte ptr [rax + 1], cl ; ret 0x347c
0x000000000007c6e2 : and byte ptr [rax - 0x73], cl ; and byte ptr [r8 + 0x39], r9b ; ret
0x000000000007d593 : and byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0xf04
0x0000000000075673 : and byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 + 0x29], cl ; ret 0x8948
0x000000000007e09d : and byte ptr [rax - 0x77], cl ; and al, 0x10 ; call rdx
0x000000000006cd28 : and byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000008385b : and byte ptr [rax - 0x77], cl ; jae 0x83871 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000db9a8 : and byte ptr [rax - 0x77], cl ; pop rbx ; ret
0x00000000000eaa9f : and byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000043ff1 : and byte ptr [rax - 0x77], cl ; ret 0x8949
0x000000000007d5c6 : and byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000002d4b8 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x2d4d0 ; call rax
0x00000000000242ca : and byte ptr [rax - 0x7d], cl ; ret
0x00000000001031bd : and byte ptr [rax - 0xd], dh ; ret
0x00000000000775d2 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x00000000001452b5 : and byte ptr [rax], al ; add byte ptr [rax + 3], ch ; out dx, eax ; call qword ptr [rsi]
0x0000000000145285 : and byte ptr [rax], al ; add byte ptr [rax + 3], cl ; out dx, eax ; jmp qword ptr [rdi]
0x00000000001452cd : and byte ptr [rax], al ; add byte ptr [rax + 3], dh ; out dx, eax ; call qword ptr [rsi]
0x000000000000c488 : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000946e0 : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000b46f1 : and byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000d7195 : and byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000000e2a3b : and byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000015eb00 : and byte ptr [rax], al ; sti ; jmp qword ptr [rax]
0x000000000003388f : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006dfaa : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000a3a2f : and byte ptr [rbx + 0x5d], bl ; ret
0x0000000000149175 : and byte ptr [rbx + 0xa450204], al ; ret
0x00000000001306a4 : and byte ptr [rbx + rsi*8 - 0xc4bdf01], dh ; jmp qword ptr [rax]
0x000000000013071c : and byte ptr [rbx + rsi*8 - 0xc4d6f01], dh ; jmp qword ptr [rax]
0x000000000013070c : and byte ptr [rbx + rsi*8 - 0xc4d8f01], dh ; jmp qword ptr [rax]
0x0000000000130730 : and byte ptr [rbx + rsi*8 - 0xc4da301], dh ; jmp qword ptr [rax]
0x00000000001306d4 : and byte ptr [rbx + rsi*8 - 0xc4ebf01], dh ; jmp qword ptr [rax]
0x00000000000f0f82 : and byte ptr [rbx - 0xd], bl ; ret
0x000000000014cc05 : and byte ptr [rbx], al ; push 0x180e0a01 ; ret
0x000000000006ff08 : and byte ptr [rcx + 0x48f88939], cl ; add esp, 8 ; ret
0x00000000000794e9 : and byte ptr [rcx + 0x5bc03113], cl ; ret
0x0000000000096881 : and byte ptr [rcx + rcx*4 - 0x12], cl ; lea rcx, [rax + 4] ; call rbx
0x00000000000bfc43 : and byte ptr [rcx + rcx*4 - 1], cl ; call 0xbbf26
0x00000000000472b9 : and byte ptr [rcx - 0x2413dbbc], cl ; insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x00000000000391ec : and byte ptr [rcx - 0x2ff6b740], cl ; ret
0x00000000000ca24b : and byte ptr [rcx - 0x77], al ; ret 0x3145
0x00000000000cf1df : and byte ptr [rcx - 0x7d], al ; ret 0x4a01
0x00000000000d7b20 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000e4b15 : and byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x00000000000d6244 : and byte ptr [rcx], al ; fmul dword ptr [rax + 0x39] ; div dword ptr [rdi - 0x6c] ; pop rbx ; ret
0x00000000000b2ed4 : and byte ptr [rcx], al ; mov eax, 0x38 ; syscall
0x00000000000e5f93 : and byte ptr [rcx], bh ; ret
0x000000000006cca9 : and byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000ae0b0 : and byte ptr [rcx], dh ; test byte ptr [rcx - 0x7d], 0xc4 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000002ec89 : and byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x000000000010986d : and byte ptr [rdi], cl ; ret 0x8b48
0x00000000000de09e : and byte ptr [rdi], cl ; test bh, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x00000000000ae61f : and byte ptr [rdi], cl ; test bh, ch ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xdb31
0x00000000000de0fe : and byte ptr [rdi], cl ; test byte ptr [rbx], ch ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x00000000000ddfdd : and byte ptr [rdi], cl ; test byte ptr [rcx + rax - 0x7cb80000], ah ; ret 0x3c01
0x00000000000de03d : and byte ptr [rdi], cl ; test dl, ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x00000000001023e9 : and byte ptr [rdi], cl ; test esp, eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000007b5bd : and byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8441
0x0000000000098b56 : and byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000000de911 : and byte ptr [rsp + rbp*8 + 0x41], dh ; mov byte ptr [rcx - 1], 0 ; ret
0x00000000000959c2 : and ch, 0xf ; je 0x959e9 ; add rax, 2 ; ret
0x0000000000025718 : and ch, al ; ret 0xf6a
0x00000000000959ad : and cl, 0xf ; je 0x959d5 ; ret
0x0000000000130a78 : and cl, 0xf5 ; inc eax ; loope 0x130a7b ; jmp rax
0x00000000000038de : and cl, ah ; ret
0x000000000005819f : and cl, byte ptr [rax - 0x39] ; ret 0xfffe
0x00000000000ffbed : and cl, byte ptr [rax - 0x73] ; add r9b, byte ptr [rax + 0x39] ; ret 0x2972
0x000000000008ef98 : and cl, byte ptr [rcx + rcx*4 - 0x28] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002d6b9 : and cl, byte ptr [rdi] ; xchg al, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x000000000004b8d4 : and cl, ch ; ret
0x00000000000ce437 : and cl, ch ; ret 0xfff8
0x00000000000ce436 : and cl, r13b ; ret 0xfff8
0x000000000015ab30 : and dh, ah ; stc ; call qword ptr [rax]
0x000000000008928b : and dh, dh ; ret 0x7504
0x00000000000afe6d : and dword ptr [rax + 0x74], edi ; syscall
0x00000000000226fa : and dword ptr [rax - 0x77], ecx ; fimul word ptr [rax - 0x77] ; ret 0x8348
0x00000000000229e2 : and dword ptr [rax - 0x77], ecx ; ret 0x8948
0x00000000000e0639 : and dword ptr [rax - 0x7d], ecx ; ret
0x00000000000d71c5 : and dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000004ce93 : and dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000012ee62 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x000000000005c6ba : and dword ptr [rbp - 0x1f0], 0xfffffff0 ; jmp 0x588e4
0x000000000009088a : and dword ptr [rbx + 0x5d], ebx ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000112d55 : and dword ptr [rbx + 2], eax ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00000000000a0742 : and dword ptr [rbx - 0x7cbefe18], eax ; ret
0x0000000000071607 : and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000088c9e : and dword ptr [rcx - 0x77], ecx ; ret
0x00000000000e3850 : and dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x00000000001553ad : and dword ptr [rcx], eax ; add byte ptr [rax], dh ; xchg al, bh ; jmp qword ptr [rdx]
0x00000000000368ea : and dword ptr [rdi + rdx*8], eax ; xor eax, eax ; ret
0x0000000000076744 : and dword ptr [rdi], 0xffffffcf ; ret
0x0000000000036acc : and dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000000f741b : and dword ptr [rdi], esi ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000142abd : and dword ptr [rdx], eax ; add ah, ah ; pop rdi ; std ; call rsp
0x000000000012bf19 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000012ee61 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000000220ef : and eax, 0 ; ret
0x00000000000dbaf7 : and eax, 0x100f ; ret
0x000000000011a589 : and eax, 0x18000 ; add dh, dh ; ret
0x0000000000075fb6 : and eax, 0x200 ; ret
0x00000000000b3da6 : and eax, 0x2d0 ; mov eax, esi ; ret
0x00000000000e3588 : and eax, 0x2d0 ; pop rax ; pop rdi ; call rax
0x0000000000021de6 : and eax, 0x30 ; call rax
0x0000000000030ebc : and eax, 0x30 ; call rdx
0x00000000000262f6 : and eax, 0x31000001 ; ror byte ptr [rax + 0x39], cl ; ret
0x0000000000116972 : and eax, 0x358d4800 ; ret 0x1fc
0x00000000000432eb : and eax, 0x394d3274 ; ret 0x830f
0x0000000000094619 : and eax, 0x3fc00 ; pop rbx ; ret
0x000000000009463c : and eax, 0x3fc00 ; ret
0x00000000000945f0 : and eax, 0x3fffc00 ; pop rbx ; ret
0x000000000011d1b9 : and eax, 0x45c03100 ; test eax, eax ; jne 0x11d1d1 ; ret
0x000000000011d139 : and eax, 0x45c03100 ; test ebx, ebx ; jne 0x11d151 ; ret
0x000000000011d0f9 : and eax, 0x45c03100 ; test ecx, ecx ; jne 0x11d111 ; ret
0x000000000011d1f9 : and eax, 0x45c03100 ; test edx, edx ; jne 0x11d211 ; ret
0x0000000000119f57 : and eax, 0x48002542 ; add esp, 8 ; ret
0x0000000000142b6d : and eax, 0x6a140002 ; std ; jmp rsp
0x000000000002edb6 : and eax, 0x7f ; ret
0x000000000009467c : and eax, 0x7ff80000 ; ret
0x00000000000355c8 : and eax, 0x80 ; ret
0x0000000000035c01 : and eax, 0x8000 ; ret
0x000000000003568b : and eax, 0x80000000 ; movd xmm0, eax ; ret
0x0000000000075f86 : and eax, 0x804 ; ret
0x000000000011d0b8 : and eax, 0x85c03100 ; div byte ptr [rbp + 8] ; ret
0x000000000011d178 : and eax, 0x85c03100 ; leave ; jne 0x11d190 ; ret
0x0000000000155805 : and eax, 0x9bf80001 ; clc ; jmp rdi
0x00000000000f084b : and eax, 0xc ; cmp eax, 4 ; je 0xf085c ; ret
0x00000000000f0a4c : and eax, 0xc ; pop r12 ; ret
0x00000000000cfb24 : and eax, 0xf ; ret
0x00000000000e3725 : and eax, 0xfffff000 ; or eax, edi ; ret
0x00000000000f4e0c : and eax, 0xffffff ; ret
0x00000000000ffc37 : and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x00000000000e7532 : and eax, 1 ; nop dword ptr [rax] ; ret
0x00000000000bba34 : and eax, 1 ; pop r14 ; neg eax ; pop r15 ; ret
0x00000000000bb9f1 : and eax, 1 ; pop r15 ; ret
0x000000000002ed46 : and eax, 1 ; ret
0x000000000002ebc6 : and eax, 2 ; movzx eax, ax ; ret
0x00000000000be79a : and eax, 2 ; pop rbx ; sub eax, 1 ; pop rbp ; ret
0x00000000000457ec : and eax, 2 ; sub eax, 1 ; ret
0x000000000002ec66 : and eax, 4 ; movzx eax, ax ; ret
0x000000000002eb86 : and eax, 8 ; movzx eax, ax ; ret
0x0000000000035898 : and eax, 8 ; ret
0x0000000000108c8b : and eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; out dx, al ; call rbx
0x00000000000b2dc2 : and eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000015551d : and eax, dword ptr [rcx] ; add byte ptr [rax - 0x70], dl ; clc ; jmp qword ptr [rsi]
0x00000000000e3b45 : and eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x0000000000035226 : and eax, ecx ; ret
0x00000000000352f6 : and eax, edx ; movq xmm0, rax ; ret
0x00000000000358e5 : and eax, edx ; ret
0x000000000002ef91 : and eax, esi ; ret
0x0000000000145de1 : and ebp, edi ; jmp rsp
0x0000000000071608 : and ebp, edi ; pop rbx ; ret
0x00000000000f07e6 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0xf07f9 ; ret
0x000000000015f261 : and ebx, edi ; call qword ptr [rdi]
0x000000000015f249 : and ebx, edi ; jmp qword ptr [rdx]
0x00000000000741d8 : and ecx, 0xffffffcf ; mov dword ptr [rdi], ecx ; ret
0x00000000000fcdb1 : and ecx, dword ptr [rax - 0x77] ; ret
0x00000000000ecab4 : and ecx, dword ptr [rax - 0x77] ; ret 0x1f0f
0x00000000000b3e3d : and ecx, dword ptr [rcx + 0x69b8ff] ; add byte ptr [rax], al ; syscall
0x00000000000b3ead : and ecx, dword ptr [rcx + 0x6ab8ff] ; add byte ptr [rax], al ; syscall
0x000000000002be9c : and ecx, dword ptr [rcx - 0x7d] ; mov byte ptr [rcx], 0x83 ; ret
0x00000000000a3ca9 : and ecx, dword ptr [rcx] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000002edc6 : and edi, 0xffffff80 ; sete al ; ret
0x00000000000d210e : and edi, 0xfffffff0 ; mov byte ptr [rdi + rax], 0 ; call 0x8e3e9
0x0000000000039b6b : and edx, 0x3ff ; xor eax, edx ; ret
0x000000000003692c : and edx, 1 ; jne 0x3693f ; xor eax, eax ; ret
0x0000000000089a78 : and edx, 3 ; mov rax, rdi ; jne 0x89a96 ; ret
0x0000000000096558 : and edx, 3 ; mov rax, rdi ; jne 0x96576 ; ret
0x0000000000002bad : and edx, esp ; bswap ebx ; clc ; ret
0x00000000000742d3 : and esi, 1 ; mov eax, esi ; ret
0x000000000013edb1 : and esi, ebx ; call rsp
0x000000000012ffe9 : and esi, ebx ; jmp qword ptr [rdi]
0x000000000013f5a1 : and esp, esi ; jmp rsp
0x00000000000226f9 : and qword ptr [rax - 0x77], rcx ; fimul word ptr [rax - 0x77] ; ret 0x8348
0x00000000000229e1 : and qword ptr [rax - 0x77], rcx ; ret 0x8948
0x00000000000368e9 : and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x0000000000036acb : and qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000012ffe8 : and r14d, ebx ; jmp qword ptr [rdi]
0x00000000000352f5 : and rax, rdx ; movq xmm0, rax ; ret
0x000000000003564f : andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x000000000003564c : andps xmm0, xmm3 ; andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x00000000000902aa : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x0000000000088b40 : bsf eax, eax ; add rax, rdi ; ret
0x0000000000088b50 : bsf eax, eax ; lea rax, [rax + rdi + 0x10] ; ret
0x0000000000088b60 : bsf eax, eax ; lea rax, [rax + rdi + 0x20] ; ret
0x0000000000088b30 : bsf eax, eax ; lea rax, [rax + rdi - 0x10] ; ret
0x0000000000088a7f : bsf eax, eax ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000000904a7 : bsf eax, eax ; lea rax, [rdi + rax] ; ret
0x00000000000898b9 : bsf eax, edi ; cmove eax, edx ; add eax, 1 ; ret
0x0000000000085721 : bsf eax, edx ; ret
0x000000000008589a : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x00000000000905c0 : bsf rax, rax ; lea rax, [rdi + rax] ; ret
0x0000000000085772 : bsf rax, rdx ; ret
0x0000000000093e61 : bsr eax, eax ; add rax, rdi ; add rax, r8 ; ret
0x000000000008757b : bsr eax, eax ; add rax, rdi ; ret
0x0000000000093d30 : bsr eax, eax ; lea rax, [rax + rdi + 0x10] ; ret
0x0000000000093d40 : bsr eax, eax ; lea rax, [rax + rdi + 0x20] ; ret
0x0000000000093d50 : bsr eax, eax ; lea rax, [rax + rdi + 0x30] ; ret
0x000000000008780b : bsr eax, esi ; add rax, rdi ; ret
0x0000000000087719 : bsr esi, esi ; lea rax, [rcx + rsi] ; ret
0x0000000000087615 : bsr esi, esi ; lea rax, [rdi + rsi] ; ret
0x000000000008757a : bsr rax, rax ; add rax, rdi ; ret
0x000000000008780a : bsr rax, rsi ; add rax, rdi ; ret
0x0000000000087718 : bsr rsi, rsi ; lea rax, [rcx + rsi] ; ret
0x0000000000087614 : bsr rsi, rsi ; lea rax, [rdi + rsi] ; ret
0x000000000010f6a1 : bswap eax ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000000f4de6 : bswap eax ; ret
0x0000000000002baf : bswap ebx ; clc ; ret
0x0000000000131e40 : call 0x1113178c
0x00000000000368c4 : call 0x140cb0d7
0x00000000000363f8 : call 0x1f1326ea
0x0000000000036f68 : call 0x1f13325a
0x00000000000831bb : call 0x1f472
0x0000000000144ad8 : call 0x21143989
0x00000000001466b8 : call 0x241455f9
0x000000000015f698 : call 0x2415f1c9
0x000000000008e724 : call 0x247d727d
0x0000000000155428 : call 0x27154cb7
0x000000000009280c : call 0x2eab2
0x000000000011322f : call 0x2f4c2
0x0000000000119e8d : call 0x36182
0x00000000000a2d23 : call 0x48cc564a
0x000000000005b036 : call 0x505b03f
0x000000000010d21f : call 0x69502
0x000000000006ca78 : call 0x78d02
0x00000000000ed2e0 : call 0x79562
0x000000000005d373 : call 0x79662
0x000000000006daf9 : call 0x79da2
0x00000000000801a5 : call 0x7c422
0x0000000000119430 : call 0x856e2
0x00000000000d2115 : call 0x8e3e2
0x0000000000059eca : call 0x9059ed3
0x00000000000bfc47 : call 0xbbf22
0x00000000000c511d : call 0xc1422
0x000000000011de1f : call 0xca032
0x00000000000da50c : call 0xd6812
0x000000000011a846 : call 0xd6a6f
0x000000000011acd2 : call 0xd6f02
0x00000000000dae3a : call 0xd7122
0x000000000006bf3f : call 0xd8232
0x00000000001183b4 : call 0xe4642
0x00000000000ee456 : call 0xea752
0x00000000000b3c9c : call 0xeff72
0x000000000007447f : call 0xf0772
0x0000000000078114 : call 0xf07813d
0x00000000000744f2 : call 0xf07a2
0x00000000000e44f8 : call 0xf07c2
0x00000000000e4530 : call 0xf0822
0x00000000000e3bb5 : call 0xf0e3bbe
0x00000000000e3bd9 : call 0xf0e3be2
0x00000000000e7531 : call 0xf1055c1
0x000000000007ab7e : call 0xfc9e4ce
0x0000000000110daa : call 0xffffffff80d404c2
0x0000000000069801 : call 0xffffffff834ea483
0x00000000000a2cfd : call 0xffffffff89cc5624
0x0000000000030d49 : call 0xffffffff8b4fcfd9
0x000000000012c983 : call 0xffffffffaed567f9
0x000000000003f7ba : call 0xffffffffc20540c4
0x000000000004205e : call 0xffffffffc2056968
0x00000000000a2758 : call 0xffffffffc23370a0
0x000000000003cb51 : call 0xffffffffc23d135b
0x000000000010a77e : call 0xffffffffc241ef99
0x000000000007e741 : call 0xffffffffc2912f5a
0x000000000010acf6 : call 0xffffffffc299f507
0x000000000010acdb : call 0xffffffffc299f5ec
0x00000000000941e7 : call 0xffffffffc31dcf3f
0x0000000000094207 : call 0xffffffffc31dcf5f
0x000000000006c103 : call 0xffffffffc3630269
0x000000000006dc9d : call 0xffffffffc3631e03
0x000000000006e608 : call 0xffffffffc363276e
0x0000000000076508 : call 0xffffffffc363a66e
0x0000000000096d33 : call 0xffffffffc365ae99
0x00000000000eb812 : call 0xffffffffc36af978
0x00000000000f9d76 : call 0xffffffffc36bdedc
0x00000000000a0744 : call 0xffffffffc38d484e
0x00000000000376ea : call 0xffffffffc3b2863b
0x00000000000899d7 : call 0xffffffffc3d92328
0x0000000000083a57 : call 0xffffffffc400c3a8
0x00000000000851f7 : call 0xffffffffc400db48
0x000000000015fa28 : call 0xffffffffd315f561
0x000000000003599c : call 0xffffffffe2851c2c
0x000000000010a921 : call 0xffffffffe393ea44
0x0000000000052d1c : call 0xffffffffef11b2ee
0x00000000000481ae : call 0xfffffffffb5d0f45
0x000000000013eb53 : call qword ptr [0xffffffffc2340000]
0x0000000000049bfa : call qword ptr [r11 + rax*8]
0x0000000000107ae3 : call qword ptr [r11]
0x000000000001ff4c : call qword ptr [r14]
0x000000000013071f : call qword ptr [rax + 0x20fff3b2]
0x00000000000eb53e : call qword ptr [rax - 0x153e3d77]
0x0000000000130a2f : call qword ptr [rax - 0x1f000a38]
0x00000000000ddabe : call qword ptr [rax - 0x3ca43fcf]
0x00000000000353a2 : call qword ptr [rax - 0x3d]
0x000000000008088e : call qword ptr [rax - 0x44bfe0f1]
0x00000000000022df : call qword ptr [rax]
0x0000000000130f53 : call qword ptr [rbp + 0x26fff76a]
0x0000000000049bfb : call qword ptr [rbx + rax*8]
0x00000000001317d7 : call qword ptr [rbx]
0x00000000000084b8 : call qword ptr [rcx]
0x000000000012f86f : call qword ptr [rdi]
0x0000000000130b37 : call qword ptr [rdx + rdi + 0x3bc2fff6]
0x000000000008351c : call qword ptr [rdx]
0x0000000000131647 : call qword ptr [rip + 0x23fff83a]
0x00000000000eeed5 : call qword ptr [rsi + 0x74]
0x00000000001421eb : call qword ptr [rsi + 1]
0x0000000000131173 : call qword ptr [rsi - 0x1f0008a6]
0x000000000001ff4d : call qword ptr [rsi]
0x000000000014c069 : call qword ptr es:[rsi]
0x00000000001053b3 : call r10
0x0000000000028182 : call r12
0x00000000000254a8 : call r14
0x00000000000233df : call r15
0x00000000000efe32 : call r8
0x0000000000021dc3 : call rax
0x000000000002e8ac : call rbx
0x0000000000022de2 : call rcx
0x00000000000233e0 : call rdi
0x0000000000030ec1 : call rdx
0x00000000000254a9 : call rsi
0x0000000000028183 : call rsp
0x00000000000c91c6 : cdq ; add r11, r9 ; jmp r11
0x00000000001423c9 : cdq ; cld ; jmp rsp
0x00000000001309dd : cdq ; cmc ; inc dword ptr [rax] ; pushfq ; cmc ; call qword ptr [rax]
0x0000000000039208 : cdq ; idiv rsi ; ret
0x000000000012e6c0 : cdq ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000149e39 : cdq ; jmp qword ptr [rsi]
0x000000000009115d : cdq ; mov rax, rdi ; ret
0x0000000000045a2a : cdq ; pop r14 ; idiv r9 ; pop r15 ; ret
0x00000000000db9be : cdqe ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x0000000000100a01 : cdqe ; shr rax, 4 ; ret
0x0000000000098347 : clc ; adc esi, dword ptr [rbp + rax - 0x77] ; ret 0xc9eb
0x00000000000c7189 : clc ; add al, 0xf ; xchg eax, ebp ; ret 0x2041
0x00000000000a1a59 : clc ; add al, 0xf ; xchg eax, ebp ; ret 0xbbe9
0x00000000000a18a9 : clc ; add al, 0xf ; xchg eax, ebp ; ret 0xf883
0x000000000007da61 : clc ; add al, byte ptr [rdi + rcx + 0x46] ; ret 0x22e9
0x000000000004dc9e : clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000013f8d5 : clc ; add byte ptr [rax], al ; mov ah, 0x17 ; cmc ; jmp rsp
0x0000000000070939 : clc ; add cl, byte ptr [rax + 0x39] ; ret 0x5877
0x0000000000055814 : clc ; add cl, byte ptr [rax + 0x39] ; ret 0x8f0f
0x0000000000047613 : clc ; add cl, byte ptr [rbp + 0x39] ; ret
0x000000000003e671 : clc ; add cl, byte ptr [rcx + 0x39] ; ret 0x870f
0x00000000000cefaa : clc ; add cl, byte ptr [rdi] ; xchg eax, ebp ; ret
0x0000000000113a51 : clc ; add dword ptr [rbp - 0x1c], esi ; mov rax, qword ptr [rdi + 8] ; call qword ptr [rax]
0x0000000000090be7 : clc ; add dword ptr [rdi - 0x2b], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ffc39 : clc ; add eax, 0x10 ; ret
0x0000000000083628 : clc ; add ecx, dword ptr [rax + 1] ; ret 0x6348
0x0000000000033644 : clc ; add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xfe9
0x00000000000bd126 : clc ; add esi, dword ptr [rsi + rax + 0x48] ; add esp, 8 ; ret
0x0000000000093e66 : clc ; add rax, r8 ; ret
0x0000000000088908 : clc ; add rax, rcx ; ret
0x000000000006ff0c : clc ; add rsp, 8 ; ret
0x000000000007b5bc : clc ; and byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8441
0x000000000002edb5 : clc ; and eax, 0x7f ; ret
0x00000000000f4e0b : clc ; and eax, 0xffffff ; ret
0x00000000000f4de5 : clc ; bswap eax ; ret
0x00000000001317d6 : clc ; call qword ptr [rbx]
0x0000000000131622 : clc ; call qword ptr [rcx]
0x00000000001572aa : clc ; call qword ptr [rdi]
0x0000000000131646 : clc ; call qword ptr [rip + 0x23fff83a]
0x0000000000153aba : clc ; call qword ptr [rsi]
0x000000000013188a : clc ; call rdi
0x00000000001316b2 : clc ; call rsi
0x000000000014068a : clc ; call rsp
0x000000000014f8a8 : clc ; cmc ; call rsi
0x00000000000ffa5d : clc ; cmc ; je 0xffa55 ; pop rbx ; ret
0x00000000000475ba : clc ; cmovae rax, rsi ; ret
0x0000000000080602 : clc ; cmovne rax, rcx ; add rsp, 8 ; ret
0x000000000009113e : clc ; cmp eax, 0x89481775 ; clc ; ret
0x0000000000003a76 : clc ; cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x0000000000039206 : clc ; cqo ; idiv rsi ; ret
0x000000000002e9ea : clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000007e15b : clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x000000000006d563 : clc ; dec dword ptr [rax - 0x77] ; ret 0xf40
0x0000000000131882 : clc ; dec dword ptr [rbp - 0x720007c5] ; cmp edi, eax ; call rdi
0x00000000001318b2 : clc ; dec dword ptr [rbp - 0x720007c5] ; cmp edi, eax ; call rsi
0x0000000000131706 : clc ; dec dword ptr [rbx] ; cmp al, 0xf8 ; lcall ptr [rcx] ; cmp al, 0xf8 ; jmp qword ptr [rdi]
0x0000000000053a53 : clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x0000000000043535 : clc ; dec dword ptr [rdi] ; ret 0x8341
0x000000000007490e : clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000001316ae : clc ; dec eax ; cmp al, bh ; call rsi
0x00000000001406ba : clc ; dec esp ; push rbx ; add dword ptr [rax], eax ; hlt ; out 0xf8, eax ; jmp rsp
0x0000000000140632 : clc ; dec esp ; push rcx ; add dword ptr [rax], eax ; jrcxz 0x14063c ; jmp rsp
0x000000000013161e : clc ; inc dword ptr [rbx] ; cmp edi, eax ; call qword ptr [rcx]
0x0000000000117cb0 : clc ; inc dword ptr [rcx - 0x77] ; ret 0x840f
0x0000000000131642 : clc ; inc dword ptr [rdi] ; cmp bh, al ; call qword ptr [rip + 0x23fff83a]
0x00000000001479d8 : clc ; jge 0x1479ce ; call qword ptr [rsi]
0x000000000006f6cb : clc ; jmp 0x6f692
0x0000000000131c46 : clc ; jmp qword ptr [rax]
0x000000000013164a : clc ; jmp qword ptr [rbx]
0x00000000001317da : clc ; jmp qword ptr [rcx]
0x000000000013170e : clc ; jmp qword ptr [rdi]
0x0000000000153aa2 : clc ; jmp qword ptr [rdx]
0x0000000000154ae2 : clc ; jmp qword ptr [rsi]
0x00000000000a9dd9 : clc ; jmp rax
0x0000000000131616 : clc ; jmp rdi
0x0000000000153d7a : clc ; jmp rsi
0x00000000001316b6 : clc ; jmp rsp
0x00000000000317eb : clc ; jne 0x31868 ; adc dword ptr [rbp - 0x77], eax ; ret 0x8341
0x0000000000043075 : clc ; jne 0x43050 ; ret
0x0000000000089a7d : clc ; jne 0x89a91 ; ret
0x000000000008e517 : clc ; jne 0x8e3f5 ; ret
0x000000000009655d : clc ; jne 0x96571 ; ret
0x000000000013170a : clc ; lcall ptr [rcx] ; cmp al, 0xf8 ; jmp qword ptr [rdi]
0x00000000001405b2 : clc ; lcall ptr [rsi + rcx*2 - 0x3d4bffff] ; clc ; jmp rsp
0x00000000000de92b : clc ; mov byte ptr [r9 - 1], 0 ; ret
0x0000000000036c26 : clc ; mov byte ptr [rbp - 0x12], dh ; mov eax, 1 ; ret
0x000000000009363c : clc ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000012d322 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x000000000011d255 : clc ; mov eax, 0x3e ; syscall
0x000000000011801d : clc ; mov eax, 3 ; syscall
0x00000000000cc40c : clc ; mov rsi, r15 ; mov eax, 0xcc ; syscall
0x00000000000d63fd : clc ; mov rsi, rdx ; mov eax, 5 ; syscall
0x0000000000047276 : clc ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000009621c : clc ; nop dword ptr [rax] ; ret
0x00000000000e6f19 : clc ; nop word ptr [rax + rax] ; ret
0x000000000002f85d : clc ; pop r13 ; ret
0x00000000000eb567 : clc ; pop r15 ; ret
0x00000000000345ac : clc ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000002f843 : clc ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007ba29 : clc ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f1c82 : clc ; pop rbx ; ret
0x000000000011b477 : clc ; push qword ptr [rbp + rax + 0x48] ; add esp, 8 ; ret
0x0000000000045845 : clc ; push qword ptr [rbp - 0x19] ; mov rax, rdx ; ret
0x0000000000079e2c : clc ; push qword ptr [rbp - 0x22] ; pop rbx ; ret
0x0000000000071603 : clc ; push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x00000000001404f2 : clc ; push qword ptr [rdi + rax*2 + 0x26640001] ; clc ; jmp rsp
0x000000000006c29c : clc ; push qword ptr [rdx + rbx*4 - 0x77] ; ret 0xe283
0x00000000000af159 : clc ; push qword ptr [rsp + rsi - 0x77] ; ret 0xe283
0x0000000000131c42 : clc ; push rax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; clc ; jmp qword ptr [rax]
0x0000000000131c3e : clc ; push rax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; clc ; push rax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; clc ; jmp qword ptr [rax]
0x000000000013161a : clc ; push rbp ; cmp bh, al ; inc dword ptr [rbx] ; cmp edi, eax ; call qword ptr [rcx]
0x0000000000002b85 : clc ; ret
0x000000000013d432 : clc ; ret 0x6e1f
0x000000000015a3a8 : clc ; ret 0xfff9
0x00000000000f4df5 : clc ; ror ax, 8 ; ret
0x0000000000039197 : clc ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x00000000000f4a6f : clc ; sar rax, 6 ; ret
0x00000000000c1a64 : clc ; sbb byte ptr [rcx - 0x3f], al ; cli ; sbb byte ptr [rbp + 0x39], al ; ret 0xb975
0x0000000000045dba : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000000f4e9b : clc ; shr eax, 0x18 ; ret
0x0000000000131fc8 : clc ; stc ; inc ebx ; stc ; jmp qword ptr [rdx]
0x00000000000fc212 : clc ; std ; jbe 0xfc225 ; pop rbx ; ret
0x00000000000c96f8 : clc ; sub dword ptr [rax], eax ; mov rax, qword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x00000000000f0e0c : clc ; syscall
0x00000000000f0889 : clc ; test edx, edx ; jne 0xf0895 ; ret
0x000000000002c593 : clc ; test rcx, rcx ; je 0x2c5a5 ; call rcx
0x0000000000155808 : clc ; wait ; clc ; jmp rdi
0x00000000001444b8 : clc ; xchg eax, edi ; out dx, al ; jmp qword ptr [rcx]
0x0000000000059739 : clc ; xor byte ptr [rax], al ; call rax
0x0000000000151138 : clc ; xor dh, dh ; call rax
0x000000000003b3d4 : cld ; adc byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x53c
0x000000000003b503 : cld ; adc byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x00000000000b461a : cld ; add byte ptr [rax], al ; ret
0x0000000000157814 : cld ; add dword ptr [r8], r8d ; mov byte ptr [rax], al ; stc ; call rcx
0x000000000009461b : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000009463e : cld ; add eax, dword ptr [rax] ; ret
0x00000000001421ea : cld ; call qword ptr [rsi + 1]
0x0000000000141ffa : cld ; call rsp
0x00000000000be804 : cld ; cmp ebp, esi ; jge 0xbe7e9 ; mov rdx, r8 ; jmp 0xbe81d
0x00000000000be803 : cld ; cmp ebp, esi ; jge 0xbe7ea ; mov rdx, r8 ; jmp 0xbe81e
0x00000000001422c2 : cld ; dec dword ptr [rsi + rbp*8 - 0x7c6bffff] ; cld ; jmp rsp
0x0000000000035aab : cld ; fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x0000000000094719 : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000000945f2 : cld ; inc dword ptr [rbx] ; pop rbx ; ret
0x000000000014214a : cld ; inc dword ptr [rcx + 0x3e140001] ; cld ; call rsp
0x000000000015aa14 : cld ; ja 0x15aa1f ; add byte ptr [rax - 0x1f], bl ; stc ; call rcx
0x000000000015c802 : cld ; jmp qword ptr [rcx]
0x000000000015bd72 : cld ; jmp qword ptr [rdi]
0x00000000001544c2 : cld ; jmp qword ptr [rsi]
0x00000000001541da : cld ; jmp rax
0x0000000000142062 : cld ; jmp rsp
0x0000000000142112 : cld ; lcall ptr [rdi + rbx*8 + 0x33a40001] ; cld ; call rsp
0x000000000014249a : cld ; lcall ptr [rdx + rdi*8 - 0x4cbbffff] ; cld ; jmp rsp
0x00000000001423e2 : cld ; lcall ptr [rsi + rsi*8 - 0x640bffff] ; cld ; call rsp
0x00000000001425f2 : cld ; ljmp ptr [rbx + rax + 2] ; add ah, dl ; xlatb ; cld ; call rsp
0x00000000001425da : cld ; ljmp ptr [rdx + rax - 0x2c4bfffe] ; cld ; jmp rsp
0x000000000014e814 : cld ; mov ch, 0 ; add byte ptr [rax], ch ; nop ; hlt ; jmp qword ptr [rcx]
0x0000000000036fc8 : cld ; mov eax, 0x81 ; syscall
0x000000000002d2f3 : cld ; mov eax, 3 ; syscall
0x00000000000934ed : cld ; mov rax, rdi ; ret
0x0000000000047230 : cld ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000000e305f : cld ; movsxd rdx, eax ; mov eax, 3 ; syscall
0x000000000014257a : cld ; push qword ptr [rax + rax - 0x3a5bfffe] ; cld ; call rsp
0x000000000014205a : cld ; push qword ptr [rbx + rbx*8 + 0x1ff40001] ; cld ; jmp rsp
0x0000000000142022 : cld ; push qword ptr [rdx + rbx*8 + 0x1d940001] ; cld ; call rsp
0x0000000000047236 : cld ; ret
0x0000000000141cf4 : cld ; ret 1
0x000000000012c7d6 : cld ; test al, 0x97 ; xchg eax, esp ; ret
0x0000000000095716 : cld ; test edx, edx ; mov dword ptr [rsi + rcx], edx ; jne 0x95719 ; ret
0x0000000000146814 : cld ; xor eax, 0x42980000 ; out dx, eax ; jmp qword ptr [rbx]
0x0000000000039915 : cli ; adc byte ptr [rcx], ch ; ret 0xc269
0x00000000000a36f4 : cli ; adc cl, byte ptr [rax + 0x29] ; ret 0x6948
0x00000000000a3675 : cli ; adc cl, byte ptr [rax + 0x29] ; ret 0x8948
0x000000000010199a : cli ; add al, 0x48 ; add edx, 1 ; syscall
0x00000000000f9730 : cli ; add al, 0xf ; xchg eax, esi ; ret
0x000000000013f91d : cli ; add byte ptr [rax], al ; xchg eax, esp ; sub ebp, esi ; jmp rsp
0x00000000000b3d7d : cli ; add byte ptr [rcx - 0xcfd8130], cl ; ret
0x00000000000a398e : cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x000000000003b5bf : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x000000000003b598 : cli ; add cl, byte ptr [rcx + 0x29] ; ret 0x8b48
0x000000000014249d : cli ; add dword ptr [rax], eax ; mov bl, 0xfc ; jmp rsp
0x000000000002218f : cli ; add dword ptr [rsi - 0x13], edi ; mov byte ptr [rdi], 0 ; ret
0x00000000000a2cec : cli ; add ebp, dword ptr [rcx] ; ret 0x48d
0x00000000001089ea : cli ; add esi, dword ptr [rsi + 2] ; ret
0x00000000000de910 : cli ; and byte ptr [rsp + rbp*8 + 0x41], dh ; mov byte ptr [rcx - 1], 0 ; ret
0x000000000015c4a2 : cli ; call qword ptr [rax]
0x000000000015e752 : cli ; call qword ptr [rbx]
0x000000000015d1c2 : cli ; call qword ptr [rdi]
0x000000000015b7ba : cli ; call qword ptr [rsi]
0x00000000000827b2 : cli ; call rax
0x000000000015b42a : cli ; call rcx
0x000000000015e902 : cli ; call rdi
0x0000000000141042 : cli ; call rsp
0x0000000000150471 : cli ; cmc ; call rcx
0x00000000000b28a5 : cli ; dec dword ptr [rax + 0xf] ; ret 0x48c3
0x00000000000776fb : cli ; dec dword ptr [rax + 0xf] ; ret 0x8d48
0x0000000000092d33 : cli ; dec dword ptr [rcx - 0x77] ; ret
0x000000000009f630 : cli ; dec dword ptr [rdi] ; mov dh, 0xc2 ; je 0x9f648 ; ret
0x0000000000141012 : cli ; dec esp ; add dword ptr [rcx], 0xfa370400 ; jmp rsp
0x0000000000140e52 : cli ; dec esp ; js 0x140e61 ; add ah, dh ; or bh, dl ; jmp rsp
0x000000000014124a : cli ; dec esp ; mov eax, dword ptr [rcx] ; add ah, ah ; pop rsp ; cli ; jmp rsp
0x000000000014134a : cli ; dec esp ; mov es, word ptr [rcx] ; add ah, ah ; movsxd rdi, edx ; jmp rsp
0x0000000000141112 : cli ; dec esp ; xchg dword ptr [rcx], eax ; add byte ptr [rsp + rdx*2 - 6], dl ; jmp rsp
0x0000000000036daa : cli ; je 0x36dbf ; add rsp, 0x10 ; ret
0x0000000000036ebc : cli ; je 0x36ecf ; add rsp, 0x10 ; ret
0x00000000000ffc61 : cli ; je 0xffc52 ; mov eax, 0xffffffff ; ret
0x000000000015aef2 : cli ; jmp qword ptr [rax]
0x000000000015b79a : cli ; jmp qword ptr [rbx]
0x000000000015b362 : cli ; jmp qword ptr [rdx]
0x000000000015bc52 : cli ; jmp qword ptr [rsi]
0x000000000015b37a : cli ; jmp rax
0x000000000015e1ea : cli ; jmp rdi
0x0000000000033dfb : cli ; jmp rdx
0x0000000000140e5a : cli ; jmp rsp
0x00000000000b582f : cli ; jnp 0xb5845 ; xchg eax, esp ; ret 0xb60f
0x000000000014175a : cli ; lcall ptr [rbx - 0x2eabffff] ; cli ; call rsp
0x0000000000117c39 : cli ; mov eax, 3 ; syscall
0x0000000000093573 : cli ; mov rax, rdi ; ret
0x0000000000062924 : cli ; mov rsi, qword ptr [rip + 0x306634] ; call rax
0x0000000000059734 : cli ; mov rsi, qword ptr [rip + 0x30f824] ; call rax
0x00000000000f9867 : cli ; mov rsi, qword ptr [rsp] ; mov rdi, r12 ; call rax
0x00000000000eb21a : cli ; mov rsi, r12 ; mov rdi, rbx ; call r14
0x0000000000088cb9 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x00000000000336dd : cli ; or al, byte ptr [rbp + 0xf] ; ret 0x8348
0x00000000000a264d : cli ; or cl, byte ptr [rax + 0x29] ; ret 0x5589
0x000000000009477c : cli ; outsb dx, byte ptr gs:[rsi] ; je 0x947f2 ; je 0x947a8 ; pop rbx ; ret
0x000000000012ec41 : cli ; push 0x6e ; ja 0x12ebce ; ret 0x48f
0x000000000006d2c2 : cli ; push qword ptr [rdx + rcx + 0x48] ; mov eax, edx ; pop rbx ; ret
0x0000000000073072 : cli ; ret
0x00000000000a3693 : cli ; ret 0x10
0x000000000012d6e5 : cli ; ret 0xac65
0x00000000000c1a68 : cli ; sbb byte ptr [rbp + 0x39], al ; ret 0xb975
0x00000000000effaf : cli ; setae al ; ret
0x00000000000857d0 : cli ; test rdx, rdx ; je 0x857e9 ; bsf rax, rdx ; ret
0x00000000000859cf : cli ; test rdx, rdx ; je 0x859f9 ; bsf rax, rdx ; ret
0x000000000012c32a : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x0000000000085330 : cli ; xor byte ptr [rbp + rcx*4 + 0x48], al ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0x8341
0x000000000013f82d : cmc ; add byte ptr [rax], al ; in al, 0xb5 ; hlt ; call rsp
0x00000000001423c5 : cmc ; add dword ptr [rax], eax ; adc al, 0x99 ; cld ; jmp rsp
0x000000000009285b : cmc ; add dword ptr [rax], eax ; add al, ch ; ret 0xfff9
0x0000000000130a2e : cmc ; call qword ptr [rax - 0x1f000a38]
0x00000000001309e2 : cmc ; call qword ptr [rax]
0x000000000014f6aa : cmc ; call qword ptr [rdx]
0x00000000001309d2 : cmc ; call rax
0x0000000000150472 : cmc ; call rcx
0x000000000014f8aa : cmc ; call rsi
0x000000000013fa32 : cmc ; call rsp
0x000000000013161c : cmc ; cmp bh, al ; inc dword ptr [rbx] ; cmp edi, eax ; call qword ptr [rcx]
0x000000000013f9e2 : cmc ; dec esp ; add byte ptr [rcx], al ; add byte ptr [rsp + rcx*2 - 0xb], al ; jmp rsp
0x000000000013f91a : cmc ; dec esp ; cli ; add byte ptr [rax], al ; xchg eax, esp ; sub ebp, esi ; jmp rsp
0x000000000013fb7a : cmc ; dec esp ; or byte ptr [rcx], al ; add byte ptr [rsp + rcx*4 - 0xb], al ; jmp rsp
0x000000000013fb9a : cmc ; dec esp ; or dword ptr [rcx], eax ; add byte ptr [rcx + rdx*4], al ; cmc ; jmp rsp
0x0000000000130946 : cmc ; inc dword ptr [rax + 0x46] ; cmc ; jmp qword ptr [rax]
0x0000000000130a3a : cmc ; inc dword ptr [rax - 0x2f000a31] ; sal ebp, 1 ; jmp qword ptr [rax]
0x0000000000130a2a : cmc ; inc dword ptr [rax - 0x3a] ; cmc ; call qword ptr [rax - 0x1f000a38]
0x0000000000130a76 : cmc ; inc dword ptr [rax - 0x3f000a1f] ; loope 0x130a7d ; jmp rax
0x0000000000130a0a : cmc ; inc dword ptr [rax - 0x6e] ; cmc ; call qword ptr [rax]
0x0000000000130942 : cmc ; inc dword ptr [rax] ; cmc ; inc dword ptr [rax + 0x46] ; cmc ; jmp qword ptr [rax]
0x0000000000130a82 : cmc ; inc dword ptr [rax] ; loop 0x130a85 ; inc eax ; loopne 0x130a89 ; jmp qword ptr [rax]
0x00000000001309de : cmc ; inc dword ptr [rax] ; pushfq ; cmc ; call qword ptr [rax]
0x000000000013fbb2 : cmc ; inc dword ptr [rdx + rcx - 0x65dbffff] ; cmc ; call rsp
0x0000000000130a7a : cmc ; inc eax ; loope 0x130a79 ; jmp rax
0x0000000000130a86 : cmc ; inc eax ; loopne 0x130a85 ; jmp qword ptr [rax]
0x00000000001309ce : cmc ; inc eax ; xchg eax, ebx ; cmc ; call rax
0x0000000000130902 : cmc ; inc esi ; add ch, dh ; inc esi ; add ch, dh ; jmp qword ptr [rsi]
0x0000000000130906 : cmc ; inc esi ; add ch, dh ; jmp qword ptr [rsi]
0x00000000000a196f : cmc ; je 0xa19a4 ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000ffa5e : cmc ; je 0xffa54 ; pop rbx ; ret
0x00000000000be806 : cmc ; jge 0xbe7e7 ; mov rdx, r8 ; jmp 0xbe81b
0x000000000013094a : cmc ; jmp qword ptr [rax]
0x000000000014f582 : cmc ; jmp qword ptr [rbx]
0x000000000014ee42 : cmc ; jmp qword ptr [rcx]
0x000000000015016a : cmc ; jmp qword ptr [rdi]
0x000000000014f512 : cmc ; jmp qword ptr [rdx]
0x000000000013090a : cmc ; jmp qword ptr [rsi]
0x00000000001309ca : cmc ; jmp rax
0x000000000013f8da : cmc ; jmp rsp
0x0000000000130a4e : cmc ; lcall ptr [rax - 0x4f000a22] ; fdivrp st(5) ; call rax
0x000000000013fa92 : cmc ; ljmp ptr [rsp + rax + 1] ; add byte ptr [rdx + rbp*2 - 0xb], dh ; jmp rsp
0x000000000012f069 : cmc ; mov ch, 0xab ; ret
0x0000000000104059 : cmc ; mov eax, 0x81 ; syscall
0x0000000000036fc5 : cmc ; movsxd rdi, r12d ; mov eax, 0x81 ; syscall
0x00000000000bb814 : cmc ; or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x000000000006d536 : cmc ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000076a2d : cmc ; pop rbp ; pop r12 ; ret
0x000000000012bf17 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000130a62 : cmc ; push qword ptr [rax] ; fcompi st(5) ; jmp qword ptr [rax]
0x00000000001309da : cmc ; push rax ; cdq ; cmc ; inc dword ptr [rax] ; pushfq ; cmc ; call qword ptr [rax]
0x0000000000130a5a : cmc ; push rax ; fdivrp st(5) ; call qword ptr [rax]
0x0000000000130a26 : cmc ; push rax ; ret
0x00000000000ee457 : cmc ; ret 0xffff
0x000000000012e6a5 : cmc ; xlatb ; ret 0x4e27
0x000000000005a401 : cmc ; xor eax, 0x83480000 ; ret
0x000000000002b368 : cmc ; xor eax, dword ptr [rax] ; ret
0x00000000000f0f7c : cmova eax, edx ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000039854 : cmova edx, eax ; xor eax, eax ; mov qword ptr [rdi + 8], rdx ; ret
0x00000000000dafec : cmova edx, ecx ; mov eax, edx ; ret
0x00000000000a37df : cmova esi, eax ; imul esi, edx ; add eax, esi ; ret
0x00000000000a37de : cmova esi, r8d ; imul esi, edx ; add eax, esi ; ret
0x000000000007afed : cmovae eax, dword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x00000000000475bc : cmovae eax, esi ; ret
0x0000000000003833 : cmovae ebp, dword ptr [rdi - 0x26] ; int 3
0x000000000007afec : cmovae rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x00000000000475bb : cmovae rax, rsi ; ret
0x00000000000cc494 : cmovbe eax, edx ; ret
0x00000000000cc28f : cmovbe esi, ecx ; mov eax, ecx ; syscall
0x00000000000cc28e : cmovbe rsi, r9 ; mov eax, ecx ; syscall
0x00000000000bdce0 : cmove eax, ecx ; ret
0x00000000000898bc : cmove eax, edx ; add eax, 1 ; ret
0x00000000000f11f8 : cmove eax, edx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000003ab77 : cmove eax, edx ; add rsp, 8 ; ret
0x00000000000878c8 : cmove eax, edx ; ret
0x000000000007803f : cmove eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007803e : cmove eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000935d5 : cmove ecx, dword ptr [rcx - 0x76b7fbb9] ; clc ; ret
0x000000000009148e : cmove edx, ebx ; mov rax, rdx ; pop rbx ; ret
0x00000000000898dd : cmove rax, rdx ; add eax, 1 ; ret
0x00000000001190dd : cmove rax, rdx ; add rsp, 8 ; ret
0x00000000000878c7 : cmove rax, rdx ; ret
0x000000000009148d : cmove rdx, rbx ; mov rax, rdx ; pop rbx ; ret
0x00000000000a2efe : cmovg eax, ecx ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000070b5b : cmovg eax, ecx ; test rdx, rdx ; jne 0x70b59 ; ret
0x0000000000079263 : cmovg eax, ecx ; test rdx, rdx ; jne 0x79261 ; ret
0x00000000000a2efd : cmovg rax, rcx ; add rsp, 0x20 ; pop rbx ; ret
0x000000000001f5de : cmovge eax, edx ; jmp 0x1f5b0
0x00000000000a2f2c : cmovl eax, ecx ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000a2f2b : cmovl rax, rcx ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000395a1 : cmovne eax, ebx ; pop rbx ; ret
0x000000000003ab8b : cmovne eax, ecx ; add rsp, 8 ; ret
0x0000000000073825 : cmovne eax, ecx ; ret
0x00000000000f4e2d : cmovne eax, edi ; ret
0x000000000011079d : cmovne eax, edx ; add rsp, 0x78 ; ret
0x000000000003aba7 : cmovne eax, edx ; add rsp, 8 ; ret
0x00000000000bfd9a : cmovne eax, edx ; jmp 0xbfd74
0x000000000002e71f : cmovne eax, edx ; ret
0x0000000000073824 : cmovne r8, rcx ; ret
0x00000000000395a0 : cmovne rax, rbx ; pop rbx ; ret
0x0000000000080603 : cmovne rax, rcx ; add rsp, 8 ; ret
0x00000000000911a0 : cmovne rax, rcx ; ret
0x000000000002e71e : cmovne rax, rdx ; ret
0x00000000000eb147 : cmovns eax, dword ptr [rbx + 0x28] ; pop rbx ; ret
0x000000000002601c : cmovns eax, dword ptr [rbx - 0x7cb7fb39] ; ret 0x4801
0x00000000000e0b86 : cmovns eax, edx ; jmp 0xe0b8f
0x0000000000039265 : cmovns eax, edx ; pop rbx ; ret
0x0000000000025140 : cmovns eax, edx ; ret
0x00000000000eb146 : cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x00000000000e0b85 : cmovns rax, rdx ; jmp 0xe0b90
0x0000000000052f30 : cmovs eax, dword ptr [rbx + 0x149f0e0] ; ret 0x8b48
0x0000000000096610 : cmovs eax, dword ptr [rbx + 0x5d5b70c4] ; pop r12 ; ret
0x00000000000934ff : cmovs eax, dword ptr [rbx - 0x76b7fd39] ; clc ; ret
0x000000000010a887 : cmovs ecx, dword ptr [rcx] ; ror dword ptr [rax - 0x77], 1 ; ret 0xc148
0x0000000000079e68 : cmovs edi, dword ptr [rcx] ; int1 ; jne 0x79e69 ; lea eax, [rdx + rdi] ; ret
0x000000000010a543 : cmovs esi, dword ptr [rcx] ; ret 0xc148
0x0000000000146eb5 : cmp al, 0 ; add al, bh ; ret
0x000000000000d5e0 : cmp al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x31
0x00000000000854f0 : cmp al, 0 ; add byte ptr [rax], al ; nop dword ptr [rax - 0x34] ; jmp 0x854c5
0x0000000000146e75 : cmp al, 0 ; add byte ptr [rax], bl ; ret
0x00000000000bdd3c : cmp al, 0x11 ; je 0xbdd4e ; xor eax, eax ; ret
0x00000000000bdd3b : cmp al, 0x11 ; je 0xbdd4f ; xor eax, eax ; ret
0x0000000000154854 : cmp al, 0x16 ; add dword ptr [rax], eax ; js 0x1548c8 ; clc ; jmp qword ptr [rdx]
0x0000000000021e79 : cmp al, 0x16 ; call rax
0x0000000000144954 : cmp al, 0x17 ; add byte ptr [rax], al ; cwde ; movsd dword ptr [rdi], dword ptr [rsi] ; out dx, al ; call qword ptr [rdi]
0x0000000000096733 : cmp al, 0x24 ; lea rcx, [rax + 1] ; call rbx
0x00000000000dc81a : cmp al, 0x24 ; mov eax, 0x127 ; syscall
0x00000000000dc8ca : cmp al, 0x24 ; mov eax, 0x128 ; syscall
0x00000000000e45a1 : cmp al, 0x24 ; mov rdx, rax ; call 0xf0827
0x000000000010477a : cmp al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000000f6bdc : cmp al, 0x27 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000007b475 : cmp al, 0x30 ; ret
0x000000000009113d : cmp al, 0x3d ; jne 0x91161 ; mov rax, rdi ; ret
0x000000000012d320 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000034c1f : cmp al, 0x5f ; je 0x34c38 ; jmp 0x34bec
0x00000000000f131c : cmp al, 0x75 ; mov dword ptr [rax - 0x7d], ecx ; ret
0x00000000000607fb : cmp al, 0x83 ; ret 0x8308
0x000000000009f603 : cmp al, 0x83 ; ret 0x8b05
0x000000000005c9c2 : cmp al, 0x89 ; ret 0x348
0x000000000015de54 : cmp al, 0xac ; add dword ptr [rax], eax ; js 0x15de30 ; cli ; jmp qword ptr [rbx]
0x0000000000083448 : cmp al, 0xb ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00000000000bd6f2 : cmp al, 0xb9 ; cmp ebp, edi ; jge 0xbd6d1 ; mov edx, eax ; jmp 0xbd6da
0x00000000000e4582 : cmp al, 0xc3 ; sub rsp, 8 ; call 0xf07c8
0x000000000014fd54 : cmp al, 0xcb ; add byte ptr [rax], al ; test al, 0xe1 ; cmc ; jmp qword ptr [rbx]
0x000000000013eee9 : cmp al, 0xf3 ; call rsp
0x000000000013170d : cmp al, 0xf8 ; jmp qword ptr [rdi]
0x0000000000131709 : cmp al, 0xf8 ; lcall ptr [rcx] ; cmp al, 0xf8 ; jmp qword ptr [rdi]
0x0000000000142f8d : cmp al, 2 ; add byte ptr [rsi], ah ; std ; jmp rsp
0x00000000001316b1 : cmp al, bh ; call rsi
0x00000000001316ad : cmp al, bh ; dec eax ; cmp al, bh ; call rsi
0x00000000001316b5 : cmp al, bh ; jmp rsp
0x00000000000e1358 : cmp al, bl ; nop word ptr [rax + rax] ; ret
0x0000000000146cc5 : cmp al, byte ptr [rax] ; add byte ptr [rax - 0x49], ch ; out dx, eax ; jmp rcx
0x00000000000b3172 : cmp al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000011342b : cmp al, byte ptr [rax] ; ret
0x00000000001038df : cmp al, byte ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret 0x1be
0x0000000000103913 : cmp al, byte ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret 0x46c7
0x0000000000140355 : cmp al, byte ptr [rcx] ; add byte ptr [rdi + rbx*8 - 9], dl ; call rsp
0x000000000014b648 : cmp al, ch ; jmp rbx
0x0000000000044218 : cmp al, ch ; ret 0x414
0x0000000000064ce8 : cmp al, ch ; ret 0xfba6
0x0000000000088b36 : cmp al, dh ; ret
0x0000000000088b35 : cmp al, r14b ; ret
0x000000000003593a : cmp bh, 0xff ; inc eax ; shr eax, 0x1f ; ret
0x0000000000142131 : cmp bh, ah ; call rsp
0x0000000000131645 : cmp bh, al ; call qword ptr [rip + 0x23fff83a]
0x000000000013161d : cmp bh, al ; inc dword ptr [rbx] ; cmp edi, eax ; call qword ptr [rcx]
0x0000000000131649 : cmp bh, al ; jmp qword ptr [rbx]
0x000000000014d3c8 : cmp bh, al ; jmp qword ptr [rsi]
0x0000000000131615 : cmp bh, al ; jmp rdi
0x00000000000fadce : cmp bh, byte ptr [rsi - 0x76b7fffd] ; ret 0xff31
0x000000000008ec23 : cmp bl, dh ; ret
0x00000000000956b6 : cmp byte ptr [r11], r15b ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x0000000000078ba2 : cmp byte ptr [r8 - 0x77], cl ; adc byte ptr [r8 - 0x77], cl ; ret 0x19e9
0x000000000007263f : cmp byte ptr [r8 - 0x77], cl ; ret 0x348
0x00000000000ec1de : cmp byte ptr [r8 - 0x77], r9b ; ret 0x2b48
0x00000000000ee22b : cmp byte ptr [r8 - 0x77], r9b ; ret 0x2b49
0x00000000000c8e9a : cmp byte ptr [r8 - 0x77], r9b ; ret 0x8948
0x00000000000c9802 : cmp byte ptr [r8], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008967f : cmp byte ptr [rax + 0xf], cl ; ret
0x000000000010f59a : cmp byte ptr [rax + 1], bh ; ret
0x0000000000088b77 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x000000000009f62e : cmp byte ptr [rax - 0x49f00006], al ; ret 0x974
0x0000000000078ba3 : cmp byte ptr [rax - 0x77], cl ; adc byte ptr [r8 - 0x77], cl ; ret 0x19e9
0x00000000000a7fde : cmp byte ptr [rax - 0x77], cl ; jmp 0x48cd0934
0x000000000010ea0c : cmp byte ptr [rax - 0x77], cl ; ret
0x00000000000ec1df : cmp byte ptr [rax - 0x77], cl ; ret 0x2b48
0x00000000000ee22c : cmp byte ptr [rax - 0x77], cl ; ret 0x2b49
0x0000000000072640 : cmp byte ptr [rax - 0x77], cl ; ret 0x348
0x00000000000c8e9b : cmp byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000106d87 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rcx + rcx + 0x48], 0x89 ; out dx, eax ; call rax
0x0000000000108aa1 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rcx + rcx + 0x48], cl ; mov edi, ebp ; call rdx
0x0000000000088b66 : cmp byte ptr [rax], ah ; ret
0x0000000000146aa5 : cmp byte ptr [rax], al ; add al, bl ; insd dword ptr [rdi], dx ; out dx, eax ; jmp rax
0x0000000000004178 : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000006e024 : cmp byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000004259c : cmp byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000000797e8 : cmp byte ptr [rax], al ; mov rbx, rdi ; je 0x79800 ; pop rbx ; ret
0x0000000000111ffd : cmp byte ptr [rax], bl ; je 0x11200c ; ret
0x00000000000c9803 : cmp byte ptr [rax], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000083ab4 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x0000000000093d56 : cmp byte ptr [rax], dh ; ret
0x0000000000088b56 : cmp byte ptr [rax], dl ; ret
0x0000000000088b55 : cmp byte ptr [rax], r10b ; ret
0x0000000000088b65 : cmp byte ptr [rax], r12b ; ret
0x0000000000093d55 : cmp byte ptr [rax], r14b ; ret
0x0000000000083ab3 : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000000956ba : cmp byte ptr [rbp + 0x13], dh ; ret
0x00000000000956b9 : cmp byte ptr [rbp + 0x13], r14b ; ret
0x0000000000091c97 : cmp byte ptr [rbp + 0x29], cl ; ret 0x8b46
0x0000000000091f9b : cmp byte ptr [rbp + 0x31], al ; ror byte ptr [rbp + 0x29], cl ; ret 0x8b46
0x0000000000151498 : cmp byte ptr [rbp - 0xa], ch ; call qword ptr [rdi]
0x000000000014fbb8 : cmp byte ptr [rbp - 0xb], ch ; jmp qword ptr [rbx]
0x00000000000f5ab4 : cmp byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000110904 : cmp byte ptr [rbx + 0x5d], bl ; ret
0x00000000000bd222 : cmp byte ptr [rbx + 0x63], 0 ; jne 0xbd237 ; pop rbx ; ret
0x000000000015169c : cmp byte ptr [rbx - 0x7ff1bbf9], al ; add dword ptr [rdx], eax ; ret
0x0000000000158878 : cmp byte ptr [rbx - 7], ah ; jmp qword ptr [rax]
0x00000000000956b7 : cmp byte ptr [rbx], bh ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x00000000000dd510 : cmp byte ptr [rcx - 0x3b7cb730], cl ; ret
0x000000000002683a : cmp byte ptr [rcx - 0xa], al ; ret
0x000000000008f104 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000043d71 : cmp byte ptr [rcx], al ; ret 0x53e9
0x00000000000341e1 : cmp byte ptr [rcx], cl ; jmp 0x341aa
0x000000000000201c : cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x000000000002f454 : cmp byte ptr [rdi], 0 ; jne 0x2f469 ; add rsp, 0x18 ; ret
0x000000000002f494 : cmp byte ptr [rdi], 0 ; jne 0x2f4a9 ; add rsp, 0x18 ; ret
0x000000000003922c : cmp byte ptr [rdi], 0 ; jne 0x3923e ; pop rbx ; ret
0x000000000015fff0 : cmp byte ptr [rdi], 0xfb ; jmp qword ptr [rax]
0x0000000000143b88 : cmp byte ptr [rdi], bl ; out dx, al ; jmp qword ptr [rsi]
0x000000000003d06d : cmp byte ptr [rdi], cl ; test cl, dh ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret
0x0000000000148788 : cmp byte ptr [rdx - 0xe], al ; call rsp
0x00000000000e2f2c : cmp byte ptr [rip - 0x2776b800], al ; pop rbx ; ret
0x00000000000bb804 : cmp byte ptr [rsi + 0x30], 0x11 ; je 0xbb818 ; xor eax, eax ; ret
0x00000000000dbde6 : cmp byte ptr [rsi + 0x41], ah ; mov dword ptr [rax + 0x21], esi ; ret
0x000000000014f6a9 : cmp ch, dh ; call qword ptr [rdx]
0x0000000000044595 : cmp cl, byte ptr [rax - 0x77] ; ret 0x8d48
0x0000000000057da0 : cmp cl, byte ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000079fa1 : cmp cl, byte ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x767
0x00000000000790a1 : cmp cl, byte ptr [rax - 0x7f] ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x776
0x00000000000cc4dd : cmp cx, 0xa ; mov eax, edx ; je 0xcc53e ; ret
0x00000000000ec22d : cmp dh, al ; add byte ptr [rax], ah ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ec20f : cmp dh, al ; add byte ptr [rdx], cl ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001314f0 : cmp dh, byte ptr [rdi + rsi*8 - 0x8551d01] ; jmp rdx
0x0000000000130b35 : cmp dh, dh ; call qword ptr [rdx + rdi + 0x3bc2fff6]
0x0000000000130b09 : cmp dh, dh ; jmp rax
0x00000000000d96d1 : cmp dh, dh ; ret
0x0000000000026480 : cmp dh, dh ; ret 0x4801
0x0000000000046abd : cmp dh, dh ; ret 0x7401
0x000000000009f62f : cmp dl, 0xff ; movzx eax, dl ; je 0x9f649 ; ret
0x0000000000002b3a : cmp dl, byte ptr [rdi] ; ret
0x00000000001485c1 : cmp dl, dh ; jmp qword ptr [rsi]
0x000000000007028f : cmp dword ptr [rax + 0xf], eax ; mov dh, 0xc7 ; ret
0x00000000000efeba : cmp dword ptr [rax + 8], edi ; jne 0xefeb9 ; mov rax, qword ptr [rax + 0x30] ; ret
0x0000000000111ffc : cmp dword ptr [rax], 0x18 ; je 0x11200d ; ret
0x00000000000ec5e5 : cmp dword ptr [rdi + 0x10], 0 ; je 0xec5f8 ; xor eax, eax ; ret
0x0000000000075f69 : cmp dword ptr [rdi + 0x18], 0 ; je 0x75f7f ; ret
0x00000000000962e1 : cmp dword ptr [rdi + 8], esi ; jne 0x96306 ; ret
0x00000000000eff4e : cmp dword ptr [rdi], 0 ; je 0xeff5e ; ret
0x00000000000831e5 : cmp dword ptr [rip + 0x2e86ec], 0 ; je 0x831f9 ; ret
0x00000000000710b0 : cmp dword ptr [rsi + 0x30], 0 ; je 0x710c7 ; pop rbx ; ret
0x00000000000e0e94 : cmp dword ptr [rsi], 0 ; je 0xe0ea1 ; pop rbx ; ret
0x00000000000037c2 : cmp dword ptr [rsi], ecx ; pop rsp ; ret
0x00000000000d6ec3 : cmp dword ptr [rsp - 0x18], 2 ; cmove eax, edx ; ret
0x0000000000111ffb : cmp dword ptr fs:[rax], 0x18 ; je 0x11200e ; ret
0x0000000000036c7c : cmp eax, -0x80 ; jne 0x36c6f ; xor eax, eax ; ret
0x0000000000036ccc : cmp eax, -0x80 ; jne 0x36cbf ; xor eax, eax ; ret
0x00000000000ffa5c : cmp eax, -0xb ; je 0xffa56 ; pop rbx ; ret
0x000000000011b476 : cmp eax, -1 ; je 0x11b489 ; add rsp, 8 ; ret
0x0000000000071602 : cmp eax, -1 ; je 0x71613 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000071642 : cmp eax, -1 ; je 0x71653 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000079dc9 : cmp eax, -1 ; je 0x79dda ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000045844 : cmp eax, -1 ; jne 0x45839 ; mov rax, rdx ; ret
0x0000000000079e2b : cmp eax, -1 ; jne 0x79e14 ; pop rbx ; ret
0x00000000000fc211 : cmp eax, -3 ; jbe 0xfc226 ; pop rbx ; ret
0x0000000000003b27 : cmp eax, 0x12c401fe ; mov cl, 0x22 ; xchg eax, ebp ; ret
0x0000000000098346 : cmp eax, 0x13 ; je 0x98356 ; mov edx, eax ; jmp 0x9831e
0x000000000009a996 : cmp eax, 0x13 ; je 0x9a9a6 ; mov edx, eax ; jmp 0x9a96e
0x000000000009cf16 : cmp eax, 0x13 ; je 0x9cf26 ; mov edx, eax ; jmp 0x9ceee
0x000000000011322a : cmp eax, 0x21782 ; call 0x2f4c7
0x00000000000fcf92 : cmp eax, 0x2708c5 ; call rax
0x00000000000dfe9f : cmp eax, 0x28934c ; ret
0x000000000009113f : cmp eax, 0x89481775 ; clc ; ret
0x0000000000003605 : cmp eax, 0x952a0fa3 ; ret
0x00000000000c1018 : cmp eax, 0xc0830100 ; add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x0000000000142fad : cmp eax, 0xe7b40002 ; std ; jmp rsp
0x0000000000038794 : cmp eax, 0xe8000000 ; ret
0x000000000013158c : cmp eax, 0xecfff7b5 ; mov ah, 0xf7 ; jmp rdx
0x0000000000035ece : cmp eax, 0xfffff000 ; ja 0x35efa ; ret
0x00000000000361c5 : cmp eax, 0xfffff000 ; ja 0x361d6 ; ret
0x0000000000036221 : cmp eax, 0xfffff000 ; ja 0x36232 ; ret
0x000000000003625b : cmp eax, 0xfffff000 ; ja 0x3626a ; ret
0x00000000000362e1 : cmp eax, 0xfffff000 ; ja 0x362f2 ; ret
0x0000000000069f55 : cmp eax, 0xfffff000 ; ja 0x69f66 ; ret
0x00000000000afe76 : cmp eax, 0xfffff000 ; ja 0xafe85 ; ret
0x00000000000b2907 : cmp eax, 0xfffff000 ; ja 0xb2916 ; ret
0x00000000000b29a1 : cmp eax, 0xfffff000 ; ja 0xb29b0 ; ret
0x00000000000b2ab0 : cmp eax, 0xfffff000 ; ja 0xb2abf ; ret
0x00000000000b320c : cmp eax, 0xfffff000 ; ja 0xb321d ; ret
0x00000000000b3e48 : cmp eax, 0xfffff000 ; ja 0xb3e57 ; ret
0x00000000000b3eb8 : cmp eax, 0xfffff000 ; ja 0xb3ec7 ; ret
0x00000000000b414c : cmp eax, 0xfffff000 ; ja 0xb415b ; ret
0x00000000000b41cc : cmp eax, 0xfffff000 ; ja 0xb41db ; ret
0x00000000000d63ba : cmp eax, 0xfffff000 ; ja 0xd63e4 ; ret
0x00000000000d6409 : cmp eax, 0xfffff000 ; ja 0xd6434 ; ret
0x00000000000d645a : cmp eax, 0xfffff000 ; ja 0xd6484 ; ret
0x00000000000d64b2 : cmp eax, 0xfffff000 ; ja 0xd64dc ; ret
0x00000000000d6516 : cmp eax, 0xfffff000 ; ja 0xd653c ; ret
0x00000000000d656f : cmp eax, 0xfffff000 ; ja 0xd659c ; ret
0x00000000000d675e : cmp eax, 0xfffff000 ; ja 0xd676f ; ret
0x00000000000d67f1 : cmp eax, 0xfffff000 ; ja 0xd6802 ; ret
0x00000000000d68f5 : cmp eax, 0xfffff000 ; ja 0xd6906 ; ret
0x00000000000d6e97 : cmp eax, 0xfffff000 ; ja 0xd6ed4 ; ret
0x00000000000d7c27 : cmp eax, 0xfffff000 ; ja 0xd7c38 ; ret
0x00000000000d82a8 : cmp eax, 0xfffff000 ; ja 0xd82b9 ; ret
0x00000000000d830f : cmp eax, 0xfffff000 ; ja 0xd8320 ; ret
0x00000000000d8372 : cmp eax, 0xfffff000 ; ja 0xd8383 ; ret
0x00000000000d83d2 : cmp eax, 0xfffff000 ; ja 0xd83e3 ; ret
0x00000000000db257 : cmp eax, 0xfffff000 ; ja 0xdb268 ; ret
0x00000000000db2ab : cmp eax, 0xfffff000 ; ja 0xdb2bc ; ret
0x00000000000dba5f : cmp eax, 0xfffff000 ; ja 0xdba6e ; ret
0x00000000000dbd0f : cmp eax, 0xfffff000 ; ja 0xdbd42 ; ret
0x00000000000dbe95 : cmp eax, 0xfffff000 ; ja 0xdbea4 ; ret
0x00000000000dc68c : cmp eax, 0xfffff000 ; ja 0xdc69b ; ret
0x00000000000dc72c : cmp eax, 0xfffff000 ; ja 0xdc73b ; ret
0x00000000000dc7cf : cmp eax, 0xfffff000 ; ja 0xdc7de ; ret
0x00000000000dc87f : cmp eax, 0xfffff000 ; ja 0xdc88e ; ret
0x00000000000dc92a : cmp eax, 0xfffff000 ; ja 0xdc939 ; ret
0x00000000000dc99a : cmp eax, 0xfffff000 ; ja 0xdc9a9 ; ret
0x00000000000dca17 : cmp eax, 0xfffff000 ; ja 0xdca26 ; ret
0x00000000000dcab7 : cmp eax, 0xfffff000 ; ja 0xdcac6 ; ret
0x00000000000dd04b : cmp eax, 0xfffff000 ; ja 0xdd05c ; ret
0x00000000000de57c : cmp eax, 0xfffff000 ; ja 0xde58d ; ret
0x00000000000de608 : cmp eax, 0xfffff000 ; ja 0xde63c ; ret
0x00000000000de6b0 : cmp eax, 0xfffff000 ; ja 0xde6e4 ; ret
0x00000000000de704 : cmp eax, 0xfffff000 ; ja 0xde713 ; ret
0x00000000000e2776 : cmp eax, 0xfffff000 ; ja 0xe279c ; ret
0x00000000000e3502 : cmp eax, 0xfffff000 ; ja 0xe3515 ; pop rbx ; pop rbp ; ret
0x00000000000e37a5 : cmp eax, 0xfffff000 ; ja 0xe37b4 ; ret
0x00000000000e3857 : cmp eax, 0xfffff000 ; ja 0xe3868 ; ret
0x00000000000e3892 : cmp eax, 0xfffff000 ; ja 0xe38a3 ; ret
0x00000000000e44c2 : cmp eax, 0xfffff000 ; ja 0xe44d1 ; ret
0x00000000000e4662 : cmp eax, 0xfffff000 ; ja 0xe4671 ; ret
0x00000000000e4b1c : cmp eax, 0xfffff000 ; ja 0xe4b2b ; ret
0x00000000000e4bce : cmp eax, 0xfffff000 ; ja 0xe4bdd ; ret
0x00000000000e4c8e : cmp eax, 0xfffff000 ; ja 0xe4c9d ; ret
0x00000000000f0e4f : cmp eax, 0xfffff000 ; ja 0xf0e60 ; ret
0x00000000000f0edc : cmp eax, 0xfffff000 ; ja 0xf0f02 ; ret
0x00000000000f2de1 : cmp eax, 0xfffff000 ; ja 0xf2df2 ; ret
0x00000000000f2ee1 : cmp eax, 0xfffff000 ; ja 0xf2ef2 ; ret
0x0000000000118f0f : cmp eax, 0xfffff001 ; jae 0x118f1e ; ret
0x0000000000118f5f : cmp eax, 0xfffff001 ; jae 0x118f6e ; ret
0x00000000000361ec : cmp eax, 0xfffff001 ; jae 0x361fb ; ret
0x000000000003679c : cmp eax, 0xfffff001 ; jae 0x367ab ; ret
0x0000000000045036 : cmp eax, 0xfffff001 ; jae 0x45049 ; xor eax, eax ; ret
0x0000000000069f1c : cmp eax, 0xfffff001 ; jae 0x69f2b ; ret
0x00000000000a361c : cmp eax, 0xfffff001 ; jae 0xa362b ; ret
0x00000000000a60ac : cmp eax, 0xfffff001 ; jae 0xa60bb ; ret
0x00000000000a60dc : cmp eax, 0xfffff001 ; jae 0xa60eb ; ret
0x00000000000b285c : cmp eax, 0xfffff001 ; jae 0xb286b ; ret
0x00000000000b2a6f : cmp eax, 0xfffff001 ; jae 0xb2a7e ; ret
0x00000000000b2b4c : cmp eax, 0xfffff001 ; jae 0xb2b5b ; ret
0x00000000000b2d59 : cmp eax, 0xfffff001 ; jae 0xb2da0 ; ret
0x00000000000b2dc9 : cmp eax, 0xfffff001 ; jae 0xb2e10 ; ret
0x00000000000b3186 : cmp eax, 0xfffff001 ; jae 0xb3195 ; ret
0x00000000000b3e0c : cmp eax, 0xfffff001 ; jae 0xb3e1b ; ret
0x00000000000b3fcc : cmp eax, 0xfffff001 ; jae 0xb3fdb ; ret
0x00000000000b3ffc : cmp eax, 0xfffff001 ; jae 0xb400b ; ret
0x00000000000b407c : cmp eax, 0xfffff001 ; jae 0xb408b ; ret
0x00000000000b40ac : cmp eax, 0xfffff001 ; jae 0xb40bb ; ret
0x00000000000b40dc : cmp eax, 0xfffff001 ; jae 0xb40eb ; ret
0x00000000000b410c : cmp eax, 0xfffff001 ; jae 0xb411b ; ret
0x00000000000cc0fc : cmp eax, 0xfffff001 ; jae 0xcc10b ; ret
0x00000000000cc12c : cmp eax, 0xfffff001 ; jae 0xcc13b ; ret
0x00000000000cc15c : cmp eax, 0xfffff001 ; jae 0xcc16b ; ret
0x00000000000cc18c : cmp eax, 0xfffff001 ; jae 0xcc19b ; ret
0x00000000000cc1bc : cmp eax, 0xfffff001 ; jae 0xcc1cb ; ret
0x00000000000cc1ec : cmp eax, 0xfffff001 ; jae 0xcc1fb ; ret
0x00000000000cc21c : cmp eax, 0xfffff001 ; jae 0xcc22b ; ret
0x00000000000cc24c : cmp eax, 0xfffff001 ; jae 0xcc25b ; ret
0x00000000000d51fc : cmp eax, 0xfffff001 ; jae 0xd5246 ; ret
0x00000000000d526c : cmp eax, 0xfffff001 ; jae 0xd52b6 ; ret
0x00000000000d62ed : cmp eax, 0xfffff001 ; jae 0xd6300 ; mov eax, edx ; ret
0x00000000000d631c : cmp eax, 0xfffff001 ; jae 0xd632b ; ret
0x00000000000d65bc : cmp eax, 0xfffff001 ; jae 0xd65cb ; ret
0x00000000000d65ec : cmp eax, 0xfffff001 ; jae 0xd65fb ; ret
0x00000000000d66cc : cmp eax, 0xfffff001 ; jae 0xd66db ; ret
0x00000000000d66fc : cmp eax, 0xfffff001 ; jae 0xd670b ; ret
0x00000000000d67bc : cmp eax, 0xfffff001 ; jae 0xd67cb ; ret
0x00000000000d6829 : cmp eax, 0xfffff001 ; jae 0xd6870 ; ret
0x00000000000d6a79 : cmp eax, 0xfffff001 ; jae 0xd6ac0 ; ret
0x00000000000d6ae9 : cmp eax, 0xfffff001 ; jae 0xd6b30 ; ret
0x00000000000d6b4c : cmp eax, 0xfffff001 ; jae 0xd6b5b ; ret
0x00000000000d6fdc : cmp eax, 0xfffff001 ; jae 0xd6feb ; ret
0x00000000000d7139 : cmp eax, 0xfffff001 ; jae 0xd7180 ; ret
0x00000000000d719c : cmp eax, 0xfffff001 ; jae 0xd71ab ; ret
0x00000000000d71cc : cmp eax, 0xfffff001 ; jae 0xd71db ; ret
0x00000000000d71fc : cmp eax, 0xfffff001 ; jae 0xd720b ; ret
0x00000000000d722c : cmp eax, 0xfffff001 ; jae 0xd723b ; ret
0x00000000000d725c : cmp eax, 0xfffff001 ; jae 0xd726b ; ret
0x00000000000d7299 : cmp eax, 0xfffff001 ; jae 0xd72e0 ; ret
0x00000000000d72fc : cmp eax, 0xfffff001 ; jae 0xd730b ; ret
0x00000000000d732c : cmp eax, 0xfffff001 ; jae 0xd733b ; ret
0x00000000000d7b8c : cmp eax, 0xfffff001 ; jae 0xd7b9b ; ret
0x00000000000d7bbc : cmp eax, 0xfffff001 ; jae 0xd7bcb ; ret
0x00000000000d7bec : cmp eax, 0xfffff001 ; jae 0xd7bfb ; ret
0x00000000000d826c : cmp eax, 0xfffff001 ; jae 0xd827b ; ret
0x00000000000d82dc : cmp eax, 0xfffff001 ; jae 0xd82eb ; ret
0x00000000000d833c : cmp eax, 0xfffff001 ; jae 0xd834b ; ret
0x00000000000d839c : cmp eax, 0xfffff001 ; jae 0xd83ab ; ret
0x00000000000d83fc : cmp eax, 0xfffff001 ; jae 0xd840b ; ret
0x00000000000dae99 : cmp eax, 0xfffff001 ; jae 0xdaee0 ; ret
0x00000000000db21f : cmp eax, 0xfffff001 ; jae 0xdb22e ; ret
0x00000000000db9ec : cmp eax, 0xfffff001 ; jae 0xdba36 ; ret
0x00000000000dc09c : cmp eax, 0xfffff001 ; jae 0xdc0ab ; ret
0x00000000000dc0cc : cmp eax, 0xfffff001 ; jae 0xdc0db ; ret
0x00000000000dc0fc : cmp eax, 0xfffff001 ; jae 0xdc10b ; ret
0x00000000000dc45c : cmp eax, 0xfffff001 ; jae 0xdc46b ; ret
0x00000000000dc64c : cmp eax, 0xfffff001 ; jae 0xdc65b ; ret
0x00000000000dcc4c : cmp eax, 0xfffff001 ; jae 0xdcc5b ; ret
0x00000000000dccfc : cmp eax, 0xfffff001 ; jae 0xdcd0b ; ret
0x00000000000dcd3c : cmp eax, 0xfffff001 ; jae 0xdcd86 ; ret
0x00000000000dce9c : cmp eax, 0xfffff001 ; jae 0xdceab ; ret
0x00000000000dcecc : cmp eax, 0xfffff001 ; jae 0xdcedb ; ret
0x00000000000dcf09 : cmp eax, 0xfffff001 ; jae 0xdcf50 ; ret
0x00000000000dcf6c : cmp eax, 0xfffff001 ; jae 0xdcf7b ; ret
0x00000000000dcfa9 : cmp eax, 0xfffff001 ; jae 0xdcff0 ; ret
0x00000000000dd00c : cmp eax, 0xfffff001 ; jae 0xdd01b ; ret
0x00000000000dd31c : cmp eax, 0xfffff001 ; jae 0xdd32b ; ret
0x00000000000dd34c : cmp eax, 0xfffff001 ; jae 0xdd35b ; ret
0x00000000000dd37c : cmp eax, 0xfffff001 ; jae 0xdd38b ; ret
0x00000000000de74c : cmp eax, 0xfffff001 ; jae 0xde75b ; ret
0x00000000000de77c : cmp eax, 0xfffff001 ; jae 0xde78b ; ret
0x00000000000dfece : cmp eax, 0xfffff001 ; jae 0xdfedd ; ret
0x00000000000e005f : cmp eax, 0xfffff001 ; jae 0xe006e ; ret
0x00000000000e008c : cmp eax, 0xfffff001 ; jae 0xe009b ; ret
0x00000000000e00bc : cmp eax, 0xfffff001 ; jae 0xe00cb ; ret
0x00000000000e00f9 : cmp eax, 0xfffff001 ; jae 0xe0140 ; ret
0x00000000000e015c : cmp eax, 0xfffff001 ; jae 0xe016b ; ret
0x00000000000e018c : cmp eax, 0xfffff001 ; jae 0xe019b ; ret
0x00000000000e01bf : cmp eax, 0xfffff001 ; jae 0xe01ce ; ret
0x00000000000e01ec : cmp eax, 0xfffff001 ; jae 0xe01fb ; ret
0x00000000000e021c : cmp eax, 0xfffff001 ; jae 0xe022b ; ret
0x00000000000e024c : cmp eax, 0xfffff001 ; jae 0xe025b ; ret
0x00000000000e027c : cmp eax, 0xfffff001 ; jae 0xe028b ; ret
0x00000000000e313f : cmp eax, 0xfffff001 ; jae 0xe314e ; ret
0x00000000000e316c : cmp eax, 0xfffff001 ; jae 0xe317b ; ret
0x00000000000e319c : cmp eax, 0xfffff001 ; jae 0xe31ab ; ret
0x00000000000e31cf : cmp eax, 0xfffff001 ; jae 0xe31de ; ret
0x00000000000e31ff : cmp eax, 0xfffff001 ; jae 0xe320e ; ret
0x00000000000e322c : cmp eax, 0xfffff001 ; jae 0xe323b ; ret
0x00000000000e325f : cmp eax, 0xfffff001 ; jae 0xe326e ; ret
0x00000000000e328c : cmp eax, 0xfffff001 ; jae 0xe329b ; ret
0x00000000000e32bc : cmp eax, 0xfffff001 ; jae 0xe32cb ; ret
0x00000000000e32ef : cmp eax, 0xfffff001 ; jae 0xe32fe ; ret
0x00000000000e331c : cmp eax, 0xfffff001 ; jae 0xe332b ; ret
0x00000000000e334f : cmp eax, 0xfffff001 ; jae 0xe335e ; ret
0x00000000000e346c : cmp eax, 0xfffff001 ; jae 0xe347b ; ret
0x00000000000e349c : cmp eax, 0xfffff001 ; jae 0xe34ab ; ret
0x00000000000e35d9 : cmp eax, 0xfffff001 ; jae 0xe3620 ; ret
0x00000000000e365c : cmp eax, 0xfffff001 ; jae 0xe366b ; ret
0x00000000000e368c : cmp eax, 0xfffff001 ; jae 0xe369b ; ret
0x00000000000e36bc : cmp eax, 0xfffff001 ; jae 0xe36cb ; ret
0x00000000000e36ec : cmp eax, 0xfffff001 ; jae 0xe36fb ; ret
0x00000000000e392f : cmp eax, 0xfffff001 ; jae 0xe393e ; ret
0x00000000000e395c : cmp eax, 0xfffff001 ; jae 0xe396b ; ret
0x00000000000e398c : cmp eax, 0xfffff001 ; jae 0xe399b ; ret
0x00000000000e39cf : cmp eax, 0xfffff001 ; jae 0xe39de ; ret
0x00000000000e39fc : cmp eax, 0xfffff001 ; jae 0xe3a0b ; ret
0x00000000000e3a2c : cmp eax, 0xfffff001 ; jae 0xe3a3b ; ret
0x00000000000e3a5c : cmp eax, 0xfffff001 ; jae 0xe3a6b ; ret
0x00000000000e3a8c : cmp eax, 0xfffff001 ; jae 0xe3a9b ; ret
0x00000000000e3abc : cmp eax, 0xfffff001 ; jae 0xe3acb ; ret
0x00000000000e3aec : cmp eax, 0xfffff001 ; jae 0xe3afb ; ret
0x00000000000e3b1c : cmp eax, 0xfffff001 ; jae 0xe3b2b ; ret
0x00000000000e3b4c : cmp eax, 0xfffff001 ; jae 0xe3b5b ; ret
0x00000000000e3b7f : cmp eax, 0xfffff001 ; jae 0xe3b8e ; ret
0x00000000000e3bbc : cmp eax, 0xfffff001 ; jae 0xe3c06 ; ret
0x00000000000e3c1c : cmp eax, 0xfffff001 ; jae 0xe3c2b ; ret
0x00000000000e3c4f : cmp eax, 0xfffff001 ; jae 0xe3c5e ; ret
0x00000000000e3c7c : cmp eax, 0xfffff001 ; jae 0xe3c8b ; ret
0x00000000000e3cac : cmp eax, 0xfffff001 ; jae 0xe3cbb ; ret
0x00000000000e3cdc : cmp eax, 0xfffff001 ; jae 0xe3ceb ; ret
0x00000000000e3d0c : cmp eax, 0xfffff001 ; jae 0xe3d1b ; ret
0x00000000000e3d3c : cmp eax, 0xfffff001 ; jae 0xe3d4b ; ret
0x00000000000e3d6f : cmp eax, 0xfffff001 ; jae 0xe3d7e ; ret
0x00000000000e3d9f : cmp eax, 0xfffff001 ; jae 0xe3dae ; ret
0x00000000000e3dcc : cmp eax, 0xfffff001 ; jae 0xe3ddb ; ret
0x00000000000e3dfc : cmp eax, 0xfffff001 ; jae 0xe3e0b ; ret
0x00000000000e3e2c : cmp eax, 0xfffff001 ; jae 0xe3e3b ; ret
0x00000000000e3e5f : cmp eax, 0xfffff001 ; jae 0xe3e6e ; ret
0x00000000000e3e8f : cmp eax, 0xfffff001 ; jae 0xe3e9e ; ret
0x00000000000e3ebf : cmp eax, 0xfffff001 ; jae 0xe3ece ; ret
0x00000000000e3efc : cmp eax, 0xfffff001 ; jae 0xe3f46 ; ret
0x00000000000e3f5c : cmp eax, 0xfffff001 ; jae 0xe3f6b ; ret
0x00000000000e3f9c : cmp eax, 0xfffff001 ; jae 0xe3fe6 ; ret
0x00000000000e3ffc : cmp eax, 0xfffff001 ; jae 0xe400b ; ret
0x00000000000e402c : cmp eax, 0xfffff001 ; jae 0xe403b ; ret
0x00000000000e406c : cmp eax, 0xfffff001 ; jae 0xe40b6 ; ret
0x00000000000e40cc : cmp eax, 0xfffff001 ; jae 0xe40db ; ret
0x00000000000e40ff : cmp eax, 0xfffff001 ; jae 0xe410e ; ret
0x00000000000e412c : cmp eax, 0xfffff001 ; jae 0xe413b ; ret
0x00000000000e415c : cmp eax, 0xfffff001 ; jae 0xe416b ; ret
0x00000000000e418f : cmp eax, 0xfffff001 ; jae 0xe419e ; ret
0x00000000000e41c9 : cmp eax, 0xfffff001 ; jae 0xe4210 ; ret
0x00000000000e422c : cmp eax, 0xfffff001 ; jae 0xe423b ; ret
0x00000000000e425f : cmp eax, 0xfffff001 ; jae 0xe426e ; ret
0x00000000000e428f : cmp eax, 0xfffff001 ; jae 0xe429e ; ret
0x00000000000e42e9 : cmp eax, 0xfffff001 ; jae 0xe4330 ; ret
0x00000000000e434c : cmp eax, 0xfffff001 ; jae 0xe435b ; ret
0x00000000000e4389 : cmp eax, 0xfffff001 ; jae 0xe43d0 ; ret
0x00000000000e43ec : cmp eax, 0xfffff001 ; jae 0xe43fb ; ret
0x00000000000e441c : cmp eax, 0xfffff001 ; jae 0xe442b ; ret
0x00000000000e444f : cmp eax, 0xfffff001 ; jae 0xe445e ; ret
0x00000000000e447c : cmp eax, 0xfffff001 ; jae 0xe448b ; ret
0x00000000000e457c : cmp eax, 0xfffff001 ; jae 0xe45c6 ; ret
0x00000000000e45e9 : cmp eax, 0xfffff001 ; jae 0xe4630 ; ret
0x00000000000e4719 : cmp eax, 0xfffff001 ; jae 0xe4760 ; ret
0x00000000000e478c : cmp eax, 0xfffff001 ; jae 0xe47d6 ; ret
0x00000000000e47ef : cmp eax, 0xfffff001 ; jae 0xe47fe ; ret
0x00000000000e481c : cmp eax, 0xfffff001 ; jae 0xe482b ; ret
0x00000000000e484c : cmp eax, 0xfffff001 ; jae 0xe485b ; ret
0x00000000000e487f : cmp eax, 0xfffff001 ; jae 0xe488e ; ret
0x00000000000e4dfc : cmp eax, 0xfffff001 ; jae 0xe4e46 ; ret
0x00000000000e4e6c : cmp eax, 0xfffff001 ; jae 0xe4eb6 ; ret
0x00000000000e4ecc : cmp eax, 0xfffff001 ; jae 0xe4edb ; ret
0x00000000000e4efc : cmp eax, 0xfffff001 ; jae 0xe4f0b ; ret
0x00000000000e4f2c : cmp eax, 0xfffff001 ; jae 0xe4f3b ; ret
0x00000000000e4f5c : cmp eax, 0xfffff001 ; jae 0xe4f6b ; ret
0x00000000000e4f8f : cmp eax, 0xfffff001 ; jae 0xe4f9e ; ret
0x00000000000e4fbf : cmp eax, 0xfffff001 ; jae 0xe4fce ; ret
0x00000000000e4fec : cmp eax, 0xfffff001 ; jae 0xe4ffb ; ret
0x00000000000e501c : cmp eax, 0xfffff001 ; jae 0xe502b ; ret
0x00000000000e504c : cmp eax, 0xfffff001 ; jae 0xe505b ; ret
0x00000000000e507c : cmp eax, 0xfffff001 ; jae 0xe508b ; ret
0x00000000000f1183 : cmp eax, 0xfffffe58 ; call rax
0x0000000000090be6 : cmp eax, 1 ; ja 0x90bc9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000113a50 : cmp eax, 1 ; jne 0x113a42 ; mov rax, qword ptr [rdi + 8] ; call qword ptr [rax]
0x00000000000b81dd : cmp eax, 1 ; sete al ; movzx eax, al ; ret
0x00000000000bd125 : cmp eax, 3 ; je 0xbd139 ; add rsp, 8 ; ret
0x00000000000f084e : cmp eax, 4 ; je 0xf0859 ; ret
0x00000000000b3205 : cmp eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000077c9d : cmp eax, dword ptr [rdi + 0x10] ; jae 0x77cb9 ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x0000000000073822 : cmp eax, dword ptr [rdx + 0x4c] ; cmovne eax, ecx ; ret
0x00000000000955de : cmp eax, dword ptr [rsi + 0x10] ; jne 0x956d9 ; ret
0x00000000000955f3 : cmp eax, dword ptr [rsi + 0x14] ; jne 0x956d9 ; ret
0x0000000000095608 : cmp eax, dword ptr [rsi + 0x18] ; jne 0x956d9 ; ret
0x0000000000095623 : cmp eax, dword ptr [rsi + 0x1c] ; jne 0x956d9 ; ret
0x000000000009563e : cmp eax, dword ptr [rsi + 0x20] ; jne 0x956d9 ; ret
0x0000000000095653 : cmp eax, dword ptr [rsi + 0x24] ; jne 0x956d5 ; ret
0x0000000000095668 : cmp eax, dword ptr [rsi + 0x28] ; jne 0x956d5 ; ret
0x0000000000095673 : cmp eax, dword ptr [rsi + 0x2c] ; jne 0x956d5 ; ret
0x000000000009568e : cmp eax, dword ptr [rsi + 0x30] ; jne 0x956d5 ; ret
0x00000000000956a3 : cmp eax, dword ptr [rsi + 0x34] ; jne 0x956d5 ; ret
0x00000000000956b8 : cmp eax, dword ptr [rsi + 0x38] ; jne 0x956d5 ; ret
0x00000000000956c3 : cmp eax, dword ptr [rsi + 0x3c] ; jne 0x956d5 ; ret
0x00000000000955c3 : cmp eax, dword ptr [rsi + 0xc] ; jne 0x956d9 ; ret
0x0000000000095593 : cmp eax, dword ptr [rsi + 4] ; jne 0x956d9 ; ret
0x00000000000955a8 : cmp eax, dword ptr [rsi + 8] ; jne 0x956d9 ; ret
0x000000000009557d : cmp eax, dword ptr [rsi] ; jne 0x956d8 ; ret
0x00000000000445fb : cmp eax, ebx ; jne 0x445f5 ; pop rbx ; ret
0x000000000007aadd : cmp eax, ecx ; jae 0x7ab07 ; movzx eax, byte ptr [rax] ; ret
0x0000000000093864 : cmp eax, ecx ; je 0x93855 ; ret
0x0000000000003a77 : cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x0000000000043074 : cmp eax, edi ; jne 0x43051 ; ret
0x0000000000111489 : cmp eax, edx ; je 0x1114a0 ; add rsp, 8 ; ret
0x000000000004549d : cmp eax, edx ; jne 0x45496 ; xor eax, eax ; ret
0x000000000004557d : cmp eax, edx ; jne 0x45576 ; xor eax, eax ; ret
0x00000000000f0784 : cmp eax, edx ; jne 0xf0798 ; mov eax, 0xca ; syscall
0x000000000009388f : cmp eax, esi ; jne 0x93887 ; mov rax, rdi ; ret
0x0000000000133f35 : cmp ebp, 0xfd8168ff ; call rax
0x00000000000e571e : cmp ebp, dword ptr [rax] ; add byte ptr [rcx + 1], cl ; fisttp qword ptr [rax + 0x39] ; ret
0x00000000000bd6f4 : cmp ebp, edi ; jge 0xbd6cf ; mov edx, eax ; jmp 0xbd6d8
0x00000000000be805 : cmp ebp, esi ; jge 0xbe7e8 ; mov rdx, r8 ; jmp 0xbe81c
0x00000000000f07ea : cmp ebx, 0xa ; je 0xf07f5 ; ret
0x000000000011e579 : cmp ebx, ebp ; jae 0x11e596 ; nop dword ptr [rax] ; call qword ptr [rbx]
0x0000000000045f14 : cmp ecx, -1 ; jne 0x45f11 ; mov rax, rdx ; ret
0x0000000000089a61 : cmp ecx, -1 ; jne 0x89a61 ; sub rax, 1 ; ret
0x000000000009653c : cmp ecx, -1 ; jne 0x96539 ; sub rax, 4 ; ret
0x00000000000451bb : cmp ecx, 0x2f ; jmp r8
0x00000000000cc4de : cmp ecx, 0xa ; mov eax, edx ; je 0xcc53d ; ret
0x000000000009de27 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000ddeb9 : cmp ecx, dword ptr [rax - 0x7d] ; ret 0xf01
0x00000000000cfabc : cmp ecx, dword ptr [rax - 0xc] ; jne 0xcfab8 ; mov eax, dword ptr [rdx + 8] ; ret
0x000000000011e5df : cmp ecx, dword ptr [rbx - 0x3f7aefb9] ; jne 0x11e5f9 ; pop rbx ; ret
0x000000000009318c : cmp ecx, dword ptr [rcx + 0x39] ; ret 0x5876
0x00000000000932e7 : cmp ecx, dword ptr [rcx + 0x39] ; ret 0x860f
0x00000000000c0f17 : cmp ecx, dword ptr [rcx - 0x7d] ; ret 0xeb20
0x0000000000096390 : cmp ecx, eax ; jle 0x96389 ; mov eax, 1 ; ret
0x000000000007b6d2 : cmp ecx, edi ; je 0x7b50a ; ret
0x000000000009382c : cmp ecx, edx ; je 0x93825 ; ret
0x00000000000874a0 : cmp ecx, edx ; jne 0x8749d ; ret
0x0000000000095be7 : cmp ecx, edx ; jne 0x95bd9 ; sub eax, r8d ; nop ; ret
0x0000000000093828 : cmp ecx, esi ; je 0x93829 ; cmp ecx, edx ; je 0x93829 ; ret
0x0000000000079e6a : cmp ecx, esi ; jne 0x79e67 ; lea eax, [rdx + rdi] ; ret
0x0000000000103102 : cmp edi, -1 ; je 0x10311f ; mov eax, r13d ; syscall
0x000000000011e02c : cmp edi, 1 ; ja 0x11e03d ; ret
0x00000000000e679d : cmp edi, 9 ; setbe al ; ret
0x0000000000131621 : cmp edi, eax ; call qword ptr [rcx]
0x0000000000131889 : cmp edi, eax ; call rdi
0x00000000001318b9 : cmp edi, eax ; call rsi
0x000000000013167d : cmp edi, eax ; jmp qword ptr [rbx]
0x00000000000897dc : cmp edi, eax ; jne 0x897d8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e276a : cmp edi, eax ; jne 0xe2789 ; mov eax, 0x88 ; syscall
0x0000000000146689 : cmp edi, ebp ; jmp qword ptr [rbx]
0x0000000000146671 : cmp edi, ebp ; jmp qword ptr [rcx]
0x000000000015fd21 : cmp edi, ebx ; jmp qword ptr [rdx]
0x0000000000141a51 : cmp edi, ebx ; jmp rsp
0x000000000004d11e : cmp edi, ecx ; ja 0x4d107 ; mov eax, r8d ; ret
0x000000000010ada2 : cmp edi, ecx ; jne 0x10ad95 ; ret
0x000000000004757a : cmp edi, edx ; jbe 0x47579 ; nop ; mov rax, rsi ; ret
0x00000000000a618d : cmp edi, edx ; je 0xa619e ; mov eax, ecx ; ret
0x00000000000e33a5 : cmp edi, edx ; jne 0xe33a0 ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000d6248 : cmp edi, esi ; ja 0xd61e5 ; pop rbx ; ret
0x00000000000f0e22 : cmp edx, -0x16 ; cmovne eax, ecx ; ret
0x00000000000b28a4 : cmp edx, -1 ; cmovne rax, rdx ; ret
0x000000000006d2c1 : cmp edx, -1 ; je 0x6d2d9 ; mov rax, rdx ; pop rbx ; ret
0x0000000000075b21 : cmp edx, -1 ; je 0x75b39 ; mov rax, rdx ; pop rbx ; ret
0x00000000000b3d7c : cmp edx, 0 ; mov eax, edx ; jle 0xb3d8d ; ret
0x000000000009477b : cmp edx, 0x69746e65 ; je 0x947a9 ; pop rbx ; ret
0x00000000000f4e27 : cmp edx, 0x80000000 ; cmovne eax, edi ; ret
0x000000000002218e : cmp edx, 1 ; jle 0x22188 ; mov byte ptr [rdi], 0 ; ret
0x00000000001089e9 : cmp edx, 3 ; jbe 0x1089f5 ; ret
0x00000000000bdea1 : cmp edx, dword ptr [rcx + 4] ; jne 0xbdeb6 ; ret
0x000000000002e8af : cmp edx, dword ptr [rdi + 4] ; jb 0x2e8c6 ; ret
0x00000000000bdc49 : cmp edx, dword ptr [rsi + 4] ; je 0xbdc56 ; ret
0x00000000000bdcdd : cmp edx, dword ptr [rsi + rdi*4] ; cmove eax, ecx ; ret
0x00000000000ffc01 : cmp edx, eax ; jb 0xffc29 ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000451ec : cmp edx, eax ; jg 0x451ad ; ret
0x00000000001001a5 : cmp edx, eax ; jne 0x10018e ; ret
0x00000000000f0ada : cmp edx, eax ; jne 0xf0abd ; ret
0x00000000000f2dd5 : cmp edx, ecx ; ja 0xf2e04 ; movsxd rdi, edi ; xor eax, eax ; syscall
0x00000000000f2ed5 : cmp edx, ecx ; ja 0xf2f04 ; mov eax, 0x59 ; syscall
0x00000000000a49f4 : cmp edx, ecx ; jb 0xa49c5 ; ret
0x00000000000e4d78 : cmp edx, ecx ; jb 0xe4d85 ; ret
0x00000000001147b6 : cmp edx, ecx ; je 0x1147c5 ; ret
0x0000000000093808 : cmp edx, ecx ; je 0x93805 ; ret
0x000000000008927c : cmp edx, ecx ; jne 0x89265 ; ret
0x000000000008faf1 : cmp edx, ecx ; jne 0x8faed ; ret
0x00000000000b46bf : cmp edx, ecx ; jne 0xb46f5 ; ret
0x00000000000effae : cmp edx, edi ; setae al ; ret
0x0000000000100736 : cmp edx, esi ; jb 0x10072d ; mov eax, 0xffffffff ; ret
0x00000000001007cd : cmp edx, esi ; jb 0x10079d ; mov eax, 0xffffffff ; ret
0x000000000003959d : cmp esi, -1 ; cmovne rax, rbx ; pop rbx ; ret
0x00000000000adf34 : cmp esi, 1 ; je 0xadf47 ; xor eax, eax ; ret
0x000000000007609c : cmp esi, 2 ; mov dword ptr [rdi], edx ; je 0x760b0 ; ret
0x00000000000bdd24 : cmp esi, dword ptr [rdi + 4] ; jl 0xbdd21 ; nop dword ptr [rax - 0x45] ; ret
0x00000000001093b2 : cmp esi, dword ptr [rdx + 0x28] ; ja 0x1093a9 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x0000000000071b02 : cmp esi, eax ; je 0x71b18 ; add rsp, 8 ; ret
0x000000000012e6a4 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x000000000001f5dc : cmp esi, ecx ; cmovge eax, edx ; jmp 0x1f5b2
0x000000000007169a : cmp esi, ecx ; jb 0x71697 ; lea eax, [rdx + rdi] ; ret
0x000000000008e3b4 : cmp esi, ecx ; jne 0x8e3a6 ; xor eax, eax ; ret
0x00000000000475b6 : cmp esi, edi ; mov rax, rdi ; cmovae rax, rsi ; ret
0x00000000000dc538 : cmp esi, edx ; ja 0xdc545 ; ret
0x0000000000130b11 : cmp esi, esi ; call rax
0x0000000000130b01 : cmp esi, esi ; jmp qword ptr [rax]
0x000000000013fd31 : cmp esi, esi ; jmp rsp
0x00000000000f6d00 : cmp esp, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0xb9
0x00000000000ec5e4 : cmp qword ptr [rdi + 0x10], 0 ; je 0xec5f9 ; xor eax, eax ; ret
0x0000000000075f68 : cmp qword ptr [rdi + 0x18], 0 ; je 0x75f80 ; ret
0x00000000000eff4d : cmp qword ptr [rdi], 0 ; je 0xeff5f ; ret
0x00000000000710af : cmp qword ptr [rsi + 0x30], 0 ; je 0x710c8 ; pop rbx ; ret
0x00000000000e0e93 : cmp qword ptr [rsi], 0 ; je 0xe0ea2 ; pop rbx ; ret
0x000000000008ec22 : cmp r11b, r14b ; ret
0x00000000000f07e9 : cmp r11d, 0xa ; je 0xf07f6 ; ret
0x00000000000d96d0 : cmp r14b, r14b ; ret
0x0000000000142130 : cmp r15b, spl ; call rsp
0x0000000000043073 : cmp r8, rdi ; jne 0x43052 ; ret
0x000000000009113c : cmp r8b, 0x3d ; jne 0x91162 ; mov rax, rdi ; ret
0x0000000000093863 : cmp r8d, ecx ; je 0x93856 ; ret
0x0000000000035ecd : cmp rax, -0x1000 ; ja 0x35efb ; ret
0x00000000000361c4 : cmp rax, -0x1000 ; ja 0x361d7 ; ret
0x0000000000036220 : cmp rax, -0x1000 ; ja 0x36233 ; ret
0x000000000003625a : cmp rax, -0x1000 ; ja 0x3626b ; ret
0x00000000000362e0 : cmp rax, -0x1000 ; ja 0x362f3 ; ret
0x0000000000069f54 : cmp rax, -0x1000 ; ja 0x69f67 ; ret
0x00000000000afe75 : cmp rax, -0x1000 ; ja 0xafe86 ; ret
0x00000000000b2906 : cmp rax, -0x1000 ; ja 0xb2917 ; ret
0x00000000000b29a0 : cmp rax, -0x1000 ; ja 0xb29b1 ; ret
0x00000000000b2aaf : cmp rax, -0x1000 ; ja 0xb2ac0 ; ret
0x00000000000b320b : cmp rax, -0x1000 ; ja 0xb321e ; ret
0x00000000000b3e47 : cmp rax, -0x1000 ; ja 0xb3e58 ; ret
0x00000000000b3eb7 : cmp rax, -0x1000 ; ja 0xb3ec8 ; ret
0x00000000000b414b : cmp rax, -0x1000 ; ja 0xb415c ; ret
0x00000000000b41cb : cmp rax, -0x1000 ; ja 0xb41dc ; ret
0x00000000000d63b9 : cmp rax, -0x1000 ; ja 0xd63e5 ; ret
0x00000000000d6408 : cmp rax, -0x1000 ; ja 0xd6435 ; ret
0x00000000000d6459 : cmp rax, -0x1000 ; ja 0xd6485 ; ret
0x00000000000d64b1 : cmp rax, -0x1000 ; ja 0xd64dd ; ret
0x00000000000d6515 : cmp rax, -0x1000 ; ja 0xd653d ; ret
0x00000000000d656e : cmp rax, -0x1000 ; ja 0xd659d ; ret
0x00000000000d675d : cmp rax, -0x1000 ; ja 0xd6770 ; ret
0x00000000000d67f0 : cmp rax, -0x1000 ; ja 0xd6803 ; ret
0x00000000000d68f4 : cmp rax, -0x1000 ; ja 0xd6907 ; ret
0x00000000000d6e96 : cmp rax, -0x1000 ; ja 0xd6ed5 ; ret
0x00000000000d7c26 : cmp rax, -0x1000 ; ja 0xd7c39 ; ret
0x00000000000d82a7 : cmp rax, -0x1000 ; ja 0xd82ba ; ret
0x00000000000d830e : cmp rax, -0x1000 ; ja 0xd8321 ; ret
0x00000000000d8371 : cmp rax, -0x1000 ; ja 0xd8384 ; ret
0x00000000000d83d1 : cmp rax, -0x1000 ; ja 0xd83e4 ; ret
0x00000000000db256 : cmp rax, -0x1000 ; ja 0xdb269 ; ret
0x00000000000db2aa : cmp rax, -0x1000 ; ja 0xdb2bd ; ret
0x00000000000dba5e : cmp rax, -0x1000 ; ja 0xdba6f ; ret
0x00000000000dbd0e : cmp rax, -0x1000 ; ja 0xdbd43 ; ret
0x00000000000dbe94 : cmp rax, -0x1000 ; ja 0xdbea5 ; ret
0x00000000000dc68b : cmp rax, -0x1000 ; ja 0xdc69c ; ret
0x00000000000dc72b : cmp rax, -0x1000 ; ja 0xdc73c ; ret
0x00000000000dc7ce : cmp rax, -0x1000 ; ja 0xdc7df ; ret
0x00000000000dc87e : cmp rax, -0x1000 ; ja 0xdc88f ; ret
0x00000000000dc929 : cmp rax, -0x1000 ; ja 0xdc93a ; ret
0x00000000000dc999 : cmp rax, -0x1000 ; ja 0xdc9aa ; ret
0x00000000000dca16 : cmp rax, -0x1000 ; ja 0xdca27 ; ret
0x00000000000dcab6 : cmp rax, -0x1000 ; ja 0xdcac7 ; ret
0x00000000000dd04a : cmp rax, -0x1000 ; ja 0xdd05d ; ret
0x00000000000de57b : cmp rax, -0x1000 ; ja 0xde58e ; ret
0x00000000000de607 : cmp rax, -0x1000 ; ja 0xde63d ; ret
0x00000000000de6af : cmp rax, -0x1000 ; ja 0xde6e5 ; ret
0x00000000000de703 : cmp rax, -0x1000 ; ja 0xde714 ; ret
0x00000000000e2775 : cmp rax, -0x1000 ; ja 0xe279d ; ret
0x00000000000e37a4 : cmp rax, -0x1000 ; ja 0xe37b5 ; ret
0x00000000000e3856 : cmp rax, -0x1000 ; ja 0xe3869 ; ret
0x00000000000e3891 : cmp rax, -0x1000 ; ja 0xe38a4 ; ret
0x00000000000e44c1 : cmp rax, -0x1000 ; ja 0xe44d2 ; ret
0x00000000000e4661 : cmp rax, -0x1000 ; ja 0xe4672 ; ret
0x00000000000e4b1b : cmp rax, -0x1000 ; ja 0xe4b2c ; ret
0x00000000000e4bcd : cmp rax, -0x1000 ; ja 0xe4bde ; ret
0x00000000000e4c8d : cmp rax, -0x1000 ; ja 0xe4c9e ; ret
0x00000000000f0e4e : cmp rax, -0x1000 ; ja 0xf0e61 ; ret
0x00000000000f0edb : cmp rax, -0x1000 ; ja 0xf0f03 ; ret
0x00000000000f2de0 : cmp rax, -0x1000 ; ja 0xf2df3 ; ret
0x00000000000f2ee0 : cmp rax, -0x1000 ; ja 0xf2ef3 ; ret
0x0000000000036c7b : cmp rax, -0x80 ; jne 0x36c70 ; xor eax, eax ; ret
0x0000000000036ccb : cmp rax, -0x80 ; jne 0x36cc0 ; xor eax, eax ; ret
0x0000000000118f0e : cmp rax, -0xfff ; jae 0x118f1f ; ret
0x0000000000118f5e : cmp rax, -0xfff ; jae 0x118f6f ; ret
0x00000000000361eb : cmp rax, -0xfff ; jae 0x361fc ; ret
0x000000000003679b : cmp rax, -0xfff ; jae 0x367ac ; ret
0x0000000000069f1b : cmp rax, -0xfff ; jae 0x69f2c ; ret
0x00000000000a361b : cmp rax, -0xfff ; jae 0xa362c ; ret
0x00000000000a60ab : cmp rax, -0xfff ; jae 0xa60bc ; ret
0x00000000000a60db : cmp rax, -0xfff ; jae 0xa60ec ; ret
0x00000000000b285b : cmp rax, -0xfff ; jae 0xb286c ; ret
0x00000000000b2a6e : cmp rax, -0xfff ; jae 0xb2a7f ; ret
0x00000000000b2b4b : cmp rax, -0xfff ; jae 0xb2b5c ; ret
0x00000000000b2d58 : cmp rax, -0xfff ; jae 0xb2da1 ; ret
0x00000000000b2dc8 : cmp rax, -0xfff ; jae 0xb2e11 ; ret
0x00000000000b3e0b : cmp rax, -0xfff ; jae 0xb3e1c ; ret
0x00000000000b3fcb : cmp rax, -0xfff ; jae 0xb3fdc ; ret
0x00000000000b3ffb : cmp rax, -0xfff ; jae 0xb400c ; ret
0x00000000000b407b : cmp rax, -0xfff ; jae 0xb408c ; ret
0x00000000000b40ab : cmp rax, -0xfff ; jae 0xb40bc ; ret
0x00000000000b40db : cmp rax, -0xfff ; jae 0xb40ec ; ret
0x00000000000b410b : cmp rax, -0xfff ; jae 0xb411c ; ret
0x00000000000cc0fb : cmp rax, -0xfff ; jae 0xcc10c ; ret
0x00000000000cc12b : cmp rax, -0xfff ; jae 0xcc13c ; ret
0x00000000000cc15b : cmp rax, -0xfff ; jae 0xcc16c ; ret
0x00000000000cc18b : cmp rax, -0xfff ; jae 0xcc19c ; ret
0x00000000000cc1bb : cmp rax, -0xfff ; jae 0xcc1cc ; ret
0x00000000000cc1eb : cmp rax, -0xfff ; jae 0xcc1fc ; ret
0x00000000000cc21b : cmp rax, -0xfff ; jae 0xcc22c ; ret
0x00000000000cc24b : cmp rax, -0xfff ; jae 0xcc25c ; ret
0x00000000000d51fb : cmp rax, -0xfff ; jae 0xd5247 ; ret
0x00000000000d526b : cmp rax, -0xfff ; jae 0xd52b7 ; ret
0x00000000000d631b : cmp rax, -0xfff ; jae 0xd632c ; ret
0x00000000000d65bb : cmp rax, -0xfff ; jae 0xd65cc ; ret
0x00000000000d65eb : cmp rax, -0xfff ; jae 0xd65fc ; ret
0x00000000000d66cb : cmp rax, -0xfff ; jae 0xd66dc ; ret
0x00000000000d66fb : cmp rax, -0xfff ; jae 0xd670c ; ret
0x00000000000d67bb : cmp rax, -0xfff ; jae 0xd67cc ; ret
0x00000000000d6828 : cmp rax, -0xfff ; jae 0xd6871 ; ret
0x00000000000d6a78 : cmp rax, -0xfff ; jae 0xd6ac1 ; ret
0x00000000000d6ae8 : cmp rax, -0xfff ; jae 0xd6b31 ; ret
0x00000000000d6b4b : cmp rax, -0xfff ; jae 0xd6b5c ; ret
0x00000000000d6fdb : cmp rax, -0xfff ; jae 0xd6fec ; ret
0x00000000000d7138 : cmp rax, -0xfff ; jae 0xd7181 ; ret
0x00000000000d719b : cmp rax, -0xfff ; jae 0xd71ac ; ret
0x00000000000d71cb : cmp rax, -0xfff ; jae 0xd71dc ; ret
0x00000000000d71fb : cmp rax, -0xfff ; jae 0xd720c ; ret
0x00000000000d722b : cmp rax, -0xfff ; jae 0xd723c ; ret
0x00000000000d725b : cmp rax, -0xfff ; jae 0xd726c ; ret
0x00000000000d7298 : cmp rax, -0xfff ; jae 0xd72e1 ; ret
0x00000000000d72fb : cmp rax, -0xfff ; jae 0xd730c ; ret
0x00000000000d732b : cmp rax, -0xfff ; jae 0xd733c ; ret
0x00000000000d7b8b : cmp rax, -0xfff ; jae 0xd7b9c ; ret
0x00000000000d7bbb : cmp rax, -0xfff ; jae 0xd7bcc ; ret
0x00000000000d7beb : cmp rax, -0xfff ; jae 0xd7bfc ; ret
0x00000000000d826b : cmp rax, -0xfff ; jae 0xd827c ; ret
0x00000000000d82db : cmp rax, -0xfff ; jae 0xd82ec ; ret
0x00000000000d833b : cmp rax, -0xfff ; jae 0xd834c ; ret
0x00000000000d839b : cmp rax, -0xfff ; jae 0xd83ac ; ret
0x00000000000d83fb : cmp rax, -0xfff ; jae 0xd840c ; ret
0x00000000000dae98 : cmp rax, -0xfff ; jae 0xdaee1 ; ret
0x00000000000db21e : cmp rax, -0xfff ; jae 0xdb22f ; ret
0x00000000000db9eb : cmp rax, -0xfff ; jae 0xdba37 ; ret
0x00000000000dc09b : cmp rax, -0xfff ; jae 0xdc0ac ; ret
0x00000000000dc0cb : cmp rax, -0xfff ; jae 0xdc0dc ; ret
0x00000000000dc0fb : cmp rax, -0xfff ; jae 0xdc10c ; ret
0x00000000000dc45b : cmp rax, -0xfff ; jae 0xdc46c ; ret
0x00000000000dc64b : cmp rax, -0xfff ; jae 0xdc65c ; ret
0x00000000000dcc4b : cmp rax, -0xfff ; jae 0xdcc5c ; ret
0x00000000000dccfb : cmp rax, -0xfff ; jae 0xdcd0c ; ret
0x00000000000dcd3b : cmp rax, -0xfff ; jae 0xdcd87 ; ret
0x00000000000dce9b : cmp rax, -0xfff ; jae 0xdceac ; ret
0x00000000000dcecb : cmp rax, -0xfff ; jae 0xdcedc ; ret
0x00000000000dcf08 : cmp rax, -0xfff ; jae 0xdcf51 ; ret
0x00000000000dcf6b : cmp rax, -0xfff ; jae 0xdcf7c ; ret
0x00000000000dcfa8 : cmp rax, -0xfff ; jae 0xdcff1 ; ret
0x00000000000dd00b : cmp rax, -0xfff ; jae 0xdd01c ; ret
0x00000000000dd31b : cmp rax, -0xfff ; jae 0xdd32c ; ret
0x00000000000dd34b : cmp rax, -0xfff ; jae 0xdd35c ; ret
0x00000000000dd37b : cmp rax, -0xfff ; jae 0xdd38c ; ret
0x00000000000de74b : cmp rax, -0xfff ; jae 0xde75c ; ret
0x00000000000de77b : cmp rax, -0xfff ; jae 0xde78c ; ret
0x00000000000dfecd : cmp rax, -0xfff ; jae 0xdfede ; ret
0x00000000000e005e : cmp rax, -0xfff ; jae 0xe006f ; ret
0x00000000000e008b : cmp rax, -0xfff ; jae 0xe009c ; ret
0x00000000000e00bb : cmp rax, -0xfff ; jae 0xe00cc ; ret
0x00000000000e00f8 : cmp rax, -0xfff ; jae 0xe0141 ; ret
0x00000000000e015b : cmp rax, -0xfff ; jae 0xe016c ; ret
0x00000000000e018b : cmp rax, -0xfff ; jae 0xe019c ; ret
0x00000000000e01be : cmp rax, -0xfff ; jae 0xe01cf ; ret
0x00000000000e01eb : cmp rax, -0xfff ; jae 0xe01fc ; ret
0x00000000000e021b : cmp rax, -0xfff ; jae 0xe022c ; ret
0x00000000000e024b : cmp rax, -0xfff ; jae 0xe025c ; ret
0x00000000000e027b : cmp rax, -0xfff ; jae 0xe028c ; ret
0x00000000000e313e : cmp rax, -0xfff ; jae 0xe314f ; ret
0x00000000000e316b : cmp rax, -0xfff ; jae 0xe317c ; ret
0x00000000000e319b : cmp rax, -0xfff ; jae 0xe31ac ; ret
0x00000000000e31ce : cmp rax, -0xfff ; jae 0xe31df ; ret
0x00000000000e31fe : cmp rax, -0xfff ; jae 0xe320f ; ret
0x00000000000e322b : cmp rax, -0xfff ; jae 0xe323c ; ret
0x00000000000e325e : cmp rax, -0xfff ; jae 0xe326f ; ret
0x00000000000e328b : cmp rax, -0xfff ; jae 0xe329c ; ret
0x00000000000e32bb : cmp rax, -0xfff ; jae 0xe32cc ; ret
0x00000000000e32ee : cmp rax, -0xfff ; jae 0xe32ff ; ret
0x00000000000e331b : cmp rax, -0xfff ; jae 0xe332c ; ret
0x00000000000e334e : cmp rax, -0xfff ; jae 0xe335f ; ret
0x00000000000e346b : cmp rax, -0xfff ; jae 0xe347c ; ret
0x00000000000e349b : cmp rax, -0xfff ; jae 0xe34ac ; ret
0x00000000000e35d8 : cmp rax, -0xfff ; jae 0xe3621 ; ret
0x00000000000e365b : cmp rax, -0xfff ; jae 0xe366c ; ret
0x00000000000e368b : cmp rax, -0xfff ; jae 0xe369c ; ret
0x00000000000e36bb : cmp rax, -0xfff ; jae 0xe36cc ; ret
0x00000000000e36eb : cmp rax, -0xfff ; jae 0xe36fc ; ret
0x00000000000e392e : cmp rax, -0xfff ; jae 0xe393f ; ret
0x00000000000e395b : cmp rax, -0xfff ; jae 0xe396c ; ret
0x00000000000e398b : cmp rax, -0xfff ; jae 0xe399c ; ret
0x00000000000e39ce : cmp rax, -0xfff ; jae 0xe39df ; ret
0x00000000000e39fb : cmp rax, -0xfff ; jae 0xe3a0c ; ret
0x00000000000e3a2b : cmp rax, -0xfff ; jae 0xe3a3c ; ret
0x00000000000e3a5b : cmp rax, -0xfff ; jae 0xe3a6c ; ret
0x00000000000e3a8b : cmp rax, -0xfff ; jae 0xe3a9c ; ret
0x00000000000e3abb : cmp rax, -0xfff ; jae 0xe3acc ; ret
0x00000000000e3aeb : cmp rax, -0xfff ; jae 0xe3afc ; ret
0x00000000000e3b1b : cmp rax, -0xfff ; jae 0xe3b2c ; ret
0x00000000000e3b4b : cmp rax, -0xfff ; jae 0xe3b5c ; ret
0x00000000000e3b7e : cmp rax, -0xfff ; jae 0xe3b8f ; ret
0x00000000000e3bbb : cmp rax, -0xfff ; jae 0xe3c07 ; ret
0x00000000000e3c1b : cmp rax, -0xfff ; jae 0xe3c2c ; ret
0x00000000000e3c4e : cmp rax, -0xfff ; jae 0xe3c5f ; ret
0x00000000000e3c7b : cmp rax, -0xfff ; jae 0xe3c8c ; ret
0x00000000000e3cab : cmp rax, -0xfff ; jae 0xe3cbc ; ret
0x00000000000e3cdb : cmp rax, -0xfff ; jae 0xe3cec ; ret
0x00000000000e3d0b : cmp rax, -0xfff ; jae 0xe3d1c ; ret
0x00000000000e3d3b : cmp rax, -0xfff ; jae 0xe3d4c ; ret
0x00000000000e3d6e : cmp rax, -0xfff ; jae 0xe3d7f ; ret
0x00000000000e3d9e : cmp rax, -0xfff ; jae 0xe3daf ; ret
0x00000000000e3dcb : cmp rax, -0xfff ; jae 0xe3ddc ; ret
0x00000000000e3dfb : cmp rax, -0xfff ; jae 0xe3e0c ; ret
0x00000000000e3e2b : cmp rax, -0xfff ; jae 0xe3e3c ; ret
0x00000000000e3e5e : cmp rax, -0xfff ; jae 0xe3e6f ; ret
0x00000000000e3e8e : cmp rax, -0xfff ; jae 0xe3e9f ; ret
0x00000000000e3ebe : cmp rax, -0xfff ; jae 0xe3ecf ; ret
0x00000000000e3efb : cmp rax, -0xfff ; jae 0xe3f47 ; ret
0x00000000000e3f5b : cmp rax, -0xfff ; jae 0xe3f6c ; ret
0x00000000000e3f9b : cmp rax, -0xfff ; jae 0xe3fe7 ; ret
0x00000000000e3ffb : cmp rax, -0xfff ; jae 0xe400c ; ret
0x00000000000e402b : cmp rax, -0xfff ; jae 0xe403c ; ret
0x00000000000e406b : cmp rax, -0xfff ; jae 0xe40b7 ; ret
0x00000000000e40cb : cmp rax, -0xfff ; jae 0xe40dc ; ret
0x00000000000e40fe : cmp rax, -0xfff ; jae 0xe410f ; ret
0x00000000000e412b : cmp rax, -0xfff ; jae 0xe413c ; ret
0x00000000000e415b : cmp rax, -0xfff ; jae 0xe416c ; ret
0x00000000000e418e : cmp rax, -0xfff ; jae 0xe419f ; ret
0x00000000000e41c8 : cmp rax, -0xfff ; jae 0xe4211 ; ret
0x00000000000e422b : cmp rax, -0xfff ; jae 0xe423c ; ret
0x00000000000e425e : cmp rax, -0xfff ; jae 0xe426f ; ret
0x00000000000e428e : cmp rax, -0xfff ; jae 0xe429f ; ret
0x00000000000e42e8 : cmp rax, -0xfff ; jae 0xe4331 ; ret
0x00000000000e434b : cmp rax, -0xfff ; jae 0xe435c ; ret
0x00000000000e4388 : cmp rax, -0xfff ; jae 0xe43d1 ; ret
0x00000000000e43eb : cmp rax, -0xfff ; jae 0xe43fc ; ret
0x00000000000e441b : cmp rax, -0xfff ; jae 0xe442c ; ret
0x00000000000e444e : cmp rax, -0xfff ; jae 0xe445f ; ret
0x00000000000e447b : cmp rax, -0xfff ; jae 0xe448c ; ret
0x00000000000e457b : cmp rax, -0xfff ; jae 0xe45c7 ; ret
0x00000000000e45e8 : cmp rax, -0xfff ; jae 0xe4631 ; ret
0x00000000000e4718 : cmp rax, -0xfff ; jae 0xe4761 ; ret
0x00000000000e478b : cmp rax, -0xfff ; jae 0xe47d7 ; ret
0x00000000000e47ee : cmp rax, -0xfff ; jae 0xe47ff ; ret
0x00000000000e481b : cmp rax, -0xfff ; jae 0xe482c ; ret
0x00000000000e484b : cmp rax, -0xfff ; jae 0xe485c ; ret
0x00000000000e487e : cmp rax, -0xfff ; jae 0xe488f ; ret
0x00000000000e4dfb : cmp rax, -0xfff ; jae 0xe4e47 ; ret
0x00000000000e4e6b : cmp rax, -0xfff ; jae 0xe4eb7 ; ret
0x00000000000e4ecb : cmp rax, -0xfff ; jae 0xe4edc ; ret
0x00000000000e4efb : cmp rax, -0xfff ; jae 0xe4f0c ; ret
0x00000000000e4f2b : cmp rax, -0xfff ; jae 0xe4f3c ; ret
0x00000000000e4f5b : cmp rax, -0xfff ; jae 0xe4f6c ; ret
0x00000000000e4f8e : cmp rax, -0xfff ; jae 0xe4f9f ; ret
0x00000000000e4fbe : cmp rax, -0xfff ; jae 0xe4fcf ; ret
0x00000000000e4feb : cmp rax, -0xfff ; jae 0xe4ffc ; ret
0x00000000000e501b : cmp rax, -0xfff ; jae 0xe502c ; ret
0x00000000000e504b : cmp rax, -0xfff ; jae 0xe505c ; ret
0x00000000000e507b : cmp rax, -0xfff ; jae 0xe508c ; ret
0x00000000000fc210 : cmp rax, -3 ; jbe 0xfc227 ; pop rbx ; ret
0x0000000000073821 : cmp rax, qword ptr [rdx + 0x4c] ; cmovne eax, ecx ; ret
0x00000000000445fa : cmp rax, rbx ; jne 0x445f6 ; pop rbx ; ret
0x000000000007aadc : cmp rax, rcx ; jae 0x7ab08 ; movzx eax, byte ptr [rax] ; ret
0x0000000000111488 : cmp rax, rdx ; je 0x1114a1 ; add rsp, 8 ; ret
0x000000000004549c : cmp rax, rdx ; jne 0x45497 ; xor eax, eax ; ret
0x000000000004557c : cmp rax, rdx ; jne 0x45577 ; xor eax, eax ; ret
0x000000000011e578 : cmp rbx, rbp ; jae 0x11e597 ; nop dword ptr [rax] ; call qword ptr [rbx]
0x000000000008749f : cmp rcx, rdx ; jne 0x8749e ; ret
0x0000000000079e69 : cmp rcx, rsi ; jne 0x79e68 ; lea eax, [rdx + rdi] ; ret
0x000000000011e02b : cmp rdi, 1 ; ja 0x11e03e ; ret
0x00000000000897db : cmp rdi, r8 ; jne 0x897d9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010ada1 : cmp rdi, rcx ; jne 0x10ad96 ; ret
0x00000000000e33a4 : cmp rdi, rdx ; jne 0xe33a1 ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000d6247 : cmp rdi, rsi ; ja 0xd61e6 ; pop rbx ; ret
0x00000000000b28a3 : cmp rdx, -1 ; cmovne rax, rdx ; ret
0x00000000001001a4 : cmp rdx, r8 ; jne 0x10018f ; ret
0x00000000000f0ad9 : cmp rdx, rax ; jne 0xf0abe ; ret
0x00000000000a49f3 : cmp rdx, rcx ; jb 0xa49c6 ; ret
0x00000000000e4d77 : cmp rdx, rcx ; jb 0xe4d86 ; ret
0x00000000001147b5 : cmp rdx, rcx ; je 0x1147c6 ; ret
0x000000000008927b : cmp rdx, rcx ; jne 0x89266 ; ret
0x000000000008927a : cmp rdx, rcx ; jne 0x89267 ; ret
0x000000000008faf0 : cmp rdx, rcx ; jne 0x8faee ; ret
0x00000000000b46be : cmp rdx, rcx ; jne 0xb46f6 ; ret
0x00000000000effad : cmp rdx, rdi ; setae al ; ret
0x0000000000071699 : cmp rsi, rcx ; jb 0x71698 ; lea eax, [rdx + rdi] ; ret
0x000000000008e3b3 : cmp rsi, rcx ; jne 0x8e3a7 ; xor eax, eax ; ret
0x00000000000dc537 : cmp rsi, rdx ; ja 0xdc546 ; ret
0x0000000000130b10 : cmp rsi, rsi ; call rax
0x0000000000131c45 : cmpsb byte ptr [rsi], byte ptr [rdi] ; clc ; jmp qword ptr [rax]
0x0000000000131c41 : cmpsb byte ptr [rsi], byte ptr [rdi] ; clc ; push rax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; clc ; jmp qword ptr [rax]
0x00000000000c453f : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rbp + 0x634c0143], cl ; ret
0x0000000000144a49 : cmpsb byte ptr [rsi], byte ptr [rdi] ; out dx, al ; call rsp
0x0000000000104559 : cmpsb byte ptr [rsi], byte ptr [rdi] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000809a6 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f0d0d : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000013ebbd : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; in al, 0xd1 ; call rsp
0x00000000000796d4 : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000000387a : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x49ec
0x0000000000003879 : cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x0000000000039207 : cqo ; idiv rsi ; ret
0x0000000000045a29 : cqo ; pop r14 ; idiv r9 ; pop r15 ; ret
0x0000000000026998 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000af122 : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; loop 0xaf11a ; ret 0x272
0x000000000010f237 : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007764a : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000014ca1d : cwde ; add byte ptr [rax], al ; loopne 0x14ca3a ; std ; jmp qword ptr [rcx]
0x000000000014ca8d : cwde ; add byte ptr [rax], al ; mov al, 0x61 ; call qword ptr [rdi]
0x00000000000584ed : cwde ; add rax, rdx ; jmp rax
0x00000000000af76b : cwde ; call r14
0x000000000014f6a8 : cwde ; cmp ch, dh ; call qword ptr [rdx]
0x000000000014bb48 : cwde ; hlt ; call qword ptr [rsi]
0x000000000012ba15 : cwde ; int1 ; call qword ptr [rax]
0x000000000013069c : cwde ; mov al, 0xf3 ; lcall ptr [rdx + rsi*4 - 0xd] ; jmp qword ptr [rax]
0x00000000000db9bf : cwde ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x0000000000144958 : cwde ; movsd dword ptr [rdi], dword ptr [rsi] ; out dx, al ; call qword ptr [rdi]
0x0000000000096584 : cwde ; nop dword ptr [rax] ; ret
0x0000000000146818 : cwde ; out dx, eax ; jmp qword ptr [rbx]
0x0000000000003a7d : cwde ; ret
0x000000000015a6b8 : cwde ; sar ecx, 1 ; jmp rax
0x0000000000100a02 : cwde ; shr rax, 4 ; ret
0x00000000001595e9 : cwde ; stc ; jmp qword ptr [rbx]
0x000000000014bd18 : cwde ; std ; call rsi
0x000000000015f278 : cwde ; sti ; call rdx
0x0000000000153d78 : cwde ; sub edi, eax ; jmp rsi
0x000000000004834d : dec byte ptr [r15] ; xchg eax, esp ; ret 0xd284
0x000000000008222f : dec byte ptr [rax + 0x39] ; ret 0x2b74
0x000000000007d2fd : dec byte ptr [rax - 0x73] ; ret
0x0000000000082404 : dec byte ptr [rax - 0x77] ; and byte ptr [r8 + 0x31], r9b ; ret 0x93be
0x0000000000082549 : dec byte ptr [rax - 0x77] ; and byte ptr [rax + 0x31], cl ; ret 0x93be
0x00000000000475b7 : dec byte ptr [rax - 0x77] ; clc ; cmovae rax, rsi ; ret
0x00000000000d20e5 : dec byte ptr [rax - 0x77] ; fucompi st(0) ; ret 0xfb37
0x000000000003e152 : dec byte ptr [rax - 0x77] ; ret
0x0000000000046deb : dec byte ptr [rax - 0x77] ; ret 0x8948
0x00000000000e527e : dec byte ptr [rcx + rcx*4 - 0x31] ; mov eax, 0x14 ; syscall
0x0000000000079792 : dec byte ptr [rcx - 0x3b7cb7fd] ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000004834e : dec byte ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x00000000000fc20e : dec dword ptr [r8 - 0x7d] ; clc ; std ; jbe 0xfc229 ; pop rbx ; ret
0x0000000000044035 : dec dword ptr [r9 + 0x39] ; ret 0x1477
0x0000000000093593 : dec dword ptr [r9 - 0x76b706b9] ; clc ; ret
0x000000000003f621 : dec dword ptr [rax + 0x21] ; ret 0x948
0x000000000003c4fc : dec dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000041a9b : dec dword ptr [rax + 0x29] ; ret 0x8b48
0x00000000000b6d48 : dec dword ptr [rax + 0x29] ; ret 0x8d48
0x000000000002772c : dec dword ptr [rax + 0x39] ; ret
0x00000000000a4819 : dec dword ptr [rax + 0x39] ; ret 0x840f
0x00000000000fe2d7 : dec dword ptr [rax + 0x39] ; ret 0x870f
0x000000000009eeb6 : dec dword ptr [rax + 0x39] ; ret 0x8d4c
0x00000000000b2410 : dec dword ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x3948
0x00000000000b244a : dec dword ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x4589
0x00000000000b0f70 : dec dword ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8941
0x00000000000e8b5c : dec dword ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8948
0x00000000000e8a5a : dec dword ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8b48
0x00000000000e8935 : dec dword ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x9848
0x0000000000048466 : dec dword ptr [rax + 0x39] ; ror dword ptr [rdi], -0x7b ; ret
0x000000000011801a : dec dword ptr [rax + 0x63] ; clc ; mov eax, 3 ; syscall
0x0000000000062142 : dec dword ptr [rax + 0x63] ; ret
0x000000000003c378 : dec dword ptr [rax + 0x63] ; ret 0x2e9
0x000000000003ee6a : dec dword ptr [rax + 0x63] ; ret 0xa0e9
0x000000000004161c : dec dword ptr [rax + 0x63] ; ret 0xf6e9
0x00000000000e0038 : dec dword ptr [rax + 0x63] ; std ; mov eax, 3 ; syscall
0x00000000000d8e21 : dec dword ptr [rax + 0x63] ; sti ; mov al, 3 ; syscall
0x0000000000101678 : dec dword ptr [rax + 0x63] ; sti ; mov eax, 3 ; syscall
0x0000000000087809 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x00000000000898d8 : dec dword ptr [rax + 0xf] ; mov esp, 0x440f48c7 ; ret 0xc083
0x000000000003959f : dec dword ptr [rax + 0xf] ; ret
0x00000000000b28a6 : dec dword ptr [rax + 0xf] ; ret 0x48c3
0x000000000002e71d : dec dword ptr [rax + 0xf] ; ret 0x66c3
0x000000000003a77e : dec dword ptr [rax + 0xf] ; ret 0x8348
0x000000000007762d : dec dword ptr [rax + 0xf] ; ret 0x8948
0x00000000000d8fe6 : dec dword ptr [rax + 0xf] ; ret 0x894c
0x00000000000776fc : dec dword ptr [rax + 0xf] ; ret 0x8d48
0x000000000011b69f : dec dword ptr [rax + 0xf] ; ret 0x8d4c
0x0000000000053d26 : dec dword ptr [rax + 0xf] ; ret 0xbd83
0x00000000000b45b6 : dec dword ptr [rax + 0xf] ; ret 0xfc3
0x000000000005e2e4 : dec dword ptr [rax + 1] ; ret
0x00000000001117cd : dec dword ptr [rax - 0x2d] ; ret 0x2148
0x0000000000036ac7 : dec dword ptr [rax - 0x2d] ; ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x000000000008ff25 : dec dword ptr [rax - 0x39] ; ret
0x00000000000f5eaa : dec dword ptr [rax - 0x39] ; ret 0xffff
0x0000000000028c3c : dec dword ptr [rax - 0x73] ; add qword ptr [r9], r14 ; ror byte ptr [rax - 0x7d], cl ; ret 0x4901
0x000000000002886d : dec dword ptr [rax - 0x73] ; add qword ptr [rcx], rsi ; ror byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000049d1c : dec dword ptr [rax - 0x75] ; add byte ptr [rcx - 0x77], cl ; add bl, ch ; ret
0x000000000008053d : dec dword ptr [rax - 0x75] ; je 0x8056f ; sub byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x0000000000022dd9 : dec dword ptr [rax - 0x75] ; js 0x22dff ; mov qword ptr [rbp - 0x58], rax ; call rcx
0x000000000008021a : dec dword ptr [rax - 0x75] ; push rsp ; and al, 0x48 ; call rax
0x0000000000082683 : dec dword ptr [rax - 0x77] ; add byte ptr [r11 + 0x5d], r11b ; pop r12 ; ret
0x00000000000893f8 : dec dword ptr [rax - 0x77] ; clc ; ret
0x00000000000dc5ee : dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000082c9c : dec dword ptr [rax - 0x77] ; fimul dword ptr [rcx + rcx*4 - 0x12] ; call rax
0x0000000000114980 : dec dword ptr [rax - 0x77] ; fimul word ptr [rax - 0x77] ; out dx, eax ; call rcx
0x00000000000ec6f6 : dec dword ptr [rax - 0x77] ; fisttp word ptr [rax - 0x7d] ; ret
0x00000000000211db : dec dword ptr [rax - 0x77] ; fmul dword ptr [rax - 1] ; ret
0x00000000000d3196 : dec dword ptr [rax - 0x77] ; out dx, eax ; call 0x1f476
0x000000000002025f : dec dword ptr [rax - 0x77] ; ret
0x00000000000f0e13 : dec dword ptr [rax - 0x77] ; ret 0x1776
0x00000000000b6a1f : dec dword ptr [rax - 0x77] ; ret 0x19eb
0x00000000000dc525 : dec dword ptr [rax - 0x77] ; ret 0x2977
0x0000000000036ea8 : dec dword ptr [rax - 0x77] ; ret 0x4c77
0x0000000000036d96 : dec dword ptr [rax - 0x77] ; ret 0x4e77
0x0000000000065f66 : dec dword ptr [rax - 0x77] ; ret 0x61e8
0x00000000000b2895 : dec dword ptr [rax - 0x77] ; ret 0x676
0x00000000000ff9fa : dec dword ptr [rax - 0x77] ; ret 0x72e9
0x00000000000dbd72 : dec dword ptr [rax - 0x77] ; ret 0x7577
0x000000000007e15c : dec dword ptr [rax - 0x77] ; ret 0x840f
0x0000000000036073 : dec dword ptr [rax - 0x77] ; ret 0x870f
0x00000000000481b4 : dec dword ptr [rax - 0x77] ; ret 0x894c
0x000000000004bbc6 : dec dword ptr [rax - 0x77] ; ret 0x8d48
0x00000000000b0138 : dec dword ptr [rax - 0x77] ; ret 0xb9
0x00000000000d9572 : dec dword ptr [rax - 0x77] ; ret 0xbdeb
0x00000000000a5ccf : dec dword ptr [rax - 0x77] ; ret 0xc0e9
0x0000000000100c72 : dec dword ptr [rax - 0x77] ; ret 0xc931
0x0000000000064bfa : dec dword ptr [rax - 0x77] ; ret 0xcde8
0x0000000000069af7 : dec dword ptr [rax - 0x77] ; ret 0xd4e9
0x00000000000dc427 : dec dword ptr [rax - 0x77] ; ret 0xd77
0x000000000006d564 : dec dword ptr [rax - 0x77] ; ret 0xf40
0x0000000000021235 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret
0x0000000000081ba9 : dec dword ptr [rax - 0x7b] ; xlatb ; je 0x81bc0 ; pop rbx ; ret
0x000000000003f7b7 : dec dword ptr [rax - 0x7d] ; call 0xffffffffc20540c7
0x00000000000fc20f : dec dword ptr [rax - 0x7d] ; clc ; std ; jbe 0xfc228 ; pop rbx ; ret
0x000000000002dff9 : dec dword ptr [rax - 0x7d] ; ret
0x00000000000289b6 : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000bc516 : dec dword ptr [rax - 0x7d] ; ret 0x4804
0x000000000010fd82 : dec dword ptr [rax - 0x7d] ; ret 0x4807
0x0000000000020dac : dec dword ptr [rax - 0x7d] ; ret 0x4808
0x000000000007842c : dec dword ptr [rax - 0x7d] ; ret 0x8301
0x00000000000b908f : dec dword ptr [rax - 0x7d] ; ret 0x8804
0x00000000000c1eaa : dec dword ptr [rax - 0x7d] ; ret 0x8d01
0x0000000000064588 : dec dword ptr [rax - 0x7d] ; ret 0xe908
0x00000000000bdb99 : dec dword ptr [rax - 0x7d] ; ret 0xeb01
0x000000000006b209 : dec dword ptr [rax - 0x7d] ; ret 0xeb02
0x000000000001fbb0 : dec dword ptr [rax - 0x7d] ; ret 0xeb04
0x000000000005b713 : dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x000000000002c617 : dec dword ptr [rax - 0x7d] ; rol byte ptr [rcx], 0x83 ; ret 0x8301
0x0000000000063543 : dec dword ptr [rbp + 0xf] ; ror byte ptr [r13 + 1], 1 ; ret 0x8d4a
0x0000000000131883 : dec dword ptr [rbp - 0x720007c5] ; cmp edi, eax ; call rdi
0x00000000001318b3 : dec dword ptr [rbp - 0x720007c5] ; cmp edi, eax ; call rsi
0x0000000000047529 : dec dword ptr [rbp - 0x77] ; ret
0x0000000000140b3b : dec dword ptr [rbx + rbp*2 - 0x2b3bffff] ; stc ; call rsp
0x000000000012fc47 : dec dword ptr [rbx + rbx*4 - 0x6473000e] ; call qword ptr [rdx]
0x00000000000b9197 : dec dword ptr [rbx + rcx*4 + 0x75] ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000005f693 : dec dword ptr [rbx - 0x16fd76fa] ; ret 0xfffb
0x0000000000131707 : dec dword ptr [rbx] ; cmp al, 0xf8 ; lcall ptr [rcx] ; cmp al, 0xf8 ; jmp qword ptr [rdi]
0x000000000012fb33 : dec dword ptr [rbx] ; loop 0x12fb3e ; ljmp ptr [rdx - 1] ; call qword ptr [rsi]
0x000000000008804c : dec dword ptr [rcx + 0x29] ; ret 0xf748
0x0000000000044036 : dec dword ptr [rcx + 0x39] ; ret 0x1477
0x000000000005353c : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x0000000000080ad8 : dec dword ptr [rcx + 0x63] ; test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x00000000000cc28d : dec dword ptr [rcx + 0xf] ; int1 ; mov eax, ecx ; syscall
0x00000000000933ac : dec dword ptr [rcx + 1] ; ret
0x00000000000b3d34 : dec dword ptr [rcx + rcx*4 - 0x11] ; call 0xeff76
0x000000000002d3b9 : dec dword ptr [rcx + rcx*4 - 0x11] ; mov ax, 3 ; syscall
0x000000000001ff48 : dec dword ptr [rcx + rcx*4 - 0x19] ; call qword ptr [r14]
0x0000000000114145 : dec dword ptr [rcx + rcx*4 - 0x1a] ; mov rdi, r14 ; xor eax, eax ; call rcx
0x00000000000e542b : dec dword ptr [rcx + rcx*4 - 0x31] ; mov eax, 3 ; syscall
0x000000000007b6a1 : dec dword ptr [rcx + rcx*4 - 0x40] ; nop dword ptr [rax] ; ret
0x000000000005d3b4 : dec dword ptr [rcx + rcx*4 - 1] ; call 0x79666
0x00000000000ee452 : dec dword ptr [rcx + rcx*4 - 1] ; call 0xea756
0x00000000001430bb : dec dword ptr [rcx + rsi*8 - 0x8cbffff] ; std ; jmp rsp
0x000000000004e713 : dec dword ptr [rcx - 0x39] ; ret
0x00000000001158f0 : dec dword ptr [rcx - 0x39] ; ret 0xffff
0x000000000011720b : dec dword ptr [rcx - 0x73] ; add dword ptr [rbp + r9*4 + 0x35], r9d ; call rsi
0x00000000000d0513 : dec dword ptr [rcx - 0x75] ; push rsi ; sub byte ptr [rax - 0x7d], cl ; ret
0x0000000000093594 : dec dword ptr [rcx - 0x76b706b9] ; clc ; ret
0x0000000000022c87 : dec dword ptr [rcx - 0x77] ; fmul qword ptr [rax - 0x77] ; ret
0x0000000000092d34 : dec dword ptr [rcx - 0x77] ; ret
0x00000000000a0e21 : dec dword ptr [rcx - 0x77] ; ret 0x66e9
0x000000000005a689 : dec dword ptr [rcx - 0x77] ; ret 0x6ae9
0x00000000000a0c2c : dec dword ptr [rcx - 0x77] ; ret 0x7c74
0x0000000000059dda : dec dword ptr [rcx - 0x77] ; ret 0x8b48
0x0000000000053a54 : dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x00000000000686fc : dec dword ptr [rcx - 0x7cb769fc] ; ret 0x4801
0x000000000003cb4e : dec dword ptr [rcx - 0x7d] ; call 0xffffffffc23d135e
0x00000000000f1cd1 : dec dword ptr [rcx - 0x7d] ; ret
0x00000000000278e3 : dec dword ptr [rcx - 0x7d] ; ret 0x4801
0x0000000000040cc9 : dec dword ptr [rcx - 0x7d] ; ret 0x4901
0x0000000000085b88 : dec dword ptr [rcx - 0x7d] ; ret 0x8401
0x000000000006daf3 : dec dword ptr [rcx - 0x876b312] ; call 0x79da8
0x00000000000e3729 : dec dword ptr [rcx] ; clc ; ret
0x00000000000e679e : dec dword ptr [rcx] ; setbe al ; ret
0x0000000000141d7b : dec dword ptr [rdi + rax*8 - 0x6fbbffff] ; sti ; jmp rsp
0x000000000012f863 : dec dword ptr [rdi] ; idiv edi ; jmp qword ptr [rdx]
0x00000000000a3ea1 : dec dword ptr [rdi] ; mov bh, 0x7d ; ret 0xb70f
0x000000000002edda : dec dword ptr [rdi] ; mov bh, 4 ; js 0x2ed6b ; loopne 0x2edeb ; ret
0x00000000000e70cd : dec dword ptr [rdi] ; mov bh, 4 ; js 0xe705e ; loopne 0xe70de ; ret
0x0000000000043b3a : dec dword ptr [rdi] ; mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000de38d : dec dword ptr [rdi] ; mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000006b44e : dec dword ptr [rdi] ; mov dh, 0x53 ; or al, 0xf6 ; ret 0x7404
0x000000000009f631 : dec dword ptr [rdi] ; mov dh, 0xc2 ; je 0x9f647 ; ret
0x000000000002513f : dec dword ptr [rdi] ; ret 0x66c3
0x0000000000043536 : dec dword ptr [rdi] ; ret 0x8341
0x000000000003ab76 : dec dword ptr [rdi] ; ret 0x8348
0x00000000000ce729 : dec dword ptr [rdi] ; ret 0x8588
0x00000000000276cd : dec dword ptr [rdi] ; test byte ptr [rax - 0x77000000], dh ; ret 0xe281
0x00000000000b8695 : dec dword ptr [rdi] ; test byte ptr [rbp - 0x76fffffd], ah ; ret 0x8349
0x000000000005f7ec : dec dword ptr [rdi] ; test byte ptr [rdx], al ; ret 0xffff
0x00000000000572bf : dec dword ptr [rdi] ; test byte ptr [rsi], cl ; ret
0x000000000005c6f3 : dec dword ptr [rdi] ; test dword ptr [rax], ebx ; ret 0xffff
0x000000000005c560 : dec dword ptr [rdi] ; xchg dword ptr [rbp - 0x76ffffeb], eax ; ret 0x348
0x000000000005d156 : dec dword ptr [rdi] ; xchg dword ptr [rbx - 0x77000000], edx ; ret 0x348
0x000000000005cbb9 : dec dword ptr [rdi] ; xchg dword ptr [rdi - 0x77000000], ebp ; ret 0x348
0x0000000000090e94 : dec dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000000000cc490 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0x460f
0x0000000000044ac7 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xc031
0x00000000000a3197 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd138
0x00000000000cfd6b : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x840f
0x00000000000b6367 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x8548
0x000000000007d081 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x96e8
0x000000000007490f : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x000000000004b476 : dec dword ptr [rdi] ; xchg eax, esp ; shr eax, 0x11 ; ret
0x0000000000142d0b : dec dword ptr [rsi + rbp - 0x624bfffe] ; std ; call rsp
0x00000000001422c3 : dec dword ptr [rsi + rbp*8 - 0x7c6bffff] ; cld ; jmp rsp
0x00000000001316af : dec eax ; cmp al, bh ; call rsi
0x0000000000142e73 : dec esp ; add al, byte ptr ss:[rax] ; hlt ; ret
0x000000000013f9e3 : dec esp ; add byte ptr [rcx], al ; add byte ptr [rsp + rcx*2 - 0xb], al ; jmp rsp
0x000000000013df63 : dec esp ; add byte ptr fs:[rax], al ; hlt ; fsubp st(6) ; jmp rsp
0x0000000000141013 : dec esp ; add dword ptr [rcx], 0xfa370400 ; jmp rsp
0x000000000013f91b : dec esp ; cli ; add byte ptr [rax], al ; xchg eax, esp ; sub ebp, esi ; jmp rsp
0x0000000000142f8b : dec esp ; cmp al, 2 ; add byte ptr [rsi], ah ; std ; jmp rsp
0x000000000013f3fb : dec esp ; fild dword ptr [rax] ; add byte ptr [rsp + rcx*8 - 0xd], ah ; jmp rsp
0x000000000013e0d3 : dec esp ; imul eax, dword ptr [rax], 0 ; push rsp ; adc edi, ebp ; jmp rsp
0x000000000013e42b : dec esp ; jnp 0x13e437 ; add ah, dl ; mov ebp, edi ; jmp rsp
0x0000000000140e53 : dec esp ; js 0x140e60 ; add ah, dh ; or bh, dl ; jmp rsp
0x0000000000141913 : dec esp ; lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; and al, 0x26 ; sti ; jmp rsp
0x000000000013f063 : dec esp ; mov dword ptr [rax], 0xf3774400 ; jmp rsp
0x000000000014124b : dec esp ; mov eax, dword ptr [rcx] ; add ah, ah ; pop rsp ; cli ; jmp rsp
0x000000000014134b : dec esp ; mov es, word ptr [rcx] ; add ah, ah ; movsxd rdi, edx ; jmp rsp
0x000000000013eb3b : dec esp ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; je 0x13eb0b ; jmp rsp
0x000000000013eb3a : dec esp ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; je 0x13eb0c ; jmp rsp
0x000000000013fb7b : dec esp ; or byte ptr [rcx], al ; add byte ptr [rsp + rcx*4 - 0xb], al ; jmp rsp
0x000000000013fb9b : dec esp ; or dword ptr [rcx], eax ; add byte ptr [rcx + rdx*4], al ; cmc ; jmp rsp
0x000000000013e7fb : dec esp ; pop qword ptr [rax] ; add byte ptr [rdi + rax*2 - 0x10], dl ; jmp rsp
0x00000000001407f3 : dec esp ; pop rbx ; add dword ptr [rax], eax ; and al, 0x7b ; stc ; jmp rsp
0x00000000001406bb : dec esp ; push rbx ; add dword ptr [rax], eax ; hlt ; out 0xf8, eax ; jmp rsp
0x0000000000140633 : dec esp ; push rcx ; add dword ptr [rax], eax ; jrcxz 0x14063b ; jmp rsp
0x0000000000141ce3 : dec esp ; ret 1
0x000000000013f10b : dec esp ; retf ; add byte ptr [rax], al ; hlt ; xchg bl, dh ; jmp rsp
0x0000000000141cb3 : dec esp ; rol dword ptr [rcx], 0 ; and al, 0x6e ; sti ; jmp rsp
0x000000000013fdd3 : dec esp ; sbb byte ptr [rcx], al ; add byte ptr [rdi + rcx*2 - 0xa], ah ; jmp rsp
0x0000000000142993 : dec esp ; sbb dword ptr [rdx], eax ; add byte ptr [rsp + rax*2], al ; std ; jmp rsp
0x000000000013f86b : dec esp ; test byte ptr [rax], 0 ; and al, 0xbe ; hlt ; jmp rsp
0x000000000013e5e3 : dec esp ; test byte ptr [rax], al ; add ah, ah ; mov ah, 0xef ; jmp rsp
0x0000000000141113 : dec esp ; xchg dword ptr [rcx], eax ; add byte ptr [rsp + rdx*2 - 6], dl ; jmp rsp
0x0000000000085b87 : dec qword ptr [r9 - 0x7d] ; ret 0x8401
0x0000000000035ea7 : div byte ptr [rbp + 0x36] ; mov eax, 0xba ; syscall
0x0000000000090813 : div byte ptr [rbp + 0xe] ; jmp 0x907de
0x00000000000858b6 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x00000000000f004d : div byte ptr [rbp + 8] ; ret
0x0000000000093951 : div byte ptr [rbp - 0x14] ; mov qword ptr [rdx], rcx ; ret
0x000000000002bb61 : div byte ptr [rcx + rdi*4 + 0x5b] ; ret
0x00000000000da509 : div byte ptr [rcx] ; shr al, 0xff ; ret 0xffff
0x00000000000d6249 : div dword ptr [rdi - 0x6c] ; pop rbx ; ret
0x000000000006d535 : div ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000076a2c : div ebp ; pop rbp ; pop r12 ; ret
0x0000000000076a70 : div ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004d135 : div ecx ; add r8d, eax ; mov eax, r8d ; ret
0x0000000000094703 : div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000006d534 : div rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000076a2b : div rbp ; pop rbp ; pop r12 ; ret
0x0000000000076a6f : div rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000001f5e4 : enter -0x1401, -0x3a ; ret
0x0000000000093865 : enter -0x178c, -0xd ; ret
0x0000000000002670 : enter -0x1ee6, -0x4c ; hlt ; out 0xdf, eax ; syscall
0x0000000000047610 : enter -0x3eb7, -8 ; add cl, byte ptr [rbp + 0x39] ; ret
0x00000000000dfec5 : enter -0x74b4, 0x4c ; and al, 8 ; syscall
0x00000000000fea32 : enter -0x763d, 0x3a ; xor eax, eax ; ret
0x00000000000e34f9 : enter -0x76b4, 0x4c ; and al, 0xd0 ; syscall
0x000000000004cba2 : enter -6, -1 ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000004bd65 : enter -6, -1 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x000000000013f085 : enter 0, -0x1c ; jns 0x13f084 ; jmp rsp
0x000000000010be5b : enter 0, 0 ; call rax
0x000000000010be11 : enter 0, 0 ; call rcx
0x000000000007aade : enter 0x1f73, 0xf ; mov dh, 0 ; ret
0x00000000000a0740 : enter 0x21eb, -0x7d ; call 0xffffffffc38d4852
0x0000000000035728 : enter 0x280f, -0x3f ; ret
0x000000000010f6a2 : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000850bd : enter 0x31c3, -0x40 ; ret
0x000000000010ece3 : enter 0x4189, 0x48 ; mov eax, 1 ; ret
0x000000000010ec10 : enter 0x4189, 0x54 ; mov eax, 1 ; ret
0x000000000010ed10 : enter 0x4189, 0x58 ; mov eax, 1 ; ret
0x000000000001fbaf : enter 0x48ff, -0x7d ; ret 0xeb04
0x000000000002f58a : enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000033bce : enter 0x5d5b, 0x41 ; pop rsp ; ret
0x00000000000b29e9 : enter 0x6348, 0x7c ; and al, 8 ; syscall
0x00000000000f0e09 : enter 0x6349, -8 ; syscall
0x000000000012ee5c : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000000b5ad1 : enter 0xf04, -0x4a ; push rdi ; add ebx, ebp ; mov cl, 0xf3 ; ret
0x0000000000083b09 : enter 0xf66, -0x15 ; ret
0x000000000015fa25 : enter 1, -0x18 ; xor ebx, edi ; call rdx
0x000000000015fa75 : enter 1, 0x78 ; xor al, 0xfb ; jmp rsp
0x0000000000133f24 : fadd dword ptr [rax - 0x7f0f0003] ; std ; call qword ptr [rax]
0x000000000013f365 : fadd dword ptr [rax] ; add byte ptr [rax + rax*8], ah ; call rsp
0x000000000006a210 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000f23ab : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000004329e : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000e01b8 : fadd dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000f11a4 : fadd dword ptr [rax] ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000b9a25 : fadd dword ptr [rbp - 0x77] ; ret
0x00000000001174f1 : fadd dword ptr [rbx + 0x14807e0] ; ret 0x3b48
0x00000000000e8122 : fadd dword ptr [rcx + 0x5d] ; ret
0x0000000000097c84 : fadd dword ptr [rcx + 0x5f] ; ret
0x00000000000b9bfd : fadd dword ptr [rcx - 0x77] ; ret
0x00000000000824e0 : fadd qword ptr [rax] ; add byte ptr [rax], al ; call rax
0x00000000000e4fb8 : fadd qword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000150e8d : fadd qword ptr [rax] ; add byte ptr [rax], dl ; sub dh, dh ; jmp qword ptr [rax]
0x0000000000160eed : fadd qword ptr [rcx] ; add al, dl ; jg 0x160ef4 ; jmp qword ptr [rax]
0x00000000000a2cfb : fadd st(1) ; call 0xffffffff89cc5626
0x00000000000e2ef0 : fadd st(6) ; add al, byte ptr [rax] ; pop rbx ; ret
0x000000000011d58d : fbld dword ptr [rsi - 0x70] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000078136 : fbstp dword ptr [rcx] ; imul al ; ret 0x1b
0x0000000000040d60 : fchs ; jmp 0x40790
0x000000000007f3fa : fcmovb st(0), st(3) ; add byte ptr cs:[rax - 0x77], cl ; ret
0x000000000012e498 : fcmovb st(0), st(3) ; ret
0x00000000001448f4 : fcom qword ptr [rsi] ; add byte ptr [rax], al ; js 0x1448a6 ; out dx, al ; call qword ptr [rdi]
0x00000000000b5a91 : fcomi st(3) ; ret
0x000000000014c838 : fcomp dword ptr [rax - 0xd] ; jmp qword ptr [rbx]
0x000000000007e7ea : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002bcef : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000006cd2b : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000330e8 : fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000007fc3a : fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x000000000012f219 : fcomp dword ptr [rdx + 0x21] ; ret
0x0000000000090763 : fcomp qword ptr [rbx + 0x5d] ; mov rax, r12 ; pop r12 ; ret
0x0000000000144df4 : fcomp qword ptr [rbx] ; add byte ptr [rax], al ; test al, 0xdb ; out dx, al ; jmp qword ptr [rbx]
0x000000000012d480 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x00000000000947f0 : fcompi st(3) ; ret
0x0000000000130a65 : fcompi st(5) ; jmp qword ptr [rax]
0x0000000000130a61 : fcompi st(5) ; push qword ptr [rax] ; fcompi st(5) ; jmp qword ptr [rax]
0x0000000000140359 : fcompi st(7) ; call rsp
0x00000000001523c9 : fdecstp ; call qword ptr [rax]
0x00000000000445fc : fdiv dword ptr [rbp - 0xf] ; pop rbx ; ret
0x00000000000e0b80 : fdiv dword ptr [rcx] ; rol byte ptr [rbp + 0x490f48d2], 0xc2 ; jmp 0xe0b95
0x000000000015e1e9 : fdiv st(2), st(0) ; jmp rdi
0x00000000000cc478 : fdiv st(3) ; ret
0x000000000015a971 : fdivp st(1) ; call rcx
0x00000000000c41c2 : fdivr dword ptr [rcx] ; ret
0x000000000014e4d8 : fdivr dword ptr [rdi - 0xc] ; call qword ptr [rsi]
0x00000000000b30c2 : fdivr dword ptr [rsi + 0x81] ; syscall
0x0000000000146df4 : fdivr qword ptr [rbx] ; add byte ptr [rax], al ; ret 0xffef
0x000000000012c7d5 : fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000000647d7 : fdivr st(7) ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x0000000000130a5d : fdivrp st(5) ; call qword ptr [rax]
0x0000000000130a55 : fdivrp st(5) ; call rax
0x0000000000130a59 : fdivrp st(5) ; push rax ; fdivrp st(5) ; call qword ptr [rax]
0x000000000013f3bd : fiadd dword ptr [rax] ; add ah, dl ; leave ; call rsp
0x0000000000098048 : fiadd dword ptr [rbp + 0x450f48c9] ; ret 0x8348
0x000000000003a77c : fiadd dword ptr [rbp + 0x450f48ff] ; ret 0x8348
0x00000000000d6ec2 : fiadd dword ptr [rbx + 0x2e8247c] ; cmove eax, edx ; ret
0x00000000000f0f75 : fiadd dword ptr [rcx - 0xfff05] ; dec dword ptr [rdi] ; ret 0x8348
0x000000000004d121 : fiadd word ptr [rcx + rcx*4 - 0x40] ; ret
0x000000000009b32e : fiadd word ptr [rcx - 0x77] ; ret 0x8d48
0x00000000000e156d : ficomp dword ptr [rbx + 0x5d] ; xor eax, eax ; pop r12 ; ret
0x000000000012f066 : ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, 0xab ; ret
0x000000000003929e : fidiv dword ptr [rdx] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000bba85 : fidiv word ptr [rbp + 8] ; ret
0x000000000011c19d : fidivr dword ptr [rax + 1] ; ret
0x000000000013f3fd : fild dword ptr [rax] ; add byte ptr [rsp + rcx*8 - 0xd], ah ; jmp rsp
0x00000000000abd40 : fild dword ptr [rbp + 0x31] ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000000000d1775 : fild dword ptr [rbp - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret
0x00000000000cefa8 : fild dword ptr [rbx - 0x6af0fd08] ; ret
0x0000000000151135 : fild word ptr [rax] ; add al, bh ; xor dh, dh ; call rax
0x000000000009fd7a : fild word ptr [rcx + 0x29] ; ret
0x0000000000025950 : fimul dword ptr [rax + 0x29] ; ret 0x8348
0x0000000000062f29 : fimul dword ptr [rax + 0x39] ; ret 0x820f
0x000000000003c77f : fimul dword ptr [rax + 0x39] ; ret 0xf48
0x0000000000027599 : fimul dword ptr [rax - 0x7d] ; ret 0x4804
0x0000000000110c78 : fimul dword ptr [rax - 0x7d] ; ret 0x4812
0x00000000000fabd6 : fimul dword ptr [rax - 0x7d] ; ret 0xe801
0x00000000000207c7 : fimul dword ptr [rax - 1] ; ret 0x4eb
0x0000000000089422 : fimul dword ptr [rax - 9] ; ret 0xfff8
0x0000000000082c9f : fimul dword ptr [rcx + rcx*4 - 0x12] ; call rax
0x0000000000082ebb : fimul dword ptr [rcx + rcx*4 - 0x12] ; mov rdi, r12 ; call rax
0x000000000010a8c3 : fimul dword ptr [rcx - 0x77] ; ret
0x0000000000035913 : fimul dword ptr [rcx] ; ret 0xb70f
0x0000000000091718 : fimul dword ptr [rdi] ; test bl, ah ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000000ca113 : fimul word ptr [rax - 0x75] ; or cl, byte ptr [rax - 0x77] ; ret 0x31e8
0x00000000000bbaf3 : fimul word ptr [rax - 0x77] ; out dx, eax ; call r12
0x0000000000114983 : fimul word ptr [rax - 0x77] ; out dx, eax ; call rcx
0x000000000003e1e8 : fimul word ptr [rax - 0x77] ; ret
0x00000000000226fd : fimul word ptr [rax - 0x77] ; ret 0x8348
0x00000000000995f3 : fimul word ptr [rax - 0x77] ; ret 0x8948
0x00000000000737d2 : fimul word ptr [rax - 0x77] ; ret 0x8d4a
0x000000000004f1ec : fimul word ptr [rax - 0x7d] ; ret
0x000000000007faf1 : fimul word ptr [rax - 0x7d] ; ret 0x4810
0x0000000000045712 : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x45768
0x0000000000047002 : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x47058
0x00000000000e1b5f : fimul word ptr [rcx + rcx*4 - 0x11] ; call r14
0x0000000000082da5 : fimul word ptr [rcx + rcx*4 - 0x11] ; call rdx
0x0000000000111c96 : fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x0000000000096ae4 : fimul word ptr [rcx] ; add cl, ch ; ret
0x00000000000f0fb1 : fistp qword ptr [rax + 0xe6] ; mov r10, rcx ; syscall
0x00000000000f0f66 : fistp qword ptr [rax + 0xe6] ; syscall
0x0000000000034978 : fistp qword ptr [rax + 3] ; syscall
0x0000000000082366 : fisttp dword ptr [rax + 0x21] ; ret
0x00000000000584e9 : fisttp dword ptr [rax + 0x63] ; adc al, 0x98 ; add rax, rdx ; jmp rax
0x0000000000047354 : fisttp dword ptr [rax - 0x73] ; add r9b, byte ptr [r9 + rcx*4 - 0x3e] ; jmp 0x47378
0x00000000000d76e4 : fisttp dword ptr [rax - 0x77] ; fsubp st(0) ; ret
0x0000000000046375 : fisttp dword ptr [rax - 0x77] ; ret
0x00000000000a090b : fisttp dword ptr [rax - 0x77] ; ret 0x1e75
0x00000000000e5836 : fisttp dword ptr [rax - 0x77] ; sbb eax, 0x2839e2 ; pop rbx ; ret
0x0000000000059319 : fisttp dword ptr [rcx - 0x77] ; ret 0x8b44
0x000000000004638f : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x0000000000062551 : fisttp dword ptr [rdi] ; lahf ; rol byte ptr [rsi - 0x77], 0x2c ; xor dword ptr [rcx], ebp ; ret
0x000000000003586e : fisttp dword ptr [rdi] ; ret
0x00000000000e5723 : fisttp qword ptr [rax + 0x39] ; ret
0x000000000008831b : fisttp qword ptr [rax - 0x77] ; ret
0x00000000000ba33a : fisttp qword ptr [rax - 0x7d] ; ret
0x000000000008870e : fisttp qword ptr [rax - 1] ; ret 0xff48
0x0000000000111ecf : fisttp qword ptr [rcx + 0xf] ; fisttp qword ptr [rax - 0x7d] ; ret
0x00000000000909d4 : fisttp word ptr [rax + 0x29] ; ret 0x2948
0x0000000000049a4d : fisttp word ptr [rax + 0x39] ; ret
0x000000000011bd64 : fisttp word ptr [rax - 0x75] ; and al, 0x10 ; call rax
0x0000000000108104 : fisttp word ptr [rax - 0x75] ; and al, 8 ; call rcx
0x000000000006ca72 : fisttp word ptr [rax - 0x77] ; and al, 8 ; call 0x78d08
0x00000000000d772d : fisttp word ptr [rax - 0x77] ; ret 0x14c
0x0000000000029dd7 : fisttp word ptr [rax - 0x77] ; ret 0x8948
0x000000000011dc15 : fisttp word ptr [rax - 0x7b] ; push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x00000000000ec6f9 : fisttp word ptr [rax - 0x7d] ; ret
0x000000000004640f : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000090e91 : fisttp word ptr [rbp - 0x7b] ; dec dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000000000945da : fisttp word ptr [rdi] ; mov dh, 0xc1 ; pop rbx ; ret
0x00000000000dbdf5 : fisub dword ptr [rcx + rcx*4 + 0x10] ; or eax, 0xffffffff ; ret
0x00000000000f0ad6 : fisub dword ptr [rdi] ; add byte ptr [rax + 0x39], cl ; ret 0xda75
0x0000000000161fd4 : fld dword ptr [rbx] ; add byte ptr [rax], al ; ret
0x0000000000160b2d : fld dword ptr [rcx] ; add byte ptr [rax], dl ; sti ; call rsp
0x0000000000141ff5 : fld dword ptr [rcx] ; add byte ptr [rbp + rcx - 4], ah ; call rsp
0x00000000000dafdb : fld qword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000a38d5 : fld qword ptr [rbx + 0x14809c5] ; ret
0x000000000012d4c1 : fld qword ptr [rsi + 0x32] ; mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x00000000000359e3 : fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x0000000000035aac : fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x000000000003596d : fld xword ptr [rsp + 8] ; ret
0x0000000000035a79 : fld xword ptr [rsp - 0x18] ; fstp xword ptr [rdi] ; ret
0x0000000000035a59 : fld xword ptr [rsp - 0x18] ; ret
0x0000000000035c2d : fldcw word ptr [rsp - 2] ; ret
0x0000000000088a69 : fldenv dword ptr [rsi + 0xf] ; je 0x88ac6 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000903e7 : fldenv dword ptr [rsi + 0xf] ; je 0x90444 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000088961 : fldenv dword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000000457b4 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x00000000000d6246 : fmul dword ptr [rax + 0x39] ; div dword ptr [rdi - 0x6c] ; pop rbx ; ret
0x00000000000dc605 : fmul dword ptr [rax + 0x39] ; ret
0x00000000000e4c26 : fmul dword ptr [rax + 0x63] ; jl 0xe4c58 ; add al, 0x4c ; movsxd rdx, ecx ; syscall
0x0000000000091c8f : fmul dword ptr [rax + 1] ; ret
0x00000000000b5a22 : fmul dword ptr [rax + 3] ; adc byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000093357 : fmul dword ptr [rax - 0x39] ; ret 0xffff
0x0000000000067255 : fmul dword ptr [rax - 0x7d] ; ret
0x00000000000211de : fmul dword ptr [rax - 1] ; ret
0x00000000000e451d : fmul dword ptr [rbx - 0x2f] ; syscall
0x00000000000abd27 : fmul dword ptr [rbx - 0x7cb7fbc0] ; ret
0x00000000000a9cec : fmul dword ptr [rdi] ; mov dh, 0x40 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000cdf5e : fmul dword ptr [rdi] ; test byte ptr [rax + rcx], dl ; add byte ptr [rax - 0x77], cl ; ret
0x000000000002cedb : fmul dword ptr [rsi + 0x63] ; add al, 0x82 ; add r8, rdx ; jmp r8
0x0000000000022c8a : fmul qword ptr [rax - 0x77] ; ret
0x00000000000af1d3 : fmul qword ptr [rax - 0x7d] ; ret
0x0000000000083e79 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x0000000000089ebf : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000003fdb1 : fmulp st(1) ; ret
0x0000000000030e67 : fnstenv dword ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000024ee : fnstenv dword ptr [rdx + rdx - 0x38975393] ; ret
0x0000000000039376 : fnstenv dword ptr [rdx] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000003453d : fpatan ; ret
0x0000000000035ab0 : fscale ; fstp st(1) ; ret
0x000000000012d1a7 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x000000000011d946 : fstp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f9d72 : fstp qword ptr [rbx + 0x48] ; mov eax, ebp ; pop rbp ; pop r12 ; ret
0x000000000012d520 : fstp st(0) ; ret 0xde5d
0x00000000000e0b7f : fstp st(0) ; xor eax, eax ; test edx, edx ; cmovns rax, rdx ; jmp 0xe0b96
0x0000000000035b90 : fstp st(1) ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000035ab2 : fstp st(1) ; ret
0x00000000000359e5 : fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x0000000000035a7d : fstp xword ptr [rdi] ; ret
0x00000000000361fc : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000000d6ee8 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x0000000000035efa : fsub dword ptr [rcx + rcx*4 + 2] ; or rax, 0xffffffffffffffff ; ret
0x00000000000f0c58 : fsub dword ptr [rdi] ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000153ab8 : fsub dword ptr [rdi] ; clc ; call qword ptr [rsi]
0x000000000011de07 : fsub qword ptr [rax + rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000083c2c : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x0000000000104557 : fsub st(3), st(0) ; cmpsb byte ptr [rsi], byte ptr [rdi] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d76e7 : fsubp st(0) ; ret
0x00000000000359e7 : fsubp st(1) ; ret
0x000000000013df69 : fsubp st(6) ; jmp rsp
0x0000000000146aa8 : fsubr dword ptr [rbp - 0x11] ; jmp rax
0x00000000001460f4 : fsubr qword ptr [rsi] ; add byte ptr [rax], al ; sub byte ptr [rsi], ch ; out dx, eax ; call qword ptr [rsi]
0x00000000000452b5 : fsubr st(1) ; sub eax, 0xf3ffffff ; ret
0x000000000003f920 : fsubr st(2), st(0) ; verw bx ; ret 0x8b44
0x000000000012f1f8 : fucom st(5) ; loop 0x12f251 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x0000000000144df9 : fucomi st(6) ; jmp qword ptr [rbx]
0x0000000000107736 : fucompi st(0) ; ret
0x0000000000071318 : fucompi st(0) ; ret 0x28
0x000000000006cf88 : fucompi st(0) ; ret 0xc9
0x00000000001094a8 : fucompi st(0) ; ret 0xf15f
0x0000000000029918 : fucompi st(0) ; ret 0xf28
0x00000000000e8298 : fucompi st(0) ; ret 0xf912
0x00000000000d20e8 : fucompi st(0) ; ret 0xfb37
0x000000000011942f : fucompi st(0) ; stosd dword ptr [rdi], eax ; ret 0xfff6
0x0000000000141878 : hlt ; adc ebx, edi ; jmp rsp
0x000000000013f7ed : hlt ; add byte ptr [rax], al ; stosd dword ptr [rdi], eax ; hlt ; jmp rsp
0x000000000014610c : hlt ; add byte ptr cs:[rax], al ; xor byte ptr [rsi], ch ; out dx, eax ; jmp qword ptr [rdx]
0x0000000000143178 : hlt ; add esi, edi ; call rsp
0x000000000013f5a0 : hlt ; and esp, esi ; jmp rsp
0x000000000014bb49 : hlt ; call qword ptr [rsi]
0x00000000001308c6 : hlt ; call rax
0x000000000013f582 : hlt ; call rsp
0x0000000000141090 : hlt ; cli ; call rsp
0x000000000009382b : hlt ; cmp ecx, edx ; je 0x93826 ; ret
0x000000000013f86a : hlt ; dec esp ; test byte ptr [rax], 0 ; and al, 0xbe ; hlt ; jmp rsp
0x000000000013df68 : hlt ; fsubp st(6) ; jmp rsp
0x000000000013f7ea : hlt ; inc esp ; hlt ; add byte ptr [rax], al ; stosd dword ptr [rdi], eax ; hlt ; jmp rsp
0x000000000012d5a8 : hlt ; jmp 0x12d57d
0x000000000014de8a : hlt ; jmp qword ptr [rax]
0x000000000014bb11 : hlt ; jmp qword ptr [rbx]
0x000000000014e7ea : hlt ; jmp qword ptr [rcx]
0x000000000014d692 : hlt ; jmp qword ptr [rdi]
0x000000000014dea2 : hlt ; jmp qword ptr [rdx]
0x000000000014dc7a : hlt ; jmp qword ptr [rsi]
0x000000000014e152 : hlt ; jmp rdi
0x000000000013f5a2 : hlt ; jmp rsp
0x00000000000cfabe : hlt ; jne 0xcfab6 ; mov eax, dword ptr [rdx + 8] ; ret
0x00000000000cfabd : hlt ; jne 0xcfab7 ; mov eax, dword ptr [rdx + 8] ; ret
0x00000000001308c2 : hlt ; ljmp ptr [rax] ; push rsp ; call rax
0x000000000013f6f2 : hlt ; ljmp ptr [rdi + rbp*8 + 0x59240000] ; hlt ; jmp rsp
0x000000000014bb0c : hlt ; mov byte ptr [rax], al ; add byte ptr [rax - 0xc], dh ; jmp qword ptr [rbx]
0x00000000000b31d0 : hlt ; mov rdi, rdx ; mov eax, r9d ; syscall
0x0000000000140e58 : hlt ; or bh, dl ; jmp rsp
0x0000000000002674 : hlt ; out 0xdf, eax ; syscall
0x00000000001406c0 : hlt ; out 0xf8, eax ; jmp rsp
0x00000000001430dc : hlt ; pop rcx ; add byte ptr [rax], al ; xor al, 0xf9 ; std ; call rsp
0x000000000013f5e2 : hlt ; push qword ptr [rax + rbp*8 + 0x31240000] ; hlt ; call rsp
0x00000000001421c0 : hlt ; push rsp ; cld ; call rsp
0x00000000000874a3 : hlt ; ret
0x000000000014f50c : hlt ; ret 0
0x0000000000142b40 : hlt ; std ; call rsp
0x000000000012d6e3 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x0000000000003c59 : hlt ; test al, 0x35 ; push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x00000000001423e8 : hlt ; wait ; cld ; call rsp
0x000000000013f110 : hlt ; xchg bl, dh ; jmp rsp
0x0000000000130b0e : idiv bh ; cmp rsi, rsi ; call rax
0x000000000003c376 : idiv bh ; dec dword ptr [rax + 0x63] ; ret 0x2e9
0x00000000000289b4 : idiv bh ; dec dword ptr [rax - 0x7d] ; ret 0x4801
0x00000000000c1ea8 : idiv bh ; dec dword ptr [rax - 0x7d] ; ret 0x8d01
0x00000000000933b2 : idiv bh ; dec dword ptr [rcx + 1] ; ret
0x0000000000130b0a : idiv bh ; loopne 0x130b51 ; idiv bh ; cmp rsi, rsi ; call rax
0x00000000000bd237 : idiv bh ; nop dword ptr [rax - 0x34] ; pop rbx ; nop ; ret
0x00000000000bd0fb : idiv bh ; nop dword ptr [rax - 0x34] ; pop rbx ; ret
0x0000000000150c7a : idiv bh ; ret
0x0000000000130b3a : idiv bh ; ret 0xf63b
0x0000000000130aae : idiv bh ; sub sil, sil ; call qword ptr [rbx]
0x0000000000132554 : idiv bh ; test eax, 0xc3fffb00 ; add dh, bh ; jmp rdi
0x00000000000d8306 : idiv byte ptr [rax + 0x10a] ; syscall
0x000000000002513a : idiv byte ptr [rax - 1] ; cmovns eax, edx ; ret
0x00000000000c1b68 : idiv byte ptr [rcx] ; ret 0xf40
0x0000000000143091 : idiv ch ; call rsp
0x000000000003c375 : idiv dil ; dec dword ptr [rax + 0x63] ; ret 0x2e9
0x000000000015e901 : idiv dl ; call rdi
0x00000000001430c1 : idiv ebp ; jmp rsp
0x000000000015ea09 : idiv ebx ; jmp qword ptr [rsi]
0x0000000000140d69 : idiv ecx ; call rsp
0x0000000000045a2e : idiv ecx ; pop r15 ; ret
0x000000000012f86d : idiv edi ; call qword ptr [rdi]
0x00000000001314ee : idiv edi ; cmp dh, byte ptr [rdi + rsi*8 - 0x8551d01] ; jmp rdx
0x000000000013158a : idiv edi ; cmp eax, 0xecfff7b5 ; mov ah, 0xf7 ; jmp rdx
0x000000000013158e : idiv edi ; in al, dx ; mov ah, 0xf7 ; jmp rdx
0x00000000000d38a2 : idiv edi ; inc dword ptr [rbp + 0x31] ; imul cl ; ret
0x0000000000130fd2 : idiv edi ; je 0x131047 ; idiv edi ; retf -0x8a4 ; call rbx
0x000000000012f865 : idiv edi ; jmp qword ptr [rdx]
0x0000000000131592 : idiv edi ; loop 0x131546 ; idiv edi ; ret 0xf7b4
0x0000000000140072 : idiv edi ; mov esp, 0x64000128 ; sub edi, esi ; jmp rsp
0x0000000000140352 : idiv edi ; movsb byte ptr [rdi], byte ptr [rsi] ; cmp al, byte ptr [rcx] ; add byte ptr [rdi + rbx*8 - 9], dl ; call rsp
0x00000000000a1385 : idiv edi ; nop dword ptr [rax - 0x34] ; pop rbx ; ret
0x0000000000131352 : idiv edi ; rcl dword ptr [rdi + rsi*8 - 0x8660801], 1 ; call rax
0x0000000000131596 : idiv edi ; ret 0xf7b4
0x0000000000130fd6 : idiv edi ; retf -0x8a4 ; call rbx
0x000000000013132e : idiv edi ; sbb byte ptr [rdi + rsi*8 - 0x868e701], dl ; jmp rsi
0x0000000000130f4e : idiv edi ; sub al, 0x5e ; idiv edi ; xchg eax, ebp ; push -9 ; jmp qword ptr [rsi]
0x0000000000130f52 : idiv edi ; xchg eax, ebp ; push -9 ; jmp qword ptr [rsi]
0x000000000003920a : idiv esi ; ret
0x0000000000045a2d : idiv r9 ; pop r15 ; ret
0x000000000015ea08 : idiv rbx ; jmp qword ptr [rsi]
0x0000000000039209 : idiv rsi ; ret
0x0000000000078138 : imul al ; ret 0x1b
0x00000000000ea378 : imul al ; ret 0xfa5e
0x000000000013e7a9 : imul bh ; jmp rsp
0x00000000000d38a7 : imul cl ; ret
0x00000000000801f5 : imul cl ; ret 0xfffe
0x000000000002c817 : imul eax ; ret
0x00000000000527b8 : imul eax ; ret 0x54
0x000000000006ea78 : imul eax ; ret 0xfb35
0x000000000013e0d5 : imul eax, dword ptr [rax], 0 ; push rsp ; adc edi, ebp ; jmp rsp
0x00000000000cd576 : imul eax, dword ptr [rax], 0x450f0000 ; ret 0xc1e9
0x000000000013e025 : imul eax, dword ptr [rax], 0xef0e8400 ; call rsp
0x0000000000149b1d : imul eax, dword ptr [rax], 0xf2832000 ; call qword ptr [rsi]
0x0000000000074cbd : imul ebp, dword ptr [rax], 1 ; jmp 0x74c89
0x00000000000b979a : imul ebx ; ret
0x00000000000eb10d : imul ebx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007b845 : imul ebx, dword ptr [rax], 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a4106 : imul ebx, dword ptr [rdi], 9 ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0x894c
0x00000000000eb08d : imul ecx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000eaf9b : imul edi, dword ptr [rax], 0x48 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000eb0cd : imul edx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007ba13 : imul edx, edi, 0x3948002e ; ret 0xb76
0x0000000000002b38 : imul edx, edx, 0x3a ; adc al, 0xe7 ; ret
0x00000000001184c0 : imul edx, edx, 0x3e8 ; add edx, eax ; jmp 0x118465
0x00000000000bbbfb : imul esi, dword ptr [rcx + rsi], -0x40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a37e2 : imul esi, edx ; add eax, esi ; ret
0x00000000000e39b5 : in al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000140ec0 : in al, 0x15 ; cli ; jmp rsp
0x0000000000144ffc : in al, 0x1d ; add byte ptr [rax], al ; loopne 0x144ff3 ; out dx, al ; jmp qword ptr [rsi]
0x00000000000bbb7b : in al, 0x31 ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000013ea88 : in al, 0x46 ; int1 ; call rsp
0x0000000000113a54 : in al, 0x48 ; mov eax, dword ptr [rdi + 8] ; call qword ptr [rax]
0x00000000001405bc : in al, 0x4e ; add dword ptr [rax], eax ; push rsp ; ret
0x0000000000141250 : in al, 0x5c ; cli ; jmp rsp
0x0000000000142ac0 : in al, 0x5f ; std ; call rsp
0x0000000000141350 : in al, 0x63 ; cli ; jmp rsp
0x0000000000083a4c : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000013f088 : in al, 0x79 ; jmp rsp
0x00000000000c82eb : in al, 0x83 ; mov byte ptr [rcx], 0x83 ; ret 0x4840
0x00000000000f216d : in al, 0x89 ; ret 0x87e
0x000000000015c7fc : in al, 0x95 ; add dword ptr [rax], eax ; or byte ptr [rdx], 0xfc ; jmp qword ptr [rcx]
0x000000000013e5e8 : in al, 0xb4 ; out dx, eax ; jmp rsp
0x000000000013f830 : in al, 0xb5 ; hlt ; call rsp
0x000000000015e8fc : in al, 0xb6 ; add dword ptr [rax], eax ; adc dh, dh ; cli ; call rdi
0x00000000000b5aa1 : in al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000015eafc : in al, 0xb8 ; add dword ptr [rax], eax ; and byte ptr [rax], al ; sti ; jmp qword ptr [rax]
0x000000000013ebc0 : in al, 0xd1 ; call rsp
0x000000000013ec00 : in al, 0xe8 ; jmp rsp
0x0000000000142660 : in al, 0xed ; cld ; call rsp
0x000000000003efc2 : in al, 0xf ; test byte ptr [rdi], al ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x000000000013e7a8 : in al, 0xf6 ; out dx, eax ; jmp rsp
0x000000000015aae1 : in al, 0xf9 ; jmp rax
0x000000000003f7b5 : in al, 0xff ; dec dword ptr [rax - 0x7d] ; call 0xffffffffc20540c9
0x00000000001421bd : in al, 1 ; add ah, dh ; push rsp ; cld ; call rsp
0x000000000013ecc8 : in al, 3 ; jmp rsp
0x00000000000ec1da : in al, dx ; adc byte ptr [rax - 0x75], cl ; cmp byte ptr [r8 - 0x77], r9b ; ret 0x2b48
0x000000000007447a : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; in al, dx ; ret 7
0x0000000000057da3 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000079fa4 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x767
0x00000000000790a4 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x776
0x00000000000394d4 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0xb72
0x00000000000fd4d4 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0xff32
0x00000000000f38d4 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0xffce
0x000000000013f67d : in al, dx ; add byte ptr [rax], al ; hlt ; jmp rsp
0x0000000000155804 : in al, dx ; and eax, 0x9bf80001 ; clc ; jmp rdi
0x0000000000046abc : in al, dx ; cmp dh, dh ; ret 0x7401
0x00000000000af121 : in al, dx ; cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; loop 0xaf11b ; ret 0x272
0x00000000000472bd : in al, dx ; fld xword ptr [rsp - 0x18] ; ret
0x000000000015a704 : in al, dx ; je 0x15a70f ; add byte ptr [rax], cl ; sar ecx, cl ; call qword ptr [rax]
0x00000000000bce15 : in al, dx ; jl 0xbce51 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000131590 : in al, dx ; mov ah, 0xf7 ; jmp rdx
0x000000000015ea04 : in al, dx ; mov bh, 1 ; add byte ptr [rax - 9], cl ; sti ; jmp qword ptr [rsi]
0x00000000000de913 : in al, dx ; mov byte ptr [r9 - 1], 0 ; ret
0x0000000000096393 : in al, dx ; mov eax, 1 ; ret
0x0000000000093953 : in al, dx ; mov qword ptr [rdx], rcx ; ret
0x0000000000093783 : in al, dx ; nop dword ptr [rax - 0x45] ; ret
0x000000000004f7d6 : in al, dx ; or al, ch ; ret
0x000000000008028e : in al, dx ; or byte ptr [rax + 0x39], cl ; ret 0x870f
0x00000000000f0892 : in al, dx ; or byte ptr [rax - 0x75], cl ; jg 0xf08a6 ; call qword ptr [rax]
0x000000000006cad2 : in al, dx ; or byte ptr [rax - 0x75], cl ; mov edi, 0xe0 ; call rax
0x000000000006cba4 : in al, dx ; or byte ptr [rax - 0x75], cl ; mov edi, 0xe0 ; call rdx
0x0000000000114cdb : in al, dx ; or byte ptr [rax - 0x77], 0xd0 ; pop rbx ; ret
0x000000000007e8fe : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000000d6a06 : in al, dx ; or dh, dh ; ret 0x7540
0x0000000000149b04 : in al, dx ; push -0x7cf80000 ; jmp qword ptr [rcx]
0x0000000000113180 : in al, dx ; ret 0xfff0
0x000000000015f504 : in al, dx ; ret 1
0x000000000006bf40 : in al, dx ; ret 6
0x0000000000074480 : in al, dx ; ret 7
0x0000000000096d2e : in al, dx ; sbb byte ptr [rbx + 0x48], 0x29 ; call 0xffffffffc365ae9e
0x00000000000d664d : in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000001167a1 : in al, dx ; sbb byte ptr [rbx - 0x6bf0f502], al ; ret
0x00000000000831e7 : in al, dx ; xchg byte ptr [rsi], ch ; add byte ptr [rax], al ; je 0x831f7 ; ret
0x000000000012ec3e : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x12ebd1 ; ret 0x48f
0x000000000012ec3d : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x12ebd2 ; ret 0x48f
0x00000000000fb41a : in al, dx ; xor byte ptr [rcx], 0xc0 ; pop rbx ; ret
0x00000000000b4d30 : in eax, 0 ; add byte ptr [rax], al ; syscall
0x000000000013f57d : in eax, 0 ; add byte ptr [rdx + rbx - 0xc], dh ; call rsp
0x000000000012d343 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000000928da : in eax, 0x40 ; or byte ptr [rdi], dh ; ret
0x0000000000095bea : in eax, 0x44 ; sub eax, eax ; nop ; ret
0x0000000000104c42 : in eax, 0x48 ; add esp, 0x18 ; ret
0x000000000008934a : in eax, 0x48 ; mov eax, edi ; ret
0x00000000000477da : in eax, 0x48 ; mov eax, esi ; ret
0x00000000000de8c1 : in eax, 0x49 ; mov ecx, esi ; mov byte ptr [r9 - 1], 0 ; ret
0x000000000011da3a : in eax, 0x5b ; pop rbp ; pop r12 ; ret
0x00000000000f0fd9 : in eax, 0x5d ; ret
0x000000000012c5d9 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x000000000010dc07 : in eax, 0x89 ; ret 0x8948
0x000000000012f1f9 : in eax, 0xe2 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x0000000000096582 : in eax, 0xeb ; cwde ; nop dword ptr [rax] ; ret
0x00000000000959c3 : in eax, 0xf ; je 0x959e8 ; add rax, 2 ; ret
0x00000000000874da : in eax, 0xf3 ; ret
0x0000000000140689 : in eax, 0xf8 ; call rsp
0x000000000012e6c1 : in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000062e9b : in eax, dx ; add dword ptr [rax + 1], ecx ; ret
0x000000000011317e : in eax, dx ; call 0x1f473
0x0000000000142661 : in eax, dx ; cld ; call rsp
0x000000000015e649 : in eax, dx ; cli ; call qword ptr [rsi]
0x0000000000093862 : in eax, dx ; cmp r8d, ecx ; je 0x93857 ; ret
0x00000000000c0297 : in eax, dx ; je 0xc025b ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000143332 : in eax, dx ; jmp qword ptr [rdi]
0x00000000001434a2 : in eax, dx ; jmp rdx
0x000000000013ec21 : in eax, dx ; jmp rsp
0x000000000011da93 : in eax, dx ; jne 0x11da69 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000078eca : in eax, dx ; jne 0x78ee1 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000079164 : in eax, dx ; jne 0x79199 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000d01da : in eax, dx ; jne 0xd01c1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000022192 : in eax, dx ; mov byte ptr [rdi], 0 ; ret
0x000000000008536f : in eax, dx ; mov ch, 0xa ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x144
0x0000000000098365 : in eax, dx ; mov edx, eax ; jmp 0x9831a
0x000000000009a9b5 : in eax, dx ; mov edx, eax ; jmp 0x9a96a
0x000000000009cf35 : in eax, dx ; mov edx, eax ; jmp 0x9ceea
0x0000000000093892 : in eax, dx ; mov rax, rdi ; ret
0x00000000000c5e55 : in eax, dx ; movsxd rcx, dword ptr [rax + r13*4] ; add rax, rcx ; jmp rax
0x00000000000b2c88 : in eax, dx ; pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000056e9a : in eax, dx ; ret
0x000000000000e440 : in eax, dx ; sub dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rbx], cl ; add byte ptr [rax], al ; ret 6
0x00000000000837c2 : in eax, dx ; xor eax, eax ; ret
0x00000000000892a5 : inc bl ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x00000000000e3c75 : inc byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000adf35 : inc byte ptr [rcx] ; je 0xadf46 ; xor eax, eax ; ret
0x000000000007609d : inc byte ptr [rdx] ; mov dword ptr [rdi], edx ; je 0x760af ; ret
0x00000000000de8c7 : inc dword ptr [r8] ; ret
0x0000000000130947 : inc dword ptr [rax + 0x46] ; cmc ; jmp qword ptr [rax]
0x0000000000053d91 : inc dword ptr [rax - 0x115443] ; jmp qword ptr [rax]
0x0000000000130a3b : inc dword ptr [rax - 0x2f000a31] ; sal ebp, 1 ; jmp qword ptr [rax]
0x0000000000130a2b : inc dword ptr [rax - 0x3a] ; cmc ; call qword ptr [rax - 0x1f000a38]
0x0000000000130a77 : inc dword ptr [rax - 0x3f000a1f] ; loope 0x130a7c ; jmp rax
0x00000000001306d7 : inc dword ptr [rax - 0x4f] ; jmp qword ptr [rax]
0x000000000004836d : inc dword ptr [rax - 0x52043] ; jmp qword ptr [rax]
0x0000000000048efe : inc dword ptr [rax - 0x58443] ; jmp qword ptr [rax]
0x0000000000130a0b : inc dword ptr [rax - 0x6e] ; cmc ; call qword ptr [rax]
0x00000000000d04a4 : inc dword ptr [rax] ; add byte ptr [rax], al ; add al, ch ; ret 0x13e
0x0000000000130afb : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], dl ; cmp esi, esi ; jmp qword ptr [rax]
0x0000000000055eda : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x00000000000cf574 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000000e3d05 : inc dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000130943 : inc dword ptr [rax] ; cmc ; inc dword ptr [rax + 0x46] ; cmc ; jmp qword ptr [rax]
0x0000000000130a83 : inc dword ptr [rax] ; loop 0x130a84 ; inc eax ; loopne 0x130a88 ; jmp qword ptr [rax]
0x000000000005f7b1 : inc dword ptr [rax] ; or byte ptr [rax], al ; add byte ptr [rdi], cl ; test dword ptr [rcx], edi ; ret 0xffff
0x00000000000f4e87 : inc dword ptr [rax] ; or eax, esi ; bswap eax ; ret
0x00000000001309df : inc dword ptr [rax] ; pushfq ; cmc ; call qword ptr [rax]
0x00000000000de8c8 : inc dword ptr [rax] ; ret
0x00000000000d38a4 : inc dword ptr [rbp + 0x31] ; imul cl ; ret
0x00000000001305a7 : inc dword ptr [rbp + rbp*4 - 0xd] ; call rsp
0x00000000001305a3 : inc dword ptr [rbp + rbp*4 - 0xd] ; inc dword ptr [rbp + rbp*4 - 0xd] ; call rsp
0x000000000013f2bb : inc dword ptr [rbp + rdx*8 - 0x488c0000] ; call rsp
0x0000000000039262 : inc dword ptr [rbp - 0x3db6f02e] ; pop rbx ; ret
0x00000000000b99d8 : inc dword ptr [rbp - 0x77] ; loopne 0xb996b ; ret
0x00000000000abe29 : inc dword ptr [rbp - 0x77] ; ret 0x12e9
0x00000000000533fc : inc dword ptr [rbx - 0x10f343] ; jmp qword ptr [rax]
0x000000000002218d : inc dword ptr [rbx - 0x1281fe06] ; mov byte ptr [rdi], 0 ; ret
0x00000000000b6838 : inc dword ptr [rbx - 0x1c773] ; jmp qword ptr [rax]
0x0000000000039b6d : inc dword ptr [rbx] ; add byte ptr [rax], al ; xor eax, edx ; ret
0x000000000013161f : inc dword ptr [rbx] ; cmp edi, eax ; call qword ptr [rcx]
0x000000000009471a : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000000945f3 : inc dword ptr [rbx] ; pop rbx ; ret
0x0000000000054aa2 : inc dword ptr [rcx + 0x29] ; ret 0x3945
0x0000000000053b09 : inc dword ptr [rcx + 0x39] ; ret
0x00000000000495d8 : inc dword ptr [rcx + 0x39] ; ret 0x870f
0x000000000014214b : inc dword ptr [rcx + 0x3e140001] ; cld ; call rsp
0x000000000006f9a6 : inc dword ptr [rcx + 0x5c] ; ret
0x0000000000100682 : inc dword ptr [rcx + 0x5e] ; ret
0x00000000000724a9 : inc dword ptr [rcx + 0x5f] ; ret
0x000000000007803d : inc dword ptr [rcx + 0xf] ; les r11d, ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000ceda5 : inc dword ptr [rcx + 0xf] ; ret 0x8944
0x00000000000923f8 : inc dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x00000000001016c5 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x3945
0x00000000000bac8c : inc dword ptr [rcx - 0x1e] ; add byte ptr [rax + 0x63], cl ; ret 0xb60f
0x000000000013defb : inc dword ptr [rcx - 0x3a0c0000] ; out dx, al ; call rsp
0x0000000000041bcf : inc dword ptr [rcx - 0x47] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x41ba2
0x0000000000031ccf : inc dword ptr [rcx - 0x75] ; sub al, 0xe9 ; ret
0x0000000000117cb1 : inc dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000005ada2 : inc dword ptr [rcx - 9] ; ret
0x00000000000c4d5d : inc dword ptr [rcx] ; fdivr dword ptr [rcx] ; ret
0x000000000011e02d : inc dword ptr [rcx] ; ja 0x11e03c ; ret
0x0000000000131643 : inc dword ptr [rdi] ; cmp bh, al ; call qword ptr [rip + 0x23fff83a]
0x000000000013fbb3 : inc dword ptr [rdx + rcx - 0x65dbffff] ; cmc ; call rsp
0x000000000012ffe7 : inc dword ptr [rsi + 0x23] ; jmp qword ptr [rdi]
0x0000000000130a7b : inc eax ; loope 0x130a78 ; jmp rax
0x0000000000130a87 : inc eax ; loopne 0x130a84 ; jmp qword ptr [rax]
0x000000000003593d : inc eax ; shr eax, 0x1f ; ret
0x00000000001309cf : inc eax ; xchg eax, ebx ; cmc ; call rax
0x0000000000132559 : inc ebx ; add dh, bh ; jmp rdi
0x00000000000fea2c : inc ebx ; nop ; mov eax, r9d ; ret
0x0000000000131fe3 : inc ebx ; stc ; inc ebx ; stc ; jmp qword ptr [rdx]
0x0000000000131fcb : inc ebx ; stc ; jmp qword ptr [rdx]
0x00000000000207c9 : inc edx ; jmp 0x207d2
0x0000000000130903 : inc esi ; add ch, dh ; inc esi ; add ch, dh ; jmp qword ptr [rsi]
0x0000000000130907 : inc esi ; add ch, dh ; jmp qword ptr [rsi]
0x00000000000ddb81 : inc esi ; jmp qword ptr [r8]
0x0000000000142fab : inc esp ; cmp eax, 0xe7b40002 ; std ; jmp rsp
0x000000000013f7eb : inc esp ; hlt ; add byte ptr [rax], al ; stosd dword ptr [rdi], eax ; hlt ; jmp rsp
0x0000000000143173 : inc esp ; jne 0x143180 ; add ah, dh ; add esi, edi ; call rsp
0x0000000000140ca3 : inc esp ; jno 0x140cb0 ; add byte ptr [rsi + rbp*8 - 7], dl ; jmp rsp
0x0000000000141b0b : inc esp ; mov eax, 0x51640001 ; sti ; jmp rsp
0x000000000013efc3 : inc esp ; ret
0x000000000013ecc3 : inc esp ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; in al, 3 ; jmp rsp
0x00000000000207c8 : inc rdx ; jmp 0x207d3
0x000000000013fa94 : insb byte ptr [rdi], dx ; add al, 1 ; add byte ptr [rdx + rbp*2 - 0xb], dh ; jmp rsp
0x000000000013e125 : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; test byte ptr [rdx], dl ; out dx, eax ; call rsp
0x000000000014b584 : insb byte ptr [rdi], dx ; add dword ptr [rax], 0 ; out 0xf2, eax ; jmp qword ptr [rax]
0x00000000001631cc : insb byte ptr [rdi], dx ; add eax, 0x3ee0000 ; add byte ptr [rax], al ; ret 5
0x00000000001425f4 : insb byte ptr [rdi], dx ; add eax, dword ptr [rdx] ; add ah, dl ; xlatb ; cld ; call rsp
0x00000000000359e0 : insb byte ptr [rdi], dx ; and al, 0xe8 ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x0000000000035a7a : insb byte ptr [rdi], dx ; and al, 0xe8 ; fstp xword ptr [rdi] ; ret
0x0000000000035a5a : insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x0000000000035c2e : insb byte ptr [rdi], dx ; and al, 0xfe ; ret
0x0000000000035aad : insb byte ptr [rdi], dx ; and al, 8 ; fscale ; fstp st(1) ; ret
0x00000000000375ef : insb byte ptr [rdi], dx ; and al, 8 ; mov rsi, rbp ; call r12
0x000000000003596e : insb byte ptr [rdi], dx ; and al, 8 ; ret
0x0000000000145284 : insb byte ptr [rdi], dx ; and byte ptr [rax], al ; add byte ptr [rax + 3], cl ; out dx, eax ; jmp qword ptr [rdi]
0x000000000012f1fe : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x000000000014311c : insb byte ptr [rdi], dx ; jo 0x143126 ; add ah, al ; std ; std ; call rsp
0x000000000012fb38 : insb byte ptr [rdi], dx ; loop 0x12fb3d ; call qword ptr [rsi]
0x000000000010bfa8 : insb byte ptr [rdi], dx ; mov eax, 1 ; ret
0x000000000014ee84 : insb byte ptr [rdi], dx ; mov esp, 0x7c80000 ; cmc ; jmp rax
0x0000000000148784 : insb byte ptr [rdi], dx ; push rbp ; add byte ptr [rax], al ; cmp byte ptr [rdx - 0xe], al ; call rsp
0x0000000000158784 : insb byte ptr [rdi], dx ; push rbp ; add dword ptr [rax], eax ; or byte ptr [rax - 7], ah ; jmp qword ptr [rax]
0x0000000000141d0c : insb byte ptr [rdi], dx ; ret
0x000000000013ef94 : insb byte ptr [rdi], dx ; ret 0
0x000000000009a98a : insb byte ptr [rdi], dx ; ror byte ptr [rbp - 0x7bf0febe], 1 ; ret 0
0x000000000014fbb9 : insd dword ptr [rdi], dx ; cmc ; jmp qword ptr [rbx]
0x0000000000146aa9 : insd dword ptr [rdi], dx ; out dx, eax ; jmp rax
0x000000000012f1ff : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x000000000014c7bf : insd dword ptr [rdi], dx ; ret
0x0000000000001bc8 : insd dword ptr [rdi], dx ; ret 0x1bb7
0x000000000012d5ad : insd dword ptr [rdi], dx ; ret 0xb9b9
0x00000000000faeaf : insd dword ptr [rdi], dx ; ret 0xfffd
0x000000000012e4bf : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000000c102a : int 0x49
0x00000000000f0d72 : int 0x80
0x000000000003d4ac : int 0xfb
0x0000000000116ff2 : int 0xfe
0x0000000000035d91 : int 0xff
0x0000000000003837 : int 3
0x00000000001430bd : int1 ; add dword ptr [rax], eax ; xor al, 0xf7 ; std ; jmp rsp
0x000000000004d136 : int1 ; add r8d, eax ; mov eax, r8d ; ret
0x0000000000089136 : int1 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011e58e : int1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011e00d : int1 ; and al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000011e028 : int1 ; and al, 0 ; cmp rdi, 1 ; ja 0x11e041 ; ret
0x000000000012ba16 : int1 ; call qword ptr [rax]
0x000000000013ea8a : int1 ; call rsp
0x00000000000cfabb : int1 ; cmp ecx, dword ptr [rax - 0xc] ; jne 0xcfab9 ; mov eax, dword ptr [rdx + 8] ; ret
0x0000000000093829 : int1 ; je 0x93828 ; cmp ecx, edx ; je 0x93828 ; ret
0x00000000000946a1 : int1 ; jmp rcx
0x0000000000079e6b : int1 ; jne 0x79e66 ; lea eax, [rdx + rdi] ; ret
0x00000000000de8c4 : int1 ; mov byte ptr [r9 - 1], 0 ; ret
0x0000000000003a23 : int1 ; mov dl, 0x1e ; ret
0x0000000000081b8a : int1 ; mov eax, 0x16 ; je 0x81ba0 ; ret
0x00000000000cc291 : int1 ; mov eax, ecx ; syscall
0x000000000010938e : int1 ; mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x00000000000efebe : int1 ; mov rax, qword ptr [rax + 0x30] ; ret
0x0000000000096a34 : int1 ; mov rdi, qword ptr [r13] ; call r12
0x0000000000094704 : int1 ; pop rbx ; mov eax, eax ; ret
0x000000000008987e : int1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000445fe : int1 ; pop rbx ; ret
0x00000000000f0796 : int1 ; pop rdx ; pop r10 ; ret
0x000000000013ea82 : int1 ; push qword ptr [rdi + rbx*4 + 0x46e40000] ; int1 ; call rsp
0x00000000000025c3 : int1 ; ret
0x000000000012ebd6 : int1 ; ret 0x5803
0x00000000000e96d3 : int1 ; xor byte ptr [rax], ch ; add byte ptr [rax - 0x77], cl ; ret 0xb9
0x0000000000091116 : int1 ; xor eax, eax ; ret
0x0000000000150165 : iretd ; add byte ptr [rax], al ; js 0x15015e ; cmc ; jmp qword ptr [rdi]
0x0000000000160165 : iretd ; add dword ptr [rax], eax ; js 0x1601b2 ; sti ; call qword ptr [rsi]
0x00000000001601b5 : iretd ; add dword ptr [rax], eax ; sbb byte ptr [rbx - 5], al ; call qword ptr [rsi]
0x00000000000c511c : iretd ; call 0xc1423
0x0000000000083577 : iretd ; call rcx
0x000000000015de59 : iretd ; cli ; jmp qword ptr [rbx]
0x0000000000130a3d : iretd ; cmc ; call rax
0x00000000000e5281 : iretd ; mov eax, 0x14 ; syscall
0x00000000000e542e : iretd ; mov eax, 3 ; syscall
0x00000000000e53f6 : iretd ; mov eax, ebx ; syscall
0x0000000000036343 : iretd ; mov eax, r8d ; syscall
0x00000000000e52c0 : iretd ; movsxd rdx, edx ; mov eax, 0x14 ; syscall
0x0000000000150164 : iretq ; add byte ptr [rax], al ; js 0x15015f ; cmc ; jmp qword ptr [rdi]
0x0000000000160164 : iretq ; add dword ptr [rax], eax ; js 0x1601b3 ; sti ; call qword ptr [rsi]
0x00000000001005a7 : ja 0x1005ac ; ret
0x00000000001093b5 : ja 0x1093a6 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x00000000001147c2 : ja 0x1147e3 ; mov dword ptr [rdi + 0x28], edx ; mov al, 1 ; ret
0x00000000001147eb : ja 0x114807 ; ret
0x0000000000114953 : ja 0x114976 ; mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000011e02f : ja 0x11e03a ; ret
0x000000000012ec44 : ja 0x12ebcb ; ret 0x48f
0x000000000013f069 : ja 0x13f060 ; jmp rsp
0x000000000013f068 : ja 0x13f061 ; jmp rsp
0x00000000001407b9 : ja 0x1407b6 ; call rsp
0x000000000015a96d : ja 0x15a976 ; add byte ptr [rax - 0x22], dl ; stc ; call rcx
0x000000000015a9e5 : ja 0x15a9ee ; add byte ptr [rax - 0x20], bh ; stc ; call qword ptr [rax]
0x000000000015aa15 : ja 0x15aa1e ; add byte ptr [rax - 0x1f], bl ; stc ; call rcx
0x000000000002e8e5 : ja 0x2e900 ; lea rax, [rdx + rsi*4] ; mov eax, dword ptr [rdi + rax] ; ret
0x0000000000033d8b : ja 0x33da1 ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000035ed3 : ja 0x35ef5 ; ret
0x00000000000361ca : ja 0x361d1 ; ret
0x0000000000036226 : ja 0x3622d ; ret
0x0000000000036260 : ja 0x36265 ; ret
0x00000000000362e6 : ja 0x362ed ; ret
0x000000000004d120 : ja 0x4d105 ; mov eax, r8d ; ret
0x0000000000069f5a : ja 0x69f61 ; ret
0x00000000000718ba : ja 0x718c3 ; ret
0x0000000000081aa5 : ja 0x81b28 ; add byte ptr cs:[rax + 0x39], cl ; ret
0x00000000000891fc : ja 0x89203 ; ret
0x0000000000090be9 : ja 0x90bc6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000949f9 : ja 0x94a19 ; sub rdi, 0x10 ; add rax, rdi ; ret
0x00000000000962e2 : ja 0x962f1 ; jne 0x96305 ; ret
0x00000000000afe7b : ja 0xafe80 ; ret
0x00000000000b290c : ja 0xb2911 ; ret
0x00000000000b29a6 : ja 0xb29ab ; ret
0x00000000000b2ab5 : ja 0xb2aba ; ret
0x00000000000b31ce : ja 0xb31f4 ; hlt ; mov rdi, rdx ; mov eax, r9d ; syscall
0x00000000000b3211 : ja 0xb3218 ; ret
0x00000000000b3e4d : ja 0xb3e52 ; ret
0x00000000000b3ebd : ja 0xb3ec2 ; ret
0x00000000000b4151 : ja 0xb4156 ; ret
0x00000000000b41c5 : ja 0xb41cb ; add byte ptr [rax], al ; syscall
0x00000000000b41d1 : ja 0xb41d6 ; ret
0x00000000000bdd25 : ja 0xbdd33 ; jl 0xbdd20 ; nop dword ptr [rax - 0x45] ; ret
0x00000000000d5815 : ja 0xd581f ; xor eax, eax ; ret
0x00000000000d5e2d : ja 0xd5e36 ; add byte ptr [rax], al ; mov rdi, rdx ; syscall
0x00000000000d624a : ja 0xd61e3 ; pop rbx ; ret
0x00000000000d63bf : ja 0xd63df ; ret
0x00000000000d640e : ja 0xd642f ; ret
0x00000000000d645f : ja 0xd647f ; ret
0x00000000000d64b7 : ja 0xd64d7 ; ret
0x00000000000d651b : ja 0xd6537 ; ret
0x00000000000d6574 : ja 0xd6597 ; ret
0x00000000000d6763 : ja 0xd676a ; ret
0x00000000000d67f6 : ja 0xd67fd ; ret
0x00000000000d68fa : ja 0xd6901 ; ret
0x00000000000d6942 : ja 0xd697c ; add rsp, 0x78 ; ret
0x00000000000d6e9c : ja 0xd6ecf ; ret
0x00000000000d7c2c : ja 0xd7c33 ; ret
0x00000000000d82ad : ja 0xd82b4 ; ret
0x00000000000d8314 : ja 0xd831b ; ret
0x00000000000d8377 : ja 0xd837e ; ret
0x00000000000d83d7 : ja 0xd83de ; ret
0x00000000000dacc7 : ja 0xdacd8 ; mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x00000000000daf33 : ja 0xdafa5 ; add rsp, 0x38 ; ret
0x00000000000db25c : ja 0xdb263 ; ret
0x00000000000db2b0 : ja 0xdb2b7 ; ret
0x00000000000dba64 : ja 0xdba69 ; ret
0x00000000000dbd14 : ja 0xdbd3d ; ret
0x00000000000dbe9a : ja 0xdbe9f ; ret
0x00000000000dc53a : ja 0xdc543 ; ret
0x00000000000dc691 : ja 0xdc696 ; ret
0x00000000000dc731 : ja 0xdc736 ; ret
0x00000000000dc7d4 : ja 0xdc7d9 ; ret
0x00000000000dc884 : ja 0xdc889 ; ret
0x00000000000dc92f : ja 0xdc934 ; ret
0x00000000000dc99f : ja 0xdc9a4 ; ret
0x00000000000dca1c : ja 0xdca21 ; ret
0x00000000000dcaad : ja 0xdcab6 ; add byte ptr [rax], al ; mov rdi, rdx ; syscall
0x00000000000dcabc : ja 0xdcac1 ; ret
0x00000000000dcabc : ja 0xdcac6 ; ret
0x00000000000dcde5 : ja 0xdce62 ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x00000000000dd050 : ja 0xdd057 ; ret
0x00000000000de581 : ja 0xde588 ; ret
0x00000000000de60d : ja 0xde637 ; ret
0x00000000000de6b5 : ja 0xde6df ; ret
0x00000000000de709 : ja 0xde70e ; ret
0x00000000000de81d : ja 0xde829 ; ret
0x00000000000e1354 : ja 0xe136b ; mov qword ptr [rdx], rdi ; ret
0x00000000000e277b : ja 0xe2797 ; ret
0x00000000000e3507 : ja 0xe3510 ; pop rbx ; pop rbp ; ret
0x00000000000e37aa : ja 0xe37af ; ret
0x00000000000e385c : ja 0xe3863 ; ret
0x00000000000e3897 : ja 0xe389e ; ret
0x00000000000e44c7 : ja 0xe44cc ; ret
0x00000000000e452c : ja 0xe4549 ; mov edi, ebp ; call 0xf0826
0x00000000000e4667 : ja 0xe466c ; ret
0x00000000000e4b21 : ja 0xe4b26 ; ret
0x00000000000e4bd3 : ja 0xe4bd8 ; ret
0x00000000000e4c93 : ja 0xe4c98 ; ret
0x00000000000f0e54 : ja 0xf0e5b ; ret
0x00000000000f0ee1 : ja 0xf0efd ; ret
0x00000000000f2de6 : ja 0xf2ded ; ret
0x00000000000f2dd7 : ja 0xf2e02 ; movsxd rdi, edi ; xor eax, eax ; syscall
0x00000000000f2ee6 : ja 0xf2eed ; ret
0x00000000000f2ed7 : ja 0xf2f02 ; mov eax, 0x59 ; syscall
0x00000000000f4a6b : ja 0xf4a7e ; mov rax, rdi ; sar rax, 6 ; ret
0x00000000000022a7 : ja 0xffffffffd6104b33 ; ret
0x0000000000118f14 : jae 0x118f19 ; ret
0x0000000000118f64 : jae 0x118f69 ; ret
0x000000000011c19c : jae 0x11c17f ; mov eax, 1 ; ret
0x000000000011e57b : jae 0x11e594 ; nop dword ptr [rax] ; call qword ptr [rbx]
0x000000000012d202 : jae 0x12d1e4 ; jo 0x12d280 ; mov ebp, 0xfb67d10d ; ret
0x000000000012e09e : jae 0x12e079 ; push rsi ; pop rdx ; je 0x12e06e ; ret 0xacfc
0x0000000000154ae1 : jae 0x154add ; jmp qword ptr [rsi]
0x00000000000361f1 : jae 0x361f6 ; ret
0x00000000000367a1 : jae 0x367a6 ; ret
0x000000000004503b : jae 0x45044 ; xor eax, eax ; ret
0x0000000000045e22 : jae 0x45e74 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000069f21 : jae 0x69f26 ; ret
0x0000000000077ca0 : jae 0x77cb6 ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000007961c : jae 0x795ce ; nop ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000007aadf : jae 0x7ab05 ; movzx eax, byte ptr [rax] ; ret
0x000000000008385e : jae 0x8386e ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008e3ec : jae 0x8e3e6 ; ret 0x7401
0x00000000000a3621 : jae 0xa3626 ; ret
0x00000000000a60b1 : jae 0xa60b6 ; ret
0x00000000000a60e1 : jae 0xa60e6 ; ret
0x00000000000b2861 : jae 0xb2866 ; ret
0x00000000000b2a74 : jae 0xb2a79 ; ret
0x00000000000b2b51 : jae 0xb2b56 ; ret
0x00000000000b2d5e : jae 0xb2d9b ; ret
0x00000000000b2dce : jae 0xb2e0b ; ret
0x00000000000b318b : jae 0xb3190 ; ret
0x00000000000b3e05 : jae 0xb3e0b ; add byte ptr [rax], al ; syscall
0x00000000000b3e11 : jae 0xb3e16 ; ret
0x00000000000b3fd1 : jae 0xb3fd6 ; ret
0x00000000000b4001 : jae 0xb4006 ; ret
0x00000000000b4081 : jae 0xb4086 ; ret
0x00000000000b40b1 : jae 0xb40b6 ; ret
0x00000000000b40e1 : jae 0xb40e6 ; ret
0x00000000000b4111 : jae 0xb4116 ; ret
0x00000000000bd0f9 : jae 0xbd127 ; idiv bh ; nop dword ptr [rax - 0x34] ; pop rbx ; ret
0x00000000000cc101 : jae 0xcc106 ; ret
0x00000000000cc131 : jae 0xcc136 ; ret
0x00000000000cc161 : jae 0xcc166 ; ret
0x00000000000cc191 : jae 0xcc196 ; ret
0x00000000000cc1c1 : jae 0xcc1c6 ; ret
0x00000000000cc1f1 : jae 0xcc1f6 ; ret
0x00000000000cc221 : jae 0xcc226 ; ret
0x00000000000cc251 : jae 0xcc256 ; ret
0x00000000000d5201 : jae 0xd5241 ; ret
0x00000000000d5271 : jae 0xd52b1 ; ret
0x00000000000d62f2 : jae 0xd62fb ; mov eax, edx ; ret
0x00000000000d6321 : jae 0xd6326 ; ret
0x00000000000d65c1 : jae 0xd65c6 ; ret
0x00000000000d65f1 : jae 0xd65f6 ; ret
0x00000000000d66d1 : jae 0xd66d6 ; ret
0x00000000000d6701 : jae 0xd6706 ; ret
0x00000000000d67c1 : jae 0xd67c6 ; ret
0x00000000000d682e : jae 0xd686b ; ret
0x00000000000d6a7e : jae 0xd6abb ; ret
0x00000000000d6aee : jae 0xd6b2b ; ret
0x00000000000d6b51 : jae 0xd6b56 ; ret
0x00000000000d6fe1 : jae 0xd6fe6 ; ret
0x00000000000d713e : jae 0xd717b ; ret
0x00000000000d71a1 : jae 0xd71a6 ; ret
0x00000000000d71d1 : jae 0xd71d6 ; ret
0x00000000000d7201 : jae 0xd7206 ; ret
0x00000000000d7231 : jae 0xd7236 ; ret
0x00000000000d7261 : jae 0xd7266 ; ret
0x00000000000d729e : jae 0xd72db ; ret
0x00000000000d7301 : jae 0xd7306 ; ret
0x00000000000d7331 : jae 0xd7336 ; ret
0x00000000000d7b91 : jae 0xd7b96 ; ret
0x00000000000d7bc1 : jae 0xd7bc6 ; ret
0x00000000000d7bf1 : jae 0xd7bf6 ; ret
0x00000000000d8271 : jae 0xd8276 ; ret
0x00000000000d82e1 : jae 0xd82e6 ; ret
0x00000000000d8341 : jae 0xd8346 ; ret
0x00000000000d83a1 : jae 0xd83a6 ; ret
0x00000000000d8401 : jae 0xd8406 ; ret
0x00000000000dae9e : jae 0xdaedb ; ret
0x00000000000db224 : jae 0xdb229 ; ret
0x00000000000db9f1 : jae 0xdba31 ; ret
0x00000000000dc0a1 : jae 0xdc0a6 ; ret
0x00000000000dc0d1 : jae 0xdc0d6 ; ret
0x00000000000dc101 : jae 0xdc106 ; ret
0x00000000000dc461 : jae 0xdc466 ; ret
0x00000000000dc651 : jae 0xdc656 ; ret
0x00000000000dcc51 : jae 0xdcc56 ; ret
0x00000000000dcd01 : jae 0xdcd06 ; ret
0x00000000000dcd41 : jae 0xdcd81 ; ret
0x00000000000dcde6 : jae 0xdce37 ; add esp, 0x58 ; pop rbx ; pop rbp ; ret
0x00000000000dcea1 : jae 0xdcea6 ; ret
0x00000000000dced1 : jae 0xdced6 ; ret
0x00000000000dcf0e : jae 0xdcf4b ; ret
0x00000000000dcf71 : jae 0xdcf76 ; ret
0x00000000000dcfae : jae 0xdcfeb ; ret
0x00000000000dd011 : jae 0xdd016 ; ret
0x00000000000dd321 : jae 0xdd326 ; ret
0x00000000000dd351 : jae 0xdd356 ; ret
0x00000000000dd381 : jae 0xdd386 ; ret
0x00000000000de751 : jae 0xde756 ; ret
0x00000000000de781 : jae 0xde786 ; ret
0x00000000000dfed3 : jae 0xdfed8 ; ret
0x00000000000e0064 : jae 0xe0069 ; ret
0x00000000000e0091 : jae 0xe0096 ; ret
0x00000000000e00c1 : jae 0xe00c6 ; ret
0x00000000000e00fe : jae 0xe013b ; ret
0x00000000000e0161 : jae 0xe0166 ; ret
0x00000000000e0191 : jae 0xe0196 ; ret
0x00000000000e01c4 : jae 0xe01c9 ; ret
0x00000000000e01f1 : jae 0xe01f6 ; ret
0x00000000000e0221 : jae 0xe0226 ; ret
0x00000000000e0251 : jae 0xe0256 ; ret
0x00000000000e0281 : jae 0xe0286 ; ret
0x00000000000e3144 : jae 0xe3149 ; ret
0x00000000000e3171 : jae 0xe3176 ; ret
0x00000000000e31a1 : jae 0xe31a6 ; ret
0x00000000000e31d4 : jae 0xe31d9 ; ret
0x00000000000e3204 : jae 0xe3209 ; ret
0x00000000000e3231 : jae 0xe3236 ; ret
0x00000000000e3264 : jae 0xe3269 ; ret
0x00000000000e3291 : jae 0xe3296 ; ret
0x00000000000e32c1 : jae 0xe32c6 ; ret
0x00000000000e32f4 : jae 0xe32f9 ; ret
0x00000000000e3321 : jae 0xe3326 ; ret
0x00000000000e3354 : jae 0xe3359 ; ret
0x00000000000e3471 : jae 0xe3476 ; ret
0x00000000000e34a1 : jae 0xe34a6 ; ret
0x00000000000e35de : jae 0xe361b ; ret
0x00000000000e3661 : jae 0xe3666 ; ret
0x00000000000e3691 : jae 0xe3696 ; ret
0x00000000000e36c1 : jae 0xe36c6 ; ret
0x00000000000e36f1 : jae 0xe36f6 ; ret
0x00000000000e3934 : jae 0xe3939 ; ret
0x00000000000e3961 : jae 0xe3966 ; ret
0x00000000000e3991 : jae 0xe3996 ; ret
0x00000000000e39d4 : jae 0xe39d9 ; ret
0x00000000000e3a01 : jae 0xe3a06 ; ret
0x00000000000e3a31 : jae 0xe3a36 ; ret
0x00000000000e3a61 : jae 0xe3a66 ; ret
0x00000000000e3a91 : jae 0xe3a96 ; ret
0x00000000000e3ac1 : jae 0xe3ac6 ; ret
0x00000000000e3af1 : jae 0xe3af6 ; ret
0x00000000000e3b21 : jae 0xe3b26 ; ret
0x00000000000e3b51 : jae 0xe3b56 ; ret
0x00000000000e3b84 : jae 0xe3b89 ; ret
0x00000000000e3bc1 : jae 0xe3c01 ; ret
0x00000000000e3c21 : jae 0xe3c26 ; ret
0x00000000000e3c54 : jae 0xe3c59 ; ret
0x00000000000e3c81 : jae 0xe3c86 ; ret
0x00000000000e3cb1 : jae 0xe3cb6 ; ret
0x00000000000e3ce1 : jae 0xe3ce6 ; ret
0x00000000000e3d11 : jae 0xe3d16 ; ret
0x00000000000e3d41 : jae 0xe3d46 ; ret
0x00000000000e3d74 : jae 0xe3d79 ; ret
0x00000000000e3da4 : jae 0xe3da9 ; ret
0x00000000000e3dd1 : jae 0xe3dd6 ; ret
0x00000000000e3e01 : jae 0xe3e06 ; ret
0x00000000000e3e31 : jae 0xe3e36 ; ret
0x00000000000e3e64 : jae 0xe3e69 ; ret
0x00000000000e3e94 : jae 0xe3e99 ; ret
0x00000000000e3ec4 : jae 0xe3ec9 ; ret
0x00000000000e3f01 : jae 0xe3f41 ; ret
0x00000000000e3f61 : jae 0xe3f66 ; ret
0x00000000000e3fa1 : jae 0xe3fe1 ; ret
0x00000000000e4001 : jae 0xe4006 ; ret
0x00000000000e4031 : jae 0xe4036 ; ret
0x00000000000e4071 : jae 0xe40b1 ; ret
0x00000000000e40d1 : jae 0xe40d6 ; ret
0x00000000000e4104 : jae 0xe4109 ; ret
0x00000000000e4131 : jae 0xe4136 ; ret
0x00000000000e4161 : jae 0xe4166 ; ret
0x00000000000e4194 : jae 0xe4199 ; ret
0x00000000000e41ce : jae 0xe420b ; ret
0x00000000000e4231 : jae 0xe4236 ; ret
0x00000000000e4264 : jae 0xe4269 ; ret
0x00000000000e4294 : jae 0xe4299 ; ret
0x00000000000e42ee : jae 0xe432b ; ret
0x00000000000e4351 : jae 0xe4356 ; ret
0x00000000000e438e : jae 0xe43cb ; ret
0x00000000000e43f1 : jae 0xe43f6 ; ret
0x00000000000e4421 : jae 0xe4426 ; ret
0x00000000000e4454 : jae 0xe4459 ; ret
0x00000000000e4481 : jae 0xe4486 ; ret
0x00000000000e4581 : jae 0xe45c1 ; ret
0x00000000000e45ee : jae 0xe462b ; ret
0x00000000000e471e : jae 0xe475b ; ret
0x00000000000e4791 : jae 0xe47d1 ; ret
0x00000000000e47f4 : jae 0xe47f9 ; ret
0x00000000000e4821 : jae 0xe4826 ; ret
0x00000000000e4851 : jae 0xe4856 ; ret
0x00000000000e4884 : jae 0xe4889 ; ret
0x00000000000e4e01 : jae 0xe4e41 ; ret
0x00000000000e4e71 : jae 0xe4eb1 ; ret
0x00000000000e4ed1 : jae 0xe4ed6 ; ret
0x00000000000e4f01 : jae 0xe4f06 ; ret
0x00000000000e4f31 : jae 0xe4f36 ; ret
0x00000000000e4f61 : jae 0xe4f66 ; ret
0x00000000000e4f94 : jae 0xe4f99 ; ret
0x00000000000e4fc4 : jae 0xe4fc9 ; ret
0x00000000000e4ff1 : jae 0xe4ff6 ; ret
0x00000000000e5021 : jae 0xe5026 ; ret
0x00000000000e5051 : jae 0xe5056 ; ret
0x00000000000e5081 : jae 0xe5086 ; ret
0x00000000000e5500 : jae 0xe54c0 ; adc al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000100738 : jb 0x10072b ; mov eax, 0xffffffff ; ret
0x0000000000100737 : jb 0x10072c ; mov eax, 0xffffffff ; ret
0x00000000001007cf : jb 0x10079b ; mov eax, 0xffffffff ; ret
0x00000000001007ce : jb 0x10079c ; mov eax, 0xffffffff ; ret
0x00000000001093b9 : jb 0x1093dd ; ret
0x00000000001093b3 : jb 0x1093e5 ; ja 0x1093a8 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000011ddab : jb 0x11dda0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011e58d : jb 0x11e588 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000015a4ed : jb 0x15a4f6 ; add byte ptr [rax], dl ; leave ; stc ; jmp rax
0x0000000000002b34 : jb 0x2ad4 ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x000000000002e8b2 : jb 0x2e8c3 ; ret
0x0000000000036cf6 : jb 0x36d1f ; xor eax, dword ptr [rax] ; ret
0x0000000000003876 : jb 0x38f6 ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x000000000007169c : jb 0x71695 ; lea eax, [rdx + rdi] ; ret
0x0000000000087d1b : jb 0x87d2c ; mov qword ptr [rdx], rbx ; mov rax, r10 ; pop rbx ; ret
0x000000000008fbab : jb 0x8fbbc ; mov qword ptr [rdx], rbx ; mov rax, r10 ; pop rbx ; ret
0x00000000000a49f6 : jb 0xa49c3 ; ret
0x00000000000a5b0c : jb 0xa5b23 ; jmp 0xa5b86
0x00000000000bd06d : jb 0xbcfd1 ; pop rbx ; ret
0x00000000000dc993 : jb 0xdc999 ; add byte ptr [rax], al ; syscall
0x00000000000e4d7a : jb 0xe4d83 ; ret
0x00000000000ffc03 : jb 0xffc27 ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000001089ec : jbe 0x1089f2 ; ret
0x0000000000131179 : jbe 0x131174 ; jmp rax
0x000000000004543f : jbe 0x454b5 ; xor eax, eax ; ret
0x000000000004757c : jbe 0x47577 ; nop ; mov rax, rsi ; ret
0x00000000000714b7 : jbe 0x713fb ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000088b76 : jbe 0x88bb5 ; add rax, rdi ; ret
0x0000000000088b86 : jbe 0x88bb7 ; lea rax, [rdi + rax + 0x10] ; ret
0x0000000000088b96 : jbe 0x88bb7 ; lea rax, [rdi + rax + 0x20] ; ret
0x0000000000088ba6 : jbe 0x88bb7 ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000000892d9 : jbe 0x892d3 ; ret 0x7401
0x000000000008e453 : jbe 0x8e46e ; lea rdi, [rdi + 0x10] ; jne 0x8e449 ; ret
0x00000000000b40d5 : jbe 0xb40db ; add byte ptr [rax], al ; syscall
0x00000000000d610c : jbe 0xd6113 ; ret
0x00000000000e1b5b : jbe 0xe1b99 ; mov rsi, rbx ; mov rdi, r13 ; call r14
0x00000000000f97af : jbe 0xf971f ; xor eax, eax ; pop rbx ; ret
0x00000000000fc214 : jbe 0xfc223 ; pop rbx ; ret
0x0000000000103105 : je 0x10311c ; mov eax, r13d ; syscall
0x00000000001031be : je 0x1031a3 ; ret
0x000000000010399a : je 0x1039ae ; add rsp, 8 ; ret
0x0000000000106667 : je 0x106677 ; mov rdi, rsp ; call rax
0x0000000000106b49 : je 0x106b76 ; adc byte ptr [rax - 0x77], cl ; out dx, eax ; call r14
0x0000000000106d8b : je 0x106d9b ; mov rdi, rbp ; call rax
0x000000000010718c : je 0x107192 ; ret
0x0000000000107e81 : je 0x107e91 ; mov rdi, r14 ; call rax
0x000000000010811f : je 0x10812f ; mov rdi, rbx ; call rax
0x0000000000108aa5 : je 0x108ab5 ; mov rdi, rbp ; call rdx
0x0000000000108eb7 : je 0x108fcc ; mov rdi, rbp ; call qword ptr [rbx]
0x000000000010955e : je 0x109578 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010a1ed : je 0x10a1fe ; add rsp, 0x48 ; ret
0x000000000010afea : je 0x10b000 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010b0ba : je 0x10b0d0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010be56 : je 0x10be6e ; lea rdi, [rbx + 0xc8] ; call rax
0x000000000010c90f : je 0x10c91f ; mov rdi, r12 ; call rax
0x000000000010cb57 : je 0x10cb69 ; lea rdi, [rbp + 0x10] ; call rax
0x000000000010dd99 : je 0x10dda9 ; mov rdi, rbx ; call rax
0x000000000010de72 : je 0x10de82 ; mov rdi, rbp ; call rax
0x000000000010df17 : je 0x10df27 ; mov eax, 1 ; ret
0x000000000010eba3 : je 0x10ebb5 ; lea rdi, [rbx + 0x68] ; call rax
0x000000000010f31c : je 0x10f32c ; mov rdi, r12 ; call rax
0x000000000010f743 : je 0x10f755 ; lea rdi, [rbx + 0x58] ; call rax
0x000000000011140a : je 0x1113dc ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00000000001113d3 : je 0x1113e3 ; pop rbx ; ret
0x0000000000111447 : je 0x1113f7 ; pop rbx ; ret
0x000000000011148b : je 0x11149e ; add rsp, 8 ; ret
0x0000000000111fff : je 0x11200a ; ret
0x0000000000112117 : je 0x112129 ; lea rdi, [rbp + 0x10] ; call rax
0x0000000000112870 : je 0x112882 ; lea rdi, [rbp + 0x10] ; call rax
0x0000000000113b21 : je 0x113b90 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000113bf1 : je 0x113c60 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000114365 : je 0x114390 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x0000000000114455 : je 0x114480 ; or byte ptr [rax - 0x77], cl ; ret 0x4489
0x00000000001147b8 : je 0x1147c3 ; ret
0x000000000011685c : je 0x11686c ; xor eax, eax ; ret
0x0000000000117b29 : je 0x117b34 ; xor eax, eax ; ret
0x000000000011a138 : je 0x11a147 ; xor ebx, ebx ; mov eax, ebx ; pop rbx ; ret
0x000000000011a113 : je 0x11a148 ; nop dword ptr [rax] ; mov eax, ebx ; pop rbx ; ret
0x000000000011b479 : je 0x11b486 ; add rsp, 8 ; ret
0x000000000011d75e : je 0x11d768 ; call rdx
0x000000000011d89f : je 0x11d8ae ; call rdx
0x000000000012d368 : je 0x12d333 ; xor al, 0xd8 ; ret
0x000000000012d5a7 : je 0x12d5a4 ; jmp 0x12d57e
0x000000000012e0a2 : je 0x12e06a ; ret 0xacfc
0x0000000000130fd4 : je 0x131045 ; idiv edi ; retf -0x8a4 ; call rbx
0x000000000013e708 : je 0x13e6d5 ; out dx, eax ; lcall ptr [rcx + rcx*4] ; add ah, al ; ret 0xffef
0x000000000013eb40 : je 0x13eb06 ; jmp rsp
0x000000000013eca8 : je 0x13ecab ; call rsp
0x000000000013f140 : je 0x13f0cf ; jmp rsp
0x000000000013f2c0 : je 0x13f27c ; call rsp
0x000000000013f580 : je 0x13f59f ; hlt ; call rsp
0x000000000013fa98 : je 0x13fb07 ; cmc ; jmp rsp
0x0000000000140d65 : je 0x140d6e ; add byte ptr [rdi + rsi*8 - 7], al ; call rsp
0x0000000000141a50 : je 0x141a90 ; sti ; jmp rsp
0x0000000000141dc0 : je 0x141d60 ; sti ; call rsp
0x0000000000143090 : je 0x14308b ; std ; call rsp
0x000000000014a635 : je 0x14a63d ; add al, cl ; mov dl, 0xf2 ; call qword ptr [rsi]
0x000000000014ca8c : je 0x14ca2d ; add byte ptr [rax], al ; mov al, 0x61 ; call qword ptr [rdi]
0x000000000014d68c : je 0x14d639 ; add byte ptr [rax], al ; and al, 0xf4 ; jmp qword ptr [rdi]
0x000000000015368c : je 0x153699 ; add dword ptr [rax], eax ; jo 0x1536a6 ; clc ; call rsi
0x000000000015a68d : je 0x15a696 ; add al, ah ; sar cl, 1 ; call rcx
0x000000000015a68c : je 0x15a709 ; add dword ptr [rax], eax ; loopne 0x15a669 ; stc ; call rcx
0x000000000015a705 : je 0x15a70e ; add byte ptr [rax], cl ; sar ecx, cl ; call qword ptr [rax]
0x000000000015eb8c : je 0x15eb4e ; add dword ptr [rax], eax ; mov al, 1 ; sti ; call qword ptr [rsi]
0x0000000000001c8a : je 0x1cb6 ; ret
0x0000000000022052 : je 0x22058 ; call rax
0x0000000000022092 : je 0x220a1 ; call rax
0x000000000002bb62 : je 0x2bb20 ; pop rbx ; ret
0x000000000002c1c8 : je 0x2c1d2 ; call rax
0x000000000002c597 : je 0x2c5a1 ; call rcx
0x000000000002d4bf : je 0x2d4c9 ; call rax
0x0000000000033d04 : je 0x33d2f ; adc byte ptr [rcx - 0x77], cl ; ret 0x1674
0x0000000000034c21 : je 0x34c36 ; jmp 0x34bea
0x00000000000356d6 : je 0x356c9 ; ret
0x0000000000035a96 : je 0x35a3a ; ret
0x0000000000036dab : je 0x36dbe ; add rsp, 0x10 ; ret
0x0000000000036ebd : je 0x36ece ; add rsp, 0x10 ; ret
0x000000000005c687 : je 0x58b7f ; jmp 0x588c0
0x0000000000069802 : je 0x69818 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000006a01e : je 0x6a02b ; ret
0x000000000006d2c4 : je 0x6d2d6 ; mov rax, rdx ; pop rbx ; ret
0x0000000000070c2d : je 0x70c7e ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000070c2c : je 0x70c7f ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000070c3f : je 0x70c90 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000070c3e : je 0x70c91 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000710b4 : je 0x710c3 ; pop rbx ; ret
0x0000000000071605 : je 0x71610 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000071645 : je 0x71650 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000071b04 : je 0x71b16 ; add rsp, 8 ; ret
0x0000000000075b24 : je 0x75b36 ; mov rax, rdx ; pop rbx ; ret
0x0000000000075f6d : je 0x75f7b ; ret
0x00000000000760a1 : je 0x760ab ; ret
0x00000000000763e0 : je 0x763f7 ; mov eax, 0xffffffff ; ret
0x0000000000076cb3 : je 0x76c59 ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000076d57 : je 0x76d63 ; pop rbx ; ret
0x000000000007874d : je 0x7873e ; nop ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000000795fb : je 0x795b4 ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000796d3 : je 0x79684 ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000797ed : je 0x797fb ; pop rbx ; ret
0x0000000000079dcc : je 0x79dd7 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000007b6d4 : je 0x7b508 ; ret
0x000000000007b5fa : je 0x7b610 ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000007c265 : je 0x7c276 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007c399 : je 0x7c3a3 ; call rdx
0x000000000007de7f : je 0x7de98 ; mov qword ptr [rsp + 0x28], rdx ; call rax
0x0000000000080540 : je 0x8056c ; sub byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x00000000000809d1 : je 0x809db ; call rax
0x0000000000081b90 : je 0x81b9a ; ret
0x0000000000081bad : je 0x81bbc ; pop rbx ; ret
0x0000000000081bfb : je 0x81c03 ; ret
0x0000000000082394 : je 0x82466 ; call rax
0x00000000000824de : je 0x825c6 ; call rax
0x000000000008266f : je 0x826c0 ; mov rsi, r12 ; mov rdi, rbx ; call rax
0x00000000000831ec : je 0x831f2 ; ret
0x000000000008538f : je 0x853c0 ; movsx edx, sil ; mov eax, edx ; ret
0x00000000000854ba : je 0x854c7 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008571f : je 0x85729 ; bsf eax, edx ; ret
0x000000000008571f : je 0x8572a ; bsf eax, edx ; ret
0x00000000000857d4 : je 0x857e5 ; bsf rax, rdx ; ret
0x00000000000857d4 : je 0x857e6 ; bsf rax, rdx ; ret
0x000000000008576c : je 0x857f9 ; bsf rax, rdx ; ret
0x00000000000859d3 : je 0x859f5 ; bsf rax, rdx ; ret
0x00000000000859d3 : je 0x859f6 ; bsf rax, rdx ; ret
0x000000000008595b : je 0x85a09 ; bsf rax, rdx ; ret
0x0000000000085b9b : je 0x85b5f ; mov byte ptr [r10 + 1], 0 ; ret
0x0000000000088a6c : je 0x88ac3 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000008e3b1 : je 0x8e3c9 ; cmp rsi, rcx ; jne 0x8e3a9 ; xor eax, eax ; ret
0x000000000008ffd0 : je 0x8fffb ; sub byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000903ea : je 0x90441 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000904a5 : je 0x904b9 ; bsf eax, eax ; lea rax, [rdi + rax] ; ret
0x00000000000909f0 : je 0x90a06 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009380a : je 0x93803 ; ret
0x000000000009382e : je 0x93823 ; ret
0x000000000009382a : je 0x93827 ; cmp ecx, edx ; je 0x93827 ; ret
0x0000000000093866 : je 0x93853 ; ret
0x0000000000093861 : je 0x93858 ; cmp r8d, ecx ; je 0x93858 ; ret
0x000000000009388d : je 0x938a9 ; cmp eax, esi ; jne 0x93889 ; mov rax, rdi ; ret
0x0000000000093dfc : je 0x93dd8 ; bsr eax, eax ; add rax, rdi ; ret
0x0000000000094609 : je 0x945be ; movzx eax, dl ; pop rbx ; ret
0x00000000000945d9 : je 0x945c0 ; movzx eax, cl ; pop rbx ; ret
0x0000000000094609 : je 0x945c0 ; movzx eax, dl ; pop rbx ; ret
0x0000000000094781 : je 0x947a3 ; pop rbx ; ret
0x00000000000947ef : je 0x947d3 ; ret
0x000000000009477f : je 0x947ef ; je 0x947a5 ; pop rbx ; ret
0x000000000009483f : je 0x9481b ; ret
0x000000000009575b : je 0x95749 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000959a9 : je 0x959c9 ; mov cl, dl ; and cl, 0xf ; je 0x959d9 ; ret
0x00000000000959b0 : je 0x959d2 ; ret
0x00000000000959c5 : je 0x959e6 ; add rax, 2 ; ret
0x0000000000095b22 : je 0x95ae9 ; mov dword ptr [rsi + 4], 0 ; ret
0x0000000000095ba2 : je 0x95b61 ; nop dword ptr [rax] ; sub eax, r8d ; ret
0x0000000000095ff6 : je 0x96066 ; lea rax, [rdi - 0x10] ; ret
0x00000000000962df : je 0x96308 ; cmp dword ptr [rdi + 8], esi ; jne 0x96308 ; ret
0x0000000000098349 : je 0x98353 ; mov edx, eax ; jmp 0x9831b
0x000000000009a999 : je 0x9a9a3 ; mov edx, eax ; jmp 0x9a96b
0x000000000009cf19 : je 0x9cf23 ; mov edx, eax ; jmp 0x9ceeb
0x000000000009f635 : je 0x9f643 ; ret
0x00000000000a1970 : je 0xa19a3 ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000a322c : je 0xa325a ; mov rax, qword ptr [rsp + 0x38] ; call rax
0x00000000000a618f : je 0xa619c ; mov eax, ecx ; ret
0x00000000000adf37 : je 0xadf44 ; xor eax, eax ; ret
0x00000000000ae3b5 : je 0xae3df ; or al, ch ; ret
0x00000000000ae706 : je 0xae730 ; or al, ch ; ret 0xf70c
0x00000000000afe6f : je 0xafe75 ; add byte ptr [rax], al ; syscall
0x00000000000b2e6e : je 0xb2e78 ; call rax
0x00000000000b3013 : je 0xb3021 ; call rdx
0x00000000000b309b : je 0xb30a9 ; call rax
0x00000000000b47d0 : je 0xb4807 ; mov eax, 1 ; ret
0x00000000000b486b : je 0xb4861 ; mov rax, -1 ; ret
0x00000000000bb808 : je 0xbb814 ; xor eax, eax ; ret
0x00000000000bcedb : je 0xbcf2c ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000bd048 : je 0xbcfd2 ; pop rbx ; nop ; ret
0x00000000000bd128 : je 0xbd136 ; add rsp, 8 ; ret
0x00000000000bdc4c : je 0xbdc53 ; ret
0x00000000000bdd3e : je 0xbdd4c ; xor eax, eax ; ret
0x00000000000bdd3a : je 0xbdda8 ; cmp al, 0x11 ; je 0xbdd50 ; xor eax, eax ; ret
0x00000000000be2ac : je 0xbe2c0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c0298 : je 0xc025a ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cc4e3 : je 0xcc538 ; ret
0x00000000000cfa86 : je 0xcfa93 ; ret
0x00000000000d1f39 : je 0xd1f13 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d5356 : je 0xd5362 ; mov byte ptr [rdi], 0 ; xor eax, eax ; ret
0x00000000000d5656 : je 0xd5662 ; mov byte ptr [rdi], 0 ; xor eax, eax ; ret
0x00000000000d57ee : je 0xd57fb ; ret
0x00000000000d95dc : je 0xd9618 ; mov qword ptr [rbx], rax ; xor eax, eax ; pop rbx ; ret
0x00000000000dcb42 : je 0xdcb49 ; ret
0x00000000000de847 : je 0xde852 ; mov qword ptr [rax], rdx ; ret
0x00000000000de912 : je 0xde907 ; mov byte ptr [r9 - 1], 0 ; ret
0x00000000000dfe9c : je 0xdfead ; mov dword ptr [rip + 0x28934c], edi ; ret
0x00000000000e0e97 : je 0xe0e9e ; pop rbx ; ret
0x00000000000e2486 : je 0xe253e ; call rax
0x00000000000e2621 : je 0xe273e ; call rax
0x00000000000e355a : je 0xe355f ; ret
0x00000000000e3559 : je 0xe3560 ; ret
0x00000000000e44f1 : je 0xe451f ; or byte ptr [rcx - 0x17e7db84], cl ; ret
0x00000000000e5cf1 : je 0xe5d02 ; add eax, 1 ; mov word ptr [rdx], ax ; ret
0x00000000000e5c91 : je 0xe5d12 ; add eax, 1 ; mov dword ptr [rdx], eax ; ret
0x00000000000e8c76 : je 0xe8c86 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e8cae : je 0xe8cd0 ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000000ec5e9 : je 0xec5f4 ; xor eax, eax ; ret
0x00000000000eeed7 : je 0xeeee7 ; mov eax, 7 ; ret
0x00000000000eeef1 : je 0xeef19 ; mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x00000000000eef04 : je 0xeef74 ; xor eax, eax ; pop rbx ; ret
0x00000000000eff51 : je 0xeff5b ; ret
0x00000000000f07ed : je 0xf07f2 ; ret
0x00000000000f0851 : je 0xf0856 ; ret
0x00000000000f0c7e : je 0xf0c8b ; ret
0x00000000000f2f54 : je 0xf2f66 ; add rsp, 8 ; ret
0x00000000000fc233 : je 0xfc243 ; mov rdi, rbx ; call rax
0x00000000000ffa5f : je 0xffa53 ; pop rbx ; ret
0x00000000000ffba3 : je 0xffb33 ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000000ffc63 : je 0xffc50 ; mov eax, 0xffffffff ; ret
0x00000000000ffc62 : je 0xffc51 ; mov eax, 0xffffffff ; ret
0x000000000010cde6 : jg 0x10ce30 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x10cdf8 ; ret
0x0000000000112386 : jg 0x1123d0 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x112398 ; ret
0x000000000014e4d9 : jg 0x14e4d1 ; call qword ptr [rsi]
0x0000000000160ef1 : jg 0x160ef0 ; jmp qword ptr [rax]
0x0000000000162aa4 : jg 0x162ab1 ; add byte ptr [rax], al ; ret
0x0000000000001ae0 : jg 0x1b3d ; mov edx, 0x855233da ; mov bl, 0x5a ; ret 0x2a63
0x000000000001fb79 : jg 0x1fb0b ; add cl, byte ptr [rax - 0x7d] ; ret 0x8304
0x000000000003524f : jg 0x352a1 ; sub eax, edx ; shr rax, 0x3f ; ret
0x00000000000356d4 : jg 0x356da ; je 0x356cb ; ret
0x00000000000358ce : jg 0x358d4 ; add byte ptr [rcx], cl ; ret 0xd089
0x0000000000035869 : jg 0x358ea ; or cl, byte ptr [rdi] ; push rdi ; fisttp dword ptr [rdi] ; ret
0x0000000000035a92 : jg 0x35adf ; or ecx, eax ; je 0x35a3e ; ret
0x000000000003621a : jg 0x36220 ; add byte ptr [rax], al ; syscall
0x00000000000450df : jg 0x4514d ; xor eax, eax ; ret
0x00000000000451ee : jg 0x451ab ; ret
0x000000000006b5ac : jg 0x6b53e ; add cl, byte ptr [rax - 0x7d] ; ret 0x8304
0x0000000000075f6a : jg 0x75f8a ; add byte ptr [rcx + rcx - 0xd], dh ; ret
0x000000000007609b : jg 0x76029 ; inc byte ptr [rdx] ; mov dword ptr [rdi], edx ; je 0x760b1 ; ret
0x00000000000797e7 : jg 0x7982a ; add byte ptr [rax - 0x77], cl ; sti ; je 0x79801 ; pop rbx ; ret
0x0000000000089347 : jg 0x89360 ; jne 0x89337 ; mov rax, rdi ; ret
0x000000000008e457 : jg 0x8e46e ; jne 0x8e445 ; ret
0x000000000008f9d8 : jg 0x8f9c3 ; ret
0x00000000000928d9 : jg 0x928c5 ; or byte ptr [rdi], sil ; ret
0x0000000000094584 : jg 0x945c1 ; ret 0x2f77
0x00000000000956d5 : jg 0x956dd ; neg eax ; ret
0x00000000000963a8 : jg 0x96397 ; ret
0x00000000000b4561 : jg 0xb4567 ; add byte ptr [rax], al ; ret
0x00000000000cfaf9 : jg 0xcfb18 ; add byte ptr [rax], al ; add byte ptr [rcx], al ; jne 0xcfb11 ; ret
0x00000000000f0896 : jg 0xf08a2 ; call qword ptr [rax]
0x00000000000fea0b : jg 0xfe9f7 ; mov eax, 0xffffffff ; ret
0x00000000001009e4 : jge 0x1009f1 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010a985 : jge 0x10a98c ; add byte ptr [rax - 0x77], cl ; ret 0x850f
0x000000000010cb5b : jge 0x10cb6f ; call rax
0x000000000011211b : jge 0x11212f ; call rax
0x0000000000112874 : jge 0x112888 ; call rax
0x00000000001479d9 : jge 0x1479cd ; call qword ptr [rsi]
0x0000000000045d08 : jge 0x45d5a ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000000909ed : jge 0x909f8 ; add byte ptr [rsi + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x0000000000093cdf : jge 0x93ce7 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000096a37 : jge 0x96a3c ; call r12
0x00000000000a23e9 : jge 0xa23ee ; call r12
0x00000000000af76a : jge 0xaf707 ; call r14
0x00000000000bd6f6 : jge 0xbd6cd ; mov edx, eax ; jmp 0xbd6d6
0x00000000000be807 : jge 0xbe7e6 ; mov rdx, r8 ; jmp 0xbe81a
0x00000000000e1607 : jge 0xe15d2 ; mov r15d, r14d ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000000e2bb6 : jge 0xe2b63 ; mov eax, 3 ; syscall
0x00000000000e3a25 : jge 0xe3a2b ; add byte ptr [rax], al ; syscall
0x0000000000104c3e : jl 0x104c6d ; or byte ptr [rbp - 0x1b], dh ; add rsp, 0x18 ; ret
0x000000000013e309 : jl 0x13e2fc ; jmp rsp
0x0000000000141e5c : jl 0x141e33 ; add dword ptr [rax], eax ; mov ah, 0xb7 ; sti ; jmp rsp
0x0000000000142e6c : jl 0x142ea9 ; add al, byte ptr [rax] ; ret 0xfffd
0x0000000000142fdc : jl 0x143023 ; add al, byte ptr [rax] ; xchg eax, esp ; out dx, al ; std ; jmp rsp
0x000000000014308c : jl 0x143084 ; add dword ptr [rax], eax ; je 0x14308f ; std ; call rsp
0x0000000000144894 : jl 0x1448b3 ; add byte ptr [rax], al ; pop rax ; movsd dword ptr [rdi], dword ptr [rsi] ; out dx, al ; call qword ptr [rsi]
0x0000000000149899 : jl 0x14988f ; call rcx
0x0000000000149894 : jl 0x149903 ; add byte ptr [rax], al ; pop rax ; jl 0x149894 ; call rcx
0x0000000000151494 : jl 0x15147f ; add byte ptr [rax], al ; cmp byte ptr [rbp - 0xa], ch ; call qword ptr [rdi]
0x000000000015a994 : jl 0x15aa14 ; add dword ptr [rax], eax ; or bh, bl ; stc ; jmp rax
0x000000000015b794 : jl 0x15b722 ; add dword ptr [rax], eax ; test al, 0x42 ; cli ; jmp qword ptr [rbx]
0x000000000015f694 : jl 0x15f661 ; add dword ptr [rax], eax ; call 0x2415f1cd
0x000000000000259b : jl 0x252e ; loop 0x2579 ; ret 0x23cb
0x00000000000253a7 : jl 0x253d4 ; mov dword ptr [rsp + 8], eax ; call rbx
0x00000000000254a1 : jl 0x254cf ; mov dword ptr [rsp + 8], eax ; call r14
0x0000000000025798 : jl 0x257c5 ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000025c87 : jl 0x25cb5 ; mov dword ptr [rsp + 8], eax ; call r15
0x0000000000025dfb : jl 0x25e29 ; mov dword ptr [rsp + 8], eax ; call r14
0x000000000002610c : jl 0x26139 ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000026644 : jl 0x26672 ; mov dword ptr [rsp + 8], eax ; call r14
0x000000000002676d : jl 0x2679b ; mov dword ptr [rsp + 8], eax ; call r14
0x0000000000026e73 : jl 0x26ea0 ; pop rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000027414 : jl 0x2743d ; call rax
0x000000000002740f : jl 0x2743d ; or byte ptr [rax - 0x75], cl ; jl 0x27442 ; call rax
0x0000000000027a14 : jl 0x27a41 ; mov qword ptr [rsp + 8], rax ; call rbx
0x000000000002817b : jl 0x281a9 ; push rax ; mov dword ptr [rsp + 8], eax ; call r12
0x000000000002894a : jl 0x28978 ; push rax ; mov dword ptr [rsp + 8], eax ; call r15
0x0000000000029199 : jl 0x291c7 ; mov dword ptr [rsp + 8], eax ; call r14
0x0000000000029519 : jl 0x29547 ; pop rax ; mov dword ptr [rsp + 8], eax ; call r15
0x000000000002993f : jl 0x2996c ; pop rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000002a1ac : jl 0x2a1da ; mov dword ptr [rsp + 8], eax ; call r14
0x000000000002a541 : jl 0x2a56f ; pop rax ; mov dword ptr [rsp + 8], eax ; call r15
0x000000000002a961 : jl 0x2a98e ; pop rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000035b65 : jl 0x35b8f ; adc al, ch ; ret
0x0000000000036290 : jl 0x362be ; or byte ptr [rax + 0x82], bh ; syscall
0x000000000000042a : jl 0x440 ; sbb al, 0xc ; ret 0x4412
0x000000000004dc9c : jl 0x4dc66 ; clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000000519fc : jl 0x51a20 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000007de50 : jl 0x7de7c ; sub byte ptr [rcx + rcx*4 - 1], cl ; call qword ptr [rax]
0x0000000000093d6a : jl 0x93dd5 ; add rax, rdi ; ret
0x0000000000093d7a : jl 0x93dd7 ; lea rax, [rdi + rax + 0x10] ; ret
0x0000000000093d9a : jl 0x93dd7 ; lea rax, [rdi + rax + 0x20] ; ret
0x0000000000093dba : jl 0x93dd7 ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000000a9d83 : jl 0xa9dd2 ; ror byte ptr [rax - 0x7d], 1 ; ret
0x00000000000b2b00 : jl 0xb2b2c ; or al, 0x4c ; movsxd rdx, ecx ; syscall
0x00000000000b4075 : jl 0xb407b ; add byte ptr [rax], al ; syscall
0x00000000000bce16 : jl 0xbce50 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bd56c : jl 0xbd58b ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000000bdd27 : jl 0xbdd1e ; nop dword ptr [rax - 0x45] ; ret
0x00000000000bfc41 : jl 0xbfc6f ; and byte ptr [rcx + rcx*4 - 1], cl ; call 0xbbf28
0x00000000000d1bda : jl 0xd1c05 ; sub byte ptr [rax - 0x7d], cl ; ret 0x4d01
0x00000000000d69b7 : jl 0xd69e5 ; sbb byte ptr [rax + 0x101], bh ; syscall
0x00000000000d6fa3 : jl 0xd6fcd ; or al, 0x89 ; ret
0x00000000000dc6ce : jl 0xdc6fc ; or byte ptr [rax + 0x13], bh ; syscall
0x00000000000dc76e : jl 0xdc79c ; or byte ptr [rax + 0x14], bh ; syscall
0x00000000000e143e : jl 0xe146c ; adc byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x00000000000e3558 : jl 0xe35a5 ; je 0xe3561 ; ret
0x00000000000e44f5 : jl 0xe451f ; sbb al, ch ; ret
0x00000000000e4519 : jl 0xe4547 ; sbb byte ptr [rcx - 0x2e9cb328], cl ; syscall
0x00000000000e46b9 : jl 0xe46e7 ; sbb byte ptr [rcx - 0x2e9cb328], cl ; syscall
0x00000000000e4b6d : jl 0xe4b9b ; sbb byte ptr [rcx - 0x2e9cb328], cl ; syscall
0x00000000000e4c29 : jl 0xe4c55 ; add al, 0x4c ; movsxd rdx, ecx ; syscall
0x00000000000e4cdd : jl 0xe4d0b ; or al, 0x89 ; fmul dword ptr [rbx - 0x2f] ; syscall
0x00000000001110e4 : jle 0x1110f8 ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000001166da : jle 0x115f02 ; jmp 0x1166ac
0x0000000000022191 : jle 0x22185 ; mov byte ptr [rdi], 0 ; ret
0x000000000002bb72 : jle 0x2bb85 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00000000000710b1 : jle 0x710e9 ; add byte ptr [rdx + rcx + 0x5b], dh ; ret
0x000000000008576e : jle 0x85777 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000008576e : jle 0x85778 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000096392 : jle 0x96387 ; mov eax, 1 ; ret
0x00000000000b3d81 : jle 0xb3d88 ; ret
0x00000000000b4631 : jle 0xb4637 ; add byte ptr [rax], al ; ret
0x00000000000bcff9 : jle 0xbcff3 ; ret 0x7408
0x00000000000e3a55 : jle 0xe3a5b ; add byte ptr [rax], al ; syscall
0x00000000000a1383 : jmp 0x100a0b71
0x0000000000101706 : jmp 0x1016cb
0x000000000010515a : jmp 0x105141
0x00000000000d53d6 : jmp 0x1085df29
0x000000000010959d : jmp 0x109563
0x000000000010c9b4 : jmp 0x10c97a
0x00000000001166e0 : jmp 0x1166a6
0x000000000011b22d : jmp 0x11b1f3
0x000000000011d7d3 : jmp 0x11d799
0x000000000012c86a : jmp 0x12c8a9
0x000000000012d5a9 : jmp 0x12d57c
0x000000000012e5a0 : jmp 0x12e534
0x000000000012e59f : jmp 0x12e535
0x0000000000021639 : jmp 0x215f8
0x0000000000025436 : jmp 0x253fb
0x0000000000025a52 : jmp 0x25628
0x000000000002c9af : jmp 0x2c8c2
0x000000000002d7ee : jmp 0x2d800
0x00000000000328eb : jmp 0x315bb
0x00000000000337b3 : jmp 0x33778
0x00000000000341e3 : jmp 0x341a8
0x0000000000034c23 : jmp 0x34be8
0x00000000000363f9 : jmp 0x363be
0x0000000000036f69 : jmp 0x36f2e
0x000000000000383f : jmp 0x3805
0x000000000003a396 : jmp 0x3a288
0x000000000003a822 : jmp 0x3a768
0x000000000003e4ce : jmp 0x3dced
0x000000000003e55c : jmp 0x3df20
0x000000000003f924 : jmp 0x3f8e9
0x0000000000040cd8 : jmp 0x40543
0x0000000000040d62 : jmp 0x4078e
0x0000000000041bd6 : jmp 0x41b9b
0x0000000000045716 : jmp 0x45764
0x0000000000047006 : jmp 0x47054
0x00000000000a6db6 : jmp 0x48ccf706
0x00000000000a7f4d : jmp 0x48cd089d
0x00000000000a7fe1 : jmp 0x48cd0931
0x00000000000a807a : jmp 0x48cd09ca
0x00000000000a8d63 : jmp 0x48cd16b3
0x0000000000041a45 : jmp 0x48f4a399
0x000000000006ef4a : jmp 0x48f5789d
0x00000000000e146d : jmp 0x49049dc4
0x00000000000a9048 : jmp 0x49cd1998
0x00000000000a909a : jmp 0x49cd19ea
0x00000000000a92aa : jmp 0x49cd1bfa
0x0000000000049d23 : jmp 0x49ce9
0x000000000004c64a : jmp 0x4c60f
0x000000000003691d : jmp 0x4c65f28
0x000000000004ea7a : jmp 0x4cc773ca
0x000000000008f521 : jmp 0x4ccb7e75
0x00000000000a7488 : jmp 0x4cccfdd8
0x00000000000a7520 : jmp 0x4cccfe70
0x00000000000a75ad : jmp 0x4cccfefd
0x00000000000a8199 : jmp 0x4ccd0ae9
0x00000000000a862d : jmp 0x4ccd0f7d
0x00000000000a8dd2 : jmp 0x4ccd1722
0x00000000000c9f0d : jmp 0x4ccf285d
0x00000000000c1196 : jmp 0x4cf07a1
0x00000000000c87ea : jmp 0x4cf7df5
0x00000000000d5330 : jmp 0x4d0493b
0x00000000000d5630 : jmp 0x4d04c3b
0x00000000000d96fc : jmp 0x4d08d07
0x000000000011bbd5 : jmp 0x4d4b1e0
0x0000000000056fe4 : jmp 0x5328d
0x0000000000055353 : jmp 0x55319
0x0000000000055783 : jmp 0x55778
0x000000000005ad9e : jmp 0x5812d
0x000000000005c68d : jmp 0x588ba
0x000000000005c6c1 : jmp 0x588dd
0x0000000000063699 : jmp 0x61288
0x0000000000066187 : jmp 0x62476
0x0000000000065d9a : jmp 0x650a5
0x00000000000651e1 : jmp 0x651a7
0x000000000006f6cc : jmp 0x6f691
0x0000000000074cc0 : jmp 0x74c86
0x000000000007cd7a : jmp 0x7c79a
0x000000000007d858 : jmp 0x7d81d
0x000000000007ed81 : jmp 0x7ebb4
0x000000000007f056 : jmp 0x7f082
0x000000000007f40d : jmp 0x7f3b3
0x000000000007f53e : jmp 0x7f56d
0x000000000007f58e : jmp 0x7f5ba
0x000000000007f5fa : jmp 0x7f5c0
0x000000000008222c : jmp 0x821f2
0x0000000000082c1a : jmp 0x82bdf
0x0000000000082dfd : jmp 0x82e29
0x0000000000083b0c : jmp 0x83ad2
0x0000000000083c68 : jmp 0x83c2d
0x00000000000854f8 : jmp 0x854bd
0x000000000008ff21 : jmp 0x8fe10
0x00000000000904fc : jmp 0x904c2
0x0000000000090648 : jmp 0x9060d
0x0000000000090816 : jmp 0x907db
0x00000000000a5b0e : jmp 0xa5b84
0x00000000000b1bb6 : jmp 0xb1be2
0x00000000000b979b : jmp 0xb9761
0x00000000000ba4d4 : jmp 0xba521
0x00000000000bbc87 : jmp 0xbbc4c
0x00000000000bfa05 : jmp 0xbf9ca
0x00000000000cb808 : jmp 0xcb0c3
0x00000000000d7624 : jmp 0xd75ea
0x00000000000d78fb : jmp 0xd78c1
0x00000000000daf9d : jmp 0xdaf3a
0x00000000000dc25b : jmp 0xdc214
0x00000000000dcdf3 : jmp 0xdcdb9
0x00000000000dd2db : jmp 0xdd2a0
0x00000000000e1b13 : jmp 0xe1ad8
0x00000000000ea386 : jmp 0xea09a
0x00000000000e3b78 : jmp 0xf0e3b81
0x00000000000f4089 : jmp 0xf404f
0x00000000000f5ea6 : jmp 0xf5c59
0x00000000000f6286 : jmp 0xf6059
0x00000000000f6e25 : jmp 0xf6e53
0x00000000000fd9cd : jmp 0xffffffff895c9c5d
0x00000000000c1b66 : jmp 0xffffffffc24611a0
0x0000000000003126 : jmp 0xffffffffc25d05d2
0x00000000000955e3 : jmp 0xffffffffc30955ec
0x0000000000045e25 : jmp 0xffffffffc313e77a
0x000000000007b636 : jmp 0xffffffffc3910340
0x00000000000f1bae : jmp 0xffffffffc3dfa503
0x00000000000f19de : jmp 0xffffffffc407a32f
0x000000000005b015 : jmp 0xfffffffffa89b022
0x0000000000110688 : jmp 0xffffffffffef8fd9
0x00000000000971f3 : jmp 0xfffffffffff8fb44
0x0000000000097506 : jmp 0xfffffffffff8fe57
0x0000000000043607 : jmp qword ptr [r8]
0x000000000011e70b : jmp qword ptr [rax + 0x3e]
0x000000000013157b : jmp qword ptr [rax - 0x1d000844]
0x0000000000043608 : jmp qword ptr [rax]
0x000000000012f85b : jmp qword ptr [rbx - 0x1e000001]
0x000000000000251f : jmp qword ptr [rbx]
0x00000000001431b3 : jmp qword ptr [rcx + 0x4a40002]
0x000000000013f393 : jmp qword ptr [rcx + rbx*8]
0x000000000013e723 : jmp qword ptr [rcx + rcx*4 - 0x3c6c0000]
0x00000000000f4c26 : jmp qword ptr [rcx]
0x00000000000e8e93 : jmp qword ptr [rdi]
0x0000000000131fb7 : jmp qword ptr [rdx - 0x3c0006b3]
0x000000000010515f : jmp qword ptr [rdx]
0x000000000003bc09 : jmp qword ptr [rsi + 0xf]
0x00000000000f8ed0 : jmp qword ptr [rsi]
0x0000000000001b36 : jmp r10
0x00000000000c91ca : jmp r11
0x000000000002cee3 : jmp r8
0x000000000002cee4 : jmp rax
0x00000000000c91cb : jmp rbx
0x000000000012f85f : jmp rcx
0x000000000010e761 : jmp rdi
0x0000000000001b37 : jmp rdx
0x0000000000060cad : jmp rsi
0x0000000000002a25 : jmp rsp
0x00000000001001a7 : jne 0x10018c ; ret
0x0000000000103e22 : jne 0x103e2a ; ret
0x0000000000103e68 : jne 0x103e58 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000104c41 : jne 0x104c2e ; add rsp, 0x18 ; ret
0x00000000001084c5 : jne 0x1084f0 ; mov dword ptr [rsi], 0 ; ret
0x0000000000108cf5 : jne 0x108d08 ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x0000000000108e19 : jne 0x108daf ; xor eax, eax ; pop rbx ; ret
0x0000000000109595 : jne 0x1095f8 ; mov al, 1 ; mov qword ptr [rbp + 0x68], rcx ; jmp 0x10956b
0x0000000000109c1e : jne 0x109bfd ; xor eax, eax ; pop rbx ; ret
0x0000000000109c90 : jne 0x109c70 ; mov eax, 1 ; pop rbx ; ret
0x000000000010ada4 : jne 0x10ad93 ; ret
0x000000000010cdec : jne 0x10cdf2 ; ret
0x0000000000112063 : jne 0x11204b ; pop rbx ; ret
0x000000000011238c : jne 0x112392 ; ret
0x0000000000113a53 : jne 0x113a3f ; mov rax, qword ptr [rdi + 8] ; call qword ptr [rax]
0x0000000000114e9b : jne 0x114ea2 ; ret
0x0000000000114edb : jne 0x114ee2 ; ret
0x000000000011c341 : jne 0x11c356 ; add rsp, 0x38 ; ret
0x000000000011d0be : jne 0x11d0ca ; ret
0x000000000011d100 : jne 0x11d10a ; ret
0x000000000011d140 : jne 0x11d14a ; ret
0x000000000011d17e : jne 0x11d18a ; ret
0x000000000011d1c0 : jne 0x11d1ca ; ret
0x000000000011d200 : jne 0x11d20a ; ret
0x000000000011d245 : jne 0x11d264 ; mov eax, 0x27 ; syscall
0x000000000011da39 : jne 0x11da26 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011da94 : jne 0x11da68 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011dc19 : jne 0x11dc05 ; pop rbx ; ret
0x000000000011dced : jne 0x11dcb7 ; add rsp, 8 ; ret
0x000000000011dedc : jne 0x11dee2 ; ret
0x000000000011dfd5 : jne 0x11dfc4 ; pop rbx ; ret
0x000000000011e5e5 : jne 0x11e5f3 ; pop rbx ; ret
0x000000000013e2ad : jne 0x13e2b5 ; add byte ptr [rcx + rdi*2 - 0x11], al ; call rsp
0x0000000000143175 : jne 0x14317e ; add ah, dh ; add esi, edi ; call rsp
0x000000000002f457 : jne 0x2f466 ; add rsp, 0x18 ; ret
0x000000000002f497 : jne 0x2f4a6 ; add rsp, 0x18 ; ret
0x00000000000317ec : jne 0x31867 ; adc dword ptr [rbp - 0x77], eax ; ret 0x8341
0x000000000003453c : jne 0x3451a ; ret
0x000000000003555b : jne 0x3556e ; add rsp, 8 ; ret
0x0000000000035846 : jne 0x35856 ; add rsp, 8 ; ret
0x0000000000035dac : jne 0x35db2 ; ret
0x0000000000035ea8 : jne 0x35ee7 ; mov eax, 0xba ; syscall
0x000000000003692f : jne 0x3693c ; xor eax, eax ; ret
0x000000000003692a : jne 0x36949 ; and edx, 1 ; jne 0x36941 ; xor eax, eax ; ret
0x0000000000036c28 : jne 0x36c1f ; mov eax, 1 ; ret
0x0000000000036c7f : jne 0x36c6c ; xor eax, eax ; ret
0x0000000000036ccf : jne 0x36cbc ; xor eax, eax ; ret
0x000000000003922f : jne 0x3923b ; pop rbx ; ret
0x000000000003ab65 : jne 0x3ab9e ; add rsp, 8 ; ret
0x000000000003d405 : jne 0x3d43e ; add rsp, 8 ; ret
0x000000000003fc85 : jne 0x3fcbe ; add rsp, 8 ; ret
0x0000000000043076 : jne 0x4304f ; ret
0x00000000000445b8 : jne 0x445b9 ; nop word ptr [rax + rax] ; pop rbx ; ret
0x00000000000445fd : jne 0x445f3 ; pop rbx ; ret
0x000000000004549f : jne 0x45494 ; xor eax, eax ; ret
0x00000000000454c5 : jne 0x454af ; mov eax, 1 ; ret
0x000000000004557f : jne 0x45574 ; xor eax, eax ; ret
0x00000000000455a5 : jne 0x4558f ; mov eax, 1 ; ret
0x0000000000045847 : jne 0x45836 ; mov rax, rdx ; ret
0x0000000000045f17 : jne 0x45f0e ; mov rax, rdx ; ret
0x0000000000047353 : jne 0x47338 ; lea rax, [rbp + 2] ; mov rdx, r8 ; jmp 0x47379
0x00000000000477d9 : jne 0x477c5 ; mov rax, rsi ; ret
0x0000000000047855 : jne 0x47835 ; mov rax, rsi ; ret
0x000000000005700b : jne 0x5556d ; jmp 0x53293
0x0000000000056fde : jne 0x55890 ; jmp 0x53293
0x000000000006987d : jne 0x6988e ; mov rax, rbx ; pop rbx ; ret
0x0000000000070b61 : jne 0x70b53 ; ret
0x0000000000073de0 : jne 0x73df9 ; mov eax, dword ptr [rdi + 0xc0] ; pop rbx ; ret
0x00000000000769fa : jne 0x76a0e ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007876d : jne 0x7877b ; pop rbx ; ret
0x0000000000078ecb : jne 0x78ee0 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000079165 : jne 0x79198 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000079269 : jne 0x7925b ; ret
0x0000000000079e2e : jne 0x79e11 ; pop rbx ; ret
0x0000000000079e6c : jne 0x79e65 ; lea eax, [rdx + rdi] ; ret
0x000000000007a68e : jne 0x7a683 ; ret
0x000000000007ba25 : jne 0x7ba19 ; mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007f054 : jne 0x7f066 ; jmp 0x7f084
0x000000000007f5f4 : jne 0x7f489 ; jmp 0x7f5c6
0x000000000007f53c : jne 0x7f551 ; jmp 0x7f56f
0x000000000007f58c : jne 0x7f59e ; jmp 0x7f5bc
0x0000000000082dfb : jne 0x82e0d ; jmp 0x82e2b
0x00000000000837c1 : jne 0x837b4 ; xor eax, eax ; ret
0x0000000000083844 : jne 0x8386b ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008388b : jne 0x83883 ; ret
0x00000000000858b7 : jne 0x858c2 ; xor rax, rax ; ret
0x0000000000085b52 : jne 0x85b1f ; nop dword ptr [rax] ; ret
0x00000000000874a2 : jne 0x8749b ; ret
0x00000000000874d9 : jne 0x874c3 ; ret
0x0000000000088b29 : jne 0x88b85 ; xor rax, rax ; ret
0x0000000000088ae9 : jne 0x88ba9 ; xor rax, rax ; ret
0x000000000008927e : jne 0x89263 ; ret
0x00000000000893f3 : jne 0x892e3 ; mov rax, rdi ; ret
0x0000000000089349 : jne 0x89335 ; mov rax, rdi ; ret
0x00000000000897de : jne 0x897d6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008987d : jne 0x89876 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000089a64 : jne 0x89a5e ; sub rax, 1 ; ret
0x0000000000089a7e : jne 0x89a90 ; ret
0x000000000008e3b6 : jne 0x8e3a4 ; xor eax, eax ; ret
0x000000000008e518 : jne 0x8e3f4 ; ret
0x000000000008e459 : jne 0x8e443 ; ret
0x000000000008faf3 : jne 0x8faeb ; ret
0x0000000000090762 : jne 0x90749 ; pop rbx ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x0000000000090814 : jne 0x90827 ; jmp 0x907dd
0x000000000009115c : jne 0x910fc ; mov rax, rdi ; ret
0x0000000000091115 : jne 0x9110c ; xor eax, eax ; ret
0x0000000000091140 : jne 0x9115e ; mov rax, rdi ; ret
0x000000000009372e : jne 0x93723 ; ret
0x0000000000093782 : jne 0x93776 ; nop dword ptr [rax - 0x45] ; ret
0x00000000000937db : jne 0x937c3 ; ret
0x0000000000093891 : jne 0x93885 ; mov rax, rdi ; ret
0x00000000000938ea : jne 0x938d8 ; nop dword ptr [rax - 0x45] ; xor eax, eax ; ret
0x0000000000093952 : jne 0x93945 ; mov qword ptr [rdx], rcx ; ret
0x0000000000093aa0 : jne 0x93a90 ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x0000000000093cdd : jne 0x93d68 ; xor eax, eax ; ret
0x0000000000093d1a : jne 0x93d94 ; xor eax, eax ; ret
0x0000000000094887 : jne 0x9487b ; ret
0x0000000000095656 : jne 0x956d2 ; ret
0x000000000009557f : jne 0x956d6 ; ret
0x000000000009555e : jne 0x956d8 ; xor eax, eax ; ret
0x000000000009571c : jne 0x95713 ; ret
0x0000000000095ade : jne 0x95aab ; ret
0x0000000000095be9 : jne 0x95bd7 ; sub eax, r8d ; nop ; ret
0x0000000000095c96 : jne 0x95c8b ; ret
0x0000000000095cc8 : jne 0x95cb3 ; ret
0x0000000000095fdb : jne 0x96036 ; lea rax, [rdi - 0x10] ; ret
0x00000000000960c3 : jne 0x96093 ; ret
0x00000000000960ad : jne 0x960a3 ; ret
0x00000000000961b0 : jne 0x961a4 ; xor eax, eax ; ret
0x0000000000096218 : jne 0x961f9 ; mov rax, rdi ; nop dword ptr [rax] ; ret
0x00000000000962e4 : jne 0x96303 ; ret
0x000000000009646b : jne 0x96476 ; mov dword ptr [rcx + 8], esi ; ret
0x00000000000964ab : jne 0x964a3 ; ret
0x000000000009653f : jne 0x96536 ; sub rax, 4 ; ret
0x000000000009655e : jne 0x96570 ; ret
0x0000000000097783 : jne 0x9773e ; nop dword ptr [rax] ; ret
0x00000000000977d4 : jne 0x977cb ; ret
0x0000000000098565 : jne 0x9859e ; add rsp, 8 ; ret
0x000000000009abc5 : jne 0x9abfe ; add rsp, 8 ; ret
0x000000000009d135 : jne 0x9d16e ; add rsp, 8 ; ret
0x00000000000a68c1 : jne 0xa68d9 ; mov rax, rdx ; add rsp, 8 ; ret
0x00000000000abd69 : jne 0xabd5a ; nop dword ptr [rax + rax] ; mov r10d, r8d ; jmp 0xabd4d
0x00000000000ae45e : jne 0xae43e ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000af766 : jne 0xaf717 ; mov rdi, qword ptr [rbp - 0x68] ; call r14
0x00000000000afe6c : jne 0xafe96 ; mov eax, 0x74 ; syscall
0x00000000000b1bb4 : jne 0xb1bc6 ; jmp 0xb1be4
0x00000000000b3d91 : jne 0xb3d8c ; mov ecx, 0x27 ; mov eax, ecx ; syscall
0x00000000000b3e3c : jne 0xb3e6a ; mov edi, edi ; mov eax, 0x69 ; syscall
0x00000000000b3eac : jne 0xb3eda ; mov edi, edi ; mov eax, 0x6a ; syscall
0x00000000000b4145 : jne 0xb414b ; add byte ptr [rax], al ; syscall
0x00000000000b4598 : jne 0xb4563 ; ret
0x00000000000b46c1 : jne 0xb46f3 ; ret
0x00000000000b583f : jne 0xb581b ; xor eax, eax ; ret
0x00000000000b5a90 : jne 0xb5a70 ; ret
0x00000000000b5aa0 : jne 0xb5a8d ; mov eax, 1 ; ret
0x00000000000bb6b9 : jne 0xbb698 ; mov dword ptr [rdi + 0x2c], eax ; mov dword ptr [rdi + 0x30], eax ; ret
0x00000000000bb813 : jne 0xbb812 ; or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x00000000000bba86 : jne 0xbba92 ; ret
0x00000000000bbb08 : jne 0xbbae8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bbb7a : jne 0xbbb68 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bcce8 : jne 0xbccb3 ; mov dword ptr [rdi + 0x2c], eax ; mov dword ptr [rdi + 0x30], eax ; ret
0x00000000000bd095 : jne 0xbcfd1 ; pop rbx ; ret
0x00000000000bd094 : jne 0xbcfd2 ; pop rbx ; ret
0x00000000000bd07d : jne 0xbd001 ; pop rbx ; ret
0x00000000000bd226 : jne 0xbd233 ; pop rbx ; ret
0x00000000000bdea4 : jne 0xbdeb3 ; ret
0x00000000000cfabf : jne 0xcfab5 ; mov eax, dword ptr [rdx + 8] ; ret
0x00000000000cfaff : jne 0xcfb0b ; ret
0x00000000000d01db : jne 0xd01c0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d5dfc : jne 0xd5e05 ; add byte ptr [rax], al ; mov rdi, rdx ; syscall
0x00000000000dae35 : jne 0xdadcf ; mov edi, r12d ; call 0xd7127
0x00000000000dca0d : jne 0xdca16 ; add byte ptr [rax], al ; mov rdi, rdx ; syscall
0x00000000000dd78a : jne 0xdd79f ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000dd8ee : jne 0xdd8c8 ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000000dd97f : jne 0xdd958 ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000000e156c : jne 0xe1550 ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000000e1a27 : jne 0xe1a32 ; ret
0x00000000000e276c : jne 0xe2787 ; mov eax, 0x88 ; syscall
0x00000000000e2d4e : jne 0xe2d17 ; movsxd rdi, r15d ; mov al, 3 ; syscall
0x00000000000e33a7 : jne 0xe339e ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000e3574 : jne 0xe3584 ; mov eax, 0x27 ; syscall
0x00000000000eb2ff : jne 0xeb2eb ; ret
0x00000000000ee806 : jne 0xee817 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000eea5c : jne 0xeea48 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000efebd : jne 0xefeb6 ; mov rax, qword ptr [rax + 0x30] ; ret
0x00000000000eff4b : jne 0xeff5c ; cmp qword ptr [rdi], 0 ; je 0xeff61 ; ret
0x00000000000effd1 : jne 0xeffda ; ret
0x00000000000f000e : jne 0xf001a ; ret
0x00000000000f004e : jne 0xf005a ; ret
0x00000000000f0090 : jne 0xf009a ; ret
0x00000000000f00d0 : jne 0xf00da ; ret
0x00000000000f0110 : jne 0xf011a ; ret
0x00000000000f0150 : jne 0xf015a ; ret
0x00000000000f018e : jne 0xf019a ; ret
0x00000000000f01ce : jne 0xf01da ; ret
0x00000000000f0210 : jne 0xf021a ; ret
0x00000000000f0250 : jne 0xf025a ; ret
0x00000000000f0290 : jne 0xf029a ; ret
0x00000000000f02d0 : jne 0xf02da ; ret
0x00000000000f030e : jne 0xf031a ; ret
0x00000000000f034e : jne 0xf035a ; ret
0x00000000000f0390 : jne 0xf039a ; ret
0x00000000000f03d0 : jne 0xf03da ; ret
0x00000000000f040e : jne 0xf041a ; ret
0x00000000000f044e : jne 0xf045a ; ret
0x00000000000f0490 : jne 0xf049a ; ret
0x00000000000f04d0 : jne 0xf04da ; ret
0x00000000000f053e : jne 0xf054a ; ret
0x00000000000f0580 : jne 0xf058a ; ret
0x00000000000f05c0 : jne 0xf05ca ; ret
0x00000000000f0600 : jne 0xf060a ; ret
0x00000000000f0640 : jne 0xf064a ; ret
0x00000000000f067e : jne 0xf068a ; ret
0x00000000000f06be : jne 0xf06ca ; ret
0x00000000000f0700 : jne 0xf070a ; ret
0x00000000000f0740 : jne 0xf074a ; ret
0x00000000000f0795 : jne 0xf078d ; pop rdx ; pop r10 ; ret
0x00000000000f0786 : jne 0xf0796 ; mov eax, 0xca ; syscall
0x00000000000f088c : jne 0xf0892 ; ret
0x00000000000f0adc : jne 0xf0abb ; ret
0x00000000000f0b0f : jne 0xf0b03 ; leave ; ret
0x00000000000f0c3d : jne 0xf0c03 ; leave ; ret
0x00000000000f0ed0 : jne 0xf0ef1 ; xor edi, edi ; mov eax, 0xe3 ; syscall
0x00000000000f117f : jne 0xf115a ; lea rdi, [rip - 0x1a8] ; call rax
0x00000000000f19dd : jne 0xf19cd ; mov rax, rdi ; ret
0x00000000000f1a44 : jne 0xf1a39 ; mov rax, rdi ; add rsp, 8 ; ret
0x00000000000f1bad : jne 0xf1b9d ; mov rax, r10 ; ret
0x00000000000f31cc : jne 0xf31de ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f3295 : jne 0xf3283 ; ret
0x00000000000f3374 : jne 0xf3363 ; ret
0x00000000000f3415 : jne 0xf3409 ; mov rax, rdi ; add rsp, 8 ; ret
0x00000000000f6e23 : jne 0xf6e37 ; jmp 0xf6e55
0x00000000000fc58d : jne 0xfc580 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011a587 : jno 0x11a5cf ; and eax, 0x18000 ; add dh, dh ; ret
0x0000000000140ca5 : jno 0x140cae ; add byte ptr [rsi + rbp*8 - 7], dl ; jmp rsp
0x0000000000141ce1 : jno 0x141ce2 ; dec esp ; ret 1
0x0000000000141ce9 : jno 0x141ce8 ; jmp rsp
0x0000000000141cf9 : jno 0x141cfa ; call qword ptr [rbx + rax*8]
0x0000000000142c69 : jno 0x142c6a ; call rsp
0x0000000000143f71 : jno 0x143f63 ; jmp rsp
0x0000000000149531 : jno 0x149527 ; call rdi
0x000000000014a32d : jno 0x14a335 ; add byte ptr [rax], ah ; stosb byte ptr [rdi], al ; jmp rax
0x000000000014a36d : jno 0x14a375 ; add al, al ; stosb byte ptr [rdi], al ; call qword ptr [rsi]
0x000000000015a375 : jno 0x15a37c ; add byte ptr [rax], cl ; ret 0xfff9
0x000000000015a3a5 : jno 0x15a3ac ; add al, bh ; ret 0xfff9
0x000000000000219f : jno 0x21ec ; ret 0x1dd4
0x00000000000038db : jno 0x3925 ; xchg eax, ebx ; and cl, ah ; ret
0x0000000000096469 : jno 0x96477 ; jne 0x96478 ; mov dword ptr [rcx + 8], esi ; ret
0x000000000009646e : jno 0x9647b ; ret
0x00000000000a8736 : jno 0xa86c3 ; ret 0xe283
0x00000000000a881e : jno 0xa87ab ; ret 0xe283
0x00000000000a8951 : jno 0xa88de ; ret 0xe283
0x00000000000a89f6 : jno 0xa8983 ; ret 0xe283
0x00000000000a8ad6 : jno 0xa8a63 ; ret 0xe283
0x00000000000a8bb6 : jno 0xa8b43 ; ret 0xe283
0x00000000000a8c96 : jno 0xa8c23 ; ret 0xe283
0x00000000000a9461 : jno 0xa93ee ; ret 0xe283
0x00000000000a984f : jno 0xa97dc ; ret 0xe283
0x00000000000a99ca : jno 0xa9957 ; ret 0xe283
0x00000000000a9b0d : jno 0xa9a9a ; ret 0xe283
0x00000000000dc923 : jno 0xdc929 ; add byte ptr [rax], al ; syscall
0x00000000000eb26a : jno 0xeb272 ; cmovne eax, edx ; ret
0x00000000000eb269 : jno 0xeb273 ; cmovne eax, edx ; ret
0x00000000000eb26a : jno 0xeb274 ; cmovne eax, edx ; ret
0x00000000000eb269 : jno 0xeb275 ; cmovne eax, edx ; ret
0x000000000010eba7 : jnp 0x10ec13 ; call rax
0x000000000010f747 : jnp 0x10f7a3 ; call rax
0x000000000012d085 : jnp 0x12d042 ; ret
0x000000000013e42d : jnp 0x13e435 ; add ah, dl ; mov ebp, edi ; jmp rsp
0x00000000001407f9 : jnp 0x1407f6 ; jmp rsp
0x00000000001414e9 : jnp 0x1414e7 ; jmp rsp
0x000000000014adcd : jnp 0x14add5 ; add al, dl ; leave ; jmp qword ptr [rcx]
0x000000000015c4a1 : jnp 0x15c49f ; call qword ptr [rax]
0x000000000002315c : jnp 0x23178 ; call rax
0x000000000003912b : jnp 0x3913e ; mov qword ptr [rax + 0x40], rdx ; call qword ptr [rbx]
0x00000000000dbe20 : jnp 0x4819e273 ; add esp, 0x18 ; ret
0x000000000006bf38 : jnp 0x6bfb3 ; mov r12d, dword ptr fs:[rbp] ; call 0xd8239
0x0000000000081aa6 : jnp 0x81adb ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000b5830 : jnp 0xb5844 ; xchg eax, esp ; ret 0xb60f
0x00000000000bd223 : jnp 0xbd28e ; add byte ptr [rbp + 8], dh ; pop rbx ; ret
0x00000000000e36e5 : jnp 0xe36eb ; add byte ptr [rax], al ; syscall
0x000000000012c18e : jns 0x12c124 ; ret 0xf869
0x000000000012c18d : jns 0x12c125 ; ret 0xf869
0x000000000012e59e : jns 0x12e5f5 ; jmp 0x12e536
0x000000000013e2b1 : jns 0x13e2a4 ; call rsp
0x000000000013e2b0 : jns 0x13e2a5 ; call rsp
0x000000000013f089 : jns 0x13f080 ; jmp rsp
0x0000000000144121 : jns 0x144113 ; jmp qword ptr [rcx]
0x000000000014bc06 : jns 0x14bc1f ; nop ; add dword ptr [rax + 0xe], edx ; adc byte ptr [rdx], al ; pop rbp ; ret
0x000000000015ab2d : jns 0x15ab36 ; add byte ptr [rax], ah ; out 0xf9, al ; call qword ptr [rax]
0x0000000000001b01 : jns 0x1b0c ; ret
0x0000000000002b97 : jns 0x2b65 ; clc ; ret
0x0000000000003207 : jns 0x31e2 ; ret 0x5a51
0x0000000000032da7 : jns 0x32de1 ; add byte ptr [rcx - 0x77], cl ; ret 0x59e9
0x000000000003607f : jns 0x36099 ; add rsp, 0xd0 ; ret
0x0000000000003877 : jns 0x38ca ; cmpsq qword ptr [rsi], qword ptr [rdi] ; ret 0x49ec
0x00000000000b30bf : jns 0xb30f2 ; mov eax, ebx ; mov esi, 0x81 ; syscall
0x00000000000b3fc5 : jns 0xb3fcb ; add byte ptr [rax], al ; syscall
0x00000000000bdc7b : jns 0xbdc67 ; mov eax, 1 ; ret
0x00000000000dd3bc : jns 0xdd3ca ; mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x00000000000fd42b : jns 0xfd407 ; add byte ptr es:[rax - 0x77], cl ; ret 0x8948
0x000000000010c702 : jo 0x10c768 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000010d12b : jo 0x10d191 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012d204 : jo 0x12d27e ; mov ebp, 0xfb67d10d ; ret
0x0000000000130710 : jo 0x1306c7 ; jmp qword ptr [rax]
0x000000000014311d : jo 0x143125 ; add ah, al ; std ; std ; call rsp
0x00000000001448e0 : jo 0x14488a ; out dx, al ; call qword ptr [rdi]
0x00000000001452d0 : jo 0x1452d8 ; out dx, eax ; call qword ptr [rsi]
0x00000000001485c0 : jo 0x1485fd ; jmp qword ptr [rsi]
0x000000000014bb10 : jo 0x14bb09 ; jmp qword ptr [rbx]
0x000000000014db30 : jo 0x14db6a ; hlt ; call rax
0x000000000014dea0 : jo 0x14defe ; hlt ; jmp qword ptr [rdx]
0x000000000014e860 : jo 0x14e7f5 ; hlt ; jmp qword ptr [rbx]
0x0000000000153690 : jo 0x1536a2 ; clc ; call rsi
0x000000000015a0a0 : jo 0x15a055 ; stc ; call rdi
0x0000000000161940 : jo 0x1618ed ; sti ; jmp qword ptr [rsi]
0x000000000002ef57 : jo 0x2efa8 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002ef56 : jo 0x2efa9 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000426d6 : jo 0x426e1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006bf39 : jo 0x6bfa7 ; mov r12d, dword ptr [rbp] ; call 0xd8238
0x0000000000070bde : jo 0x70bf6 ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000007440e : jo 0x7439b ; sar byte ptr [rax + 5], 0xf3 ; ret
0x000000000007440d : jo 0x7439c ; sar byte ptr [rax + 5], 0xf3 ; ret
0x0000000000077f0c : jo 0x77f5d ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000822ca : jo 0x822d6 ; ret
0x0000000000096614 : jo 0x96676 ; pop rbp ; pop r12 ; ret
0x00000000000a8ec3 : jo 0xa8e50 ; ret 0x8166
0x00000000000b40a5 : jo 0xb40ab ; add byte ptr [rax], al ; syscall
0x000000000000b418 : jo 0xb47c ; or dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000bde2e : jo 0xbde54 ; xor eax, eax ; ret
0x00000000000dbdea : jo 0xdbe0f ; ret
0x00000000000deffc : jo 0xdefd5 ; sub byte ptr [rax], al ; mov rdx, rax ; jmp 0xdefda
0x00000000000e1399 : jo 0xe13a5 ; ret
0x00000000000e13d2 : jo 0xe13e6 ; ret
0x000000000000e880 : jo 0xe8b5 ; or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000000fa40 : jo 0xfa4a ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000109391 : jp 0x1093f1 ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000010ec56 : jp 0x10ec62 ; ret
0x000000000010ec76 : jp 0x10ec82 ; ret
0x000000000010f5be : jp 0x10f5ca ; ret
0x000000000010f5de : jp 0x10f5ea ; ret
0x000000000010f61e : jp 0x10f62a ; ret
0x000000000013fac9 : jp 0x13fac2 ; call rsp
0x00000000001441c9 : jp 0x1441bb ; jmp qword ptr [rdx]
0x000000000014ac5d : jp 0x14ac63 ; add byte ptr [rax], dh ; ret 0xfff2
0x000000000014ac5c : jp 0x14ac64 ; add byte ptr [rax], dh ; ret 0xfff2
0x0000000000158d49 : jp 0x158d46 ; jmp qword ptr [rax]
0x0000000000158da1 : jp 0x158d9e ; jmp qword ptr [rbx]
0x000000000000251d : jp 0x2501 ; jmp qword ptr [rbx]
0x000000000000251c : jp 0x2502 ; jmp qword ptr [rbx]
0x00000000000038da : jp 0x3954 ; xchg eax, ebx ; and cl, ah ; ret
0x0000000000081ba8 : jp 0x81bb2 ; test rdx, rdi ; je 0x81bc1 ; pop rbx ; ret
0x00000000000e36b5 : jp 0xe36bb ; add byte ptr [rax], al ; syscall
0x00000000000ec2c5 : jp 0xec2bf ; ret
0x00000000000eeef5 : jp 0xeef4c ; mov rsi, rdx ; call rax
0x0000000000109219 : jrcxz 0x109221 ; add bl, ch ; ret 0x9066
0x0000000000112064 : jrcxz 0x1120c3 ; ret
0x000000000012bfe5 : jrcxz 0x12c03f ; ret
0x0000000000140639 : jrcxz 0x140635 ; jmp rsp
0x0000000000140638 : jrcxz 0x140636 ; jmp rsp
0x00000000000937dc : jrcxz 0x937d3 ; ret
0x000000000009438a : jrcxz 0x94392 ; add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xc383
0x000000000009438a : jrcxz 0x94394 ; add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xc383
0x000000000009575c : jrcxz 0x957ae ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a9095 : jrcxz 0xa90ca ; add byte ptr [rax - 0x77], cl ; jmp 0x49cd19ef
0x00000000000bdc7c : jrcxz 0xbdc3c ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000f07e7 : jrcxz 0xf07ac ; cmp r11d, 0xa ; je 0xf07f8 ; ret
0x00000000000f0ed5 : jrcxz 0xf0edb ; add byte ptr [rax], al ; syscall
0x00000000000f0eec : jrcxz 0xf0ef2 ; add byte ptr [rax], al ; syscall
0x00000000001030cd : js 0x1030ee ; mov eax, 3 ; syscall
0x000000000011955b : js 0x119570 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011a6fd : js 0x11a718 ; mov eax, 3 ; syscall
0x0000000000131109 : js 0x131104 ; call qword ptr [rdx]
0x0000000000140e55 : js 0x140e5e ; add ah, dh ; or bh, dl ; jmp rsp
0x00000000001448f8 : js 0x1448a2 ; out dx, al ; call qword ptr [rdi]
0x000000000014d1c8 : js 0x14d183 ; jmp qword ptr [rcx]
0x0000000000150168 : js 0x15015b ; cmc ; jmp qword ptr [rdi]
0x0000000000154858 : js 0x1548c4 ; clc ; jmp qword ptr [rdx]
0x0000000000156838 : js 0x15680d ; clc ; jmp qword ptr [rdi]
0x00000000001572d8 : js 0x1572c7 ; clc ; jmp qword ptr [rbx]
0x000000000015a9e8 : js 0x15a9cd ; stc ; call qword ptr [rax]
0x000000000015de58 : js 0x15de2c ; cli ; jmp qword ptr [rbx]
0x000000000015fa78 : js 0x15fab1 ; sti ; jmp rsp
0x0000000000160168 : js 0x1601af ; sti ; call qword ptr [rsi]
0x0000000000022ddc : js 0x22dfc ; mov qword ptr [rbp - 0x58], rax ; call rcx
0x0000000000027b37 : js 0x27b86 ; mov dword ptr [rsp], eax ; call qword ptr [rbx]
0x000000000002eb85 : js 0x2eb11 ; loopne 0x2eb98 ; movzx eax, ax ; ret
0x000000000002ebc5 : js 0x2eb51 ; loopne 0x2ebd2 ; movzx eax, ax ; ret
0x000000000002ec65 : js 0x2ebf1 ; loopne 0x2ec74 ; movzx eax, ax ; ret
0x000000000002ed45 : js 0x2ecce ; loopne 0x2ed4e ; ret
0x000000000002edde : js 0x2ed67 ; loopne 0x2ede7 ; ret
0x000000000002edfe : js 0x2ed8a ; loopne 0x2ee11 ; movzx eax, ax ; ret
0x000000000002ee3e : js 0x2edca ; loopne 0x2ee4b ; movzx eax, ax ; ret
0x000000000002eede : js 0x2ee6a ; loopne 0x2eeed ; movzx eax, ax ; ret
0x0000000000002f39 : js 0x2eef ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000002ef67 : js 0x2efb8 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002ef66 : js 0x2efb9 ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000036da8 : js 0x36dbb ; cli ; je 0x36dc1 ; add rsp, 0x10 ; ret
0x0000000000036eba : js 0x36ecd ; cli ; je 0x36ed1 ; add rsp, 0x10 ; ret
0x0000000000074411 : js 0x7441b ; ret
0x0000000000080d7c : js 0x80d82 ; ret
0x00000000000b4105 : js 0xb410b ; add byte ptr [rax], al ; syscall
0x00000000000b4856 : js 0xb4867 ; mov eax, 1 ; ret
0x00000000000bd1f4 : js 0xbd221 ; idiv bh ; nop dword ptr [rax - 0x34] ; pop rbx ; ret
0x00000000000c310b : js 0xc311e ; add al, 0x75 ; mov bl, 0x8b ; pop rax ; or bh, dh ; ret
0x00000000000d57c0 : js 0xd5812 ; mov dword ptr [rdi + 0x80], edx ; ret
0x00000000000d60ed : js 0xd613f ; mov dword ptr [rdi + 0x100], edx ; ret
0x00000000000dc5c0 : js 0xdc5f1 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000de816 : js 0xde829 ; mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000000e6518 : js 0xe64a4 ; loopne 0xe652b ; movzx eax, ax ; ret
0x00000000000e6668 : js 0xe65f1 ; loopne 0xe6671 ; ret
0x00000000000e6708 : js 0xe6694 ; loopne 0xe6715 ; movzx eax, ax ; ret
0x00000000000e6a58 : js 0xe69e4 ; loopne 0xe6a67 ; movzx eax, ax ; ret
0x00000000000e6fb1 : js 0xe6f3d ; loopne 0xe6fc4 ; movzx eax, ax ; ret
0x00000000000e70d1 : js 0xe705a ; loopne 0xe70da ; ret
0x00000000000e7161 : js 0xe70ed ; loopne 0xe716e ; movzx eax, ax ; ret
0x00000000000e7431 : js 0xe73bd ; loopne 0xe7440 ; movzx eax, ax ; ret
0x00000000000ea384 : js 0xea390 ; jmp 0xea09c
0x00000000000efebb : js 0xefecd ; jne 0xefeb8 ; mov rax, qword ptr [rax + 0x30] ; ret
0x00000000000f4e08 : js 0xf4e21 ; mov eax, edi ; and eax, 0xffffff ; ret
0x00000000000f4e98 : js 0xf4ea7 ; mov eax, edi ; shr eax, 0x18 ; ret
0x000000000005dc83 : lahf ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000013ea85 : lahf ; add byte ptr [rax], al ; in al, 0x46 ; int1 ; call rsp
0x000000000014d1c5 : lahf ; add byte ptr [rax], al ; js 0x14d186 ; jmp qword ptr [rcx]
0x00000000001153f7 : lahf ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000015d1c1 : lahf ; cli ; call qword ptr [rdi]
0x000000000014fc59 : lahf ; cmc ; jmp qword ptr [rcx]
0x000000000003929d : lahf ; fidiv dword ptr [rdx] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000012e6c3 : lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000000e131c : lahf ; ret 0x8545
0x000000000012bf1d : lahf ; ret 0x871e
0x000000000009280d : lahf ; ret 0xfff9
0x0000000000062553 : lahf ; rol byte ptr [rsi - 0x77], 0x2c ; xor dword ptr [rcx], ebp ; ret
0x00000000000a4616 : lahf ; sub al, 0 ; add rsp, 8 ; ret
0x000000000013069b : lcall ptr [rax + 0x5cfff3b0] ; mov dl, 0xf3 ; jmp qword ptr [rax]
0x000000000013ef53 : lcall ptr [rax + rax*8 + 0x58240000] ; call rsp
0x0000000000130a9f : lcall ptr [rax - 0x4f0009d6] ; sub dh, dh ; call rax
0x0000000000130a4f : lcall ptr [rax - 0x4f000a22] ; fdivrp st(5) ; call rax
0x000000000013eb7b : lcall ptr [rbp - 0x3c3c0000] ; call rsp
0x0000000000071f5b : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000388c6 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000009f724 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r14 ; ret
0x000000000002b4c3 : lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000073364 : lcall ptr [rbx + 0x5d] ; ret
0x0000000000142723 : lcall ptr [rbx + rcx + 0x1040002] ; std ; call rsp
0x000000000013f27b : lcall ptr [rbx + rdx*8 - 0x557c0000] ; call rsp
0x0000000000142dd3 : lcall ptr [rbx + rsi - 0x475bfffe] ; std ; call rsp
0x000000000014175b : lcall ptr [rbx - 0x2eabffff] ; cli ; call rsp
0x00000000000bd04d : lcall ptr [rbx - 0x70] ; ret
0x000000000013e70b : lcall ptr [rcx + rcx*4] ; add ah, al ; ret 0xffef
0x00000000001419eb : lcall ptr [rcx + rsi*4 + 0x2f940001] ; sti ; call rsp
0x000000000013170b : lcall ptr [rcx] ; cmp al, 0xf8 ; jmp qword ptr [rdi]
0x0000000000142d2b : lcall ptr [rdi + rbp - 0x5b5bfffe] ; std ; call rsp
0x0000000000142113 : lcall ptr [rdi + rbx*8 + 0x33a40001] ; cld ; call rsp
0x0000000000142aeb : lcall ptr [rdx + 0x62140002] ; std ; call rsp
0x00000000001407b3 : lcall ptr [rdx + rbx*2 + 0x77c40001] ; stc ; call rsp
0x000000000014249b : lcall ptr [rdx + rdi*8 - 0x4cbbffff] ; cld ; jmp rsp
0x000000000013069f : lcall ptr [rdx + rsi*4 - 0xd] ; jmp qword ptr [rax]
0x00000000001405b3 : lcall ptr [rsi + rcx*2 - 0x3d4bffff] ; clc ; jmp rsp
0x000000000013edab : lcall ptr [rsi + rsi*4 + 0x23d40000] ; call rsp
0x00000000001423e3 : lcall ptr [rsi + rsi*8 - 0x640bffff] ; cld ; call rsp
0x0000000000142b3b : lcall ptr [rsp + 0x67f40002] ; std ; call rsp
0x00000000000716af : lea eax, [r8 - 1] ; ret
0x00000000000b481a : lea eax, [rax + rax - 1] ; ret
0x00000000000cfb13 : lea eax, [rax + rax*8 + 5] ; ret
0x00000000000a2da1 : lea eax, [rax + rcx] ; ret
0x0000000000088b54 : lea eax, [rax + rdi + 0x10] ; ret
0x0000000000088b64 : lea eax, [rax + rdi + 0x20] ; ret
0x0000000000093d54 : lea eax, [rax + rdi + 0x30] ; ret
0x0000000000088b34 : lea eax, [rax + rdi - 0x10] ; ret
0x00000000000ae388 : lea eax, [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000716b0 : lea eax, [rax - 1] ; ret
0x00000000000dc455 : lea eax, [rax] ; add byte ptr [rax], al ; syscall
0x0000000000047356 : lea eax, [rbp + 2] ; mov rdx, r8 ; jmp 0x47376
0x0000000000108df7 : lea eax, [rbx + 0x2260] ; pop rbx ; ret
0x00000000000b8419 : lea eax, [rbx + 2] ; pop rbx ; pop rbp ; ret
0x00000000001034ed : lea eax, [rbx + 3] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000b82ee : lea eax, [rbx + 8] ; pop rbx ; pop rbp ; ret
0x0000000000100706 : lea eax, [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x000000000008771d : lea eax, [rcx + rsi] ; ret
0x0000000000096311 : lea eax, [rdi + 0xc] ; ret
0x0000000000093698 : lea eax, [rdi + 1] ; ret
0x00000000000936ac : lea eax, [rdi + 2] ; ret
0x00000000000936b7 : lea eax, [rdi + 3] ; ret
0x00000000000936cb : lea eax, [rdi + 4] ; ret
0x00000000000936db : lea eax, [rdi + 5] ; ret
0x00000000000936eb : lea eax, [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000009368b : lea eax, [rdi + 7] ; ret
0x0000000000096309 : lea eax, [rdi + 8] ; ret
0x00000000000ffc34 : lea eax, [rdi + 9] ; and eax, 0xfffffff8 ; add eax, 0x10 ; ret
0x0000000000088b89 : lea eax, [rdi + rax + 0x10] ; ret
0x0000000000088b99 : lea eax, [rdi + rax + 0x20] ; ret
0x0000000000088a83 : lea eax, [rdi + rax + 0x30] ; ret
0x0000000000083ab0 : lea eax, [rdi + rax] ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000000904ab : lea eax, [rdi + rax] ; ret
0x0000000000100a44 : lea eax, [rdi + rsi + 8] ; ret
0x00000000000b9798 : lea eax, [rdi + rsi*8] ; jmp 0xb9764
0x0000000000087619 : lea eax, [rdi + rsi] ; ret
0x0000000000095ece : lea eax, [rdi - 0x10] ; ret
0x0000000000096031 : lea eax, [rdi - 0xc] ; ret
0x00000000000be802 : lea eax, [rdi - 4] ; cmp ebp, esi ; jge 0xbe7eb ; mov rdx, r8 ; jmp 0xbe81f
0x0000000000096051 : lea eax, [rdi - 4] ; ret
0x0000000000096041 : lea eax, [rdi - 8] ; ret
0x000000000007169e : lea eax, [rdx + rdi] ; ret
0x0000000000094678 : lea eax, [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x000000000002e889 : lea eax, [rdx + rsi*4] ; mov eax, dword ptr [rdi + rax] ; ret
0x0000000000080611 : lea eax, [rdx - 0x10] ; add rsp, 8 ; ret
0x0000000000021ef5 : lea eax, [rip + 0x112530] ; ret
0x0000000000021f05 : lea eax, [rip + 0x1146b1] ; ret
0x000000000007f685 : lea eax, [rip + 0x2e9f95] ; ret
0x0000000000069833 : lea eax, [rip + 0x301ee7] ; pop rbx ; pop rbp ; ret
0x00000000000a2b59 : lea eax, [rsi + rdx] ; add rsp, 0x18 ; ret
0x00000000000ae45b : lea ebp, [rax + 1] ; jne 0xae441 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b19ec : lea ebp, [rbx] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000011b227 : lea ebx, [rip + 0x1c665] ; jmp 0x11b1f9
0x000000000012c7d1 : lea ebx, [rsi - 0x3271f33] ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000000a5aad : lea ebx, [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000096736 : lea ecx, [rax + 1] ; call rbx
0x0000000000096886 : lea ecx, [rax + 4] ; call rbx
0x000000000011b225 : lea ecx, [rax - 0x73] ; sbb eax, 0x1c665 ; jmp 0x11b1fb
0x0000000000049bf4 : lea ecx, [rbx + rdx] ; add rdx, r12 ; call qword ptr [r11 + rax*8]
0x000000000005521c : lea ecx, [rbx + rdx] ; add rdx, r14 ; call qword ptr [r11 + rax*8]
0x00000000000e6cb9 : lea ecx, [rcx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x00000000000bde9e : lea ecx, [rdi + rcx*4] ; cmp edx, dword ptr [rcx + 4] ; jne 0xbdeb9 ; ret
0x0000000000071376 : lea ecx, [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000045714 : lea ecx, [rdx] ; jmp 0x45766
0x0000000000047004 : lea ecx, [rdx] ; jmp 0x47056
0x0000000000096c63 : lea ecx, [rsp + 0x20] ; call rbx
0x0000000000096cfd : lea ecx, [rsp + 0x20] ; lea rcx, [rax + 4] ; call rbx
0x000000000010cb5a : lea edi, [rbp + 0x10] ; call rax
0x000000000010f746 : lea edi, [rbx + 0x58] ; call rax
0x000000000010eba6 : lea edi, [rbx + 0x68] ; call rax
0x000000000010be59 : lea edi, [rbx + 0xc8] ; call rax
0x0000000000131888 : lea edi, [rbx] ; clc ; call rdi
0x00000000001318b8 : lea edi, [rbx] ; clc ; call rsi
0x000000000013167c : lea edi, [rbx] ; clc ; jmp qword ptr [rbx]
0x0000000000089346 : lea edi, [rdi + 0x10] ; jne 0x89338 ; mov rax, rdi ; ret
0x000000000008e456 : lea edi, [rdi + 0x10] ; jne 0x8e446 ; ret
0x0000000000113229 : lea edi, [rip + 0x21782] ; call 0x2f4c8
0x00000000000fcf91 : lea edi, [rip + 0x2708c5] ; call rax
0x00000000000f1182 : lea edi, [rip - 0x1a8] ; call rax
0x0000000000021e78 : lea edi, [rsi + rdx] ; call rax
0x00000000000a49f0 : lea edx, [rax + 1] ; cmp rdx, rcx ; jb 0xa49c9 ; ret
0x0000000000036d2d : lea edx, [rax + 1] ; mov dword ptr [rip + 0x332336], edx ; ret
0x000000000004c643 : lea edx, [rax + 8] ; mov qword ptr [r15 + 8], rdx ; jmp 0x4c616
0x0000000000093a41 : lea edx, [rcx + 1] ; mov byte ptr [rcx], 0 ; mov qword ptr [rdi], rdx ; ret
0x00000000000e6f0b : lea edx, [rdx + rcx*4] ; add eax, dword ptr [rsi + rdx] ; ret
0x00000000000717e1 : lea edx, [rdx + rcx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000083d26 : lea edx, [rdx + rcx] ; jmp r10
0x0000000000002e8a : lea esi, [rdi] ; ret 0x793b
0x0000000000042727 : lea esi, [rip + 0x1f3] ; call rax
0x000000000006e022 : lea esi, [rip + 0x38] ; call rax
0x000000000007a152 : lea esi, [rip - 0x1508] ; call rax
0x000000000007a5da : lea esi, [rip - 0x1990] ; call rax
0x0000000000078f1a : lea esi, [rip - 0x2d0] ; call rax
0x000000000006e332 : lea esi, [rip - 0x2d8] ; call rax
0x00000000000791da : lea esi, [rip - 0x590] ; call rax
0x000000000010924d : lea esi, [rsp + 8] ; call qword ptr [rax]
0x0000000000113b9e : lea esi, [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000f49f4 : lea esi, [rsp - 0x18] ; mov eax, 0x83 ; syscall
0x000000000005c6ef : lea esp, [rax + 0xffffffd] ; test dword ptr [rax], ebx ; ret 0xffff
0x0000000000038312 : lea esp, [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000006bdcc : lea esp, [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000083d25 : lea r10, [r10 + r9] ; jmp r10
0x0000000000045713 : lea r9, [rdx] ; jmp 0x45767
0x0000000000047003 : lea r9, [rdx] ; jmp 0x47057
0x0000000000096c62 : lea r9, [rsp + 0x20] ; call rbx
0x0000000000096cfc : lea r9, [rsp + 0x20] ; lea rcx, [rax + 4] ; call rbx
0x00000000000a2da0 : lea rax, [r8 + rcx] ; ret
0x00000000000b4819 : lea rax, [rax + rax - 1] ; ret
0x0000000000088b53 : lea rax, [rax + rdi + 0x10] ; ret
0x0000000000088b63 : lea rax, [rax + rdi + 0x20] ; ret
0x0000000000093d53 : lea rax, [rax + rdi + 0x30] ; ret
0x0000000000088b33 : lea rax, [rax + rdi - 0x10] ; ret
0x00000000000ae387 : lea rax, [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000047355 : lea rax, [rbp + 2] ; mov rdx, r8 ; jmp 0x47377
0x0000000000108df6 : lea rax, [rbx + 0x2260] ; pop rbx ; ret
0x00000000000b8418 : lea rax, [rbx + 2] ; pop rbx ; pop rbp ; ret
0x00000000000b82ed : lea rax, [rbx + 8] ; pop rbx ; pop rbp ; ret
0x000000000008771c : lea rax, [rcx + rsi] ; ret
0x0000000000096310 : lea rax, [rdi + 0xc] ; ret
0x0000000000093697 : lea rax, [rdi + 1] ; ret
0x00000000000936ab : lea rax, [rdi + 2] ; ret
0x00000000000936b6 : lea rax, [rdi + 3] ; ret
0x00000000000936ca : lea rax, [rdi + 4] ; ret
0x00000000000936da : lea rax, [rdi + 5] ; ret
0x00000000000936ea : lea rax, [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000009368a : lea rax, [rdi + 7] ; ret
0x0000000000096308 : lea rax, [rdi + 8] ; ret
0x0000000000088b88 : lea rax, [rdi + rax + 0x10] ; ret
0x0000000000088b98 : lea rax, [rdi + rax + 0x20] ; ret
0x0000000000088a82 : lea rax, [rdi + rax + 0x30] ; ret
0x00000000000904aa : lea rax, [rdi + rax] ; ret
0x0000000000100a43 : lea rax, [rdi + rsi + 8] ; ret
0x00000000000b9797 : lea rax, [rdi + rsi*8] ; jmp 0xb9765
0x0000000000087618 : lea rax, [rdi + rsi] ; ret
0x0000000000095ecd : lea rax, [rdi - 0x10] ; ret
0x0000000000096030 : lea rax, [rdi - 0xc] ; ret
0x0000000000096050 : lea rax, [rdi - 4] ; ret
0x0000000000096040 : lea rax, [rdi - 8] ; ret
0x000000000002e888 : lea rax, [rdx + rsi*4] ; mov eax, dword ptr [rdi + rax] ; ret
0x0000000000080610 : lea rax, [rdx - 0x10] ; add rsp, 8 ; ret
0x0000000000021ef4 : lea rax, [rip + 0x112530] ; ret
0x0000000000021f04 : lea rax, [rip + 0x1146b1] ; ret
0x000000000007f684 : lea rax, [rip + 0x2e9f95] ; ret
0x0000000000069832 : lea rax, [rip + 0x301ee7] ; pop rbx ; pop rbp ; ret
0x00000000000a2b58 : lea rax, [rsi + rdx] ; add rsp, 0x18 ; ret
0x0000000000096009 : lea rax, es:[rdi - 0x10] ; ret
0x000000000011b226 : lea rbx, [rip + 0x1c665] ; jmp 0x11b1fa
0x0000000000096735 : lea rcx, [rax + 1] ; call rbx
0x0000000000096885 : lea rcx, [rax + 4] ; call rbx
0x00000000000e6cb8 : lea rcx, [rcx + rsi*4] ; add eax, dword ptr [rdx + rcx] ; ret
0x0000000000021e77 : lea rdi, [r14 + rdx] ; call rax
0x000000000010cb59 : lea rdi, [rbp + 0x10] ; call rax
0x000000000010f745 : lea rdi, [rbx + 0x58] ; call rax
0x000000000010eba5 : lea rdi, [rbx + 0x68] ; call rax
0x000000000010be58 : lea rdi, [rbx + 0xc8] ; call rax
0x0000000000089345 : lea rdi, [rdi + 0x10] ; jne 0x89339 ; mov rax, rdi ; ret
0x000000000008e455 : lea rdi, [rdi + 0x10] ; jne 0x8e447 ; ret
0x0000000000113228 : lea rdi, [rip + 0x21782] ; call 0x2f4c9
0x00000000000fcf90 : lea rdi, [rip + 0x2708c5] ; call rax
0x00000000000f1181 : lea rdi, [rip - 0x1a8] ; call rax
0x000000000004c642 : lea rdx, [rax + 8] ; mov qword ptr [r15 + 8], rdx ; jmp 0x4c617
0x00000000000e6f0a : lea rdx, [rdx + rcx*4] ; add eax, dword ptr [rsi + rdx] ; ret
0x0000000000042726 : lea rsi, [rip + 0x1f3] ; call rax
0x000000000006e021 : lea rsi, [rip + 0x38] ; call rax
0x000000000007a151 : lea rsi, [rip - 0x1508] ; call rax
0x000000000007a5d9 : lea rsi, [rip - 0x1990] ; call rax
0x0000000000078f19 : lea rsi, [rip - 0x2d0] ; call rax
0x000000000006e331 : lea rsi, [rip - 0x2d8] ; call rax
0x00000000000791d9 : lea rsi, [rip - 0x590] ; call rax
0x000000000010924c : lea rsi, [rsp + 8] ; call qword ptr [rax]
0x0000000000113b9d : lea rsi, [rsp + 8] ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000038311 : lea rsp, [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000014fbb5 : leave ; add byte ptr [rax], al ; cmp byte ptr [rbp - 0xb], ch ; jmp qword ptr [rbx]
0x000000000007c7be : leave ; add dword ptr [rax + 0x39], ecx ; ret
0x0000000000141dbd : leave ; add dword ptr [rax], eax ; je 0x141d63 ; sti ; call rsp
0x00000000000366c8 : leave ; add edi, esi ; ret 0
0x00000000001149b0 : leave ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013f3c1 : leave ; call rsp
0x0000000000002ba0 : leave ; clc ; ret
0x00000000000878c6 : leave ; cmove rax, rdx ; ret
0x000000000010b0b9 : leave ; je 0x10b0d1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000002c596 : leave ; je 0x2c5a2 ; call rcx
0x000000000006a01d : leave ; je 0x6a02c ; ret
0x0000000000085b9a : leave ; je 0x85b60 ; mov byte ptr [r10 + 1], 0 ; ret
0x00000000000928d8 : leave ; jg 0x928c6 ; or byte ptr [rdi], sil ; ret
0x000000000014add1 : leave ; jmp qword ptr [rcx]
0x000000000011d0ff : leave ; jne 0x11d10b ; ret
0x000000000011d17d : leave ; jne 0x11d18b ; ret
0x0000000000093781 : leave ; jne 0x93777 ; nop dword ptr [rax - 0x45] ; ret
0x00000000000960ac : leave ; jne 0x960a4 ; ret
0x00000000000bbb07 : leave ; jne 0xbbae9 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bbb79 : leave ; jne 0xbbb69 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000eb2fe : leave ; jne 0xeb2ec ; ret
0x00000000000f000d : leave ; jne 0xf001b ; ret
0x00000000000f00cf : leave ; jne 0xf00db ; ret
0x00000000000f01cd : leave ; jne 0xf01db ; ret
0x00000000000f024f : leave ; jne 0xf025b ; ret
0x00000000000f034d : leave ; jne 0xf035b ; ret
0x00000000000f048f : leave ; jne 0xf049b ; ret
0x00000000000f053d : leave ; jne 0xf054b ; ret
0x00000000000f05bf : leave ; jne 0xf05cb ; ret
0x00000000000f06bd : leave ; jne 0xf06cb ; ret
0x00000000000f073f : leave ; jne 0xf074b ; ret
0x0000000000095ad9 : leave ; mov dword ptr [r8 + 4], ecx ; jne 0x95ab0 ; ret
0x0000000000094884 : leave ; mov dword ptr [rdx], ecx ; jne 0x9487e ; ret
0x000000000011140b : leave ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00000000000935b3 : leave ; movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x0000000000046eb9 : leave ; nop word ptr [rax + rax] ; ret
0x000000000003b55d : leave ; or dword ptr [rax], eax ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x000000000003fdb2 : leave ; ret
0x000000000015a4f1 : leave ; stc ; jmp rax
0x0000000000078040 : les r11d, ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000078c3b : les r9d, ptr [rax + 0x29] ; ret 0x8948
0x000000000013e53b : ljmp ptr [rax + rax*4 - 0x5b5c0000] ; out dx, eax ; jmp rsp
0x000000000014311b : ljmp ptr [rax + rsi*2] ; add ah, al ; std ; std ; call rsp
0x0000000000133f37 : ljmp ptr [rax - 0x7f] ; std ; call rax
0x00000000001308c3 : ljmp ptr [rax] ; push rsp ; call rax
0x0000000000142b6b : ljmp ptr [rbp + 0x6a140002] ; std ; jmp rsp
0x00000000001425f3 : ljmp ptr [rbx + rax + 2] ; add ah, dl ; xlatb ; cld ; call rsp
0x000000000012fd7b : ljmp ptr [rbx - 0x5c53000e] ; call rsi
0x000000000012fd1f : ljmp ptr [rbx - 0x5c53000e] ; jmp rdx
0x000000000012fd33 : ljmp ptr [rbx - 0x6e1d000e] ; jmp rdx
0x000000000013ebfb : ljmp ptr [rcx + rbp*4 - 0x171c0000] ; jmp rsp
0x0000000000141dbb : ljmp ptr [rcx + rcx*8 - 0x648bffff] ; sti ; call rsp
0x0000000000132555 : ljmp ptr [rcx - 0x3c000500] ; add dh, bh ; jmp rdi
0x000000000013f6f3 : ljmp ptr [rdi + rbp*8 + 0x59240000] ; hlt ; jmp rsp
0x00000000001425db : ljmp ptr [rdx + rax - 0x2c4bfffe] ; cld ; jmp rsp
0x000000000012fb37 : ljmp ptr [rdx - 1] ; call qword ptr [rsi]
0x000000000008faee : ljmp ptr [rdx] ; cmp rdx, rcx ; jne 0x8faf0 ; ret
0x0000000000130f4f : ljmp ptr [rsi + rbx*2] ; idiv edi ; xchg eax, ebp ; push -9 ; jmp qword ptr [rsi]
0x000000000013ddbb : ljmp ptr [rsi + rdx*2 + 0x43140000] ; out dx, al ; jmp rsp
0x000000000013fa93 : ljmp ptr [rsp + rax + 1] ; add byte ptr [rdx + rbp*2 - 0xb], dh ; jmp rsp
0x000000000014289b : ljmp ptr [rsp + rdx + 0x34440002] ; std ; jmp rsp
0x000000000007075e : lock add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000000db9a7 : lock and byte ptr [rax - 0x77], cl ; pop rbx ; ret
0x0000000000117b24 : lock sub dword ptr [rdi + 0x18], 1 ; je 0x117b39 ; xor eax, eax ; ret
0x000000000014289c : lodsb al, byte ptr [rsi] ; adc al, 2 ; add byte ptr [rsp + rsi - 3], al ; jmp rsp
0x000000000013e53c : lodsb al, byte ptr [rsi] ; add byte ptr [rax], 0 ; movsb byte ptr [rdi], byte ptr [rsi] ; movsb byte ptr [rdi], byte ptr [rsi] ; out dx, eax ; jmp rsp
0x000000000014de9d : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; jo 0x14df01 ; hlt ; jmp qword ptr [rdx]
0x000000000015de55 : lodsb al, byte ptr [rsi] ; add dword ptr [rax], eax ; js 0x15de2f ; cli ; jmp qword ptr [rbx]
0x000000000015de6d : lodsb al, byte ptr [rsi] ; add dword ptr [rax], eax ; nop ; iretd ; cli ; jmp qword ptr [rbx]
0x00000000000d47ad : lodsb al, byte ptr [rsi] ; and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc889
0x0000000000142b6c : lodsb al, byte ptr [rsi] ; and eax, 0x6a140002 ; std ; jmp rsp
0x0000000000146cc4 : lodsb al, byte ptr [rsi] ; cmp al, byte ptr [rax] ; add byte ptr [rax - 0x49], ch ; out dx, eax ; jmp rcx
0x000000000014d0d1 : lodsb al, byte ptr [rsi] ; jmp rax
0x000000000014d1c4 : lodsb al, byte ptr [rsi] ; lahf ; add byte ptr [rax], al ; js 0x14d187 ; jmp qword ptr [rcx]
0x0000000000141dbc : lodsb al, byte ptr [rsi] ; leave ; add dword ptr [rax], eax ; je 0x141d64 ; sti ; call rsp
0x000000000012ee5d : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000013f6f4 : lodsb al, byte ptr [rsi] ; out dx, eax ; add byte ptr [rax], al ; and al, 0x59 ; hlt ; jmp rsp
0x000000000013ddbc : lodsb al, byte ptr [rsi] ; push rsi ; add byte ptr [rax], al ; adc al, 0x43 ; out dx, al ; jmp rsp
0x000000000014eea6 : lodsb al, byte ptr [rsi] ; ret
0x0000000000144cc4 : lodsb al, byte ptr [rsi] ; sbb al, byte ptr [rax] ; add byte ptr [rax - 0x3e], cl ; out dx, al ; jmp qword ptr [rcx]
0x00000000001441c4 : lodsb al, byte ptr [rsi] ; sldt word ptr [rax] ; or byte ptr [rdx - 0x12], bh ; jmp qword ptr [rdx]
0x000000000013ebfc : lodsb al, byte ptr [rsi] ; test eax, 0xe8e40000 ; jmp rsp
0x000000000015b8c4 : lodsb al, byte ptr [rsi] ; xchg byte ptr [rcx], al ; add byte ptr [rax], cl ; cli ; call qword ptr [rsi]
0x000000000003b034 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000099ea5 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000141915 : lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; and al, 0x26 ; sti ; jmp rsp
0x00000000001305a9 : lodsd eax, dword ptr [rsi] ; call rsp
0x00000000001305a5 : lodsd eax, dword ptr [rsi] ; inc dword ptr [rbp + rbp*4 - 0xd] ; call rsp
0x00000000000ffdaf : lodsd eax, dword ptr [rsi] ; mov eax, 0xffffffff ; ret
0x0000000000045e82 : lodsd eax, dword ptr [rsi] ; ret
0x000000000009832d : lodsq rax, qword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001036b8 : loop 0x10364a ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000011c7c6 : loop 0x11c819 ; add ecx, ebx ; call rax
0x000000000012f1fa : loop 0x12f24f ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000012fb39 : loop 0x12fb3c ; call qword ptr [rsi]
0x000000000012fb35 : loop 0x12fb3c ; ljmp ptr [rdx - 1] ; call qword ptr [rsi]
0x000000000012fd38 : loop 0x12fcce ; jmp rdx
0x000000000012fd3c : loop 0x12fcd2 ; jmp rdx
0x000000000012fdb8 : loop 0x12fd4e ; jmp rdx
0x000000000012fdbc : loop 0x12fd52 ; jmp rdx
0x0000000000130a85 : loop 0x130a82 ; inc eax ; loopne 0x130a86 ; jmp qword ptr [rax]
0x0000000000131594 : loop 0x131544 ; idiv edi ; ret 0xf7b4
0x0000000000021e75 : loop 0x21e81 ; lea rdi, [r14 + rdx] ; call rax
0x00000000000243c6 : loop 0x24419 ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000000259d : loop 0x2577 ; ret 0x23cb
0x000000000003692d : loop 0x36936 ; jne 0x3693e ; xor eax, eax ; ret
0x00000000000391eb : loop 0x39214 ; mov eax, eax ; or rax, rdx ; ret
0x000000000003f921 : loop 0x3f936 ; add bl, ch ; ret 0x8b44
0x0000000000049bf9 : loop 0x49c40 ; call qword ptr [rbx + rax*8]
0x000000000006a97e : loop 0x6a910 ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000007687a : loop 0x768b1 ; add byte ptr [rax], al ; nop dword ptr [rax - 0x34] ; pop rdx ; ret
0x000000000007f442 : loop 0x7f3e6 ; add byte ptr cs:[rax + 0x39], cl ; ret 0x1374
0x0000000000089a79 : loop 0x89a86 ; mov rax, rdi ; jne 0x89a95 ; ret
0x0000000000096559 : loop 0x96566 ; mov rax, rdi ; jne 0x96575 ; ret
0x00000000000ac196 : loop 0xac1aa ; ret 0x144
0x00000000000ac8de : loop 0xac8a6 ; cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x00000000000af128 : loop 0xaf114 ; ret 0x272
0x00000000000d5354 : loop 0xd5360 ; je 0xd5364 ; mov byte ptr [rdi], 0 ; xor eax, eax ; ret
0x00000000000d5654 : loop 0xd5660 ; je 0xd5664 ; mov byte ptr [rdi], 0 ; xor eax, eax ; ret
0x00000000000e583a : loop 0xe587a ; sub byte ptr [rax], al ; pop rbx ; ret
0x00000000000eea5d : loop 0xeeaae ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000fb779 : loop 0xfb70b ; or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x000000000010dc1a : loope 0x10dc2e ; ret 0x8d49
0x0000000000130a79 : loope 0x130a76 ; inc eax ; loope 0x130a7a ; jmp rax
0x0000000000130a7d : loope 0x130a76 ; jmp rax
0x0000000000132929 : loope 0x132933 ; add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000014214d : loope 0x142156 ; add byte ptr [rsi + rdi], dl ; cld ; call rsp
0x0000000000142621 : loope 0x142621 ; call rsp
0x000000000014fd59 : loope 0x14fd52 ; jmp qword ptr [rbx]
0x000000000015aa19 : loope 0x15aa16 ; call rcx
0x00000000001613f5 : loope 0x1613fe ; add byte ptr [rax - 0x73], bl ; sti ; call rdx
0x0000000000022f53 : loope 0x22fa6 ; mov edx, ebp ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x0000000000002672 : loope 0x262d ; hlt ; out 0xdf, eax ; syscall
0x000000000002e7f3 : loope 0x2e7a1 ; xor eax, dword ptr [rax] ; mov qword ptr [rax], rdx ; ret
0x00000000000454c6 : loope 0x45486 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000455a6 : loope 0x45566 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000045d0b : loope 0x45d5d ; mov dword ptr [rdi], ecx ; ret
0x0000000000045d3c : loope 0x45d8f ; mov dword ptr [rdi - 8], ecx ; ret
0x0000000000045dbd : loope 0x45e10 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000005b711 : loope 0x5b717 ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x00000000000741d9 : loope 0x741ae ; mov dword ptr [rdi], ecx ; ret
0x000000000008e85f : loope 0x8e871 ; movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x00000000000959ae : loope 0x959c3 ; je 0x959d4 ; ret
0x00000000000a2d9b : loope 0xa2dac ; sub rcx, rax ; lea rax, [r8 + rcx] ; ret
0x00000000000a92a5 : loope 0xa92da ; add byte ptr [rax - 0x77], cl ; jmp 0x49cd1bff
0x00000000000af169 : loope 0xaf0f6 ; ret 0xf631
0x000000000000bfe0 : loope 0xc03b ; add byte ptr [rax], al ; and al, byte ptr [rax] ; or eax, dword ptr [rax] ; ret 0xc
0x00000000000dd041 : loope 0xdd048 ; mov eax, 0xa9 ; syscall
0x0000000000100094 : loopne 0x1000fa ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000001001a8 : loopne 0x10019f ; ret
0x000000000010014b : loopne 0x1001b1 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000100852 : loopne 0x10085d ; add eax, 8 ; ret
0x00000000001009ff : loopne 0x100a0c ; cdqe ; shr rax, 4 ; ret
0x00000000001031bf : loopne 0x1031b6 ; ret
0x0000000000108230 : loopne 0x108276 ; pop rsp ; ret
0x0000000000110685 : loopne 0x1106da ; mov ecx, ebp ; mov rsi, rbx ; call qword ptr [rax]
0x00000000001115ef : loopne 0x1115f8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000012c7d4 : loopne 0x12c7b4 ; cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000001309cc : loopne 0x130a27 ; cmc ; inc eax ; xchg eax, ebx ; cmc ; call rax
0x0000000000130a89 : loopne 0x130a82 ; jmp qword ptr [rax]
0x0000000000130b0c : loopne 0x130b4f ; idiv bh ; cmp rsi, rsi ; call rax
0x0000000000132e5c : loopne 0x132eb7 ; std ; call rax
0x000000000014212d : loopne 0x142136 ; add byte ptr [rdx + rdi - 4], al ; call rsp
0x0000000000143f70 : loopne 0x143fe6 ; out dx, al ; jmp rsp
0x0000000000145000 : loopne 0x144fef ; out dx, al ; jmp qword ptr [rsi]
0x00000000001476e0 : loopne 0x1476e4 ; out dx, eax ; jmp qword ptr [rdi]
0x000000000014ca20 : loopne 0x14ca37 ; std ; jmp qword ptr [rcx]
0x0000000000153a50 : loopne 0x153a7b ; clc ; jmp qword ptr [rbx]
0x0000000000158da0 : loopne 0x158e1f ; stc ; jmp qword ptr [rbx]
0x000000000015a690 : loopne 0x15a665 ; stc ; call rcx
0x000000000015a9e9 : loopne 0x15a9e6 ; call qword ptr [rax]
0x000000000015d5a0 : loopne 0x15d553 ; cli ; call qword ptr [rdi]
0x00000000001612f5 : loopne 0x1612fe ; add byte ptr [rax - 0x78], ch ; sti ; call rcx
0x000000000002eb87 : loopne 0x2eb96 ; movzx eax, ax ; ret
0x000000000002ebc7 : loopne 0x2ebd0 ; movzx eax, ax ; ret
0x000000000002ec67 : loopne 0x2ec72 ; movzx eax, ax ; ret
0x000000000002ed47 : loopne 0x2ed4c ; ret
0x000000000002ede0 : loopne 0x2ede5 ; ret
0x000000000002ee00 : loopne 0x2ee0f ; movzx eax, ax ; ret
0x000000000002edb7 : loopne 0x2ee3a ; ret
0x000000000002ee40 : loopne 0x2ee49 ; movzx eax, ax ; ret
0x000000000002eee0 : loopne 0x2eeeb ; movzx eax, ax ; ret
0x0000000000035899 : loopne 0x358a5 ; ret
0x0000000000036a88 : loopne 0x36ad8 ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000000457ed : loopne 0x457f6 ; sub eax, 1 ; ret
0x0000000000045b26 : loopne 0x45b72 ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006cad7 : loopne 0x6cadd ; add byte ptr [rax], al ; call rax
0x000000000006cb1f : loopne 0x6cb25 ; add byte ptr [rax], al ; call rax
0x000000000006cb61 : loopne 0x6cb67 ; add byte ptr [rax], al ; call rax
0x000000000006cba9 : loopne 0x6cbaf ; add byte ptr [rax], al ; call rdx
0x0000000000075612 : loopne 0x75678 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007568f : loopne 0x756f1 ; pop rbp ; pop r12 ; ret
0x000000000007675a : loopne 0x7675f ; ret
0x000000000007676a : loopne 0x7676f ; ret
0x0000000000077a8a : loopne 0x77ad4 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000077b4c : loopne 0x77b96 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000007a265 : loopne 0x7a2c9 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007b070 : loopne 0x7b0d6 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000082c00 : loopne 0x82c66 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000082e2b : loopne 0x82e91 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008927f : loopne 0x89276 ; ret
0x000000000008eb20 : loopne 0x8eb32 ; movsxd r8, dword ptr [rax + r8*4] ; add rax, r8 ; jmp rax
0x0000000000090768 : loopne 0x907ae ; pop rsp ; ret
0x0000000000094659 : loopne 0x94673 ; movsxd rsi, dword ptr [rdx + rax*4] ; add rdx, rsi ; jmp rdx
0x0000000000094699 : loopne 0x946b3 ; movsxd rsi, dword ptr [rcx + rax*4] ; add rcx, rsi ; jmp rcx
0x00000000000a11ac : loopne 0xa11f2 ; pop rsp ; ret
0x00000000000a129e : loopne 0xa12e6 ; pop rsp ; pop r13 ; ret
0x00000000000a3c14 : loopne 0xa3c5e ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000a3bfc : loopne 0xa3c62 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000b4278 : loopne 0xb42de ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000b455c : loopne 0xb4567 ; add byte ptr [rax], al ; mov eax, 0x7f ; ret
0x00000000000b99db : loopne 0xb9968 ; ret
0x00000000000bb9f2 : loopne 0xbb9f9 ; pop r15 ; ret
0x00000000000bba35 : loopne 0xbba40 ; pop r14 ; neg eax ; pop r15 ; ret
0x00000000000be79b : loopne 0xbe7a6 ; pop rbx ; sub eax, 1 ; pop rbp ; ret
0x00000000000cfb25 : loopne 0xcfb38 ; ret
0x00000000000d6cfa : loopne 0xd6d5e ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000dcc08 : loopne 0xdcc6e ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000dd6c4 : loopne 0xdd726 ; pop rbp ; pop r12 ; ret
0x00000000000e105e : loopne 0xe0feb ; ret
0x00000000000e30f6 : loopne 0xe315c ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000e651a : loopne 0xe6529 ; movzx eax, ax ; ret
0x00000000000e666a : loopne 0xe666f ; ret
0x00000000000e670a : loopne 0xe6713 ; movzx eax, ax ; ret
0x00000000000e6a5a : loopne 0xe6a65 ; movzx eax, ax ; ret
0x00000000000e6e2e : loopne 0xe6e34 ; ret
0x00000000000e6fb3 : loopne 0xe6fc2 ; movzx eax, ax ; ret
0x00000000000e70d3 : loopne 0xe70d8 ; ret
0x00000000000e7163 : loopne 0xe716c ; movzx eax, ax ; ret
0x00000000000e7433 : loopne 0xe743e ; movzx eax, ax ; ret
0x00000000000e7533 : loopne 0xe753c ; nop dword ptr [rax] ; ret
0x00000000000e779e : loopne 0xe77a4 ; ret
0x00000000000eff2f : loopne 0xeff34 ; ret
0x00000000000f084c : loopne 0xf0861 ; cmp eax, 4 ; je 0xf085b ; ret
0x00000000000f0a4d : loopne 0xf0a5f ; pop r12 ; ret
0x00000000000f4e64 : loopne 0xf4e74 ; or eax, esi ; bswap eax ; ret
0x00000000000f4e71 : loopne 0xf4e8c ; movzx esi, si ; or eax, esi ; bswap eax ; ret
0x00000000000f71a8 : loopne 0xf7194 ; ret 0xde
0x00000000000ffc38 : loopne 0xffc37 ; add eax, 0x10 ; ret
0x000000000012f864 : maskmovq mm7, mm7 ; jmp qword ptr [rdx]
0x000000000010bedb : mov ah, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000000e3dc5 : mov ah, 0 ; add byte ptr [rax], al ; syscall
0x000000000012c1ea : mov ah, 0x13 ; ret
0x000000000013f8d8 : mov ah, 0x17 ; cmc ; jmp rsp
0x00000000001452cc : mov ah, 0x20 ; add byte ptr [rax], al ; jo 0x1452dc ; out dx, eax ; call qword ptr [rsi]
0x0000000000043790 : mov ah, 0x24 ; rol byte ptr [rax], 0 ; add byte ptr [rdi], cl ; ret 0x8d48
0x00000000001467cc : mov ah, 0x35 ; add byte ptr [rax], al ; push rax ; out dx, eax ; jmp qword ptr [rcx]
0x00000000001404f4 : mov ah, 0x47 ; add dword ptr [rax], eax ; clc ; jmp rsp
0x000000000013e1ac : mov ah, 0x6f ; add byte ptr [rax], al ; xor al, 0x32 ; out dx, eax ; jmp rsp
0x0000000000142c68 : mov ah, 0x71 ; std ; call rsp
0x0000000000141cf8 : mov ah, 0x71 ; sti ; call qword ptr [rbx + rax*8]
0x0000000000140d64 : mov ah, 0x74 ; add dword ptr [rax], eax ; idiv ecx ; call rsp
0x000000000014adcc : mov ah, 0x7b ; add byte ptr [rax], al ; ror cl, 1 ; jmp qword ptr [rcx]
0x0000000000140878 : mov ah, 0x85 ; stc ; call rsp
0x0000000000142380 : mov ah, 0x8d ; cld ; jmp rsp
0x000000000014c4cc : mov ah, 0x92 ; add byte ptr [rax], al ; add byte ptr [rcx - 0xd], al ; jmp rdx
0x0000000000142d10 : mov ah, 0x9d ; std ; call rsp
0x000000000013ea84 : mov ah, 0x9f ; add byte ptr [rax], al ; in al, 0x46 ; int1 ; call rsp
0x000000000012c690 : mov ah, 0xa5 ; ret
0x0000000000141a2c : mov ah, 0xb2 ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; xor edi, ebx ; jmp rsp
0x0000000000141a8c : mov ah, 0xb4 ; add dword ptr [rax], eax ; xchg eax, esp ; sti ; call rsp
0x0000000000141e60 : mov ah, 0xb7 ; sti ; jmp rsp
0x0000000000141b74 : mov ah, 0xba ; add dword ptr [rax], eax ; add al, 0x56 ; sti ; call rsp
0x0000000000141bb4 : mov ah, 0xbb ; add dword ptr [rax], eax ; add al, 0x59 ; sti ; call rsp
0x000000000013eb18 : mov ah, 0xbb ; jmp rsp
0x0000000000141cdc : mov ah, 0xc2 ; add dword ptr [rax], eax ; adc al, 0x71 ; sti ; dec esp ; ret 1
0x00000000001405b8 : mov ah, 0xc2 ; clc ; jmp rsp
0x000000000013f084 : mov ah, 0xc8 ; add byte ptr [rax], al ; in al, 0x79 ; jmp rsp
0x00000000001425e0 : mov ah, 0xd3 ; cld ; jmp rsp
0x0000000000142eb8 : mov ah, 0xd4 ; std ; jmp rsp
0x0000000000142fb0 : mov ah, 0xe7 ; std ; jmp rsp
0x000000000013f5e4 : mov ah, 0xe8 ; add byte ptr [rax], al ; and al, 0x31 ; hlt ; call rsp
0x000000000013e5e9 : mov ah, 0xef ; jmp rsp
0x000000000013071d : mov ah, 0xf3 ; call qword ptr [rax + 0x20fff3b2]
0x00000000001306d5 : mov ah, 0xf3 ; inc dword ptr [rax - 0x4f] ; jmp qword ptr [rax]
0x00000000001306a5 : mov ah, 0xf3 ; jmp qword ptr [rax]
0x0000000000130731 : mov ah, 0xf3 ; lcall ptr [rdx + rsi*4 - 0xd] ; jmp qword ptr [rax]
0x000000000013070d : mov ah, 0xf3 ; push qword ptr [rax - 0x4e] ; jmp qword ptr [rax]
0x0000000000002673 : mov ah, 0xf4 ; out 0xdf, eax ; syscall
0x00000000001314f1 : mov ah, 0xf7 ; jmp rdx
0x0000000000162ed4 : mov ah, 5 ; add byte ptr [rax], al ; ret
0x000000000012bfe4 : mov ah, bl ; push rsi ; ret
0x00000000000e3ae5 : mov al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000108c47 : mov al, 0x23 ; add byte ptr [rax], al ; call rbx
0x0000000000108c8a : mov al, 0x23 ; add byte ptr [rax], al ; mov rsi, rbp ; call rbx
0x0000000000146830 : mov al, 0x42 ; out dx, eax ; jmp qword ptr [rcx]
0x000000000010f55d : mov al, 0x48 ; add eax, ecx ; jmp rax
0x00000000000b4956 : mov al, 0x48 ; add eax, edx ; jmp rax
0x000000000010ebfd : mov al, 0x48 ; add eax, esi ; jmp rax
0x000000000010947f : mov al, 0x48 ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000011510c : mov al, 0x48 ; shr edx, 3 ; add rax, rcx ; jmp rax
0x000000000014ca90 : mov al, 0x61 ; call qword ptr [rdi]
0x00000000001309c8 : mov al, 0x68 ; cmc ; jmp rax
0x000000000011c885 : mov al, 0xca ; mov esi, 0x81 ; syscall
0x0000000000130a54 : mov al, 0xde ; cmc ; call rax
0x000000000015aae0 : mov al, 0xe4 ; stc ; jmp rax
0x000000000012e496 : mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x000000000013069d : mov al, 0xf3 ; lcall ptr [rdx + rsi*4 - 0xd] ; jmp qword ptr [rax]
0x00000000000dd647 : mov al, 0xf3 ; ret
0x0000000000130a09 : mov al, 0xf5 ; inc dword ptr [rax - 0x6e] ; cmc ; call qword ptr [rax]
0x00000000001314e1 : mov al, 0xf7 ; jmp rdx
0x0000000000155da9 : mov al, 0xf8 ; call rdi
0x0000000000155d79 : mov al, 0xf8 ; jmp qword ptr [rdi]
0x000000000015a0a1 : mov al, 0xf9 ; call rdi
0x0000000000109597 : mov al, 1 ; mov qword ptr [rbp + 0x68], rcx ; jmp 0x109569
0x00000000001147c7 : mov al, 1 ; ret
0x000000000015eb90 : mov al, 1 ; sti ; call qword ptr [rsi]
0x00000000000d8e25 : mov al, 3 ; syscall
0x0000000000145440 : mov al, 7 ; out dx, eax ; call qword ptr [rdi]
0x000000000006c9ac : mov al, byte ptr [rax + 1] ; add byte ptr [rax], al ; ret
0x00000000000d65e5 : mov al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000e6f0d : mov al, byte ptr [rbx] ; add al, 0x16 ; ret
0x00000000000b4594 : mov ax, 0xfde8 ; jne 0xb4567 ; ret
0x000000000002d3bd : mov ax, 3 ; syscall
0x00000000000af0cf : mov bh, 0x43 ; adc byte ptr [rax + rcx*4 + 0x63], al ; adc cl, byte ptr [rax + 1] ; ret
0x00000000000a39a0 : mov bh, 0x47 ; adc byte ptr [rcx], ch ; ret 0x428d
0x0000000000033df8 : mov bh, 0x48 ; add edx, edi ; jmp rdx
0x00000000000a4318 : mov bh, 0x55 ; ret 0xf41
0x00000000000bed8b : mov bh, 0x79 ; ret 0x6348
0x00000000000a3ea3 : mov bh, 0x7d ; ret 0xb70f
0x0000000000002b9c : mov bh, 0xb1 ; or cl, cl ; clc ; ret
0x000000000012d4c4 : mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x000000000002eb8a : mov bh, 0xc0 ; ret
0x0000000000146cc9 : mov bh, 0xef ; jmp rcx
0x000000000013f2c1 : mov bh, 0xf3 ; call rsp
0x00000000000f4e74 : mov bh, 0xf6 ; or eax, esi ; bswap eax ; ret
0x0000000000141e61 : mov bh, 0xfb ; jmp rsp
0x00000000000e4d37 : mov bh, 0xff ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000015ea05 : mov bh, 1 ; add byte ptr [rax - 9], cl ; sti ; jmp qword ptr [rsi]
0x000000000002eb83 : mov bh, 4 ; js 0x2eb13 ; loopne 0x2eb9a ; movzx eax, ax ; ret
0x000000000002ebc3 : mov bh, 4 ; js 0x2eb53 ; loopne 0x2ebd4 ; movzx eax, ax ; ret
0x000000000002ec63 : mov bh, 4 ; js 0x2ebf3 ; loopne 0x2ec76 ; movzx eax, ax ; ret
0x000000000002ed43 : mov bh, 4 ; js 0x2ecd0 ; loopne 0x2ed50 ; ret
0x000000000002eddc : mov bh, 4 ; js 0x2ed69 ; loopne 0x2ede9 ; ret
0x000000000002edfc : mov bh, 4 ; js 0x2ed8c ; loopne 0x2ee13 ; movzx eax, ax ; ret
0x000000000002ee3c : mov bh, 4 ; js 0x2edcc ; loopne 0x2ee4d ; movzx eax, ax ; ret
0x000000000002eedc : mov bh, 4 ; js 0x2ee6c ; loopne 0x2eeef ; movzx eax, ax ; ret
0x00000000000e6516 : mov bh, 4 ; js 0xe64a6 ; loopne 0xe652d ; movzx eax, ax ; ret
0x00000000000e6666 : mov bh, 4 ; js 0xe65f3 ; loopne 0xe6673 ; ret
0x00000000000e6706 : mov bh, 4 ; js 0xe6696 ; loopne 0xe6717 ; movzx eax, ax ; ret
0x00000000000e6a56 : mov bh, 4 ; js 0xe69e6 ; loopne 0xe6a69 ; movzx eax, ax ; ret
0x00000000000e6faf : mov bh, 4 ; js 0xe6f3f ; loopne 0xe6fc6 ; movzx eax, ax ; ret
0x00000000000e70cf : mov bh, 4 ; js 0xe705c ; loopne 0xe70dc ; ret
0x00000000000e715f : mov bh, 4 ; js 0xe70ef ; loopne 0xe7170 ; movzx eax, ax ; ret
0x00000000000e742f : mov bh, 4 ; js 0xe73bf ; loopne 0xe7442 ; movzx eax, ax ; ret
0x000000000012ebd3 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000000d57d5 : mov bh, 7 ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000000e3eb8 : mov bl, 0 ; add byte ptr [rax], al ; syscall
0x000000000001f51e : mov bl, 0x34 ; add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x0000000000001ae7 : mov bl, 0x5a ; ret 0x2a63
0x00000000000c310f : mov bl, 0x8b ; pop rax ; or bh, dh ; ret
0x000000000012e5a3 : mov bl, 0x8e ; ret 0xdcd9
0x00000000000c3004 : mov bl, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x00000000001307a1 : mov bl, 0xf3 ; call rsp
0x0000000000130761 : mov bl, 0xf3 ; jmp rsp
0x0000000000151ac1 : mov bl, 0xf6 ; jmp rcx
0x0000000000003a79 : mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x00000000001424a1 : mov bl, 0xfc ; jmp rsp
0x0000000000141a4d : mov bl, 1 ; add byte ptr [rbx + rdi - 5], dh ; jmp rsp
0x00000000001612f9 : mov bl, bh ; call rcx
0x0000000000085b9d : mov byte ptr [r10 + 1], 0 ; ret
0x00000000000f1ced : mov byte ptr [r11 + 1], 0 ; mov rax, rdi ; pop rbx ; ret
0x0000000000116195 : mov byte ptr [r8 + 1], r9b ; ret
0x00000000000430cf : mov byte ptr [r8 + rdx], 0 ; ret
0x000000000002fbab : mov byte ptr [r8 - 0x77], r9b ; ret
0x00000000000e105a : mov byte ptr [r9 + r15 - 0x20], 0x89 ; ret
0x00000000000de8c5 : mov byte ptr [r9 - 1], 0 ; ret
0x000000000002da30 : mov byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000000cc97d : mov byte ptr [rax + 0x63], cl ; ret 0x8948
0x0000000000116196 : mov byte ptr [rax + 1], cl ; ret
0x00000000000a3015 : mov byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000476e2 : mov byte ptr [rax + 8], 0 ; ret
0x000000000010d974 : mov byte ptr [rax + rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000022068 : mov byte ptr [rax + rax], dh ; mov rdi, qword ptr [rsp + 8] ; call rax
0x000000000002204c : mov byte ptr [rax + rax], dh ; test rax, rax ; je 0x2205e ; call rax
0x000000000002208c : mov byte ptr [rax + rax], dh ; test rax, rax ; je 0x220a7 ; call rax
0x000000000011bc05 : mov byte ptr [rax + rcx], dl ; ret
0x00000000000430d0 : mov byte ptr [rax + rdx], 0 ; ret
0x000000000007b474 : mov byte ptr [rax + rsi], bh ; ret
0x000000000007b473 : mov byte ptr [rax + rsi], dil ; ret
0x000000000002fbac : mov byte ptr [rax - 0x77], cl ; ret
0x000000000014f8a5 : mov byte ptr [rax], 0 ; clc ; cmc ; call rsi
0x00000000000ec22e : mov byte ptr [rax], 0x20 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000ec210 : mov byte ptr [rax], 0xa ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000e1d96 : mov byte ptr [rax], 0xa ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000130904 : mov byte ptr [rax], 0xf5 ; inc esi ; add ch, dh ; jmp qword ptr [rsi]
0x0000000000130908 : mov byte ptr [rax], 0xf5 ; jmp qword ptr [rsi]
0x000000000014bb0d : mov byte ptr [rax], al ; add byte ptr [rax - 0xc], dh ; jmp qword ptr [rbx]
0x0000000000036530 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000111f2f : mov byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000e276f : mov byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000013e6e5 : mov byte ptr [rax], al ; add byte ptr [rcx + rax*8 - 0x11], ah ; jmp rsp
0x0000000000157818 : mov byte ptr [rax], al ; stc ; call rcx
0x00000000001009e3 : mov byte ptr [rbp + 3], bh ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000036c27 : mov byte ptr [rbp - 0x12], dh ; mov eax, 1 ; ret
0x00000000000ffb8f : mov byte ptr [rbx + 0x11], dl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f1cee : mov byte ptr [rbx + 1], 0 ; mov rax, rdi ; pop rbx ; ret
0x00000000000dd3be : mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x0000000000113e0d : mov byte ptr [rbx], al ; add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x0000000000002f36 : mov byte ptr [rbx], cl ; and bh, byte ptr [rax - 0x52] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000000bba71 : mov byte ptr [rcx + 0xf], 0x94 ; ret
0x00000000000f50c8 : mov byte ptr [rcx + 0xf], 0xb6 ; xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x901
0x00000000000935b7 : mov byte ptr [rcx + rax - 0x38], cl ; jmp rax
0x00000000000e105b : mov byte ptr [rcx + rdi - 0x20], 0x89 ; ret
0x00000000000de8c6 : mov byte ptr [rcx - 1], 0 ; ret
0x000000000008749c : mov byte ptr [rcx], 0 ; cmp rcx, rdx ; jne 0x874a1 ; ret
0x000000000011b22a : mov byte ptr [rcx], 0 ; jmp 0x11b1f6
0x0000000000093a44 : mov byte ptr [rcx], 0 ; mov qword ptr [rdi], rdx ; ret
0x0000000000093960 : mov byte ptr [rcx], 0 ; mov rcx, rdi ; mov qword ptr [rdx], rcx ; ret
0x00000000000ffc12 : mov byte ptr [rcx], 0x31 ; ror byte ptr [rax - 0x77], 0x37 ; ret
0x000000000002be9f : mov byte ptr [rcx], 0x83 ; ret
0x00000000000c82ed : mov byte ptr [rcx], 0x83 ; ret 0x4840
0x0000000000141165 : mov byte ptr [rcx], al ; add byte ptr [rsi + rdx*2], dh ; cli ; call rsp
0x00000000000874d7 : mov byte ptr [rcx], al ; jne 0x874c5 ; ret
0x000000000014d2e8 : mov byte ptr [rcx], al ; ret
0x000000000007028e : mov byte ptr [rcx], bh ; movzx eax, dil ; ret
0x000000000007028d : mov byte ptr [rcx], dil ; movzx eax, dil ; ret
0x00000000000874d6 : mov byte ptr [rcx], r8b ; jne 0x874c6 ; ret
0x00000000001005a6 : mov byte ptr [rdi + 1], dh ; ret
0x00000000001005a5 : mov byte ptr [rdi + 1], sil ; ret
0x00000000000936a7 : mov byte ptr [rdi + 2], 0 ; lea rax, [rdi + 2] ; ret
0x00000000000935f7 : mov byte ptr [rdi + 2], 0 ; mov rax, rdi ; ret
0x00000000000936c6 : mov byte ptr [rdi + 4], 0 ; lea rax, [rdi + 4] ; ret
0x0000000000093616 : mov byte ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x000000000009363d : mov byte ptr [rdi + 6], 0 ; ret
0x00000000000bb750 : mov byte ptr [rdi + 8], 0x15 ; mov eax, 1 ; ret
0x00000000000bb71a : mov byte ptr [rdi + 8], 0x16 ; mov eax, 1 ; ret
0x00000000000bb780 : mov byte ptr [rdi + 8], 0x19 ; mov eax, 1 ; ret
0x00000000000bb7a7 : mov byte ptr [rdi + 8], 0x1a ; mov eax, 2 ; ret
0x00000000000bb7f0 : mov byte ptr [rdi + 8], 0x1c ; mov eax, 2 ; ret
0x00000000000bb7dd : mov byte ptr [rdi + 8], 0x1e ; mov eax, 2 ; ret
0x00000000000bb740 : mov byte ptr [rdi + 8], 1 ; mov eax, 1 ; ret
0x00000000000bb728 : mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00000000000d2111 : mov byte ptr [rdi + rax], 0 ; call 0x8e3e6
0x0000000000100573 : mov byte ptr [rdi + rsi], 0 ; ret
0x0000000000149468 : mov byte ptr [rdi - 0xe], ch ; jmp qword ptr [rsi]
0x000000000010ad9e : mov byte ptr [rdi - 1], al ; cmp rdi, rcx ; jne 0x10ad99 ; ret
0x0000000000093592 : mov byte ptr [rdi - 1], al ; mov dword ptr [rdi - 7], eax ; mov rax, rdi ; ret
0x0000000000093674 : mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x000000000001f597 : mov byte ptr [rdi], 0 ; ret
0x0000000000036938 : mov byte ptr [rdi], 0 ; xor eax, eax ; ret
0x00000000000bb770 : mov byte ptr [rdi], 0x5b ; mov eax, 1 ; ret
0x00000000000f19db : mov byte ptr [rdi], al ; jne 0xf19cf ; mov rax, rdi ; ret
0x00000000000f1bab : mov byte ptr [rdi], al ; jne 0xf1b9f ; mov rax, r10 ; ret
0x00000000000bb7c9 : mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x0000000000064a5e : mov byte ptr [rdi], cl ; xchg dword ptr [rbp - 0x76fffffd], ebp ; ret 0x348
0x0000000000085b9e : mov byte ptr [rdx + 1], 0 ; ret
0x0000000000113429 : mov byte ptr [rdx + rdi], 0 ; ret
0x00000000000f9aba : mov byte ptr [rdx], 0 ; pop r12 ; ret
0x00000000000e2ef1 : mov byte ptr [rdx], 0 ; pop rbx ; ret
0x00000000000fc2d8 : mov byte ptr [rip + 0x271509], 1 ; pop rbx ; ret
0x000000000002dc9c : mov byte ptr [rip + 0x33ce1b], dl ; ret
0x0000000000002434 : mov byte ptr [rip - 0x22beffe8], dh ; out 0xa9, al ; ret 0xbd07
0x000000000008987a : mov byte ptr [rsi + rax], dl ; jne 0x89879 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008f9d4 : mov byte ptr [rsi + rdx + 1], al ; jg 0x8f9c7 ; ret
0x0000000000047853 : mov byte ptr [rsi], al ; jne 0x47837 ; mov rax, rsi ; ret
0x00000000000477d7 : mov byte ptr [rsi], dl ; jne 0x477c7 ; mov rax, rsi ; ret
0x00000000000dbd03 : mov byte ptr [rsp - 0x15], al ; mov eax, 0x10 ; syscall
0x000000000011b229 : mov byte ptr gs:[rcx], 0 ; jmp 0x11b1f7
0x0000000000118f08 : mov ch, 0 ; add byte ptr [rax], al ; syscall
0x000000000014e815 : mov ch, 0 ; add byte ptr [rax], ch ; nop ; hlt ; jmp qword ptr [rcx]
0x000000000014e7fd : mov ch, 0 ; add byte ptr [rax], dl ; nop ; hlt ; jmp qword ptr [rbx]
0x000000000012bfe2 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x000000000012d323 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000000be122 : mov ch, 0x83 ; ret 0x8901
0x000000000012e6bf : mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000085370 : mov ch, 0xa ; add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x144
0x000000000012f06a : mov ch, 0xab ; ret
0x000000000013f831 : mov ch, 0xf4 ; call rsp
0x000000000002b367 : mov ch, 0xf5 ; xor eax, dword ptr [rax] ; ret
0x00000000001635a8 : mov ch, 4 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x00000000000330aa : mov ch, byte ptr [rdi + 0x33] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000082df8 : mov ch, byte ptr [rsi] ; add byte ptr [rbp + 0xa], dh ; jmp 0x82e2e
0x000000000015e648 : mov ch, ch ; cli ; call qword ptr [rsi]
0x00000000000e3c15 : mov cl, 0 ; add byte ptr [rax], al ; syscall
0x0000000000088aeb : mov cl, 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000003b2c : mov cl, 0x22 ; xchg eax, ebp ; ret
0x00000000000af5ff : mov cl, 0x2b ; add byte ptr [rax - 0x77], cl ; ret 0xb5e9
0x0000000000051447 : mov cl, 0x35 ; ret
0x00000000000f6e28 : mov cl, 0x35 ; ret 0x2765
0x0000000000021f07 : mov cl, 0x46 ; adc dword ptr [rax], eax ; ret
0x0000000000002b9d : mov cl, 0x65 ; or cl, cl ; clc ; ret
0x000000000007f440 : mov cl, 0xd ; loop 0x7f3e8 ; add byte ptr cs:[rax + 0x39], cl ; ret 0x1374
0x00000000000f0c55 : mov cl, 0xd ; std ; fsub dword ptr [rdi] ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000001306d9 : mov cl, 0xf3 ; jmp qword ptr [rax]
0x00000000000b5ad8 : mov cl, 0xf3 ; ret
0x000000000015e3b5 : mov cl, 1 ; add byte ptr [rax], cl ; out 0xfa, eax ; jmp qword ptr [rbx]
0x00000000000e6cbb : mov cl, 3 ; add al, 0xa ; ret
0x0000000000161fd0 : mov cl, 6 ; add byte ptr [rax], al ; fld dword ptr [rbx] ; add byte ptr [rax], al ; ret
0x0000000000003729 : mov cl, byte ptr [rbp + 2] ; ret
0x000000000008bd05 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x0000000000083d24 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x000000000012e492 : mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x00000000000959ab : mov cl, dl ; and cl, 0xf ; je 0x959d7 ; ret
0x000000000012e74c : mov cs, edi ; ret 0x8b36
0x0000000000092742 : mov cs, edx ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x2b4c
0x000000000013edad : mov dh, 0 ; add ah, dl ; and esi, ebx ; call rsp
0x000000000014e8bd : mov dh, 0 ; add al, dl ; nop ; hlt ; jmp qword ptr [rbx]
0x000000000014e82d : mov dh, 0 ; add byte ptr [rax - 0x70], al ; hlt ; jmp qword ptr [rbx]
0x000000000014e845 : mov dh, 0 ; add byte ptr [rax - 0x70], bl ; hlt ; jmp qword ptr [rcx]
0x000000000014e85d : mov dh, 0 ; add byte ptr [rax - 0x70], dh ; hlt ; jmp qword ptr [rbx]
0x0000000000118f58 : mov dh, 0 ; add byte ptr [rax], al ; syscall
0x0000000000078916 : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000077ca3 : mov dh, 0 ; pop rbx ; ret
0x00000000000767c7 : mov dh, 0 ; ret
0x000000000009f62c : mov dh, 0x14 ; cmp byte ptr [rax - 0x49f00006], al ; ret 0x974
0x0000000000088c95 : mov dh, 0x16 ; sub eax, edx ; ret
0x0000000000034538 : mov dh, 0x17 ; test dl, dl ; jne 0x3451e ; ret
0x00000000000b583b : mov dh, 0x17 ; test dl, dl ; jne 0xb581f ; xor eax, eax ; ret
0x000000000006f4b6 : mov dh, 0x1d ; add byte ptr [rax], al ; nop dword ptr [rax - 0x34] ; mov edx, eax ; jmp 0x6f464
0x00000000000a9cee : mov dh, 0x40 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000f1ccf : mov dh, 0x42 ; dec dword ptr [rcx - 0x7d] ; ret
0x00000000000b63ff : mov dh, 0x43 ; add cl, byte ptr [rax - 0x7d] ; ret
0x000000000003b6f1 : mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000000f50cb : mov dh, 0x44 ; xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x901
0x000000000005e26f : mov dh, 0x45 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000010273a : mov dh, 0x45 ; add byte ptr [rax - 0x7d], cl ; ret 0x3108
0x0000000000054018 : mov dh, 0x45 ; or al, 0x89 ; ret 0xeac0
0x0000000000085b86 : mov dh, 0x49 ; dec dword ptr [rcx - 0x7d] ; ret 0x8401
0x000000000012d482 : mov dh, 0x4e ; ret 0x474c
0x00000000000278e1 : mov dh, 0x50 ; dec dword ptr [rcx - 0x7d] ; ret 0x4801
0x000000000010076d : mov dh, 0x52 ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x0000000000094213 : mov dh, 0x52 ; add eax, dword ptr [rdi + rcx - 0x4a] ; ret 0x3945
0x0000000000032b12 : mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000006b450 : mov dh, 0x53 ; or al, 0xf6 ; ret 0x7404
0x00000000000b5ad4 : mov dh, 0x57 ; add ebx, ebp ; mov cl, 0xf3 ; ret
0x00000000000c9321 : mov dh, 0x84 ; and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe2c1
0x00000000000836a5 : mov dh, 0xc ; adc dword ptr [rax - 0x7d], ecx ; ret 0x4201
0x000000000010923c : mov dh, 0xc0 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000114330 : mov dh, 0xc0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000108d7d : mov dh, 0xc0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000113a40 : mov dh, 0xc0 ; add rsp, 8 ; ret
0x00000000000b4817 : mov dh, 0xc0 ; lea rax, [rax + rax - 1] ; ret
0x0000000000035cc5 : mov dh, 0xc0 ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x000000000006af28 : mov dh, 0xc0 ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x0000000000058320 : mov dh, 0xc0 ; movsxd rax, dword ptr [rcx + rax*4] ; add rcx, rax ; jmp rcx
0x00000000000b9d02 : mov dh, 0xc0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000006afe0 : mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rsi, rax ; jmp rsi
0x00000000000d84b1 : mov dh, 0xc0 ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000069f09 : mov dh, 0xc0 ; neg eax ; pop rbx ; ret
0x0000000000022601 : mov dh, 0xc0 ; neg eax ; ret
0x000000000010d76b : mov dh, 0xc0 ; pop r12 ; ret
0x0000000000109fb8 : mov dh, 0xc0 ; pop rbp ; ret
0x00000000000e0f41 : mov dh, 0xc0 ; pop rbx ; ret
0x000000000003689e : mov dh, 0xc0 ; ret
0x00000000000945dc : mov dh, 0xc1 ; pop rbx ; ret
0x000000000009f633 : mov dh, 0xc2 ; je 0x9f645 ; ret
0x000000000009460c : mov dh, 0xc2 ; pop rbx ; ret
0x0000000000078a94 : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a9dd1 : mov dh, 0xc6 ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x0000000000070292 : mov dh, 0xc7 ; ret
0x000000000012e6c4 : mov dh, 0xc7 ; ret 0xe71f
0x00000000000bc210 : mov dh, 0xc8 ; movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x00000000000a6c2d : mov dh, 0xd2 ; movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x0000000000088cbb : mov dh, 0xd2 ; sub eax, edx ; ret
0x00000000000584e8 : mov dh, 0xdb ; movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x00000000000850d1 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x00000000000c5e54 : mov dh, 0xed ; movsxd rcx, dword ptr [rax + r13*4] ; add rax, rcx ; jmp rax
0x000000000014d1c9 : mov dh, 0xf3 ; jmp qword ptr [rcx]
0x00000000000f4e61 : mov dh, 0xf6 ; shl eax, 8 ; or eax, esi ; bswap eax ; ret
0x000000000015e8fd : mov dh, 1 ; add byte ptr [rax], dl ; idiv dl ; call rdi
0x0000000000078921 : mov dh, 2 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c7cb7 : mov dh, 4 ; xor byte ptr [rcx], bh ; ret 0x1772
0x0000000000088c92 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000000850d4 : mov dh, 7 ; sub eax, ecx ; ret
0x000000000013f141 : mov dh, bl ; jmp rsp
0x00000000000947ee : mov dh, byte ptr [rdi + rbx*8 - 0xd] ; ret
0x000000000014e4d5 : mov dl, 0 ; add al, bl ; jg 0x14e4d5 ; call qword ptr [rsi]
0x00000000000e3e88 : mov dl, 0 ; add byte ptr [rax], al ; syscall
0x0000000000003a24 : mov dl, 0x1e ; ret
0x00000000000d0d81 : mov dl, 0x29 ; add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x85 ; ret 0
0x000000000007e419 : mov dl, 0x2e ; add byte ptr [rax + 0x39], cl ; ror dword ptr [rdi], cl ; xchg eax, ebp ; ret 0x8348
0x0000000000033d8a : mov dl, 0x77 ; str word ptr [rax + 0x63] ; ret
0x000000000002e88b : mov dl, 0x8b ; add al, 7 ; ret
0x000000000014a639 : mov dl, 0xf2 ; call qword ptr [rsi]
0x00000000001306a1 : mov dl, 0xf3 ; jmp qword ptr [rax]
0x000000000011a989 : mov dl, ah ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000000000e3586 : mov dword ptr [0x2d0], eax ; pop rax ; pop rdi ; call rax
0x00000000000b3da4 : mov dword ptr [0x2d0], esi ; mov eax, esi ; ret
0x0000000000025127 : mov dword ptr [r13 + 0x54], eax ; pop r13 ; pop r14 ; ret
0x00000000000dbde8 : mov dword ptr [r8 + 0x21], esi ; ret
0x00000000000dbde3 : mov dword ptr [r8 + 0x38], edx ; mov word ptr [r8 + 0x21], si ; ret
0x000000000010bfa5 : mov dword ptr [r8 + 0x6c], eax ; mov eax, 1 ; ret
0x0000000000095ada : mov dword ptr [r8 + 4], ecx ; jne 0x95aaf ; ret
0x000000000010bfb6 : mov dword ptr [r8], eax ; mov eax, 1 ; ret
0x0000000000100801 : mov dword ptr [r8], ecx ; mov qword ptr [r9], r10 ; ret
0x0000000000100774 : mov dword ptr [r8], edx ; mov qword ptr [r9], r10 ; ret
0x00000000000f0e30 : mov dword ptr [r9], r8d ; xor eax, eax ; ret
0x000000000010f6e0 : mov dword ptr [rax + 0x10], edx ; mov eax, 1 ; ret
0x0000000000070b9d : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000070bdd : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x00000000000e13d1 : mov dword ptr [rax + 0x10], esi ; ret
0x000000000007119d : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000075fed : mov dword ptr [rax + 0x20], edx ; pop rbx ; ret
0x00000000000bddff : mov dword ptr [rax + 0x20], edx ; xor eax, eax ; ret
0x00000000000bde2d : mov dword ptr [rax + 0x20], esi ; xor eax, eax ; ret
0x00000000000dbde9 : mov dword ptr [rax + 0x21], esi ; ret
0x00000000000dbde4 : mov dword ptr [rax + 0x38], edx ; mov word ptr [r8 + 0x21], si ; ret
0x0000000000070ba1 : mov dword ptr [rax + 0x40], ecx ; ret
0x000000000003912e : mov dword ptr [rax + 0x40], edx ; call qword ptr [rbx]
0x000000000007124f : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000010bfa6 : mov dword ptr [rax + 0x6c], eax ; mov eax, 1 ; ret
0x000000000010f578 : mov dword ptr [rax + 0xc], edx ; mov eax, 1 ; ret
0x000000000006a033 : mov dword ptr [rax + 4], 1 ; xor eax, eax ; ret
0x0000000000095adb : mov dword ptr [rax + 4], ecx ; jne 0x95aae ; ret
0x000000000011e603 : mov dword ptr [rax + 8], 0 ; pop rbx ; ret
0x0000000000079bfe : mov dword ptr [rax + 8], 0 ; ret
0x000000000010bf18 : mov dword ptr [rax + 8], edx ; mov eax, 1 ; ret
0x00000000000822c9 : mov dword ptr [rax + 8], esi ; ret
0x00000000000bc350 : mov dword ptr [rax + rax*4], edx ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000892a2 : mov dword ptr [rax + rdx - 2], ecx ; ret
0x00000000000f131e : mov dword ptr [rax - 0x7d], ecx ; ret
0x0000000000114f6d : mov dword ptr [rax], 0 ; pop rbx ; ret
0x00000000000dca38 : mov dword ptr [rax], 0x16 ; mov eax, edi ; ret
0x00000000000361a6 : mov dword ptr [rax], 0x16 ; or eax, 0xffffffff ; ret
0x00000000000e0f90 : mov dword ptr [rax], 0x16 ; pop rbx ; ret
0x00000000000e0f4d : mov dword ptr [rax], 0x16 ; xor eax, eax ; pop rbx ; ret
0x00000000000a2aa8 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x000000000005fdf9 : mov dword ptr [rax], 0x83480000 ; ret
0x000000000007e6b8 : mov dword ptr [rax], 0xc ; xor eax, eax ; pop rbx ; ret
0x000000000007e888 : mov dword ptr [rax], 0xc ; xor eax, eax ; ret
0x000000000013f065 : mov dword ptr [rax], 0xf3774400 ; jmp rsp
0x00000000000dc568 : mov dword ptr [rax], 0xffffffff ; xor eax, eax ; ret
0x00000000000aeb52 : mov dword ptr [rax], 2 ; xor eax, eax ; ret
0x000000000002260e : mov dword ptr [rax], 9 ; mov eax, edi ; ret
0x000000000013e72d : mov dword ptr [rax], eax ; add ah, al ; ret
0x000000000013e70d : mov dword ptr [rax], eax ; add ah, al ; ret 0xffef
0x000000000013e735 : mov dword ptr [rax], eax ; add ah, dh ; ret
0x0000000000095643 : mov dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000d65b5 : mov dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000049d21 : mov dword ptr [rax], eax ; jmp 0x49ceb
0x0000000000055351 : mov dword ptr [rax], eax ; jmp 0x5531b
0x000000000010bfb7 : mov dword ptr [rax], eax ; mov eax, 1 ; ret
0x00000000000cc2d7 : mov dword ptr [rax], eax ; or eax, 0xffffffff ; ret
0x000000000007f2b8 : mov dword ptr [rax], ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000476e0 : mov dword ptr [rax], ecx ; mov byte ptr [rax + 8], 0 ; ret
0x000000000006f3a2 : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; add rsp, 8 ; ret
0x000000000007137a : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000100802 : mov dword ptr [rax], ecx ; mov qword ptr [r9], r10 ; ret
0x00000000000d10d1 : mov dword ptr [rax], edi ; add rsp, 0x10 ; xor al, al ; pop rbx ; ret
0x000000000007f73a : mov dword ptr [rax], edi ; ret
0x00000000000b0636 : mov dword ptr [rax], edx ; add rsp, 0x18 ; ret
0x00000000000e3439 : mov dword ptr [rax], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000b0714 : mov dword ptr [rax], edx ; add rsp, 8 ; ret
0x00000000000964a9 : mov dword ptr [rax], edx ; jne 0x964a5 ; ret
0x0000000000100775 : mov dword ptr [rax], edx ; mov qword ptr [r9], r10 ; ret
0x00000000000dbdf7 : mov dword ptr [rax], edx ; or eax, 0xffffffff ; ret
0x000000000002e7f8 : mov dword ptr [rax], edx ; ret
0x00000000000717e5 : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x00000000000b0823 : mov dword ptr [rax], esi ; add rsp, 0x40 ; mov eax, edx ; pop rbx ; ret
0x00000000000f3372 : mov dword ptr [rax], esi ; jne 0xf3365 ; ret
0x00000000000aff97 : mov dword ptr [rax], esi ; mov rax, rdx ; add rsp, 8 ; ret
0x00000000000cc2d6 : mov dword ptr [rax], r8d ; or eax, 0xffffffff ; ret
0x0000000000025128 : mov dword ptr [rbp + 0x54], eax ; pop r13 ; pop r14 ; ret
0x000000000010959a : mov dword ptr [rbp + 0x68], ecx ; jmp 0x109566
0x00000000000d546a : mov dword ptr [rbp + 4], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000529fc : mov dword ptr [rbp - 0x1180], ecx ; jmp rax
0x000000000005d36d : mov dword ptr [rbp - 0x1f0], edx ; call 0x79668
0x00000000000b3c99 : mov dword ptr [rbp - 0x38], edx ; call 0xeff75
0x00000000000b3cdb : mov dword ptr [rbp - 0x40], eax ; call 0xeff75
0x00000000000b3cd7 : mov dword ptr [rbp - 0x48], edx ; mov qword ptr [rbp - 0x40], r8 ; call 0xeff79
0x0000000000022ddf : mov dword ptr [rbp - 0x58], eax ; call rcx
0x0000000000047d7a : mov dword ptr [rbp - 0x5a0], ecx ; jmp rax
0x00000000000e5380 : mov dword ptr [rbp - 0x6d0], eax ; mov eax, ebx ; syscall
0x00000000000efb55 : mov dword ptr [rbp - 0x70], edx ; mov rdx, r12 ; call rax
0x00000000000efe2f : mov dword ptr [rbp - 0x80], eax ; call r8
0x00000000000ef3d4 : mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x00000000000ef750 : mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x00000000000ef7d0 : mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00000000000ee469 : mov dword ptr [rbp - 0x98], ebx ; call 0xea758
0x000000000004e9d8 : mov dword ptr [rbp - 0xc8], eax ; mov rdi, rbx ; call rax
0x00000000000ffab4 : mov dword ptr [rbp], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000824db : mov dword ptr [rbp], eax ; je 0x825c9 ; call rax
0x0000000000082685 : mov dword ptr [rbp], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fea76 : mov dword ptr [rbp], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fea75 : mov dword ptr [rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002bb4f : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x000000000011c2ce : mov dword ptr [rbx + 0x10], eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000076d0f : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x00000000000775b1 : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000eb0cc : mov dword ptr [rbx + 0x10], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007c28e : mov dword ptr [rbx + 0x14], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000114b7a : mov dword ptr [rbx + 0x18], 0 ; pop rbx ; ret
0x000000000011c26b : mov dword ptr [rbx + 0x18], eax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000eb10c : mov dword ptr [rbx + 0x18], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000794e7 : mov dword ptr [rbx + 0x20], eax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x0000000000114be9 : mov dword ptr [rbx + 0x20], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ca07b : mov dword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x00000000000a46aa : mov dword ptr [rbx + 0x28], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007601d : mov dword ptr [rbx + 0x28], eax ; pop rbx ; ret
0x00000000000834ab : mov dword ptr [rbx + 0x30], eax ; call rcx
0x00000000000bbbfa : mov dword ptr [rbx + 0x34], ebp ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000834a5 : mov dword ptr [rbx + 0x40], eax ; mov qword ptr [rbx], rdi ; mov dword ptr [rbx + 0x30], eax ; call rcx
0x0000000000035cc7 : mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000db9aa : mov dword ptr [rbx + 0x48], eax ; pop rbx ; ret
0x0000000000083572 : mov dword ptr [rbx + 0x48], ecx ; mov rdi, r9 ; call rcx
0x0000000000079557 : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000109403 : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000077f0a : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000070c2b : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000076bdf : mov dword ptr [rbx + 0x90], eax ; pop rbx ; ret
0x00000000000bbc80 : mov dword ptr [rbx + 8], eax ; movsxd rdx, dword ptr [rbx + 4] ; jmp 0xbbc53
0x000000000002bb77 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00000000000eb08c : mov dword ptr [rbx + 8], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003676d : mov dword ptr [rbx + 8], edx ; add rsp, 0x40 ; pop rbx ; ret
0x0000000000079705 : mov dword ptr [rbx + 8], edx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000008385d : mov dword ptr [rbx + 8], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e0f7a : mov dword ptr [rbx], 0 ; pop rbx ; ret
0x0000000000162614 : mov dword ptr [rbx], 0x6c50000 ; add byte ptr [rax], al ; ret
0x000000000010977c : mov dword ptr [rbx], eax ; add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x000000000011c4d6 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000007977e : mov dword ptr [rbx], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000008356f : mov dword ptr [rbx], eax ; mov qword ptr [rbx + 0x48], r9 ; mov rdi, r9 ; call rcx
0x000000000011140e : mov dword ptr [rbx], eax ; pop rbx ; ret
0x00000000000e0f3b : mov dword ptr [rbx], eax ; setne al ; movzx eax, al ; pop rbx ; ret
0x0000000000110b7f : mov dword ptr [rbx], eax ; xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001107fe : mov dword ptr [rbx], eax ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000d95df : mov dword ptr [rbx], eax ; xor eax, eax ; pop rbx ; ret
0x000000000003635e : mov dword ptr [rbx], ecx ; xor eax, eax ; add rsp, 8 ; pop rbx ; ret
0x00000000000711a0 : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x00000000000834a9 : mov dword ptr [rbx], edi ; mov dword ptr [rbx + 0x30], eax ; call rcx
0x000000000006f784 : mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000794ea : mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000006cc74 : mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010bef8 : mov dword ptr [rcx + 0x10], edx ; mov eax, 1 ; ret
0x000000000010ece4 : mov dword ptr [rcx + 0x48], eax ; mov eax, 1 ; ret
0x000000000010ec11 : mov dword ptr [rcx + 0x54], eax ; mov eax, 1 ; ret
0x000000000010ed11 : mov dword ptr [rcx + 0x58], eax ; mov eax, 1 ; ret
0x0000000000000425 : mov dword ptr [rcx + 0x7c05000c], eax ; adc byte ptr [rsp + rcx], bl ; ret 0x4412
0x0000000000096468 : mov dword ptr [rcx + 4], esi ; jne 0x96479 ; mov dword ptr [rcx + 8], esi ; ret
0x000000000009646d : mov dword ptr [rcx + 8], esi ; ret
0x0000000000093532 : mov dword ptr [rcx + rcx*4], 0x8948fc47 ; clc ; ret
0x0000000000095c90 : mov dword ptr [rcx], 0 ; jne 0x95c91 ; ret
0x00000000000934c9 : mov dword ptr [rcx], 0xbb401f0f ; mov rax, rdi ; ret
0x00000000000b5a8c : mov dword ptr [rcx], 0xdb75d284 ; ret
0x00000000000b582c : mov dword ptr [rcx], 0xf7bfa80 ; xchg eax, esp ; ret 0xb60f
0x000000000015f91d : mov dword ptr [rcx], 0xfb2e9000 ; call qword ptr [rsi]
0x000000000015f94d : mov dword ptr [rcx], 0xfb2e9000 ; jmp qword ptr [rbx]
0x0000000000141d7d : mov dword ptr [rcx], 0xfb904400 ; jmp rsp
0x00000000000be384 : mov dword ptr [rcx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000002d7ec : mov dword ptr [rcx], eax ; jmp 0x2d802
0x0000000000095cc6 : mov dword ptr [rcx], eax ; jne 0x95cb5 ; ret
0x00000000000361fe : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000073f58 : mov dword ptr [rcx], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000f0e31 : mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x000000000006ff09 : mov dword ptr [rcx], edi ; mov eax, edi ; add rsp, 8 ; ret
0x00000000001007b9 : mov dword ptr [rcx], edi ; ret
0x000000000008882b : mov dword ptr [rcx], edx ; add rsp, 0x100 ; ret
0x0000000000025434 : mov dword ptr [rcx], edx ; jmp 0x253fd
0x0000000000100778 : mov dword ptr [rcx], edx ; ret
0x0000000000095cc5 : mov dword ptr [rcx], r8d ; jne 0x95cb6 ; ret
0x00000000000d60ef : mov dword ptr [rdi + 0x100], edx ; ret
0x00000000000d6126 : mov dword ptr [rdi + 0x108], eax ; xor eax, eax ; ret
0x0000000000045ecf : mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000e1353 : mov dword ptr [rdi + 0x10], esi ; mov qword ptr [rdx], rdi ; ret
0x00000000000d6110 : mov dword ptr [rdi + 0x10c], esi ; xor al, al ; ret
0x0000000000114885 : mov dword ptr [rdi + 0x18], eax ; mov eax, 1 ; ret
0x0000000000079477 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000763ff : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x000000000008ed3a : mov dword ptr [rdi + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000a69fb : mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000114853 : mov dword ptr [rdi + 0x18], edx ; mov eax, 1 ; ret
0x0000000000114828 : mov dword ptr [rdi + 0x18], edx ; ret
0x00000000001147c1 : mov dword ptr [rdi + 0x18], esi ; mov dword ptr [rdi + 0x28], edx ; mov al, 1 ; ret
0x00000000001147ea : mov dword ptr [rdi + 0x18], esi ; ret
0x00000000000a3a2d : mov dword ptr [rdi + 0x20], ecx ; pop rbx ; pop rbp ; ret
0x0000000000109d19 : mov dword ptr [rdi + 0x20], edx ; add rsp, 8 ; ret
0x00000000001147c4 : mov dword ptr [rdi + 0x28], edx ; mov al, 1 ; ret
0x000000000010f5f8 : mov dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x0000000000114955 : mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000bb6bb : mov dword ptr [rdi + 0x2c], eax ; mov dword ptr [rdi + 0x30], eax ; ret
0x00000000000bb6be : mov dword ptr [rdi + 0x30], eax ; ret
0x000000000008ec21 : mov dword ptr [rdi + 0x38], ecx ; ret
0x000000000010f598 : mov dword ptr [rdi + 0x38], edx ; mov eax, 1 ; ret
0x00000000000794a7 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000007b200 : mov dword ptr [rdi + 0x58], ecx ; or eax, 1 ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000036a4d : mov dword ptr [rdi + 0x78], 0xffffffff ; ret
0x00000000000d57c2 : mov dword ptr [rdi + 0x80], edx ; ret
0x00000000000ffc59 : mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x0000000000039fe4 : mov dword ptr [rdi + 2], edx ; ret
0x0000000000093687 : mov dword ptr [rdi + 4], eax ; lea rax, [rdi + 7] ; ret
0x00000000000935d7 : mov dword ptr [rdi + 4], eax ; mov rax, rdi ; ret
0x000000000007b1ea : mov dword ptr [rdi + 4], eax ; ret
0x0000000000039fde : mov dword ptr [rdi + 4], eax ; xor eax, eax ; mov word ptr [rdi + 2], dx ; ret
0x00000000000936d7 : mov dword ptr [rdi + 4], edx ; lea rax, [rdi + 5] ; ret
0x0000000000093627 : mov dword ptr [rdi + 4], edx ; mov rax, rdi ; ret
0x00000000000d5814 : mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x0000000000093686 : mov dword ptr [rdi + 4], r8d ; lea rax, [rdi + 7] ; ret
0x00000000000935d6 : mov dword ptr [rdi + 4], r8d ; mov rax, rdi ; ret
0x00000000000de828 : mov dword ptr [rdi + 8], 0 ; ret
0x000000000007947b : mov dword ptr [rdi + 8], eax ; ret
0x00000000000dbb44 : mov dword ptr [rdi + 8], eax ; xor eax, eax ; ret
0x0000000000045e58 : mov dword ptr [rdi + 8], ecx ; ret
0x000000000004c647 : mov dword ptr [rdi + 8], edx ; jmp 0x4c612
0x0000000000045678 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x00000000000767c3 : mov dword ptr [rdi + 8], edx ; movzx eax, byte ptr [rax] ; ret
0x000000000010a555 : mov dword ptr [rdi + 8], edx ; pop rbx ; ret
0x000000000003985a : mov dword ptr [rdi + 8], edx ; ret
0x00000000000de81c : mov dword ptr [rdi + 8], esi ; ret
0x00000000000892a9 : mov dword ptr [rdi + rdx - 4], ecx ; ret
0x00000000000892b2 : mov dword ptr [rdi + rdx - 8], ecx ; ret
0x0000000000045dbf : mov dword ptr [rdi - 0x10], ecx ; ret
0x00000000000934eb : mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
0x000000000009354f : mov dword ptr [rdi - 5], eax ; mov rax, rdi ; ret
0x0000000000093571 : mov dword ptr [rdi - 6], eax ; mov rax, rdi ; ret
0x0000000000093595 : mov dword ptr [rdi - 7], eax ; mov rax, rdi ; ret
0x0000000000045d3e : mov dword ptr [rdi - 8], ecx ; ret
0x0000000000039314 : mov dword ptr [rdi], 0 ; xor eax, eax ; pop rbx ; ret
0x0000000000035b37 : mov dword ptr [rdi], eax ; fld xword ptr [rsp - 0x18] ; ret
0x000000000004712e : mov dword ptr [rdi], eax ; mov eax, 1 ; ret
0x00000000000de819 : mov dword ptr [rdi], eax ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000008ea52 : mov dword ptr [rdi], eax ; pop rbx ; pop rbp ; ret
0x0000000000045d38 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000045e52 : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x00000000000ffc06 : mov dword ptr [rdi], eax ; xor eax, eax ; ret
0x000000000005173e : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000934fe : mov dword ptr [rdi], ecx ; add rdi, 2 ; mov rax, rdi ; ret
0x00000000000936b4 : mov dword ptr [rdi], ecx ; lea rax, [rdi + 3] ; ret
0x0000000000093614 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x00000000000935d4 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 4], r8d ; mov rax, rdi ; ret
0x00000000000892a7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000003986a : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 8], rdx ; ret
0x00000000000892af : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x0000000000093604 : mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x0000000000093624 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
0x0000000000045d0d : mov dword ptr [rdi], ecx ; ret
0x000000000007609f : mov dword ptr [rdi], edx ; je 0x760ad ; ret
0x0000000000093a2c : mov dword ptr [rdi], edx ; nop dword ptr [rax - 0x45] ; ret
0x000000000001fbb8 : mov dword ptr [rdi], edx ; ret
0x0000000000093695 : mov dword ptr [rdi], esi ; lea rax, [rdi + 1] ; ret
0x00000000000935f5 : mov dword ptr [rdi], esi ; mov byte ptr [rdi + 2], 0 ; mov rax, rdi ; ret
0x0000000000047113 : mov dword ptr [rdi], esi ; mov eax, 1 ; mov dword ptr [rdx], ecx ; ret
0x00000000000935e5 : mov dword ptr [rdi], esi ; mov rax, rdi ; ret
0x00000000000ffc17 : mov dword ptr [rdi], esi ; ret
0x00000000000d57f9 : mov dword ptr [rdi], esi ; xor al, al ; ret
0x000000000010090f : mov dword ptr [rdx + 0x10], eax ; xor eax, eax ; ret
0x000000000006c9ab : mov dword ptr [rdx + 0x140], ecx ; ret
0x0000000000076d7d : mov dword ptr [rdx + 0x140], edi ; pop rbx ; ret
0x00000000001093b8 : mov dword ptr [rdx + 0x20], esi ; ret
0x0000000000109390 : mov dword ptr [rdx + 0x58], edi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000109394 : mov dword ptr [rdx + 0x68], ecx ; ret
0x0000000000069fcc : mov dword ptr [rdx + 8], eax ; add dword ptr [rdx + 4], 1 ; ret
0x00000000000be2d8 : mov dword ptr [rdx + 8], ecx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010ec55 : mov dword ptr [rdx + 8], edi ; ret
0x00000000000892fb : mov dword ptr [rdx], 0xf6001f0f ; ret 0x7404
0x00000000000d6eea : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000000471c7 : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000035efc : mov dword ptr [rdx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000e5c96 : mov dword ptr [rdx], eax ; ret
0x0000000000074ca3 : mov dword ptr [rdx], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000087d1e : mov dword ptr [rdx], ebx ; mov rax, r10 ; pop rbx ; ret
0x00000000000cbfc9 : mov dword ptr [rdx], ecx ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000094885 : mov dword ptr [rdx], ecx ; jne 0x9487d ; ret
0x000000000003988c : mov dword ptr [rdx], ecx ; mov dword ptr [rsi], ecx ; ret
0x0000000000070f1e : mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000004711a : mov dword ptr [rdx], ecx ; ret
0x00000000000c96ff : mov dword ptr [rdx], edi ; ret
0x00000000000fea34 : mov dword ptr [rdx], edi ; xor eax, eax ; ret
0x000000000010ec52 : mov dword ptr [rdx], esi ; mov qword ptr [rdx + 8], rdi ; ret
0x000000000008ef97 : mov dword ptr [rdx], esp ; mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f110c : mov dword ptr [rip + 0x27c08e], edx ; pop rbp ; ret
0x00000000000e5838 : mov dword ptr [rip + 0x2839e2], ebx ; pop rbx ; ret
0x00000000000dfe9e : mov dword ptr [rip + 0x28934c], edi ; ret
0x00000000000deffa : mov dword ptr [rip + 0x28d170], eax ; mov rdx, rax ; jmp 0xdefdc
0x00000000000878e6 : mov dword ptr [rip + 0x2e401c], eax ; ret
0x00000000000822d1 : mov dword ptr [rip + 0x2e9599], esi ; ret
0x0000000000036d53 : mov dword ptr [rip + 0x33230f], eax ; mov eax, edx ; ret
0x0000000000036d30 : mov dword ptr [rip + 0x332336], edx ; ret
0x000000000001f51b : mov dword ptr [rip + 0x34b3c7], eax ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000000ca46c : mov dword ptr [rsi + 0x10], eax ; ret
0x0000000000039efa : mov dword ptr [rsi + 0x10], eax ; xor eax, eax ; ret
0x00000000000397d8 : mov dword ptr [rsi + 0x10], ecx ; mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x00000000000e1394 : mov dword ptr [rsi + 0x10], edx ; mov qword ptr [rax + 8], rsi ; ret
0x00000000000397dc : mov dword ptr [rsi + 0x28], eax ; xor eax, eax ; ret
0x00000000000cac71 : mov dword ptr [rsi + 0x30], ebp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000716f9 : mov dword ptr [rsi + 0x60], ebx ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000dacca : mov dword ptr [rsi + 0x66], edx ; xor eax, eax ; ret
0x00000000000d5733 : mov dword ptr [rsi + 0x78], eax ; xor eax, eax ; ret
0x0000000000039f44 : mov dword ptr [rsi + 0xc], eax ; xor eax, eax ; ret
0x0000000000039f8b : mov dword ptr [rsi + 0xe], eax ; xor eax, eax ; ret
0x0000000000095b24 : mov dword ptr [rsi + 4], 0 ; ret
0x00000000000ca44b : mov dword ptr [rsi + 8], 0 ; ret
0x00000000001084a5 : mov dword ptr [rsi + 8], eax ; ret
0x00000000000ca468 : mov dword ptr [rsi + 8], ecx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x00000000000e13cd : mov dword ptr [rsi + 8], edx ; mov qword ptr [rax + 0x10], rsi ; ret
0x0000000000095719 : mov dword ptr [rsi + rcx], edx ; jne 0x95716 ; ret
0x00000000000fea26 : mov dword ptr [rsi + rdx - 0xb8], ecx ; ret
0x00000000001084c7 : mov dword ptr [rsi], 0 ; ret
0x000000000009356f : mov dword ptr [rsi], 0x48fa4789 ; mov eax, edi ; ret
0x0000000000108534 : mov dword ptr [rsi], 0xa ; ret
0x0000000000108524 : mov dword ptr [rsi], 0xb ; ret
0x0000000000108574 : mov dword ptr [rsi], 0xc ; ret
0x000000000009835e : mov dword ptr [rsi], 1 ; xor ebp, ebp ; mov edx, eax ; jmp 0x98321
0x000000000009a9ae : mov dword ptr [rsi], 1 ; xor ebp, ebp ; mov edx, eax ; jmp 0x9a971
0x000000000009cf2e : mov dword ptr [rsi], 1 ; xor ebp, ebp ; mov edx, eax ; jmp 0x9cef1
0x0000000000108564 : mov dword ptr [rsi], 8 ; ret
0x0000000000101f13 : mov dword ptr [rsi], eax ; mov eax, 1 ; ret
0x000000000007b583 : mov dword ptr [rsi], eax ; mov rax, r8 ; ret
0x0000000000117b44 : mov dword ptr [rsi], eax ; or eax, 0xffffffff ; ret
0x0000000000076403 : mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000003988e : mov dword ptr [rsi], ecx ; ret
0x00000000000ffc5d : mov dword ptr [rsi], edi ; ret
0x00000000000f4da1 : mov dword ptr [rsi], edi ; xor eax, eax ; ret
0x0000000000035969 : mov dword ptr [rsp + 0x10], eax ; fld xword ptr [rsp + 8] ; ret
0x000000000007e09f : mov dword ptr [rsp + 0x10], ecx ; call rdx
0x00000000000e44f4 : mov dword ptr [rsp + 0x18], edi ; call 0xf07c6
0x000000000007e09a : mov dword ptr [rsp + 0x20], eax ; mov qword ptr [rsp + 0x10], rcx ; call rdx
0x00000000000d31e5 : mov dword ptr [rsp + 0x20], edx ; call 0x1f476
0x000000000007de4f : mov dword ptr [rsp + 0x28], edi ; mov rdi, r15 ; call qword ptr [rax]
0x000000000007de82 : mov dword ptr [rsp + 0x28], edx ; call rax
0x000000000010706f : mov dword ptr [rsp + 8], 0 ; call qword ptr [rax]
0x000000000006ca74 : mov dword ptr [rsp + 8], eax ; call 0x78d06
0x0000000000083518 : mov dword ptr [rsp + 8], eax ; call qword ptr [rdx]
0x000000000002817e : mov dword ptr [rsp + 8], eax ; call r12
0x00000000000254a4 : mov dword ptr [rsp + 8], eax ; call r14
0x0000000000025c8a : mov dword ptr [rsp + 8], eax ; call r15
0x00000000000253aa : mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000114cb0 : mov dword ptr [rsp + 8], eax ; xor eax, eax ; call rdx
0x000000000002740e : mov dword ptr [rsp + 8], edi ; mov rdi, qword ptr [rsp + 0x48] ; call rax
0x0000000000110a9c : mov dword ptr [rsp + 8], edi ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000472ba : mov dword ptr [rsp - 0x14], eax ; fld xword ptr [rsp - 0x18] ; ret
0x00000000000e34fb : mov dword ptr [rsp - 0x30], ecx ; syscall
0x00000000000e34f6 : mov dword ptr [rsp - 0x38], eax ; mov qword ptr [rsp - 0x30], r9 ; syscall
0x00000000000dd618 : mov dword ptr [rsp - 0x48], 0x18 ; syscall
0x0000000000035c29 : mov dword ptr [rsp - 2], edi ; fldcw word ptr [rsp - 2] ; ret
0x0000000000107ae0 : mov dword ptr [rsp], eax ; call qword ptr [r11]
0x0000000000027b39 : mov dword ptr [rsp], eax ; call qword ptr [rbx]
0x0000000000023009 : mov dword ptr [rsp], eax ; call rbx
0x0000000000082391 : mov dword ptr [rsp], eax ; je 0x82469 ; call rax
0x00000000000d6a8f : mov dword ptr [rsp], eax ; mov eax, 0 ; syscall
0x00000000000e41df : mov dword ptr [rsp], eax ; mov eax, 0x130 ; syscall
0x00000000000e010f : mov dword ptr [rsp], eax ; mov eax, 0x1a ; syscall
0x00000000000b2d6f : mov dword ptr [rsp], eax ; mov eax, 0x22 ; syscall
0x00000000000b2ddf : mov dword ptr [rsp], eax ; mov eax, 0x23 ; syscall
0x00000000000e439f : mov dword ptr [rsp], eax ; mov eax, 0x2a ; syscall
0x00000000000e42ff : mov dword ptr [rsp], eax ; mov eax, 0x2b ; syscall
0x00000000000e472f : mov dword ptr [rsp], eax ; mov eax, 0x2e ; syscall
0x00000000000e45ff : mov dword ptr [rsp], eax ; mov eax, 0x2f ; syscall
0x00000000000dcf1f : mov dword ptr [rsp], eax ; mov eax, 0x4a ; syscall
0x00000000000dcfbf : mov dword ptr [rsp], eax ; mov eax, 0x4b ; syscall
0x00000000000d72af : mov dword ptr [rsp], eax ; mov eax, 0x55 ; syscall
0x00000000000d6aff : mov dword ptr [rsp], eax ; mov eax, 1 ; syscall
0x00000000000d683f : mov dword ptr [rsp], eax ; mov eax, 2 ; syscall
0x00000000000d714f : mov dword ptr [rsp], eax ; mov eax, 3 ; syscall
0x00000000000daeaf : mov dword ptr [rsp], eax ; mov eax, 7 ; syscall
0x00000000000e35ef : mov dword ptr [rsp], eax ; mov eax, 8 ; syscall
0x00000000001115c3 : mov dword ptr [rsp], ecx ; pop r12 ; ret
0x00000000000afa99 : mov dword ptr [rsp], edx ; mov rdx, qword ptr [rsp + 0x28] ; call rax
0x00000000000dca37 : mov dword ptr fs:[rax], 0x16 ; mov eax, edi ; ret
0x00000000000e0f8f : mov dword ptr fs:[rax], 0x16 ; pop rbx ; ret
0x00000000000a2aa7 : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x000000000007e887 : mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x00000000000aeb51 : mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x000000000002260d : mov dword ptr fs:[rax], 9 ; mov eax, edi ; ret
0x00000000000b0635 : mov dword ptr fs:[rax], edx ; add rsp, 0x18 ; ret
0x00000000000b0713 : mov dword ptr fs:[rax], edx ; add rsp, 8 ; ret
0x00000000000dbdf6 : mov dword ptr fs:[rax], edx ; or eax, 0xffffffff ; ret
0x00000000000cc2d5 : mov dword ptr fs:[rax], r8d ; or eax, 0xffffffff ; ret
0x00000000000fea74 : mov dword ptr fs:[rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000361fd : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000d6ee9 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000035efb : mov dword ptr fs:[rdx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000d4b58 : mov eax, 0 ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000000d6a71 : mov eax, 0 ; syscall
0x00000000000946a8 : mov eax, 0x10 ; pop rbx ; ret
0x00000000000dbd07 : mov eax, 0x10 ; syscall
0x00000000000d68ed : mov eax, 0x101 ; syscall
0x00000000000d67e9 : mov eax, 0x102 ; syscall
0x00000000000d650e : mov eax, 0x103 ; syscall
0x00000000000d7c1f : mov eax, 0x104 ; syscall
0x00000000000de6fc : mov eax, 0x105 ; syscall
0x00000000000d6567 : mov eax, 0x106 ; syscall
0x00000000000d83ca : mov eax, 0x107 ; syscall
0x0000000000069f4d : mov eax, 0x108 ; syscall
0x00000000000d82a0 : mov eax, 0x109 ; syscall
0x00000000000d8307 : mov eax, 0x10a ; syscall
0x00000000000d836a : mov eax, 0x10b ; syscall
0x00000000000d6756 : mov eax, 0x10c ; syscall
0x00000000000d6cdb : mov eax, 0x10d ; syscall
0x00000000000dcdd8 : mov eax, 0x10e ; syscall
0x00000000000daf26 : mov eax, 0x10f ; syscall
0x00000000000d51f4 : mov eax, 0x11 ; syscall
0x00000000000e3ff4 : mov eax, 0x110 ; syscall
0x00000000000e3ef4 : mov eax, 0x113 ; syscall
0x00000000000e3f94 : mov eax, 0x114 ; syscall
0x00000000000db9e4 : mov eax, 0x115 ; syscall
0x00000000000e4064 : mov eax, 0x116 ; syscall
0x00000000000db24f : mov eax, 0x118 ; syscall
0x00000000000e379d : mov eax, 0x119 ; syscall
0x00000000000e40c4 : mov eax, 0x11b ; syscall
0x00000000000dba57 : mov eax, 0x11d ; syscall
0x00000000000e40f7 : mov eax, 0x11e ; syscall
0x00000000000e4124 : mov eax, 0x11f ; syscall
0x00000000000d5264 : mov eax, 0x12 ; syscall
0x00000000000e4b14 : mov eax, 0x120 ; syscall
0x00000000000e384f : mov eax, 0x121 ; syscall
0x00000000000e388a : mov eax, 0x122 ; syscall
0x00000000000e3b44 : mov eax, 0x123 ; syscall
0x00000000000d71f4 : mov eax, 0x124 ; syscall
0x00000000000d7254 : mov eax, 0x125 ; syscall
0x00000000000e3cd4 : mov eax, 0x126 ; syscall
0x00000000000dc7c7 : mov eax, 0x127 ; syscall
0x00000000000dc877 : mov eax, 0x128 ; syscall
0x00000000000e4bc6 : mov eax, 0x12b ; syscall
0x00000000000e4154 : mov eax, 0x12c ; syscall
0x00000000000e39c7 : mov eax, 0x12d ; syscall
0x00000000000e3927 : mov eax, 0x12e ; syscall
0x00000000000e4187 : mov eax, 0x12f ; syscall
0x00000000000dc684 : mov eax, 0x13 ; syscall
0x00000000000e41c1 : mov eax, 0x130 ; syscall
0x00000000000e3a84 : mov eax, 0x131 ; syscall
0x00000000000dd004 : mov eax, 0x132 ; syscall
0x00000000000e4c86 : mov eax, 0x133 ; syscall
0x00000000000e4224 : mov eax, 0x134 ; syscall
0x00000000000e4257 : mov eax, 0x136 ; syscall
0x00000000000e4287 : mov eax, 0x137 ; syscall
0x00000000000dc431 : mov eax, 0x14 ; sub eax, edx ; ret
0x00000000000dc724 : mov eax, 0x14 ; syscall
0x00000000000d6b44 : mov eax, 0x15 ; syscall
0x00000000000d6107 : mov eax, 0x16 ; jbe 0xd6118 ; ret
0x0000000000081b8b : mov eax, 0x16 ; je 0x81b9f ; ret
0x0000000000081bf6 : mov eax, 0x16 ; je 0x81c08 ; ret
0x00000000000d57e9 : mov eax, 0x16 ; je 0xd5800 ; ret
0x00000000000d7224 : mov eax, 0x16 ; syscall
0x00000000000dcd34 : mov eax, 0x17 ; syscall
0x00000000000cc1b4 : mov eax, 0x18 ; syscall
0x00000000000e3d97 : mov eax, 0x19 ; syscall
0x00000000000e00f1 : mov eax, 0x1a ; syscall
0x00000000000e0184 : mov eax, 0x1b ; syscall
0x00000000000d613c : mov eax, 0x1c ; syscall
0x00000000000e5044 : mov eax, 0x1d ; syscall
0x00000000000e4fe4 : mov eax, 0x1e ; syscall
0x00000000000e5074 : mov eax, 0x1f ; syscall
0x00000000000946df : mov eax, 0x20 ; pop rbx ; ret
0x00000000000b46f0 : mov eax, 0x20 ; ret
0x00000000000d7194 : mov eax, 0x20 ; syscall
0x000000000002ed6b : mov eax, 0x200 ; ret
0x000000000015eafd : mov eax, 0x200001 ; sti ; jmp qword ptr [rax]
0x00000000000d71c4 : mov eax, 0x21 ; syscall
0x00000000000b2d51 : mov eax, 0x22 ; syscall
0x00000000000b2dc1 : mov eax, 0x23 ; syscall
0x00000000000a60a4 : mov eax, 0x24 ; syscall
0x00000000000b2b44 : mov eax, 0x25 ; syscall
0x00000000000a60d4 : mov eax, 0x26 ; syscall
0x00000000000e3576 : mov eax, 0x27 ; syscall
0x00000000000db217 : mov eax, 0x28 ; syscall
0x00000000000e4844 : mov eax, 0x29 ; syscall
0x00000000000e4381 : mov eax, 0x2a ; syscall
0x00000000000e42e1 : mov eax, 0x2b ; syscall
0x000000000013ee15 : mov eax, 0x2b540000 ; call rsp
0x00000000000e465a : mov eax, 0x2c ; syscall
0x00000000000e44ba : mov eax, 0x2d ; syscall
0x00000000000e4711 : mov eax, 0x2e ; syscall
0x00000000000e45e1 : mov eax, 0x2f ; syscall
0x00000000000946d4 : mov eax, 0x30 ; pop rbx ; ret
0x00000000000e4814 : mov eax, 0x30 ; syscall
0x00000000000e4344 : mov eax, 0x31 ; syscall
0x00000000000e4474 : mov eax, 0x32 ; syscall
0x00000000000e4414 : mov eax, 0x33 ; syscall
0x00000000000e43e4 : mov eax, 0x34 ; syscall
0x00000000000e4877 : mov eax, 0x35 ; syscall
0x00000000000e47e7 : mov eax, 0x36 ; syscall
0x00000000000e4447 : mov eax, 0x37 ; syscall
0x000000000004259b : mov eax, 0x38 ; syscall
0x00000000000b3171 : mov eax, 0x3a ; syscall
0x00000000000b3204 : mov eax, 0x3b ; syscall
0x00000000000b28ff : mov eax, 0x3d ; syscall
0x000000000004292c : mov eax, 0x3e ; movsxd rdi, ebx ; syscall
0x00000000000361e4 : mov eax, 0x3e ; syscall
0x00000000000b2854 : mov eax, 0x3f ; syscall
0x00000000000946c9 : mov eax, 0x40 ; pop rbx ; ret
0x00000000000b4740 : mov eax, 0x40 ; ret
0x00000000000e4f54 : mov eax, 0x40 ; syscall
0x00000000000e4f24 : mov eax, 0x41 ; syscall
0x00000000000e4f87 : mov eax, 0x42 ; syscall
0x00000000000e5014 : mov eax, 0x43 ; syscall
0x00000000000e4ec4 : mov eax, 0x44 ; syscall
0x00000000000e4df4 : mov eax, 0x45 ; syscall
0x000000000012c5db : mov eax, 0x45155e93 ; ret 0x591c
0x00000000000e4e64 : mov eax, 0x46 ; syscall
0x00000000000e4ef4 : mov eax, 0x47 ; syscall
0x00000000000d6e8f : mov eax, 0x48 ; syscall
0x0000000000022897 : mov eax, 0x48ef894c ; mov esi, dword ptr [rdx + rbx + 0x20] ; call rax
0x00000000000d6fd4 : mov eax, 0x49 ; syscall
0x00000000000dcf01 : mov eax, 0x4a ; syscall
0x00000000000dcfa1 : mov eax, 0x4b ; syscall
0x00000000000de744 : mov eax, 0x4c ; syscall
0x00000000000de774 : mov eax, 0x4d ; syscall
0x00000000000d73c3 : mov eax, 0x4f ; syscall
0x00000000000d72f4 : mov eax, 0x50 ; syscall
0x00000000000d7324 : mov eax, 0x51 ; syscall
0x0000000000141b0d : mov eax, 0x51640001 ; sti ; jmp rsp
0x0000000000069f14 : mov eax, 0x52 ; syscall
0x00000000000d67b4 : mov eax, 0x53 ; syscall
0x00000000000d83f4 : mov eax, 0x54 ; syscall
0x00000000000d7291 : mov eax, 0x55 ; syscall
0x00000000000d8264 : mov eax, 0x56 ; syscall
0x00000000000d8394 : mov eax, 0x57 ; syscall
0x00000000000d82d4 : mov eax, 0x58 ; syscall
0x00000000000d8334 : mov eax, 0x59 ; syscall
0x00000000000d66c4 : mov eax, 0x5a ; syscall
0x00000000000d66f4 : mov eax, 0x5b ; syscall
0x00000000000d7b84 : mov eax, 0x5c ; syscall
0x00000000000d7bb4 : mov eax, 0x5d ; syscall
0x00000000000d7be4 : mov eax, 0x5e ; syscall
0x00000000000d66b4 : mov eax, 0x5f ; syscall
0x00000000000946be : mov eax, 0x60 ; pop rbx ; ret
0x00000000000dc094 : mov eax, 0x61 ; syscall
0x00000000000dc0f4 : mov eax, 0x62 ; syscall
0x00000000000e3f54 : mov eax, 0x63 ; syscall
0x00000000000e311e : mov eax, 0x64 ; test edx, edx ; cmovne eax, edx ; ret
0x00000000000b3dc4 : mov eax, 0x66 ; syscall
0x00000000000e3d34 : mov eax, 0x67 ; syscall
0x00000000000b3de4 : mov eax, 0x68 ; syscall
0x00000000000b3e40 : mov eax, 0x69 ; syscall
0x00000000000b3eb0 : mov eax, 0x6a ; syscall
0x00000000000b3dd4 : mov eax, 0x6b ; syscall
0x00000000000b3df4 : mov eax, 0x6c ; syscall
0x00000000000b3ff4 : mov eax, 0x6d ; syscall
0x00000000000b3db4 : mov eax, 0x6e ; syscall
0x00000000000b4024 : mov eax, 0x6f ; syscall
0x00000000000b40a4 : mov eax, 0x70 ; syscall
0x00000000000dc922 : mov eax, 0x71 ; syscall
0x00000000000dc992 : mov eax, 0x72 ; syscall
0x00000000000b3e04 : mov eax, 0x73 ; syscall
0x00000000000afe6e : mov eax, 0x74 ; syscall
0x00000000000d5dfb : mov eax, 0x75 ; mov rdi, rdx ; syscall
0x00000000000b4144 : mov eax, 0x75 ; syscall
0x00000000000b40d4 : mov eax, 0x76 ; syscall
0x00000000000d5e2c : mov eax, 0x77 ; mov rdi, rdx ; syscall
0x00000000000b41c4 : mov eax, 0x77 ; syscall
0x00000000000b4104 : mov eax, 0x78 ; syscall
0x00000000000b3fc4 : mov eax, 0x79 ; syscall
0x00000000000e36b4 : mov eax, 0x7a ; syscall
0x00000000000e36e4 : mov eax, 0x7b ; syscall
0x00000000000b4074 : mov eax, 0x7c ; syscall
0x00000000000e3a24 : mov eax, 0x7d ; syscall
0x00000000000b45e5 : mov eax, 0x7d00 ; ret
0x00000000000b4630 : mov eax, 0x7e ; ret
0x00000000000e3a54 : mov eax, 0x7e ; syscall
0x00000000000b4560 : mov eax, 0x7f ; ret
0x0000000000036219 : mov eax, 0x7f ; syscall
0x00000000000946b3 : mov eax, 0x80 ; pop rbx ; ret
0x0000000000036fc9 : mov eax, 0x81 ; syscall
0x0000000000036253 : mov eax, 0x82 ; syscall
0x0000000000036794 : mov eax, 0x83 ; syscall
0x00000000000d4f18 : mov eax, 0x83000000 ; ret
0x0000000000049d10 : mov eax, 0x83fffffb ; ret 0x8908
0x0000000000049d80 : mov eax, 0x83fffffb ; ret 0x8910
0x00000000000d6314 : mov eax, 0x84 ; syscall
0x00000000000d64aa : mov eax, 0x85 ; syscall
0x00000000000e4024 : mov eax, 0x86 ; syscall
0x00000000000e3df4 : mov eax, 0x87 ; syscall
0x00000000000e276e : mov eax, 0x88 ; syscall
0x00000000000d65b4 : mov eax, 0x89 ; syscall
0x00000000000d65e4 : mov eax, 0x8a ; syscall
0x00000000000dc454 : mov eax, 0x8d ; syscall
0x00000000000cc0f4 : mov eax, 0x8e ; syscall
0x00000000000cc124 : mov eax, 0x8f ; syscall
0x00000000000cc154 : mov eax, 0x90 ; syscall
0x00000000000cc184 : mov eax, 0x91 ; syscall
0x00000000000cc1e4 : mov eax, 0x92 ; syscall
0x00000000000cc214 : mov eax, 0x93 ; syscall
0x00000000000cc244 : mov eax, 0x94 ; syscall
0x00000000000e01e4 : mov eax, 0x95 ; syscall
0x00000000000e0214 : mov eax, 0x96 ; syscall
0x00000000000e0244 : mov eax, 0x97 ; syscall
0x00000000000e0274 : mov eax, 0x98 ; syscall
0x00000000000dd314 : mov eax, 0x99 ; syscall
0x00000000000e3984 : mov eax, 0x9a ; syscall
0x00000000000e3e24 : mov eax, 0x9b ; syscall
0x00000000000e3e57 : mov eax, 0x9d ; syscall
0x00000000000e3954 : mov eax, 0x9e ; syscall
0x00000000000e39f4 : mov eax, 0x9f ; syscall
0x00000000000e00b4 : mov eax, 0xa ; syscall
0x00000000000dc0c4 : mov eax, 0xa0 ; syscall
0x00000000000dcec4 : mov eax, 0xa1 ; syscall
0x00000000000dcf64 : mov eax, 0xa2 ; syscall
0x00000000000dce94 : mov eax, 0xa3 ; syscall
0x00000000000a3614 : mov eax, 0xa4 ; syscall
0x00000000000e3d67 : mov eax, 0xa5 ; syscall
0x00000000000e3654 : mov eax, 0xa6 ; syscall
0x00000000000dd344 : mov eax, 0xa7 ; syscall
0x00000000000dd374 : mov eax, 0xa8 ; syscall
0x00000000000dd043 : mov eax, 0xa9 ; syscall
0x00000000000dcc44 : mov eax, 0xaa ; syscall
0x00000000000dccf4 : mov eax, 0xab ; syscall
0x00000000000e3494 : mov eax, 0xac ; syscall
0x00000000000e3464 : mov eax, 0xad ; syscall
0x00000000000e3ab4 : mov eax, 0xae ; syscall
0x00000000000e3c47 : mov eax, 0xaf ; syscall
0x00000000000e0084 : mov eax, 0xb ; syscall
0x00000000000e3ae4 : mov eax, 0xb0 ; syscall
0x00000000000e3c14 : mov eax, 0xb1 ; syscall
0x00000000000e3e87 : mov eax, 0xb2 ; syscall
0x00000000000e3eb7 : mov eax, 0xb3 ; syscall
0x00000000000e3dc4 : mov eax, 0xb4 ; syscall
0x0000000000118f07 : mov eax, 0xb5 ; syscall
0x0000000000118f57 : mov eax, 0xb6 ; syscall
0x000000000010c05b : mov eax, 0xb8000000 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000035eaa : mov eax, 0xba ; syscall
0x00000000000e3684 : mov eax, 0xbb ; syscall
0x00000000000e3347 : mov eax, 0xbc ; syscall
0x00000000000e32e7 : mov eax, 0xbd ; syscall
0x00000000000e31c7 : mov eax, 0xbe ; syscall
0x00000000000e31f7 : mov eax, 0xbf ; syscall
0x00000000000bfd93 : mov eax, 0xc ; test edx, edx ; cmovne eax, edx ; jmp 0xbfd7b
0x00000000000e3257 : mov eax, 0xc0 ; syscall
0x00000000000b3cd9 : mov eax, 0xc045894c ; call 0xeff77
0x00000000000e3137 : mov eax, 0xc1 ; syscall
0x00000000000e3224 : mov eax, 0xc2 ; syscall
0x00000000000e3284 : mov eax, 0xc3 ; syscall
0x00000000000e3164 : mov eax, 0xc4 ; syscall
0x00000000000e3314 : mov eax, 0xc5 ; syscall
0x00000000000e32b4 : mov eax, 0xc6 ; syscall
0x00000000000b4595 : mov eax, 0xc675fde8 ; ret
0x00000000000e3194 : mov eax, 0xc7 ; syscall
0x00000000000f0788 : mov eax, 0xca ; syscall
0x00000000000cc340 : mov eax, 0xcb ; syscall
0x00000000000cc410 : mov eax, 0xcc ; syscall
0x00000000000e3b14 : mov eax, 0xd5 ; syscall
0x00000000000e01b7 : mov eax, 0xd8 ; syscall
0x00000000000e4fb7 : mov eax, 0xdc ; syscall
0x00000000000dafda : mov eax, 0xdd ; syscall
0x00000000000361bd : mov eax, 0xe ; syscall
0x00000000001115ee : mov eax, 0xe0 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000f0ed4 : mov eax, 0xe3 ; syscall
0x00000000000e39b4 : mov eax, 0xe4 ; syscall
0x00000000000b4d2f : mov eax, 0xe5 ; syscall
0x00000000000f0fb2 : mov eax, 0xe6 ; mov r10, rcx ; syscall
0x00000000000f0f67 : mov eax, 0xe6 ; syscall
0x00000000000e3bb4 : mov eax, 0xe8 ; syscall
0x000000000007f469 : mov eax, 0xe8000008 ; ret
0x00000000000e3b77 : mov eax, 0xe9 ; syscall
0x0000000000035ec6 : mov eax, 0xea ; syscall
0x00000000000de574 : mov eax, 0xeb ; syscall
0x00000000000cfa81 : mov eax, 0xf ; je 0xcfa98 ; ret
0x0000000000035f65 : mov eax, 0xf ; syscall
0x00000000000b2aa8 : mov eax, 0xf7 ; syscall
0x00000000000b460f : mov eax, 0xfa ; ret
0x00000000000b4618 : mov eax, 0xfc17 ; ret
0x00000000000e3ca4 : mov eax, 0xfd ; syscall
0x00000000000e3c74 : mov eax, 0xfe ; syscall
0x00000000000e3d04 : mov eax, 0xff ; syscall
0x00000000000b4620 : mov eax, 0xfffa ; ret
0x00000000000b28d0 : mov eax, 0xfffffff2 ; ret
0x00000000000f0ea9 : mov eax, 0xffffffff ; add rsp, 8 ; ret
0x000000000002e718 : mov eax, 0xffffffff ; cmovne rax, rdx ; ret
0x000000000002513b : mov eax, 0xffffffff ; cmovns eax, edx ; ret
0x00000000000718b5 : mov eax, 0xffffffff ; ja 0x718c8 ; ret
0x00000000000963a3 : mov eax, 0xffffffff ; jg 0x9639c ; ret
0x00000000000dd2d6 : mov eax, 0xffffffff ; jmp 0xdd2a5
0x00000000001005b0 : mov eax, 0xffffffff ; nop dword ptr [rax] ; ret
0x000000000006f9a2 : mov eax, 0xffffffff ; pop r12 ; ret
0x000000000010067e : mov eax, 0xffffffff ; pop r14 ; ret
0x00000000000724a5 : mov eax, 0xffffffff ; pop r15 ; ret
0x0000000000073025 : mov eax, 0xffffffff ; pop rbp ; ret
0x000000000002b4bf : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000073360 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x00000000000348a6 : mov eax, 0xffffffff ; pop rbx ; ret
0x000000000002b600 : mov eax, 0xffffffff ; ret
0x000000000003925e : mov eax, 0xffffffff ; test edx, edx ; cmovns eax, edx ; pop rbx ; ret
0x0000000000110b28 : mov eax, 1 ; add rsp, 0x18 ; ret
0x00000000000ddc26 : mov eax, 1 ; add rsp, 8 ; ret
0x00000000000956d0 : mov eax, 1 ; jg 0x956e2 ; neg eax ; ret
0x000000000007d853 : mov eax, 1 ; jmp 0x7d822
0x0000000000114e96 : mov eax, 1 ; jne 0x114ea7 ; ret
0x0000000000114ed6 : mov eax, 1 ; jne 0x114ee7 ; ret
0x0000000000047115 : mov eax, 1 ; mov dword ptr [rdx], ecx ; ret
0x000000000006f98e : mov eax, 1 ; pop r12 ; ret
0x0000000000051755 : mov eax, 1 ; pop r13 ; ret
0x000000000005167f : mov eax, 1 ; pop r14 ; ret
0x00000000000b2573 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000243e4 : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000007114c : mov eax, 1 ; pop rbx ; ret
0x000000000002b144 : mov eax, 1 ; ret
0x00000000000d6ae1 : mov eax, 1 ; syscall
0x00000000000effca : mov eax, 1 ; test edx, edx ; jne 0xeffe1 ; ret
0x0000000000095a11 : mov eax, 2 ; ret
0x00000000000d6821 : mov eax, 2 ; syscall
0x00000000000fe5c2 : mov eax, 3 ; mov esi, dword ptr fs:[rdx] ; syscall
0x0000000000095a21 : mov eax, 3 ; ret
0x000000000001fec5 : mov eax, 3 ; syscall
0x0000000000095a31 : mov eax, 4 ; ret
0x00000000000d63b2 : mov eax, 4 ; syscall
0x00000000000d1f0d : mov eax, 5 ; pop r12 ; ret
0x0000000000095a41 : mov eax, 5 ; ret
0x00000000000d6401 : mov eax, 5 ; syscall
0x0000000000095a51 : mov eax, 6 ; ret
0x00000000000d6452 : mov eax, 6 ; syscall
0x000000000002542f : mov eax, 7 ; mov dword ptr [rcx], edx ; jmp 0x25402
0x00000000000eeb74 : mov eax, 7 ; pop rbx ; pop rbp ; ret
0x0000000000095a61 : mov eax, 7 ; ret
0x00000000000dae91 : mov eax, 7 ; syscall
0x00000000000946ea : mov eax, 8 ; pop rbx ; ret
0x00000000000e35d1 : mov eax, 8 ; syscall
0x00000000000d55a6 : mov eax, 9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e0057 : mov eax, 9 ; syscall
0x00000000000e5cb8 : mov eax, dword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x00000000000e5d03 : mov eax, dword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x0000000000103e1c : mov eax, dword ptr [rax + 0x18] ; test r8d, r8d ; jne 0x103e30 ; ret
0x00000000000dcb3c : mov eax, dword ptr [rax + 0x18] ; test rax, rax ; je 0xdcb4f ; ret
0x00000000000efec0 : mov eax, dword ptr [rax + 0x30] ; ret
0x00000000000e639b : mov eax, dword ptr [rax + 0x38] ; ret
0x000000000010eb38 : mov eax, dword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000073858 : mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000010f4f8 : mov eax, dword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000039296 : mov eax, dword ptr [rax + 0x58] ; ret
0x000000000002dd52 : mov eax, dword ptr [rax + 0xa8] ; ret
0x00000000000e33d1 : mov eax, dword ptr [rax + 0xc0] ; ret
0x00000000000231bf : mov eax, dword ptr [rax + 8] ; add rsp, 0x18 ; ret
0x00000000000e33aa : mov eax, dword ptr [rax + 8] ; ret
0x00000000000f0c37 : mov eax, dword ptr [rax + 8] ; test r8, r8 ; jne 0xf0c09 ; leave ; ret
0x000000000002c1c2 : mov eax, dword ptr [rax + rbx*8] ; test rax, rax ; je 0x2c1d8 ; call rax
0x000000000002ed69 : mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002ef5b : mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002e843 : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000014bd75 : mov eax, dword ptr [rax] ; add byte ptr [rax], bl ; push rdx ; jmp rsp
0x000000000002dd50 : mov eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x0000000000049d1e : mov eax, dword ptr [rax] ; mov qword ptr [r8], rax ; jmp 0x49cee
0x000000000005534e : mov eax, dword ptr [rax] ; mov qword ptr [r8], rax ; jmp 0x5531e
0x000000000002ed40 : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x0000000000039293 : mov eax, dword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000010400d : mov eax, dword ptr [rax] ; ret
0x00000000000809cc : mov eax, dword ptr [rax] ; test rax, rax ; je 0x809e0 ; call rax
0x00000000000bcee8 : mov eax, dword ptr [rbp + 0x4c] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c0318 : mov eax, dword ptr [rbp + 4] ; pop rbp ; pop r12 ; ret
0x00000000000e160d : mov eax, dword ptr [rbp - 0x48] ; call rax
0x00000000000af6cf : mov eax, dword ptr [rbp - 0x58] ; call rax
0x0000000000023acd : mov eax, dword ptr [rbp - 0x60] ; call rax
0x0000000000076019 : mov eax, dword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x0000000000109331 : mov eax, dword ptr [rbx + 8] ; mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000b2e68 : mov eax, dword ptr [rbx + 8] ; test rax, rax ; je 0xb2e7e ; call rax
0x00000000000efe2c : mov eax, dword ptr [rbx - 0x30] ; mov dword ptr [rbp - 0x80], eax ; call r8
0x00000000001113ce : mov eax, dword ptr [rbx] ; test rax, rax ; je 0x1113e8 ; pop rbx ; ret
0x0000000000111442 : mov eax, dword ptr [rbx] ; test rax, rax ; je 0x1113fc ; pop rbx ; ret
0x00000000000b3095 : mov eax, dword ptr [rcx + 0x10] ; test rax, rax ; je 0xb30af ; call rax
0x000000000014124d : mov eax, dword ptr [rcx] ; add ah, ah ; pop rsp ; cli ; jmp rsp
0x000000000015bd6d : mov eax, dword ptr [rcx] ; add al, dh ; and bh, ah ; jmp qword ptr [rdi]
0x000000000010ec84 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000071763 : mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x000000000007a6b4 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000007a6dc : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000011e5e0 : mov eax, dword ptr [rdi + 0x10] ; test eax, eax ; jne 0x11e5f8 ; pop rbx ; ret
0x0000000000114bb0 : mov eax, dword ptr [rdi + 0x18] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000114785 : mov eax, dword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000001084a2 : mov eax, dword ptr [rdi + 0x20] ; mov dword ptr [rsi + 8], eax ; ret
0x00000000000aefd5 : mov eax, dword ptr [rdi + 0x20] ; ret
0x0000000000095650 : mov eax, dword ptr [rdi + 0x24] ; cmp eax, dword ptr [rsi + 0x24] ; jne 0x956d8 ; ret
0x0000000000095665 : mov eax, dword ptr [rdi + 0x28] ; cmp eax, dword ptr [rsi + 0x28] ; jne 0x956d8 ; ret
0x0000000000108517 : mov eax, dword ptr [rdi + 0x28] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000114b14 : mov eax, dword ptr [rdi + 0x28] ; ret
0x0000000000076069 : mov eax, dword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x0000000000095670 : mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0x956d8 ; ret
0x000000000009568b : mov eax, dword ptr [rdi + 0x30] ; cmp eax, dword ptr [rsi + 0x30] ; jne 0x956d8 ; ret
0x00000000000956a0 : mov eax, dword ptr [rdi + 0x34] ; cmp eax, dword ptr [rsi + 0x34] ; jne 0x956d8 ; ret
0x00000000000956b5 : mov eax, dword ptr [rdi + 0x38] ; cmp eax, dword ptr [rsi + 0x38] ; jne 0x956d8 ; ret
0x00000000000956c0 : mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0x956d8 ; ret
0x0000000000108553 : mov eax, dword ptr [rdi + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000075f39 : mov eax, dword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000073855 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000007a995 : mov eax, dword ptr [rdi + 0x68] ; ret
0x000000000007440c : mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x74420 ; ret
0x0000000000073de2 : mov eax, dword ptr [rdi + 0xc0] ; pop rbx ; ret
0x00000000000d5804 : mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000dbaf4 : mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x0000000000113a56 : mov eax, dword ptr [rdi + 8] ; call qword ptr [rax]
0x0000000000109249 : mov eax, dword ptr [rdi + 8] ; lea rsi, [rsp + 8] ; call qword ptr [rax]
0x0000000000111c91 : mov eax, dword ptr [rdi + 8] ; mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x0000000000113b89 : mov eax, dword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x00000000000960bd : mov eax, dword ptr [rdi + rax*4] ; test r8d, r8d ; jne 0x96099 ; ret
0x000000000002e88c : mov eax, dword ptr [rdi + rax] ; ret
0x0000000000075fb4 : mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x0000000000075f84 : mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x000000000010f62c : mov eax, dword ptr [rdi] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000000af104 : mov eax, dword ptr [rdi] ; ret
0x0000000000076754 : mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x0000000000076764 : mov eax, dword ptr [rdi] ; shr eax, 5 ; and eax, 1 ; ret
0x000000000010cde8 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x10cdf6 ; ret
0x000000000010cde7 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x10cdf7 ; ret
0x0000000000112388 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x112396 ; ret
0x0000000000112387 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x112397 ; ret
0x00000000000961ac : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x961a8 ; xor eax, eax ; ret
0x000000000007381f : mov eax, dword ptr [rdx + 0x48] ; cmp eax, dword ptr [rdx + 0x4c] ; cmovne eax, ecx ; ret
0x00000000000cfac1 : mov eax, dword ptr [rdx + 8] ; ret
0x000000000002ecf7 : mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x000000000003480b : mov eax, dword ptr [rdx + rax*4 + 8] ; add rax, qword ptr [rdi + 0x20] ; pop rbx ; ret
0x00000000000947e9 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0x947d9 ; ret
0x000000000008bd06 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000073030 : mov eax, dword ptr [rdx] ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000006f3a4 : mov eax, dword ptr [rdx] ; add rsp, 8 ; ret
0x00000000000c96fc : mov eax, dword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x000000000007137c : mov eax, dword ptr [rdx] ; pop rbx ; ret
0x00000000000718c0 : mov eax, dword ptr [rdx] ; ret
0x000000000007a689 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x7a688 ; ret
0x000000000011981c : mov eax, dword ptr [rip + 0x250f06] ; call qword ptr [rax]
0x00000000001191ac : mov eax, dword ptr [rip + 0x251576] ; call qword ptr [rax]
0x00000000000fd841 : mov eax, dword ptr [rip + 0x26d069] ; ret
0x00000000000e6395 : mov eax, dword ptr [rip + 0x282ac5] ; mov eax, dword ptr [rax + 0x38] ; ret
0x000000000007f733 : mov eax, dword ptr [rip + 0x2e9797] ; mov qword ptr [rax], rdi ; ret
0x000000000007e128 : mov eax, dword ptr [rip + 0x2eac8a] ; xor edi, edi ; call qword ptr [rax]
0x000000000007a975 : mov eax, dword ptr [rip + 0x2ef6c5] ; ret
0x0000000000036d04 : mov eax, dword ptr [rip + 0x33235e] ; ret
0x0000000000036cf4 : mov eax, dword ptr [rip + 0x332372] ; ret
0x000000000002e7f1 : mov eax, dword ptr [rip + 0x33a5e1] ; mov qword ptr [rax], rdx ; ret
0x000000000002b365 : mov eax, dword ptr [rip + 0x33f5b5] ; ret
0x0000000000023235 : mov eax, dword ptr [rip + 0x34b125] ; ret
0x0000000000023225 : mov eax, dword ptr [rip + 0x34b145] ; ret
0x00000000000cc59e : mov eax, dword ptr [rsi + 0x14] ; ret
0x000000000002ef55 : mov eax, dword ptr [rsi + 0x70] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002ef65 : mov eax, dword ptr [rsi + 0x78] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000bde29 : mov eax, dword ptr [rsi + 8] ; mov qword ptr [rax + 0x20], rsi ; xor eax, eax ; ret
0x000000000010090b : mov eax, dword ptr [rsi + 8] ; mov qword ptr [rdx + 0x10], rax ; xor eax, eax ; ret
0x00000000000e6e28 : mov eax, dword ptr [rsi + rax] ; shr eax, cl ; and eax, 1 ; ret
0x000000000002dd29 : mov eax, dword ptr [rsi + rdx*8 + 0x80] ; ret
0x000000000011bd66 : mov eax, dword ptr [rsp + 0x10] ; call rax
0x0000000000021dbf : mov eax, dword ptr [rsp + 0x18] ; call rax
0x00000000000a3230 : mov eax, dword ptr [rsp + 0x38] ; call rax
0x0000000000029a93 : mov eax, dword ptr [rsp + 0x50] ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x0000000000027b34 : mov eax, dword ptr [rsp + 0x78] ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x00000000000bcd89 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000dbe21 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x00000000000b2b20 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x28 ; ret
0x000000000011c371 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x38 ; ret
0x00000000000a13dc : mov eax, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
0x000000000002f471 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000dc6f2 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x28 ; ret
0x00000000000dd644 : mov eax, dword ptr [rsp - 0x50] ; ret
0x000000000010d4d4 : mov eax, dword ptr [rsp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000dc83c : mov eax, dword ptr [rsp] ; add rsp, 0x28 ; ret
0x00000000000e63fb : mov eax, dword ptr [rsp] ; add rsp, 0x38 ; ret
0x00000000000e646c : mov eax, dword ptr [rsp] ; add rsp, 0x40 ; ret
0x00000000000daf9a : mov eax, dword ptr [rsp] ; jmp 0xdaf3d
0x000000000004f758 : mov eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000022474 : mov eax, eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000007b6a3 : mov eax, eax ; nop dword ptr [rax] ; ret
0x00000000000391ed : mov eax, eax ; or rax, rdx ; ret
0x000000000004d123 : mov eax, eax ; ret
0x0000000000036345 : mov eax, eax ; syscall
0x00000000000a2a61 : mov eax, ebp ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000077c22 : mov eax, ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000363f7 : mov eax, ebp ; jmp 0x363c0
0x0000000000036f67 : mov eax, ebp ; jmp 0x36f30
0x000000000006f782 : mov eax, ebp ; mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006b3fa : mov eax, ebp ; pop r13 ; pop r14 ; ret
0x00000000000706b7 : mov eax, ebp ; pop r13 ; ret
0x000000000006de05 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006c102 : mov eax, ebp ; pop rbp ; pop r12 ; ret
0x000000000004d06b : mov eax, ebp ; pop rbp ; ret
0x000000000006d585 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000076e05 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004cfed : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000103108 : mov eax, ebp ; syscall
0x00000000000457b3 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x0000000000111191 : mov eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000008ee5f : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000e2eef : mov eax, ebx ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x00000000000b30c1 : mov eax, ebx ; mov esi, 0x81 ; syscall
0x00000000000e451c : mov eax, ebx ; movsxd r10, ecx ; syscall
0x000000000002bcee : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006cd2a : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000330e7 : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000003965f : mov eax, ebx ; pop rbx ; ret
0x00000000000dbab4 : mov eax, ebx ; syscall
0x000000000004567b : mov eax, ecx ; adc eax, eax ; ret
0x000000000008ff1f : mov eax, ecx ; jmp 0x8fe12
0x00000000000dfec4 : mov eax, ecx ; mov r9, qword ptr [rsp + 8] ; syscall
0x00000000000abe12 : mov eax, ecx ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000000b29e8 : mov eax, ecx ; movsxd rdi, dword ptr [rsp + 8] ; syscall
0x00000000000f0e08 : mov eax, ecx ; movsxd rdi, r8d ; syscall
0x000000000002f613 : mov eax, ecx ; pop r13 ; ret
0x000000000011415c : mov eax, ecx ; pop r14 ; ret
0x000000000002f589 : mov eax, ecx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000033bcd : mov eax, ecx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000082576 : mov eax, ecx ; pop rbx ; pop rbp ; ret
0x0000000000034827 : mov eax, ecx ; pop rbx ; ret
0x0000000000034831 : mov eax, ecx ; ret
0x000000000003606a : mov eax, ecx ; syscall
0x000000000006ff0b : mov eax, edi ; add rsp, 8 ; ret
0x000000000002edb4 : mov eax, edi ; and eax, 0x7f ; ret
0x00000000000f4e0a : mov eax, edi ; and eax, 0xffffff ; ret
0x00000000000f4de4 : mov eax, edi ; bswap eax ; ret
0x00000000000475b9 : mov eax, edi ; cmovae rax, rsi ; ret
0x0000000000039205 : mov eax, edi ; cqo ; idiv rsi ; ret
0x000000000006f6ca : mov eax, edi ; jmp 0x6f693
0x0000000000089a7c : mov eax, edi ; jne 0x89a92 ; ret
0x000000000009655c : mov eax, edi ; jne 0x96572 ; ret
0x00000000000de92a : mov eax, edi ; mov byte ptr [r9 - 1], 0 ; ret
0x000000000009363b : mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000009621b : mov eax, edi ; nop dword ptr [rax] ; ret
0x00000000000e6f18 : mov eax, edi ; nop word ptr [rax + rax] ; ret
0x000000000002f85c : mov eax, edi ; pop r13 ; ret
0x000000000002f842 : mov eax, edi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007ba28 : mov eax, edi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f1c81 : mov eax, edi ; pop rbx ; ret
0x0000000000022614 : mov eax, edi ; ret
0x00000000000f4df4 : mov eax, edi ; ror ax, 8 ; ret
0x0000000000039196 : mov eax, edi ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x00000000000f4a6e : mov eax, edi ; sar rax, 6 ; ret
0x00000000000f4e9a : mov eax, edi ; shr eax, 0x18 ; ret
0x00000000000f0888 : mov eax, edi ; test edx, edx ; jne 0xf0896 ; ret
0x000000000011c3c4 : mov eax, edx ; add rsp, 0x28 ; ret
0x00000000000dd511 : mov eax, edx ; add rsp, 0x48 ; ret
0x0000000000069938 : mov eax, edx ; add rsp, 0x98 ; ret
0x000000000007f821 : mov eax, edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000a68c4 : mov eax, edx ; add rsp, 8 ; ret
0x00000000000cc4e1 : mov eax, edx ; je 0xcc53a ; ret
0x00000000000b3d7f : mov eax, edx ; jle 0xb3d8a ; ret
0x00000000001007b6 : mov eax, edx ; mov qword ptr [r9], rdi ; ret
0x000000000005153d : mov eax, edx ; pop r12 ; ret
0x0000000000090c9c : mov eax, edx ; pop r14 ; ret
0x00000000000aecb6 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007fd85 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006a214 : mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000044602 : mov eax, edx ; pop rbx ; ret
0x0000000000036d59 : mov eax, edx ; ret
0x0000000000021e22 : mov eax, edx ; syscall
0x0000000000035d8a : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; jmp rdx
0x00000000000f2692 : mov eax, esi ; pop r12 ; ret
0x0000000000114adf : mov eax, esi ; pop r13 ; ret
0x00000000000af0e5 : mov eax, esi ; pop r14 ; ret
0x0000000000114ab1 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000038ca8 : mov eax, esi ; pop rbx ; pop rbp ; ret
0x00000000000f979e : mov eax, esi ; pop rbx ; ret
0x0000000000047581 : mov eax, esi ; ret
0x000000000010084f : mov eax, esi ; shl eax, 4 ; add eax, 8 ; ret
0x0000000000110684 : mov eax, esp ; mov rcx, r13 ; mov rsi, rbx ; call qword ptr [rax]
0x00000000000a3c13 : mov eax, esp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000a129d : mov eax, esp ; pop r12 ; pop r13 ; ret
0x0000000000090767 : mov eax, esp ; pop r12 ; ret
0x000000000007a264 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007568e : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a129c : mov eax, r12d ; pop r12 ; pop r13 ; ret
0x00000000000a11aa : mov eax, r12d ; pop r12 ; ret
0x000000000007a263 : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007568d : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a1330 : mov eax, r13d ; pop r13 ; pop r14 ; ret
0x00000000000706b6 : mov eax, r13d ; pop r13 ; ret
0x00000000000d1d9d : mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000103107 : mov eax, r13d ; syscall
0x000000000004f757 : mov eax, r8d ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000004d122 : mov eax, r8d ; ret
0x0000000000036344 : mov eax, r8d ; syscall
0x00000000000fea30 : mov eax, r9d ; ret
0x0000000000076279 : mov eax, r9d ; syscall
0x000000000013ef05 : mov ebp, 0x40840000 ; jmp rsp
0x00000000000ddb29 : mov ebp, 0x441f0f66 ; add byte ptr [rax], al ; ret
0x0000000000093d41 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x0000000000093d51 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x0000000000093d31 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000012b19d : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x0000000000093db1 : mov ebp, 0xea8348c0 ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x0000000000093d91 : mov ebp, 0xea8348c0 ; and byte ptr [rax + 1], cl ; ret 0x347c
0x0000000000093d71 : mov ebp, 0xea8348c0 ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x0000000000093e62 : mov ebp, 0xf80148c0 ; add rax, r8 ; ret
0x000000000008757c : mov ebp, 0xf80148c0 ; ret
0x000000000008780c : mov ebp, 0xf80148c6 ; ret
0x000000000012d206 : mov ebp, 0xfb67d10d ; ret
0x00000000000b6190 : mov ebp, 0xfffffbd0 ; call r14
0x00000000000fdc44 : mov ebp, 0xfffffe0c ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd120
0x00000000000b730c : mov ebp, 0xfffffe38 ; add byte ptr [rax - 0x77], cl ; ret 0x775
0x0000000000001bc5 : mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x000000000007f5f2 : mov ebp, eax ; jne 0x7f48b ; jmp 0x7f5c8
0x00000000000eb80d : mov ebp, eax ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x00000000000f9d71 : mov ebp, ebx ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000035d90 : mov ebp, ecx ; jmp rdx
0x000000000013e431 : mov ebp, edi ; jmp rsp
0x0000000000066185 : mov ebp, edx ; jmp 0x62478
0x000000000006cb1a : mov ebp, edx ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x00000000000f0fd8 : mov ebp, esp ; pop rbp ; ret
0x000000000015edad : mov ebx, 0x11a00001 ; sti ; call qword ptr [rax]
0x0000000000085b9c : mov ebx, 0x142c641 ; add bl, al ; mov r10, r8 ; jmp 0x85ba2
0x00000000000b5482 : mov ebx, 0x14b8 ; add cl, ch ; ret
0x00000000000b5382 : mov ebx, 0x1b8 ; add cl, ch ; ret
0x000000000007dab8 : mov ebx, 0x3948002e ; ror dword ptr [rdi], cl ; xchg eax, ebp ; ret 0x8348
0x0000000000093673 : mov ebx, 0x480007c6 ; mov eax, edi ; ret
0x0000000000093693 : mov ebx, 0x48378966 ; lea eax, [rdi + 1] ; ret
0x00000000000935e3 : mov ebx, 0x48378966 ; mov eax, edi ; ret
0x000000000008961b : mov ebx, 0x48fffffc ; mov eax, edi ; ret
0x0000000000141bb5 : mov ebx, 0x59040001 ; sti ; call rsp
0x00000000000bc232 : mov ebx, 0x5d5bc031 ; pop r12 ; ret
0x000000000002f681 : mov ebx, 0x634a000f ; add al, 0xa2 ; add rdx, rax ; jmp rdx
0x0000000000108563 : mov ebx, 0x806c7 ; add byte ptr [rax], al ; ret
0x000000000015ed35 : mov ebx, 0x8080001 ; sti ; call rdi
0x00000000000941a9 : mov ebx, 0x89000000 ; ret 0xeac1
0x00000000000284f1 : mov ebx, 0x89000065 ; ret 0xe283
0x0000000000093603 : mov ebx, 0x89480f89 ; clc ; ret
0x0000000000108533 : mov ebx, 0xa06c7 ; add byte ptr [rax], al ; ret
0x00000000000f07e8 : mov ebx, 0xafb8341 ; je 0xf07f7 ; ret
0x0000000000108523 : mov ebx, 0xb06c7 ; add byte ptr [rax], al ; ret
0x000000000012b19b : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x0000000000108573 : mov ebx, 0xc06c7 ; add byte ptr [rax], al ; ret
0x000000000010be5a : mov ebx, 0xc8 ; call rax
0x000000000011942a : mov ebx, dword ptr [rbp - 0x60] ; mov rdi, rbx ; call 0x856e8
0x00000000000e452a : mov ebx, eax ; ja 0xe454b ; mov edi, ebp ; call 0xf0828
0x00000000000e1b11 : mov ebx, eax ; jmp 0xe1ada
0x0000000000108e17 : mov ebx, eax ; jne 0x108db1 ; xor eax, eax ; pop rbx ; ret
0x00000000000dc1d3 : mov ebx, eax ; mov rax, rbx ; pop rbx ; ret
0x00000000000bbb39 : mov ebx, eax ; mov rsi, rbx ; mov rdi, rbp ; call r12
0x00000000000bbaef : mov ebx, ecx ; mov rsi, rbx ; mov rdi, rbp ; call r12
0x0000000000161361 : mov ebx, edi ; call qword ptr [rdi]
0x00000000000797eb : mov ebx, edi ; je 0x797fd ; pop rbx ; ret
0x000000000002d4ba : mov ebx, edi ; test rax, rax ; je 0x2d4ce ; call rax
0x000000000007876b : mov ebx, edx ; jne 0x7877d ; pop rbx ; ret
0x00000000000af085 : mov ebx, esi ; syscall
0x00000000000db1ba : mov ebx, esi ; xor esi, esi ; sub rsp, 8 ; syscall
0x00000000000e3806 : mov ecx, 0x119 ; mov eax, ecx ; syscall
0x00000000000a6198 : mov ecx, 0x16e ; mov eax, ecx ; ret
0x000000000015eb8d : mov ecx, 0x1b00001 ; sti ; call qword ptr [rsi]
0x00000000000b3d93 : mov ecx, 0x27 ; mov eax, ecx ; syscall
0x000000000007dc4b : mov ecx, 0x3948002e ; ret
0x00000000001066c3 : mov ecx, 0x48002677 ; add esp, 8 ; ret
0x000000000012b199 : mov ecx, 0xbdbcbbba ; mov esi, 0xc2c1c0bf ; ret
0x00000000000bd6f3 : mov ecx, 0xd27dfd39 ; mov edx, eax ; jmp 0xbd6d9
0x0000000000003124 : mov ecx, 0xd4a3e95a ; pop rsp ; ret 0x52c0
0x0000000000041bd1 : mov ecx, 1 ; jmp 0x41ba0
0x000000000002c591 : mov ecx, dword ptr [rax + rdi*8] ; test rcx, rcx ; je 0x2c5a7 ; call rcx
0x000000000010f8f6 : mov ecx, dword ptr [rbp - 0x168] ; call rcx
0x00000000000bd6c0 : mov ecx, dword ptr [rbx + 0x18] ; xor esi, esi ; mov edx, r8d ; jmp 0xbd6e2
0x00000000000eb266 : mov ecx, dword ptr [rcx] ; test byte ptr [rcx + rsi*2 + 1], 0x40 ; cmovne eax, edx ; ret
0x00000000000450da : mov ecx, dword ptr [rdi + 0x30] ; mov rdi, qword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x000000000007a6a1 : mov ecx, dword ptr [rdi] ; mov qword ptr [rdx], rcx ; ret
0x0000000000101703 : mov ecx, dword ptr [rdx + 0x14] ; jmp 0x1016ce
0x000000000008bd03 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000011c7c2 : mov ecx, dword ptr [rdx] ; mov rdx, r12 ; add r9, r11 ; call rax
0x00000000000960a9 : mov ecx, dword ptr [rdx] ; test ecx, ecx ; jne 0x960a7 ; ret
0x000000000004543a : mov ecx, dword ptr [rsi + 0x30] ; mov rsi, qword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x0000000000097025 : mov ecx, dword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x000000000010c3d1 : mov ecx, dword ptr [rsp + 0x18] ; call rcx
0x00000000000a23e3 : mov ecx, dword ptr [rsp + 0x18] ; mov rdi, qword ptr [r13] ; call r12
0x000000000010c1be : mov ecx, dword ptr [rsp + 0x20] ; call rcx
0x0000000000108106 : mov ecx, dword ptr [rsp + 8] ; call rcx
0x00000000000dfec7 : mov ecx, dword ptr [rsp + 8] ; syscall
0x00000000000fea09 : mov ecx, eax ; jg 0xfe9f9 ; mov eax, 0xffffffff ; ret
0x000000000003a394 : mov ecx, eax ; jmp 0x3a28a
0x00000000001084f8 : mov ecx, eax ; movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x0000000000114187 : mov ecx, eax ; pop r13 ; mov eax, ecx ; pop r14 ; ret
0x0000000000093976 : mov ecx, eax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x00000000000971f2 : mov ecx, ebp ; mov rdi, rbp ; call rbx
0x0000000000110687 : mov ecx, ebp ; mov rsi, rbx ; call qword ptr [rax]
0x00000000000935b2 : mov ecx, ecx ; movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x000000000003a820 : mov ecx, edi ; jmp 0x3a76a
0x0000000000093964 : mov ecx, edi ; mov qword ptr [rdx], rcx ; ret
0x0000000000073bb9 : mov ecx, edi ; mov rdi, r13 ; xor r8d, r8d ; call r12
0x00000000001147b3 : mov ecx, edx ; cmp rdx, rcx ; je 0x1147c8 ; ret
0x00000000001147b2 : mov ecx, edx ; cmp rdx, rcx ; je 0x1147c9 ; ret
0x00000000000defe3 : mov ecx, edx ; sub byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000de8c3 : mov ecx, esi ; mov byte ptr [r9 - 1], 0 ; ret
0x0000000000081b89 : mov ecx, esi ; mov eax, 0x16 ; je 0x81ba1 ; ret
0x0000000000096a33 : mov ecx, esi ; mov rdi, qword ptr [r13] ; call r12
0x00000000000ebdf8 : mov edi, 0x2000004 ; call rax
0x000000000007d656 : mov edi, 0x3948002e ; ret
0x00000000000a9d80 : mov edi, 0x487c8d44 ; ror byte ptr [rax - 0x7d], 1 ; ret
0x00000000000e53f0 : mov edi, 0x4cee894c ; mov edi, ecx ; mov eax, ebx ; syscall
0x00000000000e031f : mov edi, 0x5d5b0028 ; pop r12 ; ret
0x0000000000130a21 : mov edi, 0xc1a0fff5 ; cmc ; push rax ; ret
0x0000000000119e88 : mov edi, 0xe ; call 0x36187
0x000000000006cad6 : mov edi, 0xe0 ; call rax
0x000000000006cba8 : mov edi, 0xe0 ; call rdx
0x0000000000094578 : mov edi, 0xf000000 ; popfq ; ret 0xea81
0x00000000000337ae : mov edi, 4 ; jmp 0x3377d
0x0000000000022ddb : mov edi, dword ptr [rax + 0x18] ; mov qword ptr [rbp - 0x58], rax ; call rcx
0x00000000000b618f : mov edi, dword ptr [rbp - 0x430] ; call r14
0x00000000000af769 : mov edi, dword ptr [rbp - 0x68] ; call r14
0x0000000000096a36 : mov edi, dword ptr [rbp] ; call r12
0x000000000002315b : mov edi, dword ptr [rbx + 0x18] ; call rax
0x00000000000bd6f1 : mov edi, dword ptr [rcx + rdi*4] ; cmp ebp, edi ; jge 0xbd6d2 ; mov edx, eax ; jmp 0xbd6db
0x000000000010cde5 : mov edi, dword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x10cdf9 ; ret
0x0000000000112385 : mov edi, dword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x112399 ; ret
0x00000000000450de : mov edi, dword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x000000000006cad5 : mov edi, dword ptr [rdi + 0xe0] ; call rax
0x000000000006cba7 : mov edi, dword ptr [rdi + 0xe0] ; call rdx
0x00000000000f0895 : mov edi, dword ptr [rdi + 8] ; call qword ptr [rax]
0x00000000000eeef4 : mov edi, dword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x000000000012d4c6 : mov edi, dword ptr [rdx] ; ret
0x000000000007e009 : mov edi, dword ptr [rsi - 0x7bf0ffd2] ; ret 0xfffc
0x00000000000e143d : mov edi, dword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000002b0e2 : mov edi, dword ptr [rsp + 0x18] ; call r15
0x00000000000bfc40 : mov edi, dword ptr [rsp + 0x20] ; mov rdi, r15 ; call 0xbbf29
0x00000000000254a0 : mov edi, dword ptr [rsp + 0x40] ; mov dword ptr [rsp + 8], eax ; call r14
0x0000000000025c86 : mov edi, dword ptr [rsp + 0x40] ; mov dword ptr [rsp + 8], eax ; call r15
0x00000000000253a6 : mov edi, dword ptr [rsp + 0x40] ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000027413 : mov edi, dword ptr [rsp + 0x48] ; call rax
0x0000000000027a13 : mov edi, dword ptr [rsp + 0x48] ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000002817a : mov edi, dword ptr [rsp + 0x50] ; mov dword ptr [rsp + 8], eax ; call r12
0x0000000000028949 : mov edi, dword ptr [rsp + 0x50] ; mov dword ptr [rsp + 8], eax ; call r15
0x0000000000029518 : mov edi, dword ptr [rsp + 0x58] ; mov dword ptr [rsp + 8], eax ; call r15
0x0000000000026e72 : mov edi, dword ptr [rsp + 0x58] ; mov dword ptr [rsp + 8], eax ; call rbx
0x00000000000b2aff : mov edi, dword ptr [rsp + 0xc] ; movsxd r10, ecx ; syscall
0x000000000002206c : mov edi, dword ptr [rsp + 8] ; call rax
0x000000000003628f : mov edi, dword ptr [rsp + 8] ; mov eax, 0x82 ; syscall
0x00000000000daf7d : mov edi, dword ptr [rsp + 8] ; syscall
0x0000000000096732 : mov edi, dword ptr [rsp] ; lea rcx, [rax + 1] ; call rbx
0x00000000000e45a0 : mov edi, dword ptr [rsp] ; mov rdx, rax ; call 0xf0828
0x000000000010d21d : mov edi, eax ; call 0x69504
0x00000000000477d5 : mov edi, eax ; mov byte ptr [rsi], dl ; jne 0x477c9 ; mov rax, rsi ; ret
0x00000000000d64a8 : mov edi, eax ; mov eax, 0x85 ; syscall
0x00000000000d3198 : mov edi, ebp ; call 0x1f474
0x00000000000ed2de : mov edi, ebp ; call 0x79564
0x00000000000faeac : mov edi, ebp ; call 0xd7124
0x00000000000b3d36 : mov edi, ebp ; call 0xeff74
0x00000000000e452e : mov edi, ebp ; call 0xf0824
0x0000000000107680 : mov edi, ebp ; call qword ptr [rax]
0x0000000000108ebe : mov edi, ebp ; call qword ptr [rbx]
0x00000000000bbaf5 : mov edi, ebp ; call r12
0x00000000000e1b61 : mov edi, ebp ; call r14
0x0000000000106d8e : mov edi, ebp ; call rax
0x0000000000096ec9 : mov edi, ebp ; call rbx
0x0000000000114985 : mov edi, ebp ; call rcx
0x0000000000082da7 : mov edi, ebp ; call rdx
0x000000000002d3bb : mov edi, ebp ; mov ax, 3 ; syscall
0x00000000000d73c1 : mov edi, ebp ; mov eax, 0x4f ; syscall
0x000000000002b422 : mov edi, ebp ; mov eax, 3 ; syscall
0x0000000000076277 : mov edi, ebp ; mov eax, r9d ; syscall
0x00000000000d31e2 : mov edi, ebp ; mov qword ptr [rsp + 0x20], r10 ; call 0x1f479
0x000000000010f8f3 : mov edi, ebp ; mov rcx, qword ptr [rbp - 0x168] ; call rcx
0x000000000010c3ce : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x000000000010c1bb : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x0000000000022899 : mov edi, ebp ; mov rsi, qword ptr [rdx + rbx + 0x20] ; call rax
0x000000000011317b : mov edi, ebp ; xor ebp, ebp ; call 0x1f476
0x0000000000073bbc : mov edi, ebp ; xor r8d, r8d ; call r12
0x00000000000831b9 : mov edi, ebx ; call 0x1f474
0x00000000000801a3 : mov edi, ebx ; call 0x7c424
0x000000000011942e : mov edi, ebx ; call 0x856e4
0x00000000001183b2 : mov edi, ebx ; call 0xe4644
0x000000000010747d : mov edi, ebx ; call qword ptr [rax]
0x00000000001053b1 : mov edi, ebx ; call r10
0x000000000002b313 : mov edi, ebx ; call r12
0x00000000000eb21f : mov edi, ebx ; call r14
0x00000000000233dd : mov edi, ebx ; call r15
0x000000000004e9df : mov edi, ebx ; call rax
0x00000000000f0f65 : mov edi, ebx ; mov eax, 0xe6 ; syscall
0x0000000000034977 : mov edi, ebx ; mov eax, 3 ; syscall
0x000000000006ca71 : mov edi, ebx ; mov qword ptr [rsp + 8], rax ; call 0x78d09
0x0000000000066182 : mov edi, ebx ; mov r13, r10 ; jmp 0x6247b
0x000000000011bd63 : mov edi, ebx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000108103 : mov edi, ebx ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x000000000011dc14 : mov edi, ebx ; test rdi, rdi ; jne 0x11dc0a ; pop rbx ; ret
0x00000000000c511b : mov edi, ecx ; call 0xc1424
0x0000000000083576 : mov edi, ecx ; call rcx
0x00000000000e5280 : mov edi, ecx ; mov eax, 0x14 ; syscall
0x00000000000e542d : mov edi, ecx ; mov eax, 3 ; syscall
0x00000000000e53f5 : mov edi, ecx ; mov eax, ebx ; syscall
0x0000000000036342 : mov edi, ecx ; mov eax, r8d ; syscall
0x000000000005d3b6 : mov edi, edi ; call 0x79664
0x00000000000bfc45 : mov edi, edi ; call 0xbbf24
0x00000000000ee454 : mov edi, edi ; call 0xea754
0x000000000007de54 : mov edi, edi ; call qword ptr [rax]
0x00000000000af351 : mov edi, edi ; call rbx
0x00000000000b3e3e : mov edi, edi ; mov eax, 0x69 ; syscall
0x00000000000b3eae : mov edi, edi ; mov eax, 0x6a ; syscall
0x00000000000dc920 : mov edi, edi ; mov eax, 0x71 ; syscall
0x00000000000dc990 : mov edi, edi ; mov eax, 0x72 ; syscall
0x00000000000b4142 : mov edi, edi ; mov eax, 0x75 ; syscall
0x00000000000b41c2 : mov edi, edi ; mov eax, 0x77 ; syscall
0x00000000000b2aa6 : mov edi, edi ; mov eax, 0xf7 ; syscall
0x0000000000082c9b : mov edi, edi ; mov rdx, rbx ; mov rsi, r13 ; call rax
0x00000000000e70cc : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x0000000000047851 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x47839 ; mov rax, rsi ; ret
0x00000000000b31c1 : mov edi, edx ; mov eax, r8d ; syscall
0x00000000000b31d2 : mov edi, edx ; mov eax, r9d ; syscall
0x00000000000d5e01 : mov edi, edx ; syscall
0x0000000000141d7c : mov edi, es ; add dword ptr [rax], eax ; nop ; sti ; jmp rsp
0x0000000000113195 : mov edi, esi ; call 0x1f474
0x000000000006daf7 : mov edi, esi ; call 0x79da4
0x0000000000107e84 : mov edi, esi ; call rax
0x00000000000e160a : mov edi, esi ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000023aca : mov edi, esi ; mov rax, qword ptr [rbp - 0x60] ; call rax
0x00000000000827ae : mov edi, esi ; mov rdx, r15 ; call rax
0x000000000011414a : mov edi, esi ; xor eax, eax ; call rcx
0x0000000000113189 : mov edi, esp ; call 0x1f474
0x00000000000dae38 : mov edi, esp ; call 0xd7124
0x000000000001ff4a : mov edi, esp ; call qword ptr [r14]
0x0000000000080544 : mov edi, esp ; call rax
0x00000000001138f5 : mov edi, esp ; call rdx
0x00000000001544c1 : mov edi, esp ; jmp qword ptr [rsi]
0x00000000000dae37 : mov edi, r12d ; call 0xd7125
0x0000000000076d7e : mov edx, 0x140 ; pop rbx ; ret
0x0000000000092807 : mov edx, 0x1f2 ; call 0x2eab7
0x000000000009285a : mov edx, 0x1f5 ; call 0x2eab7
0x000000000013ee6d : mov edx, 0x33c40000 ; jmp rsp
0x0000000000141b75 : mov edx, 0x56040001 ; sti ; call rsp
0x00000000000c0299 : mov edx, 0x5c415d5b ; ret
0x00000000000e08d2 : mov edx, 0x5d5b0028 ; pop r12 ; ret
0x00000000000be10f : mov edx, 0x75cf3840 ; ret
0x000000000015eced : mov edx, 0x7f00001 ; sti ; jmp qword ptr [rax]
0x0000000000001ae2 : mov edx, 0x855233da ; mov bl, 0x5a ; ret 0x2a63
0x00000000000fb1f1 : mov edx, 0x89480003 ; ret 0xff31
0x00000000001316ac : mov edx, 0xc8fff838 ; cmp al, bh ; call rsi
0x000000000012c97e : mov edx, 0xcac982a4 ; call 0xffffffffaed567fe
0x00000000000b45b1 : mov edx, 0xffffffff ; cmovne rax, rdx ; ret
0x00000000000e92a8 : mov edx, 0xffffffff ; mov eax, edx ; ret
0x00000000000d78f6 : mov edx, 1 ; jmp 0xd78c6
0x0000000000075fe9 : mov edx, dword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000b300d : mov edx, dword ptr [rax + 0x18] ; test rdx, rdx ; je 0xb3027 ; call rdx
0x00000000000aeaf4 : mov edx, dword ptr [rax] ; mov eax, 3 ; syscall
0x0000000000070f20 : mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000021dbc : mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000977d0 : mov edx, dword ptr [rax] ; test edx, edx ; jne 0x977cf ; ret
0x000000000007c394 : mov edx, dword ptr [rax] ; test rdx, rdx ; je 0x7c3a8 ; call rdx
0x00000000000ef580 : mov edx, dword ptr [rbp + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x0000000000072be6 : mov edx, dword ptr [rbx + 0x40] ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x00000000000efa4f : mov edx, dword ptr [rbx - 0x30] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x00000000000f4087 : mov edx, dword ptr [rbx] ; jmp 0xf4051
0x00000000000f0b0a : mov edx, dword ptr [rcx] ; test rdx, rdx ; jne 0xf0b08 ; leave ; ret
0x000000000011d899 : mov edx, dword ptr [rdi + 0x20] ; test rdx, rdx ; je 0x11d8b4 ; call rdx
0x0000000000096909 : mov edx, dword ptr [rdi] ; xor eax, eax ; test edx, edx ; sete al ; ret
0x0000000000083885 : mov edx, dword ptr [rdx + 8] ; test rdx, rdx ; jne 0x83889 ; ret
0x000000000011d758 : mov edx, dword ptr [rdx + rbp*8] ; test rdx, rdx ; je 0x11d76e ; call rdx
0x00000000000ef3d1 : mov edx, dword ptr [rsi + 0x18] ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r12 ; call rax
0x00000000000bddfb : mov edx, dword ptr [rsi + 0x20] ; mov qword ptr [rax + 0x20], rdx ; xor eax, eax ; ret
0x00000000000ebdf4 : mov edx, dword ptr [rsp + 0x18] ; mov edi, 0x2000004 ; call rax
0x00000000000ebce7 : mov edx, dword ptr [rsp + 0x18] ; mov rsi, qword ptr [rsp + 8] ; call rax
0x00000000000afa9d : mov edx, dword ptr [rsp + 0x28] ; call rax
0x000000000008021c : mov edx, dword ptr [rsp + 0x48] ; call rax
0x00000000000e354a : mov edx, dword ptr [rsp + 8] ; mov eax, 0x38 ; syscall
0x00000000000aeaf3 : mov edx, dword ptr fs:[rax] ; mov eax, 3 ; syscall
0x00000000000e45a4 : mov edx, eax ; call 0xf0824
0x000000000011c3d2 : mov edx, eax ; jmp 0x11c3c4
0x000000000011c444 : mov edx, eax ; jmp 0x11c42d
0x000000000004735a : mov edx, eax ; jmp 0x47372
0x000000000004a37c : mov edx, eax ; jmp 0x4a3b2
0x000000000004a4f4 : mov edx, eax ; jmp 0x4a514
0x000000000006c551 : mov edx, eax ; jmp 0x6c541
0x000000000006f155 : mov edx, eax ; jmp 0x6f0ea
0x000000000006f222 : mov edx, eax ; jmp 0x6f20c
0x000000000006f314 : mov edx, eax ; jmp 0x6f2ba
0x000000000006f4be : mov edx, eax ; jmp 0x6f45c
0x000000000006fe70 : mov edx, eax ; jmp 0x6fe13
0x000000000007003c : mov edx, eax ; jmp 0x6ffd5
0x0000000000070202 : mov edx, eax ; jmp 0x7019a
0x0000000000074516 : mov edx, eax ; jmp 0x744b8
0x0000000000074aab : mov edx, eax ; jmp 0x74a51
0x0000000000074c06 : mov edx, eax ; jmp 0x74ba3
0x0000000000074f36 : mov edx, eax ; jmp 0x74ed8
0x0000000000085ba4 : mov edx, eax ; jmp 0x85b9a
0x000000000009834b : mov edx, eax ; jmp 0x98319
0x000000000009a99b : mov edx, eax ; jmp 0x9a969
0x000000000009cf1b : mov edx, eax ; jmp 0x9cee9
0x00000000000abd71 : mov edx, eax ; jmp 0xabd45
0x00000000000b6a21 : mov edx, eax ; jmp 0xb6a3f
0x00000000000bd6f8 : mov edx, eax ; jmp 0xbd6d4
0x00000000000bd6c6 : mov edx, eax ; jmp 0xbd6dc
0x00000000000be80a : mov edx, eax ; jmp 0xbe817
0x00000000000d9574 : mov edx, eax ; jmp 0xd9536
0x00000000000df001 : mov edx, eax ; jmp 0xdefd5
0x00000000000e96b0 : mov edx, eax ; jmp 0xe969d
0x00000000000f50db : mov edx, eax ; jmp 0xf50a4
0x00000000000fc6d9 : mov edx, eax ; jmp 0xfc683
0x00000000000dd0be : mov edx, eax ; mov eax, 3 ; syscall
0x00000000000730e2 : mov edx, eax ; mov eax, edx ; pop rbx ; ret
0x00000000001197b4 : mov edx, eax ; mov rax, rdx ; pop rbx ; ret
0x00000000000ef754 : mov edx, ebp ; call rax
0x0000000000096ec6 : mov edx, ebp ; mov rdi, rbp ; call rbx
0x0000000000022f55 : mov edx, ebp ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x0000000000110ff4 : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x0000000000109db5 : mov edx, ebp ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x00000000000207c3 : mov edx, ebp ; sub rdx, rbx ; inc rdx ; jmp 0x207d8
0x00000000000ef7d4 : mov edx, ebx ; call rax
0x0000000000082c9e : mov edx, ebx ; mov rsi, r13 ; call rax
0x0000000000082eba : mov edx, ebx ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x0000000000082c18 : mov edx, ecx ; jmp 0x82be1
0x00000000000d6565 : mov edx, ecx ; mov eax, 0x106 ; syscall
0x00000000000d51f2 : mov edx, ecx ; mov eax, 0x11 ; syscall
0x00000000000e3ef2 : mov edx, ecx ; mov eax, 0x113 ; syscall
0x00000000000e3f92 : mov edx, ecx ; mov eax, 0x114 ; syscall
0x00000000000db9e2 : mov edx, ecx ; mov eax, 0x115 ; syscall
0x00000000000e4062 : mov edx, ecx ; mov eax, 0x116 ; syscall
0x00000000000e40f5 : mov edx, ecx ; mov eax, 0x11e ; syscall
0x00000000000d5262 : mov edx, ecx ; mov eax, 0x12 ; syscall
0x00000000000e39c5 : mov edx, ecx ; mov eax, 0x12d ; syscall
0x00000000000e3925 : mov edx, ecx ; mov eax, 0x12e ; syscall
0x00000000000e4185 : mov edx, ecx ; mov eax, 0x12f ; syscall
0x00000000000e4255 : mov edx, ecx ; mov eax, 0x136 ; syscall
0x00000000000e4285 : mov edx, ecx ; mov eax, 0x137 ; syscall
0x00000000000dcd32 : mov edx, ecx ; mov eax, 0x17 ; syscall
0x00000000000e3d95 : mov edx, ecx ; mov eax, 0x19 ; syscall
0x00000000000db215 : mov edx, ecx ; mov eax, 0x28 ; syscall
0x00000000000e4782 : mov edx, ecx ; mov eax, 0x2c ; syscall
0x00000000000e4572 : mov edx, ecx ; mov eax, 0x2d ; syscall
0x00000000000e4875 : mov edx, ecx ; mov eax, 0x35 ; syscall
0x00000000000e47e5 : mov edx, ecx ; mov eax, 0x36 ; syscall
0x00000000000e4445 : mov edx, ecx ; mov eax, 0x37 ; syscall
0x00000000000b2a65 : mov edx, ecx ; mov eax, 0x3d ; syscall
0x00000000000e4f85 : mov edx, ecx ; mov eax, 0x42 ; syscall
0x00000000000e4df2 : mov edx, ecx ; mov eax, 0x45 ; syscall
0x00000000000e4e62 : mov edx, ecx ; mov eax, 0x46 ; syscall
0x00000000000e3e55 : mov edx, ecx ; mov eax, 0x9d ; syscall
0x00000000000e3d65 : mov edx, ecx ; mov eax, 0xa5 ; syscall
0x00000000000e3c45 : mov edx, ecx ; mov eax, 0xaf ; syscall
0x00000000000e3e85 : mov edx, ecx ; mov eax, 0xb2 ; syscall
0x00000000000e3eb5 : mov edx, ecx ; mov eax, 0xb3 ; syscall
0x0000000000118f05 : mov edx, ecx ; mov eax, 0xb5 ; syscall
0x0000000000118f55 : mov edx, ecx ; mov eax, 0xb6 ; syscall
0x00000000000e3345 : mov edx, ecx ; mov eax, 0xbc ; syscall
0x00000000000e32e5 : mov edx, ecx ; mov eax, 0xbd ; syscall
0x00000000000e31c5 : mov edx, ecx ; mov eax, 0xbe ; syscall
0x00000000000e31f5 : mov edx, ecx ; mov eax, 0xbf ; syscall
0x00000000000e3255 : mov edx, ecx ; mov eax, 0xc0 ; syscall
0x00000000000e3135 : mov edx, ecx ; mov eax, 0xc1 ; syscall
0x00000000000e01b5 : mov edx, ecx ; mov eax, 0xd8 ; syscall
0x00000000000e4fb5 : mov edx, ecx ; mov eax, 0xdc ; syscall
0x00000000000e3bb2 : mov edx, ecx ; mov eax, 0xe8 ; syscall
0x00000000000e3b75 : mov edx, ecx ; mov eax, 0xe9 ; syscall
0x00000000000e0055 : mov edx, ecx ; mov eax, 9 ; syscall
0x00000000000f0fb8 : mov edx, ecx ; syscall
0x00000000000827b1 : mov edx, edi ; call rax
0x0000000000062923 : mov edx, edi ; mov rsi, qword ptr [rip + 0x306634] ; call rax
0x0000000000059733 : mov edx, edi ; mov rsi, qword ptr [rip + 0x30f824] ; call rax
0x00000000000f9866 : mov edx, edi ; mov rsi, qword ptr [rsp] ; mov rdi, r12 ; call rax
0x00000000000eb219 : mov edx, edi ; mov rsi, r12 ; mov rdi, rbx ; call r14
0x00000000000c5118 : mov edx, edx ; mov rdi, r9 ; call 0xc1427
0x0000000000109ec9 : mov edx, esi ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x000000000011c7c5 : mov edx, esp ; add r9, r11 ; call rax
0x00000000000ef3d8 : mov edx, esp ; call rax
0x00000000000c5117 : mov edx, r10d ; mov rdi, r9 ; call 0xc1428
0x00000000000bd6c5 : mov edx, r8d ; jmp 0xbd6dd
0x000000000014c065 : mov es, word ptr [rax] ; add byte ptr [rax + 0x26], ch ; call qword ptr [rsi]
0x00000000000cc0f5 : mov es, word ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000014134d : mov es, word ptr [rcx] ; add ah, ah ; movsxd rdi, edx ; jmp rsp
0x00000000001643a8 : mov es, word ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000015f0bd : mov esi, 0x1c500001 ; sti ; jmp qword ptr [rax]
0x000000000008222d : mov esi, 0x3948feda ; ret 0x2b74
0x000000000003b02f : mov esi, 0x448d4813 ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000095f6e : mov esi, 0x48000000 ; lea eax, [rdi - 0x10] ; ret
0x00000000000eb2fb : mov esi, 0x75c9840a ; out 0xf3, eax ; ret
0x000000000004d11c : mov esi, 0x77cf39ca ; fiadd word ptr [rcx + rcx*4 - 0x40] ; ret
0x00000000000f086c : mov esi, 0x80 ; syscall
0x00000000000b30c3 : mov esi, 0x81 ; syscall
0x00000000000f972b : mov esi, 0x8348014f ; cli ; add al, 0xf ; xchg eax, esi ; ret
0x000000000003f7c1 : mov esi, 0x8349016a ; ret 0xeb01
0x000000000007e00a : mov esi, 0x840f002e ; ret 0xfffc
0x00000000000937d5 : mov esi, 0x84450704 ; sal byte ptr [rbp - 0x1d], 0xf3 ; ret
0x00000000000fadcf : mov esi, 0x89480003 ; ret 0xff31
0x0000000000082402 : mov esi, 0x8948feda ; and byte ptr [r8 + 0x31], r9b ; ret 0x93be
0x0000000000082547 : mov esi, 0x8948feda ; and byte ptr [rax + 0x31], cl ; ret 0x93be
0x00000000000c215e : mov esi, 0x8d000003 ; add dword ptr [r8 - 0x7d], ecx ; ret
0x000000000012b19e : mov esi, 0xc2c1c0bf ; ret
0x00000000000eb026 : mov esi, 0xc48348c5 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000222fa : mov esi, 0xc8b2404 ; xchg byte ptr [rax - 0x7d], cl ; ret 0x4901
0x0000000000093805 : mov esi, 0xca390714 ; je 0x93808 ; ret
0x0000000000093729 : mov esi, 0xd2840714 ; jne 0x93728 ; ret
0x0000000000002ba5 : mov esi, 0xf8cbeb8f ; ret
0x000000000003b4ff : mov esi, 0xfc8341c9 ; adc byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000107477 : mov esi, 1 ; mov rdi, rbx ; call qword ptr [rax]
0x000000000006b4d1 : mov esi, 1 ; mov rdi, rbx ; call rax
0x00000000001075bf : mov esi, 2 ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000111298 : mov esi, 3 ; mov rdi, r13 ; call qword ptr [rax]
0x000000000010767a : mov esi, 4 ; mov rdi, rbp ; call qword ptr [rax]
0x00000000000b6a1a : mov esi, dword ptr [rbp - 0x1c0] ; mov rdx, rax ; jmp 0xb6a46
0x00000000000af765 : mov esi, dword ptr [rbp - 0x58] ; mov rdi, qword ptr [rbp - 0x68] ; call r14
0x000000000002289c : mov esi, dword ptr [rdx + rbx + 0x20] ; call rax
0x00000000000fe5c8 : mov esi, dword ptr [rdx] ; syscall
0x0000000000062926 : mov esi, dword ptr [rip + 0x306634] ; call rax
0x0000000000059736 : mov esi, dword ptr [rip + 0x30f824] ; call rax
0x0000000000057eb3 : mov esi, dword ptr [rip + 0x3110a7] ; call rax
0x000000000005285f : mov esi, dword ptr [rip + 0x3166fb] ; call rax
0x000000000004cf3b : mov esi, dword ptr [rip + 0x31c01f] ; call rax
0x0000000000047c07 : mov esi, dword ptr [rip + 0x321353] ; call rax
0x000000000004543e : mov esi, dword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x0000000000106b48 : mov esi, dword ptr [rsp + 0x10] ; mov rdi, rbp ; call r14
0x000000000007f8c5 : mov esi, dword ptr [rsp + 0x18] ; call rax
0x0000000000022f58 : mov esi, dword ptr [rsp + 0x18] ; call rbx
0x00000000000dce32 : mov esi, dword ptr [rsp + 0x18] ; movsxd rdi, dword ptr [rsp + 0x14] ; syscall
0x000000000008053f : mov esi, dword ptr [rsp + 0x28] ; mov rdi, r12 ; call rax
0x00000000000a322b : mov esi, dword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x38] ; call rax
0x000000000007ff62 : mov esi, dword ptr [rsp + 8] ; call rax
0x00000000000f9869 : mov esi, dword ptr [rsp] ; mov rdi, r12 ; call rax
0x000000000009080e : mov esi, dword ptr [rsp] ; test rsi, rsi ; jne 0x9082d ; jmp 0x907e3
0x00000000000fe5c7 : mov esi, dword ptr fs:[rdx] ; syscall
0x0000000000036068 : mov esi, eax ; mov eax, ecx ; syscall
0x0000000000106a72 : mov esi, ebp ; add rdi, 0x18 ; xor eax, eax ; call rbx
0x0000000000108c42 : mov esi, ebp ; add rdi, 0x23b0 ; call rbx
0x00000000000375f3 : mov esi, ebp ; call r12
0x0000000000082ca1 : mov esi, ebp ; call rax
0x0000000000108c8f : mov esi, ebp ; call rbx
0x0000000000096883 : mov esi, ebp ; lea rcx, [rax + 4] ; call rbx
0x0000000000119e86 : mov esi, ebp ; mov edi, 0xe ; call 0x36189
0x0000000000082ebd : mov esi, ebp ; mov rdi, r12 ; call rax
0x000000000006daf4 : mov esi, ebp ; mov rdi, r14 ; call 0x79da7
0x00000000000e53f2 : mov esi, ebp ; mov rdi, r9 ; mov eax, ebx ; syscall
0x00000000000830cd : mov esi, ebp ; mov rdi, rbx ; call rax
0x000000000011a844 : mov esi, ebx ; call 0xd6a71
0x000000000011068a : mov esi, ebx ; call qword ptr [rax]
0x00000000000e1b5e : mov esi, ebx ; mov rdi, r13 ; call r14
0x0000000000082da4 : mov esi, ebx ; mov rdi, r13 ; call rdx
0x0000000000111c95 : mov esi, ebx ; mov rdi, r15 ; call qword ptr [rax]
0x00000000000bbaf2 : mov esi, ebx ; mov rdi, rbp ; call r12
0x0000000000114982 : mov esi, ebx ; mov rdi, rbp ; call rcx
0x000000000006df8c : mov esi, ecx ; mov eax, r8d ; syscall
0x00000000000cc40e : mov esi, edi ; mov eax, 0xcc ; syscall
0x00000000000b288a : mov esi, edi ; mov eax, ecx ; syscall
0x00000000001053ac : mov esi, edi ; xor edx, edx ; mov rdi, rbx ; call r10
0x000000000010cad2 : mov esi, edx ; add rdi, 0x10 ; call rcx
0x00000000000eeef8 : mov esi, edx ; call rax
0x00000000000d63b0 : mov esi, edx ; mov eax, 4 ; syscall
0x00000000000d63ff : mov esi, edx ; mov eax, 5 ; syscall
0x00000000000d6450 : mov esi, edx ; mov eax, 6 ; syscall
0x0000000000001bc3 : mov esi, edx ; mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x000000000014f8a4 : mov esi, es ; add byte ptr [rax], al ; clc ; cmc ; call rsi
0x00000000000dc91e : mov esi, esi ; mov edi, edi ; mov eax, 0x71 ; syscall
0x00000000000dc98e : mov esi, esi ; mov edi, edi ; mov eax, 0x72 ; syscall
0x00000000000b4140 : mov esi, esi ; mov edi, edi ; mov eax, 0x75 ; syscall
0x00000000000b41c0 : mov esi, esi ; mov edi, edi ; mov eax, 0x77 ; syscall
0x00000000000b2aa4 : mov esi, esi ; mov edi, edi ; mov eax, 0xf7 ; syscall
0x000000000010f558 : mov esi, esi ; movsxd rcx, dword ptr [rax + rsi*4] ; add rax, rcx ; jmp rax
0x00000000000dc419 : mov esi, esi ; movsxd rdi, edi ; mov eax, ecx ; syscall
0x00000000000b4951 : mov esi, esi ; movsxd rdx, dword ptr [rax + rsi*4] ; add rax, rdx ; jmp rax
0x000000000010ebf8 : mov esi, esi ; movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x0000000000113b8d : mov esi, esp ; call qword ptr [rax]
0x00000000001183b0 : mov esi, esp ; mov edi, ebx ; call 0xe4646
0x0000000000076274 : mov esi, esp ; mov rdi, r13 ; mov eax, r9d ; syscall
0x0000000000114147 : mov esi, esp ; mov rdi, r14 ; xor eax, eax ; call rcx
0x0000000000110ff7 : mov esi, esp ; mov rdi, rbp ; call rax
0x0000000000109335 : mov esi, esp ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000eb21c : mov esi, esp ; mov rdi, rbx ; call r14
0x0000000000082672 : mov esi, esp ; mov rdi, rbx ; call rax
0x000000000008019e : mov esi, esp ; xor edx, edx ; mov rdi, rbx ; call 0x7c429
0x00000000000c7742 : mov esp, 0x11024 ; add al, ch ; ret
0x000000000013fac4 : mov esp, 0x14000105 ; jp 0x13fac7 ; call rsp
0x00000000000c3fc6 : mov esp, 0x15024 ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x0000000000140684 : mov esp, 0x34000152 ; in eax, 0xf8 ; call rsp
0x0000000000141164 : mov esp, 0x34000188 ; push rsi ; cli ; call rsp
0x0000000000142214 : mov esp, 0x340001e7 ; movsxd rdi, esp ; call rsp
0x000000000013eee5 : mov esp, 0x3c040000 ; call rsp
0x000000000013eabc : mov esp, 0x40000a1 ; xor esi, edx ; call rsp
0x000000000013eee4 : mov esp, 0x40000bc ; cmp al, 0xf3 ; call rsp
0x000000000013e2ac : mov esp, 0x44000075 ; jns 0x13e2a9 ; call rsp
0x00000000000898db : mov esp, 0x440f48c7 ; ret 0xc083
0x0000000000111ece : mov esp, 0x440f49dd ; fisttp qword ptr [rax - 0x7d] ; ret
0x0000000000088b31 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x0000000000088b61 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x0000000000088b51 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000008971a : mov esp, 0x48fffffb ; mov eax, edi ; ret
0x000000000014261c : mov esp, 0x54000204 ; loope 0x142626 ; call rsp
0x000000000013fa2c : mov esp, 0x64000101 ; pop rbx ; cmc ; call rsp
0x0000000000140074 : mov esp, 0x64000128 ; sub edi, esi ; jmp rsp
0x000000000014ee3d : mov esp, 0x7400000 ; cmc ; jmp qword ptr [rcx]
0x000000000013f57c : mov esp, 0x740000e5 ; sbb dh, ah ; call rsp
0x000000000014ee55 : mov esp, 0x7580000 ; cmc ; jmp qword ptr [rcx]
0x000000000014ee85 : mov esp, 0x7c80000 ; cmc ; jmp rax
0x000000000013e124 : mov esp, 0x8400006c ; adc ch, bh ; call rsp
0x00000000001618d4 : mov esp, 0x880001e6 ; movsd dword ptr [rdi], dword ptr [rsi] ; sti ; jmp rdx
0x000000000007f467 : mov esp, 0x8b824 ; add al, ch ; ret
0x000000000014255c : mov esp, 0x940001ff ; ret 0xfffc
0x0000000000141544 : mov esp, 0xa4000196 ; xchg edx, edi ; call rsp
0x00000000001420a4 : mov esp, 0xa40001dd ; sub ah, bh ; call rsp
0x0000000000140874 : mov esp, 0xb400015d ; test edi, ecx ; call rsp
0x0000000000142c64 : mov esp, 0xb4000229 ; jno 0x142c6f ; call rsp
0x0000000000126860 : mov esp, 0xbf00000f ; sldt word ptr [rax] ; ret 0xf
0x00000000000898ba : mov esp, 0xc2440fc7 ; add eax, 1 ; ret
0x000000000013e72c : mov esp, 0xc4000089 ; ret
0x000000000014129c : mov esp, 0xc400018c ; pop rsi ; cli ; call rsp
0x0000000000142434 : mov esp, 0xc40001f8 ; test al, 0xfc ; call rsp
0x000000000008589b : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x000000000013f3bc : mov esp, 0xd40000da ; leave ; call rsp
0x000000000014e4d4 : mov esp, 0xd80000b2 ; jg 0x14e4d6 ; call qword ptr [rsi]
0x000000000013ebbc : mov esp, 0xe40000a7 ; sal edx, 1 ; call rsp
0x000000000013f82c : mov esp, 0xe40000f5 ; mov ch, 0xf4 ; call rsp
0x000000000014265c : mov esp, 0xe4000206 ; in eax, dx ; cld ; call rsp
0x0000000000142abc : mov esp, 0xe4000221 ; pop rdi ; std ; call rsp
0x000000000014108c : mov esp, 0xf4000184 ; cli ; call rsp
0x000000000014139c : mov esp, 0xf400018f ; cli ; call rsp
0x00000000001421bc : mov esp, 0xf40001e4 ; push rsp ; cld ; call rsp
0x00000000001479d4 : mov esp, 0xf8000047 ; jge 0x1479d2 ; call qword ptr [rsi]
0x00000000000902ab : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x0000000000088b41 : mov esp, 0xf80148c0 ; ret
0x000000000006bf3c : mov esp, dword ptr [rbp] ; call 0xd8235
0x0000000000035d8d : mov esp, eax ; mov rbp, r9 ; jmp rdx
0x000000000010822a : mov esp, eax ; pop rbx ; pop rbp ; mov eax, r12d ; pop r12 ; ret
0x000000000014f6a4 : mov esp, es ; add byte ptr [rax], al ; cwde ; cmp ch, dh ; call qword ptr [rdx]
0x00000000001115c2 : mov qword ptr [r12], rcx ; pop r12 ; ret
0x000000000004c646 : mov qword ptr [r15 + 8], rdx ; jmp 0x4c613
0x000000000010bf17 : mov qword ptr [r8 + 8], rdx ; mov eax, 1 ; ret
0x0000000000049d20 : mov qword ptr [r8], rax ; jmp 0x49cec
0x0000000000055350 : mov qword ptr [r8], rax ; jmp 0x5531c
0x000000000010bffe : mov qword ptr [r8], rax ; mov eax, 1 ; ret
0x0000000000100777 : mov qword ptr [r9], r10 ; ret
0x00000000001007b8 : mov qword ptr [r9], rdi ; ret
0x0000000000070b9c : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000070bdc : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x00000000000e13d0 : mov qword ptr [rax + 0x10], rsi ; ret
0x000000000007119c : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000075fec : mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000bddfe : mov qword ptr [rax + 0x20], rdx ; xor eax, eax ; ret
0x00000000000bde2c : mov qword ptr [rax + 0x20], rsi ; xor eax, eax ; ret
0x0000000000070ba0 : mov qword ptr [rax + 0x40], rcx ; ret
0x000000000003912d : mov qword ptr [rax + 0x40], rdx ; call qword ptr [rbx]
0x000000000007124e : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000011e602 : mov qword ptr [rax + 8], 0 ; pop rbx ; ret
0x0000000000079bfd : mov qword ptr [rax + 8], 0 ; ret
0x00000000000822c8 : mov qword ptr [rax + 8], rsi ; ret
0x00000000000dc567 : mov qword ptr [rax], -1 ; xor eax, eax ; ret
0x00000000000476df : mov qword ptr [rax], rcx ; mov byte ptr [rax + 8], 0 ; ret
0x000000000006f3a1 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; add rsp, 8 ; ret
0x0000000000071379 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x000000000007f739 : mov qword ptr [rax], rdi ; ret
0x00000000000e3438 : mov qword ptr [rax], rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000002e7f7 : mov qword ptr [rax], rdx ; ret
0x00000000000717e4 : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000109599 : mov qword ptr [rbp + 0x68], rcx ; jmp 0x109567
0x00000000000529fb : mov qword ptr [rbp - 0x1180], rcx ; jmp rax
0x000000000005d36c : mov qword ptr [rbp - 0x1f0], rdx ; call 0x79669
0x00000000000b3c98 : mov qword ptr [rbp - 0x38], rdx ; call 0xeff76
0x00000000000b3cda : mov qword ptr [rbp - 0x40], r8 ; call 0xeff76
0x0000000000022dde : mov qword ptr [rbp - 0x58], rax ; call rcx
0x0000000000047d79 : mov qword ptr [rbp - 0x5a0], rcx ; jmp rax
0x00000000000e537f : mov qword ptr [rbp - 0x6d0], rax ; mov eax, ebx ; syscall
0x00000000000efb54 : mov qword ptr [rbp - 0x70], rdx ; mov rdx, r12 ; call rax
0x00000000000ee468 : mov qword ptr [rbp - 0x98], r11 ; call 0xea759
0x0000000000082684 : mov qword ptr [rbp], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002bb4e : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x000000000011c2cd : mov qword ptr [rbx + 0x10], rax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000076d0e : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x00000000000775b0 : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000114b79 : mov qword ptr [rbx + 0x18], 0 ; pop rbx ; ret
0x000000000011c26a : mov qword ptr [rbx + 0x18], rax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000114be8 : mov qword ptr [rbx + 0x20], r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000794e6 : mov qword ptr [rbx + 0x20], rax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x00000000000ca07a : mov qword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x00000000000a46a9 : mov qword ptr [rbx + 0x28], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007601c : mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x0000000000083571 : mov qword ptr [rbx + 0x48], r9 ; mov rdi, r9 ; call rcx
0x00000000000db9a9 : mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x0000000000079556 : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000076bde : mov qword ptr [rbx + 0x90], rax ; pop rbx ; ret
0x00000000000bbc7f : mov qword ptr [rbx + 8], rax ; movsxd rdx, dword ptr [rbx + 4] ; jmp 0xbbc54
0x0000000000079704 : mov qword ptr [rbx + 8], rdx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000008385c : mov qword ptr [rbx + 8], rsi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e0f79 : mov qword ptr [rbx], 0 ; pop rbx ; ret
0x000000000011c4d5 : mov qword ptr [rbx], rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000011140d : mov qword ptr [rbx], rax ; pop rbx ; ret
0x00000000000d95de : mov qword ptr [rbx], rax ; xor eax, eax ; pop rbx ; ret
0x00000000000834a8 : mov qword ptr [rbx], rdi ; mov dword ptr [rbx + 0x30], eax ; call rcx
0x000000000010bef7 : mov qword ptr [rcx + 0x10], rdx ; mov eax, 1 ; ret
0x00000000000be383 : mov qword ptr [rcx], rax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000002d7eb : mov qword ptr [rcx], rax ; jmp 0x2d803
0x0000000000073f57 : mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x00000000000d60ee : mov qword ptr [rdi + 0x100], rdx ; ret
0x0000000000045ece : mov qword ptr [rdi + 0x10], r9 ; ret
0x00000000000e1352 : mov qword ptr [rdi + 0x10], rsi ; mov qword ptr [rdx], rdi ; ret
0x0000000000079476 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000763fe : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x0000000000114827 : mov qword ptr [rdi + 0x18], rdx ; ret
0x00000000001147c0 : mov qword ptr [rdi + 0x18], rsi ; mov dword ptr [rdi + 0x28], edx ; mov al, 1 ; ret
0x00000000001147e9 : mov qword ptr [rdi + 0x18], rsi ; ret
0x00000000000a3a2c : mov qword ptr [rdi + 0x20], rcx ; pop rbx ; pop rbp ; ret
0x0000000000109d18 : mov qword ptr [rdi + 0x20], rdx ; add rsp, 8 ; ret
0x000000000010f5f7 : mov qword ptr [rdi + 0x28], rdx ; mov eax, 1 ; ret
0x000000000008ec20 : mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000010f597 : mov qword ptr [rdi + 0x38], rdx ; mov eax, 1 ; ret
0x00000000000794a6 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000036a4c : mov qword ptr [rdi + 0x78], -1 ; ret
0x00000000000d57c1 : mov qword ptr [rdi + 0x80], rdx ; ret
0x00000000000de827 : mov qword ptr [rdi + 8], 0 ; ret
0x0000000000045677 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000045e57 : mov qword ptr [rdi + 8], r9 ; ret
0x000000000007947a : mov qword ptr [rdi + 8], rax ; ret
0x00000000000767c2 : mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x000000000010a554 : mov qword ptr [rdi + 8], rdx ; pop rbx ; ret
0x0000000000039859 : mov qword ptr [rdi + 8], rdx ; ret
0x00000000000de81b : mov qword ptr [rdi + 8], rsi ; ret
0x00000000000892b1 : mov qword ptr [rdi + rdx - 8], rcx ; ret
0x0000000000045dbe : mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000045d3d : mov qword ptr [rdi - 8], r9 ; ret
0x000000000005173d : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000045d0c : mov qword ptr [rdi], r9 ; ret
0x000000000004712d : mov qword ptr [rdi], rax ; mov eax, 1 ; ret
0x00000000000de818 : mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000008ea51 : mov qword ptr [rdi], rax ; pop rbx ; pop rbp ; ret
0x00000000000ffc05 : mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000039869 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 8], rdx ; ret
0x00000000000892ae : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000008e9c0 : mov qword ptr [rdi], rcx ; ret
0x0000000000093a2b : mov qword ptr [rdi], rdx ; nop dword ptr [rax - 0x45] ; ret
0x000000000001fbb7 : mov qword ptr [rdi], rdx ; ret
0x00000000000ffc16 : mov qword ptr [rdi], rsi ; ret
0x000000000010090e : mov qword ptr [rdx + 0x10], rax ; xor eax, eax ; ret
0x000000000006c9aa : mov qword ptr [rdx + 0x140], rcx ; ret
0x0000000000076d7c : mov qword ptr [rdx + 0x140], rdi ; pop rbx ; ret
0x00000000001093b7 : mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000010938f : mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000109393 : mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000069fcb : mov qword ptr [rdx + 8], r8 ; add dword ptr [rdx + 4], 1 ; ret
0x000000000010ec54 : mov qword ptr [rdx + 8], rdi ; ret
0x000000000010eccb : mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x0000000000074ca2 : mov qword ptr [rdx], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000087d1d : mov qword ptr [rdx], rbx ; mov rax, r10 ; pop rbx ; ret
0x0000000000070f1d : mov qword ptr [rdx], rcx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000007a6a3 : mov qword ptr [rdx], rcx ; ret
0x00000000000c96fe : mov qword ptr [rdx], rdi ; ret
0x000000000010ec51 : mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x00000000000f110b : mov qword ptr [rip + 0x27c08e], rdx ; pop rbp ; ret
0x00000000000e5837 : mov qword ptr [rip + 0x2839e2], rbx ; pop rbx ; ret
0x00000000000deff9 : mov qword ptr [rip + 0x28d170], rax ; mov rdx, rax ; jmp 0xdefdd
0x00000000000878e5 : mov qword ptr [rip + 0x2e401c], rax ; ret
0x00000000000822d0 : mov qword ptr [rip + 0x2e9599], rsi ; ret
0x00000000000ca46b : mov qword ptr [rsi + 0x10], r8 ; ret
0x00000000001084de : mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000039ef9 : mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x00000000000e1393 : mov qword ptr [rsi + 0x10], rdx ; mov qword ptr [rax + 8], rsi ; ret
0x00000000000397db : mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x00000000000716f8 : mov qword ptr [rsi + 0x60], rbx ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000d5732 : mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x00000000000ca44a : mov qword ptr [rsi + 8], 0 ; ret
0x00000000001084b6 : mov qword ptr [rsi + 8], rax ; ret
0x00000000000ca467 : mov qword ptr [rsi + 8], rcx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x00000000000e13cc : mov qword ptr [rsi + 8], rdx ; mov qword ptr [rax + 0x10], rsi ; ret
0x00000000000fea25 : mov qword ptr [rsi + rdx - 0xb8], rcx ; ret
0x000000000007b582 : mov qword ptr [rsi], rax ; mov rax, r8 ; ret
0x0000000000076402 : mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000000ffc5c : mov qword ptr [rsi], rdi ; ret
0x00000000000f4da0 : mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x000000000007e09e : mov qword ptr [rsp + 0x10], rcx ; call rdx
0x00000000000d31e4 : mov qword ptr [rsp + 0x20], r10 ; call 0x1f477
0x000000000007de4e : mov qword ptr [rsp + 0x28], r15 ; mov rdi, r15 ; call qword ptr [rax]
0x000000000007de81 : mov qword ptr [rsp + 0x28], rdx ; call rax
0x000000000010706e : mov qword ptr [rsp + 8], 0 ; call qword ptr [rax]
0x000000000006ca73 : mov qword ptr [rsp + 8], rax ; call 0x78d07
0x0000000000083517 : mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x0000000000027a16 : mov qword ptr [rsp + 8], rax ; call rbx
0x0000000000114caf : mov qword ptr [rsp + 8], rax ; xor eax, eax ; call rdx
0x0000000000110a9b : mov qword ptr [rsp + 8], rdi ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000e34fa : mov qword ptr [rsp - 0x30], r9 ; syscall
0x0000000000107adf : mov qword ptr [rsp], rax ; call qword ptr [r11]
0x0000000000027b38 : mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x00000000000d6a8e : mov qword ptr [rsp], rax ; mov eax, 0 ; syscall
0x00000000000e41de : mov qword ptr [rsp], rax ; mov eax, 0x130 ; syscall
0x00000000000e010e : mov qword ptr [rsp], rax ; mov eax, 0x1a ; syscall
0x00000000000b2d6e : mov qword ptr [rsp], rax ; mov eax, 0x22 ; syscall
0x00000000000b2dde : mov qword ptr [rsp], rax ; mov eax, 0x23 ; syscall
0x00000000000e439e : mov qword ptr [rsp], rax ; mov eax, 0x2a ; syscall
0x00000000000e42fe : mov qword ptr [rsp], rax ; mov eax, 0x2b ; syscall
0x00000000000e472e : mov qword ptr [rsp], rax ; mov eax, 0x2e ; syscall
0x00000000000e45fe : mov qword ptr [rsp], rax ; mov eax, 0x2f ; syscall
0x00000000000dcf1e : mov qword ptr [rsp], rax ; mov eax, 0x4a ; syscall
0x00000000000dcfbe : mov qword ptr [rsp], rax ; mov eax, 0x4b ; syscall
0x00000000000d72ae : mov qword ptr [rsp], rax ; mov eax, 0x55 ; syscall
0x00000000000d6afe : mov qword ptr [rsp], rax ; mov eax, 1 ; syscall
0x00000000000d683e : mov qword ptr [rsp], rax ; mov eax, 2 ; syscall
0x00000000000d714e : mov qword ptr [rsp], rax ; mov eax, 3 ; syscall
0x00000000000daeae : mov qword ptr [rsp], rax ; mov eax, 7 ; syscall
0x00000000000e35ee : mov qword ptr [rsp], rax ; mov eax, 8 ; syscall
0x00000000000afa98 : mov qword ptr [rsp], rdx ; mov rdx, qword ptr [rsp + 0x28] ; call rax
0x000000000002f050 : mov qword ptr fs:[rax], rdx ; ret
0x000000000011140c : mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x0000000000085ba3 : mov r10, r8 ; jmp 0x85b9b
0x00000000000d51f1 : mov r10, rcx ; mov eax, 0x11 ; syscall
0x00000000000e3ef1 : mov r10, rcx ; mov eax, 0x113 ; syscall
0x00000000000e3f91 : mov r10, rcx ; mov eax, 0x114 ; syscall
0x00000000000db9e1 : mov r10, rcx ; mov eax, 0x115 ; syscall
0x00000000000e4061 : mov r10, rcx ; mov eax, 0x116 ; syscall
0x00000000000e40f4 : mov r10, rcx ; mov eax, 0x11e ; syscall
0x00000000000d5261 : mov r10, rcx ; mov eax, 0x12 ; syscall
0x00000000000e39c4 : mov r10, rcx ; mov eax, 0x12d ; syscall
0x00000000000e3924 : mov r10, rcx ; mov eax, 0x12e ; syscall
0x00000000000e4184 : mov r10, rcx ; mov eax, 0x12f ; syscall
0x00000000000e4254 : mov r10, rcx ; mov eax, 0x136 ; syscall
0x00000000000e4284 : mov r10, rcx ; mov eax, 0x137 ; syscall
0x00000000000dcd31 : mov r10, rcx ; mov eax, 0x17 ; syscall
0x00000000000e3d94 : mov r10, rcx ; mov eax, 0x19 ; syscall
0x00000000000db214 : mov r10, rcx ; mov eax, 0x28 ; syscall
0x00000000000e4781 : mov r10, rcx ; mov eax, 0x2c ; syscall
0x00000000000e4571 : mov r10, rcx ; mov eax, 0x2d ; syscall
0x00000000000e4874 : mov r10, rcx ; mov eax, 0x35 ; syscall
0x00000000000e47e4 : mov r10, rcx ; mov eax, 0x36 ; syscall
0x00000000000e4444 : mov r10, rcx ; mov eax, 0x37 ; syscall
0x00000000000b2a64 : mov r10, rcx ; mov eax, 0x3d ; syscall
0x00000000000e4f84 : mov r10, rcx ; mov eax, 0x42 ; syscall
0x00000000000e4df1 : mov r10, rcx ; mov eax, 0x45 ; syscall
0x00000000000e4e61 : mov r10, rcx ; mov eax, 0x46 ; syscall
0x00000000000e3e54 : mov r10, rcx ; mov eax, 0x9d ; syscall
0x00000000000e3d64 : mov r10, rcx ; mov eax, 0xa5 ; syscall
0x00000000000e3c44 : mov r10, rcx ; mov eax, 0xaf ; syscall
0x00000000000e3e84 : mov r10, rcx ; mov eax, 0xb2 ; syscall
0x00000000000e3eb4 : mov r10, rcx ; mov eax, 0xb3 ; syscall
0x0000000000118f04 : mov r10, rcx ; mov eax, 0xb5 ; syscall
0x0000000000118f54 : mov r10, rcx ; mov eax, 0xb6 ; syscall
0x00000000000e3344 : mov r10, rcx ; mov eax, 0xbc ; syscall
0x00000000000e32e4 : mov r10, rcx ; mov eax, 0xbd ; syscall
0x00000000000e31c4 : mov r10, rcx ; mov eax, 0xbe ; syscall
0x00000000000e31f4 : mov r10, rcx ; mov eax, 0xbf ; syscall
0x00000000000e3254 : mov r10, rcx ; mov eax, 0xc0 ; syscall
0x00000000000e3134 : mov r10, rcx ; mov eax, 0xc1 ; syscall
0x00000000000e01b4 : mov r10, rcx ; mov eax, 0xd8 ; syscall
0x00000000000e4fb4 : mov r10, rcx ; mov eax, 0xdc ; syscall
0x00000000000e3bb1 : mov r10, rcx ; mov eax, 0xe8 ; syscall
0x00000000000e3b74 : mov r10, rcx ; mov eax, 0xe9 ; syscall
0x00000000000e0054 : mov r10, rcx ; mov eax, 9 ; syscall
0x00000000000f0fb7 : mov r10, rcx ; syscall
0x000000000012c97d : mov r10d, 0xcac982a4 ; call 0xffffffffaed567ff
0x00000000000abd70 : mov r10d, r8d ; jmp 0xabd46
0x000000000006bf3b : mov r12d, dword ptr [rbp] ; call 0xd8236
0x000000000006bf3a : mov r12d, dword ptr fs:[rbp] ; call 0xd8237
0x0000000000066184 : mov r13, r10 ; jmp 0x62479
0x0000000000066181 : mov r15, r11 ; mov r13, r10 ; jmp 0x6247c
0x00000000000e1609 : mov r15d, r14d ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000110683 : mov r8, r12 ; mov rcx, r13 ; mov rsi, rbx ; call qword ptr [rax]
0x00000000000dfec3 : mov r8, r9 ; mov r9, qword ptr [rsp + 8] ; syscall
0x0000000000103e1b : mov r8d, dword ptr [rax + 0x18] ; test r8d, r8d ; jne 0x103e31 ; ret
0x00000000000dfec6 : mov r9, qword ptr [rsp + 8] ; syscall
0x000000000003a393 : mov r9, rax ; jmp 0x3a28b
0x000000000003a81f : mov r9, rdi ; jmp 0x3a76b
0x00000000000de8c2 : mov r9, rsi ; mov byte ptr [r9 - 1], 0 ; ret
0x0000000000041bd0 : mov r9d, 1 ; jmp 0x41ba1
0x0000000000101702 : mov r9d, dword ptr [rdx + 0x14] ; jmp 0x1016cf
0x000000000011c7c1 : mov r9d, dword ptr [rdx] ; mov rdx, r12 ; add r9, r11 ; call rax
0x00000000000b28cf : mov rax, -0xe ; ret
0x0000000000076bf0 : mov rax, -1 ; pop rbx ; ret
0x0000000000035e7e : mov rax, -1 ; ret
0x0000000000035f64 : mov rax, 0xf ; syscall
0x0000000000095a00 : mov rax, 1 ; ret
0x0000000000095a10 : mov rax, 2 ; ret
0x0000000000095a20 : mov rax, 3 ; ret
0x0000000000095a30 : mov rax, 4 ; ret
0x0000000000095a40 : mov rax, 5 ; ret
0x0000000000095a50 : mov rax, 6 ; ret
0x0000000000095a60 : mov rax, 7 ; ret
0x00000000000e5cb7 : mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x00000000000e5d02 : mov rax, qword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x00000000000efebf : mov rax, qword ptr [rax + 0x30] ; ret
0x000000000010eb37 : mov rax, qword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000073857 : mov rax, qword ptr [rax + 0x4c] ; ret
0x000000000010f4f7 : mov rax, qword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000e33c8 : mov rax, qword ptr [rax + 0x58] ; ret
0x00000000000e33d0 : mov rax, qword ptr [rax + 0xc0] ; ret
0x00000000000231be : mov rax, qword ptr [rax + 8] ; add rsp, 0x18 ; ret
0x00000000000e33a9 : mov rax, qword ptr [rax + 8] ; ret
0x000000000002c1c1 : mov rax, qword ptr [rax + rbx*8] ; test rax, rax ; je 0x2c1d9 ; call rax
0x000000000002ed98 : mov rax, qword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002e842 : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000002dd4f : mov rax, qword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x0000000000049d1d : mov rax, qword ptr [rax] ; mov qword ptr [r8], rax ; jmp 0x49cef
0x000000000005534d : mov rax, qword ptr [rax] ; mov qword ptr [r8], rax ; jmp 0x5531f
0x0000000000039292 : mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000010400c : mov rax, qword ptr [rax] ; ret
0x00000000000809cb : mov rax, qword ptr [rax] ; test rax, rax ; je 0x809e1 ; call rax
0x00000000000e160c : mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000000af6ce : mov rax, qword ptr [rbp - 0x58] ; call rax
0x0000000000023acc : mov rax, qword ptr [rbp - 0x60] ; call rax
0x0000000000076018 : mov rax, qword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x00000000000b2e67 : mov rax, qword ptr [rbx + 8] ; test rax, rax ; je 0xb2e7f ; call rax
0x00000000001113cd : mov rax, qword ptr [rbx] ; test rax, rax ; je 0x1113e9 ; pop rbx ; ret
0x0000000000111441 : mov rax, qword ptr [rbx] ; test rax, rax ; je 0x1113fd ; pop rbx ; ret
0x00000000000b3094 : mov rax, qword ptr [rcx + 0x10] ; test rax, rax ; je 0xb30b0 ; call rax
0x0000000000114baf : mov rax, qword ptr [rdi + 0x18] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000114784 : mov rax, qword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000aefd4 : mov rax, qword ptr [rdi + 0x20] ; ret
0x0000000000108516 : mov rax, qword ptr [rdi + 0x28] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000076068 : mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x0000000000108552 : mov rax, qword ptr [rdi + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000075f38 : mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000073854 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000007a994 : mov rax, qword ptr [rdi + 0x68] ; ret
0x0000000000113a55 : mov rax, qword ptr [rdi + 8] ; call qword ptr [rax]
0x0000000000109248 : mov rax, qword ptr [rdi + 8] ; lea rsi, [rsp + 8] ; call qword ptr [rax]
0x0000000000113b88 : mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000002ed26 : mov rax, qword ptr [rdx + rax*4 + 0x200] ; ret
0x00000000000c96fb : mov rax, qword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x000000000007a688 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x7a689 ; ret
0x000000000011981b : mov rax, qword ptr [rip + 0x250f06] ; call qword ptr [rax]
0x00000000001191ab : mov rax, qword ptr [rip + 0x251576] ; call qword ptr [rax]
0x00000000000fd840 : mov rax, qword ptr [rip + 0x26d069] ; ret
0x000000000007e127 : mov rax, qword ptr [rip + 0x2eac8a] ; xor edi, edi ; call qword ptr [rax]
0x000000000007a974 : mov rax, qword ptr [rip + 0x2ef6c5] ; ret
0x000000000002b364 : mov rax, qword ptr [rip + 0x33f5b5] ; ret
0x0000000000023234 : mov rax, qword ptr [rip + 0x34b125] ; ret
0x0000000000023224 : mov rax, qword ptr [rip + 0x34b145] ; ret
0x000000000002dd28 : mov rax, qword ptr [rsi + rdx*8 + 0x80] ; ret
0x000000000011bd65 : mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000021dbe : mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000000a322f : mov rax, qword ptr [rsp + 0x38] ; call rax
0x0000000000029a92 : mov rax, qword ptr [rsp + 0x50] ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x0000000000027b33 : mov rax, qword ptr [rsp + 0x78] ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x000000000002f470 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000dc6f1 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x28 ; ret
0x00000000000dd643 : mov rax, qword ptr [rsp - 0x50] ; ret
0x00000000000dc83b : mov rax, qword ptr [rsp] ; add rsp, 0x28 ; ret
0x00000000000e63fa : mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x00000000000e646b : mov rax, qword ptr [rsp] ; add rsp, 0x40 ; ret
0x000000000010400b : mov rax, qword ptr fs:[rax] ; ret
0x0000000000087d20 : mov rax, r10 ; pop rbx ; ret
0x00000000000f1baf : mov rax, r10 ; ret
0x000000000008ef99 : mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a3c12 : mov rax, r12 ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000090766 : mov rax, r12 ; pop r12 ; ret
0x00000000000dd6c2 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006b3f9 : mov rax, r13 ; pop r13 ; pop r14 ; ret
0x000000000006d584 : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000af0e4 : mov rax, r14 ; pop r14 ; ret
0x000000000007b6a2 : mov rax, r8 ; nop dword ptr [rax] ; ret
0x000000000007b585 : mov rax, r8 ; ret
0x00000000000a2a60 : mov rax, rbp ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000077c21 : mov rax, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000006f781 : mov rax, rbp ; mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006de04 : mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006dc9b : mov rax, rbp ; pop rbp ; pop r12 ; ret
0x000000000006ddcf : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000076e04 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000076587 : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000008ee5e : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000e2eee : mov rax, rbx ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x000000000002bced : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006cd29 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000330e6 : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000003965e : mov rax, rbx ; pop rbx ; ret
0x000000000002f612 : mov rax, rcx ; pop r13 ; ret
0x000000000002f588 : mov rax, rcx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000033bcc : mov rax, rcx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000082575 : mov rax, rcx ; pop rbx ; pop rbp ; ret
0x0000000000034826 : mov rax, rcx ; pop rbx ; ret
0x0000000000034830 : mov rax, rcx ; ret
0x00000000000f1a46 : mov rax, rdi ; add rsp, 8 ; ret
0x00000000000475b8 : mov rax, rdi ; cmovae rax, rsi ; ret
0x0000000000039204 : mov rax, rdi ; cqo ; idiv rsi ; ret
0x000000000006f6c9 : mov rax, rdi ; jmp 0x6f694
0x0000000000089a7b : mov rax, rdi ; jne 0x89a93 ; ret
0x000000000009655b : mov rax, rdi ; jne 0x96573 ; ret
0x00000000000de929 : mov rax, rdi ; mov byte ptr [r9 - 1], 0 ; ret
0x000000000009363a : mov rax, rdi ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000009621a : mov rax, rdi ; nop dword ptr [rax] ; ret
0x000000000002f85b : mov rax, rdi ; pop r13 ; ret
0x000000000002f841 : mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007ba27 : mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f1c80 : mov rax, rdi ; pop rbx ; ret
0x000000000007a9a4 : mov rax, rdi ; ret
0x00000000000f4a6d : mov rax, rdi ; sar rax, 6 ; ret
0x00000000000f0887 : mov rax, rdi ; test edx, edx ; jne 0xf0897 ; ret
0x000000000011c3c3 : mov rax, rdx ; add rsp, 0x28 ; ret
0x000000000007f820 : mov rax, rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000a68c3 : mov rax, rdx ; add rsp, 8 ; ret
0x000000000006e867 : mov rax, rdx ; pop r12 ; ret
0x00000000000aecb5 : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007fd84 : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006ea17 : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000044601 : mov rax, rdx ; pop rbx ; ret
0x0000000000045849 : mov rax, rdx ; ret
0x0000000000038ca7 : mov rax, rsi ; pop rbx ; pop rbp ; ret
0x00000000000f979d : mov rax, rsi ; pop rbx ; ret
0x0000000000047580 : mov rax, rsi ; ret
0x0000000000035d8f : mov rbp, r9 ; jmp rdx
0x00000000000f0fd7 : mov rbp, rsp ; pop rbp ; ret
0x0000000000119429 : mov rbx, qword ptr [rbp - 0x60] ; mov rdi, rbx ; call 0x856e9
0x00000000000e4529 : mov rbx, rax ; ja 0xe454c ; mov edi, ebp ; call 0xf0829
0x00000000000e1b10 : mov rbx, rax ; jmp 0xe1adb
0x0000000000108e16 : mov rbx, rax ; jne 0x108db2 ; xor eax, eax ; pop rbx ; ret
0x00000000000dc1d2 : mov rbx, rax ; mov rax, rbx ; pop rbx ; ret
0x00000000000797ea : mov rbx, rdi ; je 0x797fe ; pop rbx ; ret
0x000000000002d4b9 : mov rbx, rdi ; test rax, rax ; je 0x2d4cf ; call rax
0x000000000007876a : mov rbx, rdx ; jne 0x7877e ; pop rbx ; ret
0x00000000000af084 : mov rbx, rsi ; syscall
0x00000000000db1b9 : mov rbx, rsi ; xor esi, esi ; sub rsp, 8 ; syscall
0x000000000002c590 : mov rcx, qword ptr [rax + r15*8] ; test rcx, rcx ; je 0x2c5a8 ; call rcx
0x000000000010f8f5 : mov rcx, qword ptr [rbp - 0x168] ; call rcx
0x00000000000bd6bf : mov rcx, qword ptr [rbx + 0x18] ; xor esi, esi ; mov edx, r8d ; jmp 0xbd6e3
0x000000000007a6a0 : mov rcx, qword ptr [rdi] ; mov qword ptr [rdx], rcx ; ret
0x000000000010c3d0 : mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x000000000010c1bd : mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x0000000000108105 : mov rcx, qword ptr [rsp + 8] ; call rcx
0x00000000000971f1 : mov rcx, r13 ; mov rdi, rbp ; call rbx
0x0000000000110686 : mov rcx, r13 ; mov rsi, rbx ; call qword ptr [rax]
0x0000000000096a32 : mov rcx, r14 ; mov rdi, qword ptr [r13] ; call r12
0x0000000000093975 : mov rcx, rax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x0000000000093963 : mov rcx, rdi ; mov qword ptr [rdx], rcx ; ret
0x0000000000096731 : mov rdi, qword ptr [r12] ; lea rcx, [rax + 1] ; call rbx
0x0000000000096a35 : mov rdi, qword ptr [r13] ; call r12
0x0000000000022dda : mov rdi, qword ptr [rax + 0x18] ; mov qword ptr [rbp - 0x58], rax ; call rcx
0x00000000000b618e : mov rdi, qword ptr [rbp - 0x430] ; call r14
0x00000000000af768 : mov rdi, qword ptr [rbp - 0x68] ; call r14
0x000000000002315a : mov rdi, qword ptr [rbx + 0x18] ; call rax
0x00000000000450dd : mov rdi, qword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x000000000006cad4 : mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000006cba6 : mov rdi, qword ptr [rdi + 0xe0] ; call rdx
0x00000000000f0894 : mov rdi, qword ptr [rdi + 8] ; call qword ptr [rax]
0x00000000000eeef3 : mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x000000000002b0e1 : mov rdi, qword ptr [rsp + 0x18] ; call r15
0x00000000000253a5 : mov rdi, qword ptr [rsp + 0x40] ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000027412 : mov rdi, qword ptr [rsp + 0x48] ; call rax
0x0000000000027a12 : mov rdi, qword ptr [rsp + 0x48] ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000026e71 : mov rdi, qword ptr [rsp + 0x58] ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000002206b : mov rdi, qword ptr [rsp + 8] ; call rax
0x00000000000daf7c : mov rdi, qword ptr [rsp + 8] ; syscall
0x00000000000e459f : mov rdi, qword ptr [rsp] ; mov rdx, rax ; call 0xf0829
0x0000000000113188 : mov rdi, r12 ; call 0x1f475
0x000000000001ff49 : mov rdi, r12 ; call qword ptr [r14]
0x0000000000080543 : mov rdi, r12 ; call rax
0x00000000000b3d35 : mov rdi, r13 ; call 0xeff75
0x000000000011129d : mov rdi, r13 ; call qword ptr [rax]
0x00000000000e1b60 : mov rdi, r13 ; call r14
0x0000000000082da6 : mov rdi, r13 ; call rdx
0x000000000002d3ba : mov rdi, r13 ; mov ax, 3 ; syscall
0x000000000002d27c : mov rdi, r13 ; mov eax, 3 ; syscall
0x0000000000076276 : mov rdi, r13 ; mov eax, r9d ; syscall
0x0000000000022898 : mov rdi, r13 ; mov rsi, qword ptr [rdx + rbx + 0x20] ; call rax
0x0000000000073bbb : mov rdi, r13 ; xor r8d, r8d ; call r12
0x0000000000113194 : mov rdi, r14 ; call 0x1f475
0x000000000006daf6 : mov rdi, r14 ; call 0x79da5
0x0000000000107e83 : mov rdi, r14 ; call rax
0x0000000000023ac9 : mov rdi, r14 ; mov rax, qword ptr [rbp - 0x60] ; call rax
0x00000000000827ad : mov rdi, r14 ; mov rdx, r15 ; call rax
0x0000000000114149 : mov rdi, r14 ; xor eax, eax ; call rcx
0x000000000005d3b5 : mov rdi, r15 ; call 0x79665
0x00000000000bfc44 : mov rdi, r15 ; call 0xbbf25
0x00000000000ee453 : mov rdi, r15 ; call 0xea755
0x000000000007de53 : mov rdi, r15 ; call qword ptr [rax]
0x00000000000af350 : mov rdi, r15 ; call rbx
0x0000000000082c9a : mov rdi, r15 ; mov rdx, rbx ; mov rsi, r13 ; call rax
0x00000000000d64a7 : mov rdi, r8 ; mov eax, 0x85 ; syscall
0x00000000000c511a : mov rdi, r9 ; call 0xc1425
0x0000000000083575 : mov rdi, r9 ; call rcx
0x00000000000e527f : mov rdi, r9 ; mov eax, 0x14 ; syscall
0x00000000000e542c : mov rdi, r9 ; mov eax, 3 ; syscall
0x00000000000e53f4 : mov rdi, r9 ; mov eax, ebx ; syscall
0x0000000000036341 : mov rdi, r9 ; mov eax, r8d ; syscall
0x000000000010d21c : mov rdi, rax ; call 0x69505
0x00000000000d3197 : mov rdi, rbp ; call 0x1f475
0x00000000000ed2dd : mov rdi, rbp ; call 0x79565
0x000000000010767f : mov rdi, rbp ; call qword ptr [rax]
0x0000000000108ebd : mov rdi, rbp ; call qword ptr [rbx]
0x00000000000bbaf4 : mov rdi, rbp ; call r12
0x0000000000106b4c : mov rdi, rbp ; call r14
0x0000000000106d8d : mov rdi, rbp ; call rax
0x0000000000096ec8 : mov rdi, rbp ; call rbx
0x0000000000114984 : mov rdi, rbp ; call rcx
0x0000000000108aa7 : mov rdi, rbp ; call rdx
0x00000000000d73c0 : mov rdi, rbp ; mov eax, 0x4f ; syscall
0x000000000002b421 : mov rdi, rbp ; mov eax, 3 ; syscall
0x000000000010c3cd : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x000000000010c1ba : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000011317a : mov rdi, rbp ; xor ebp, ebp ; call 0x1f477
0x00000000000831b8 : mov rdi, rbx ; call 0x1f475
0x00000000000801a2 : mov rdi, rbx ; call 0x7c425
0x000000000011942d : mov rdi, rbx ; call 0x856e5
0x000000000010747c : mov rdi, rbx ; call qword ptr [rax]
0x00000000001053b0 : mov rdi, rbx ; call r10
0x000000000002b312 : mov rdi, rbx ; call r12
0x00000000000eb21e : mov rdi, rbx ; call r14
0x00000000000233dc : mov rdi, rbx ; call r15
0x000000000004e9de : mov rdi, rbx ; call rax
0x00000000000f0f64 : mov rdi, rbx ; mov eax, 0xe6 ; syscall
0x0000000000034976 : mov rdi, rbx ; mov eax, 3 ; syscall
0x000000000011bd62 : mov rdi, rbx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000108102 : mov rdi, rbx ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x00000000000b31c0 : mov rdi, rdx ; mov eax, r8d ; syscall
0x00000000000b31d1 : mov rdi, rdx ; mov eax, r9d ; syscall
0x00000000000d5e00 : mov rdi, rdx ; syscall
0x0000000000106669 : mov rdi, rsp ; call rax
0x00000000001138f4 : mov rdi, rsp ; call rdx
0x00000000000f0b09 : mov rdx, qword ptr [r9] ; test rdx, rdx ; jne 0xf0b09 ; leave ; ret
0x0000000000075fe8 : mov rdx, qword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000b300c : mov rdx, qword ptr [rax + 0x18] ; test rdx, rdx ; je 0xb3028 ; call rdx
0x0000000000021dbb : mov rdx, qword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000007c393 : mov rdx, qword ptr [rax] ; test rdx, rdx ; je 0x7c3a9 ; call rdx
0x000000000011d898 : mov rdx, qword ptr [rdi + 0x20] ; test rdx, rdx ; je 0x11d8b5 ; call rdx
0x000000000011d757 : mov rdx, qword ptr [rdx + rbp*8] ; test rdx, rdx ; je 0x11d76f ; call rdx
0x00000000000afa9c : mov rdx, qword ptr [rsp + 0x28] ; call rax
0x000000000008021b : mov rdx, qword ptr [rsp + 0x48] ; call rax
0x000000000011c7c4 : mov rdx, r12 ; add r9, r11 ; call rax
0x00000000000ef3d7 : mov rdx, r12 ; call rax
0x00000000000ef753 : mov rdx, r13 ; call rax
0x0000000000096ec5 : mov rdx, r13 ; mov rdi, rbp ; call rbx
0x0000000000110ff3 : mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000207c2 : mov rdx, r13 ; sub rdx, rbx ; inc rdx ; jmp 0x207d9
0x0000000000109ec8 : mov rdx, r14 ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x00000000000827b0 : mov rdx, r15 ; call rax
0x0000000000047359 : mov rdx, r8 ; jmp 0x47373
0x00000000000be809 : mov rdx, r8 ; jmp 0xbe818
0x00000000000e45a3 : mov rdx, rax ; call 0xf0825
0x000000000011c3d1 : mov rdx, rax ; jmp 0x11c3c5
0x000000000011c443 : mov rdx, rax ; jmp 0x11c42e
0x000000000004a37b : mov rdx, rax ; jmp 0x4a3b3
0x000000000004a4f3 : mov rdx, rax ; jmp 0x4a515
0x00000000000b6a20 : mov rdx, rax ; jmp 0xb6a40
0x00000000000d9573 : mov rdx, rax ; jmp 0xd9537
0x00000000000df000 : mov rdx, rax ; jmp 0xdefd6
0x00000000001197b3 : mov rdx, rax ; mov rax, rdx ; pop rbx ; ret
0x0000000000022f54 : mov rdx, rbp ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x0000000000109db4 : mov rdx, rbp ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x00000000000ef7d3 : mov rdx, rbx ; call rax
0x0000000000082c9d : mov rdx, rbx ; mov rsi, r13 ; call rax
0x0000000000082eb9 : mov rdx, rbx ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x0000000000082c17 : mov rdx, rcx ; jmp 0x82be2
0x00000000000d6564 : mov rdx, rcx ; mov eax, 0x106 ; syscall
0x00000000000b6a19 : mov rsi, qword ptr [rbp - 0x1c0] ; mov rdx, rax ; jmp 0xb6a47
0x00000000000af764 : mov rsi, qword ptr [rbp - 0x58] ; mov rdi, qword ptr [rbp - 0x68] ; call r14
0x000000000002289b : mov rsi, qword ptr [rdx + rbx + 0x20] ; call rax
0x0000000000062925 : mov rsi, qword ptr [rip + 0x306634] ; call rax
0x0000000000059735 : mov rsi, qword ptr [rip + 0x30f824] ; call rax
0x0000000000057eb2 : mov rsi, qword ptr [rip + 0x3110a7] ; call rax
0x000000000005285e : mov rsi, qword ptr [rip + 0x3166fb] ; call rax
0x000000000004cf3a : mov rsi, qword ptr [rip + 0x31c01f] ; call rax
0x0000000000047c06 : mov rsi, qword ptr [rip + 0x321353] ; call rax
0x000000000004543d : mov rsi, qword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x0000000000106b47 : mov rsi, qword ptr [rsp + 0x10] ; mov rdi, rbp ; call r14
0x000000000007f8c4 : mov rsi, qword ptr [rsp + 0x18] ; call rax
0x0000000000022f57 : mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x000000000008053e : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, r12 ; call rax
0x000000000007ff61 : mov rsi, qword ptr [rsp + 8] ; call rax
0x00000000000f9868 : mov rsi, qword ptr [rsp] ; mov rdi, r12 ; call rax
0x00000000001183af : mov rsi, r12 ; mov edi, ebx ; call 0xe4647
0x0000000000076273 : mov rsi, r12 ; mov rdi, r13 ; mov eax, r9d ; syscall
0x0000000000114146 : mov rsi, r12 ; mov rdi, r14 ; xor eax, eax ; call rcx
0x0000000000110ff6 : mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000000eb21b : mov rsi, r12 ; mov rdi, rbx ; call r14
0x0000000000082671 : mov rsi, r12 ; mov rdi, rbx ; call rax
0x0000000000082ca0 : mov rsi, r13 ; call rax
0x0000000000096882 : mov rsi, r13 ; lea rcx, [rax + 4] ; call rbx
0x0000000000082ebc : mov rsi, r13 ; mov rdi, r12 ; call rax
0x00000000000e53f1 : mov rsi, r13 ; mov rdi, r9 ; mov eax, ebx ; syscall
0x00000000000cc40d : mov rsi, r15 ; mov eax, 0xcc ; syscall
0x0000000000036d8a : mov rsi, r8 ; mov eax, ecx ; syscall
0x000000000006df8b : mov rsi, r9 ; mov eax, r8d ; syscall
0x0000000000036067 : mov rsi, rax ; mov eax, ecx ; syscall
0x0000000000106a71 : mov rsi, rbp ; add rdi, 0x18 ; xor eax, eax ; call rbx
0x00000000000375f2 : mov rsi, rbp ; call r12
0x0000000000108c8e : mov rsi, rbp ; call rbx
0x00000000000830cc : mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000011a843 : mov rsi, rbx ; call 0xd6a72
0x0000000000110689 : mov rsi, rbx ; call qword ptr [rax]
0x00000000000e1b5d : mov rsi, rbx ; mov rdi, r13 ; call r14
0x0000000000082da3 : mov rsi, rbx ; mov rdi, r13 ; call rdx
0x0000000000111c94 : mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x00000000000bbaf1 : mov rsi, rbx ; mov rdi, rbp ; call r12
0x0000000000114981 : mov rsi, rbx ; mov rdi, rbp ; call rcx
0x00000000000b2889 : mov rsi, rdi ; mov eax, ecx ; syscall
0x00000000001053ab : mov rsi, rdi ; xor edx, edx ; mov rdi, rbx ; call r10
0x000000000010cad1 : mov rsi, rdx ; add rdi, 0x10 ; call rcx
0x00000000000eeef7 : mov rsi, rdx ; call rax
0x00000000000d63af : mov rsi, rdx ; mov eax, 4 ; syscall
0x00000000000d63fe : mov rsi, rdx ; mov eax, 5 ; syscall
0x00000000000d644f : mov rsi, rdx ; mov eax, 6 ; syscall
0x0000000000113b8c : mov rsi, rsp ; call qword ptr [rax]
0x0000000000109334 : mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000035d8c : mov rsp, r8 ; mov rbp, r9 ; jmp rdx
0x000000000014e85c : mov sil, 0 ; add byte ptr [rax - 0x70], dh ; hlt ; jmp qword ptr [rbx]
0x00000000000dbde7 : mov word ptr [r8 + 0x21], si ; ret
0x00000000001572a4 : mov word ptr [rax + 1], es ; add byte ptr [rax - 0x16], ch ; clc ; call qword ptr [rdi]
0x00000000000449af : mov word ptr [rax + rax], es ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x00000000000892a1 : mov word ptr [rax + rdx - 2], cx ; ret
0x00000000000c16cb : mov word ptr [rax - 0x7b], cs ; rol byte ptr [rcx + 0xf], 0x95 ; ret
0x00000000000e4a76 : mov word ptr [rax - 0x7d], cs ; ret
0x000000000013e7a5 : mov word ptr [rax], es ; add ah, ah ; imul bh ; jmp rsp
0x000000000014becd : mov word ptr [rax], es ; add byte ptr [rax + 5], dl ; jmp qword ptr [rcx]
0x000000000012fc48 : mov word ptr [rbx - 0x6473000e], ds ; call qword ptr [rdx]
0x00000000000c4026 : mov word ptr [rcx + rsi*2], fs ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret 0x4e0f
0x000000000014129d : mov word ptr [rcx], es ; add ah, al ; pop rsi ; cli ; call rsp
0x0000000000007ad8 : mov word ptr [rcx], es ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x58
0x000000000015beb5 : mov word ptr [rcx], es ; add byte ptr [rax], bh ; pop rsp ; cli ; jmp qword ptr [rsi]
0x0000000000039fe3 : mov word ptr [rdi + 2], dx ; ret
0x00000000000936d6 : mov word ptr [rdi + 4], dx ; lea rax, [rdi + 5] ; ret
0x0000000000093626 : mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
0x0000000000117631 : mov word ptr [rdi], cs ; xchg eax, esp ; ret 0xea83
0x0000000000093694 : mov word ptr [rdi], si ; lea rax, [rdi + 1] ; ret
0x00000000000935e4 : mov word ptr [rdi], si ; mov rax, rdi ; ret
0x00000000000d57f8 : mov word ptr [rdi], si ; xor al, al ; ret
0x00000000000e5cf6 : mov word ptr [rdx], ax ; ret
0x000000000014d452 : mov word ptr [rip + 0x3068345], es ; mov byte ptr [rcx], al ; ret
0x00000000000dacc9 : mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x0000000000039f43 : mov word ptr [rsi + 0xc], ax ; xor eax, eax ; ret
0x0000000000039f8a : mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x00000000000d57d7 : mov word ptr [rsi], ax ; xor eax, eax ; ret
0x0000000000142d0c : mov word ptr [rsi], gs ; add al, byte ptr [rax] ; mov ah, 0x9d ; std ; call rsp
0x0000000000035c28 : mov word ptr [rsp - 2], di ; fldcw word ptr [rsp - 2] ; ret
0x0000000000158ed2 : movabs al, byte ptr [0x41200e0a01120320] ; ret
0x00000000001094dc : movabs al, byte ptr [0x8948cc401f0ffffd] ; ret 0xffb8
0x0000000000080217 : movabs byte ptr [0x4824548b48fffffe], al ; call rax
0x00000000000b1bb1 : movabs byte ptr [0xdff26eb0a75002b], al ; ret 0x2ba2
0x00000000000bd06b : movabs dword ptr [0x5bffffff57820fca], eax ; ret
0x0000000000021018 : movabs dword ptr [0x8348c5ff411972c1], eax ; ret
0x00000000000025bb : movabs dword ptr [0xf19a27a8585af87c], eax ; ret
0x0000000000000857 : movabs eax, dword ptr [0x10c0449000e] ; ret 0x440c
0x000000000002204b : movabs eax, dword ptr [0x274c08548003488] ; call rax
0x0000000000103f0b : movabs eax, dword ptr [0x5bcc401f0fffffe6] ; ret
0x000000000007520c : movabs eax, dword ptr [0x8948cc401f0ffffa] ; ret 0x8949
0x00000000000353da : movapd xmm0, xmm1 ; ret
0x0000000000035558 : movaps xmm0, xmm1 ; jne 0x35571 ; add rsp, 8 ; ret
0x0000000000035843 : movaps xmm0, xmm1 ; jne 0x35859 ; add rsp, 8 ; ret
0x00000000000353db : movaps xmm0, xmm1 ; ret
0x00000000000354ea : movd mm0, eax ; mov dword ptr [rdi], edx ; ret
0x00000000000352fa : movd mm0, eax ; ret
0x00000000000354e9 : movd mm0, rax ; mov dword ptr [rdi], edx ; ret
0x00000000000352f9 : movd mm0, rax ; ret
0x0000000000035726 : movd mm1, eax ; movaps xmm0, xmm1 ; ret
0x000000000003535f : movd mm1, eax ; movsd qword ptr [rdi], xmm1 ; ret
0x00000000000356b6 : movd mm1, eax ; movss dword ptr [rdi], xmm1 ; ret
0x00000000000353d7 : movd mm1, edi ; movapd xmm0, xmm1 ; ret
0x000000000003535e : movd mm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x00000000000353d6 : movd mm1, rdi ; movapd xmm0, xmm1 ; ret
0x0000000000035814 : movd xmm0, eax ; mov dword ptr [rdi], edx ; ret
0x0000000000035690 : movd xmm0, eax ; ret
0x0000000000035725 : movd xmm1, eax ; movaps xmm0, xmm1 ; ret
0x00000000000356b5 : movd xmm1, eax ; movss dword ptr [rdi], xmm1 ; ret
0x0000000000089206 : movdqu xmmword ptr [rdi + rdx - 0x20], xmm8 ; ret
0x00000000000741dc : movnti dword ptr [rsi - 0x70], esp ; ret
0x000000000007a6d8 : movntps xmmword ptr [rax + 0x18], xmm2 ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x00000000000891f7 : movq qword ptr [rdi + rdx - 0x10], mm0 ; ja 0x89208 ; ret
0x00000000000891f6 : movq qword ptr [rdi + rdx - 0x10], mm0 ; ja 0x89209 ; ret
0x0000000000089208 : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x00000000000354e8 : movq xmm0, rax ; mov dword ptr [rdi], edx ; ret
0x00000000000352f8 : movq xmm0, rax ; ret
0x000000000003535d : movq xmm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x00000000000353d5 : movq xmm1, rdi ; movapd xmm0, xmm1 ; ret
0x00000000001544bc : movsb byte ptr [rdi], byte ptr [rsi] ; adc al, byte ptr [rcx] ; add al, al ; mov edi, esp ; jmp qword ptr [rsi]
0x00000000001431b8 : movsb byte ptr [rdi], byte ptr [rsi] ; add al, 0xfe ; jmp rsp
0x000000000014d68d : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; and al, 0xf4 ; jmp qword ptr [rdi]
0x000000000013eb3d : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; je 0x13eb09 ; jmp rsp
0x00000000000ddfe0 : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x0000000000155919 : movsb byte ptr [rdi], byte ptr [rsi] ; clc ; jmp qword ptr [rcx]
0x00000000001423c4 : movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; add dword ptr [rax], eax ; adc al, 0x99 ; cld ; jmp rsp
0x0000000000140354 : movsb byte ptr [rdi], byte ptr [rsi] ; cmp al, byte ptr [rcx] ; add byte ptr [rdi + rbx*8 - 9], dl ; call rsp
0x000000000013e024 : movsb byte ptr [rdi], byte ptr [rsi] ; imul eax, dword ptr [rax], 0xef0e8400 ; call rsp
0x000000000012d342 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000013e308 : movsb byte ptr [rdi], byte ptr [rsi] ; jl 0x13e2fd ; jmp rsp
0x000000000012e59d : movsb byte ptr [rdi], byte ptr [rsi] ; jns 0x12e5f6 ; jmp 0x12e537
0x000000000014212c : movsb byte ptr [rdi], byte ptr [rsi] ; loopne 0x142137 ; add byte ptr [rdx + rdi - 4], al ; call rsp
0x000000000014e8bc : movsb byte ptr [rdi], byte ptr [rsi] ; mov dh, 0 ; add al, dl ; nop ; hlt ; jmp qword ptr [rbx]
0x00000000000e2bb7 : movsb byte ptr [rdi], byte ptr [rsi] ; mov eax, 3 ; syscall
0x000000000015f0bc : movsb byte ptr [rdi], byte ptr [rsi] ; mov esi, 0x1c500001 ; sti ; jmp qword ptr [rax]
0x000000000013e540 : movsb byte ptr [rdi], byte ptr [rsi] ; movsb byte ptr [rdi], byte ptr [rsi] ; out dx, eax ; jmp rsp
0x0000000000142d30 : movsb byte ptr [rdi], byte ptr [rsi] ; movsb byte ptr [rdi], byte ptr [rsi] ; std ; call rsp
0x000000000013e541 : movsb byte ptr [rdi], byte ptr [rsi] ; out dx, eax ; jmp rsp
0x0000000000140764 : movsb byte ptr [rdi], byte ptr [rsi] ; pop rax ; add dword ptr [rax], eax ; push rsp ; stc ; jmp rsp
0x00000000001485bc : movsb byte ptr [rdi], byte ptr [rsi] ; push rbx ; add byte ptr [rax], al ; jo 0x148601 ; jmp qword ptr [rsi]
0x0000000000140744 : movsb byte ptr [rdi], byte ptr [rsi] ; push rdi ; add dword ptr [rax], eax ; test byte ptr [rax - 7], al ; jmp rsp
0x0000000000102af3 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000014f4bc : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0
0x000000000015f4bc : movsb byte ptr [rdi], byte ptr [rsi] ; ret 1
0x00000000001605bc : movsb byte ptr [rdi], byte ptr [rsi] ; rol dword ptr [rcx], cl ; add byte ptr [rax + 0x46], dl ; sti ; call rdx
0x0000000000131f28 : movsb byte ptr [rdi], byte ptr [rsi] ; stc ; jmp qword ptr [rax]
0x0000000000142d31 : movsb byte ptr [rdi], byte ptr [rsi] ; std ; call rsp
0x00000000001420a8 : movsb byte ptr [rdi], byte ptr [rsi] ; sub ah, bh ; call rsp
0x00000000001414e4 : movsb byte ptr [rdi], byte ptr [rsi] ; xchg eax, esp ; add dword ptr [rax], eax ; xor al, 0x7b ; cli ; jmp rsp
0x0000000000141548 : movsb byte ptr [rdi], byte ptr [rsi] ; xchg edx, edi ; call rsp
0x000000000012ffe4 : movsb byte ptr [rdi], byte ptr [rsi] ; xor bl, dh ; inc dword ptr [rsi + 0x23] ; jmp qword ptr [rdi]
0x0000000000141a30 : movsb byte ptr [rdi], byte ptr [rsi] ; xor edi, ebx ; jmp rsp
0x0000000000142118 : movsb byte ptr [rdi], byte ptr [rsi] ; xor edi, esp ; call rsp
0x000000000013eb5d : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; ret 0xfff2
0x000000000013eb65 : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; xchg eax, esp ; ret 0xfff2
0x000000000007f051 : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr cs:[rbp + 0xa], dh ; jmp 0x7f087
0x0000000000155981 : movsd dword ptr [rdi], dword ptr [rsi] ; clc ; call qword ptr [rsi]
0x000000000015d3b9 : movsd dword ptr [rdi], dword ptr [rsi] ; cli ; call qword ptr [rsi]
0x000000000012ebd5 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000012e491 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x0000000000144881 : movsd dword ptr [rdi], dword ptr [rsi] ; out dx, al ; call qword ptr [rbx]
0x00000000001448b1 : movsd dword ptr [rdi], dword ptr [rsi] ; out dx, al ; call qword ptr [rdi]
0x0000000000144899 : movsd dword ptr [rdi], dword ptr [rsi] ; out dx, al ; call qword ptr [rsi]
0x0000000000144821 : movsd dword ptr [rdi], dword ptr [rsi] ; out dx, al ; jmp qword ptr [rcx]
0x00000000000ed702 : movsd dword ptr [rdi], dword ptr [rsi] ; push -0x76000001 ; ret 0x8948
0x0000000000045d72 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000000ae697 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x2b
0x00000000001618d9 : movsd dword ptr [rdi], dword ptr [rsi] ; sti ; jmp rdx
0x000000000002e7f4 : movsd dword ptr [rdi], dword ptr [rsi] ; xor eax, dword ptr [rax] ; mov qword ptr [rax], rdx ; ret
0x0000000000035362 : movsd qword ptr [rdi], xmm1 ; ret
0x000000000003532b : movsd qword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x00000000000a2bec : movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x0000000000047277 : movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000013eb64 : movsq qword ptr [rdi], qword ptr [rsi] ; add byte ptr [rax], al ; xchg eax, esp ; ret 0xfff2
0x0000000000144838 : movsq qword ptr [rdi], qword ptr [rsi] ; out dx, al ; jmp qword ptr [rcx]
0x00000000000356b9 : movss dword ptr [rdi], xmm1 ; ret
0x00000000000356a0 : movss dword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x0000000000047231 : movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000000eb025 : movsx eax, ch ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000eb2fa : movsx ecx, byte ptr [rdx] ; test cl, cl ; jne 0xeb2f0 ; ret
0x0000000000093804 : movsx edx, byte ptr [rdi + rax] ; cmp edx, ecx ; je 0x93809 ; ret
0x0000000000093728 : movsx edx, byte ptr [rdi + rax] ; test dl, dl ; jne 0x93729 ; ret
0x0000000000085392 : movsx edx, dh ; mov eax, edx ; ret
0x0000000000085391 : movsx edx, sil ; mov eax, edx ; ret
0x00000000000eb2f9 : movsx rcx, byte ptr [rdx] ; test cl, cl ; jne 0xeb2f1 ; ret
0x00000000000b2b03 : movsxd r10, ecx ; syscall
0x00000000000c91c3 : movsxd r11, dword ptr [r9 + r11*4] ; add r11, r9 ; jmp r11
0x000000000008eb22 : movsxd r8, dword ptr [rax + r8*4] ; add rax, r8 ; jmp rax
0x000000000002cedc : movsxd r8, dword ptr [rdx + r8*4] ; add r8, rdx ; jmp r8
0x0000000000083d21 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, [r10 + r9] ; jmp r10
0x00000000000935b4 : movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x00000000000934ac : movsxd rax, dword ptr [r10 + rax*4] ; add r10, rax ; jmp r10
0x0000000000080ad9 : movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0x000000000006b680 : movsxd rax, dword ptr [r8 + rax*4] ; add rax, r8 ; jmp rax
0x000000000006b681 : movsxd rax, dword ptr [rax + rax*4] ; add rax, r8 ; jmp rax
0x000000000004bc29 : movsxd rax, dword ptr [rax + rdx*4] ; add rax, r12 ; jmp rax
0x0000000000052b91 : movsxd rax, dword ptr [rax + rdx*4] ; add rax, r13 ; jmp rax
0x00000000000e3f55 : movsxd rax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000bd224 : movsxd rax, dword ptr [rax] ; jne 0xbd235 ; pop rbx ; ret
0x0000000000080ada : movsxd rax, dword ptr [rbp + rax*4] ; add rax, r13 ; jmp rax
0x000000000003402a : movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0x000000000006af2b : movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x0000000000058323 : movsxd rax, dword ptr [rcx + rax*4] ; add rcx, rax ; jmp rcx
0x0000000000095ec9 : movsxd rax, dword ptr [rcx] ; add byte ptr [rax], al ; lea rax, [rdi - 0x10] ; ret
0x00000000000a9dd4 : movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000010e75b : movsxd rax, dword ptr [rdi + rax*4] ; add rdi, rax ; jmp rdi
0x000000000002f684 : movsxd rax, dword ptr [rdx + r12*4] ; add rdx, rax ; jmp rdx
0x00000000000934ad : movsxd rax, dword ptr [rdx + rax*4] ; add r10, rax ; jmp r10
0x000000000002cedd : movsxd rax, dword ptr [rdx + rax*4] ; add r8, rdx ; jmp r8
0x0000000000022477 : movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000002f685 : movsxd rax, dword ptr [rdx] ; add rdx, rax ; jmp rdx
0x00000000000abe15 : movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x000000000006afe3 : movsxd rax, dword ptr [rsi + rax*4] ; add rsi, rax ; jmp rsi
0x000000000006b828 : movsxd rax, dword ptr [rsi + rcx*4] ; add rsi, rax ; jmp rsi
0x00000000000945ac : movsxd rax, dword ptr [rsi + rdi*4] ; add rsi, rax ; jmp rsi
0x000000000003970b : movsxd rax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x00000000000c5b19 : movsxd rax, dword ptr [rsp + rdi*2] ; ret
0x00000000000c91c4 : movsxd rbx, dword ptr [rcx + rbx*4] ; add r11, r9 ; jmp r11
0x00000000000c5e56 : movsxd rcx, dword ptr [rax + r13*4] ; add rax, rcx ; jmp rax
0x00000000000c5e57 : movsxd rcx, dword ptr [rax + rbp*4] ; add rax, rcx ; jmp rax
0x00000000000935b5 : movsxd rcx, dword ptr [rax + rcx*4] ; add rax, r9 ; jmp rax
0x000000000006b74e : movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x000000000010f55b : movsxd rcx, dword ptr [rax + rsi*4] ; add rax, rcx ; jmp rax
0x0000000000109a88 : movsxd rcx, dword ptr [rax - 0x77] ; ret
0x0000000000017ad2 : movsxd rcx, dword ptr [rcx] ; add byte ptr [rax], al ; sbb byte ptr [rax], al ; ret 0x58
0x00000000000bc213 : movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x0000000000083d22 : movsxd rcx, dword ptr [rdx + rcx*4] ; lea r10, [r10 + r9] ; jmp r10
0x00000000000e2bb5 : movsxd rdi, dword ptr [rbp - 0x5c] ; mov eax, 3 ; syscall
0x00000000000fed95 : movsxd rdi, dword ptr [rdi] ; mov eax, 3 ; syscall
0x00000000000dce37 : movsxd rdi, dword ptr [rsp + 0x14] ; syscall
0x00000000000d69b6 : movsxd rdi, dword ptr [rsp + 0x18] ; mov eax, 0x101 ; syscall
0x00000000000e4518 : movsxd rdi, dword ptr [rsp + 0x18] ; mov eax, ebx ; movsxd r10, ecx ; syscall
0x00000000000e4cdc : movsxd rdi, dword ptr [rsp + 0xc] ; mov eax, ebx ; movsxd r10, ecx ; syscall
0x00000000000dbed3 : movsxd rdi, dword ptr [rsp + 0xc] ; mov eax, ecx ; syscall
0x00000000000e4c28 : movsxd rdi, dword ptr [rsp + 4] ; movsxd r10, ecx ; syscall
0x00000000000dc6cd : movsxd rdi, dword ptr [rsp + 8] ; mov eax, 0x13 ; syscall
0x00000000000dc76d : movsxd rdi, dword ptr [rsp + 8] ; mov eax, 0x14 ; syscall
0x00000000000dbab0 : movsxd rdi, dword ptr [rsp + 8] ; mov eax, ebx ; syscall
0x00000000000b29eb : movsxd rdi, dword ptr [rsp + 8] ; syscall
0x00000000000dc819 : movsxd rdi, dword ptr [rsp] ; mov eax, 0x127 ; syscall
0x00000000000dc8c9 : movsxd rdi, dword ptr [rsp] ; mov eax, 0x128 ; syscall
0x000000000011d254 : movsxd rdi, eax ; mov eax, 0x3e ; syscall
0x000000000011801c : movsxd rdi, eax ; mov eax, 3 ; syscall
0x00000000000f0e0b : movsxd rdi, eax ; syscall
0x00000000000cc33e : movsxd rdi, ebp ; mov eax, 0xcb ; syscall
0x000000000001fec3 : movsxd rdi, ebp ; mov eax, 3 ; syscall
0x00000000000d8e23 : movsxd rdi, ebx ; mov al, 3 ; syscall
0x00000000000fe59c : movsxd rdi, ebx ; mov eax, 3 ; syscall
0x00000000000dd0bc : movsxd rdi, ebx ; mov edx, eax ; mov eax, 3 ; syscall
0x0000000000042932 : movsxd rdi, ebx ; syscall
0x0000000000158879 : movsxd rdi, ecx ; jmp qword ptr [rax]
0x00000000000d650c : movsxd rdi, ecx ; mov eax, 0x103 ; syscall
0x0000000000035ec4 : movsxd rdi, ecx ; mov eax, 0xea ; syscall
0x000000000007cc30 : movsxd rdi, ecx ; mov eax, 3 ; syscall
0x00000000000cc28c : movsxd rdi, edi ; cmovbe rsi, r9 ; mov eax, ecx ; syscall
0x00000000000e2d51 : movsxd rdi, edi ; mov al, 3 ; syscall
0x0000000000113427 : movsxd rdi, edi ; mov byte ptr [rdx + rdi], 0 ; ret
0x00000000000dbe8b : movsxd rdi, edi ; mov eax, 0x10 ; syscall
0x00000000000d68eb : movsxd rdi, edi ; mov eax, 0x101 ; syscall
0x00000000000d67e7 : movsxd rdi, edi ; mov eax, 0x102 ; syscall
0x00000000000d7c1d : movsxd rdi, edi ; mov eax, 0x104 ; syscall
0x00000000000de6fa : movsxd rdi, edi ; mov eax, 0x105 ; syscall
0x00000000000d83c8 : movsxd rdi, edi ; mov eax, 0x107 ; syscall
0x0000000000069f4b : movsxd rdi, edi ; mov eax, 0x108 ; syscall
0x00000000000d829e : movsxd rdi, edi ; mov eax, 0x109 ; syscall
0x00000000000d8368 : movsxd rdi, edi ; mov eax, 0x10b ; syscall
0x00000000000d6754 : movsxd rdi, edi ; mov eax, 0x10c ; syscall
0x00000000000d6cd9 : movsxd rdi, edi ; mov eax, 0x10d ; syscall
0x00000000000dcdd6 : movsxd rdi, edi ; mov eax, 0x10e ; syscall
0x00000000000db24d : movsxd rdi, edi ; mov eax, 0x118 ; syscall
0x00000000000e379b : movsxd rdi, edi ; mov eax, 0x119 ; syscall
0x00000000000dba55 : movsxd rdi, edi ; mov eax, 0x11d ; syscall
0x00000000000e4b12 : movsxd rdi, edi ; mov eax, 0x120 ; syscall
0x00000000000e3888 : movsxd rdi, edi ; mov eax, 0x122 ; syscall
0x00000000000dc7c5 : movsxd rdi, edi ; mov eax, 0x127 ; syscall
0x00000000000dc875 : movsxd rdi, edi ; mov eax, 0x128 ; syscall
0x00000000000e4bc4 : movsxd rdi, edi ; mov eax, 0x12b ; syscall
0x00000000000dc682 : movsxd rdi, edi ; mov eax, 0x13 ; syscall
0x00000000000e4c84 : movsxd rdi, edi ; mov eax, 0x133 ; syscall
0x00000000000dc722 : movsxd rdi, edi ; mov eax, 0x14 ; syscall
0x00000000000e4658 : movsxd rdi, edi ; mov eax, 0x2c ; syscall
0x00000000000e44b8 : movsxd rdi, edi ; mov eax, 0x2d ; syscall
0x00000000000b2997 : movsxd rdi, edi ; mov eax, 0x3d ; syscall
0x00000000000d6e8d : movsxd rdi, edi ; mov eax, 0x48 ; syscall
0x00000000000dafd8 : movsxd rdi, edi ; mov eax, 0xdd ; syscall
0x00000000000361bb : movsxd rdi, edi ; mov eax, 0xe ; syscall
0x00000000000f0ee9 : movsxd rdi, edi ; mov eax, 0xe3 ; syscall
0x00000000000f0e45 : movsxd rdi, edi ; mov eax, 0xe5 ; syscall
0x000000000002d875 : movsxd rdi, edi ; mov eax, 3 ; syscall
0x000000000002ef59 : movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000000dbd67 : movsxd rdi, edi ; mov eax, ecx ; syscall
0x000000000002edd9 : movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x00000000000f2dda : movsxd rdi, edi ; xor eax, eax ; syscall
0x0000000000141351 : movsxd rdi, edx ; jmp rsp
0x0000000000117c38 : movsxd rdi, edx ; mov eax, 3 ; syscall
0x0000000000101172 : movsxd rdi, esi ; mov eax, 3 ; syscall
0x0000000000142219 : movsxd rdi, esp ; call rsp
0x0000000000036fc7 : movsxd rdi, esp ; mov eax, 0x81 ; syscall
0x000000000002d2f2 : movsxd rdi, esp ; mov eax, 3 ; syscall
0x0000000000117c37 : movsxd rdi, r10d ; mov eax, 3 ; syscall
0x0000000000036fc6 : movsxd rdi, r12d ; mov eax, 0x81 ; syscall
0x000000000002d2f1 : movsxd rdi, r12d ; mov eax, 3 ; syscall
0x00000000000cc33d : movsxd rdi, r13d ; mov eax, 0xcb ; syscall
0x000000000001fec2 : movsxd rdi, r13d ; mov eax, 3 ; syscall
0x0000000000101171 : movsxd rdi, r14d ; mov eax, 3 ; syscall
0x00000000000e2d50 : movsxd rdi, r15d ; mov al, 3 ; syscall
0x000000000002d874 : movsxd rdi, r15d ; mov eax, 3 ; syscall
0x00000000000f0e0a : movsxd rdi, r8d ; syscall
0x00000000000d650b : movsxd rdi, r9d ; mov eax, 0x103 ; syscall
0x00000000000615e9 : movsxd rdx, dword ptr [rax + r12*4] ; add rax, rdx ; jmp rax
0x00000000000584eb : movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x0000000000080744 : movsxd rdx, dword ptr [rax + rdi*4] ; add rax, rdx ; jmp rax
0x00000000000a798b : movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x00000000000b4954 : movsxd rdx, dword ptr [rax + rsi*4] ; add rax, rdx ; jmp rax
0x00000000000615ea : movsxd rdx, dword ptr [rax] ; add rax, rdx ; jmp rax
0x00000000000bbc84 : movsxd rdx, dword ptr [rbx + 4] ; jmp 0xbbc4f
0x00000000000bbc83 : movsxd rdx, dword ptr [rbx + 4] ; jmp 0xbbc50
0x00000000000a6c30 : movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x0000000000033df6 : movsxd rdx, dword ptr [rdi + rsi*4] ; add rdx, rdi ; jmp rdx
0x00000000000a1ad9 : movsxd rdx, dword ptr [rdx + 0x2c] ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000e3061 : movsxd rdx, eax ; mov eax, 3 ; syscall
0x00000000000e3804 : movsxd rdx, ecx ; mov ecx, 0x119 ; mov eax, ecx ; syscall
0x00000000000b2b04 : movsxd rdx, ecx ; syscall
0x00000000000e52c2 : movsxd rdx, edx ; mov eax, 0x14 ; syscall
0x00000000000d613a : movsxd rdx, edx ; mov eax, 0x1c ; syscall
0x000000000010ebfb : movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x000000000009469c : movsxd rsi, dword ptr [rcx + rax*4] ; add rcx, rsi ; jmp rcx
0x000000000009465c : movsxd rsi, dword ptr [rdx + rax*4] ; add rdx, rsi ; jmp rdx
0x0000000000104058 : movsxd rsi, ebp ; mov eax, 0x81 ; syscall
0x000000000013efc1 : movsxd rsi, ebx ; inc esp ; ret
0x0000000000100571 : movsxd rsi, esi ; mov byte ptr [rdi + rsi], 0 ; ret
0x00000000000d8305 : movsxd rsi, esi ; mov eax, 0x10a ; syscall
0x0000000000114bea : movsxd rsp, dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000039ba1 : movups xmm0, xmmword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000a2bed : movups xmm0, xmmword ptr [rsp - 0x10] ; ret
0x0000000000047232 : movups xmm0, xmmword ptr [rsp - 4] ; ret
0x0000000000047278 : movups xmm0, xmmword ptr [rsp - 8] ; ret
0x0000000000035363 : movups xmmword ptr [rdi], xmm1 ; ret
0x000000000003532c : movups xmmword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x00000000000356a1 : movups xmmword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x000000000010923b : movzx eax, al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000011432f : movzx eax, al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000108d7c : movzx eax, al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000113a3f : movzx eax, al ; add rsp, 8 ; ret
0x00000000000b4816 : movzx eax, al ; lea rax, [rax + rax - 1] ; ret
0x0000000000035cc4 : movzx eax, al ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x00000000000b9d01 : movzx eax, al ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000d84b0 : movzx eax, al ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000069f08 : movzx eax, al ; neg eax ; pop rbx ; ret
0x0000000000022600 : movzx eax, al ; neg eax ; ret
0x000000000010d76a : movzx eax, al ; pop r12 ; ret
0x0000000000109fb7 : movzx eax, al ; pop rbp ; ret
0x00000000000e0f40 : movzx eax, al ; pop rbx ; ret
0x000000000003689d : movzx eax, al ; ret
0x000000000002eb89 : movzx eax, ax ; ret
0x0000000000070291 : movzx eax, bh ; ret
0x0000000000078a92 : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000079e0a : movzx eax, byte ptr [rax - 1] ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000078915 : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000077ca2 : movzx eax, byte ptr [rax] ; pop rbx ; ret
0x00000000000767c6 : movzx eax, byte ptr [rax] ; ret
0x00000000000cfb20 : movzx eax, byte ptr [rdi + 9] ; and eax, 0xf ; ret
0x00000000000850b8 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x0000000000088c91 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x00000000000850d3 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000078920 : movzx eax, byte ptr [rdx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000078a93 : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000945db : movzx eax, cl ; pop rbx ; ret
0x0000000000070290 : movzx eax, dil ; ret
0x000000000009f632 : movzx eax, dl ; je 0x9f646 ; ret
0x000000000009460b : movzx eax, dl ; pop rbx ; ret
0x000000000002ed42 : movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x00000000000d57d4 : movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000000850d0 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x00000000000e4d36 : movzx edi, di ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000034537 : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x3451f ; ret
0x00000000000b583a : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0xb5820 ; xor eax, eax ; ret
0x000000000011bc01 : movzx edx, byte ptr [rsi + rcx] ; mov byte ptr [rax + rcx], dl ; ret
0x0000000000088c94 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000088cba : movzx edx, dl ; sub eax, edx ; ret
0x00000000000f4e73 : movzx esi, si ; or eax, esi ; bswap eax ; ret
0x00000000000d824c : movzx rax, al ; ret
0x0000000000087657 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000003add5 : mulps xmm0, xmm0 ; pop r15 ; ret
0x000000000003f91d : mulps xmm0, xmmword ptr [rip + 0xfe2dc] ; jmp 0x3f8f0
0x000000000003f91c : mulsd xmm0, qword ptr [rip + 0xfe2dc] ; jmp 0x3f8f1
0x000000000003d674 : mulsd xmm0, xmm0 ; pop r15 ; ret
0x000000000003add4 : mulss xmm0, xmm0 ; pop r15 ; ret
0x00000000000dd29d : neg eax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000011073b : neg eax ; add rsp, 0x18 ; ret
0x0000000000110acd : neg eax ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000db1db : neg eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000cc2d3 : neg eax ; mov dword ptr fs:[rax], r8d ; or eax, 0xffffffff ; ret
0x00000000000361fb : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000035ef9 : neg eax ; mov dword ptr fs:[rdx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000000e8121 : neg eax ; pop r13 ; ret
0x0000000000097c83 : neg eax ; pop r15 ; ret
0x00000000000d84b3 : neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000069f0b : neg eax ; pop rbx ; ret
0x0000000000022603 : neg eax ; ret
0x0000000000082975 : neg ebx ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x00000000000f0e20 : neg ecx ; cmp edx, -0x16 ; cmovne eax, ecx ; ret
0x00000000000d6ec1 : neg edx ; cmp dword ptr [rsp - 0x18], 2 ; cmove eax, edx ; ret
0x00000000000dbdf4 : neg edx ; mov dword ptr fs:[rax], edx ; or eax, 0xffffffff ; ret
0x0000000000097c82 : neg rax ; pop r15 ; ret
0x000000000002944a : nop ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000021f5b : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000082818 : nop ; add byte ptr cs:[rax - 0x77], cl ; ret 0x8949
0x00000000000767cc : nop ; add byte ptr cs:[rax], al ; nop dword ptr [rax - 0x34] ; pop rdx ; ret
0x000000000014bc08 : nop ; add dword ptr [rax + 0xe], edx ; adc byte ptr [rdx], al ; pop rbp ; ret
0x00000000000dcccd : nop ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001159bc : nop ; add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret 0x894c
0x000000000004bc2b : nop ; add rax, r12 ; jmp rax
0x0000000000052b93 : nop ; add rax, r13 ; jmp rax
0x00000000000a798d : nop ; add rax, rdx ; jmp rax
0x000000000011d58f : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000088b2f : nop ; bsf eax, eax ; lea rax, [rax + rdi - 0x10] ; ret
0x0000000000093d1f : nop ; bsr eax, eax ; add rax, rdi ; ret
0x0000000000093eaf : nop ; bsr eax, eax ; lea rax, [rax + rdi + 0x10] ; ret
0x0000000000155521 : nop ; clc ; jmp qword ptr [rsi]
0x000000000015b930 : nop ; cli ; jmp rdx
0x0000000000035b8f : nop ; fstp st(1) ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000035b3f : nop ; fstp st(1) ; ret
0x000000000014e801 : nop ; hlt ; jmp qword ptr [rbx]
0x000000000014e819 : nop ; hlt ; jmp qword ptr [rcx]
0x000000000015de70 : nop ; iretd ; cli ; jmp qword ptr [rbx]
0x0000000000149530 : nop ; jno 0x149528 ; call rdi
0x0000000000130720 : nop ; mov dl, 0xf3 ; jmp qword ptr [rax]
0x00000000000b461f : nop ; mov eax, 0xfffa ; ret
0x00000000000efe2b : nop ; mov eax, dword ptr [rbx - 0x30] ; mov dword ptr [rbp - 0x80], eax ; call r8
0x000000000009566f : nop ; mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0x956d9 ; ret
0x00000000000956bf : nop ; mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0x956d9 ; ret
0x00000000000718bf : nop ; mov eax, dword ptr [rdx] ; ret
0x00000000000fea2f : nop ; mov eax, r9d ; ret
0x000000000008ec1f : nop ; mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000004757f : nop ; mov rax, rsi ; ret
0x00000000000af34f : nop ; mov rdi, r15 ; call rbx
0x00000000000efb57 : nop ; mov rdx, r12 ; call rax
0x0000000000144940 : nop ; movsd dword ptr [rdi], dword ptr [rsi] ; out dx, al ; call qword ptr [rsi]
0x000000000007961f : nop ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000010c07f : nop ; nop dword ptr [rax - 0x45] ; xor eax, eax ; ret
0x00000000000f4ddf : nop ; nop dword ptr [rax - 0x56] ; mov eax, edi ; bswap eax ; ret
0x0000000000021abf : nop ; nop dword ptr [rax - 0x56] ; ret
0x000000000007b3ef : nop ; nop dword ptr [rax - 0x56] ; xor eax, eax ; ret
0x00000000000c025f : nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007874f : nop ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x000000000002172d : nop ; push rax ; or byte ptr [rax], al ; add bl, ch ; or byte ptr [rax - 1], cl ; ret 0x3941
0x00000000000741df : nop ; ret
0x0000000000002f3e : nop ; ret 0x5bdb
0x00000000000fbf34 : nop ; sbb byte ptr [rdi], ah ; add al, ch ; ret
0x000000000015b360 : nop ; sbb edi, edx ; jmp qword ptr [rdx]
0x0000000000142cf9 : nop ; std ; jmp rsp
0x000000000015f920 : nop ; sti ; call qword ptr [rsi]
0x000000000015f950 : nop ; sti ; jmp qword ptr [rbx]
0x0000000000141d81 : nop ; sti ; jmp rsp
0x00000000000f088f : nop ; sub rsp, 8 ; mov rdi, qword ptr [rdi + 8] ; call qword ptr [rax]
0x000000000003933f : nop ; xor eax, eax ; pop rbx ; ret
0x000000000006f7af : nop ; xor eax, eax ; ret
0x00000000000dcdef : nop ; xor r8d, r8d ; jmp 0xdcdbd
0x00000000000dcdee : nop ; xor r8d, r8d ; jmp 0xdcdbe
0x0000000000088baf : nop ; xor rax, rax ; ret
0x000000000011dd68 : nop dword ptr [rax + rax] ; call qword ptr [rbx]
0x0000000000096303 : nop dword ptr [rax + rax] ; lea rax, [rdi + 8] ; ret
0x00000000001023b3 : nop dword ptr [rax + rax] ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x000000000006eef3 : nop dword ptr [rax + rax] ; mov eax, edi ; ret
0x00000000000e96a8 : nop dword ptr [rax + rax] ; mov edx, eax ; jmp 0xe96a5
0x00000000000abd6b : nop dword ptr [rax + rax] ; mov r10d, r8d ; jmp 0xabd4b
0x00000000000445c3 : nop dword ptr [rax + rax] ; mov rax, rbx ; pop rbx ; ret
0x000000000003482b : nop dword ptr [rax + rax] ; mov rax, rcx ; ret
0x000000000008e3bb : nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x000000000007a95b : nop dword ptr [rax + rax] ; nop dword ptr [rax - 0x56] ; ret
0x00000000000445bb : nop dword ptr [rax + rax] ; pop rbx ; ret
0x000000000002dd18 : nop dword ptr [rax + rax] ; ret
0x00000000000bd033 : nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x00000000000457f3 : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000956db : nop dword ptr [rax + rax] ; xor rax, rax ; ret
0x00000000000431e9 : nop dword ptr [rax - 0x34] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000080dc5 : nop dword ptr [rax - 0x34] ; add rsp, 0x18 ; ret
0x00000000000d70a5 : nop dword ptr [rax - 0x34] ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000022096 : nop dword ptr [rax - 0x34] ; add rsp, 0x28 ; ret
0x000000000010666e : nop dword ptr [rax - 0x34] ; add rsp, 0x30 ; pop rbx ; ret
0x00000000000afebd : nop dword ptr [rax - 0x34] ; add rsp, 0x38 ; ret
0x00000000000a2bc3 : nop dword ptr [rax - 0x34] ; add rsp, 0x40 ; pop rbx ; ret
0x00000000000d6f2e : nop dword ptr [rax - 0x34] ; add rsp, 0x58 ; ret
0x00000000001119ef : nop dword ptr [rax - 0x34] ; add rsp, 0x68 ; ret
0x0000000000021ede : nop dword ptr [rax - 0x34] ; add rsp, 8 ; ret
0x00000000000af859 : nop dword ptr [rax - 0x34] ; call rbx
0x000000000010c9b0 : nop dword ptr [rax - 0x34] ; jmp 0x10c97e
0x000000000011d7cf : nop dword ptr [rax - 0x34] ; jmp 0x11d79d
0x00000000000854f4 : nop dword ptr [rax - 0x34] ; jmp 0x854c1
0x00000000000bfa01 : nop dword ptr [rax - 0x34] ; jmp 0xbf9ce
0x00000000000d7620 : nop dword ptr [rax - 0x34] ; jmp 0xd75ee
0x0000000000046ea2 : nop dword ptr [rax - 0x34] ; leave ; ret
0x00000000000363f3 : nop dword ptr [rax - 0x34] ; mov eax, ebp ; jmp 0x363c4
0x0000000000036f63 : nop dword ptr [rax - 0x34] ; mov eax, ebp ; jmp 0x36f34
0x00000000001006c4 : nop dword ptr [rax - 0x34] ; mov eax, ebx ; pop rbx ; ret
0x00000000000faea8 : nop dword ptr [rax - 0x34] ; mov edi, ebp ; call 0xd7128
0x00000000000fae9c : nop dword ptr [rax - 0x34] ; mov edi, r12d ; call 0xd7129
0x000000000006c54d : nop dword ptr [rax - 0x34] ; mov edx, eax ; jmp 0x6c545
0x000000000006f151 : nop dword ptr [rax - 0x34] ; mov edx, eax ; jmp 0x6f0ee
0x000000000006f21e : nop dword ptr [rax - 0x34] ; mov edx, eax ; jmp 0x6f210
0x000000000006f310 : nop dword ptr [rax - 0x34] ; mov edx, eax ; jmp 0x6f2be
0x000000000006f4ba : nop dword ptr [rax - 0x34] ; mov edx, eax ; jmp 0x6f460
0x000000000006fe6c : nop dword ptr [rax - 0x34] ; mov edx, eax ; jmp 0x6fe17
0x0000000000070038 : nop dword ptr [rax - 0x34] ; mov edx, eax ; jmp 0x6ffd9
0x00000000000701fe : nop dword ptr [rax - 0x34] ; mov edx, eax ; jmp 0x7019e
0x0000000000074512 : nop dword ptr [rax - 0x34] ; mov edx, eax ; jmp 0x744bc
0x0000000000074aa7 : nop dword ptr [rax - 0x34] ; mov edx, eax ; jmp 0x74a55
0x0000000000074c02 : nop dword ptr [rax - 0x34] ; mov edx, eax ; jmp 0x74ba7
0x0000000000074f32 : nop dword ptr [rax - 0x34] ; mov edx, eax ; jmp 0x74edc
0x00000000000fc6d5 : nop dword ptr [rax - 0x34] ; mov edx, eax ; jmp 0xfc687
0x00000000000730de : nop dword ptr [rax - 0x34] ; mov edx, eax ; mov eax, edx ; pop rbx ; ret
0x00000000000af6ca : nop dword ptr [rax - 0x34] ; mov rax, qword ptr [rbp - 0x58] ; call rax
0x00000000000e03b7 : nop dword ptr [rax - 0x34] ; mov rax, rbx ; pop rbx ; ret
0x0000000000113184 : nop dword ptr [rax - 0x34] ; mov rdi, r12 ; call 0x1f479
0x0000000000113190 : nop dword ptr [rax - 0x34] ; mov rdi, r14 ; call 0x1f479
0x000000000010d218 : nop dword ptr [rax - 0x34] ; mov rdi, rax ; call 0x69509
0x000000000002b30e : nop dword ptr [rax - 0x34] ; mov rdi, rbx ; call r12
0x00000000000233d8 : nop dword ptr [rax - 0x34] ; mov rdi, rbx ; call r15
0x000000000011c3cd : nop dword ptr [rax - 0x34] ; mov rdx, rax ; jmp 0x11c3c9
0x000000000011c43f : nop dword ptr [rax - 0x34] ; mov rdx, rax ; jmp 0x11c432
0x000000000004a377 : nop dword ptr [rax - 0x34] ; mov rdx, rax ; jmp 0x4a3b7
0x000000000004a4ef : nop dword ptr [rax - 0x34] ; mov rdx, rax ; jmp 0x4a519
0x000000000007afcc : nop dword ptr [rax - 0x34] ; or dword ptr [rbx], 8 ; pop rbx ; ret
0x000000000007d1ca : nop dword ptr [rax - 0x34] ; pop rbx ; nop ; ret
0x000000000002e658 : nop dword ptr [rax - 0x34] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002d4ec : nop dword ptr [rax - 0x34] ; pop rbx ; ret
0x00000000000dc3f4 : nop dword ptr [rax - 0x34] ; pop rbx ; sar eax, 0x1f ; ret
0x00000000000702a2 : nop dword ptr [rax - 0x34] ; pop rdx ; ret
0x00000000000e5d22 : nop dword ptr [rax - 0x34] ; ret
0x00000000000fb407 : nop dword ptr [rax - 0x34] ; sub rsp, -0x80 ; pop rbx ; ret
0x000000000003486e : nop dword ptr [rax - 0x34] ; xor eax, eax ; pop rbx ; ret
0x0000000000093600 : nop dword ptr [rax - 0x45] ; mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x00000000000934cb : nop dword ptr [rax - 0x45] ; mov rax, rdi ; ret
0x0000000000093784 : nop dword ptr [rax - 0x45] ; ret
0x000000000009373a : nop dword ptr [rax - 0x45] ; xor eax, eax ; ret
0x0000000000076740 : nop dword ptr [rax - 0x56] ; and dword ptr [rdi], 0xffffffcf ; ret
0x00000000000d5810 : nop dword ptr [rax - 0x56] ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x00000000000d6a6d : nop dword ptr [rax - 0x56] ; mov eax, 0 ; syscall
0x00000000000dc640 : nop dword ptr [rax - 0x56] ; mov eax, 0x10 ; syscall
0x00000000000e3ff0 : nop dword ptr [rax - 0x56] ; mov eax, 0x110 ; syscall
0x00000000000e40c0 : nop dword ptr [rax - 0x56] ; mov eax, 0x11b ; syscall
0x00000000000e4120 : nop dword ptr [rax - 0x56] ; mov eax, 0x11f ; syscall
0x00000000000e3b40 : nop dword ptr [rax - 0x56] ; mov eax, 0x123 ; syscall
0x00000000000d71f0 : nop dword ptr [rax - 0x56] ; mov eax, 0x124 ; syscall
0x00000000000d7250 : nop dword ptr [rax - 0x56] ; mov eax, 0x125 ; syscall
0x00000000000e3cd0 : nop dword ptr [rax - 0x56] ; mov eax, 0x126 ; syscall
0x00000000000e4150 : nop dword ptr [rax - 0x56] ; mov eax, 0x12c ; syscall
0x00000000000e41bd : nop dword ptr [rax - 0x56] ; mov eax, 0x130 ; syscall
0x00000000000e3a80 : nop dword ptr [rax - 0x56] ; mov eax, 0x131 ; syscall
0x00000000000dd000 : nop dword ptr [rax - 0x56] ; mov eax, 0x132 ; syscall
0x00000000000e4220 : nop dword ptr [rax - 0x56] ; mov eax, 0x134 ; syscall
0x00000000000d6b40 : nop dword ptr [rax - 0x56] ; mov eax, 0x15 ; syscall
0x00000000000d7220 : nop dword ptr [rax - 0x56] ; mov eax, 0x16 ; syscall
0x00000000000cc1b0 : nop dword ptr [rax - 0x56] ; mov eax, 0x18 ; syscall
0x00000000000e00ed : nop dword ptr [rax - 0x56] ; mov eax, 0x1a ; syscall
0x00000000000e0180 : nop dword ptr [rax - 0x56] ; mov eax, 0x1b ; syscall
0x00000000000e0150 : nop dword ptr [rax - 0x56] ; mov eax, 0x1c ; syscall
0x00000000000e5040 : nop dword ptr [rax - 0x56] ; mov eax, 0x1d ; syscall
0x00000000000e4fe0 : nop dword ptr [rax - 0x56] ; mov eax, 0x1e ; syscall
0x00000000000e5070 : nop dword ptr [rax - 0x56] ; mov eax, 0x1f ; syscall
0x00000000000d7190 : nop dword ptr [rax - 0x56] ; mov eax, 0x20 ; syscall
0x00000000000d71c0 : nop dword ptr [rax - 0x56] ; mov eax, 0x21 ; syscall
0x00000000000b2d4d : nop dword ptr [rax - 0x56] ; mov eax, 0x22 ; syscall
0x00000000000b2dbd : nop dword ptr [rax - 0x56] ; mov eax, 0x23 ; syscall
0x00000000000a60a0 : nop dword ptr [rax - 0x56] ; mov eax, 0x24 ; syscall
0x00000000000b2b40 : nop dword ptr [rax - 0x56] ; mov eax, 0x25 ; syscall
0x00000000000a60d0 : nop dword ptr [rax - 0x56] ; mov eax, 0x26 ; syscall
0x00000000000e4840 : nop dword ptr [rax - 0x56] ; mov eax, 0x29 ; syscall
0x00000000000e437d : nop dword ptr [rax - 0x56] ; mov eax, 0x2a ; syscall
0x00000000000e42dd : nop dword ptr [rax - 0x56] ; mov eax, 0x2b ; syscall
0x00000000000e470d : nop dword ptr [rax - 0x56] ; mov eax, 0x2e ; syscall
0x00000000000e45dd : nop dword ptr [rax - 0x56] ; mov eax, 0x2f ; syscall
0x00000000000e4810 : nop dword ptr [rax - 0x56] ; mov eax, 0x30 ; syscall
0x00000000000e4340 : nop dword ptr [rax - 0x56] ; mov eax, 0x31 ; syscall
0x00000000000e4470 : nop dword ptr [rax - 0x56] ; mov eax, 0x32 ; syscall
0x00000000000e4410 : nop dword ptr [rax - 0x56] ; mov eax, 0x33 ; syscall
0x00000000000e43e0 : nop dword ptr [rax - 0x56] ; mov eax, 0x34 ; syscall
0x00000000000b3200 : nop dword ptr [rax - 0x56] ; mov eax, 0x3b ; syscall
0x00000000000361e0 : nop dword ptr [rax - 0x56] ; mov eax, 0x3e ; syscall
0x00000000000b2850 : nop dword ptr [rax - 0x56] ; mov eax, 0x3f ; syscall
0x00000000000e4f50 : nop dword ptr [rax - 0x56] ; mov eax, 0x40 ; syscall
0x00000000000e4f20 : nop dword ptr [rax - 0x56] ; mov eax, 0x41 ; syscall
0x00000000000e5010 : nop dword ptr [rax - 0x56] ; mov eax, 0x43 ; syscall
0x00000000000e4ec0 : nop dword ptr [rax - 0x56] ; mov eax, 0x44 ; syscall
0x00000000000e4ef0 : nop dword ptr [rax - 0x56] ; mov eax, 0x47 ; syscall
0x00000000000d6fd0 : nop dword ptr [rax - 0x56] ; mov eax, 0x49 ; syscall
0x00000000000dcefd : nop dword ptr [rax - 0x56] ; mov eax, 0x4a ; syscall
0x00000000000dcf9d : nop dword ptr [rax - 0x56] ; mov eax, 0x4b ; syscall
0x00000000000de740 : nop dword ptr [rax - 0x56] ; mov eax, 0x4c ; syscall
0x00000000000de770 : nop dword ptr [rax - 0x56] ; mov eax, 0x4d ; syscall
0x00000000000d72f0 : nop dword ptr [rax - 0x56] ; mov eax, 0x50 ; syscall
0x00000000000d7320 : nop dword ptr [rax - 0x56] ; mov eax, 0x51 ; syscall
0x0000000000069f10 : nop dword ptr [rax - 0x56] ; mov eax, 0x52 ; syscall
0x00000000000d67b0 : nop dword ptr [rax - 0x56] ; mov eax, 0x53 ; syscall
0x00000000000d83f0 : nop dword ptr [rax - 0x56] ; mov eax, 0x54 ; syscall
0x00000000000d728d : nop dword ptr [rax - 0x56] ; mov eax, 0x55 ; syscall
0x00000000000d8260 : nop dword ptr [rax - 0x56] ; mov eax, 0x56 ; syscall
0x00000000000d8390 : nop dword ptr [rax - 0x56] ; mov eax, 0x57 ; syscall
0x00000000000d82d0 : nop dword ptr [rax - 0x56] ; mov eax, 0x58 ; syscall
0x00000000000d8330 : nop dword ptr [rax - 0x56] ; mov eax, 0x59 ; syscall
0x00000000000d66c0 : nop dword ptr [rax - 0x56] ; mov eax, 0x5a ; syscall
0x00000000000d66f0 : nop dword ptr [rax - 0x56] ; mov eax, 0x5b ; syscall
0x00000000000d7b80 : nop dword ptr [rax - 0x56] ; mov eax, 0x5c ; syscall
0x00000000000d7bb0 : nop dword ptr [rax - 0x56] ; mov eax, 0x5d ; syscall
0x00000000000d7be0 : nop dword ptr [rax - 0x56] ; mov eax, 0x5e ; syscall
0x00000000000d66b0 : nop dword ptr [rax - 0x56] ; mov eax, 0x5f ; syscall
0x00000000000dc090 : nop dword ptr [rax - 0x56] ; mov eax, 0x61 ; syscall
0x00000000000dc0f0 : nop dword ptr [rax - 0x56] ; mov eax, 0x62 ; syscall
0x00000000000e3f50 : nop dword ptr [rax - 0x56] ; mov eax, 0x63 ; syscall
0x00000000000b3dc0 : nop dword ptr [rax - 0x56] ; mov eax, 0x66 ; syscall
0x00000000000e3d30 : nop dword ptr [rax - 0x56] ; mov eax, 0x67 ; syscall
0x00000000000b3de0 : nop dword ptr [rax - 0x56] ; mov eax, 0x68 ; syscall
0x00000000000b3dd0 : nop dword ptr [rax - 0x56] ; mov eax, 0x6b ; syscall
0x00000000000b3df0 : nop dword ptr [rax - 0x56] ; mov eax, 0x6c ; syscall
0x00000000000b3ff0 : nop dword ptr [rax - 0x56] ; mov eax, 0x6d ; syscall
0x00000000000b3db0 : nop dword ptr [rax - 0x56] ; mov eax, 0x6e ; syscall
0x00000000000b4020 : nop dword ptr [rax - 0x56] ; mov eax, 0x6f ; syscall
0x00000000000b40a0 : nop dword ptr [rax - 0x56] ; mov eax, 0x70 ; syscall
0x00000000000b3e00 : nop dword ptr [rax - 0x56] ; mov eax, 0x73 ; syscall
0x00000000000b40d0 : nop dword ptr [rax - 0x56] ; mov eax, 0x76 ; syscall
0x00000000000b4100 : nop dword ptr [rax - 0x56] ; mov eax, 0x78 ; syscall
0x00000000000b3fc0 : nop dword ptr [rax - 0x56] ; mov eax, 0x79 ; syscall
0x00000000000e36b0 : nop dword ptr [rax - 0x56] ; mov eax, 0x7a ; syscall
0x00000000000e36e0 : nop dword ptr [rax - 0x56] ; mov eax, 0x7b ; syscall
0x00000000000b4070 : nop dword ptr [rax - 0x56] ; mov eax, 0x7c ; syscall
0x00000000000e3a20 : nop dword ptr [rax - 0x56] ; mov eax, 0x7d ; syscall
0x00000000000e3a50 : nop dword ptr [rax - 0x56] ; mov eax, 0x7e ; syscall
0x0000000000036790 : nop dword ptr [rax - 0x56] ; mov eax, 0x83 ; syscall
0x00000000000d6310 : nop dword ptr [rax - 0x56] ; mov eax, 0x84 ; syscall
0x00000000000e4020 : nop dword ptr [rax - 0x56] ; mov eax, 0x86 ; syscall
0x00000000000e3df0 : nop dword ptr [rax - 0x56] ; mov eax, 0x87 ; syscall
0x00000000000d65b0 : nop dword ptr [rax - 0x56] ; mov eax, 0x89 ; syscall
0x00000000000d65e0 : nop dword ptr [rax - 0x56] ; mov eax, 0x8a ; syscall
0x00000000000dc450 : nop dword ptr [rax - 0x56] ; mov eax, 0x8d ; syscall
0x00000000000cc0f0 : nop dword ptr [rax - 0x56] ; mov eax, 0x8e ; syscall
0x00000000000cc120 : nop dword ptr [rax - 0x56] ; mov eax, 0x8f ; syscall
0x00000000000cc150 : nop dword ptr [rax - 0x56] ; mov eax, 0x90 ; syscall
0x00000000000cc180 : nop dword ptr [rax - 0x56] ; mov eax, 0x91 ; syscall
0x00000000000cc1e0 : nop dword ptr [rax - 0x56] ; mov eax, 0x92 ; syscall
0x00000000000cc210 : nop dword ptr [rax - 0x56] ; mov eax, 0x93 ; syscall
0x00000000000cc240 : nop dword ptr [rax - 0x56] ; mov eax, 0x94 ; syscall
0x00000000000e01e0 : nop dword ptr [rax - 0x56] ; mov eax, 0x95 ; syscall
0x00000000000e0210 : nop dword ptr [rax - 0x56] ; mov eax, 0x96 ; syscall
0x00000000000e0240 : nop dword ptr [rax - 0x56] ; mov eax, 0x97 ; syscall
0x00000000000e0270 : nop dword ptr [rax - 0x56] ; mov eax, 0x98 ; syscall
0x00000000000dd310 : nop dword ptr [rax - 0x56] ; mov eax, 0x99 ; syscall
0x00000000000e3980 : nop dword ptr [rax - 0x56] ; mov eax, 0x9a ; syscall
0x00000000000e3e20 : nop dword ptr [rax - 0x56] ; mov eax, 0x9b ; syscall
0x00000000000e3950 : nop dword ptr [rax - 0x56] ; mov eax, 0x9e ; syscall
0x00000000000e39f0 : nop dword ptr [rax - 0x56] ; mov eax, 0x9f ; syscall
0x00000000000e00b0 : nop dword ptr [rax - 0x56] ; mov eax, 0xa ; syscall
0x00000000000dc0c0 : nop dword ptr [rax - 0x56] ; mov eax, 0xa0 ; syscall
0x00000000000dcec0 : nop dword ptr [rax - 0x56] ; mov eax, 0xa1 ; syscall
0x00000000000dcf60 : nop dword ptr [rax - 0x56] ; mov eax, 0xa2 ; syscall
0x00000000000dce90 : nop dword ptr [rax - 0x56] ; mov eax, 0xa3 ; syscall
0x00000000000a3610 : nop dword ptr [rax - 0x56] ; mov eax, 0xa4 ; syscall
0x00000000000e3650 : nop dword ptr [rax - 0x56] ; mov eax, 0xa6 ; syscall
0x00000000000dd340 : nop dword ptr [rax - 0x56] ; mov eax, 0xa7 ; syscall
0x00000000000dd370 : nop dword ptr [rax - 0x56] ; mov eax, 0xa8 ; syscall
0x00000000000dcc40 : nop dword ptr [rax - 0x56] ; mov eax, 0xaa ; syscall
0x00000000000dccf0 : nop dword ptr [rax - 0x56] ; mov eax, 0xab ; syscall
0x00000000000e3490 : nop dword ptr [rax - 0x56] ; mov eax, 0xac ; syscall
0x00000000000e3460 : nop dword ptr [rax - 0x56] ; mov eax, 0xad ; syscall
0x00000000000e3ab0 : nop dword ptr [rax - 0x56] ; mov eax, 0xae ; syscall
0x00000000000e0080 : nop dword ptr [rax - 0x56] ; mov eax, 0xb ; syscall
0x00000000000e3ae0 : nop dword ptr [rax - 0x56] ; mov eax, 0xb0 ; syscall
0x00000000000e3c10 : nop dword ptr [rax - 0x56] ; mov eax, 0xb1 ; syscall
0x00000000000e3dc0 : nop dword ptr [rax - 0x56] ; mov eax, 0xb4 ; syscall
0x00000000000e3680 : nop dword ptr [rax - 0x56] ; mov eax, 0xbb ; syscall
0x00000000000e3220 : nop dword ptr [rax - 0x56] ; mov eax, 0xc2 ; syscall
0x00000000000e3280 : nop dword ptr [rax - 0x56] ; mov eax, 0xc3 ; syscall
0x00000000000e3160 : nop dword ptr [rax - 0x56] ; mov eax, 0xc4 ; syscall
0x00000000000e3310 : nop dword ptr [rax - 0x56] ; mov eax, 0xc5 ; syscall
0x00000000000e32b0 : nop dword ptr [rax - 0x56] ; mov eax, 0xc6 ; syscall
0x00000000000e3190 : nop dword ptr [rax - 0x56] ; mov eax, 0xc7 ; syscall
0x00000000000e3b10 : nop dword ptr [rax - 0x56] ; mov eax, 0xd5 ; syscall
0x00000000000e39b0 : nop dword ptr [rax - 0x56] ; mov eax, 0xe4 ; syscall
0x00000000000de570 : nop dword ptr [rax - 0x56] ; mov eax, 0xeb ; syscall
0x00000000000e3ca0 : nop dword ptr [rax - 0x56] ; mov eax, 0xfd ; syscall
0x00000000000e3c70 : nop dword ptr [rax - 0x56] ; mov eax, 0xfe ; syscall
0x00000000000e3d00 : nop dword ptr [rax - 0x56] ; mov eax, 0xff ; syscall
0x0000000000079840 : nop dword ptr [rax - 0x56] ; mov eax, 0xffffffff ; ret
0x000000000002b140 : nop dword ptr [rax - 0x56] ; mov eax, 1 ; ret
0x00000000000d6add : nop dword ptr [rax - 0x56] ; mov eax, 1 ; syscall
0x0000000000108be0 : nop dword ptr [rax - 0x56] ; mov eax, 2 ; ret
0x00000000000d681d : nop dword ptr [rax - 0x56] ; mov eax, 2 ; syscall
0x00000000000d712d : nop dword ptr [rax - 0x56] ; mov eax, 3 ; syscall
0x00000000000dae8d : nop dword ptr [rax - 0x56] ; mov eax, 7 ; syscall
0x00000000000e35cd : nop dword ptr [rax - 0x56] ; mov eax, 8 ; syscall
0x0000000000114b10 : nop dword ptr [rax - 0x56] ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000000af100 : nop dword ptr [rax - 0x56] ; mov eax, dword ptr [rdi] ; ret
0x000000000002edb0 : nop dword ptr [rax - 0x56] ; mov eax, edi ; and eax, 0x7f ; ret
0x00000000000f4de0 : nop dword ptr [rax - 0x56] ; mov eax, edi ; bswap eax ; ret
0x00000000000aefd0 : nop dword ptr [rax - 0x56] ; mov rax, qword ptr [rdi + 0x20] ; ret
0x000000000007a990 : nop dword ptr [rax - 0x56] ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000007a9a0 : nop dword ptr [rax - 0x56] ; mov rax, rdi ; ret
0x0000000000021ac0 : nop dword ptr [rax - 0x56] ; ret
0x00000000000e1a20 : nop dword ptr [rax - 0x56] ; test rdi, rdi ; jne 0xe1a39 ; ret
0x0000000000073840 : nop dword ptr [rax - 0x56] ; xor eax, eax ; ret
0x000000000006a03d : nop dword ptr [rax] ; add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x00000000000959cc : nop dword ptr [rax] ; add rax, 1 ; ret
0x000000000011e57d : nop dword ptr [rax] ; call qword ptr [rbx]
0x000000000009630d : nop dword ptr [rax] ; lea rax, [rdi + 0xc] ; ret
0x00000000000962f4 : nop dword ptr [rax] ; lea rax, [rdi + 4] ; ret
0x0000000000036934 : nop dword ptr [rax] ; mov byte ptr [rdi], 0 ; xor eax, eax ; ret
0x00000000000b473d : nop dword ptr [rax] ; mov eax, 0x40 ; ret
0x00000000000b4615 : nop dword ptr [rax] ; mov eax, 0xfc17 ; ret
0x00000000000712dd : nop dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000007aafc : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x000000000011a115 : nop dword ptr [rax] ; mov eax, ebx ; pop rbx ; ret
0x0000000000034834 : nop dword ptr [rax] ; mov rax, rcx ; pop rbx ; ret
0x00000000000f1c7c : nop dword ptr [rax] ; mov rax, rdi ; pop rbx ; ret
0x00000000000b587c : nop dword ptr [rax] ; mov rax, rdi ; ret
0x00000000000f184c : nop dword ptr [rax] ; nop dword ptr [rax - 0x56] ; ret
0x00000000000760a5 : nop dword ptr [rax] ; or dh, 0x80 ; mov dword ptr [rdi], edx ; ret
0x0000000000039185 : nop dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ca155 : nop dword ptr [rax] ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000001022e9 : nop dword ptr [rax] ; pop rbx ; ret
0x000000000006aeac : nop dword ptr [rax] ; ret
0x0000000000095ba4 : nop dword ptr [rax] ; sub eax, r8d ; ret
0x00000000001085cd : nop dword ptr [rax] ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000069884 : nop dword ptr [rax] ; xor eax, eax ; pop rbx ; ret
0x000000000006f6b9 : nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000006eef2 : nop word ptr [rax + rax] ; mov eax, edi ; ret
0x000000000009778a : nop word ptr [rax + rax] ; mov rax, rcx ; ret
0x00000000000445ba : nop word ptr [rax + rax] ; pop rbx ; ret
0x0000000000046eba : nop word ptr [rax + rax] ; ret
0x00000000000bd032 : nop word ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x00000000000b47fa : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000956da : nop word ptr [rax + rax] ; xor rax, rax ; ret
0x0000000000114e59 : not eax ; add rsp, 8 ; shr eax, 0x1f ; ret
0x0000000000035224 : not eax ; and eax, ecx ; ret
0x00000000000358e3 : not eax ; and eax, edx ; ret
0x00000000000368e7 : not eax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x00000000000368e6 : not rax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x00000000000dc54a : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000dc515 : or al, 0 ; add byte ptr [rax], al ; mov rsi, rdi ; mov eax, ecx ; syscall
0x0000000000108576 : or al, 0 ; add byte ptr [rax], al ; ret
0x00000000000bfd94 : or al, 0 ; add byte ptr [rax], al ; test edx, edx ; cmovne eax, edx ; jmp 0xbfd7a
0x000000000007e6ba : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000007e88a : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000003ab62 : or al, 0 ; add byte ptr [rbp + 0x31], dh ; add rsp, 8 ; ret
0x0000000000000427 : or al, 0 ; add eax, 0xc1c107c ; ret 0x4412
0x0000000000061439 : or al, 0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000006b825 : or al, 0 ; movsxd rax, dword ptr [rsi + rcx*4] ; add rsi, rax ; jmp rsi
0x000000000006b74b : or al, 0 ; movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x00000000000615e7 : or al, 0 ; movsxd rdx, dword ptr [rax + r12*4] ; add rax, rdx ; jmp rax
0x00000000000928d5 : or al, 0x10 ; test ecx, ecx ; jg 0x928c9 ; or byte ptr [rdi], sil ; ret
0x0000000000049bf5 : or al, 0x13 ; add rdx, r12 ; call qword ptr [r11 + rax*8]
0x000000000005521d : or al, 0x13 ; add rdx, r14 ; call qword ptr [r11 + rax*8]
0x000000000008f9d2 : or al, 0x16 ; mov byte ptr [rsi + rdx + 1], al ; jg 0x8f9c9 ; ret
0x00000000000850b6 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x0000000000155424 : or al, 0x22 ; add dword ptr [rax], eax ; call 0x27154cbb
0x00000000001115c4 : or al, 0x24 ; pop r12 ; ret
0x00000000000e373e : or al, 0x30 ; ror byte ptr [rcx], 0xf8 ; ret
0x000000000010d553 : or al, 0x31 ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000146924 : or al, 0x37 ; add byte ptr [rax], al ; test al, 0x46 ; out dx, eax ; jmp rax
0x00000000000f0a4e : or al, 0x41 ; pop rsp ; ret
0x00000000000bcd8c : or al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x0000000000069e80 : or al, 0x48 ; add esp, 0x18 ; mov eax, edx ; ret
0x0000000000023e13 : or al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000003970e : or al, 0x48 ; add esp, 0x18 ; ret
0x0000000000069803 : or al, 0x48 ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000b2b23 : or al, 0x48 ; add esp, 0x28 ; ret
0x000000000011c374 : or al, 0x48 ; add esp, 0x38 ; ret
0x000000000010afeb : or al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000010399b : or al, 0x48 ; add esp, 8 ; ret
0x00000000000ffc5b : or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x00000000000dbaae : or al, 0x48 ; movsxd rdi, dword ptr [rsp + 8] ; mov eax, ebx ; syscall
0x00000000001001a3 : or al, 0x4c ; cmp edx, eax ; jne 0x100190 ; ret
0x00000000000b2b02 : or al, 0x4c ; movsxd rdx, ecx ; syscall
0x00000000000a29a9 : or al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000769fb : or al, 0x5b ; pop rbp ; pop r12 ; ret
0x000000000008870c : or al, 0x75 ; fisttp qword ptr [rax - 1] ; ret 0xff48
0x000000000000048b : or al, 0x80 ; push rbx ; add al, 4 ; ret 0x6080
0x000000000015b424 : or al, 0x82 ; add dword ptr [rax], eax ; test al, 0x1e ; cli ; call rcx
0x0000000000094382 : or al, 0x83 ; rol byte ptr [rcx], 0x83 ; ret 0x8101
0x00000000000935b6 : or al, 0x88 ; add rax, r9 ; jmp rax
0x000000000006b74f : or al, 0x88 ; add rax, rcx ; jmp rax
0x00000000000e4cdf : or al, 0x89 ; fmul dword ptr [rbx - 0x2f] ; syscall
0x00000000000d6fa5 : or al, 0x89 ; ret
0x000000000005401a : or al, 0x89 ; ret 0xeac0
0x00000000000bc214 : or al, 0x8a ; add rdx, rcx ; jmp rdx
0x0000000000083d23 : or al, 0x8a ; lea r10, [r10 + r9] ; jmp r10
0x000000000008bd04 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000007440b : or al, 0x8b ; jo 0x7439e ; sar byte ptr [rax + 5], 0xf3 ; ret
0x00000000000bde9f : or al, 0x8f ; cmp edx, dword ptr [rcx + 4] ; jne 0xbdeb8 ; ret
0x00000000001039b3 : or al, 0xa2 ; add byte ptr es:[rdx], al ; add rsp, 8 ; ret
0x00000000000c5e58 : or al, 0xa8 ; add rax, rcx ; jmp rax
0x0000000000002b82 : or al, 0xaf ; xbegin 0xfffffffff8c6ef86 ; ret
0x000000000010f55c : or al, 0xb0 ; add rax, rcx ; jmp rax
0x000000000011510b : or al, 0xb0 ; shr rdx, 3 ; add rax, rcx ; jmp rax
0x00000000000e6cba : or al, 0xb1 ; add eax, dword ptr [rdx + rcx] ; ret
0x000000000010f57a : or al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000015fa24 : or al, 0xc8 ; add dword ptr [rax], eax ; call 0xffffffffd315f565
0x00000000000e9b55 : or al, 0xe9 ; ret 0xfffe
0x00000000000955c5 : or al, 0xf ; test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x000000000002e8b3 : or al, 0xf3 ; ret
0x000000000006b452 : or al, 0xf6 ; ret 0x7404
0x000000000002c592 : or al, 0xf8 ; test rcx, rcx ; je 0x2c5a6 ; call rcx
0x00000000000d6026 : or al, 1 ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000000085c : or al, 1 ; add byte ptr [rax], al ; ret 0x440c
0x00000000000d6757 : or al, 1 ; add byte ptr [rax], al ; syscall
0x00000000000d6112 : or al, 1 ; add byte ptr [rax], al ; xor al, al ; ret
0x000000000014a860 : or al, 2 ; ror dword ptr [rsi], 0x28 ; ret
0x0000000000148d5d : or al, byte ptr [rax] ; add byte ptr [rax + 0x57], ah ; jmp rcx
0x00000000000ed2d9 : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rbp ; call 0x79569
0x0000000000108536 : or al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000e00b5 : or al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000c4540 : or al, byte ptr [rax] ; add byte ptr [rbp + 0x634c0143], cl ; ret
0x0000000000003eb1 : or al, byte ptr [rax] ; add byte ptr [rdx], ah ; add byte ptr [rbx], cl ; add byte ptr [rax], dl ; ret 0xc
0x000000000000a6a9 : or al, byte ptr [rax] ; add byte ptr [rdx], dl ; add byte ptr [rbx], cl ; add byte ptr [rax], dl ; ret 0xc
0x0000000000092805 : or al, byte ptr [rax] ; mov edx, 0x1f2 ; call 0x2eab9
0x0000000000092858 : or al, byte ptr [rax] ; mov edx, 0x1f5 ; call 0x2eab9
0x00000000000336de : or al, byte ptr [rbp + 0xf] ; ret 0x8348
0x00000000000960aa : or al, byte ptr [rbp - 0xc0e8a37] ; ret
0x00000000000c4644 : or al, byte ptr [rbx - 0x7cb7fe40] ; ret 0x4101
0x00000000000c435c : or al, byte ptr [rbx - 0x7cb7fe40] ; ret 0x8001
0x00000000000d8308 : or al, byte ptr [rcx] ; add byte ptr [rax], al ; syscall
0x000000000013fbb5 : or al, byte ptr [rcx] ; add byte ptr [rdx + rbx*4], ah ; cmc ; call rsp
0x0000000000000489 : or al, byte ptr [rcx] ; or al, 0x80 ; push rbx ; add al, 4 ; ret 0x6080
0x000000000011105c : or al, ch ; outsb dx, byte ptr [rsi] ; ret
0x000000000004f7d7 : or al, ch ; ret
0x00000000000ae708 : or al, ch ; ret 0xf70c
0x0000000000130a3c : or bh, 0xf5 ; call rax
0x000000000015e3b8 : or bh, ah ; cli ; jmp qword ptr [rbx]
0x000000000015c801 : or bh, ah ; jmp qword ptr [rcx]
0x000000000015a998 : or bh, bl ; stc ; jmp rax
0x00000000000c3112 : or bh, dh ; ret
0x00000000000df423 : or bh, dh ; ret 0xfc07
0x0000000000140e59 : or bh, dl ; jmp rsp
0x0000000000117b42 : or bl, al ; mov dword ptr [rsi], eax ; or eax, 0xffffffff ; ret
0x00000000000ddc2e : or bl, al ; mov eax, 1 ; ret
0x000000000007ff5f : or bl, al ; mov rsi, qword ptr [rsp + 8] ; call rax
0x00000000000b59d9 : or bl, al ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000010be1e : or bl, al ; nop dword ptr [rax - 0x56] ; ret
0x0000000000079cee : or bl, al ; nop dword ptr [rax - 0x56] ; xor eax, eax ; ret
0x000000000009630b : or bl, al ; nop dword ptr [rax] ; lea rax, [rdi + 0xc] ; ret
0x00000000000e139a : or bl, al ; nop dword ptr [rax] ; ret
0x000000000015ed39 : or bl, bh ; call rdi
0x00000000000be11f : or bl, byte ptr [rbp + 0x75] ; mov ch, 0x83 ; ret 0x8901
0x00000000000022a4 : or bl, byte ptr [rbx + 0x38] ; ja 0xffffffffd6104b36 ; ret
0x00000000000e1d98 : or bl, byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000001110e5 : or bl, byte ptr [rbx + 0x5d] ; xor eax, eax ; pop r12 ; ret
0x00000000000ffdad : or bl, ch ; lodsd eax, dword ptr [rsi] ; mov eax, 0xffffffff ; ret
0x000000000004c649 : or bl, ch ; ret 0x1f0f
0x000000000002bade : or bl, dh ; ret
0x000000000015a708 : or bl, dl ; stc ; call qword ptr [rax]
0x00000000000bb7a8 : or byte ptr [r10], r11b ; mov eax, 2 ; ret
0x00000000000bb729 : or byte ptr [r10], r8b ; xor eax, eax ; ret
0x00000000000b82ef : or byte ptr [r11 + 0x5d], bl ; ret
0x00000000000347cc : or byte ptr [r11 + r9*4 + 0x57], r9b ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x00000000000bb71b : or byte ptr [r14], r10b ; mov eax, 1 ; ret
0x00000000000bb7de : or byte ptr [r14], r11b ; mov eax, 2 ; ret
0x00000000000bbc81 : or byte ptr [r8 + 0x63], cl ; push rbx ; add al, 0xeb ; ret 0xc883
0x00000000000bb7f1 : or byte ptr [r8 + r15*4], r11b ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000bd568 : or byte ptr [r8 - 0x75], r9b ; jl 0xbd58f ; or byte ptr [rax - 0x7d], cl ; ret
0x0000000000109332 : or byte ptr [r8 - 0x77], cl ; out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x0000000000111c92 : or byte ptr [r8 - 0x77], r9b ; fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x00000000000389f2 : or byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x00000000000bb781 : or byte ptr [r9], r11b ; mov eax, 1 ; ret
0x00000000000bb741 : or byte ptr [r9], r8b ; mov eax, 1 ; ret
0x00000000000dc6d0 : or byte ptr [rax + 0x13], bh ; syscall
0x00000000000dc770 : or byte ptr [rax + 0x14], bh ; syscall
0x00000000000e354d : or byte ptr [rax + 0x38], bh ; syscall
0x000000000007aadb : or byte ptr [rax + 0x39], cl ; enter 0x1f73, 0xf ; mov dh, 0 ; ret
0x000000000004f8f4 : or byte ptr [rax + 0x39], cl ; ret
0x0000000000082225 : or byte ptr [rax + 0x39], cl ; ret 0x5d74
0x000000000008028f : or byte ptr [rax + 0x39], cl ; ret 0x870f
0x00000000000bbc82 : or byte ptr [rax + 0x63], cl ; push rbx ; add al, 0xeb ; ret 0xc883
0x0000000000036292 : or byte ptr [rax + 0x82], bh ; syscall
0x0000000000034d71 : or byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8b48
0x000000000003527f : or byte ptr [rax + 1], 0xd0 ; shr rax, 0x3f ; ret
0x00000000000243e3 : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x00000000000b4857 : or byte ptr [rax + 1], bh ; ret
0x0000000000031986 : or byte ptr [rax + 1], cl ; ret
0x00000000000eeb73 : or byte ptr [rax + 7], bh ; pop rbx ; pop rbp ; ret
0x000000000010a71d : or byte ptr [rax + 9], cl ; ret 0xb60f
0x000000000015f5f7 : or byte ptr [rax + rax], al ; add ah, ah ; ret
0x000000000015f4b7 : or byte ptr [rax + rax], dl ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 1
0x00000000000bb7f2 : or byte ptr [rax + rdi*4], bl ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000a280d : or byte ptr [rax - 0x3f], 0xe0 ; add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x00000000000b8417 : or byte ptr [rax - 0x73], cl ; add bl, byte ptr [r11 + 0x5d] ; ret
0x00000000000b82ec : or byte ptr [rax - 0x73], cl ; or byte ptr [r11 + 0x5d], bl ; ret
0x00000000000e63f9 : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x00000000000e646a : or byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x40 ; ret
0x00000000000f0893 : or byte ptr [rax - 0x75], cl ; jg 0xf08a5 ; call qword ptr [rax]
0x0000000000027411 : or byte ptr [rax - 0x75], cl ; jl 0x27440 ; call rax
0x00000000000bd569 : or byte ptr [rax - 0x75], cl ; jl 0xbd58e ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000006cad3 : or byte ptr [rax - 0x75], cl ; mov edi, 0xe0 ; call rax
0x000000000006cba5 : or byte ptr [rax - 0x75], cl ; mov edi, 0xe0 ; call rdx
0x0000000000108551 : or byte ptr [rax - 0x75], cl ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000010f4f6 : or byte ptr [rax - 0x75], cl ; push rax ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000114cdc : or byte ptr [rax - 0x77], 0xd0 ; pop rbx ; ret
0x00000000000ef7d2 : or byte ptr [rax - 0x77], 0xda ; call rax
0x00000000000f4a6c : or byte ptr [rax - 0x77], cl ; clc ; sar rax, 6 ; ret
0x00000000000330e5 : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000111c93 : or byte ptr [rax - 0x77], cl ; fimul word ptr [rcx + rcx*4 - 1] ; call qword ptr [rax]
0x0000000000107733 : or byte ptr [rax - 0x77], cl ; fucompi st(0) ; ret
0x00000000000e1351 : or byte ptr [rax - 0x77], cl ; ja 0xe136e ; mov qword ptr [rdx], rdi ; ret
0x00000000000bde2b : or byte ptr [rax - 0x77], cl ; jo 0xbde57 ; xor eax, eax ; ret
0x00000000000e13cf : or byte ptr [rax - 0x77], cl ; jo 0xe13e9 ; ret
0x0000000000109333 : or byte ptr [rax - 0x77], cl ; out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x00000000000375f1 : or byte ptr [rax - 0x77], cl ; out dx, al ; call r12
0x00000000000e1392 : or byte ptr [rax - 0x77], cl ; push rsi ; adc byte ptr [rax - 0x77], cl ; jo 0xe13ac ; ret
0x000000000006ea16 : or byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000038fa0 : or byte ptr [rax - 0x77], cl ; ret
0x0000000000114367 : or byte ptr [rax - 0x77], cl ; ret 0x4489
0x00000000000eb2ad : or byte ptr [rax - 0x77], cl ; ret 0x4d64
0x000000000003ec28 : or byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000009e1cc : or byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000010acf7 : or byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000389f3 : or byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000a46a8 : or byte ptr [rax - 0x77], cl ; sub byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x00000000000e1350 : or byte ptr [rax - 0x77], r9b ; ja 0xe136f ; mov qword ptr [rdx], rdi ; ret
0x00000000000bde2a : or byte ptr [rax - 0x77], r9b ; jo 0xbde58 ; xor eax, eax ; ret
0x0000000000025713 : or byte ptr [rax - 0x7b], cl ; push qword ptr [rdx - 0x18] ; ret 0xf6a
0x0000000000042185 : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000083887 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x0000000000029c27 : or byte ptr [rax - 0x7d], 0xc6 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000007e8ff : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000002e502 : or byte ptr [rax - 0x7d], cl ; ret
0x00000000000bca65 : or byte ptr [rax - 0x7d], cl ; ret 0x3901
0x000000000008ea66 : or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000008eaee : or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000000000b71b4 : or byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000000000051623 : or byte ptr [rax - 0x7d], cl ; ret 0x8404
0x00000000000516fa : or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x00000000000216e6 : or byte ptr [rax - 0x7f], cl ; ret
0x000000000007335f : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000021733 : or byte ptr [rax - 1], cl ; ret 0x3941
0x0000000000158788 : or byte ptr [rax - 7], ah ; jmp qword ptr [rax]
0x000000000014f506 : or byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; hlt ; ret 0
0x000000000015f4fe : or byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, dx ; ret 1
0x000000000014f5be : or byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x000000000014f576 : or byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret
0x000000000014f5a6 : or byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x000000000007f46a : or byte ptr [rax], al ; add al, ch ; ret
0x000000000002172f : or byte ptr [rax], al ; add bl, ch ; or byte ptr [rax - 1], cl ; ret 0x3941
0x00000000000cdf62 : or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000007b3bf : or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x00000000000a368e : or byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; cli ; ret 0x10
0x0000000000079c00 : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000000daf22 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x10f ; syscall
0x00000000000e384b : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x121 ; syscall
0x0000000000036215 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x7f ; syscall
0x000000000003624f : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0x82 ; syscall
0x000000000004502a : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xe ; syscall
0x0000000000036d86 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov rsi, r8 ; mov eax, ecx ; syscall
0x00000000000946eb : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000108566 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000e35d2 : or byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000132e4c : or byte ptr [rax], al ; add byte ptr [rax], al ; xor byte ptr [rdi - 3], dl ; call qword ptr [rax]
0x000000000005f7b3 : or byte ptr [rax], al ; add byte ptr [rdi], cl ; test dword ptr [rcx], edi ; ret 0xffff
0x00000000000ed573 : or byte ptr [rax], al ; add dh, dh ; test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rax]
0x00000000000a7988 : or byte ptr [rax], al ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x00000000000476e4 : or byte ptr [rax], al ; ret
0x000000000014f556 : or byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; ret
0x000000000015ed38 : or byte ptr [rax], cl ; sti ; call rdi
0x000000000006977f : or byte ptr [rax], dl ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000962e3 : or byte ptr [rbp + 0x1a], dh ; ret
0x0000000000100705 : or byte ptr [rbp + 0x5d5b2b04], cl ; ret
0x0000000000104c40 : or byte ptr [rbp - 0x1b], dh ; add rsp, 0x18 ; ret
0x0000000000096209 : or byte ptr [rbp - 0x75], al ; sbb al, byte ptr [rcx - 0x75] ; add dword ptr [rcx + 0x39], eax ; ret
0x0000000000027fbf : or byte ptr [rbp - 0x77], al ; ret 0x8948
0x00000000000f0c39 : or byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbp - 0x3f], 0xc9 ; ret
0x00000000000efebc : or byte ptr [rbp - 0xf], dh ; mov rax, qword ptr [rax + 0x30] ; ret
0x0000000000003c5f : or byte ptr [rbx + 0x4e], ch ; ret 0x6bba
0x000000000010951b : or byte ptr [rbx + 0x5d], bl ; add eax, edx ; ret
0x00000000000e811c : or byte ptr [rbx + 0x5d], bl ; pop r12 ; neg eax ; pop r13 ; ret
0x000000000002183b : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000008385f : or byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000023217 : or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000034d6e : or byte ptr [rbx + 0xf480857], cl ; scasd eax, dword ptr [rdi] ; ret 0x8b48
0x0000000000109fb5 : or byte ptr [rbx + 0xf], bl ; mov dh, 0xc0 ; pop rbp ; ret
0x000000000014513b : or byte ptr [rbx + rcx + 0x52], al ; ret
0x00000000000347cd : or byte ptr [rbx + rcx*4 + 0x57], cl ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x00000000000c0316 : or byte ptr [rbx - 0x75], bl ; add al, 0x5d ; pop r12 ; ret
0x00000000000cd537 : or byte ptr [rbx - 0x76b3fe20], al ; out 0x89, al ; ret 0xca83
0x00000000000c44f1 : or byte ptr [rbx - 0x76bbfe10], al ; ret
0x00000000000f0868 : or byte ptr [rbx], al ; add byte ptr [rax], al ; mov esi, 0x80 ; syscall
0x0000000000087cba : or byte ptr [rcx + 0x29], cl ; ret
0x0000000000045907 : or byte ptr [rcx + 0x29], cl ; ret 0x8349
0x000000000004709b : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x00000000000f2526 : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x0000000000104ca9 : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x000000000003ffcd : or byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0x8545
0x00000000000457ab : or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000046410 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x00000000001175a3 : or byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x8b41
0x00000000000e44f3 : or byte ptr [rcx - 0x17e7db84], cl ; ret
0x00000000000457b2 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x00000000000bff83 : or byte ptr [rcx - 0x76b7ffa3], cl ; ret
0x000000000004c645 : or byte ptr [rcx - 0x77], cl ; push rdi ; or bl, ch ; ret 0x1f0f
0x000000000010acdc : or byte ptr [rcx - 0x77], cl ; ret 0x894c
0x000000000004ecbc : or byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x68e8
0x00000000000c8c10 : or byte ptr [rcx - 0x77], cl ; sub byte ptr [r8 - 0x77], r9b ; ret
0x00000000000b33c8 : or byte ptr [rcx - 0x7ce7dbb4], cl ; ret
0x0000000000153a4d : or byte ptr [rcx], al ; add al, ah ; clc ; jmp qword ptr [rbx]
0x00000000000d6036 : or byte ptr [rcx], al ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000003645a : or byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x0000000000069f4e : or byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x00000000000d6128 : or byte ptr [rcx], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000013fb7d : or byte ptr [rcx], al ; add byte ptr [rsp + rcx*4 - 0xb], al ; jmp rsp
0x00000000000bb7c7 : or byte ptr [rcx], al ; mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00000000000bb742 : or byte ptr [rcx], al ; mov eax, 1 ; ret
0x0000000000115896 : or byte ptr [rcx], bh ; ret 0x1d75
0x00000000000bb782 : or byte ptr [rcx], bl ; mov eax, 1 ; ret
0x00000000000f104c : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x0000000000024282 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000c9804 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000044698 : or byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000044ac2 : or byte ptr [rcx], dh ; ror byte ptr [rbp - 0x7b], cl ; dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xc031
0x0000000000115895 : or byte ptr [rcx], dil ; ret 0x1d75
0x000000000012ee5e : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000000c91c2 : or byte ptr [rdi + 0x63], cl ; sbb al, 0x99 ; add r11, r9 ; jmp r11
0x00000000000962de : or byte ptr [rdi + rbx + 0x39], dh ; ja 0x962f5 ; jne 0x96309 ; ret
0x000000000005e578 : or byte ptr [rdi + rcx - 0x4a], al ; xor byte ptr [rax - 0x7d], cl ; ret
0x00000000000e0d62 : or byte ptr [rdi], 0x95 ; ret 0xd3eb
0x000000000002eb88 : or byte ptr [rdi], cl ; mov bh, 0xc0 ; ret
0x0000000000079707 : or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x00000000000767c5 : or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000000225ff : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x0000000000042a58 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000bfbcb : or byte ptr [rdi], cl ; test ah, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000021e07 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000000928dc : or byte ptr [rdi], dh ; ret
0x00000000000928db : or byte ptr [rdi], sil ; ret
0x00000000001441c8 : or byte ptr [rdx - 0x12], bh ; jmp qword ptr [rdx]
0x000000000015c800 : or byte ptr [rdx], 0xfc ; jmp qword ptr [rcx]
0x00000000000b9793 : or byte ptr [rdx], al ; add byte ptr [rax], al ; lea rax, [rdi + rsi*8] ; jmp 0xb9769
0x00000000000bb72a : or byte ptr [rdx], al ; xor eax, eax ; ret
0x00000000000bb7a9 : or byte ptr [rdx], bl ; mov eax, 2 ; ret
0x00000000001484b8 : or byte ptr [rdx], ch ; call rcx
0x00000000000dbaf6 : or byte ptr [rip + 0x100f], ah ; ret
0x00000000000dbaf5 : or byte ptr [rip + 0x100f], r12b ; ret
0x00000000000bb815 : or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x0000000000107476 : or byte ptr [rsi + 1], bh ; mov rdi, rbx ; call qword ptr [rax]
0x00000000001075be : or byte ptr [rsi + 2], bh ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000ffba2 : or byte ptr [rsi + rax*4 + 0x5b], dh ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x000000000015feb8 : or byte ptr [rsi], bh ; sti ; call qword ptr [rsi]
0x00000000000bb7df : or byte ptr [rsi], bl ; mov eax, 2 ; ret
0x00000000000bb71c : or byte ptr [rsi], dl ; mov eax, 1 ; ret
0x0000000000003c5e : or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x0000000000035aaf : or cl, bl ; std ; fstp st(1) ; ret
0x00000000000a264e : or cl, byte ptr [rax + 0x29] ; ret 0x5589
0x0000000000115353 : or cl, byte ptr [rax + 0x63] ; stc ; mov eax, 3 ; syscall
0x00000000000722dc : or cl, byte ptr [rax + 1] ; ret 0x8948
0x000000000010cb58 : or cl, byte ptr [rax - 0x73] ; jge 0x10cb72 ; call rax
0x0000000000112118 : or cl, byte ptr [rax - 0x73] ; jge 0x112132 ; call rax
0x0000000000112871 : or cl, byte ptr [rax - 0x73] ; jge 0x11288b ; call rax
0x000000000010eba4 : or cl, byte ptr [rax - 0x73] ; jnp 0x10ec16 ; call rax
0x000000000010f744 : or cl, byte ptr [rax - 0x73] ; jnp 0x10f7a6 ; call rax
0x00000000000ca116 : or cl, byte ptr [rax - 0x77] ; ret 0x31e8
0x000000000003e354 : or cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp + rdx + 0x4c], 0x39 ; ret 0x1075
0x0000000000110c42 : or cl, byte ptr [rax - 0x7d] ; ret 0x4104
0x00000000000a4f02 : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x000000000006a980 : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000070f1f : or cl, byte ptr [rbx + 0x5bd08910] ; ret
0x00000000000d086d : or cl, byte ptr [rcx + 0x63] ; cld ; mov eax, 3 ; syscall
0x0000000000117c36 : or cl, byte ptr [rcx + 0x63] ; cli ; mov eax, 3 ; syscall
0x00000000000d782f : or cl, byte ptr [rcx + 0x63] ; std ; mov eax, 3 ; syscall
0x00000000000e5414 : or cl, byte ptr [rcx + rcx*4 - 0x12] ; mov rdi, r9 ; mov eax, ebx ; syscall
0x000000000011c7c3 : or cl, byte ptr [rcx + rcx*4 - 0x1e] ; add r9, r11 ; call rax
0x00000000000cc4e0 : or cl, byte ptr [rcx - 0xcaf8b30] ; ret
0x000000000003586b : or cl, byte ptr [rdi] ; push rdi ; fisttp dword ptr [rdi] ; ret
0x00000000000cff1b : or cl, byte ptr [rdi] ; test byte ptr [rip + 0x39000001], dl ; ret 0x8e0f
0x00000000001167a5 : or cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x00000000000a5445 : or cl, ch ; ret
0x000000000002d3b4 : or cl, ch ; ret 0xfffe
0x0000000000002b9f : or cl, cl ; clc ; ret
0x00000000000878c5 : or cl, cl ; cmove rax, rdx ; ret
0x00000000000760a8 : or dh, 0x80 ; mov dword ptr [rdi], edx ; ret
0x00000000000476e1 : or dh, al ; or byte ptr [rax], al ; ret
0x00000000000bdea5 : or dh, bl ; ret
0x0000000000094886 : or dh, byte ptr [rbp - 0x11] ; ret
0x00000000000bceda : or dh, byte ptr [rdi + rax*2 + 0x48] ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007d57b : or dh, dh ; ret 0x7404
0x000000000007e801 : or dh, dh ; ret 0x7502
0x00000000000d6a07 : or dh, dh ; ret 0x7540
0x000000000007d597 : or dh, dh ; ret 0xf04
0x00000000000300ee : or dh, dh ; ret 0xfdf
0x0000000000036da9 : or dl, bh ; je 0x36dc0 ; add rsp, 0x10 ; ret
0x0000000000036ebb : or dl, bh ; je 0x36ed0 ; add rsp, 0x10 ; ret
0x000000000003402c : or dword ptr [rax + 1], 0xffffffd8 ; jmp rax
0x00000000000a38d8 : or dword ptr [rax + 1], ecx ; ret
0x0000000000017a93 : or dword ptr [rax + rax], edx ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x58
0x0000000000106d8c : or dword ptr [rax - 0x77], ecx ; out dx, eax ; call rax
0x0000000000108aa6 : or dword ptr [rax - 0x77], ecx ; out dx, eax ; call rdx
0x00000000000699ca : or dword ptr [rax - 0x77], ecx ; ret 0x8348
0x0000000000022246 : or dword ptr [rax - 0x7d], 0x834801c2 ; ret
0x0000000000104068 : or dword ptr [rax - 0x7d], ecx ; in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000c1690 : or dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x0000000000083a4e : or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000003b55e : or dword ptr [rax], eax ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x00000000000d47dd : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000004b62 : or dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000074422 : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000022610 : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edi ; ret
0x00000000000d55a7 : or dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e0058 : or dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x00000000000c145e : or dword ptr [rax], eax ; add byte ptr [rcx - 0x73], al ; add dword ptr [rcx], edi ; ret 0x8e0f
0x00000000000b648b : or dword ptr [rax], eax ; add byte ptr [rcx - 0x73], cl ; add dword ptr [r8 + 0x39], r9d ; ret
0x00000000000945a9 : or dword ptr [rax], eax ; movsxd rax, dword ptr [rsi + rdi*4] ; add rsi, rax ; jmp rsi
0x0000000000108cf6 : or dword ptr [rbx + 0x5d], ebx ; xor eax, eax ; pop r12 ; ret
0x0000000000081bae : or dword ptr [rbx - 0xd], ebx ; ret
0x0000000000077cc7 : or dword ptr [rbx], 0x10 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000006cb2e : or dword ptr [rbx], 0x20 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000775d0 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000007afd0 : or dword ptr [rbx], 8 ; pop rbx ; ret
0x000000000010c910 : or dword ptr [rcx + rcx*4 - 0x19], ecx ; call rax
0x0000000000107e82 : or dword ptr [rcx + rcx*4 - 9], ecx ; call rax
0x00000000000d82a1 : or dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x000000000013fb9d : or dword ptr [rcx], eax ; add byte ptr [rcx + rdx*4], al ; cmc ; jmp rsp
0x00000000000bddc0 : or dword ptr [rdi + 0x90], eax ; xor eax, eax ; ret
0x00000000000368c7 : or dword ptr [rdi + rax*8], edx ; xor eax, eax ; ret
0x00000000000dbba7 : or dword ptr [rdi], 0x80000000 ; xor eax, eax ; ret
0x0000000000036a8a : or dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000000e0482 : or dword ptr [rdi], ecx ; xchg dword ptr [rdi], eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000fc2da : or dword ptr [rip + 0x5b010027], edx ; ret
0x00000000000341de : or dword ptr [rsp + 0x38], 9 ; jmp 0x341ad
0x000000000003529f : or eax, 0x10816c ; orpd xmm0, xmm1 ; ret
0x00000000000dc012 : or eax, 0x10c48348 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000119f56 : or eax, 0x254225 ; add rsp, 8 ; ret
0x00000000000dbfc5 : or eax, 0x30 ; mov dword ptr [rdi + 8], eax ; ret
0x0000000000056ac9 : or eax, 0x358d4800 ; jmp rax
0x000000000011c342 : or eax, 0x38c48348 ; ret
0x0000000000052b8e : or eax, 0x4634800 ; nop ; add rax, r13 ; jmp rax
0x0000000000036063 : or eax, 0x48000000 ; mov esi, eax ; mov eax, ecx ; syscall
0x00000000000a68c2 : or eax, 0x48d08948 ; add esp, 8 ; ret
0x0000000000143f6d : or eax, 0x71e00000 ; out dx, al ; jmp rsp
0x000000000002be9a : or eax, 0x83492374 ; mov byte ptr [rcx], 0x83 ; ret
0x00000000000be03d : or eax, 0x83499066 ; ret 0x4104
0x00000000000d3d5f : or eax, 0x890029aa ; ret
0x00000000000a1742 : or eax, 0x8c48348 ; mov eax, ecx ; pop rbx ; pop rbp ; ret
0x000000000010b05a : or eax, 0x8c48348 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000082c12 : or eax, 0xb1cff ; mov rdx, rcx ; jmp 0x82be7
0x000000000012e493 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x0000000000035eff : or eax, 0xffffffff ; ret
0x000000000007b1e7 : or eax, 1 ; mov dword ptr [rdi + 4], eax ; ret
0x000000000007b1e4 : or eax, 2 ; or eax, 1 ; mov dword ptr [rdi + 4], eax ; ret
0x000000000014c4a8 : or eax, dword ptr [r10] ; ret 0xe0a
0x0000000000080245 : or eax, dword ptr [rax] ; add al, ch ; ret
0x000000000000e882 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000108526 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000e0085 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000082c15 : or eax, dword ptr [rax] ; mov rdx, rcx ; jmp 0x82be4
0x0000000000080741 : or eax, dword ptr [rax] ; movsxd rdx, dword ptr [rax + rdi*4] ; add rax, rdx ; jmp rax
0x00000000000363f1 : or eax, dword ptr [rax] ; nop dword ptr [rax - 0x34] ; mov eax, ebp ; jmp 0x363c6
0x0000000000036f61 : or eax, dword ptr [rax] ; nop dword ptr [rax - 0x34] ; mov eax, ebp ; jmp 0x36f36
0x000000000000efce : or eax, dword ptr [rax] ; push rax ; call qword ptr [rax]
0x000000000000bfe6 : or eax, dword ptr [rax] ; ret 0xc
0x00000000000d836b : or eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x0000000000142725 : or eax, dword ptr [rdx] ; add byte ptr [rcx + rax], al ; std ; call rsp
0x000000000014c4a9 : or eax, dword ptr [rdx] ; ret 0xe0a
0x00000000000354e6 : or eax, ecx ; movq xmm0, rax ; mov dword ptr [rdi], edx ; ret
0x00000000000e372a : or eax, edi ; ret
0x0000000000043071 : or eax, edx ; cmp r8, rdi ; jne 0x43054 ; ret
0x000000000008ea4f : or eax, edx ; mov qword ptr [rdi], rax ; pop rbx ; pop rbp ; ret
0x0000000000035723 : or eax, edx ; movd xmm1, eax ; movaps xmm0, xmm1 ; ret
0x00000000000e3776 : or eax, edx ; or rax, rsi ; or rax, rdi ; ret
0x00000000000391f0 : or eax, edx ; ret
0x00000000000355ed : or eax, edx ; sar eax, 0x1f ; not eax ; and eax, ecx ; ret
0x00000000000f4e66 : or eax, esi ; bswap eax ; ret
0x00000000000dbb42 : or eax, esi ; mov dword ptr [rdi + 8], eax ; xor eax, eax ; ret
0x00000000000e3779 : or eax, esi ; or rax, rdi ; ret
0x00000000000341e2 : or ebx, ebp ; ret 0x1f0f
0x0000000000075f6e : or ebx, esi ; ret
0x0000000000080766 : or ecx, dword ptr [rax + 0x63] ; ret
0x000000000007783b : or ecx, dword ptr [rax + 1] ; ret 0x8949
0x0000000000039d68 : or ecx, dword ptr [rax - 0x77] ; ret 0xb848
0x0000000000028690 : or ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000defdb : or ecx, dword ptr [rax - 0x7d] ; ret 0x4808
0x00000000000eb635 : or ecx, dword ptr [rax - 0x7d] ; ret 0x4c30
0x000000000007afd1 : or ecx, dword ptr [rax] ; pop rbx ; ret
0x0000000000095664 : or ecx, dword ptr [rbx + 0x463b2847] ; sub byte ptr [rbp + 0x63], dh ; ret
0x00000000000956b4 : or ecx, dword ptr [rbx + 0x463b3847] ; cmp byte ptr [rbp + 0x13], dh ; ret
0x00000000000207c1 : or ecx, dword ptr [rcx + rcx*4 - 0x16] ; sub rdx, rbx ; inc rdx ; jmp 0x207da
0x00000000000ece4f : or ecx, dword ptr [rcx - 0x7d] ; ret
0x0000000000035a94 : or ecx, eax ; je 0x35a3c ; ret
0x00000000000b2946 : or edi, 0xffffffff ; mov eax, ecx ; syscall
0x0000000000131708 : or edi, dword ptr [rax + rdi*8] ; lcall ptr [rcx] ; cmp al, 0xf8 ; jmp qword ptr [rdi]
0x00000000000e08d1 : or edi, dword ptr [rdx + 0x5d5b0028] ; pop r12 ; ret
0x0000000000077cc8 : or edx, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000108414 : or esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000007b470 : or esi, dword ptr [rcx] ; xlatb ; mov byte ptr [rax + rsi], dil ; ret
0x000000000006cc72 : or esi, eax ; mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000bba84 : or esi, ebx ; jne 0xbba94 ; ret
0x00000000000eb267 : or esi, esi ; jno 0xeb275 ; cmovne eax, edx ; ret
0x00000000000bba83 : or esi, r11d ; jne 0xbba95 ; ret
0x000000000006cb2f : or esp, dword ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000775d1 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000002f37 : or esp, dword ptr [rdx] ; js 0x2ef1 ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000000bddbf : or qword ptr [rdi + 0x90], rax ; xor eax, eax ; ret
0x00000000000368c6 : or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x0000000000036a89 : or qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000341dd : or qword ptr [rsp + 0x38], 9 ; jmp 0x341ae
0x0000000000035a93 : or r9d, r8d ; je 0x35a3d ; ret
0x0000000000035efe : or rax, 0xffffffffffffffff ; ret
0x000000000008ea4e : or rax, r10 ; mov qword ptr [rdi], rax ; pop rbx ; pop rbp ; ret
0x00000000000e377b : or rax, rdi ; ret
0x0000000000043070 : or rax, rdx ; cmp r8, rdi ; jne 0x43055 ; ret
0x00000000000391ef : or rax, rdx ; ret
0x00000000000e3778 : or rax, rsi ; or rax, rdi ; ret
0x00000000000b2945 : or rdi, 0xffffffffffffffff ; mov eax, ecx ; syscall
0x00000000000352a4 : orpd xmm0, xmm1 ; ret
0x00000000000352a5 : orps xmm0, xmm1 ; ret
0x0000000000035652 : orps xmm0, xmm3 ; ret
0x000000000013f59d : out 0, al ; add ah, dh ; and esp, esi ; jmp rsp
0x00000000000f0fb3 : out 0, al ; add byte ptr [rax], al ; mov r10, rcx ; syscall
0x00000000000f0f68 : out 0, al ; add byte ptr [rax], al ; syscall
0x0000000000069835 : out 0x1e, eax ; xor byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000001ff4b : out 0x41, eax ; call qword ptr [rsi]
0x0000000000103e69 : out 0x48, al ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000110ff8 : out 0x48, al ; mov edi, ebp ; call rax
0x0000000000109336 : out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x00000000000eb21d : out 0x48, al ; mov edi, ebx ; call r14
0x0000000000082673 : out 0x48, al ; mov edi, ebx ; call rax
0x0000000000045848 : out 0x48, eax ; mov eax, edx ; ret
0x00000000000cc33c : out 0x49, al ; movsxd rdi, ebp ; mov eax, 0xcb ; syscall
0x0000000000076275 : out 0x4c, al ; mov edi, ebp ; mov eax, r9d ; syscall
0x0000000000114148 : out 0x4c, al ; mov edi, esi ; xor eax, eax ; call rcx
0x000000000011dc1a : out 0x5b, al ; ret
0x000000000002edc7 : out 0x80, eax ; sete al ; ret
0x00000000000cd53d : out 0x89, al ; ret 0xca83
0x0000000000038371 : out 0x89, eax ; ret
0x000000000006c432 : out 0x89, eax ; ret 0xc031
0x000000000007874e : out 0x90, al ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x000000000000243a : out 0xa9, al ; ret 0xbd07
0x000000000007d335 : out 0xc2, eax ; add byte ptr cs:[rax + 0x39], cl ; ret
0x000000000012d340 : out 0xcf, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000002675 : out 0xdf, eax ; syscall
0x00000000000bfd57 : out 0xe8, al ; ret
0x000000000007ca57 : out 0xe8, eax ; ret
0x00000000000cbe98 : out 0xe8, eax ; ret 0xfad6
0x000000000002aef6 : out 0xf, eax ; xchg eax, ebp ; ret
0x00000000000d210f : out 0xf0, eax ; mov byte ptr [rdi + rax], 0 ; call 0x8e3e8
0x000000000014b589 : out 0xf2, eax ; jmp qword ptr [rax]
0x000000000008f9d9 : out 0xf3, al ; ret
0x00000000000eb300 : out 0xf3, eax ; ret
0x000000000012f068 : out 0xf5, eax ; mov ch, 0xab ; ret
0x0000000000153489 : out 0xf7, eax ; jmp qword ptr [rdx]
0x00000000001406c1 : out 0xf8, eax ; jmp rsp
0x000000000015ab31 : out 0xf9, al ; call qword ptr [rax]
0x000000000015e3b9 : out 0xfa, eax ; jmp qword ptr [rbx]
0x0000000000142f91 : out 0xfd, al ; jmp rsp
0x0000000000142fb1 : out 0xfd, eax ; jmp rsp
0x00000000000648ca : out 0xff, al ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x000000000006484b : out 0xff, eax ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x00000000000742d4 : out 1, al ; mov eax, esi ; ret
0x000000000016193d : out 1, eax ; add byte ptr [rax - 0x58], dh ; sti ; jmp qword ptr [rsi]
0x0000000000142215 : out 1, eax ; add byte ptr [rbx], dh ; cld ; call rsp
0x0000000000100a41 : out 4, al ; lea rax, [rdi + rsi + 8] ; ret
0x00000000000fac02 : out dx, al ; adc bh, dh ; ret 0x8080
0x000000000008e87d : out dx, al ; adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x00000000000742d1 : out dx, al ; add al, 0x83 ; out 1, al ; mov eax, esi ; ret
0x00000000001005a3 : out dx, al ; add dword ptr [rax - 0x78], eax ; ja 0x1005b0 ; ret
0x0000000000091113 : out dx, al ; add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x00000000001005a0 : out dx, al ; add eax, dword ptr [rbx - 0x77bffe12] ; ja 0x1005b3 ; ret
0x0000000000106a73 : out dx, al ; add rdi, 0x18 ; xor eax, eax ; call rbx
0x0000000000108c43 : out dx, al ; add rdi, 0x23b0 ; call rbx
0x0000000000144882 : out dx, al ; call qword ptr [rbx]
0x00000000001448b2 : out dx, al ; call qword ptr [rdi]
0x000000000014489a : out dx, al ; call qword ptr [rsi]
0x00000000000375f4 : out dx, al ; call r12
0x0000000000082ca2 : out dx, al ; call rax
0x0000000000108c90 : out dx, al ; call rbx
0x000000000013dd0a : out dx, al ; call rsp
0x0000000000150169 : out dx, al ; cmc ; jmp qword ptr [rdi]
0x000000000013df62 : out dx, al ; dec esp ; add byte ptr fs:[rax], al ; hlt ; fsubp st(6) ; jmp rsp
0x000000000012e497 : out dx, al ; fcmovb st(0), st(3) ; ret
0x000000000013defa : out dx, al ; inc dword ptr [rcx - 0x3a0c0000] ; out dx, al ; call rsp
0x0000000000144ada : out dx, al ; jmp qword ptr [rax]
0x0000000000144dfa : out dx, al ; jmp qword ptr [rbx]
0x0000000000144122 : out dx, al ; jmp qword ptr [rcx]
0x0000000000144b22 : out dx, al ; jmp qword ptr [rdi]
0x00000000001441ca : out dx, al ; jmp qword ptr [rdx]
0x0000000000143b8a : out dx, al ; jmp qword ptr [rsi]
0x000000000013ddc2 : out dx, al ; jmp rsp
0x0000000000096884 : out dx, al ; lea rcx, [rax + 4] ; call rbx
0x000000000013ddba : out dx, al ; ljmp ptr [rsi + rdx*2 + 0x43140000] ; out dx, al ; jmp rsp
0x0000000000036c29 : out dx, al ; mov eax, 1 ; ret
0x0000000000003123 : out dx, al ; mov ecx, 0xd4a3e95a ; pop rsp ; ret 0x52c0
0x0000000000119e87 : out dx, al ; mov edi, 0xe ; call 0x36188
0x0000000000096730 : out dx, al ; mov rdi, qword ptr [r12] ; lea rcx, [rax + 1] ; call rbx
0x0000000000082ebe : out dx, al ; mov rdi, r12 ; call rax
0x000000000006daf5 : out dx, al ; mov rdi, r14 ; call 0x79da6
0x00000000000e53f3 : out dx, al ; mov rdi, r9 ; mov eax, ebx ; syscall
0x00000000000830ce : out dx, al ; mov rdi, rbx ; call rax
0x0000000000028a33 : out dx, al ; ret 0
0x0000000000119e8e : out dx, al ; ret 0xfff1
0x0000000000140ca9 : out dx, al ; stc ; jmp rsp
0x0000000000142fe1 : out dx, al ; std ; jmp rsp
0x00000000000961b1 : out dx, al ; xor eax, eax ; ret
0x00000000000949fd : out dx, eax ; adc byte ptr [rax + 1], cl ; clc ; ret
0x000000000008ed55 : out dx, eax ; adc byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000013f6f5 : out dx, eax ; add byte ptr [rax], al ; and al, 0x59 ; hlt ; jmp rsp
0x000000000009723d : out dx, eax ; add dword ptr [rax - 0x6af03f7b], edx ; ret 0xf883
0x000000000014308d : out dx, eax ; add dword ptr [rax], eax ; je 0x14308e ; std ; call rsp
0x00000000000d3199 : out dx, eax ; call 0x1f473
0x00000000000ed2df : out dx, eax ; call 0x79563
0x00000000000faead : out dx, eax ; call 0xd7123
0x00000000000b3d37 : out dx, eax ; call 0xeff73
0x00000000000e452f : out dx, eax ; call 0xf0823
0x0000000000107681 : out dx, eax ; call qword ptr [rax]
0x0000000000108ebf : out dx, eax ; call qword ptr [rbx]
0x0000000000145442 : out dx, eax ; call qword ptr [rdi]
0x00000000001452ba : out dx, eax ; call qword ptr [rsi]
0x00000000000bbaf6 : out dx, eax ; call r12
0x00000000000e1b62 : out dx, eax ; call r14
0x0000000000106d8f : out dx, eax ; call rax
0x0000000000096eca : out dx, eax ; call rbx
0x0000000000114986 : out dx, eax ; call rcx
0x0000000000082da8 : out dx, eax ; call rdx
0x000000000013e02a : out dx, eax ; call rsp
0x000000000013e0d2 : out dx, eax ; dec esp ; imul eax, dword ptr [rax], 0 ; push rsp ; adc edi, ebp ; jmp rsp
0x000000000013e42a : out dx, eax ; dec esp ; jnp 0x13e438 ; add ah, dl ; mov ebp, edi ; jmp rsp
0x000000000013e5e2 : out dx, eax ; dec esp ; test byte ptr [rax], al ; add ah, ah ; mov ah, 0xef ; jmp rsp
0x00000000001434a1 : out dx, eax ; in eax, dx ; jmp rdx
0x00000000001458e2 : out dx, eax ; jmp qword ptr [rax]
0x000000000014668a : out dx, eax ; jmp qword ptr [rbx]
0x000000000013e722 : out dx, eax ; jmp qword ptr [rcx + rcx*4 - 0x3c6c0000]
0x00000000001458b2 : out dx, eax ; jmp qword ptr [rcx]
0x000000000014528a : out dx, eax ; jmp qword ptr [rdi]
0x00000000001453b2 : out dx, eax ; jmp qword ptr [rdx]
0x0000000000145f82 : out dx, eax ; jmp qword ptr [rsi]
0x000000000014692a : out dx, eax ; jmp rax
0x0000000000146cca : out dx, eax ; jmp rcx
0x000000000013e0da : out dx, eax ; jmp rsp
0x000000000013e70a : out dx, eax ; lcall ptr [rcx + rcx*4] ; add ah, al ; ret 0xffef
0x00000000000f0b10 : out dx, eax ; leave ; ret
0x000000000013e53a : out dx, eax ; ljmp ptr [rax + rax*4 - 0x5b5c0000] ; out dx, eax ; jmp rsp
0x000000000002d3bc : out dx, eax ; mov ax, 3 ; syscall
0x00000000000d73c2 : out dx, eax ; mov eax, 0x4f ; syscall
0x000000000002b423 : out dx, eax ; mov eax, 3 ; syscall
0x00000000000cfac0 : out dx, eax ; mov eax, dword ptr [rdx + 8] ; ret
0x0000000000076278 : out dx, eax ; mov eax, r9d ; syscall
0x00000000000d31e3 : out dx, eax ; mov qword ptr [rsp + 0x20], r10 ; call 0x1f478
0x00000000000e33a8 : out dx, eax ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000045f18 : out dx, eax ; mov rax, rdx ; ret
0x000000000010f8f4 : out dx, eax ; mov rcx, qword ptr [rbp - 0x168] ; call rcx
0x000000000010c3cf : out dx, eax ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x000000000010c1bc : out dx, eax ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000002289a : out dx, eax ; mov rsi, qword ptr [rdx + rbx + 0x20] ; call rax
0x00000000000bdd28 : out dx, eax ; nop dword ptr [rax - 0x45] ; ret
0x0000000000071609 : out dx, eax ; pop rbx ; ret
0x000000000013e6e2 : out dx, eax ; push qword ptr [rax + rcx*4 - 0x3e9c0000] ; out dx, eax ; jmp rsp
0x000000000013e162 : out dx, eax ; push qword ptr [rbp + rbp*2 + 0x17a40000] ; out dx, eax ; call rsp
0x000000000013e1aa : out dx, eax ; push qword ptr [rdi + rbp*2 + 0x32340000] ; out dx, eax ; jmp rsp
0x00000000000356d7 : out dx, eax ; ret
0x0000000000096540 : out dx, eax ; sub rax, 4 ; ret
0x00000000000454a0 : out dx, eax ; xor eax, eax ; ret
0x000000000011317c : out dx, eax ; xor ebp, ebp ; call 0x1f475
0x0000000000073bbd : out dx, eax ; xor r8d, r8d ; call r12
0x000000000015a09d : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; jo 0x15a058 ; stc ; call rdi
0x00000000000c4666 : outsb dx, byte ptr [rsi] ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000035727 : outsb dx, byte ptr [rsi] ; enter 0x280f, -0x3f ; ret
0x000000000012ec43 : outsb dx, byte ptr [rsi] ; ja 0x12ebcc ; ret 0x48f
0x000000000009477e : outsb dx, byte ptr [rsi] ; je 0x947f0 ; je 0x947a6 ; pop rbx ; ret
0x00000000000af5fe : outsb dx, byte ptr [rsi] ; mov cl, 0x2b ; add byte ptr [rax - 0x77], cl ; ret 0xb5e9
0x000000000011105e : outsb dx, byte ptr [rsi] ; ret
0x000000000012c984 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x0000000000142be1 : outsb dx, byte ptr [rsi] ; std ; jmp rsp
0x0000000000141cb9 : outsb dx, byte ptr [rsi] ; sti ; jmp rsp
0x0000000000003601 : outsb dx, byte ptr [rsi] ; stosb byte ptr [rdi], al ; stc ; cmp eax, 0x952a0fa3 ; ret
0x000000000008967a : outsb dx, byte ptr [rsi] ; xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x00000000000cac72 : outsb dx, byte ptr [rsi] ; xor byte ptr [rcx + 0x5d], al ; pop r14 ; pop r15 ; ret
0x000000000009477d : outsb dx, byte ptr gs:[rsi] ; je 0x947f1 ; je 0x947a7 ; pop rbx ; ret
0x000000000013e1ad : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; xor al, 0x32 ; out dx, eax ; jmp rsp
0x000000000010986c : outsd dx, dword ptr [rsi] ; and byte ptr [rdi], cl ; ret 0x8b48
0x0000000000083e78 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x0000000000089ebe : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000149469 : outsd dx, dword ptr [rsi] ; jmp qword ptr [rsi]
0x000000000008765a : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000008765f : outsd dx, dword ptr [rsi] ; ret
0x000000000012d346 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x00000000000876aa : outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000117b26 : outsd dx, dword ptr [rsi] ; sbb byte ptr [rcx], al ; je 0x117b37 ; xor eax, eax ; ret
0x00000000001045b0 : outsd dx, dword ptr [rsi] ; xor byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], cl ; ret 0x8b4c
0x000000000012d345 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000000959c4 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x00000000000959af : pcmpeqb mm3, qword ptr [rsi] ; ret
0x000000000012e745 : pcmpeqw mm5, qword ptr [rbp + r12*2 - 0x5f] ; mov cs, edi ; ret 0x8b36
0x000000000012e746 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x0000000000093625 : pcmpgtd mm1, qword ptr [rcx - 0x76b7fba9] ; clc ; ret
0x0000000000093c65 : pcmpgtd mm1, qword ptr [rdi] ; xlatb ; ret 0xc085
0x00000000000355c5 : pmovmskb eax, mm0 ; and eax, 0x80 ; ret
0x0000000000035895 : pmovmskb eax, mm0 ; and eax, 8 ; ret
0x0000000000093c73 : pmovmskb eax, mm1 ; bsr eax, eax ; add rax, rdi ; ret
0x0000000000093d15 : pmovmskb eax, mm1 ; test eax, eax ; jne 0x93d99 ; xor eax, eax ; ret
0x00000000000355c4 : pmovmskb eax, xmm0 ; and eax, 0x80 ; ret
0x0000000000035894 : pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x000000000008571a : pmovmskb edx, mm4 ; test edx, edx ; je 0x8572e ; bsf eax, edx ; ret
0x00000000000cc125 : pop qword ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000013e7fd : pop qword ptr [rax] ; add byte ptr [rdi + rax*2 - 0x10], dl ; jmp rsp
0x000000000014139d : pop qword ptr [rcx] ; add ah, dh ; cli ; call rsp
0x000000000015c38c : pop qword ptr [rdx] ; add cl, byte ptr [rsi + 0x41380e0a] ; ret
0x00000000000f0798 : pop r10 ; ret
0x000000000012ebcf : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000051753 : pop r12 ; mov eax, 1 ; pop r13 ; ret
0x0000000000114add : pop r12 ; mov eax, esi ; pop r13 ; ret
0x00000000000a132e : pop r12 ; mov eax, r13d ; pop r13 ; pop r14 ; ret
0x00000000000706b4 : pop r12 ; mov eax, r13d ; pop r13 ; ret
0x000000000006b3f7 : pop r12 ; mov rax, r13 ; pop r13 ; pop r14 ; ret
0x000000000002f610 : pop r12 ; mov rax, rcx ; pop r13 ; ret
0x000000000002f859 : pop r12 ; mov rax, rdi ; pop r13 ; ret
0x00000000000e811f : pop r12 ; neg eax ; pop r13 ; ret
0x0000000000114158 : pop r12 ; pop r13 ; mov eax, ecx ; pop r14 ; ret
0x0000000000090c98 : pop r12 ; pop r13 ; mov eax, edx ; pop r14 ; ret
0x00000000000af0e0 : pop r12 ; pop r13 ; mov rax, r14 ; pop r14 ; ret
0x000000000001f6db : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000002249f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000001ff60 : pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000242e4 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006bdd0 : pop r12 ; pop r13 ; pop rbp ; ret
0x000000000001fed5 : pop r12 ; pop r13 ; ret
0x00000000000a12e4 : pop r12 ; pop r13 ; xor eax, eax ; pop r14 ; ret
0x000000000009f727 : pop r12 ; pop r14 ; ret
0x0000000000038316 : pop r12 ; pop rbp ; ret
0x0000000000021f61 : pop r12 ; ret
0x000000000007158b : pop r12 ; sub rax, r13 ; pop r13 ; pop r14 ; ret
0x000000000010067c : pop r13 ; mov eax, 0xffffffff ; pop r14 ; ret
0x000000000005167d : pop r13 ; mov eax, 1 ; pop r14 ; ret
0x000000000011415a : pop r13 ; mov eax, ecx ; pop r14 ; ret
0x0000000000090c9a : pop r13 ; mov eax, edx ; pop r14 ; ret
0x00000000000af0e2 : pop r13 ; mov rax, r14 ; pop r14 ; ret
0x00000000000e9aec : pop r13 ; pop r14 ; neg eax ; pop r15 ; ret
0x0000000000097c7e : pop r13 ; pop r14 ; neg rax ; pop r15 ; ret
0x000000000003fdab : pop r13 ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x000000000001f6dd : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000224a1 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000001ff62 : pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000242e6 : pop r13 ; pop r14 ; ret
0x0000000000071f7e : pop r13 ; pop r14 ; sar rax, 2 ; ret
0x00000000000eb562 : pop r13 ; pop r14 ; sub eax, edi ; pop r15 ; ret
0x00000000000bc040 : pop r13 ; pop r14 ; xor eax, eax ; pop r15 ; ret
0x000000000006bdd2 : pop r13 ; pop rbp ; ret
0x000000000001fed7 : pop r13 ; ret
0x00000000000a12e6 : pop r13 ; xor eax, eax ; pop r14 ; ret
0x00000000000bb9ef : pop r14 ; and eax, 1 ; pop r15 ; ret
0x0000000000045a2b : pop r14 ; idiv r9 ; pop r15 ; ret
0x00000000000724a3 : pop r14 ; mov eax, 0xffffffff ; pop r15 ; ret
0x000000000003d672 : pop r14 ; mulsd xmm0, xmm0 ; pop r15 ; ret
0x000000000003add2 : pop r14 ; mulss xmm0, xmm0 ; pop r15 ; ret
0x00000000000bba37 : pop r14 ; neg eax ; pop r15 ; ret
0x0000000000097c80 : pop r14 ; neg rax ; pop r15 ; ret
0x000000000003fdad : pop r14 ; pop r15 ; fmulp st(1) ; ret
0x000000000001f6df : pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000224a3 : pop r14 ; pop r15 ; ret
0x000000000001ff64 : pop r14 ; pop rbp ; ret
0x00000000000242e8 : pop r14 ; ret
0x0000000000071f80 : pop r14 ; sar rax, 2 ; ret
0x00000000000eb564 : pop r14 ; sub eax, edi ; pop r15 ; ret
0x00000000000bc042 : pop r14 ; xor eax, eax ; pop r15 ; ret
0x000000000003fdaf : pop r15 ; fmulp st(1) ; ret
0x000000000001f6e1 : pop r15 ; pop rbp ; ret
0x00000000000224a5 : pop r15 ; ret
0x000000000010ed12 : pop r8 ; mov eax, 1 ; ret
0x000000000007b201 : pop r8 ; or eax, 1 ; mov dword ptr [rdi + 4], eax ; ret
0x0000000000109cbe : pop r8 ; pop rbx ; sete al ; movzx eax, al ; ret
0x000000000013dbcf : pop r9 ; clc ; ret 0x6e1f
0x000000000010f516 : pop rax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; call rcx
0x0000000000140765 : pop rax ; add dword ptr [rax], eax ; push rsp ; stc ; jmp rsp
0x000000000002f206 : pop rax ; add eax, ebp ; ret
0x00000000001097ab : pop rax ; add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x000000000010f748 : pop rax ; call rax
0x000000000010f51e : pop rax ; call rcx
0x000000000013ef59 : pop rax ; call rsp
0x0000000000149898 : pop rax ; jl 0x149890 ; call rcx
0x000000000014c839 : pop rax ; jmp qword ptr [rbx]
0x0000000000158d48 : pop rax ; jp 0x158d47 ; jmp qword ptr [rax]
0x000000000015aa18 : pop rax ; loope 0x15aa17 ; call rcx
0x0000000000109596 : pop rax ; mov al, 1 ; mov qword ptr [rbp + 0x68], rcx ; jmp 0x10956a
0x000000000002951b : pop rax ; mov dword ptr [rsp + 8], eax ; call r15
0x0000000000026e75 : pop rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000007d852 : pop rax ; mov eax, 1 ; jmp 0x7d823
0x000000000010ed13 : pop rax ; mov eax, 1 ; ret
0x000000000002ed68 : pop rax ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002ecf6 : pop rax ; mov eax, dword ptr [rdx + rax*4 + 0x200] ; ret
0x0000000000109392 : pop rax ; mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000144898 : pop rax ; movsd dword ptr [rdi], dword ptr [rsi] ; out dx, al ; call qword ptr [rsi]
0x000000000014e848 : pop rax ; nop ; hlt ; jmp qword ptr [rcx]
0x00000000000c3111 : pop rax ; or bh, dh ; ret
0x000000000007b202 : pop rax ; or eax, 1 ; mov dword ptr [rdi + 4], eax ; ret
0x000000000001f521 : pop rax ; pop rbx ; pop rbp ; ret
0x0000000000109cbf : pop rax ; pop rbx ; sete al ; movzx eax, al ; ret
0x00000000000e358d : pop rax ; pop rdi ; call rax
0x0000000000023114 : pop rax ; ret
0x00000000000bff85 : pop rbp ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000140875 : pop rbp ; add dword ptr [rax], eax ; mov ah, 0x85 ; stc ; call rsp
0x000000000010951d : pop rbp ; add eax, edx ; ret
0x00000000000f0a4b : pop rbp ; and eax, 0xc ; pop r12 ; ret
0x000000000006f9a1 : pop rbp ; mov eax, 0xffffffff ; pop r12 ; ret
0x000000000010067d : pop rbp ; mov eax, 0xffffffff ; pop r14 ; ret
0x000000000006f98d : pop rbp ; mov eax, 1 ; pop r12 ; ret
0x000000000005167e : pop rbp ; mov eax, 1 ; pop r14 ; ret
0x00000000000d1f0c : pop rbp ; mov eax, 5 ; pop r12 ; ret
0x000000000011415b : pop rbp ; mov eax, ecx ; pop r14 ; ret
0x000000000005153c : pop rbp ; mov eax, edx ; pop r12 ; ret
0x0000000000090c9b : pop rbp ; mov eax, edx ; pop r14 ; ret
0x00000000000f2691 : pop rbp ; mov eax, esi ; pop r12 ; ret
0x00000000000a129b : pop rbp ; mov eax, r12d ; pop r12 ; pop r13 ; ret
0x00000000000a11a9 : pop rbp ; mov eax, r12d ; pop r12 ; ret
0x00000000001115c1 : pop rbp ; mov qword ptr [r12], rcx ; pop r12 ; ret
0x0000000000090765 : pop rbp ; mov rax, r12 ; pop r12 ; ret
0x00000000000af0e3 : pop rbp ; mov rax, r14 ; pop r14 ; ret
0x000000000006e866 : pop rbp ; mov rax, rdx ; pop r12 ; ret
0x0000000000119e9a : pop rbp ; movsxd rdi, ebx ; mov eax, 3 ; syscall
0x000000000010d769 : pop rbp ; movzx eax, al ; pop r12 ; ret
0x0000000000114adc : pop rbp ; pop r12 ; mov eax, esi ; pop r13 ; ret
0x00000000000706b3 : pop rbp ; pop r12 ; mov eax, r13d ; pop r13 ; ret
0x000000000002f60f : pop rbp ; pop r12 ; mov rax, rcx ; pop r13 ; ret
0x000000000002f858 : pop rbp ; pop r12 ; mov rax, rdi ; pop r13 ; ret
0x00000000000e811e : pop rbp ; pop r12 ; neg eax ; pop r13 ; ret
0x0000000000114157 : pop rbp ; pop r12 ; pop r13 ; mov eax, ecx ; pop r14 ; ret
0x0000000000090c97 : pop rbp ; pop r12 ; pop r13 ; mov eax, edx ; pop r14 ; ret
0x000000000002249e : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000242e3 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000001fed4 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000a12e3 : pop rbp ; pop r12 ; pop r13 ; xor eax, eax ; pop r14 ; ret
0x000000000009f726 : pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000021f60 : pop rbp ; pop r12 ; ret
0x000000000003d671 : pop rbp ; pop r14 ; mulsd xmm0, xmm0 ; pop r15 ; ret
0x000000000003add1 : pop rbp ; pop r14 ; mulss xmm0, xmm0 ; pop r15 ; ret
0x00000000000e9aed : pop rbp ; pop r14 ; neg eax ; pop r15 ; ret
0x0000000000097c7f : pop rbp ; pop r14 ; neg rax ; pop r15 ; ret
0x000000000003fdac : pop rbp ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x000000000001f6de : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000224a2 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000001ff63 : pop rbp ; pop r14 ; pop rbp ; ret
0x00000000000242e7 : pop rbp ; pop r14 ; ret
0x0000000000071f7f : pop rbp ; pop r14 ; sar rax, 2 ; ret
0x00000000000eb563 : pop rbp ; pop r14 ; sub eax, edi ; pop r15 ; ret
0x00000000000bc041 : pop rbp ; pop r14 ; xor eax, eax ; pop r15 ; ret
0x000000000006bdd3 : pop rbp ; pop rbp ; ret
0x00000000000457b8 : pop rbp ; pop rbx ; ret
0x000000000001f523 : pop rbp ; ret
0x000000000007d007 : pop rbp ; ret 0xb
0x0000000000073bd4 : pop rbp ; sub rax, r14 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000f9ab7 : pop rbp ; xor eax, eax ; mov byte ptr [rdx], 0 ; pop r12 ; ret
0x0000000000078751 : pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000000a12e7 : pop rbp ; xor eax, eax ; pop r14 ; ret
0x00000000001407f5 : pop rbx ; add dword ptr [rax], eax ; and al, 0x7b ; stc ; jmp rsp
0x0000000000158d9d : pop rbx ; add dword ptr [rax], eax ; loopne 0x158e22 ; stc ; jmp qword ptr [rbx]
0x0000000000158d45 : pop rbx ; add dword ptr [rax], eax ; pop rax ; jp 0x158d4a ; jmp qword ptr [rax]
0x000000000012bf18 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000009463b : pop rbx ; and eax, 0x3fc00 ; ret
0x000000000009467b : pop rbx ; and eax, 0x7ff80000 ; ret
0x000000000013fa31 : pop rbx ; cmc ; call rsp
0x000000000012bf16 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000006d533 : pop rbx ; div rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000076a2a : pop rbx ; div rbp ; pop rbp ; pop r12 ; ret
0x0000000000073024 : pop rbx ; mov eax, 0xffffffff ; pop rbp ; ret
0x00000000000bb772 : pop rbx ; mov eax, 1 ; ret
0x0000000000039295 : pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000000c0317 : pop rbx ; mov eax, dword ptr [rbp + 4] ; pop rbp ; pop r12 ; ret
0x0000000000094705 : pop rbx ; mov eax, eax ; ret
0x00000000000b2c77 : pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006c101 : pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; ret
0x000000000004d06a : pop rbx ; mov eax, ebp ; pop rbp ; ret
0x000000000006de03 : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006dc9a : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000109fb6 : pop rbx ; movzx eax, al ; pop rbp ; ret
0x000000000007d1ce : pop rbx ; nop ; ret
0x00000000000947a9 : pop rbx ; nop word ptr [rax + rax] ; ret
0x000000000001ff5f : pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000006bdcf : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000038315 : pop rbx ; pop r12 ; pop rbp ; ret
0x000000000010951c : pop rbx ; pop rbp ; add eax, edx ; ret
0x00000000000f0a4a : pop rbx ; pop rbp ; and eax, 0xc ; pop r12 ; ret
0x000000000006f9a0 : pop rbx ; pop rbp ; mov eax, 0xffffffff ; pop r12 ; ret
0x000000000006f98c : pop rbx ; pop rbp ; mov eax, 1 ; pop r12 ; ret
0x00000000000d1f0b : pop rbx ; pop rbp ; mov eax, 5 ; pop r12 ; ret
0x000000000005153b : pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x00000000000f2690 : pop rbx ; pop rbp ; mov eax, esi ; pop r12 ; ret
0x00000000000a129a : pop rbx ; pop rbp ; mov eax, r12d ; pop r12 ; pop r13 ; ret
0x000000000010822c : pop rbx ; pop rbp ; mov eax, r12d ; pop r12 ; ret
0x00000000001115c0 : pop rbx ; pop rbp ; mov qword ptr [r12], rcx ; pop r12 ; ret
0x0000000000090764 : pop rbx ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x000000000006e865 : pop rbx ; pop rbp ; mov rax, rdx ; pop r12 ; ret
0x000000000010d768 : pop rbx ; pop rbp ; movzx eax, al ; pop r12 ; ret
0x0000000000114adb : pop rbx ; pop rbp ; pop r12 ; mov eax, esi ; pop r13 ; ret
0x00000000000706b2 : pop rbx ; pop rbp ; pop r12 ; mov eax, r13d ; pop r13 ; ret
0x000000000002f60e : pop rbx ; pop rbp ; pop r12 ; mov rax, rcx ; pop r13 ; ret
0x000000000002f857 : pop rbx ; pop rbp ; pop r12 ; mov rax, rdi ; pop r13 ; ret
0x00000000000e811d : pop rbx ; pop rbp ; pop r12 ; neg eax ; pop r13 ; ret
0x00000000000242e2 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000001fed3 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009f725 : pop rbx ; pop rbp ; pop r12 ; pop r14 ; ret
0x0000000000021f5f : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000001f522 : pop rbx ; pop rbp ; ret
0x00000000000f9ab6 : pop rbx ; pop rbp ; xor eax, eax ; mov byte ptr [rdx], 0 ; pop r12 ; ret
0x0000000000078750 : pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x000000000002bb56 : pop rbx ; ret
0x000000000012f200 : pop rbx ; ret 0x6f9
0x00000000000dc3f8 : pop rbx ; sar eax, 0x1f ; ret
0x0000000000109cc0 : pop rbx ; sete al ; movzx eax, al ; ret
0x00000000000be79d : pop rbx ; sub eax, 1 ; pop rbp ; ret
0x0000000000096d30 : pop rbx ; sub rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000044687 : pop rbx ; xor eax, eax ; pop rbp ; ret
0x00000000001430dd : pop rcx ; add byte ptr [rax], al ; xor al, 0xf9 ; std ; call rsp
0x00000000000835e4 : pop rcx ; add byte ptr cs:[rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x0000000000076803 : pop rcx ; add byte ptr cs:[rax], al ; nop dword ptr [rax - 0x34] ; pop rdx ; ret
0x00000000000ea2e6 : pop rcx ; add dword ptr [rdx + rdx*8 + 0x3948ec75], eax ; ret
0x000000000003f91e : pop rcx ; add eax, 0xfe2dc ; jmp 0x3f8ef
0x000000000013d430 : pop rcx ; clc ; ret 0x6e1f
0x000000000014de89 : pop rcx ; hlt ; jmp qword ptr [rax]
0x000000000014dea1 : pop rcx ; hlt ; jmp qword ptr [rdx]
0x000000000013f6f9 : pop rcx ; hlt ; jmp rsp
0x000000000002208b : pop rcx ; mov byte ptr [rax + rax], dh ; test rax, rax ; je 0x220a8 ; call rax
0x00000000000bce63 : pop rcx ; ret
0x00000000000e0722 : pop rcx ; ret 0xc383
0x0000000000141bb9 : pop rcx ; sti ; call rsp
0x00000000000d67a2 : pop rdi ; add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x00000000000e358e : pop rdi ; call rax
0x000000000003fdb0 : pop rdi ; fmulp st(1) ; ret
0x000000000012e4be : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000034c20 : pop rdi ; je 0x34c37 ; jmp 0x34beb
0x000000000012d481 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x000000000001f6e2 : pop rdi ; pop rbp ; ret
0x00000000000224a6 : pop rdi ; ret
0x0000000000142ac1 : pop rdi ; std ; call rsp
0x0000000000083514 : pop rdx ; add byte ptr cs:[rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x0000000000003a22 : pop rdx ; int1 ; mov dl, 0x1e ; ret
0x000000000012e0a1 : pop rdx ; je 0x12e06b ; ret 0xacfc
0x0000000000003125 : pop rdx ; jmp 0xffffffffc25d05d3
0x000000000000b419 : pop rdx ; or dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000012f067 : pop rdx ; out 0xf5, eax ; mov ch, 0xab ; ret
0x00000000000f0797 : pop rdx ; pop r10 ; ret
0x00000000000f07bd : pop rdx ; pop rsi ; ret
0x0000000000001b66 : pop rdx ; ret
0x0000000000001ae8 : pop rdx ; ret 0x2a63
0x000000000012ebd0 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000096005 : pop rdx ; test al, 0xf0 ; jne 0x96039 ; lea rax, [rdi - 0x10] ; ret
0x0000000000074bfe : pop rsi ; add byte ptr [rax], al ; nop dword ptr [rax - 0x34] ; mov edx, eax ; jmp 0x74bab
0x00000000000bb9f0 : pop rsi ; and eax, 1 ; pop r15 ; ret
0x00000000001412a1 : pop rsi ; cli ; call rsp
0x0000000000130f51 : pop rsi ; idiv edi ; xchg eax, ebp ; push -9 ; jmp qword ptr [rsi]
0x0000000000045a2c : pop rsi ; idiv r9 ; pop r15 ; ret
0x00000000000724a4 : pop rsi ; mov eax, 0xffffffff ; pop r15 ; ret
0x000000000003d673 : pop rsi ; mulsd xmm0, xmm0 ; pop r15 ; ret
0x000000000003add3 : pop rsi ; mulss xmm0, xmm0 ; pop r15 ; ret
0x00000000000bba38 : pop rsi ; neg eax ; pop r15 ; ret
0x0000000000097c81 : pop rsi ; neg rax ; pop r15 ; ret
0x000000000008ea65 : pop rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000003fdae : pop rsi ; pop r15 ; fmulp st(1) ; ret
0x000000000001f6e0 : pop rsi ; pop r15 ; pop rbp ; ret
0x00000000000224a4 : pop rsi ; pop r15 ; ret
0x000000000001ff65 : pop rsi ; pop rbp ; ret
0x00000000000242e9 : pop rsi ; ret
0x0000000000071f81 : pop rsi ; sar rax, 2 ; ret
0x00000000000d8a54 : pop rsi ; sbb byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000eb565 : pop rsi ; sub eax, edi ; pop r15 ; ret
0x00000000000bc043 : pop rsi ; xor eax, eax ; pop r15 ; ret
0x000000000014ac58 : pop rsp ; add byte ptr [rax], al ; add byte ptr [rdx + rdi*2], al ; add byte ptr [rax], dh ; ret 0xfff2
0x000000000015b374 : pop rsp ; add dword ptr [rcx], 0xfa1ba800 ; jmp rax
0x00000000000d78f3 : pop rsp ; and al, 0x30 ; mov edx, 1 ; jmp 0xd78c9
0x00000000000a2be9 : pop rsp ; and al, 0xf0 ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
0x000000000015beb9 : pop rsp ; cli ; jmp qword ptr [rsi]
0x0000000000141251 : pop rsp ; cli ; jmp rsp
0x0000000000146e74 : pop rsp ; cmp al, 0 ; add byte ptr [rax], bl ; ret
0x000000000015fa74 : pop rsp ; enter 1, 0x78 ; xor al, 0xfb ; jmp rsp
0x00000000000e8f08 : pop rsp ; jmp qword ptr [rdi]
0x000000000015a374 : pop rsp ; jno 0x15a37d ; add byte ptr [rax], cl ; ret 0xfff9
0x00000000001306a0 : pop rsp ; mov dl, 0xf3 ; jmp qword ptr [rax]
0x0000000000025126 : pop rsp ; mov dword ptr [r13 + 0x54], eax ; pop r13 ; pop r14 ; ret
0x000000000013e70c : pop rsp ; mov dword ptr [rax], eax ; add ah, al ; ret 0xffef
0x0000000000051754 : pop rsp ; mov eax, 1 ; pop r13 ; ret
0x000000000014bd74 : pop rsp ; mov eax, dword ptr [rax] ; add byte ptr [rax], bl ; push rdx ; jmp rsp
0x0000000000114ade : pop rsp ; mov eax, esi ; pop r13 ; ret
0x00000000000a132f : pop rsp ; mov eax, r13d ; pop r13 ; pop r14 ; ret
0x00000000000706b5 : pop rsp ; mov eax, r13d ; pop r13 ; ret
0x0000000000114186 : pop rsp ; mov ecx, eax ; pop r13 ; mov eax, ecx ; pop r14 ; ret
0x000000000006b3f8 : pop rsp ; mov rax, r13 ; pop r13 ; pop r14 ; ret
0x000000000002f611 : pop rsp ; mov rax, rcx ; pop r13 ; ret
0x000000000002f85a : pop rsp ; mov rax, rdi ; pop r13 ; ret
0x00000000000e8120 : pop rsp ; neg eax ; pop r13 ; ret
0x0000000000114159 : pop rsp ; pop r13 ; mov eax, ecx ; pop r14 ; ret
0x0000000000090c99 : pop rsp ; pop r13 ; mov eax, edx ; pop r14 ; ret
0x00000000000af0e1 : pop rsp ; pop r13 ; mov rax, r14 ; pop r14 ; ret
0x00000000000e9aeb : pop rsp ; pop r13 ; pop r14 ; neg eax ; pop r15 ; ret
0x000000000003fdaa : pop rsp ; pop r13 ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x000000000001f6dc : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000224a0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000001ff61 : pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000242e5 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000071f7d : pop rsp ; pop r13 ; pop r14 ; sar rax, 2 ; ret
0x00000000000eb561 : pop rsp ; pop r13 ; pop r14 ; sub eax, edi ; pop r15 ; ret
0x00000000000bc03f : pop rsp ; pop r13 ; pop r14 ; xor eax, eax ; pop r15 ; ret
0x000000000006bdd1 : pop rsp ; pop r13 ; pop rbp ; ret
0x000000000001fed6 : pop rsp ; pop r13 ; ret
0x00000000000a12e5 : pop rsp ; pop r13 ; xor eax, eax ; pop r14 ; ret
0x000000000009f728 : pop rsp ; pop r14 ; ret
0x0000000000038317 : pop rsp ; pop rbp ; ret
0x0000000000149a74 : pop rsp ; push -0x7f080000 ; jmp rsi
0x0000000000158874 : pop rsp ; push rsi ; add dword ptr [rax], eax ; cmp byte ptr [rbx - 7], ah ; jmp qword ptr [rax]
0x00000000000037c4 : pop rsp ; ret
0x0000000000003129 : pop rsp ; ret 0x52c0
0x000000000015f274 : pop rsp ; rol byte ptr [rcx], 0 ; cwde ; sti ; call rdx
0x000000000007158c : pop rsp ; sub rax, r13 ; pop r13 ; pop r14 ; ret
0x00000000000f50da : popfq ; mov edx, eax ; jmp 0xf50a5
0x00000000000ee3fc : popfq ; push -0x17000001 ; ret
0x00000000000cb1ab : popfq ; push -0x7c000001 ; ret
0x000000000007cf3f : popfq ; ret 0xb
0x000000000009457d : popfq ; ret 0xea81
0x0000000000142d11 : popfq ; std ; call rsp
0x00000000000a5caf : psubb mm1, qword ptr [rax - 0x77] ; ret
0x0000000000073070 : psubsb mm7, mm2 ; ret
0x00000000000ee3fd : push -0x17000001 ; ret
0x0000000000002bb5 : push -0x7329150 ; ret
0x00000000000ed703 : push -0x76000001 ; ret 0x8948
0x0000000000045196 : push -0x76b6fff2 ; ret 0x18b9
0x000000000003e952 : push -0x76b71177 ; ret 0x8948
0x00000000000cb1ac : push -0x7c000001 ; ret
0x0000000000149b05 : push -0x7cf80000 ; jmp qword ptr [rcx]
0x0000000000149a75 : push -0x7f080000 ; jmp rsi
0x000000000013fa99 : push -0xb ; jmp rsp
0x0000000000095ff7 : push -0xfb872b8 ; ret
0x0000000000142b71 : push -3 ; jmp rsp
0x0000000000130f55 : push -9 ; jmp qword ptr [rsi]
0x00000000000b3eb1 : push 0 ; add byte ptr [rax], al ; syscall
0x000000000014cc07 : push 0x180e0a01 ; ret
0x00000000000e5a05 : push 0x28 ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000000daf34 : push 0x48 ; add esp, 0x38 ; ret
0x00000000000ae45c : push 0x5bd87501 ; pop rbp ; pop r12 ; ret
0x0000000000106dcd : push 0x5c415d5b ; pop r13 ; ret
0x000000000012ec42 : push 0x6e ; ja 0x12ebcd ; ret 0x48f
0x000000000010eb56 : push 2 ; add rdi, 0x68 ; call rcx
0x000000000014257b : push qword ptr [rax + rax - 0x3a5bfffe] ; cld ; call rsp
0x000000000013f5e3 : push qword ptr [rax + rbp*8 + 0x31240000] ; hlt ; call rsp
0x000000000013e6e3 : push qword ptr [rax + rcx*4 - 0x3e9c0000] ; out dx, eax ; jmp rsp
0x000000000013f083 : push qword ptr [rax + rcx*8 + 0x79e40000] ; jmp rsp
0x0000000000103104 : push qword ptr [rax + rdx + 0x44] ; mov eax, ebp ; syscall
0x000000000013070f : push qword ptr [rax - 0x4e] ; jmp qword ptr [rax]
0x0000000000140953 : push qword ptr [rax - 0x72abffff] ; stc ; call rsp
0x0000000000130a63 : push qword ptr [rax] ; fcompi st(5) ; jmp qword ptr [rax]
0x00000000000e3573 : push qword ptr [rbp + 7] ; mov eax, 0x27 ; syscall
0x00000000000e1a26 : push qword ptr [rbp + 7] ; ret
0x000000000011b478 : push qword ptr [rbp + rax + 0x48] ; add esp, 8 ; ret
0x000000000013e163 : push qword ptr [rbp + rbp*2 + 0x17a40000] ; out dx, eax ; call rsp
0x0000000000045f16 : push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x000000000009653e : push qword ptr [rbp - 0x11] ; sub rax, 4 ; ret
0x00000000000fc58c : push qword ptr [rbp - 0x17] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000045846 : push qword ptr [rbp - 0x19] ; mov rax, rdx ; ret
0x0000000000103e67 : push qword ptr [rbp - 0x1a] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000011dc18 : push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x00000000000eea5b : push qword ptr [rbp - 0x1e] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000079e2d : push qword ptr [rbp - 0x22] ; pop rbx ; ret
0x0000000000089a63 : push qword ptr [rbp - 0xe] ; sub rax, 1 ; ret
0x00000000000b2d5d : push qword ptr [rbx + 0x39] ; ret
0x00000000000d5200 : push qword ptr [rbx + 0x3c] ; ret
0x00000000000361f0 : push qword ptr [rbx + 1] ; ret
0x00000000000d62f1 : push qword ptr [rbx + 3] ; mov eax, edx ; ret
0x000000000004503a : push qword ptr [rbx + 3] ; xor eax, eax ; ret
0x0000000000071604 : push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x000000000014205b : push qword ptr [rbx + rbx*8 + 0x1ff40001] ; cld ; jmp rsp
0x0000000000141bb3 : push qword ptr [rbx + rdi*4 + 0x59040001] ; sti ; call rsp
0x00000000000e54ff : push qword ptr [rbx - 0x48] ; adc al, 0 ; add byte ptr [rax], al ; syscall
0x000000000013434f : push qword ptr [rcx + rbp*4 - 0x56330003] ; std ; jmp rsp
0x0000000000023110 : push qword ptr [rcx + rdx - 0x18] ; pop rax ; ret
0x00000000000d1773 : push qword ptr [rcx] ; fild dword ptr [rbp - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret
0x00000000000cefa6 : push qword ptr [rcx] ; fild dword ptr [rbx - 0x6af0fd08] ; ret
0x00000000000ea376 : push qword ptr [rcx] ; imul al ; ret 0xfa5e
0x00000000000801f3 : push qword ptr [rcx] ; imul cl ; ret 0xfffe
0x000000000007356f : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000062319 : push qword ptr [rcx] ; rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x000000000007f856 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000d651a : push qword ptr [rdi + 0x17] ; ret
0x00000000000d63be : push qword ptr [rdi + 0x1b] ; ret
0x00000000000d640d : push qword ptr [rdi + 0x1c] ; ret
0x0000000000035ed2 : push qword ptr [rdi + 0x1d] ; ret
0x00000000000d6573 : push qword ptr [rdi + 0x1e] ; ret
0x00000000000dbd13 : push qword ptr [rdi + 0x24] ; ret
0x00000000000de60c : push qword ptr [rdi + 0x25] ; ret
0x00000000000d6e9b : push qword ptr [rdi + 0x2e] ; ret
0x00000000000d6941 : push qword ptr [rdi + 0x32] ; add rsp, 0x78 ; ret
0x00000000000daf32 : push qword ptr [rdi + 0x6a] ; add rsp, 0x38 ; ret
0x00000000000dcde4 : push qword ptr [rdi + 0x73] ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x000000000003625f : push qword ptr [rdi + 1] ; ret
0x00000000000361c9 : push qword ptr [rdi + 2] ; ret
0x00000000000e3506 : push qword ptr [rdi + 3] ; pop rbx ; pop rbp ; ret
0x00000000000718b9 : push qword ptr [rdi + 4] ; ret
0x00000000000e5cf0 : push qword ptr [rdi + rax - 0x7d] ; rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x00000000001404f3 : push qword ptr [rdi + rax*2 + 0x26640001] ; clc ; jmp rsp
0x000000000013e1ab : push qword ptr [rdi + rbp*2 + 0x32340000] ; out dx, eax ; jmp rsp
0x000000000013ea83 : push qword ptr [rdi + rbx*4 + 0x46e40000] ; int1 ; call rsp
0x000000000007306e : push qword ptr [rdi + rcx - 0x18] ; cli ; ret
0x000000000006c29d : push qword ptr [rdx + rbx*4 - 0x77] ; ret 0xe283
0x0000000000142023 : push qword ptr [rdx + rbx*8 + 0x1d940001] ; cld ; call rsp
0x000000000006d2c3 : push qword ptr [rdx + rcx + 0x48] ; mov eax, edx ; pop rbx ; ret
0x0000000000141b73 : push qword ptr [rdx + rdi*4 + 0x56040001] ; sti ; call rsp
0x0000000000141a2b : push qword ptr [rdx + rsi*4 + 0x33a40001] ; sti ; jmp rsp
0x0000000000025716 : push qword ptr [rdx - 0x18] ; ret 0xf6a
0x00000000000af15a : push qword ptr [rsp + rsi - 0x77] ; ret 0xe283
0x0000000000140d63 : push qword ptr [rsp + rsi*2 - 0x8bbffff] ; stc ; call rsp
0x0000000000141a8b : push qword ptr [rsp + rsi*4 + 0x40940001] ; sti ; call rsp
0x000000000010ec12 : push r12 ; mov eax, 1 ; ret
0x0000000000025129 : push r12 ; pop r13 ; pop r14 ; ret
0x00000000000af080 : push r12 ; push rbp ; push rbx ; mov rbx, rsi ; syscall
0x00000000000af07e : push r13 ; push r12 ; push rbp ; push rbx ; mov rbx, rsi ; syscall
0x0000000000079558 : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000007d8b3 : push rax ; adc byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000010f6e1 : push rax ; adc byte ptr [rax + 1], bh ; ret
0x0000000000070b9e : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000007a6e9 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000107319 : push rax ; adc dh, dh ; ret 0x7401
0x000000000009f600 : push rax ; add al, 0x73 ; cmp al, 0x83 ; ret 0x8b05
0x0000000000079559 : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000000bfe1 : push rax ; add byte ptr [rax], al ; and al, byte ptr [rax] ; or eax, dword ptr [rax] ; ret 0xc
0x000000000007450f : push rax ; add byte ptr [rax], al ; nop dword ptr [rax - 0x34] ; mov edx, eax ; jmp 0x744bf
0x000000000007450e : push rax ; add byte ptr [rax], al ; nop dword ptr [rax - 0x34] ; mov edx, eax ; jmp 0x744c0
0x00000000000767c0 : push rax ; add dword ptr [rax - 0x77], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000000c3fc8 : push rax ; add dword ptr [rax], eax ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret
0x00000000000e28c6 : push rax ; add ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x48 ; ret 0xc148
0x000000000000efd0 : push rax ; call qword ptr [rax]
0x00000000001309db : push rax ; cdq ; cmc ; inc dword ptr [rax] ; pushfq ; cmc ; call qword ptr [rax]
0x000000000014f580 : push rax ; cmc ; jmp qword ptr [rbx]
0x00000000000dbde5 : push rax ; cmp byte ptr [rsi + 0x41], ah ; mov dword ptr [rax + 0x21], esi ; ret
0x0000000000133f34 : push rax ; cmp ebp, 0xfd8168ff ; call rax
0x0000000000131c43 : push rax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; clc ; jmp qword ptr [rax]
0x0000000000131c3f : push rax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; clc ; push rax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; clc ; jmp qword ptr [rax]
0x000000000012ba14 : push rax ; cwde ; int1 ; call qword ptr [rax]
0x00000000000278e2 : push rax ; dec dword ptr [rcx - 0x7d] ; ret 0x4801
0x000000000015a970 : push rax ; fdivp st(1) ; call rcx
0x0000000000130a5b : push rax ; fdivrp st(5) ; call qword ptr [rax]
0x000000000005c6bf : push rax ; jmp 0x588df
0x000000000002817d : push rax ; mov dword ptr [rsp + 8], eax ; call r12
0x000000000002894c : push rax ; mov dword ptr [rsp + 8], eax ; call r15
0x0000000000130a20 : push rax ; mov edi, 0xc1a0fff5 ; cmc ; push rax ; ret
0x000000000010f4fa : push rax ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000029a96 : push rax ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x00000000000eeef6 : push rax ; mov rsi, rdx ; call rax
0x0000000000144880 : push rax ; movsd dword ptr [rdi], dword ptr [rsi] ; out dx, al ; call qword ptr [rbx]
0x0000000000155520 : push rax ; nop ; clc ; jmp qword ptr [rsi]
0x000000000010f579 : push rax ; or al, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000010bf19 : push rax ; or byte ptr [rax + 1], bh ; ret
0x000000000002172e : push rax ; or byte ptr [rax], al ; add bl, ch ; or byte ptr [rax - 1], cl ; ret 0x3941
0x000000000004c644 : push rax ; or byte ptr [rcx - 0x77], cl ; push rdi ; or bl, ch ; ret 0x1f0f
0x000000000007d57a : push rax ; or dh, dh ; ret 0x7404
0x000000000007d596 : push rax ; or dh, dh ; ret 0xf04
0x00000000001434a0 : push rax ; out dx, eax ; in eax, dx ; jmp rdx
0x00000000001467d0 : push rax ; out dx, eax ; jmp qword ptr [rcx]
0x000000000013dbce : push rax ; pop r9 ; clc ; ret 0x6e1f
0x000000000010749e : push rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001075e2 : push rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000132e57 : push rax ; push rsi ; std ; jmp rax
0x00000000000353a3 : push rax ; ret
0x000000000015f0c0 : push rax ; sbb al, 0xfb ; jmp qword ptr [rax]
0x000000000007a6da : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000007119e : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00000000000ec999 : push rax ; sbb dh, dh ; ret 0x7504
0x00000000000eff29 : push rax ; shr ax, 0xe ; and eax, 1 ; ret
0x00000000001605c0 : push rax ; sti ; call rdx
0x0000000000107522 : push rax ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000112cdd : push rbp ; adc byte ptr [rbx + rcx*4 + 0x24], cl ; ret 0x854d
0x0000000000112e41 : push rbp ; adc byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8348
0x00000000000d546b : push rbp ; add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000148785 : push rbp ; add byte ptr [rax], al ; cmp byte ptr [rdx - 0xe], al ; call rsp
0x000000000010bbe5 : push rbp ; add byte ptr [rbx + 0x634801ea], al ; ret 0xd285
0x0000000000158785 : push rbp ; add dword ptr [rax], eax ; or byte ptr [rax - 7], ah ; jmp qword ptr [rax]
0x00000000000cf1de : push rbp ; and byte ptr [rcx - 0x7d], al ; ret 0x4a01
0x000000000013161b : push rbp ; cmp bh, al ; inc dword ptr [rbx] ; cmp edi, eax ; call qword ptr [rcx]
0x0000000000001c89 : push rbp ; je 0x1cb7 ; ret
0x0000000000064a5d : push rbp ; mov byte ptr [rdi], cl ; xchg dword ptr [rbp - 0x76fffffd], ebp ; ret 0x348
0x00000000000b3cd8 : push rbp ; mov eax, 0xc045894c ; call 0xeff78
0x0000000000082817 : push rbp ; nop ; add byte ptr cs:[rax - 0x77], cl ; ret 0x8949
0x00000000000efb56 : push rbp ; nop ; mov rdx, r12 ; call rax
0x00000000000ef7d1 : push rbp ; or byte ptr [rax - 0x77], 0xda ; call rax
0x000000000007e800 : push rbp ; or dh, dh ; ret 0x7502
0x00000000000af07f : push rbp ; push r12 ; push rbp ; push rbx ; mov rbx, rsi ; syscall
0x00000000000af082 : push rbp ; push rbx ; mov rbx, rsi ; syscall
0x00000000000a417d : push rbp ; ret 0x6348
0x00000000000a3e58 : push rbp ; ret 0xb70f
0x00000000000a4319 : push rbp ; ret 0xf41
0x0000000000002596 : push rbp ; sbb esi, dword ptr [rdx] ; sahf ; jl 0x2533 ; loop 0x257e ; ret 0x23cb
0x0000000000142a29 : push rbp ; std ; jmp rsp
0x00000000000f0fd4 : push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x0000000000088b2a : push rbp ; xor rax, rax ; ret
0x00000000000be458 : push rbx ; adc byte ptr [rax + 0x39], cl ; ret 0x574
0x00000000000ffb90 : push rbx ; adc dword ptr [rbx + 0x5d], ebx ; pop r12 ; ret
0x00000000000bbc85 : push rbx ; add al, 0xeb ; ret 0xc883
0x000000000000048d : push rbx ; add al, 4 ; ret 0x6080
0x00000000001485bd : push rbx ; add byte ptr [rax], al ; jo 0x148600 ; jmp qword ptr [rsi]
0x00000000000e2ee1 : push rbx ; add dword ptr [rax - 0x73], ecx ; add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x0000000000032b13 : push rbx ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000001406bd : push rbx ; add dword ptr [rax], eax ; hlt ; out 0xf8, eax ; jmp rsp
0x000000000000201b : push rbx ; cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x00000000000b482d : push rbx ; je 0xb4808 ; mov eax, 1 ; ret
0x00000000000b482c : push rbx ; je 0xb4809 ; mov eax, 1 ; ret
0x0000000000095fdc : push rbx ; lea rax, [rdi - 0x10] ; ret
0x0000000000078769 : push rbx ; mov rbx, rdx ; jne 0x7877f ; pop rbx ; ret
0x00000000000af083 : push rbx ; mov rbx, rsi ; syscall
0x000000000006b451 : push rbx ; or al, 0xf6 ; ret 0x7404
0x0000000000079706 : push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000003c5c : push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x0000000000036d44 : push rbx ; ret
0x00000000000ed721 : push rbx ; sbb dh, dh ; ret 0x8b08
0x0000000000072be7 : push rbx ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x000000000012e09c : push rbx ; xchg eax, edx ; jae 0x12e07b ; push rsi ; pop rdx ; je 0x12e070 ; ret 0xacfc
0x000000000010bef9 : push rcx ; adc byte ptr [rax + 1], bh ; ret
0x00000000000bdea2 : push rcx ; add al, 0x75 ; or dh, bl ; ret
0x0000000000140635 : push rcx ; add dword ptr [rax], eax ; jrcxz 0x140639 ; jmp rsp
0x0000000000093a42 : push rcx ; add esi, eax ; add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x000000000012d325 : push rcx ; call qword ptr [rsi]
0x00000000001410e1 : push rcx ; cli ; call rsp
0x00000000000f6bdb : push rcx ; cmp al, 0x27 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000001b00 : push rcx ; jns 0x1b0d ; ret
0x000000000014c7b6 : push rcx ; ret
0x0000000000141b11 : push rcx ; sti ; jmp rsp
0x0000000000082220 : push rdi ; adc byte ptr [rax + 0x33], cl ; push rdi ; or byte ptr [rax + 0x39], cl ; ret 0x5d74
0x00000000000c8ebe : push rdi ; adc byte ptr [rax + 0x39], cl ; ret 0xd377
0x00000000000f0885 : push rdi ; adc byte ptr [rax - 0x77], cl ; clc ; test edx, edx ; jne 0xf0899 ; ret
0x00000000000961de : push rdi ; adc byte ptr [rbp + rcx*4 + 0x4e], cl ; adc byte ptr [rcx + 0x39], al ; ret
0x00000000000936d8 : push rdi ; add al, 0x48 ; lea eax, [rdi + 5] ; ret
0x0000000000093638 : push rdi ; add al, 0x48 ; mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x0000000000093628 : push rdi ; add al, 0x48 ; mov eax, edi ; ret
0x000000000002e8b0 : push rdi ; add al, 0x72 ; or al, 0xf3 ; ret
0x0000000000083770 : push rdi ; add byte ptr cs:[rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x0000000000140745 : push rdi ; add dword ptr [rax], eax ; test byte ptr [rax - 7], al ; jmp rsp
0x00000000000b5ad5 : push rdi ; add ebx, ebp ; mov cl, 0xf3 ; ret
0x000000000010f599 : push rdi ; cmp byte ptr [rax + 1], bh ; ret
0x00000000000b9a23 : push rdi ; fadd dword ptr [rbp - 0x77] ; ret
0x000000000009fd78 : push rdi ; fild word ptr [rcx + 0x29] ; ret
0x000000000003586d : push rdi ; fisttp dword ptr [rdi] ; ret
0x0000000000148d61 : push rdi ; jmp rcx
0x00000000000794a8 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x000000000006a901 : push rdi ; or al, 0 ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000ffc5a : push rdi ; or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x000000000004c648 : push rdi ; or bl, ch ; ret 0x1f0f
0x0000000000082224 : push rdi ; or byte ptr [rax + 0x39], cl ; ret 0x5d74
0x0000000000034d70 : push rdi ; or byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8b48
0x000000000004709a : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x00000000000457aa : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000001175a2 : push rdi ; or byte ptr [rcx + rcx*4 + 0x2c], cl ; ret 0x8b41
0x00000000000457b1 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000005e577 : push rdi ; or byte ptr [rdi + rcx - 0x4a], al ; xor byte ptr [rax - 0x7d], cl ; ret
0x00000000000767c4 : push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x000000000015002e : push rdi ; ret
0x000000000003a39a : push rdi ; ret 0xffef
0x0000000000114829 : push rdi ; sbb bl, dh ; ret
0x0000000000114854 : push rdi ; sbb byte ptr [rax + 1], bh ; ret
0x00000000000347d0 : push rdi ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x0000000000132e51 : push rdi ; std ; call qword ptr [rax]
0x0000000000132e55 : push rdi ; std ; push rax ; push rsi ; std ; jmp rax
0x000000000010f5f9 : push rdi ; sub byte ptr [rax + 1], bh ; ret
0x00000000000e1d94 : push rdi ; sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cb232 : push rdi ; xor byte ptr [rcx - 0x75], al ; xor al, 0x39 ; ret 0x840f
0x000000000008765b : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000001484b5 : push rdx ; add byte ptr [rax], al ; or byte ptr [rdx], ch ; call rcx
0x0000000000140685 : push rdx ; add dword ptr [rax], eax ; xor al, 0xe5 ; clc ; call rsp
0x000000000010076e : push rdx ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x0000000000094214 : push rdx ; add eax, dword ptr [rdi + rcx - 0x4a] ; ret 0x3945
0x00000000001309cd : push rdx ; cmc ; inc eax ; xchg eax, ebx ; cmc ; call rax
0x000000000014bd79 : push rdx ; jmp rsp
0x0000000000001ae1 : push rdx ; mov edx, 0x855233da ; mov bl, 0x5a ; ret 0x2a63
0x0000000000083886 : push rdx ; or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xd], cl ; ret
0x000000000014513e : push rdx ; ret
0x00000000000ee4fa : push rdx ; ret 0xffff
0x00000000000e1395 : push rsi ; adc byte ptr [rax - 0x77], cl ; jo 0xe13a9 ; ret
0x00000000000bdc4a : push rsi ; add al, 0x74 ; add dh, bl ; ret
0x000000000013ddbd : push rsi ; add byte ptr [rax], al ; adc al, 0x43 ; out dx, al ; jmp rsp
0x0000000000158875 : push rsi ; add dword ptr [rax], eax ; cmp byte ptr [rbx - 7], ah ; jmp qword ptr [rax]
0x0000000000141169 : push rsi ; cli ; call rsp
0x000000000012ec40 : push rsi ; cli ; push 0x6e ; ja 0x12ebcf ; ret 0x48f
0x00000000000eeed6 : push rsi ; je 0xeeee8 ; mov eax, 7 ; ret
0x00000000000d57bf : push rsi ; js 0xd5813 ; mov dword ptr [rdi + 0x80], edx ; ret
0x00000000000d60ec : push rsi ; js 0xd6140 ; mov dword ptr [rdi + 0x100], edx ; ret
0x00000000000e13ce : push rsi ; or byte ptr [rax - 0x77], cl ; jo 0xe13ea ; ret
0x000000000008eaed : push rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000000000012e0a0 : push rsi ; pop rdx ; je 0x12e06c ; ret 0xacfc
0x0000000000035653 : push rsi ; ret
0x00000000000c50e1 : push rsi ; ret 0x7408
0x00000000000c314e : push rsi ; ret 0x7420
0x0000000000115a22 : push rsi ; sbb byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8b41
0x0000000000132e5d : push rsi ; std ; call rax
0x0000000000132e61 : push rsi ; std ; jmp qword ptr [rax]
0x0000000000132e59 : push rsi ; std ; jmp rax
0x0000000000141b79 : push rsi ; sti ; call rsp
0x00000000000d0516 : push rsi ; sub byte ptr [rax - 0x7d], cl ; ret
0x00000000000daccb : push rsi ; xor ax, ax ; ret
0x000000000013e0d8 : push rsp ; adc edi, ebp ; jmp rsp
0x00000000000dbd63 : push rsp ; add byte ptr [rax], al ; movsxd rdi, edi ; mov eax, ecx ; syscall
0x0000000000114353 : push rsp ; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000ef74d : push rsp ; and al, 0x18 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, r13 ; call rax
0x00000000000ef7cd : push rsp ; and al, 0x18 ; mov dword ptr [rbp - 0x80], edx ; mov rdx, rbx ; call rax
0x00000000000ebdf5 : push rsp ; and al, 0x18 ; mov edi, 0x2000004 ; call rax
0x00000000000ebce8 : push rsp ; and al, 0x18 ; mov rsi, qword ptr [rsp + 8] ; call rax
0x00000000000d31e6 : push rsp ; and al, 0x20 ; call 0x1f475
0x000000000007de83 : push rsp ; and al, 0x28 ; call rax
0x00000000000dd50e : push rsp ; and al, 0x38 ; mov eax, edx ; add rsp, 0x48 ; ret
0x000000000008021d : push rsp ; and al, 0x48 ; call rax
0x0000000000069e7e : push rsp ; and al, 0xc ; add rsp, 0x18 ; mov eax, edx ; ret
0x0000000000035b34 : push rsp ; and al, 0xf0 ; mov dword ptr [rdi], eax ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000047274 : push rsp ; and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000004722e : push rsp ; and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000000e354b : push rsp ; and al, 8 ; mov eax, 0x38 ; syscall
0x00000000001308c5 : push rsp ; call rax
0x00000000001421c1 : push rsp ; cld ; call rsp
0x0000000000141119 : push rsp ; cli ; jmp rsp
0x0000000000140358 : push rsp ; fcompi st(7) ; call rsp
0x000000000015a96c : push rsp ; ja 0x15a977 ; add byte ptr [rax - 0x22], dl ; stc ; call rcx
0x000000000014a36c : push rsp ; jno 0x14a376 ; add al, al ; stosb byte ptr [rdi], al ; call qword ptr [rsi]
0x0000000000093d7b : push rsp ; lea rax, [rdi + rax + 0x10] ; ret
0x000000000015de6c : push rsp ; lodsb al, byte ptr [rsi] ; add dword ptr [rax], eax ; nop ; iretd ; cli ; jmp qword ptr [rbx]
0x0000000000142620 : push rsp ; loope 0x142622 ; call rsp
0x000000000010ec13 : push rsp ; mov eax, 1 ; ret
0x000000000015bd6c : push rsp ; mov eax, dword ptr [rcx] ; add al, dh ; and bh, ah ; jmp qword ptr [rdi]
0x00000000000cdf61 : push rsp ; or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000143f6c : push rsp ; or eax, 0x71e00000 ; out dx, al ; jmp rsp
0x0000000000140ca8 : push rsp ; out dx, al ; stc ; jmp rsp
0x000000000002512a : push rsp ; pop r13 ; pop r14 ; ret
0x00000000001430db : push rsp ; pop rcx ; add byte ptr [rax], al ; xor al, 0xf9 ; std ; call rsp
0x00000000000af081 : push rsp ; push rbp ; push rbx ; mov rbx, rsi ; syscall
0x00000000001410e0 : push rsp ; push rcx ; cli ; call rsp
0x0000000000141118 : push rsp ; push rsp ; cli ; jmp rsp
0x000000000003564d : push rsp ; ret
0x000000000002fe0e : push rsp ; ret 0x48e8
0x000000000015046c : push rsp ; rol byte ptr [rax], cl ; add byte ptr [rax - 6], ah ; cmc ; call rcx
0x0000000000141760 : push rsp ; sar edx, 1 ; call rsp
0x00000000000423eb : push rsp ; sbb eax, dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0x840f
0x0000000000140768 : push rsp ; stc ; jmp rsp
0x000000000013ee18 : push rsp ; sub esi, ebx ; call rsp
0x000000000012e86a : push rsp ; syscall
0x00000000001444b4 : pushfq ; adc al, byte ptr [rax] ; add al, bh ; xchg eax, edi ; out dx, al ; jmp qword ptr [rcx]
0x000000000007f443 : pushfq ; add byte ptr cs:[rax + 0x39], cl ; ret 0x1374
0x00000000001405b4 : pushfq ; add qword ptr [rax], r8 ; mov ah, 0xc2 ; clc ; jmp rsp
0x0000000000142b3c : pushfq ; and al, 2 ; add ah, dh ; std ; call rsp
0x0000000000142aec : pushfq ; and al, byte ptr [rdx] ; add byte ptr [rdx], dl ; std ; call rsp
0x00000000001452b4 : pushfq ; and byte ptr [rax], al ; add byte ptr [rax + 3], ch ; out dx, eax ; call qword ptr [rsi]
0x000000000014249c : pushfq ; cli ; add dword ptr [rax], eax ; mov bl, 0xfc ; jmp rsp
0x00000000001309e1 : pushfq ; cmc ; call qword ptr [rax]
0x0000000000146eb4 : pushfq ; cmp al, 0 ; add al, bh ; ret
0x00000000001601b4 : pushfq ; iretd ; add dword ptr [rax], eax ; sbb byte ptr [rbx - 5], al ; call qword ptr [rsi]
0x000000000014fbb4 : pushfq ; leave ; add byte ptr [rax], al ; cmp byte ptr [rbp - 0xb], ch ; jmp qword ptr [rbx]
0x000000000015e3b4 : pushfq ; mov cl, 1 ; add byte ptr [rax], cl ; out 0xfa, eax ; jmp qword ptr [rbx]
0x000000000013edac : pushfq ; mov dh, 0 ; add ah, dl ; and esi, ebx ; call rsp
0x0000000000076cb4 : pushfq ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000015beb4 : pushfq ; mov word ptr [rcx], es ; add byte ptr [rax], bh ; pop rsp ; cli ; jmp qword ptr [rsi]
0x000000000004de97 : pushfq ; or byte ptr [rax - 0x7d], cl ; ret
0x0000000000142724 : pushfq ; or eax, dword ptr [rdx] ; add byte ptr [rcx + rax], al ; std ; call rsp
0x00000000001484b4 : pushfq ; push rdx ; add byte ptr [rax], al ; or byte ptr [rdx], ch ; call rcx
0x00000000000330d0 : pushfq ; ret
0x00000000000e24d0 : pushfq ; ret 0x28
0x000000000013ef54 : pushfq ; rol byte ptr [rax], 0 ; and al, 0x58 ; call rsp
0x000000000005a6e7 : pushfq ; sbb dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret
0x00000000001423e4 : pushfq ; test byte ptr [rcx], 0 ; hlt ; wait ; cld ; call rsp
0x00000000001466b4 : pushfq ; xor al, 0 ; add al, ch ; cmp edi, ebp ; jmp qword ptr [rbx]
0x0000000000078768 : rcl byte ptr [rbx + 0x48], cl ; mov ebx, edx ; jne 0x78780 ; pop rbx ; ret
0x00000000001309d0 : rcl byte ptr [rbx - 0x6a2f000b], 0xf5 ; jmp rax
0x0000000000132e60 : rcl byte ptr [rsi - 3], 1 ; jmp qword ptr [rax]
0x0000000000130a40 : rcl cl, 1 ; cmc ; jmp qword ptr [rax]
0x0000000000131354 : rcl dword ptr [rdi + rsi*8 - 0x8660801], 1 ; call rax
0x000000000007e328 : rcl dword ptr [rip + 0x2eae3a], -0x7d ; ret 0x8b01
0x000000000012e09f : rcl dword ptr [rsi + 0x5a], cl ; je 0x12e06d ; ret 0xacfc
0x000000000012e09b : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x12e071 ; ret 0xacfc
0x0000000000035b60 : rcr bl, 0x3c ; and al, 0xdb ; jl 0x35b94 ; adc al, ch ; ret
0x00000000000359e4 : rcr bl, 0x3f ; fsubp st(1) ; ret
0x00000000000457b7 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x000000000001ff5e : rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000f104e : rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x0000000000076a29 : rcr byte ptr [rbx + 0x48], cl ; div ebp ; pop rbp ; pop r12 ; ret
0x0000000000073941 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000024284 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000002b5c7 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000106968 : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000aecb7 : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x000000000007fd86 : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x000000000006a215 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000000dd8ef : rcr byte ptr [rbx + 0x5d], 1 ; xor eax, eax ; pop r12 ; ret
0x000000000012e4bd : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000130a58 : rcr dh, 1 ; cmc ; push rax ; fdivrp st(5) ; call qword ptr [rax]
0x00000000000457e9 : rcr dword ptr [rcx], -0x40 ; and eax, 2 ; sub eax, 1 ; ret
0x00000000000654ac : rcr eax, -1 ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x000000000000090f : ret
0x0000000000021858 : ret 0
0x00000000000a3694 : ret 0x10
0x000000000002de33 : ret 0x100
0x000000000002d638 : ret 0x101
0x0000000000000797 : ret 0x102
0x000000000003e35c : ret 0x1075
0x00000000000a87f8 : ret 0x11
0x000000000007d812 : ret 0x110
0x000000000004578c : ret 0x114d
0x00000000000af6dc : ret 0x1174
0x0000000000035684 : ret 0x1175
0x0000000000025a5a : ret 0x1178
0x00000000000bd6c7 : ret 0x11eb
0x0000000000126c68 : ret 0x12
0x00000000000abe2c : ret 0x12e9
0x000000000006169a : ret 0x13
0x000000000007f448 : ret 0x1374
0x00000000000d04aa : ret 0x13e
0x000000000004735b : ret 0x13eb
0x0000000000085375 : ret 0x144
0x00000000000cc587 : ret 0x1474
0x0000000000093377 : ret 0x1475
0x0000000000044039 : ret 0x1477
0x0000000000093db9 : ret 0x147c
0x00000000000478b5 : ret 0x148
0x00000000000c9510 : ret 0x148d
0x0000000000079e46 : ret 0x149
0x00000000000d7730 : ret 0x14c
0x000000000007cc28 : ret 0x1589
0x0000000000033d09 : ret 0x1674
0x000000000011a3b7 : ret 0x168b
0x00000000000c7cbb : ret 0x1772
0x00000000000d6506 : ret 0x1775
0x00000000000f0e16 : ret 0x1776
0x000000000009aa4b : ret 0x17e9
0x0000000000088b95 : ret 0x1876
0x000000000004519b : ret 0x18b9
0x0000000000088819 : ret 0x1974
0x0000000000043291 : ret 0x19e8
0x0000000000078baa : ret 0x19e9
0x00000000000b6a22 : ret 0x19eb
0x00000000000983c2 : ret 0x1a75
0x000000000012ea1a : ret 0x1ad4
0x00000000001088c0 : ret 0x1ae8
0x0000000000059096 : ret 0x1b
0x00000000000aca4d : ret 0x1b1
0x000000000012d1ad : ret 0x1b49
0x00000000000ffc02 : ret 0x1b72
0x000000000004eb97 : ret 0x1b8
0x00000000000c148c : ret 0x1bb
0x0000000000001bc9 : ret 0x1bb7
0x00000000000a57a8 : ret 0x1be
0x00000000000e35ff : ret 0x1be8
0x000000000004a4f5 : ret 0x1beb
0x000000000000343f : ret 0x1bf9
0x0000000000010618 : ret 0x1d
0x00000000001286a0 : ret 0x1d4
0x0000000000128e38 : ret 0x1d5
0x000000000008871a : ret 0x1d74
0x0000000000115898 : ret 0x1d75
0x00000000000021a1 : ret 0x1dd4
0x00000000000a090e : ret 0x1e75
0x00000000000442a8 : ret 0x1ee9
0x0000000000006370 : ret 0x1f
0x00000000000341e4 : ret 0x1f0f
0x0000000000116977 : ret 0x1fc
0x00000000000d3977 : ret 0x1fe9
0x000000000002de42 : ret 0x200
0x00000000000c718d : ret 0x2041
0x000000000008398d : ret 0x2074
0x0000000000035242 : ret 0x2148
0x000000000008391b : ret 0x2275
0x0000000000083a48 : ret 0x2288
0x000000000007da66 : ret 0x22e9
0x0000000000093a8a : ret 0x2374
0x000000000000259f : ret 0x23cb
0x000000000011caa8 : ret 0x24
0x0000000000002790 : ret 0x244f
0x000000000011d64a : ret 0x24d2
0x000000000011cdf2 : ret 0x24d9
0x000000000011de06 : ret 0x24dc
0x0000000000119f2a : ret 0x24f3
0x0000000000045ef8 : ret 0x2573
0x00000000000fcc60 : ret 0x26
0x00000000000f24f8 : ret 0x27
0x00000000000af12a : ret 0x272
0x00000000000f9c76 : ret 0x273a
0x00000000000f5951 : ret 0x274e
0x00000000000f6e2a : ret 0x2765
0x0000000000085a06 : ret 0x2774
0x00000000000ed7ea : ret 0x27ba
0x000000000007131a : ret 0x28
0x0000000000000527 : ret 0x2800
0x00000000000e9aad : ret 0x284c
0x0000000000088b85 : ret 0x2876
0x00000000000dafa2 : ret 0x28de
0x00000000000a70a6 : ret 0x28f5
0x00000000000ccb88 : ret 0x29
0x000000000009ed0a : ret 0x2944
0x00000000000449b5 : ret 0x2948
0x0000000000027596 : ret 0x294c
0x00000000000ffbf4 : ret 0x2972
0x00000000000949b4 : ret 0x2975
0x00000000000dc528 : ret 0x2977
0x00000000000bcc8c : ret 0x2a
0x0000000000001ae9 : ret 0x2a63
0x00000000000ae698 : ret 0x2b
0x00000000000a3d5b : ret 0x2b3c
0x00000000000ec1e2 : ret 0x2b48
0x0000000000024a88 : ret 0x2b49
0x0000000000092749 : ret 0x2b4c
0x0000000000082232 : ret 0x2b74
0x00000000000b1bba : ret 0x2ba2
0x00000000000b2def : ret 0x2be8
0x000000000000a228 : ret 0x2c
0x000000000007679a : ret 0x2d
0x00000000000b2eca : ret 0x2d0
0x00000000000a087f : ret 0x2de9
0x00000000000b514a : ret 0x2df
0x000000000007cbc0 : ret 0x2e
0x00000000000337b4 : ret 0x2e66
0x0000000000083102 : ret 0x2e87
0x000000000003c37b : ret 0x2e9
0x000000000007f05a : ret 0x2ea5
0x000000000007ef5a : ret 0x2ea6
0x0000000000080896 : ret 0x2eaf
0x00000000000e0b88 : ret 0x2eb
0x000000000007f592 : ret 0x2ec2
0x000000000007c25a : ret 0x2ed3
0x000000000006e4d8 : ret 0x2f
0x000000000007b37a : ret 0x2f04
0x0000000000094586 : ret 0x2f77
0x0000000000065da2 : ret 0x3030
0x0000000000001b5c : ret 0x306a
0x000000000006109a : ret 0x307e
0x0000000000023061 : ret 0x30e9
0x000000000000d5e8 : ret 0x31
0x000000000010273f : ret 0x3108
0x0000000000054196 : ret 0x3145
0x000000000010a550 : ret 0x3148
0x00000000000ca119 : ret 0x31e8
0x000000000004a37d : ret 0x31eb
0x000000000004f702 : ret 0x31ed
0x000000000004247a : ret 0x32
0x00000000000429fa : ret 0x328a
0x00000000000769d0 : ret 0x32e9
0x0000000000010000 : ret 0x33
0x000000000010a3f5 : ret 0x334a
0x000000000010e6aa : ret 0x3374
0x000000000002c9a2 : ret 0x33c4
0x000000000000a8b8 : ret 0x34
0x00000000000ce55d : ret 0x3474
0x0000000000093d99 : ret 0x347c
0x0000000000031af9 : ret 0x348
0x00000000000be815 : ret 0x3489
0x00000000000b9683 : ret 0x348b
0x00000000000ffb46 : ret 0x348d
0x00000000000cfde8 : ret 0x349
0x00000000000e3be5 : ret 0x35e8
0x0000000000027c7d : ret 0x3672
0x00000000000ccd24 : ret 0x3775
0x000000000012e2fa : ret 0x3827
0x0000000000088b75 : ret 0x3876
0x000000000012c986 : ret 0x38ae
0x000000000006d292 : ret 0x38b
0x00000000000cee4f : ret 0x38e9
0x00000000000435ca : ret 0x3901
0x00000000000ff43d : ret 0x3904
0x00000000000315bd : ret 0x3908
0x00000000000e5f92 : ret 0x3920
0x0000000000021736 : ret 0x3941
0x0000000000054aa5 : ret 0x3945
0x000000000003b74c : ret 0x3948
0x000000000002da46 : ret 0x3949
0x000000000004752f : ret 0x394c
0x00000000000352e4 : ret 0x3975
0x000000000005ea79 : ret 0x3b01
0x00000000001174f7 : ret 0x3b48
0x00000000000dd0bf : ret 0x3b8
0x00000000000ddfe6 : ret 0x3c01
0x0000000000083901 : ret 0x3c75
0x00000000000c6dc6 : ret 0x3d
0x0000000000023ff6 : ret 0x3d83
0x000000000004442f : ret 0x3dbe
0x0000000000082b8d : ret 0x3de8
0x00000000000a0d96 : ret 0x3e89
0x0000000000081aec : ret 0x3ee8
0x000000000005fe41 : ret 0x3ee9
0x000000000006fd2b : ret 0x3f7
0x00000000000a350f : ret 0x400
0x000000000002700a : ret 0x4001
0x00000000000c606d : ret 0x402
0x00000000000009cd : ret 0x4021
0x00000000000d2cf5 : ret 0x403c
0x00000000000f31bf : ret 0x4077
0x00000000000221a2 : ret 0x4101
0x0000000000100772 : ret 0x4102
0x000000000009d6a9 : ret 0x4104
0x0000000000047fcf : ret 0x4108
0x000000000004ae5c : ret 0x4110
0x000000000004421a : ret 0x414
0x0000000000085744 : ret 0x4166
0x000000000000a3f0 : ret 0x42
0x00000000000836aa : ret 0x4201
0x00000000000a36fb : ret 0x4240
0x00000000000a39a4 : ret 0x428d
0x000000000006a1c7 : ret 0x4375
0x000000000010aabb : ret 0x4388
0x00000000000d860c : ret 0x43f6
0x00000000000077f8 : ret 0x44
0x000000000006e12f : ret 0x4401
0x00000000000b3b8d : ret 0x4408
0x0000000000000860 : ret 0x440c
0x000000000000042e : ret 0x4412
0x00000000000fc67f : ret 0x4478
0x000000000011436a : ret 0x4489
0x00000000000dc00a : ret 0x448b
0x00000000000d38fe : ret 0x44c7
0x00000000000735fb : ret 0x44e9
0x00000000000a6f7c : ret 0x44f6
0x000000000004e796 : ret 0x4501
0x000000000009f6a2 : ret 0x4505
0x0000000000031b2f : ret 0x4508
0x00000000000f34c2 : ret 0x4510
0x00000000000ecbce : ret 0x4528
0x00000000000ccd16 : ret 0x4575
0x00000000000b2451 : ret 0x4589
0x00000000000983cd : ret 0x45e9
0x00000000000cc493 : ret 0x460f
0x0000000000094997 : ret 0x4675
0x0000000000103918 : ret 0x46c7
0x000000000009f6c6 : ret 0x4701
0x000000000012d484 : ret 0x474c
0x000000000008e3ad : ret 0x4788
0x0000000000022249 : ret 0x4801
0x000000000008e885 : ret 0x4802
0x000000000008e989 : ret 0x4803
0x00000000000256c9 : ret 0x4804
0x000000000008e949 : ret 0x4805
0x000000000008e929 : ret 0x4806
0x00000000000e72a6 : ret 0x4807
0x00000000000216e5 : ret 0x4808
0x00000000000e70f6 : ret 0x4809
0x00000000000e73c6 : ret 0x480a
0x00000000000e6f46 : ret 0x480b
0x0000000000046ee6 : ret 0x4810
0x000000000002b330 : ret 0x4811
0x0000000000110c7b : ret 0x4812
0x00000000000e51ad : ret 0x4814
0x000000000007e6e2 : ret 0x4817
0x00000000000201f5 : ret 0x481e
0x0000000000093bed : ret 0x4840
0x0000000000021e71 : ret 0x4847
0x00000000000b2f38 : ret 0x4864
0x0000000000035325 : ret 0x4866
0x00000000000f30a5 : ret 0x4875
0x000000000009dc9e : ret 0x4890
0x00000000000eb6eb : ret 0x48b
0x0000000000085723 : ret 0x48c3
0x0000000000039778 : ret 0x48d
0x000000000002fe0f : ret 0x48e8
0x000000000012ec46 : ret 0x48f
0x000000000007b9fd : ret 0x48f0
0x0000000000022302 : ret 0x4901
0x000000000008ee05 : ret 0x4902
0x0000000000034dbd : ret 0x4903
0x000000000010a1d9 : ret 0x4907
0x000000000004bd72 : ret 0x4908
0x00000000000a5d12 : ret 0x4909
0x00000000000a09a8 : ret 0x491e
0x000000000000387b : ret 0x49ec
0x00000000000cf1e2 : ret 0x4a01
0x00000000000e1107 : ret 0x4b01
0x000000000008355b : ret 0x4b80
0x00000000000dcfcf : ret 0x4be8
0x0000000000028876 : ret 0x4c01
0x000000000008eb45 : ret 0x4c02
0x0000000000064eea : ret 0x4c04
0x0000000000100182 : ret 0x4c0c
0x000000000004e167 : ret 0x4c30
0x00000000000ae24f : ret 0x4c48
0x0000000000036eab : ret 0x4c77
0x00000000000a7008 : ret 0x4c80
0x000000000010a173 : ret 0x4c8b
0x00000000000d1bdf : ret 0x4d01
0x00000000000e53c9 : ret 0x4d02
0x000000000007b503 : ret 0x4d07
0x0000000000081e53 : ret 0x4d10
0x0000000000050c2c : ret 0x4d64
0x00000000000e5c07 : ret 0x4d72
0x0000000000023f50 : ret 0x4d74
0x000000000005f93d : ret 0x4de8
0x00000000000c402d : ret 0x4e0f
0x000000000012e6a7 : ret 0x4e27
0x0000000000036d99 : ret 0x4e77
0x00000000000207ca : ret 0x4eb
0x000000000006ee9e : ret 0x4f75
0x000000000010f18d : ret 0x5074
0x000000000000312a : ret 0x52c0
0x000000000003b3d9 : ret 0x53c
0x0000000000043d73 : ret 0x53e9
0x00000000000527ba : ret 0x54
0x000000000002fbca : ret 0x540
0x00000000000a33d0 : ret 0x543a
0x000000000009f675 : ret 0x5441
0x0000000000093d79 : ret 0x547c
0x000000000004722c : ret 0x5489
0x000000000012c90c : ret 0x5508
0x000000000000241a : ret 0x5576
0x00000000000a2651 : ret 0x5589
0x00000000000e3fc5 : ret 0x55e8
0x00000000000432bb : ret 0x5641
0x00000000000e1327 : ret 0x5674
0x00000000000838e7 : ret 0x5675
0x00000000000be45c : ret 0x574
0x00000000000d903e : ret 0x5774
0x0000000000007ae0 : ret 0x58
0x000000000012ebd8 : ret 0x5803
0x000000000009318f : ret 0x5876
0x000000000007093d : ret 0x5877
0x000000000007de5e : ret 0x58b
0x000000000012c5e0 : ret 0x591c
0x000000000004456c : ret 0x5974
0x0000000000032dac : ret 0x59e9
0x0000000000003209 : ret 0x5a51
0x000000000012d347 : ret 0x5ae4
0x00000000000890ea : ret 0x5b
0x00000000000ca141 : ret 0x5ba
0x0000000000002f3f : ret 0x5bdb
0x00000000000d72bf : ret 0x5be8
0x000000000005c19b : ret 0x5be9
0x0000000000002ff5 : ret 0x5cbe
0x0000000000002828 : ret 0x5d52
0x00000000000af0dd : ret 0x5d5b
0x00000000000e0522 : ret 0x5d6
0x0000000000082228 : ret 0x5d74
0x0000000000041bd7 : ret 0x5d9
0x00000000000dba15 : ret 0x5e8
0x0000000000000491 : ret 0x6080
0x00000000000026dd : ret 0x617e
0x0000000000065f69 : ret 0x61e8
0x000000000012f072 : ret 0x62c1
0x00000000000eac58 : ret 0x62e8
0x000000000005170b : ret 0x6348
0x0000000000051634 : ret 0x6349
0x00000000000c1635 : ret 0x634d
0x000000000009497a : ret 0x6375
0x0000000000087a13 : ret 0x63be
0x0000000000093d69 : ret 0x647c
0x00000000000ab149 : ret 0x64b8
0x00000000000e47b5 : ret 0x65e8
0x0000000000093e1a : ret 0x6610
0x0000000000088b02 : ret 0x6620
0x00000000000027df : ret 0x6642
0x00000000000e1b14 : ret 0x6666
0x0000000000025142 : ret 0x66c3
0x000000000005cf90 : ret 0x66e9
0x0000000000087d1a : ret 0x672
0x00000000000b2898 : ret 0x676
0x000000000012c5ff : ret 0x67b2
0x00000000000a392f : ret 0x67ba
0x000000000004ecc2 : ret 0x68e8
0x00000000000cb8eb : ret 0x690
0x00000000000a36f8 : ret 0x6948
0x000000000002d971 : ret 0x69e8
0x00000000000c1b07 : ret 0x6a7e
0x000000000005a68c : ret 0x6ae9
0x000000000005feeb : ret 0x6b74
0x00000000000b50c5 : ret 0x6b8
0x0000000000003c62 : ret 0x6bba
0x00000000000e43af : ret 0x6be8
0x000000000013d433 : ret 0x6e1f
0x00000000001088d4 : ret 0x6e8
0x000000000012f201 : ret 0x6f9
0x00000000000ff9fd : ret 0x72e9
0x00000000000215fa : ret 0x7401
0x0000000000036963 : ret 0x7402
0x000000000006b454 : ret 0x7404
0x0000000000071902 : ret 0x7408
0x000000000006c8d9 : ret 0x7420
0x000000000004e185 : ret 0x7450
0x00000000000ac712 : ret 0x748d
0x00000000000ddab9 : ret 0x74e9
0x0000000000036928 : ret 0x7502
0x000000000008928d : ret 0x7504
0x00000000000ffb74 : ret 0x7507
0x0000000000075f5c : ret 0x7508
0x0000000000089288 : ret 0x7518
0x00000000000c1559 : ret 0x7540
0x00000000000dbd75 : ret 0x7577
0x00000000000e45a5 : ret 0x75e8
0x00000000001155d4 : ret 0x75e9
0x0000000000079faa : ret 0x767
0x000000000005ff09 : ret 0x76e9
0x0000000000024a7c : ret 0x774
0x00000000000b7314 : ret 0x775
0x00000000000790aa : ret 0x776
0x00000000000e2b32 : ret 0x78e8
0x0000000000002e8c : ret 0x793b
0x0000000000073efb : ret 0x79e9
0x00000000000fbfc3 : ret 0x7a8d
0x00000000000bb604 : ret 0x7ad
0x000000000002b44b : ret 0x7b73
0x000000000002542e : ret 0x7b8
0x00000000000d6a9f : ret 0x7be8
0x00000000000357c9 : ret 0x7c7
0x00000000000a0c2f : ret 0x7c74
0x00000000000d9f61 : ret 0x7c83
0x00000000000ab68c : ret 0x7c8d
0x0000000000088a92 : ret 0x7e20
0x0000000000083e7c : ret 0x7f10
0x00000000000b3ace : ret 0x7f74
0x0000000000085059 : ret 0x8000
0x0000000000032fbc : ret 0x8001
0x00000000000a601b : ret 0x8010
0x0000000000085384 : ret 0x8040
0x00000000000fac05 : ret 0x8080
0x00000000000b39ab : ret 0x80d
0x000000000000383c : ret 0x80fc
0x0000000000094387 : ret 0x8101
0x000000000003f299 : ret 0x8136
0x0000000000041af6 : ret 0x8141
0x000000000010dc47 : ret 0x8148
0x000000000004fdeb : ret 0x8166
0x0000000000062f2c : ret 0x820f
0x00000000000b32a1 : ret 0x82f
0x000000000002c295 : ret 0x8301
0x0000000000108818 : ret 0x8303
0x000000000001fb7e : ret 0x8304
0x00000000000598df : ret 0x8308
0x00000000000432f0 : ret 0x830f
0x000000000002d758 : ret 0x8310
0x000000000001f56e : ret 0x8341
0x000000000003ab79 : ret 0x8348
0x000000000004590a : ret 0x8349
0x000000000005a024 : ret 0x8401
0x0000000000051626 : ret 0x8404
0x000000000002303d : ret 0x840f
0x000000000007b5c0 : ret 0x8441
0x00000000000c6c59 : ret 0x84c6
0x00000000000b14e5 : ret 0x84e9
0x00000000000516fd : ret 0x8504
0x0000000000026681 : ret 0x850f
0x000000000003aea0 : ret 0x8545
0x000000000002b87a : ret 0x8548
0x0000000000044bf3 : ret 0x854d
0x00000000000ce72c : ret 0x8588
0x00000000000cdc1a : ret 0x8589
0x000000000004ea5d : ret 0x858b
0x000000000005ed12 : ret 0x85c6
0x00000000000d5295 : ret 0x85e8
0x0000000000057c17 : ret 0x860f
0x0000000000036076 : ret 0x870f
0x000000000012bf1e : ret 0x871e
0x0000000000088ba5 : ret 0x876
0x00000000000f216f : ret 0x87e
0x0000000000050ce0 : ret 0x8801
0x00000000000b9092 : ret 0x8804
0x00000000000bac6b : ret 0x880f
0x0000000000102509 : ret 0x8841
0x00000000000b97d9 : ret 0x8845
0x0000000000002568 : ret 0x88ad
0x000000000002cc11 : ret 0x8901
0x0000000000049d15 : ret 0x8908
0x0000000000049d85 : ret 0x8910
0x000000000009415a : ret 0x8941
0x000000000007b2af : ret 0x8944
0x00000000000cc598 : ret 0x8948
0x000000000002162a : ret 0x8949
0x000000000001f75b : ret 0x894c
0x000000000007b507 : ret 0x894d
0x000000000004640b : ret 0x894e
0x000000000011b5b1 : ret 0x8964
0x0000000000039fd1 : ret 0x8966
0x0000000000108eda : ret 0x8a
0x00000000000886ee : ret 0x8a04
0x000000000000250f : ret 0x8a4c
0x000000000004d57f : ret 0x8b01
0x00000000000eecef : ret 0x8b02
0x000000000006b5da : ret 0x8b04
0x000000000002e862 : ret 0x8b05
0x00000000000ed724 : ret 0x8b08
0x00000000000c0f28 : ret 0x8b10
0x000000000012e74e : ret 0x8b36
0x000000000002d6c2 : ret 0x8b41
0x000000000003f925 : ret 0x8b44
0x0000000000091c9a : ret 0x8b46
0x00000000000bfef0 : ret 0x8b47
0x0000000000022bf8 : ret 0x8b48
0x000000000003b188 : ret 0x8b49
0x0000000000046392 : ret 0x8b4a
0x0000000000030d4b : ret 0x8b4c
0x000000000006d180 : ret 0x8b64
0x00000000000b70ac : ret 0x8ba
0x00000000000c98b2 : ret 0x8c0f
0x0000000000003746 : ret 0x8cba
0x00000000000582ad : ret 0x8d01
0x000000000006a983 : ret 0x8d04
0x000000000004eee7 : ret 0x8d0f
0x00000000000ab0fb : ret 0x8d41
0x00000000000aaa08 : ret 0x8d44
0x0000000000021cfc : ret 0x8d48
0x0000000000030d64 : ret 0x8d49
0x0000000000052593 : ret 0x8d4a
0x00000000000248bf : ret 0x8d4c
0x000000000004fddd : ret 0x8d4d
0x0000000000053252 : ret 0x8d89
0x000000000003cb55 : ret 0x8e0f
0x00000000000be80b : ret 0x8eb
0x0000000000055818 : ret 0x8f0f
0x00000000000f50d1 : ret 0x901
0x00000000000d2a2d : ret 0x9066
0x000000000006f156 : ret 0x90eb
0x000000000008240b : ret 0x93be
0x0000000000070203 : ret 0x93eb
0x000000000003f624 : ret 0x948
0x00000000000876f8 : ret 0x94c
0x000000000007003d : ret 0x94eb
0x000000000012d573 : ret 0x9576
0x00000000000fdd22 : ret 0x9588
0x000000000004f2c3 : ret 0x95e9
0x000000000007d084 : ret 0x96e8
0x00000000000cc41d : ret 0x970f
0x000000000009f634 : ret 0x974
0x00000000000be233 : ret 0x97e8
0x00000000000e0653 : ret 0x9848
0x0000000000083935 : ret 0x9874
0x0000000000074c07 : ret 0x98eb
0x000000000006f4bf : ret 0x99eb
0x00000000000b2d7f : ret 0x9be8
0x00000000000927ec : ret 0x9de9
0x0000000000074517 : ret 0x9deb
0x00000000000a320b : ret 0x9e0f
0x000000000006fe71 : ret 0x9eeb
0x000000000003ee6d : ret 0xa0e9
0x00000000001068c4 : ret 0xa178
0x000000000006f315 : ret 0xa1eb
0x000000000012d263 : ret 0xa514
0x00000000000fc6da : ret 0xa5eb
0x000000000003e352 : ret 0xa77
0x000000000007e338 : ret 0xa7e
0x000000000011a2ee : ret 0xa802
0x000000000002ff92 : ret 0xa8e8
0x00000000000d875f : ret 0xa8e9
0x000000000012d6e7 : ret 0xac65
0x000000000012e0a4 : ret 0xacfc
0x00000000000d503d : ret 0xade8
0x0000000000098367 : ret 0xaeeb
0x00000000000ad030 : ret 0xaf0f
0x000000000003c031 : ret 0xb
0x0000000000104cdd : ret 0xb374
0x000000000010a8aa : ret 0xb43
0x0000000000080529 : ret 0xb54
0x00000000000dcd65 : ret 0xb5e8
0x00000000000af604 : ret 0xb5e9
0x0000000000030169 : ret 0xb60f
0x000000000007ed89 : ret 0xb6d
0x0000000000028dd5 : ret 0xb70f
0x00000000000394da : ret 0xb72
0x00000000000d8a4c : ret 0xb74
0x000000000007ba19 : ret 0xb76
0x0000000000035607 : ret 0xb8
0x00000000000fe9e5 : ret 0xb804
0x00000000000207d3 : ret 0xb810
0x0000000000035245 : ret 0xb848
0x00000000000451ed : ret 0xb87f
0x00000000000c1e69 : ret 0xb880
0x00000000000b013b : ret 0xb9
0x00000000000c1a6c : ret 0xb975
0x000000000012d5ae : ret 0xb9b9
0x0000000000071be7 : ret 0xba74
0x00000000000d715f : ret 0xbbe8
0x00000000000a1a5d : ret 0xbbe9
0x000000000000243c : ret 0xbd07
0x0000000000101da1 : ret 0xbd41
0x0000000000053d2a : ret 0xbd83
0x00000000000d9575 : ret 0xbdeb
0x000000000012d304 : ret 0xbe57
0x000000000007b2ef : ret 0xbe75
0x00000000000d6b0f : ret 0xbe8
0x00000000000854f9 : ret 0xbf
0x0000000000003eb9 : ret 0xc
0x000000000004a7f3 : ret 0xc0
0x0000000000084f19 : ret 0xc000
0x0000000000020340 : ret 0xc031
0x000000000004347a : ret 0xc083
0x00000000000876c5 : ret 0xc085
0x0000000000069baa : ret 0xc0e8
0x00000000000a5cd2 : ret 0xc0e9
0x000000000004eb62 : ret 0xc101
0x00000000000a96c8 : ret 0xc129
0x0000000000021151 : ret 0xc148
0x00000000000cd57c : ret 0xc1e9
0x000000000003977e : ret 0xc229
0x0000000000039918 : ret 0xc269
0x00000000000d5453 : ret 0xc283
0x0000000000039267 : ret 0xc35b
0x0000000000094391 : ret 0xc383
0x00000000000eb26f : ret 0xc3f3
0x000000000012b1a2 : ret 0xc4c3
0x00000000000f50dc : ret 0xc4eb
0x000000000012ceb8 : ret 0xc4ff
0x00000000000a9105 : ret 0xc629
0x00000000000a3891 : ret 0xc639
0x00000000000c4030 : ret 0xc689
0x00000000001007ab : ret 0xc741
0x0000000000035e53 : ret 0xc748
0x0000000000116f30 : ret 0xc749
0x00000000000949d1 : ret 0xc75
0x000000000003f2a3 : ret 0xc801
0x0000000000089131 : ret 0xc88
0x00000000000bbc88 : ret 0xc883
0x00000000000d47b5 : ret 0xc889
0x000000000006cf8a : ret 0xc9
0x00000000000bdbb9 : ret 0xc931
0x000000000011c9d5 : ret 0xc984
0x000000000009834c : ret 0xc9eb
0x00000000000839a6 : ret 0xc9ff
0x00000000000cd53f : ret 0xca83
0x00000000000e0ae9 : ret 0xcad9
0x0000000000081bd4 : ret 0xcb8
0x00000000000d684f : ret 0xcbe8
0x000000000001f5e0 : ret 0xcbeb
0x000000000006856c : ret 0xcc6
0x00000000000db7db : ret 0xcc80
0x000000000012c94a : ret 0xcca7
0x000000000012ea2d : ret 0xcd11
0x0000000000064bfd : ret 0xcde8
0x0000000000030dce : ret 0xce8
0x0000000000032a4d : ret 0xce80
0x000000000001f792 : ret 0xce89
0x000000000011556a : ret 0xcf89
0x00000000000abd72 : ret 0xcfeb
0x0000000000007441 : ret 0xd
0x000000000009283d : ret 0xd029
0x00000000000356e7 : ret 0xd089
0x0000000000090209 : ret 0xd0e9
0x00000000000d0019 : ret 0xd101
0x00000000000fdc4c : ret 0xd120
0x00000000000a693f : ret 0xd129
0x00000000000a319a : ret 0xd138
0x000000000005f8aa : ret 0xd189
0x00000000000347d4 : ret 0xd231
0x00000000000a389f : ret 0xd269
0x0000000000021e0a : ret 0xd284
0x00000000000c3322 : ret 0xd285
0x000000000003adf5 : ret 0xd348
0x00000000000c8ec2 : ret 0xd377
0x00000000000bfd9c : ret 0xd3eb
0x0000000000069afa : ret 0xd4e9
0x0000000000000872 : ret 0xd5a4
0x00000000000e2ec6 : ret 0xd74
0x00000000000dc42a : ret 0xd77
0x000000000010c6d6 : ret 0xd778
0x000000000011427f : ret 0xd789
0x00000000000bd6f9 : ret 0xd7eb
0x00000000000a2d00 : ret 0xd889
0x00000000000c34a2 : ret 0xd8e8
0x000000000012e4c5 : ret 0xd8f
0x0000000000099ff5 : ret 0xd929
0x0000000000109203 : ret 0xd9e9
0x00000000000bed2c : ret 0xda29
0x00000000000f0a03 : ret 0xda75
0x0000000000035911 : ret 0xdaf7
0x00000000000ae42c : ret 0xdb31
0x00000000000e473f : ret 0xdbe8
0x00000000000a24d0 : ret 0xdc00
0x000000000012e5a6 : ret 0xdcd9
0x0000000000069af2 : ret 0xdce9
0x00000000000fecfd : ret 0xdde8
0x00000000000f71aa : ret 0xde
0x000000000012d522 : ret 0xde5d
0x0000000000073051 : ret 0xde74
0x000000000012c2b1 : ret 0xde9e
0x000000000002b542 : ret 0xdf89
0x00000000000a25ab : ret 0xdfe8
0x0000000000084dd9 : ret 0xe000
0x00000000001001a6 : ret 0xe075
0x00000000000c740d : ret 0xe083
0x000000000014c4ab : ret 0xe0a
0x000000000006182d : ret 0xe181
0x0000000000054023 : ret 0xe183
0x00000000000276d5 : ret 0xe281
0x0000000000028046 : ret 0xe283
0x00000000000c932a : ret 0xe2c1
0x000000000002247c : ret 0xe2ff
0x000000000011c445 : ret 0xe4eb
0x000000000006f223 : ret 0xe5eb
0x000000000012e6c6 : ret 0xe71f
0x00000000000f2e1a : ret 0xe77
0x000000000006dfc2 : ret 0xe8
0x00000000000da951 : ret 0xe801
0x0000000000101e4d : ret 0xe82e
0x00000000000a0f15 : ret 0xe877
0x000000000004305a : ret 0xe88
0x00000000000ed425 : ret 0xe883
0x00000000000e96b1 : ret 0xe8eb
0x0000000000043c03 : ret 0xe901
0x000000000006b336 : ret 0xe902
0x000000000006458b : ret 0xe908
0x000000000012ca27 : ret 0xe970
0x00000000000983dc : ret 0xe974
0x00000000000eb63c : ret 0xe975
0x00000000000c1b64 : ret 0xe97f
0x00000000000488fa : ret 0xe9c0
0x00000000000a320e : ret 0xe9c1
0x000000000009457e : ret 0xea81
0x00000000001154ff : ret 0xea83
0x000000000005401c : ret 0xeac0
0x00000000000941ae : ret 0xeac1
0x000000000003f7c6 : ret 0xeb01
0x000000000006b20c : ret 0xeb02
0x000000000001fbb3 : ret 0xeb04
0x000000000005b716 : ret 0xeb08
0x00000000000c0f1a : ret 0xeb20
0x000000000003a4da : ret 0xeb75
0x00000000000dcf2f : ret 0xebe8
0x000000000006c552 : ret 0xebeb
0x000000000012f1d8 : ret 0xec2
0x000000000003c160 : ret 0xed75
0x000000000009fa00 : ret 0xed77
0x000000000011c3d3 : ret 0xedeb
0x000000000009300f : ret 0xee75
0x00000000000e0bc8 : ret 0xeed9
0x000000000012ee7a : ret 0xef32
0x0000000000022471 : ret 0xf
0x0000000000084c99 : ret 0xf000
0x000000000003011f : ret 0xf01
0x000000000007a1ab : ret 0xf02
0x000000000003b89a : ret 0xf03
0x000000000007d599 : ret 0xf04
0x0000000000108b4d : ret 0xf077
0x0000000000083e32 : ret 0xf10
0x00000000001094aa : ret 0xf15f
0x0000000000093e7c : ret 0xf188
0x0000000000085ba5 : ret 0xf1eb
0x00000000000c65d0 : ret 0xf20
0x00000000000a39fb : ret 0xf275
0x000000000002991a : ret 0xf28
0x0000000000036920 : ret 0xf304
0x00000000000ece4a : ret 0xf375
0x000000000006d567 : ret 0xf40
0x0000000000034e8a : ret 0xf41
0x00000000000a148f : ret 0xf44
0x00000000000c173b : ret 0xf45
0x0000000000025b9f : ret 0xf48
0x000000000003f7be : ret 0xf49
0x00000000000bf820 : ret 0xf57f
0x00000000000d5225 : ret 0xf5e8
0x00000000000d1e1d : ret 0xf601
0x00000000000af16b : ret 0xf631
0x00000000000bbdea : ret 0xf635
0x0000000000130b3c : ret 0xf63b
0x000000000010428b : ret 0xf641
0x000000000003569b : ret 0xf66
0x00000000000fdd1b : ret 0xf685
0x00000000000b610a : ret 0xf692
0x000000000002571a : ret 0xf6a
0x000000000004161f : ret 0xf6e9
0x00000000000ae70a : ret 0xf70c
0x000000000003a779 : ret 0xf748
0x0000000000131598 : ret 0xf7b4
0x0000000000084b59 : ret 0xf800
0x00000000000cbefa : ret 0xf864
0x000000000012c190 : ret 0xf869
0x0000000000097244 : ret 0xf883
0x0000000000031da3 : ret 0xf889
0x000000000011093e : ret 0xf90
0x00000000000e829a : ret 0xf912
0x00000000000c88ff : ret 0xf983
0x00000000000ea37a : ret 0xfa5e
0x00000000000852d1 : ret 0xfa80
0x000000000003ea89 : ret 0xfa81
0x00000000000e493c : ret 0xfa83
0x00000000000e6e7a : ret 0xfa93
0x000000000004d803 : ret 0xfac1
0x0000000000101c0c : ret 0xfad1
0x00000000000cbe9a : ret 0xfad6
0x000000000006ea7a : ret 0xfb35
0x00000000000d20ea : ret 0xfb37
0x00000000000cf41a : ret 0xfb62
0x0000000000080c7a : ret 0xfb93
0x0000000000064cea : ret 0xfba6
0x00000000000e011f : ret 0xfbe8
0x0000000000043e7a : ret 0xfbe9
0x0000000000084a19 : ret 0xfc00
0x00000000000df425 : ret 0xfc07
0x0000000000083ab9 : ret 0xfc3
0x0000000000081f6a : ret 0xfd01
0x00000000000fba5a : ret 0xfdb6
0x00000000000300f0 : ret 0xfdf
0x00000000000848d9 : ret 0xfe00
0x00000000000a808a : ret 0xfe3c
0x0000000000033648 : ret 0xfe9
0x000000000003591d : ret 0xfeb8
0x000000000004dab0 : ret 0xfec1
0x0000000000084799 : ret 0xff00
0x00000000000925ca : ret 0xff16
0x0000000000044a99 : ret 0xff31
0x00000000000fd4da : ret 0xff32
0x00000000000934b2 : ret 0xff41
0x0000000000090e7a : ret 0xff45
0x00000000000838e4 : ret 0xff48
0x000000000001f895 : ret 0xff49
0x0000000000084659 : ret 0xff80
0x000000000010232a : ret 0xff81
0x00000000000682ba : ret 0xff8f
0x0000000000068002 : ret 0xffb2
0x000000000003925d : ret 0xffb8
0x000000000003fd2d : ret 0xffbf
0x0000000000084519 : ret 0xffc0
0x0000000000099c8b : ret 0xffc1
0x00000000000f38da : ret 0xffce
0x00000000000649fe : ret 0xffd3
0x00000000000d4d8a : ret 0xffda
0x00000000000843d9 : ret 0xffe0
0x00000000000a8e01 : ret 0xffe6
0x000000000005532a : ret 0xffec
0x0000000000144cc9 : ret 0xffee
0x000000000003a39c : ret 0xffef
0x0000000000084299 : ret 0xfff0
0x00000000000aac42 : ret 0xfff1
0x00000000000322ed : ret 0xfff2
0x00000000000d319c : ret 0xfff4
0x0000000000040f70 : ret 0xfff5
0x0000000000119432 : ret 0xfff6
0x0000000000060d20 : ret 0xfff7
0x0000000000084159 : ret 0xfff8
0x00000000000831bd : ret 0xfff9
0x0000000000028754 : ret 0xfffa
0x0000000000058866 : ret 0xfffb
0x0000000000026dfe : ret 0xfffc
0x000000000006bb9a : ret 0xfffd
0x0000000000021a11 : ret 0xfffe
0x00000000000b45b2 : ret 0xffff
0x0000000000000df8 : ret 1
0x0000000000000fe8 : ret 2
0x00000000000a3ed2 : ret 3
0x0000000000088c2d : ret 4
0x000000000003b6d2 : ret 5
0x000000000000e449 : ret 6
0x00000000000018c4 : ret 7
0x0000000000088c49 : ret 8
0x000000000002339a : ret 9
0x000000000001f5db : retf -0x31c7 ; cmovge eax, edx ; jmp 0x1f5b3
0x000000000008cc1f : retf -0x7af1 ; call qword ptr [rsi]
0x0000000000130fd8 : retf -0x8a4 ; call rbx
0x00000000000f2ed6 : retf 0x2277 ; mov eax, 0x59 ; syscall
0x00000000000f2dd6 : retf 0x2277 ; movsxd rdi, edi ; xor eax, eax ; syscall
0x00000000000d650a : retf 0x6349 ; stc ; mov eax, 0x103 ; syscall
0x000000000001fec1 : retf 0x6349 ; std ; mov eax, 3 ; syscall
0x000000000013f10d : retf ; add byte ptr [rax], al ; hlt ; xchg bl, dh ; jmp rsp
0x000000000014fd55 : retf ; add byte ptr [rax], al ; test al, 0xe1 ; cmc ; jmp qword ptr [rbx]
0x000000000015fd1d : retf ; add dword ptr [rax], eax ; sar byte ptr [rbx], 0xfb ; jmp qword ptr [rdx]
0x00000000000c91c9 : retf ; jmp r11
0x00000000000bbaf0 : retf ; mov rsi, rbx ; mov rdi, rbp ; call r12
0x0000000000093d1d : rol bl, 0x90 ; bsr eax, eax ; add rax, rdi ; ret
0x0000000000097795 : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000004d124 : rol bl, 0xf3 ; ret
0x000000000007177c : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000088cbe : rol bl, 1 ; xor eax, eax ; ret
0x0000000000085a02 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x000000000003922b : rol byte ptr [rax + 0x775003f], 0x5b ; ret
0x000000000012a060 : rol byte ptr [rax + rax], 0 ; ret 4
0x00000000000964a5 : rol byte ptr [rax*4 + 0x751089d2], 0xf3 ; ret
0x00000000000f336e : rol byte ptr [rax*4 + 0x753089f6], 0xea ; ret
0x0000000000077628 : rol byte ptr [rax], 0 ; add byte ptr [rbp + 0x4f0f48ff], al ; ret 0x8948
0x0000000000043792 : rol byte ptr [rax], 0 ; add byte ptr [rdi], cl ; ret 0x8d48
0x000000000013ef55 : rol byte ptr [rax], 0 ; and al, 0x58 ; call rsp
0x000000000006a559 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x0000000000107adb : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov qword ptr [rsp], rax ; call qword ptr [r11]
0x00000000000e24fb : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a370f : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000036084 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x000000000015046d : rol byte ptr [rax], cl ; add byte ptr [rax - 6], ah ; cmc ; call rcx
0x00000000000abd3d : rol byte ptr [rbp + 0x31], cl ; fild dword ptr [rbp + 0x31] ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000000000e0b82 : rol byte ptr [rbp + 0x490f48d2], 0xc2 ; jmp 0xe0b93
0x00000000000903d2 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x0000000000085a29 : rol byte ptr [rbp - 0x149d8a2e], 1 ; ror byte ptr [rcx + 0x39], 1 ; ret
0x0000000000061665 : rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x000000000003ad98 : rol byte ptr [rbp - 0x6af0be13], cl ; ret 0xc748
0x00000000000e1608 : rol byte ptr [rbp - 0x77], 0xf7 ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000000f71a5 : rol byte ptr [rbp - 0x77], cl ; loopne 0xf7197 ; ret 0xde
0x000000000011d1bc : rol byte ptr [rbp - 0x7b], 0xc0 ; jne 0x11d1ce ; ret
0x00000000000f008c : rol byte ptr [rbp - 0x7b], 0xc0 ; jne 0xf009e ; ret
0x00000000000f020c : rol byte ptr [rbp - 0x7b], 0xc0 ; jne 0xf021e ; ret
0x00000000000f038c : rol byte ptr [rbp - 0x7b], 0xc0 ; jne 0xf039e ; ret
0x00000000000f057c : rol byte ptr [rbp - 0x7b], 0xc0 ; jne 0xf058e ; ret
0x00000000000f06fc : rol byte ptr [rbp - 0x7b], 0xc0 ; jne 0xf070e ; ret
0x000000000011d0fc : rol byte ptr [rbp - 0x7b], 0xc9 ; jne 0x11d10e ; ret
0x00000000000f00cc : rol byte ptr [rbp - 0x7b], 0xc9 ; jne 0xf00de ; ret
0x00000000000f024c : rol byte ptr [rbp - 0x7b], 0xc9 ; jne 0xf025e ; ret
0x00000000000f048c : rol byte ptr [rbp - 0x7b], 0xc9 ; jne 0xf049e ; ret
0x00000000000f05bc : rol byte ptr [rbp - 0x7b], 0xc9 ; jne 0xf05ce ; ret
0x00000000000f073c : rol byte ptr [rbp - 0x7b], 0xc9 ; jne 0xf074e ; ret
0x000000000011d1fc : rol byte ptr [rbp - 0x7b], 0xd2 ; jne 0x11d20e ; ret
0x00000000000f010c : rol byte ptr [rbp - 0x7b], 0xd2 ; jne 0xf011e ; ret
0x00000000000f028c : rol byte ptr [rbp - 0x7b], 0xd2 ; jne 0xf029e ; ret
0x00000000000f03cc : rol byte ptr [rbp - 0x7b], 0xd2 ; jne 0xf03de ; ret
0x00000000000f05fc : rol byte ptr [rbp - 0x7b], 0xd2 ; jne 0xf060e ; ret
0x000000000011d13c : rol byte ptr [rbp - 0x7b], 0xdb ; jne 0x11d14e ; ret
0x00000000000f014c : rol byte ptr [rbp - 0x7b], 0xdb ; jne 0xf015e ; ret
0x00000000000f02cc : rol byte ptr [rbp - 0x7b], 0xdb ; jne 0xf02de ; ret
0x00000000000f04cc : rol byte ptr [rbp - 0x7b], 0xdb ; jne 0xf04de ; ret
0x00000000000f063c : rol byte ptr [rbp - 0x7b], 0xdb ; jne 0xf064e ; ret
0x00000000000cee48 : rol byte ptr [rbx + 0xf4104f8], cl ; xchg eax, esp ; ret 0x38e9
0x00000000000cecaf : rol byte ptr [rbx + 0xf4104f8], cl ; xchg eax, esp ; ret 0x8b48
0x000000000006ed1b : rol byte ptr [rbx + rcx*4 + 3], 0xf ; xchg eax, esp ; ret 0xdaf7
0x00000000000977ce : rol byte ptr [rbx + rcx*4], 0x10 ; test edx, edx ; jne 0x977d1 ; ret
0x00000000000457eb : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x00000000000e679c : rol byte ptr [rbx - 0x69f0f601], 0xc0 ; ret
0x000000000002edc5 : rol byte ptr [rbx - 0x6bf07f19], 0xc0 ; ret
0x00000000000f1318 : rol byte ptr [rbx - 0x77], 4 ; cmp al, 0x75 ; mov dword ptr [rax - 0x7d], ecx ; ret
0x000000000003363f : rol byte ptr [rbx - 0x77cfc20], cl ; add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xfe9
0x0000000000095a22 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x0000000000108815 : rol byte ptr [rbx], 0x83 ; ret 0x8303
0x0000000000053c23 : rol byte ptr [rcx + 0x39], 1 ; ret
0x000000000005153e : rol byte ptr [rcx + 0x5c], 1 ; ret
0x0000000000090c9d : rol byte ptr [rcx + 0x5e], 1 ; ret
0x0000000000094575 : rol byte ptr [rcx + 0xbfff], cl ; add byte ptr [rdi], cl ; popfq ; ret 0xea81
0x00000000000c16ce : rol byte ptr [rcx + 0xf], 0x95 ; ret
0x00000000000a3a86 : rol byte ptr [rcx + 0xf], 0xaf ; ret
0x00000000000a388d : rol byte ptr [rcx + 0xf], 0xaf ; ret 0xc639
0x0000000000092765 : rol byte ptr [rcx + 0xf], 0xb6 ; ret
0x0000000000085335 : rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0x8341
0x00000000000c1b03 : rol byte ptr [rcx + rax*2], 0x39 ; ret 0x6a7e
0x00000000000ac193 : rol byte ptr [rcx + rbp - 0x1e], 0xf ; ret 0x144
0x00000000000aceca : rol byte ptr [rcx + rbp - 0x36], 0xf ; ret 0x144
0x000000000002adbe : rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x00000000000a3929 : rol byte ptr [rcx + rcx*4 - 0x40], 0xf ; scasd eax, dword ptr [rdi] ; ret 0x67ba
0x0000000000131e3c : rol byte ptr [rcx + rdi*8 - 1], 0xe8 ; stc ; call qword ptr [rax]
0x0000000000109ee7 : rol byte ptr [rcx - 0x77], cl ; ror byte ptr [rcx + rcx*4 - 1], 0x89 ; ret
0x0000000000095a02 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x000000000015f25d : rol byte ptr [rcx], 0 ; and ebx, edi ; call qword ptr [rdi]
0x000000000015f275 : rol byte ptr [rcx], 0 ; cwde ; sti ; call rdx
0x000000000015f245 : rol byte ptr [rcx], 0 ; sub byte ptr [rcx], ah ; sti ; jmp qword ptr [rdx]
0x00000000000c9a38 : rol byte ptr [rcx], 0x39 ; ret
0x00000000000451ea : rol byte ptr [rcx], 0x39 ; ret 0xb87f
0x00000000000c1b61 : rol byte ptr [rcx], 0x39 ; ret 0xe97f
0x0000000000108b4a : rol byte ptr [rcx], 0x39 ; ret 0xf077
0x00000000000bf81d : rol byte ptr [rcx], 0x39 ; ret 0xf57f
0x000000000004549a : rol byte ptr [rcx], 0x48 ; cmp eax, edx ; jne 0x45499 ; xor eax, eax ; ret
0x000000000004557a : rol byte ptr [rcx], 0x48 ; cmp eax, edx ; jne 0x45579 ; xor eax, eax ; ret
0x00000000000e5cf4 : rol byte ptr [rcx], 0x66 ; mov dword ptr [rdx], eax ; ret
0x0000000000094384 : rol byte ptr [rcx], 0x83 ; ret 0x8101
0x000000000002c292 : rol byte ptr [rcx], 0x83 ; ret 0x8301
0x00000000000eee49 : rol byte ptr [rcx], 0x89 ; ret 0x8948
0x00000000000eaa9a : rol byte ptr [rcx], 0xc6 ; jmp qword ptr [rax]
0x00000000000bba80 : rol byte ptr [rcx], 0xf6 ; or esi, r11d ; jne 0xbba98 ; ret
0x0000000000095a62 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x000000000009119d : rol byte ptr [rdx + rdx*8 - 0x3ebaf0b8], 0xf3 ; ret
0x0000000000095a12 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x0000000000023007 : rol byte ptr [rdx], 0x89 ; add al, 0x24 ; call rbx
0x00000000000b3da7 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; mov eax, esi ; ret
0x00000000000e3589 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x0000000000162328 : rol byte ptr [rdx], cl ; add byte ptr [rax], al ; ret 6
0x0000000000062554 : rol byte ptr [rsi - 0x77], 0x2c ; xor dword ptr [rcx], ebp ; ret
0x0000000000095a52 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000012b1a0 : rol cl, 0xc2 ; ret
0x000000000003691b : rol cl, 0xe9 ; add esi, esi ; ret 0xf304
0x00000000000a2d21 : rol cl, 1 ; call 0x48cc564c
0x0000000000110da8 : rol cl, 1 ; call 0xffffffff80d404c4
0x00000000000f9ab9 : rol dh, 2 ; add byte ptr [rcx + 0x5c], al ; ret
0x00000000000959ac : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x00000000000009c7 : rol dword ptr [rax + 0x4260a120], cl ; ret 0x4021
0x000000000003577b : rol dword ptr [rax + rdx + 0x7e0f6600], 1 ; ret 0xd089
0x000000000013f22d : rol dword ptr [rax], 1 ; add ah, al ; sahf ; jmp rsp
0x0000000000093d17 : rol dword ptr [rbp + 0x317475c0], -0x40 ; ret
0x0000000000054015 : rol dword ptr [rcx + 0xf], -0x4a ; or al, 0x89 ; ret 0xeac0
0x00000000000336da : rol dword ptr [rcx], -0x7d ; cli ; or al, byte ptr [rbp + 0xf] ; ret 0x8348
0x0000000000141cb5 : rol dword ptr [rcx], 0 ; and al, 0x6e ; sti ; jmp rsp
0x00000000000bdcdb : rol dword ptr [rcx], 0x3b ; adc al, 0xbe ; cmove eax, ecx ; ret
0x0000000000034c1d : rol dword ptr [rcx], 0x3c ; pop rdi ; je 0x34c3a ; jmp 0x34bee
0x00000000000f3290 : rol dword ptr [rcx], 0x45 ; test eax, eax ; jne 0xf3288 ; ret
0x00000000000bd002 : rol dword ptr [rcx], 0x75 ; sub dh, dh ; ret 0x7420
0x00000000001605bd : rol dword ptr [rcx], cl ; add byte ptr [rax + 0x46], dl ; sti ; call rdx
0x0000000000036ac9 : rol eax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000009c6 : rol qword ptr [rax + 0x4260a120], cl ; ret 0x4021
0x0000000000036ac8 : rol rax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000f4df6 : ror ax, 8 ; ret
0x0000000000063546 : ror byte ptr [r13 + 1], 1 ; ret 0x8d4a
0x00000000000368e8 : ror byte ptr [rax + 0x21], 1 ; add al, 0xd7 ; xor eax, eax ; ret
0x0000000000036aca : ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x0000000000035322 : ror byte ptr [rax + 0x21], cl ; ret 0x4866
0x0000000000088b72 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x88bb9 ; add rax, rdi ; ret
0x000000000008589f : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000000dc536 : ror byte ptr [rax + 0x39], 0xd6 ; ja 0xdc547 ; ret
0x00000000000effac : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x00000000000467b3 : ror byte ptr [rax + 0x39], 1 ; ret 0x8948
0x00000000000a3208 : ror byte ptr [rax + 0x39], 1 ; ret 0x9e0f
0x000000000002595b : ror byte ptr [rax + 0x39], cl ; ret
0x000000000003e05a : ror byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000000f19da : ror byte ptr [rax + 0x48e97507], 0x89 ; clc ; ret
0x00000000000a6c2e : ror byte ptr [rax + 0x63], cl ; adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x0000000000044451 : ror byte ptr [rax + 0xf], 0x44 ; ret
0x00000000000e28ca : ror byte ptr [rax + 0xf], 0x48 ; ret 0xc148
0x00000000000b2413 : ror byte ptr [rax + 0xf], 1 ; ret 0x3948
0x00000000000b244d : ror byte ptr [rax + 0xf], 1 ; ret 0x4589
0x00000000000b0f73 : ror byte ptr [rax + 0xf], 1 ; ret 0x8941
0x00000000000e8b5f : ror byte ptr [rax + 0xf], 1 ; ret 0x8948
0x00000000000e8a5d : ror byte ptr [rax + 0xf], 1 ; ret 0x8b48
0x00000000000e8938 : ror byte ptr [rax + 0xf], 1 ; ret 0x9848
0x00000000000e0b84 : ror byte ptr [rax + 0xf], cl ; ret 0x2eb
0x0000000000096ba8 : ror byte ptr [rax + 0xf], cl ; ret 0x8548
0x00000000000e05c2 : ror byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000001045b4 : ror byte ptr [rax + 0xf], cl ; ret 0x8b4c
0x0000000000093e63 : ror byte ptr [rax + 1], 0xf8 ; add rax, r8 ; ret
0x00000000000902ac : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x000000000008757d : ror byte ptr [rax + 1], 0xf8 ; ret
0x00000000000983d9 : ror byte ptr [rax + 1], cl ; ret 0xe974
0x000000000008589c : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x00000000000586df : ror byte ptr [rax + 3], 1 ; test dword ptr [rax - 0x7c000002], ecx ; ret 0x8908
0x0000000000049d0c : ror byte ptr [rax + 3], 1 ; test dword ptr [rax - 0x7c000005], edi ; ret 0x8908
0x0000000000049d7c : ror byte ptr [rax + 3], 1 ; test dword ptr [rax - 0x7c000005], edi ; ret 0x8910
0x00000000000c0f22 : ror byte ptr [rax + 3], cl ; adc ecx, dword ptr [rcx - 0x7d] ; ret 0x8b10
0x00000000000391ee : ror byte ptr [rax + 9], 0xd0 ; ret
0x0000000000088cb6 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x00000000000a2755 : ror byte ptr [rax - 0x3f], 1 ; call 0xffffffffc23370a3
0x00000000000b4818 : ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x0000000000088b32 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x0000000000088b62 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x0000000000093d52 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dh ; ret
0x0000000000088b52 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x00000000000f1180 : ror byte ptr [rax - 0x73], 1 ; cmp eax, 0xfffffe58 ; call rax
0x000000000004628f : ror byte ptr [rax - 0x75], 0x34 ; ror dword ptr [rax - 0x77], 0x34 ; ret 0x8348
0x00000000000ffc15 : ror byte ptr [rax - 0x77], 0x37 ; ret
0x0000000000093979 : ror byte ptr [rax - 0x77], 0xa ; ret
0x0000000000108e15 : ror byte ptr [rax - 0x77], 0xc3 ; jne 0x108db3 ; xor eax, eax ; pop rbx ; ret
0x000000000010cad0 : ror byte ptr [rax - 0x77], 0xd6 ; add rdi, 0x10 ; call rcx
0x00000000000f0fd6 : ror byte ptr [rax - 0x77], 0xe5 ; pop rbp ; ret
0x0000000000039868 : ror byte ptr [rax - 0x77], 0xf ; mov qword ptr [rdi + 8], rdx ; ret
0x00000000000f110a : ror byte ptr [rax - 0x77], 1 ; adc eax, 0x27c08e ; pop rbp ; ret
0x000000000004ecbf : ror byte ptr [rax - 0x77], 1 ; ret 0x68e8
0x0000000000039fce : ror byte ptr [rax - 0x77], 1 ; ret 0x8966
0x0000000000077a35 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x00000000000a5c85 : ror byte ptr [rax - 0x77], 1 ; ret 0x8d48
0x0000000000034521 : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x000000000010ecca : ror byte ptr [rax - 0x77], 2 ; mov eax, 1 ; ret
0x00000000000b0f98 : ror byte ptr [rax - 0x77], cl ; ret
0x000000000010aadd : ror byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000006ed18 : ror byte ptr [rax - 0x7b], cl ; rol byte ptr [rbx + rcx*4 + 3], 0xf ; xchg eax, esp ; ret 0xdaf7
0x0000000000092837 : ror byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x95 ; ret 0xd029
0x00000000000e0e92 : ror byte ptr [rax - 0x7d], 0x3e ; add byte ptr [rdx + rax + 0x5b], dh ; ret
0x0000000000033bb7 : ror byte ptr [rax - 0x7d], 0xc4 ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000720b7 : ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000110900 : ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rbx + 0x5d], bl ; ret
0x00000000000d8248 : ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x0000000000038b55 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000042a54 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x000000000011cb51 : ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x000000000004469a : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000114d32 : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000fee26 : ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rbx + 0x5d], bl ; ret
0x0000000000093db2 : ror byte ptr [rax - 0x7d], 0xea ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x0000000000093d92 : ror byte ptr [rax - 0x7d], 0xea ; and byte ptr [rax + 1], cl ; ret 0x347c
0x0000000000093d72 : ror byte ptr [rax - 0x7d], 0xea ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x00000000000d664a : ror byte ptr [rax - 0x7d], 0xec ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000b28a2 : ror byte ptr [rax - 0x7d], 0xfa ; dec dword ptr [rax + 0xf] ; ret 0x48c3
0x000000000007e73e : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2912f5d
0x0000000000114cd8 : ror byte ptr [rax - 0x7d], 1 ; in al, dx ; or byte ptr [rax - 0x77], 0xd0 ; pop rbx ; ret
0x000000000003bd66 : ror byte ptr [rax - 0x7d], 1 ; ret
0x0000000000038c48 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x00000000001162a7 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4c01
0x000000000007490b : ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x00000000000a9d0d : ror byte ptr [rax - 0x7d], cl ; ret
0x0000000000028c42 : ror byte ptr [rax - 0x7d], cl ; ret 0x4901
0x0000000000028873 : ror byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000003f1bf : ror byte ptr [rax - 9], cl ; fimul dword ptr [rax + 0x39] ; ret 0xf48
0x0000000000076a6e : ror byte ptr [rax - 9], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003c6d2 : ror byte ptr [rax], 0x83 ; ret 0x4801
0x00000000000878c4 : ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x0000000000091f9e : ror byte ptr [rbp + 0x29], cl ; ret 0x8b46
0x0000000000063547 : ror byte ptr [rbp + 1], 1 ; ret 0x8d4a
0x00000000000452ad : ror byte ptr [rbp - 0x75], 1 ; add byte ptr [rbp - 0x77], cl ; ret
0x0000000000044ac4 : ror byte ptr [rbp - 0x7b], cl ; dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xc031
0x000000000009a98c : ror byte ptr [rbp - 0x7bf0febe], 1 ; ret 0
0x000000000011762b : ror byte ptr [rbx + 0x453b0840], cl ; mov word ptr [rdi], cs ; xchg eax, esp ; ret 0xea83
0x00000000000b4592 : ror byte ptr [rbx], 1 ; mov ax, 0xfde8 ; jne 0xb4569 ; ret
0x0000000000043072 : ror byte ptr [rcx + 0x39], 1 ; clc ; jne 0x43053 ; ret
0x0000000000085a2f : ror byte ptr [rcx + 0x39], 1 ; ret
0x00000000000d6503 : ror byte ptr [rcx + 0x39], 1 ; ret 0x1775
0x00000000000283bf : ror byte ptr [rcx + 0x39], cl ; ret
0x0000000000025a2f : ror byte ptr [rcx + 0x41082444], cl ; call rsi
0x0000000000101170 : ror byte ptr [rcx + 0x63], 0xfe ; mov eax, 3 ; syscall
0x00000000000e2d4f : ror byte ptr [rcx + 0x63], 0xff ; mov al, 3 ; syscall
0x00000000000d297c : ror byte ptr [rcx + 0xf482444], 0x84 ; ret
0x00000000000a2cd9 : ror byte ptr [rcx + rbp - 0x31], 0x29 ; ret
0x00000000000c5119 : ror byte ptr [rcx + rcx*4 - 0x31], cl ; call 0xc1426
0x000000000006df8a : ror byte ptr [rcx + rcx*4 - 0x32], cl ; mov eax, r8d ; syscall
0x0000000000036e9b : ror byte ptr [rcx + rcx*4 - 0x3a], cl ; mov eax, ecx ; syscall
0x0000000000109eea : ror byte ptr [rcx + rcx*4 - 1], 0x89 ; ret
0x0000000000035968 : ror byte ptr [rcx - 0x24efdbbc], 1 ; insb byte ptr [rdi], dx ; and al, 8 ; ret
0x000000000003b595 : ror byte ptr [rcx - 0x3f], cl ; cli ; add cl, byte ptr [rcx + 0x29] ; ret 0x8b48
0x0000000000035cc6 : ror byte ptr [rcx - 0x3fcebfbd], 0x5b ; ret
0x00000000000ffc58 : ror byte ptr [rcx - 0x76b7f3a9], 0x3e ; ret
0x000000000010bffd : ror byte ptr [rcx - 0x77], 0 ; mov eax, 1 ; ret
0x000000000008ef88 : ror byte ptr [rcx - 0x7d], 1 ; ret
0x00000000000b2ec7 : ror byte ptr [rcx - 0x7f], cl ; ret 0x2d0
0x00000000000964a8 : ror byte ptr [rcx - 0xc0c8af0], cl ; ret
0x0000000000095718 : ror byte ptr [rcx - 0xd8af1ec], cl ; ret
0x00000000000e3740 : ror byte ptr [rcx], 0xf8 ; ret
0x0000000000089449 : ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x0000000000035f66 : ror byte ptr [rdi], 0 ; add byte ptr [rax], al ; syscall
0x000000000007b6a4 : ror byte ptr [rdi], 0x1f ; add bl, dh ; ret
0x00000000000dc5e4 : ror byte ptr [rdi], 0x1f ; add byte ptr [rax - 0x39], cl ; ret
0x00000000000960ca : ror byte ptr [rdi], 0x1f ; add byte ptr [rax], r8b ; ret
0x00000000000e2620 : ror byte ptr [rdi], 0x84 ; adc dword ptr [rcx], eax ; add byte ptr [rax], al ; call rax
0x000000000003b55a : ror byte ptr [rdi], 0x84 ; leave ; or dword ptr [rax], eax ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x00000000000449ac : ror byte ptr [rdi], 0x84 ; mov word ptr [rax + rax], es ; add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000023816 : ror byte ptr [rdi], 0x84 ; ret
0x00000000000b269f : ror byte ptr [rdi], 0x84 ; ret 0
0x00000000000d173c : ror byte ptr [rdi], 0x84 ; ret 0xfffb
0x0000000000093cdc : ror byte ptr [rdi], 0x85 ; jge 0x93cea ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000c7b9e : ror byte ptr [rdi], 0x85 ; ret
0x00000000000d0d86 : ror byte ptr [rdi], 0x85 ; ret 0
0x000000000003c38d : ror byte ptr [rdi], 0x87 ; ret
0x00000000000b4497 : ror byte ptr [rdi], 0x92 ; ret 0xd029
0x0000000000082971 : ror byte ptr [rdi], 0x94 ; ret
0x0000000000110695 : ror byte ptr [rdi], 0x94 ; ret 0x3d83
0x00000000000a33cd : ror byte ptr [rdi], 0x94 ; ret 0x543a
0x0000000000021cf9 : ror byte ptr [rdi], 0x94 ; ret 0x8d48
0x000000000005f8a7 : ror byte ptr [rdi], 0x94 ; ret 0xd189
0x000000000001f7ea : ror byte ptr [rdi], 0x95 ; ret
0x00000000000735f8 : ror byte ptr [rdi], 0x95 ; ret 0x44e9
0x000000000010a049 : ror byte ptr [rdi], 0x95 ; ret 0x8348
0x0000000000109326 : ror byte ptr [rdi], 0x95 ; ret 0xd089
0x0000000000073541 : ror byte ptr [rdi], 0x95 ; ret 0xd284
0x000000000006c4e8 : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x0000000000097241 : ror byte ptr [rdi], 0x95 ; ret 0xf883
0x00000000000a392c : ror byte ptr [rdi], 0xaf ; ret 0x67ba
0x00000000000b4815 : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; add bh, bh ; ret
0x0000000000069f07 : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; ret
0x00000000000cc473 : ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00000000000d844e : ror byte ptr [rdi], 0xb6 ; shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x0000000000034536 : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x34520 ; ret
0x00000000001458b0 : ror byte ptr [rdi], 1 ; out dx, eax ; jmp qword ptr [rcx]
0x00000000000bcd20 : ror byte ptr [rdi], 1 ; ret 0xc639
0x00000000000c5142 : ror byte ptr [rdi], 1 ; ret 0xce89
0x0000000000088c06 : ror byte ptr [rdi], 1 ; test dword ptr [rax + rax - 0x8b70000], ecx ; ret 2
0x0000000000093dfd : ror byte ptr [rdi], cl ; mov ebp, 0xf80148c0 ; ret
0x000000000007af8e : ror byte ptr [rdi], cl ; ret 0x6348
0x00000000000e0650 : ror byte ptr [rdi], cl ; ret 0x9848
0x0000000000039264 : ror byte ptr [rdi], cl ; ret 0xc35b
0x00000000000bfd99 : ror byte ptr [rdi], cl ; ret 0xd3eb
0x00000000000e3124 : ror byte ptr [rdi], cl ; ret 0xfc3
0x00000000000ce5d4 : ror byte ptr [rdi], cl ; test byte ptr [rdi], al ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret 0x840f
0x00000000000d1645 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000000a32d9 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x000000000014add0 : ror cl, 1 ; jmp qword ptr [rcx]
0x00000000000e4d76 : ror dword ptr [rax + 0x39], -0x36 ; jb 0xe4d87 ; ret
0x00000000000b3f31 : ror dword ptr [rax + 0x63], cl ; ret
0x00000000000e2814 : ror dword ptr [rax + 0xf], cl ; ret
0x000000000003b1c4 : ror dword ptr [rax + 1], 1 ; ret 0x8b48
0x00000000001117c6 : ror dword ptr [rax - 0x39], 1 ; ret 0xfffe
0x0000000000092f49 : ror dword ptr [rax - 0x39], 1 ; ret 0xffff
0x000000000003e66e : ror dword ptr [rax - 0x3f], -8 ; add cl, byte ptr [rcx + 0x39] ; ret 0x870f
0x00000000000a9259 : ror dword ptr [rax - 0x73], 0x14 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000000be455 : ror dword ptr [rax - 0x75], cl ; push rbx ; adc byte ptr [rax + 0x39], cl ; ret 0x574
0x0000000000046293 : ror dword ptr [rax - 0x77], 0x34 ; ret 0x8348
0x00000000000a3a2b : ror dword ptr [rax - 0x77], 0x4f ; and byte ptr [rbx + 0x5d], bl ; ret
0x00000000000e2eed : ror dword ptr [rax - 0x77], 1 ; fadd st(6) ; add al, byte ptr [rax] ; pop rbx ; ret
0x0000000000028dd2 : ror dword ptr [rax - 0x77], 1 ; ret 0xb70f
0x000000000010a88a : ror dword ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000010aad0 : ror dword ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000070b5d : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x70b57 ; ret
0x0000000000079265 : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x7925f ; ret
0x000000000011dcee : ror dword ptr [rax - 0x7d], -0x3c ; or bl, dh ; ret
0x0000000000046ab9 : ror dword ptr [rax - 0x7d], cl ; in al, dx ; cmp dh, dh ; ret 0x7401
0x00000000000782d7 : ror dword ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000078429 : ror dword ptr [rbp - 0x7cb70090], 1 ; ret 0x8301
0x00000000000bcce9 : ror dword ptr [rcx + 0x47892c47], 0x30 ; ret
0x000000000004fdda : ror dword ptr [rcx + 1], 1 ; ret 0x8d4d
0x0000000000093c75 : ror dword ptr [rdi], -0x43 ; ror byte ptr [rax + 1], 0xf8 ; ret
0x0000000000094397 : ror dword ptr [rdi], -0x51 ; ret
0x00000000000db7d8 : ror dword ptr [rdi], -0x6e ; ret 0xcc80
0x00000000000c0889 : ror dword ptr [rdi], -0x6e ; ret 0xd138
0x0000000000048469 : ror dword ptr [rdi], -0x7b ; ret
0x00000000001153f4 : ror dword ptr [rdi], -0x7c ; lahf ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x00000000000d8430 : ror dword ptr [rdi], 1 ; xchg eax, edx ; ret 0x970f
0x000000000007dabd : ror dword ptr [rdi], cl ; xchg eax, ebp ; ret 0x8348
0x000000000014a862 : ror dword ptr [rsi], 0x28 ; ret
0x00000000000f4df7 : ror eax, 8 ; ret
0x000000000003e66d : ror qword ptr [r8 - 0x3f], -8 ; add cl, byte ptr [rcx + 0x39] ; ret 0x870f
0x0000000000070b5c : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x70b58 ; ret
0x0000000000079264 : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x79260 ; ret
0x00000000000daad9 : sahf ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000558bd : sahf ; add byte ptr [rax], al ; add byte ptr [rbx - 0x110343], al ; call qword ptr [rax]
0x0000000000055595 : sahf ; add byte ptr [rax], al ; add byte ptr [rbx - 0x114743], al ; call qword ptr [rax]
0x00000000001309e5 : sahf ; cmc ; jmp qword ptr [rax]
0x000000000000259a : sahf ; jl 0x252f ; loop 0x257a ; ret 0x23cb
0x0000000000002599 : sahf ; jl 0x2530 ; loop 0x257b ; ret 0x23cb
0x000000000013f231 : sahf ; jmp rsp
0x0000000000032da6 : sahf ; jns 0x32de2 ; add byte ptr [rcx - 0x77], cl ; ret 0x59e9
0x000000000012c985 : sahf ; ret 0x38ae
0x00000000000a693e : sahf ; ret 0xd129
0x00000000000a320d : sahf ; ret 0xe9c1
0x0000000000002417 : sahf ; sbb byte ptr [rax], cl ; ret 0x5576
0x000000000007f742 : sahf ; shr byte ptr [rsi], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000015e750 : sal al, 1 ; cli ; call qword ptr [rbx]
0x00000000000dd29c : sal bh, 0xd8 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000011073a : sal bh, 0xd8 ; add rsp, 0x18 ; ret
0x0000000000110acc : sal bh, 0xd8 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000db1da : sal bh, 0xd8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d84b2 : sal bh, 0xd8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000069f0a : sal bh, 0xd8 ; pop rbx ; ret
0x0000000000022602 : sal bh, 0xd8 ; ret
0x0000000000094702 : sal bh, 0xf1 ; pop rbx ; mov eax, eax ; ret
0x0000000000085057 : sal bh, 1 ; ret 0x8000
0x0000000000084f17 : sal bh, 1 ; ret 0xc000
0x0000000000084dd7 : sal bh, 1 ; ret 0xe000
0x0000000000084c97 : sal bh, 1 ; ret 0xf000
0x0000000000084b57 : sal bh, 1 ; ret 0xf800
0x0000000000084a17 : sal bh, 1 ; ret 0xfc00
0x00000000000848d7 : sal bh, 1 ; ret 0xfe00
0x0000000000084797 : sal bh, 1 ; ret 0xff00
0x0000000000084657 : sal bh, 1 ; ret 0xff80
0x0000000000084517 : sal bh, 1 ; ret 0xffc0
0x00000000000843d7 : sal bh, 1 ; ret 0xffe0
0x0000000000084297 : sal bh, 1 ; ret 0xfff0
0x0000000000084157 : sal bh, 1 ; ret 0xfff8
0x0000000000084017 : sal bh, 1 ; ret 0xfffc
0x0000000000083ed7 : sal bh, 1 ; ret 0xfffe
0x000000000004d134 : sal bh, cl ; int1 ; add r8d, eax ; mov eax, r8d ; ret
0x0000000000044f1f : sal bl, 1 ; ret
0x00000000000961ff : sal byte ptr [rax + rbx + 0x49], 0x83 ; ret 0x4908
0x00000000001102f5 : sal byte ptr [rax + rcx*2 - 0x75], 0x50 ; adc dh, dh ; ret 0x7401
0x000000000007de7e : sal byte ptr [rax + rdx + 0x48], 0x89 ; push rsp ; and al, 0x28 ; call rax
0x0000000000107315 : sal byte ptr [rax + rdx*2 - 0x75], 0x50 ; adc dh, dh ; ret 0x7401
0x00000000000cc4e2 : sal byte ptr [rax + rdx*2 - 0xd], 1 ; ret
0x0000000000031b0d : sal byte ptr [rax + rsi + 0x48], 0x83 ; ret 0xeb04
0x000000000011d244 : sal byte ptr [rbp + 0x16], cl ; mov eax, 0x27 ; syscall
0x000000000010079f : sal byte ptr [rbp + 0x1e], 0x83 ; ret 0x8401
0x00000000000afe6b : sal byte ptr [rbp + 0x21], 0xb8 ; je 0xafe79 ; add byte ptr [rax], al ; syscall
0x00000000000d5020 : sal byte ptr [rbp + 0x29], 0x83 ; ret
0x0000000000088b28 : sal byte ptr [rbp + 0x55], 0x48 ; xor eax, eax ; ret
0x00000000000f088b : sal byte ptr [rbp + 2], cl ; ret
0x00000000000effd0 : sal byte ptr [rbp + 5], cl ; ret
0x00000000000f010f : sal byte ptr [rbp + 6], cl ; ret
0x00000000000f0785 : sal byte ptr [rbp + 7], 1 ; mov eax, 0xca ; syscall
0x00000000000f018d : sal byte ptr [rbp + 8], cl ; ret
0x000000000006987c : sal byte ptr [rbp + 9], 0x48 ; mov eax, ebx ; pop rbx ; ret
0x0000000000108cf4 : sal byte ptr [rbp + 9], 0x5b ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x000000000011e5e4 : sal byte ptr [rbp + 9], 0x5b ; ret
0x00000000000854b9 : sal byte ptr [rbp + rax + 0x5b], 0x5d ; pop r12 ; ret
0x0000000000093860 : sal byte ptr [rbp + rbp*8 + 0x41], 1 ; cmp eax, ecx ; je 0x93859 ; ret
0x00000000000f4cf9 : sal byte ptr [rbp + rdi + 0x48], 0x89 ; ret 0x8348
0x000000000003e357 : sal byte ptr [rbp + rdx + 0x4c], 0x39 ; ret 0x1075
0x000000000007a68d : sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x000000000009372d : sal byte ptr [rbp - 0x10], cl ; ret
0x000000000004549e : sal byte ptr [rbp - 0x11], 1 ; xor eax, eax ; ret
0x00000000000f0b0e : sal byte ptr [rbp - 0x11], cl ; leave ; ret
0x0000000000070b60 : sal byte ptr [rbp - 0x13], cl ; ret
0x00000000000f3294 : sal byte ptr [rbp - 0x17], 0xf3 ; ret
0x0000000000093a9f : sal byte ptr [rbp - 0x1a], cl ; xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x00000000000937da : sal byte ptr [rbp - 0x1d], 0xf3 ; ret
0x0000000000112062 : sal byte ptr [rbp - 0x1d], cl ; pop rbx ; ret
0x00000000000b5a8f : sal byte ptr [rbp - 0x25], cl ; ret
0x000000000003453b : sal byte ptr [rbp - 0x27], cl ; ret
0x0000000000109c8f : sal byte ptr [rbp - 0x2a], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000b583e : sal byte ptr [rbp - 0x2a], cl ; xor eax, eax ; ret
0x00000000000dd8ed : sal byte ptr [rbp - 0x30], 0x5b ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000000dd97e : sal byte ptr [rbp - 0x31], 0x5b ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000000960c2 : sal byte ptr [rbp - 0x35], 0xf3 ; ret
0x00000000000f0c3c : sal byte ptr [rbp - 0x3f], 0xc9 ; ret
0x00000000000e2d4d : sal byte ptr [rbp - 0x40], 0x49 ; movsxd rdi, edi ; mov al, 3 ; syscall
0x000000000009115b : sal byte ptr [rbp - 0x67], 0x48 ; mov eax, edi ; ret
0x00000000000dae34 : sal byte ptr [rbp - 0x6f], 0x44 ; mov edi, esp ; call 0xd7128
0x000000000008388a : sal byte ptr [rbp - 0xd], cl ; ret
0x00000000000977d3 : sal byte ptr [rbp - 0xe], cl ; ret
0x00000000000f0794 : sal byte ptr [rbp - 0xf], 0x5a ; pop r10 ; ret
0x00000000000de846 : sal byte ptr [rbx + rax + 0x48], 0x89 ; adc bl, dh ; ret
0x00000000001077e2 : sal byte ptr [rbx + rax*2 + 0x48], 0x8b ; sbb ecx, dword ptr [rax - 0x7d] ; ret
0x000000000006731d : sal byte ptr [rbx + rbp + 0x48], 0x89 ; ret
0x00000000000859d2 : sal byte ptr [rbx + rbx + 0x48], cl ; bsf eax, edx ; ret
0x00000000000b0f09 : sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret
0x00000000000defd9 : sal byte ptr [rbx + rcx + 0x48], 0x83 ; ret 0x4808
0x000000000011148a : sal byte ptr [rbx + rcx + 0x48], 1 ; add esp, 8 ; ret
0x0000000000030a51 : sal byte ptr [rbx + rdx + 0x48], 0x83 ; ret 0x4901
0x0000000000106d8a : sal byte ptr [rcx + rcx + 0x48], 0x89 ; out dx, eax ; call rax
0x0000000000108aa4 : sal byte ptr [rcx + rcx + 0x48], cl ; mov edi, ebp ; call rdx
0x00000000000eb46d : sal byte ptr [rcx + rcx - 0x77], cl ; ret 0xeac1
0x0000000000111409 : sal byte ptr [rcx + rcx*8 + 0x64], 0x48 ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x000000000004cf3e : sal byte ptr [rcx], 0 ; call rax
0x00000000000d1f3a : sal byte ptr [rcx], 1 ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000effaa : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x00000000000da507 : sal byte ptr [rcx], cl ; div byte ptr [rcx] ; shr al, 0xff ; ret 0xffff
0x000000000006df88 : sal byte ptr [rcx], cl ; ror byte ptr [rcx + rcx*4 - 0x32], cl ; mov eax, r8d ; syscall
0x000000000003633e : sal byte ptr [rcx], cl ; test byte ptr [rcx + rcx*4 - 0x31], 0x44 ; mov eax, eax ; syscall
0x00000000000d3bde : sal byte ptr [rdi + rax + 0x48], 0x83 ; ret
0x00000000000b0de0 : sal byte ptr [rdi + rax - 0x3a], 3 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000215f6 : sal byte ptr [rdx + rax*2 - 0xa], cl ; ret 0x7401
0x00000000000ecffb : sal byte ptr [rdx + rbx + 0x48], 0x83 ; ret
0x000000000010cb56 : sal byte ptr [rdx + rcx + 0x48], 0x8d ; jge 0x10cb74 ; call rax
0x0000000000112116 : sal byte ptr [rdx + rcx + 0x48], 0x8d ; jge 0x112134 ; call rax
0x000000000011286f : sal byte ptr [rdx + rcx + 0x48], 0x8d ; jge 0x11288d ; call rax
0x000000000010eba2 : sal byte ptr [rdx + rcx + 0x48], 0x8d ; jnp 0x10ec18 ; call rax
0x000000000010f742 : sal byte ptr [rdx + rcx + 0x48], 0x8d ; jnp 0x10f7a8 ; call rax
0x00000000000857d3 : sal byte ptr [rdx + rcx + 0x48], cl ; bsf eax, edx ; ret
0x00000000000fbc0b : sal byte ptr [rdx + rdi*2 + 0x48], 0x83 ; ret
0x00000000000911d1 : sal byte ptr [rdx + rdx + 0x48], 0x89 ; ret 0x8948
0x0000000000083a43 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x0000000000093dfb : sal byte ptr [rdx + rdx*8 + 0xf], 0xbd ; ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000011a137 : sal byte ptr [rsi + rax + 0x31], 0xdb ; mov eax, ebx ; pop rbx ; ret
0x0000000000146430 : sal byte ptr [rsi], 1 ; out dx, eax ; call qword ptr [rsi]
0x0000000000103dd1 : sal byte ptr [rsp + rbx + 0x48], 0x83 ; ret
0x000000000010afe9 : sal byte ptr [rsp + rcx + 0x48], cl ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000e0d5d : sal dh, cl ; and al, 0x29 ; or byte ptr [rdi], 0x95 ; ret 0xd3eb
0x00000000000d691a : sal dh, cl ; ret 0x4840
0x000000000009382d : sal dword ptr [rax + rsi*8 - 0xd], 1 ; ret
0x000000000003555a : sal dword ptr [rbp + 0xb], 0x48 ; add esp, 8 ; ret
0x0000000000035845 : sal dword ptr [rbp + 8], 0x48 ; add esp, 8 ; ret
0x000000000007876c : sal dword ptr [rbp + 9], cl ; pop rbx ; ret
0x0000000000095be8 : sal dword ptr [rbp - 0x1b], 1 ; sub eax, r8d ; nop ; ret
0x00000000000874a1 : sal dword ptr [rbp - 0xc], 1 ; ret
0x0000000000093977 : sal dword ptr [rcx], -0x40 ; mov qword ptr [rdx], rcx ; ret
0x000000000008569d : sal dword ptr [rcx], 1 ; ret
0x0000000000036919 : sal dword ptr [rcx], 1 ; rol cl, 0xe9 ; add esi, esi ; ret 0xf304
0x0000000000130a41 : sal ebp, 1 ; jmp qword ptr [rax]
0x000000000013ebc1 : sal edx, 1 ; call rsp
0x0000000000156839 : sar al, 1 ; jmp qword ptr [rdi]
0x00000000000e52c3 : sar byte ptr [rax + 0x14], cl ; syscall
0x00000000000d613b : sar byte ptr [rax + 0x1c], cl ; syscall
0x00000000000becf1 : sar byte ptr [rax + 0x29], 0x89 ; ret 0x8b49
0x000000000011955a : sar byte ptr [rax + 0xb], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000b482f : sar byte ptr [rax + 1], 1 ; ret
0x0000000000114e95 : sar byte ptr [rax + 1], cl ; jne 0x114ea8 ; ret
0x0000000000114ed5 : sar byte ptr [rax + 1], cl ; jne 0x114ee8 ; ret
0x00000000000e3062 : sar byte ptr [rax + 3], 1 ; syscall
0x0000000000074410 : sar byte ptr [rax + 5], 0xf3 ; ret
0x00000000000bdc48 : sar byte ptr [rbx], 0x56 ; add al, 0x74 ; add dh, bl ; ret
0x000000000015fd20 : sar byte ptr [rbx], 0xfb ; jmp qword ptr [rdx]
0x000000000007dc4a : sar byte ptr [rcx + 0x3948002e], cl ; ret
0x00000000001466a0 : sar byte ptr [rcx], 1 ; out dx, eax ; jmp qword ptr [rcx]
0x00000000000e3557 : sar byte ptr [rdi + rax*2 + 0x74], 1 ; ret
0x0000000000160ef0 : sar byte ptr [rdi - 5], 1 ; jmp qword ptr [rax]
0x0000000000002b39 : sar byte ptr [rdx], cl ; adc al, 0xe7 ; ret
0x00000000000b3d80 : sar byte ptr [rsi + 2], 1 ; ret
0x000000000012d31f : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000142e69 : sar ch, 0xff ; jl 0x142eac ; add al, byte ptr [rax] ; ret 0xfffd
0x000000000015a691 : sar cl, 1 ; call rcx
0x00000000001308c0 : sar dh, 0xf4 ; ljmp ptr [rax] ; push rsp ; call rax
0x00000000000a01da : sar dh, 0xff ; dec dword ptr [rax - 0x77] ; ret
0x000000000004b473 : sar dl, 0xff ; dec dword ptr [rdi] ; xchg eax, esp ; shr eax, 0x11 ; ret
0x00000000000e3805 : sar dword ptr [rcx + 0x119], 1 ; mov eax, ecx ; syscall
0x0000000000096391 : sar dword ptr [rsi - 0x14], -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000035925 : sar eax, 0x10 ; ret
0x00000000000355ef : sar eax, 0x1f ; not eax ; and eax, ecx ; ret
0x00000000000b1651 : sar eax, 0x1f ; pop rbx ; ret
0x00000000000dc3f9 : sar eax, 0x1f ; ret
0x00000000000358de : sar eax, 0x1f ; sub edx, ecx ; not eax ; and eax, edx ; ret
0x0000000000035221 : sar eax, 0x3f ; not eax ; and eax, ecx ; ret
0x0000000000003a75 : sar eax, 1 ; cmp eax, ecx ; mov bl, 0xf7 ; adc bh, byte ptr [rax] ; cwde ; ret
0x00000000000716ac : sar eax, 2 ; lea eax, [r8 - 1] ; ret
0x0000000000073f54 : sar eax, 2 ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000071e2d : sar eax, 2 ; ret
0x00000000000f4a71 : sar eax, 6 ; ret
0x000000000015a6b9 : sar ecx, 1 ; jmp rax
0x000000000012d083 : sar ecx, 1 ; jnp 0x12d044 ; ret
0x000000000015a709 : sar ecx, cl ; call qword ptr [rax]
0x00000000000649ff : sar edi, cl ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x000000000005ada0 : sar edi, cl ; inc dword ptr [rcx - 9] ; ret
0x0000000000039198 : sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x00000000000391ab : sar edx, 0x3f ; xor rax, rdx ; sub rax, rdx ; ret
0x0000000000141761 : sar edx, 1 ; call rsp
0x0000000000101999 : sar edx, 4 ; add rdx, 1 ; syscall
0x0000000000088cb8 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000142559 : sar esp, -1 ; mov esp, 0x940001ff ; ret 0xfffc
0x00000000001425e1 : sar esp, cl ; jmp rsp
0x00000000000716ab : sar r8, 2 ; lea eax, [r8 - 1] ; ret
0x0000000000035220 : sar rax, 0x3f ; not eax ; and eax, ecx ; ret
0x0000000000071e2c : sar rax, 2 ; ret
0x00000000000f4a70 : sar rax, 6 ; ret
0x0000000000101998 : sar rdx, 4 ; add rdx, 1 ; syscall
0x0000000000088cb7 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x000000000002289e : sbb ah, byte ptr [rax] ; call rax
0x00000000000f8e6c : sbb ah, byte ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000002671 : sbb ah, cl ; mov ah, 0xf4 ; out 0xdf, eax ; syscall
0x0000000000146e70 : sbb al, 0 ; add byte ptr [rax], al ; pop rsp ; cmp al, 0 ; add byte ptr [rax], bl ; ret
0x000000000014f558 : sbb al, 0 ; add byte ptr [rax], al ; ret
0x00000000000d613d : sbb al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000144834 : sbb al, 0x16 ; add byte ptr [rax], al ; movsq qword ptr [rdi], qword ptr [rsi] ; out dx, al ; jmp qword ptr [rcx]
0x00000000000eef02 : sbb al, 0x20 ; je 0xeef76 ; xor eax, eax ; pop rbx ; ret
0x00000000000eef01 : sbb al, 0x20 ; je 0xeef77 ; xor eax, eax ; pop rbx ; ret
0x0000000000156834 : sbb al, 0x36 ; add dword ptr [rax], eax ; js 0x156811 ; clc ; jmp qword ptr [rdi]
0x0000000000002f3c : sbb al, 0x44 ; nop ; ret 0x5bdb
0x00000000001075de : sbb al, 0x48 ; add esp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116970 : sbb al, 0x80 ; and eax, 0x358d4800 ; ret 0x1fc
0x000000000014c034 : sbb al, 0x8e ; add byte ptr [rax], al ; test al, 0x25 ; jmp rdx
0x000000000014c834 : sbb al, 0x96 ; add byte ptr [rax], al ; fcomp dword ptr [rax - 0xd] ; jmp qword ptr [rbx]
0x00000000000c91c5 : sbb al, 0x99 ; add r11, r9 ; jmp r11
0x00000000000bb7f3 : sbb al, 0xb8 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000015ed34 : sbb al, 0xbb ; add dword ptr [rax], eax ; or byte ptr [rax], cl ; sti ; call rdi
0x000000000000042c : sbb al, 0xc ; ret 0x4412
0x0000000000151134 : sbb al, 0xdf ; add byte ptr [rax], al ; clc ; xor dh, dh ; call rax
0x00000000000d640f : sbb al, 0xf3 ; ret
0x000000000015f0c1 : sbb al, 0xfb ; jmp qword ptr [rax]
0x0000000000144cf5 : sbb al, byte ptr [rax] ; add byte ptr [rax - 0x3e], ch ; out dx, al ; jmp qword ptr [rdi]
0x0000000000144cc5 : sbb al, byte ptr [rax] ; add byte ptr [rax - 0x3e], cl ; out dx, al ; jmp qword ptr [rcx]
0x00000000000e00f2 : sbb al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x000000000009620c : sbb al, byte ptr [rcx - 0x75] ; add dword ptr [rcx + 0x39], eax ; ret
0x00000000000e44f7 : sbb al, ch ; ret
0x000000000014bd78 : sbb bh, bh ; jmp rsp
0x00000000000bb7aa : sbb bh, byte ptr [rax + 2] ; ret
0x00000000000ce55b : sbb bh, byte ptr [rcx] ; ret 0x3474
0x00000000001147ec : sbb bl, al ; nop ; xor eax, eax ; ret
0x000000000012be05 : sbb bl, byte ptr [rsi] ; ret
0x000000000011482a : sbb bl, dh ; ret
0x000000000008ed3b : sbb byte ptr [r11 + 0x5d], r11b ; pop r12 ; pop r13 ; ret
0x0000000000114bb1 : sbb byte ptr [r11 + 0x5d], r11b ; pop r12 ; ret
0x0000000000075676 : sbb byte ptr [r8 + 0x29], cl ; ret 0x8948
0x0000000000114886 : sbb byte ptr [r8 + 1], r15b ; ret
0x000000000007568b : sbb byte ptr [r9 + r9*4 - 0x20], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000112cd9 : sbb byte ptr [r9 - 0x75], r9b ; push rbp ; adc byte ptr [rbx + rcx*4 + 0x24], cl ; ret 0x854d
0x0000000000112e3d : sbb byte ptr [r9 - 0x75], r9b ; push rbp ; adc byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8348
0x00000000000d69b9 : sbb byte ptr [rax + 0x101], bh ; syscall
0x0000000000075677 : sbb byte ptr [rax + 0x29], cl ; ret 0x8948
0x0000000000114855 : sbb byte ptr [rax + 1], bh ; ret
0x00000000001030ce : sbb byte ptr [rax + 3], bh ; syscall
0x000000000010a72f : sbb byte ptr [rax + 9], cl ; ret 0xb60f
0x000000000007b846 : sbb byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000d1004 : sbb byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000000794a5 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000116157 : sbb byte ptr [rax - 0x77], cl ; ret
0x0000000000051631 : sbb byte ptr [rax - 0x77], cl ; ret 0x6349
0x0000000000108ed2 : sbb byte ptr [rax - 0x77], cl ; ret 0x894c
0x00000000000d8893 : sbb byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000109200 : sbb byte ptr [rax - 0x77], cl ; ret 0xd9e9
0x00000000000776f8 : sbb byte ptr [rax - 0x7d], cl ; cli ; dec dword ptr [rax + 0xf] ; ret 0x8d48
0x00000000000e1164 : sbb byte ptr [rax - 0x7d], cl ; ret
0x00000000000d8a55 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000008e882 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000000000007fad7 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000008e881 : sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x0000000000079a9f : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000cc1b5 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000144a45 : sbb byte ptr [rax], al ; add byte ptr [rax], bl ; cmpsb byte ptr [rsi], byte ptr [rdi] ; out dx, al ; call rsp
0x0000000000075f6b : sbb byte ptr [rax], al ; je 0x75f7d ; ret
0x0000000000017ad6 : sbb byte ptr [rax], al ; ret 0x58
0x0000000000002418 : sbb byte ptr [rax], cl ; ret 0x5576
0x000000000003d635 : sbb byte ptr [rbp + 0x31], al ; rol byte ptr [rbp - 0x6af0be13], cl ; ret 0xc748
0x00000000000c1a69 : sbb byte ptr [rbp + 0x39], al ; ret 0xb975
0x00000000000c1ba3 : sbb byte ptr [rbp + rcx*4 + 0x70], cl ; add dword ptr [rcx - 0x77], ecx ; ret 0x6348
0x000000000010a3fa : sbb byte ptr [rbp - 0x77], cl ; ret
0x0000000000096d2f : sbb byte ptr [rbx + 0x48], 0x29 ; call 0xffffffffc365ae9d
0x00000000000967b6 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000d664e : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000755da : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006953e : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000114bb2 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000023e17 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000e8caf : sbb byte ptr [rbx + 0x5d], bl ; xor eax, eax ; pop r12 ; ret
0x0000000000113b7b : sbb byte ptr [rbx + 0xf], bl ; mov dh, 0xc0 ; pop rbp ; ret
0x000000000007a6db : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000001167a2 : sbb byte ptr [rbx - 0x6bf0f502], al ; ret
0x00000000001601b8 : sbb byte ptr [rbx - 5], al ; call qword ptr [rsi]
0x00000000001147c3 : sbb byte ptr [rcx + 0x1b02857], cl ; ret
0x000000000003bc82 : sbb byte ptr [rcx + 0x39], cl ; ret
0x00000000000d1c60 : sbb byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x0000000000114ab0 : sbb byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; pop r13 ; ret
0x000000000007119f : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x0000000000115a23 : sbb byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8b41
0x000000000007568c : sbb byte ptr [rcx + rcx*4 - 0x20], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e451b : sbb byte ptr [rcx - 0x2e9cb328], cl ; syscall
0x00000000000c1a65 : sbb byte ptr [rcx - 0x3f], al ; cli ; sbb byte ptr [rbp + 0x39], al ; ret 0xb975
0x00000000000a23e6 : sbb byte ptr [rcx - 0x75], cl ; jge 0xa23f1 ; call r12
0x0000000000112cda : sbb byte ptr [rcx - 0x75], cl ; push rbp ; adc byte ptr [rbx + rcx*4 + 0x24], cl ; ret 0x854d
0x0000000000112e3e : sbb byte ptr [rcx - 0x75], cl ; push rbp ; adc byte ptr [rcx + rcx*4 + 0x24], cl ; ret 0x8348
0x00000000000934ea : sbb byte ptr [rcx - 0x76b703b9], cl ; clc ; ret
0x0000000000096201 : sbb byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x0000000000154add : sbb byte ptr [rcx], al ; add byte ptr [rax + 0x73], ah ; clc ; jmp qword ptr [rsi]
0x00000000000db250 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x000000000013fdd5 : sbb byte ptr [rcx], al ; add byte ptr [rdi + rcx*2 - 0xa], ah ; jmp rsp
0x0000000000117b27 : sbb byte ptr [rcx], al ; je 0x117b36 ; xor eax, eax ; ret
0x00000000000dc34f : sbb byte ptr [rcx], al ; ret 0x8d48
0x000000000010782b : sbb byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000ebdf7 : sbb byte ptr [rdi + 0x2000004], bh ; call rax
0x0000000000131330 : sbb byte ptr [rdi + rsi*8 - 0x868e701], dl ; jmp rsi
0x00000000000fbf35 : sbb byte ptr [rdi], ah ; add al, ch ; ret
0x0000000000069ec0 : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x0000000000114d36 : sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000347d1 : sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0xd231
0x000000000015fac8 : sbb byte ptr [rdi], dh ; sti ; jmp qword ptr [rax]
0x00000000000e5a04 : sbb byte ptr [rdx + 0x28], ch ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000000201f : sbb byte ptr [rdx - 0x1a], dl ; ret
0x00000000000fb1f0 : sbb byte ptr [rdx - 0x76b7fffd], bh ; ret 0xff31
0x000000000011909d : sbb byte ptr [rip - 0x3fcf0000], al ; pop rbx ; pop rbp ; ret
0x000000000011906a : sbb byte ptr [rip - 0x76b80000], al ; fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000000e5d05 : sbb byte ptr [rsi - 0x7d], ah ; add byte ptr [rcx], al ; ret
0x00000000000e5d04 : sbb byte ptr [rsi - 0x7d], spl ; add byte ptr [rcx], al ; ret
0x0000000000116165 : sbb cl, byte ptr [rax + 0x39] ; ret
0x00000000000ecffd : sbb cl, byte ptr [rax - 0x7d] ; ret
0x00000000000bace2 : sbb cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x0000000000104ad3 : sbb cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x0000000000087d1f : sbb cl, byte ptr [rcx + rcx*4 - 0x30] ; pop rbx ; ret
0x000000000013f581 : sbb dh, ah ; call rsp
0x00000000000962e5 : sbb dh, bl ; ret
0x00000000000ec99a : sbb dh, dh ; ret 0x7504
0x00000000000ed722 : sbb dh, dh ; ret 0x8b08
0x00000000000bb783 : sbb dword ptr [rax + 1], edi ; ret
0x000000000013170c : sbb dword ptr [rax + rdi*8], edi ; jmp qword ptr [rdi]
0x000000000002f203 : sbb dword ptr [rax - 0x73], ecx ; pop rax ; add eax, ebp ; ret
0x00000000000628c6 : sbb dword ptr [rax - 0x7d], ecx ; ret
0x000000000005a6e8 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret
0x000000000000fff8 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x0000000000144b1d : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; stosb byte ptr [rdi], al ; out dx, al ; jmp qword ptr [rdi]
0x00000000000e3d98 : sbb dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000012e6bd : sbb dword ptr [rbx], edx ; mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000010076a : sbb dword ptr [rcx + 0xf], eax ; mov dh, 0x52 ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x00000000000d64a6 : sbb dword ptr [rcx + rcx*4 - 0x39], ecx ; mov eax, 0x85 ; syscall
0x00000000000e3807 : sbb dword ptr [rcx], eax ; add byte ptr [rax], al ; mov eax, ecx ; syscall
0x00000000000e379e : sbb dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x0000000000001c87 : sbb dword ptr [rdx + 0x55], esp ; je 0x1cb9 ; ret
0x0000000000142995 : sbb dword ptr [rdx], eax ; add byte ptr [rsp + rax*2], al ; std ; jmp rsp
0x00000000000f11a3 : sbb eax, 0 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000011b228 : sbb eax, 0x1c665 ; jmp 0x11b1f8
0x00000000000e5839 : sbb eax, 0x2839e2 ; pop rbx ; ret
0x00000000000eeef2 : sbb eax, 0x507a8b48 ; mov rsi, rdx ; call rax
0x00000000000e2f2a : sbb eax, 0x53882 ; mov rax, rbx ; pop rbx ; ret
0x0000000000142a25 : sbb eax, 0x55040002 ; std ; jmp rsp
0x00000000000fe59a : sbb eax, 0xb8fb6348 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000144ffd : sbb eax, 0xeae00000 ; out dx, al ; jmp qword ptr [rsi]
0x00000000000e0185 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000423ec : sbb eax, dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0x840f
0x00000000000e40c5 : sbb eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x000000000010ce04 : sbb eax, eax ; add rsp, 8 ; add eax, 2 ; ret
0x00000000000457ea : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x0000000000051708 : sbb ecx, dword ptr [rax - 0x77] ; ret 0x6348
0x000000000007a684 : sbb ecx, dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000001077e7 : sbb ecx, dword ptr [rax - 0x7d] ; ret
0x000000000002dc9e : sbb ecx, esi ; xor eax, dword ptr [rax] ; ret
0x000000000015b361 : sbb edi, edx ; jmp qword ptr [rdx]
0x000000000015b379 : sbb edi, edx ; jmp rax
0x0000000000148161 : sbb edx, esi ; jmp qword ptr [rsi]
0x0000000000002597 : sbb esi, dword ptr [rdx] ; sahf ; jl 0x2532 ; loop 0x257d ; ret 0x23cb
0x000000000013dd09 : sbb esi, ebp ; call rsp
0x00000000000d63c0 : sbb esi, ebx ; ret
0x00000000000b31cf : sbb esi, esp ; mov rdi, rdx ; mov eax, r9d ; syscall
0x00000000000f8ccc : sbb esp, dword ptr [rdi] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000009cb93 : sbb r8d, dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0x840f
0x000000000013eca5 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; je 0x13ecae ; call rsp
0x000000000007e334 : scasb al, byte ptr [rdi] ; add byte ptr cs:[rcx], bh ; ret 0xa7e
0x000000000015d5a1 : scasb al, byte ptr [rdi] ; cli ; call qword ptr [rdi]
0x0000000000161b19 : scasb al, byte ptr [rdi] ; sti ; call rcx
0x0000000000002f3a : scasb al, byte ptr [rdi] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x0000000000039fc9 : scasd eax, dword ptr [rdi] ; adc byte ptr [rax + 1], r9b ; ror byte ptr [rax - 0x77], 1 ; ret 0x8966
0x00000000000d5e3e : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x000000000013ecc5 : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; in al, 3 ; jmp rsp
0x000000000007b4fd : scasd eax, dword ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4d07
0x00000000000a37e3 : scasd eax, dword ptr [rdi] ; add eax, esi ; ret
0x00000000000795fc : scasd eax, dword ptr [rdi] ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000009460a : scasd eax, dword ptr [rdi] ; movzx eax, dl ; pop rbx ; ret
0x000000000013dee9 : scasd eax, dword ptr [rdi] ; out dx, al ; jmp rsp
0x00000000000376ed : scasd eax, dword ptr [rdi] ; ret
0x00000000000a392e : scasd eax, dword ptr [rdi] ; ret 0x67ba
0x0000000000034d74 : scasd eax, dword ptr [rdi] ; ret 0x8b48
0x00000000000aaa07 : scasd eax, dword ptr [rdi] ; ret 0x8d44
0x0000000000094390 : scasd eax, dword ptr [rdi] ; ret 0xc383
0x00000000000a3890 : scasd eax, dword ptr [rdi] ; ret 0xc639
0x00000000000347d3 : scasd eax, dword ptr [rdi] ; ret 0xd231
0x0000000000094396 : scasd eax, dword ptr [rdi] ; ror dword ptr [rdi], -0x51 ; ret
0x0000000000002b83 : scasd eax, dword ptr [rdi] ; xbegin 0xfffffffff8c6ef85 ; ret
0x00000000000e5d69 : seta al ; movzx eax, al ; neg eax ; ret
0x00000000000d844c : seta al ; movzx edx, dl ; sub eax, edx ; ret
0x00000000000effb0 : setae al ; ret
0x00000000000e67a0 : setbe al ; ret
0x00000000000b81e0 : sete al ; movzx eax, al ; ret
0x000000000002edc9 : sete al ; ret
0x00000000000cfb10 : setne al ; lea eax, [rax + rax*8 + 5] ; ret
0x0000000000069f05 : setne al ; movzx eax, al ; neg eax ; pop rbx ; ret
0x00000000000cc471 : setne al ; movzx eax, al ; neg eax ; ret
0x00000000000e0f3d : setne al ; movzx eax, al ; pop rbx ; ret
0x000000000003689a : setne al ; movzx eax, al ; ret
0x0000000000110738 : setne al ; neg eax ; add rsp, 0x18 ; ret
0x00000000000cc491 : setne dl ; cmovbe eax, edx ; ret
0x00000000000e0d63 : setne dl ; jmp 0xe0d3d
0x0000000000130a88 : shl al, 0xf5 ; jmp qword ptr [rax]
0x0000000000145de0 : shl byte ptr [rbx], 0xef ; jmp rsp
0x0000000000035699 : shl byte ptr [rcx], cl ; ret 0xf66
0x00000000000f110f : shl byte ptr [rdi], 0 ; pop rbp ; ret
0x0000000000153aa0 : shl byte ptr [rdi], 0xf8 ; jmp qword ptr [rdx]
0x00000000000352f7 : shl byte ptr [rsi + 0x48], 1 ; movd mm0, eax ; ret
0x0000000000083c65 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x0000000000035724 : shl byte ptr [rsi + 0xf], 1 ; outsb dx, byte ptr [rsi] ; enter 0x280f, -0x3f ; ret
0x0000000000087696 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000000000876a7 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000093c38 : shl byte ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x00000000000c025d : shl byte ptr [rsi - 0x70], 0x5b ; pop rbp ; pop r12 ; ret
0x000000000006f7ad : shl byte ptr [rsi - 0x70], 1 ; xor eax, eax ; ret
0x00000000000a417a : shl byte ptr [rsi - 0x77], cl ; push rbp ; ret 0x6348
0x0000000000130a7c : shl cl, 0xf5 ; jmp rax
0x00000000001276a0 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x000000000012d208 : shl dword ptr [rdi - 5], 1 ; ret
0x0000000000087692 : shl dword ptr [rsi + 0xf], -0x29 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000008894c : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x0000000000093e78 : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xf188
0x00000000001009fe : shl eax, 3 ; cdqe ; shr rax, 4 ; ret
0x0000000000100851 : shl eax, 4 ; add eax, 8 ; ret
0x00000000000f4e63 : shl eax, 8 ; or eax, esi ; bswap eax ; ret
0x0000000000036a87 : shl eax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000045dbc : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000045d3b : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000045d0a : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000000391ea : shl edx, 0x20 ; mov eax, eax ; or rax, rdx ; ret
0x0000000000021e74 : shl edx, 4 ; lea rdi, [r14 + rdx] ; call rax
0x0000000000100a40 : shl esi, 4 ; lea rax, [rdi + rsi + 8] ; ret
0x0000000000045dbb : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000045d3a : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000045d09 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000036a86 : shl rax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000391e9 : shl rdx, 0x20 ; mov eax, eax ; or rax, rdx ; ret
0x0000000000021e73 : shl rdx, 4 ; lea rdi, [r14 + rdx] ; call rax
0x0000000000100a3f : shl rsi, 4 ; lea rax, [rdi + rsi + 8] ; ret
0x00000000000b3cdd : shr al, 0x8d ; ret 3
0x00000000000da50b : shr al, 0xff ; ret 0xffff
0x00000000001184c1 : shr al, cl ; add eax, dword ptr [rax] ; add byte ptr [rcx], al ; ret 0x94eb
0x00000000000eff2a : shr ax, 0xe ; and eax, 1 ; ret
0x000000000007f8c1 : shr bl, 0x95 ; mov rsi, qword ptr [rsp + 0x18] ; call rax
0x000000000011cb61 : shr bl, 0xe3 ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000002ae98 : shr byte ptr [rcx], cl ; ret
0x0000000000088cbc : shr byte ptr [rcx], cl ; rol bl, 1 ; xor eax, eax ; ret
0x00000000000d8451 : shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x000000000007f743 : shr byte ptr [rsi], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000002ba43 : shr dword ptr [rax + 0x41], 0x39 ; ret
0x00000000000deffd : shr dword ptr [rax], 1 ; add byte ptr [rax - 0x77], cl ; ret 0xcfeb
0x00000000000dee51 : shr dword ptr [rax], cl ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000007c2d4 : shr dword ptr [rsi], cl ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000004b479 : shr eax, 0x11 ; ret
0x00000000000f4e9c : shr eax, 0x18 ; ret
0x0000000000035615 : shr eax, 0x1f ; ret
0x0000000000035254 : shr eax, 0x3f ; ret
0x00000000000e373c : shr eax, 0xc ; xor al, al ; or eax, edi ; ret
0x0000000000094616 : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x00000000000eff2b : shr eax, 0xe ; and eax, 1 ; ret
0x00000000000bb9ed : shr eax, 1 ; pop r14 ; and eax, 1 ; pop r15 ; ret
0x0000000000076756 : shr eax, 4 ; and eax, 1 ; ret
0x0000000000100a04 : shr eax, 4 ; ret
0x0000000000076766 : shr eax, 5 ; and eax, 1 ; ret
0x00000000000945ed : shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x00000000000368c3 : shr eax, 6 ; or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x00000000000e7530 : shr eax, cl ; and eax, 1 ; nop dword ptr [rax] ; ret
0x00000000000e6e2b : shr eax, cl ; and eax, 1 ; ret
0x0000000000045ecc : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000045e55 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000045e24 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000000c073c : shr ecx, cl ; ret 0xfffc
0x0000000000071767 : shr edx, 2 ; sub eax, edx ; ret
0x000000000011510e : shr edx, 3 ; add rax, rcx ; jmp rax
0x000000000002e8ad : shr edx, cl ; cmp edx, dword ptr [rdi + 4] ; jb 0x2e8c8 ; ret
0x00000000000742d0 : shr esi, 4 ; and esi, 1 ; mov eax, esi ; ret
0x00000000000743d0 : shr esi, 5 ; and esi, 1 ; mov eax, esi ; ret
0x00000000000b3cdc : shr r8b, 0x8d ; ret 3
0x0000000000045ecb : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000045e54 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000045e23 : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000035253 : shr rax, 0x3f ; ret
0x00000000000e373b : shr rax, 0xc ; xor al, al ; or eax, edi ; ret
0x0000000000100a03 : shr rax, 4 ; ret
0x0000000000071766 : shr rdx, 2 ; sub eax, edx ; ret
0x000000000011510d : shr rdx, 3 ; add rax, rcx ; jmp rax
0x00000000000936c5 : shufps xmm0, xmmword ptr [rdi + 4], 0 ; lea rax, [rdi + 4] ; ret
0x0000000000093615 : shufps xmm0, xmmword ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x00000000000cfa82 : sldt word ptr [rax] ; add byte ptr [rax + rcx - 0xd], dh ; ret
0x00000000001441c5 : sldt word ptr [rax] ; or byte ptr [rdx - 0x12], bh ; jmp qword ptr [rdx]
0x0000000000126865 : sldt word ptr [rax] ; ret 0xf
0x00000000000a693b : stc ; add dword ptr [rdi], ecx ; sahf ; ret 0xd129
0x00000000000f0d85 : stc ; add eax, 0xfa05894c ; ret
0x0000000000131e42 : stc ; call qword ptr [rax]
0x00000000001593fa : stc ; call qword ptr [rdx]
0x000000000015781a : stc ; call rcx
0x000000000015a0a2 : stc ; call rdi
0x00000000001407ba : stc ; call rsp
0x0000000000003603 : stc ; cmp eax, 0x952a0fa3 ; ret
0x0000000000140b3a : stc ; dec dword ptr [rbx + rbp*2 - 0x2b3bffff] ; stc ; call rsp
0x00000000000a0c2b : stc ; dec dword ptr [rcx - 0x77] ; ret 0x7c74
0x00000000000cfd6a : stc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0x840f
0x00000000001407f2 : stc ; dec esp ; pop rbx ; add dword ptr [rax], eax ; and al, 0x7b ; stc ; jmp rsp
0x0000000000131fe2 : stc ; inc ebx ; stc ; inc ebx ; stc ; jmp qword ptr [rdx]
0x0000000000131fca : stc ; inc ebx ; stc ; jmp qword ptr [rdx]
0x0000000000140ca2 : stc ; inc esp ; jno 0x140cb1 ; add byte ptr [rsi + rbp*8 - 7], dl ; jmp rsp
0x000000000007b6d3 : stc ; je 0x7b509 ; ret
0x000000000003a821 : stc ; jmp 0x3a769
0x0000000000131f2a : stc ; jmp qword ptr [rax]
0x0000000000158da2 : stc ; jmp qword ptr [rbx]
0x0000000000131fb6 : stc ; jmp qword ptr [rdx - 0x3c0006b3]
0x0000000000131fce : stc ; jmp qword ptr [rdx]
0x000000000015a32a : stc ; jmp rax
0x0000000000159d42 : stc ; jmp rdx
0x000000000014074a : stc ; jmp rsp
0x000000000012d084 : stc ; jnp 0x12d043 ; ret
0x00000000001407b2 : stc ; lcall ptr [rdx + rbx*2 + 0x77c40001] ; stc ; call rsp
0x00000000000d650d : stc ; mov eax, 0x103 ; syscall
0x0000000000035ec5 : stc ; mov eax, 0xea ; syscall
0x000000000007cc31 : stc ; mov eax, 3 ; syscall
0x0000000000093965 : stc ; mov qword ptr [rdx], rcx ; ret
0x0000000000093597 : stc ; mov rax, rdi ; ret
0x0000000000073bba : stc ; mov rdi, r13 ; xor r8d, r8d ; call r12
0x00000000000cc4df : stc ; or cl, byte ptr [rcx - 0xcaf8b30] ; ret
0x00000000000cff1a : stc ; or cl, byte ptr [rdi] ; test byte ptr [rip + 0x39000001], dl ; ret 0x8e0f
0x0000000000045a2f : stc ; pop r15 ; ret
0x00000000001115bf : stc ; pop rbx ; pop rbp ; mov qword ptr [r12], rcx ; pop r12 ; ret
0x0000000000140952 : stc ; push qword ptr [rax - 0x72abffff] ; stc ; call rsp
0x0000000000045f15 : stc ; push qword ptr [rbp - 0x11] ; mov rax, rdx ; ret
0x000000000009653d : stc ; push qword ptr [rbp - 0x11] ; sub rax, 4 ; ret
0x0000000000089a62 : stc ; push qword ptr [rbp - 0xe] ; sub rax, 1 ; ret
0x0000000000140d62 : stc ; push qword ptr [rsp + rsi*2 - 0x8bbffff] ; stc ; call rsp
0x00000000000fca6b : stc ; ret
0x00000000001430e1 : stc ; std ; call rsp
0x00000000000ae622 : std ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xdb31
0x0000000000132e52 : std ; call qword ptr [rax]
0x0000000000132e5e : std ; call rax
0x000000000014bd19 : std ; call rsi
0x000000000014272a : std ; call rsp
0x00000000001430ba : std ; dec dword ptr [rcx + rsi*8 - 0x8cbffff] ; std ; jmp rsp
0x0000000000142d0a : std ; dec dword ptr [rsi + rbp - 0x624bfffe] ; std ; call rsp
0x0000000000142e72 : std ; dec esp ; add al, byte ptr ss:[rax] ; hlt ; ret
0x0000000000142f8a : std ; dec esp ; cmp al, 2 ; add byte ptr [rsi], ah ; std ; jmp rsp
0x0000000000142992 : std ; dec esp ; sbb dword ptr [rdx], eax ; add byte ptr [rsp + rax*2], al ; std ; jmp rsp
0x0000000000035ab1 : std ; fstp st(1) ; ret
0x00000000000f0c57 : std ; fsub dword ptr [rdi] ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x0000000000142faa : std ; inc esp ; cmp eax, 0xe7b40002 ; std ; jmp rsp
0x00000000000fc213 : std ; jbe 0xfc224 ; pop rbx ; ret
0x00000000000bd6f5 : std ; jge 0xbd6ce ; mov edx, eax ; jmp 0xbd6d7
0x0000000000132e62 : std ; jmp qword ptr [rax]
0x000000000014ca22 : std ; jmp qword ptr [rcx]
0x0000000000132e5a : std ; jmp rax
0x0000000000134356 : std ; jmp rsp
0x00000000000b4597 : std ; jne 0xb4564 ; ret
0x0000000000142722 : std ; lcall ptr [rbx + rcx + 0x1040002] ; std ; call rsp
0x0000000000142dd2 : std ; lcall ptr [rbx + rsi - 0x475bfffe] ; std ; call rsp
0x0000000000142d2a : std ; lcall ptr [rdi + rbp - 0x5b5bfffe] ; std ; call rsp
0x0000000000142aea : std ; lcall ptr [rdx + 0x62140002] ; std ; call rsp
0x0000000000142b3a : std ; lcall ptr [rsp + 0x67f40002] ; std ; call rsp
0x000000000014311a : std ; ljmp ptr [rax + rsi*2] ; add ah, al ; std ; std ; call rsp
0x0000000000133f36 : std ; ljmp ptr [rax - 0x7f] ; std ; call rax
0x0000000000142b6a : std ; ljmp ptr [rbp + 0x6a140002] ; std ; jmp rsp
0x000000000014289a : std ; ljmp ptr [rsp + rdx + 0x34440002] ; std ; jmp rsp
0x00000000000cc33f : std ; mov eax, 0xcb ; syscall
0x000000000001fec4 : std ; mov eax, 3 ; syscall
0x00000000000aeaf2 : std ; mov edx, dword ptr fs:[rax] ; mov eax, 3 ; syscall
0x00000000000d73bf : std ; mov rdi, rbp ; mov eax, 0x4f ; syscall
0x0000000000109a87 : std ; movsxd rcx, dword ptr [rax - 0x77] ; ret
0x000000000013434e : std ; push qword ptr [rcx + rbp*4 - 0x56330003] ; std ; jmp rsp
0x0000000000132e56 : std ; push rax ; push rsi ; std ; jmp rax
0x00000000001430da : std ; push rsp ; pop rcx ; add byte ptr [rax], al ; xor al, 0xf9 ; std ; call rsp
0x0000000000140de9 : std ; stc ; jmp rsp
0x0000000000143121 : std ; std ; call rsp
0x00000000000283d7 : sti ; add byte ptr [rax], al ; add byte ptr [rcx + 0x29], cl ; ret
0x00000000000de0a1 : sti ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x000000000015edb2 : sti ; call qword ptr [rax]
0x0000000000141cfa : sti ; call qword ptr [rbx + rax*8]
0x000000000015f262 : sti ; call qword ptr [rdi]
0x000000000015eb92 : sti ; call qword ptr [rsi]
0x00000000001612fa : sti ; call rcx
0x000000000015ed3a : sti ; call rdi
0x000000000015f27a : sti ; call rdx
0x00000000001419f2 : sti ; call rsp
0x00000000000710ae : sti ; cmp qword ptr [rsi + 0x30], 0 ; je 0x710c9 ; pop rbx ; ret
0x0000000000141d7a : sti ; dec dword ptr [rdi + rax*8 - 0x6fbbffff] ; sti ; jmp rsp
0x0000000000141912 : sti ; dec esp ; lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; and al, 0x26 ; sti ; jmp rsp
0x0000000000141ce2 : sti ; dec esp ; ret 1
0x0000000000141cb2 : sti ; dec esp ; rol dword ptr [rcx], 0 ; and al, 0x6e ; sti ; jmp rsp
0x00000000001016c4 : sti ; inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x3945
0x0000000000132558 : sti ; inc ebx ; add dh, bh ; jmp rdi
0x0000000000141b0a : sti ; inc esp ; mov eax, 0x51640001 ; sti ; jmp rsp
0x000000000003d4ab : sti ; int 0xfb
0x00000000000797ec : sti ; je 0x797fc ; pop rbx ; ret
0x000000000015eb02 : sti ; jmp qword ptr [rax]
0x000000000015f69a : sti ; jmp qword ptr [rbx]
0x000000000015f24a : sti ; jmp qword ptr [rdx]
0x000000000015ea0a : sti ; jmp qword ptr [rsi]
0x00000000001618da : sti ; jmp rdx
0x0000000000160f9a : sti ; jmp rsi
0x000000000014187a : sti ; jmp rsp
0x00000000001419ea : sti ; lcall ptr [rcx + rsi*4 + 0x2f940001] ; sti ; call rsp
0x0000000000141dba : sti ; ljmp ptr [rcx + rcx*8 - 0x648bffff] ; sti ; call rsp
0x00000000000d8e24 : sti ; mov al, 3 ; syscall
0x00000000000fe5c1 : sti ; mov eax, 3 ; mov esi, dword ptr fs:[rdx] ; syscall
0x00000000000fe59d : sti ; mov eax, 3 ; syscall
0x00000000000dd0bd : sti ; mov edx, eax ; mov eax, 3 ; syscall
0x0000000000093551 : sti ; mov rax, rdi ; ret
0x000000000002be99 : sti ; or eax, 0x83492374 ; mov byte ptr [rcx], 0x83 ; ret
0x0000000000141bb2 : sti ; push qword ptr [rbx + rdi*4 + 0x59040001] ; sti ; call rsp
0x0000000000141b72 : sti ; push qword ptr [rdx + rdi*4 + 0x56040001] ; sti ; call rsp
0x0000000000141a2a : sti ; push qword ptr [rdx + rsi*4 + 0x33a40001] ; sti ; jmp rsp
0x0000000000141a8a : sti ; push qword ptr [rsp + rsi*4 + 0x40940001] ; sti ; call rsp
0x000000000012d20a : sti ; ret
0x000000000003fd2c : sti ; ret 0xffbf
0x0000000000042933 : sti ; syscall
0x000000000002d4bb : sti ; test rax, rax ; je 0x2d4cd ; call rax
0x0000000000052861 : sti ; xor word ptr [rax], ax ; call rax
0x0000000000114b03 : stosb byte ptr [rdi], al ; add dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x0000000000076743 : stosb byte ptr [rdi], al ; and dword ptr [rdi], 0xffffffcf ; ret
0x000000000014a371 : stosb byte ptr [rdi], al ; call qword ptr [rsi]
0x000000000013f281 : stosb byte ptr [rdi], al ; call rsp
0x000000000012d6e4 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x00000000000bb803 : stosb byte ptr [rdi], al ; cmp byte ptr [rsi + 0x30], 0x11 ; je 0xbb819 ; xor eax, eax ; ret
0x00000000000adf33 : stosb byte ptr [rdi], al ; cmp esi, 1 ; je 0xadf48 ; xor eax, eax ; ret
0x00000000000adf32 : stosb byte ptr [rdi], al ; cmp esi, 1 ; je 0xadf49 ; xor eax, eax ; ret
0x0000000000131595 : stosb byte ptr [rdi], al ; idiv edi ; ret 0xf7b4
0x000000000014a331 : stosb byte ptr [rdi], al ; jmp rax
0x0000000000021ef3 : stosb byte ptr [rdi], al ; lea rax, [rip + 0x112530] ; ret
0x0000000000021f03 : stosb byte ptr [rdi], al ; lea rax, [rip + 0x1146b1] ; ret
0x00000000000d5813 : stosb byte ptr [rdi], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x00000000000d6a70 : stosb byte ptr [rdi], al ; mov eax, 0 ; syscall
0x00000000000dc643 : stosb byte ptr [rdi], al ; mov eax, 0x10 ; syscall
0x00000000000e3ff3 : stosb byte ptr [rdi], al ; mov eax, 0x110 ; syscall
0x00000000000e40c3 : stosb byte ptr [rdi], al ; mov eax, 0x11b ; syscall
0x00000000000e4123 : stosb byte ptr [rdi], al ; mov eax, 0x11f ; syscall
0x00000000000e3b43 : stosb byte ptr [rdi], al ; mov eax, 0x123 ; syscall
0x00000000000d71f3 : stosb byte ptr [rdi], al ; mov eax, 0x124 ; syscall
0x00000000000d7253 : stosb byte ptr [rdi], al ; mov eax, 0x125 ; syscall
0x00000000000e3cd3 : stosb byte ptr [rdi], al ; mov eax, 0x126 ; syscall
0x00000000000e4153 : stosb byte ptr [rdi], al ; mov eax, 0x12c ; syscall
0x00000000000e41c0 : stosb byte ptr [rdi], al ; mov eax, 0x130 ; syscall
0x00000000000e3a83 : stosb byte ptr [rdi], al ; mov eax, 0x131 ; syscall
0x00000000000dd003 : stosb byte ptr [rdi], al ; mov eax, 0x132 ; syscall
0x00000000000e4223 : stosb byte ptr [rdi], al ; mov eax, 0x134 ; syscall
0x00000000000d6b43 : stosb byte ptr [rdi], al ; mov eax, 0x15 ; syscall
0x00000000000d7223 : stosb byte ptr [rdi], al ; mov eax, 0x16 ; syscall
0x00000000000cc1b3 : stosb byte ptr [rdi], al ; mov eax, 0x18 ; syscall
0x00000000000e00f0 : stosb byte ptr [rdi], al ; mov eax, 0x1a ; syscall
0x00000000000e0183 : stosb byte ptr [rdi], al ; mov eax, 0x1b ; syscall
0x00000000000e0153 : stosb byte ptr [rdi], al ; mov eax, 0x1c ; syscall
0x00000000000e5043 : stosb byte ptr [rdi], al ; mov eax, 0x1d ; syscall
0x00000000000e4fe3 : stosb byte ptr [rdi], al ; mov eax, 0x1e ; syscall
0x00000000000e5073 : stosb byte ptr [rdi], al ; mov eax, 0x1f ; syscall
0x00000000000d7193 : stosb byte ptr [rdi], al ; mov eax, 0x20 ; syscall
0x00000000000d71c3 : stosb byte ptr [rdi], al ; mov eax, 0x21 ; syscall
0x00000000000b2d50 : stosb byte ptr [rdi], al ; mov eax, 0x22 ; syscall
0x00000000000b2dc0 : stosb byte ptr [rdi], al ; mov eax, 0x23 ; syscall
0x00000000000a60a3 : stosb byte ptr [rdi], al ; mov eax, 0x24 ; syscall
0x00000000000b2b43 : stosb byte ptr [rdi], al ; mov eax, 0x25 ; syscall
0x00000000000a60d3 : stosb byte ptr [rdi], al ; mov eax, 0x26 ; syscall
0x00000000000e4843 : stosb byte ptr [rdi], al ; mov eax, 0x29 ; syscall
0x00000000000e4380 : stosb byte ptr [rdi], al ; mov eax, 0x2a ; syscall
0x00000000000e42e0 : stosb byte ptr [rdi], al ; mov eax, 0x2b ; syscall
0x00000000000e4710 : stosb byte ptr [rdi], al ; mov eax, 0x2e ; syscall
0x00000000000e45e0 : stosb byte ptr [rdi], al ; mov eax, 0x2f ; syscall
0x00000000000e4813 : stosb byte ptr [rdi], al ; mov eax, 0x30 ; syscall
0x00000000000e4343 : stosb byte ptr [rdi], al ; mov eax, 0x31 ; syscall
0x00000000000e4473 : stosb byte ptr [rdi], al ; mov eax, 0x32 ; syscall
0x00000000000e4413 : stosb byte ptr [rdi], al ; mov eax, 0x33 ; syscall
0x00000000000e43e3 : stosb byte ptr [rdi], al ; mov eax, 0x34 ; syscall
0x00000000000b3203 : stosb byte ptr [rdi], al ; mov eax, 0x3b ; syscall
0x00000000000361e3 : stosb byte ptr [rdi], al ; mov eax, 0x3e ; syscall
0x00000000000b2853 : stosb byte ptr [rdi], al ; mov eax, 0x3f ; syscall
0x00000000000e4f53 : stosb byte ptr [rdi], al ; mov eax, 0x40 ; syscall
0x00000000000e4f23 : stosb byte ptr [rdi], al ; mov eax, 0x41 ; syscall
0x00000000000e5013 : stosb byte ptr [rdi], al ; mov eax, 0x43 ; syscall
0x00000000000e4ec3 : stosb byte ptr [rdi], al ; mov eax, 0x44 ; syscall
0x00000000000e4ef3 : stosb byte ptr [rdi], al ; mov eax, 0x47 ; syscall
0x00000000000d6fd3 : stosb byte ptr [rdi], al ; mov eax, 0x49 ; syscall
0x00000000000dcf00 : stosb byte ptr [rdi], al ; mov eax, 0x4a ; syscall
0x00000000000dcfa0 : stosb byte ptr [rdi], al ; mov eax, 0x4b ; syscall
0x00000000000de743 : stosb byte ptr [rdi], al ; mov eax, 0x4c ; syscall
0x00000000000de773 : stosb byte ptr [rdi], al ; mov eax, 0x4d ; syscall
0x00000000000d72f3 : stosb byte ptr [rdi], al ; mov eax, 0x50 ; syscall
0x00000000000d7323 : stosb byte ptr [rdi], al ; mov eax, 0x51 ; syscall
0x0000000000069f13 : stosb byte ptr [rdi], al ; mov eax, 0x52 ; syscall
0x00000000000d67b3 : stosb byte ptr [rdi], al ; mov eax, 0x53 ; syscall
0x00000000000d83f3 : stosb byte ptr [rdi], al ; mov eax, 0x54 ; syscall
0x00000000000d7290 : stosb byte ptr [rdi], al ; mov eax, 0x55 ; syscall
0x00000000000d8263 : stosb byte ptr [rdi], al ; mov eax, 0x56 ; syscall
0x00000000000d8393 : stosb byte ptr [rdi], al ; mov eax, 0x57 ; syscall
0x00000000000d82d3 : stosb byte ptr [rdi], al ; mov eax, 0x58 ; syscall
0x00000000000d8333 : stosb byte ptr [rdi], al ; mov eax, 0x59 ; syscall
0x00000000000d66c3 : stosb byte ptr [rdi], al ; mov eax, 0x5a ; syscall
0x00000000000d66f3 : stosb byte ptr [rdi], al ; mov eax, 0x5b ; syscall
0x00000000000d7b83 : stosb byte ptr [rdi], al ; mov eax, 0x5c ; syscall
0x00000000000d7bb3 : stosb byte ptr [rdi], al ; mov eax, 0x5d ; syscall
0x00000000000d7be3 : stosb byte ptr [rdi], al ; mov eax, 0x5e ; syscall
0x00000000000d66b3 : stosb byte ptr [rdi], al ; mov eax, 0x5f ; syscall
0x00000000000dc093 : stosb byte ptr [rdi], al ; mov eax, 0x61 ; syscall
0x00000000000dc0f3 : stosb byte ptr [rdi], al ; mov eax, 0x62 ; syscall
0x00000000000e3f53 : stosb byte ptr [rdi], al ; mov eax, 0x63 ; syscall
0x00000000000b3dc3 : stosb byte ptr [rdi], al ; mov eax, 0x66 ; syscall
0x00000000000e3d33 : stosb byte ptr [rdi], al ; mov eax, 0x67 ; syscall
0x00000000000b3de3 : stosb byte ptr [rdi], al ; mov eax, 0x68 ; syscall
0x00000000000b3dd3 : stosb byte ptr [rdi], al ; mov eax, 0x6b ; syscall
0x00000000000b3df3 : stosb byte ptr [rdi], al ; mov eax, 0x6c ; syscall
0x00000000000b3ff3 : stosb byte ptr [rdi], al ; mov eax, 0x6d ; syscall
0x00000000000b3db3 : stosb byte ptr [rdi], al ; mov eax, 0x6e ; syscall
0x00000000000b4023 : stosb byte ptr [rdi], al ; mov eax, 0x6f ; syscall
0x00000000000b40a3 : stosb byte ptr [rdi], al ; mov eax, 0x70 ; syscall
0x00000000000b3e03 : stosb byte ptr [rdi], al ; mov eax, 0x73 ; syscall
0x00000000000b40d3 : stosb byte ptr [rdi], al ; mov eax, 0x76 ; syscall
0x00000000000b4103 : stosb byte ptr [rdi], al ; mov eax, 0x78 ; syscall
0x00000000000b3fc3 : stosb byte ptr [rdi], al ; mov eax, 0x79 ; syscall
0x00000000000e36b3 : stosb byte ptr [rdi], al ; mov eax, 0x7a ; syscall
0x00000000000e36e3 : stosb byte ptr [rdi], al ; mov eax, 0x7b ; syscall
0x00000000000b4073 : stosb byte ptr [rdi], al ; mov eax, 0x7c ; syscall
0x00000000000e3a23 : stosb byte ptr [rdi], al ; mov eax, 0x7d ; syscall
0x00000000000e3a53 : stosb byte ptr [rdi], al ; mov eax, 0x7e ; syscall
0x0000000000036793 : stosb byte ptr [rdi], al ; mov eax, 0x83 ; syscall
0x00000000000d6313 : stosb byte ptr [rdi], al ; mov eax, 0x84 ; syscall
0x00000000000e4023 : stosb byte ptr [rdi], al ; mov eax, 0x86 ; syscall
0x00000000000e3df3 : stosb byte ptr [rdi], al ; mov eax, 0x87 ; syscall
0x00000000000d65b3 : stosb byte ptr [rdi], al ; mov eax, 0x89 ; syscall
0x00000000000d65e3 : stosb byte ptr [rdi], al ; mov eax, 0x8a ; syscall
0x00000000000dc453 : stosb byte ptr [rdi], al ; mov eax, 0x8d ; syscall
0x00000000000cc0f3 : stosb byte ptr [rdi], al ; mov eax, 0x8e ; syscall
0x00000000000cc123 : stosb byte ptr [rdi], al ; mov eax, 0x8f ; syscall
0x00000000000cc153 : stosb byte ptr [rdi], al ; mov eax, 0x90 ; syscall
0x00000000000cc183 : stosb byte ptr [rdi], al ; mov eax, 0x91 ; syscall
0x00000000000cc1e3 : stosb byte ptr [rdi], al ; mov eax, 0x92 ; syscall
0x00000000000cc213 : stosb byte ptr [rdi], al ; mov eax, 0x93 ; syscall
0x00000000000cc243 : stosb byte ptr [rdi], al ; mov eax, 0x94 ; syscall
0x00000000000e01e3 : stosb byte ptr [rdi], al ; mov eax, 0x95 ; syscall
0x00000000000e0213 : stosb byte ptr [rdi], al ; mov eax, 0x96 ; syscall
0x00000000000e0243 : stosb byte ptr [rdi], al ; mov eax, 0x97 ; syscall
0x00000000000e0273 : stosb byte ptr [rdi], al ; mov eax, 0x98 ; syscall
0x00000000000dd313 : stosb byte ptr [rdi], al ; mov eax, 0x99 ; syscall
0x00000000000e3983 : stosb byte ptr [rdi], al ; mov eax, 0x9a ; syscall
0x00000000000e3e23 : stosb byte ptr [rdi], al ; mov eax, 0x9b ; syscall
0x00000000000e3953 : stosb byte ptr [rdi], al ; mov eax, 0x9e ; syscall
0x00000000000e39f3 : stosb byte ptr [rdi], al ; mov eax, 0x9f ; syscall
0x00000000000e00b3 : stosb byte ptr [rdi], al ; mov eax, 0xa ; syscall
0x00000000000dc0c3 : stosb byte ptr [rdi], al ; mov eax, 0xa0 ; syscall
0x00000000000dcec3 : stosb byte ptr [rdi], al ; mov eax, 0xa1 ; syscall
0x00000000000dcf63 : stosb byte ptr [rdi], al ; mov eax, 0xa2 ; syscall
0x00000000000dce93 : stosb byte ptr [rdi], al ; mov eax, 0xa3 ; syscall
0x00000000000a3613 : stosb byte ptr [rdi], al ; mov eax, 0xa4 ; syscall
0x00000000000e3653 : stosb byte ptr [rdi], al ; mov eax, 0xa6 ; syscall
0x00000000000dd343 : stosb byte ptr [rdi], al ; mov eax, 0xa7 ; syscall
0x00000000000dd373 : stosb byte ptr [rdi], al ; mov eax, 0xa8 ; syscall
0x00000000000dcc43 : stosb byte ptr [rdi], al ; mov eax, 0xaa ; syscall
0x00000000000dccf3 : stosb byte ptr [rdi], al ; mov eax, 0xab ; syscall
0x00000000000e3493 : stosb byte ptr [rdi], al ; mov eax, 0xac ; syscall
0x00000000000e3463 : stosb byte ptr [rdi], al ; mov eax, 0xad ; syscall
0x00000000000e3ab3 : stosb byte ptr [rdi], al ; mov eax, 0xae ; syscall
0x00000000000e0083 : stosb byte ptr [rdi], al ; mov eax, 0xb ; syscall
0x00000000000e3ae3 : stosb byte ptr [rdi], al ; mov eax, 0xb0 ; syscall
0x00000000000e3c13 : stosb byte ptr [rdi], al ; mov eax, 0xb1 ; syscall
0x00000000000e3dc3 : stosb byte ptr [rdi], al ; mov eax, 0xb4 ; syscall
0x00000000000e3683 : stosb byte ptr [rdi], al ; mov eax, 0xbb ; syscall
0x00000000000e3223 : stosb byte ptr [rdi], al ; mov eax, 0xc2 ; syscall
0x00000000000e3283 : stosb byte ptr [rdi], al ; mov eax, 0xc3 ; syscall
0x00000000000e3163 : stosb byte ptr [rdi], al ; mov eax, 0xc4 ; syscall
0x00000000000e3313 : stosb byte ptr [rdi], al ; mov eax, 0xc5 ; syscall
0x00000000000e32b3 : stosb byte ptr [rdi], al ; mov eax, 0xc6 ; syscall
0x00000000000e3193 : stosb byte ptr [rdi], al ; mov eax, 0xc7 ; syscall
0x00000000000e3b13 : stosb byte ptr [rdi], al ; mov eax, 0xd5 ; syscall
0x00000000000e39b3 : stosb byte ptr [rdi], al ; mov eax, 0xe4 ; syscall
0x00000000000de573 : stosb byte ptr [rdi], al ; mov eax, 0xeb ; syscall
0x00000000000e3ca3 : stosb byte ptr [rdi], al ; mov eax, 0xfd ; syscall
0x00000000000e3c73 : stosb byte ptr [rdi], al ; mov eax, 0xfe ; syscall
0x00000000000e3d03 : stosb byte ptr [rdi], al ; mov eax, 0xff ; syscall
0x0000000000079843 : stosb byte ptr [rdi], al ; mov eax, 0xffffffff ; ret
0x000000000002b143 : stosb byte ptr [rdi], al ; mov eax, 1 ; ret
0x00000000000d6ae0 : stosb byte ptr [rdi], al ; mov eax, 1 ; syscall
0x0000000000108be3 : stosb byte ptr [rdi], al ; mov eax, 2 ; ret
0x00000000000d6820 : stosb byte ptr [rdi], al ; mov eax, 2 ; syscall
0x00000000000d7130 : stosb byte ptr [rdi], al ; mov eax, 3 ; syscall
0x00000000000dae90 : stosb byte ptr [rdi], al ; mov eax, 7 ; syscall
0x00000000000e35d0 : stosb byte ptr [rdi], al ; mov eax, 8 ; syscall
0x000000000007a6b3 : stosb byte ptr [rdi], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000114b13 : stosb byte ptr [rdi], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000000d5803 : stosb byte ptr [rdi], al ; mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000dbaf3 : stosb byte ptr [rdi], al ; mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x0000000000075fb3 : stosb byte ptr [rdi], al ; mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x0000000000075f83 : stosb byte ptr [rdi], al ; mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x00000000000af103 : stosb byte ptr [rdi], al ; mov eax, dword ptr [rdi] ; ret
0x0000000000076753 : stosb byte ptr [rdi], al ; mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x0000000000076763 : stosb byte ptr [rdi], al ; mov eax, dword ptr [rdi] ; shr eax, 5 ; and eax, 1 ; ret
0x0000000000036d03 : stosb byte ptr [rdi], al ; mov eax, dword ptr [rip + 0x33235e] ; ret
0x0000000000036cf3 : stosb byte ptr [rdi], al ; mov eax, dword ptr [rip + 0x332372] ; ret
0x000000000002edb3 : stosb byte ptr [rdi], al ; mov eax, edi ; and eax, 0x7f ; ret
0x00000000000f4de3 : stosb byte ptr [rdi], al ; mov eax, edi ; bswap eax ; ret
0x00000000000f4df3 : stosb byte ptr [rdi], al ; mov eax, edi ; ror ax, 8 ; ret
0x00000000000d51f0 : stosb byte ptr [rdi], al ; mov r10, rcx ; mov eax, 0x11 ; syscall
0x00000000000e3ef0 : stosb byte ptr [rdi], al ; mov r10, rcx ; mov eax, 0x113 ; syscall
0x00000000000e3f90 : stosb byte ptr [rdi], al ; mov r10, rcx ; mov eax, 0x114 ; syscall
0x00000000000db9e0 : stosb byte ptr [rdi], al ; mov r10, rcx ; mov eax, 0x115 ; syscall
0x00000000000e4060 : stosb byte ptr [rdi], al ; mov r10, rcx ; mov eax, 0x116 ; syscall
0x00000000000e40f3 : stosb byte ptr [rdi], al ; mov r10, rcx ; mov eax, 0x11e ; syscall
0x00000000000d5260 : stosb byte ptr [rdi], al ; mov r10, rcx ; mov eax, 0x12 ; syscall
0x00000000000e39c3 : stosb byte ptr [rdi], al ; mov r10, rcx ; mov eax, 0x12d ; syscall
0x00000000000e3923 : stosb byte ptr [rdi], al ; mov r10, rcx ; mov eax, 0x12e ; syscall
0x00000000000e4183 : stosb byte ptr [rdi], al ; mov r10, rcx ; mov eax, 0x12f ; syscall
0x00000000000e4253 : stosb byte ptr [rdi], al ; mov r10, rcx ; mov eax, 0x136 ; syscall
0x00000000000e4283 : stosb byte ptr [rdi], al ; mov r10, rcx ; mov eax, 0x137 ; syscall
0x00000000000dcd30 : stosb byte ptr [rdi], al ; mov r10, rcx ; mov eax, 0x17 ; syscall
0x00000000000e3d93 : stosb byte ptr [rdi], al ; mov r10, rcx ; mov eax, 0x19 ; syscall
0x00000000000db213 : stosb byte ptr [rdi], al ; mov r10, rcx ; mov eax, 0x28 ; syscall
0x00000000000e4780 : stosb byte ptr [rdi], al ; mov r10, rcx ; mov eax, 0x2c ; syscall
0x00000000000e4570 : stosb byte ptr [rdi], al ; mov r10, rcx ; mov eax, 0x2d ; syscall
0x00000000000e4873 : stosb byte ptr [rdi], al ; mov r10, rcx ; mov eax, 0x35 ; syscall
0x00000000000e47e3 : stosb byte ptr [rdi], al ; mov r10, rcx ; mov eax, 0x36 ; syscall
0x00000000000e4443 : stosb byte ptr [rdi], al ; mov r10, rcx ; mov eax, 0x37 ; syscall
0x00000000000b2a63 : stosb byte ptr [rdi], al ; mov r10, rcx ; mov eax, 0x3d ; syscall
0x00000000000e4f83 : stosb byte ptr [rdi], al ; mov r10, rcx ; mov eax, 0x42 ; syscall
0x00000000000e4df0 : stosb byte ptr [rdi], al ; mov r10, rcx ; mov eax, 0x45 ; syscall
0x00000000000e4e60 : stosb byte ptr [rdi], al ; mov r10, rcx ; mov eax, 0x46 ; syscall
0x00000000000e3e53 : stosb byte ptr [rdi], al ; mov r10, rcx ; mov eax, 0x9d ; syscall
0x00000000000e3d63 : stosb byte ptr [rdi], al ; mov r10, rcx ; mov eax, 0xa5 ; syscall
0x00000000000e3c43 : stosb byte ptr [rdi], al ; mov r10, rcx ; mov eax, 0xaf ; syscall
0x00000000000e3e83 : stosb byte ptr [rdi], al ; mov r10, rcx ; mov eax, 0xb2 ; syscall
0x00000000000e3eb3 : stosb byte ptr [rdi], al ; mov r10, rcx ; mov eax, 0xb3 ; syscall
0x0000000000118f03 : stosb byte ptr [rdi], al ; mov r10, rcx ; mov eax, 0xb5 ; syscall
0x0000000000118f53 : stosb byte ptr [rdi], al ; mov r10, rcx ; mov eax, 0xb6 ; syscall
0x00000000000e3343 : stosb byte ptr [rdi], al ; mov r10, rcx ; mov eax, 0xbc ; syscall
0x00000000000e32e3 : stosb byte ptr [rdi], al ; mov r10, rcx ; mov eax, 0xbd ; syscall
0x00000000000e31c3 : stosb byte ptr [rdi], al ; mov r10, rcx ; mov eax, 0xbe ; syscall
0x00000000000e31f3 : stosb byte ptr [rdi], al ; mov r10, rcx ; mov eax, 0xbf ; syscall
0x00000000000e3253 : stosb byte ptr [rdi], al ; mov r10, rcx ; mov eax, 0xc0 ; syscall
0x00000000000e3133 : stosb byte ptr [rdi], al ; mov r10, rcx ; mov eax, 0xc1 ; syscall
0x00000000000e01b3 : stosb byte ptr [rdi], al ; mov r10, rcx ; mov eax, 0xd8 ; syscall
0x00000000000e4fb3 : stosb byte ptr [rdi], al ; mov r10, rcx ; mov eax, 0xdc ; syscall
0x00000000000e3bb0 : stosb byte ptr [rdi], al ; mov r10, rcx ; mov eax, 0xe8 ; syscall
0x00000000000e3b73 : stosb byte ptr [rdi], al ; mov r10, rcx ; mov eax, 0xe9 ; syscall
0x00000000000e0053 : stosb byte ptr [rdi], al ; mov r10, rcx ; mov eax, 9 ; syscall
0x0000000000079d93 : stosb byte ptr [rdi], al ; mov rax, -1 ; ret
0x0000000000035f63 : stosb byte ptr [rdi], al ; mov rax, 0xf ; syscall
0x0000000000114783 : stosb byte ptr [rdi], al ; mov rax, qword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000aefd3 : stosb byte ptr [rdi], al ; mov rax, qword ptr [rdi + 0x20] ; ret
0x0000000000073853 : stosb byte ptr [rdi], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000007a993 : stosb byte ptr [rdi], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000007a973 : stosb byte ptr [rdi], al ; mov rax, qword ptr [rip + 0x2ef6c5] ; ret
0x000000000002b363 : stosb byte ptr [rdi], al ; mov rax, qword ptr [rip + 0x33f5b5] ; ret
0x0000000000023233 : stosb byte ptr [rdi], al ; mov rax, qword ptr [rip + 0x34b125] ; ret
0x0000000000023223 : stosb byte ptr [rdi], al ; mov rax, qword ptr [rip + 0x34b145] ; ret
0x0000000000039203 : stosb byte ptr [rdi], al ; mov rax, rdi ; cqo ; idiv rsi ; ret
0x000000000007a9a3 : stosb byte ptr [rdi], al ; mov rax, rdi ; ret
0x00000000000fed93 : stosb byte ptr [rdi], al ; movsxd rdi, dword ptr [rdi] ; mov eax, 3 ; syscall
0x00000000000f0e43 : stosb byte ptr [rdi], al ; movsxd rdi, edi ; mov eax, 0xe5 ; syscall
0x00000000000d8303 : stosb byte ptr [rdi], al ; movsxd rsi, esi ; mov eax, 0x10a ; syscall
0x00000000000d57d3 : stosb byte ptr [rdi], al ; movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x00000000000d47dc : stosb byte ptr [rdi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000144b21 : stosb byte ptr [rdi], al ; out dx, al ; jmp qword ptr [rdi]
0x0000000000035893 : stosb byte ptr [rdi], al ; pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x00000000000f0fd3 : stosb byte ptr [rdi], al ; push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x0000000000021ac3 : stosb byte ptr [rdi], al ; ret
0x0000000000003602 : stosb byte ptr [rdi], al ; stc ; cmp eax, 0x952a0fa3 ; ret
0x0000000000142d59 : stosb byte ptr [rdi], al ; std ; jmp rsp
0x0000000000080d76 : stosb byte ptr [rdi], al ; sub dword ptr [rsi], 0 ; test eax, eax ; js 0x80d88 ; ret
0x00000000000e1a23 : stosb byte ptr [rdi], al ; test rdi, rdi ; jne 0xe1a36 ; ret
0x00000000000e1a22 : stosb byte ptr [rdi], al ; test rdi, rdi ; jne 0xe1a37 ; ret
0x00000000000858b3 : stosb byte ptr [rdi], al ; test rsi, rsi ; jne 0x858c6 ; xor rax, rax ; ret
0x000000000002edc3 : stosb byte ptr [rdi], al ; xor eax, eax ; and edi, 0xffffff80 ; sete al ; ret
0x0000000000073843 : stosb byte ptr [rdi], al ; xor eax, eax ; ret
0x0000000000075f93 : stosb byte ptr [rdi], al ; xor eax, eax ; test byte ptr [rdi], 4 ; sete al ; ret
0x0000000000075fa3 : stosb byte ptr [rdi], al ; xor eax, eax ; test byte ptr [rdi], 8 ; sete al ; ret
0x0000000000141875 : stosd dword ptr [rdi], eax ; add dword ptr [rax], eax ; hlt ; adc ebx, edi ; jmp rsp
0x0000000000103912 : stosd dword ptr [rdi], eax ; cmp al, byte ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret 0x46c7
0x000000000013f7f1 : stosd dword ptr [rdi], eax ; hlt ; jmp rsp
0x0000000000130021 : stosd dword ptr [rdi], eax ; jmp qword ptr [rax]
0x0000000000130081 : stosd dword ptr [rdi], eax ; jmp rax
0x0000000000111448 : stosd dword ptr [rdi], eax ; pop rbx ; ret
0x000000000007cd81 : stosd dword ptr [rdi], eax ; ret
0x0000000000119431 : stosd dword ptr [rdi], eax ; ret 0xfff6
0x00000000000da502 : stosd dword ptr [rdi], eax ; ret 5
0x0000000000033df3 : str word ptr [rax + 0x63] ; adc al, 0xb7 ; add rdx, rdi ; jmp rdx
0x0000000000034027 : str word ptr [rax + 0x63] ; add al, 0x83 ; add rax, rbx ; jmp rax
0x0000000000033d8c : str word ptr [rax + 0x63] ; ret
0x000000000010fded : str word ptr [rax - 0x77] ; ret 0x8348
0x000000000003564a : str word ptr [rdi] ; push rsp ; ret
0x000000000002f682 : str word ptr [rdx + 0x63] ; add al, 0xa2 ; add rdx, rax ; jmp rdx
0x000000000012ebd1 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000001420a9 : sub ah, bh ; call rsp
0x000000000015a370 : sub al, 0 ; add byte ptr [rax], al ; pop rsp ; jno 0x15a381 ; add byte ptr [rax], cl ; ret 0xfff9
0x000000000015f458 : sub al, 0 ; add byte ptr [rax], al ; ret 1
0x00000000000e465b : sub al, 0 ; add byte ptr [rax], al ; syscall
0x00000000000a3b57 : sub al, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000a4617 : sub al, 0 ; add rsp, 8 ; ret
0x00000000000a5b0a : sub al, 0 ; jb 0xa5b25 ; jmp 0xa5b88
0x00000000000f7b9c : sub al, 0x27 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000095672 : sub al, 0x3b ; sub al, 0x75 ; pop rax ; ret
0x00000000000bd6be : sub al, 0x48 ; mov ecx, dword ptr [rbx + 0x18] ; xor esi, esi ; mov edx, r8d ; jmp 0xbd6e4
0x0000000000158d44 : sub al, 0x5b ; add dword ptr [rax], eax ; pop rax ; jp 0x158d4b ; jmp qword ptr [rax]
0x0000000000130f50 : sub al, 0x5e ; idiv edi ; xchg eax, ebp ; push -9 ; jmp qword ptr [rsi]
0x0000000000095675 : sub al, 0x75 ; pop rax ; ret
0x00000000000bd8d7 : sub al, 0x83 ; ret 0x4801
0x0000000000064d53 : sub al, 0x83 ; ret 0x8308
0x000000000014b644 : sub al, 0x84 ; add byte ptr [rax], al ; cmp al, ch ; jmp rbx
0x000000000014bb44 : sub al, 0x89 ; add byte ptr [rax], al ; cwde ; hlt ; call qword ptr [rsi]
0x000000000015e644 : sub al, 0xb4 ; add dword ptr [rax], eax ; mov ch, ch ; cli ; call qword ptr [rsi]
0x000000000014e844 : sub al, 0xb6 ; add byte ptr [rax], al ; pop rax ; nop ; hlt ; jmp qword ptr [rcx]
0x000000000015f244 : sub al, 0xc0 ; add dword ptr [rax], eax ; sub byte ptr [rcx], ah ; sti ; jmp qword ptr [rdx]
0x000000000014f544 : sub al, 0xc3 ; add byte ptr [rax], al ; sub byte ptr [rsi], dh ; cmc ; jmp qword ptr [rdx]
0x0000000000031cd3 : sub al, 0xe9 ; ret
0x00000000000e4155 : sub al, 1 ; add byte ptr [rax], al ; syscall
0x000000000007d864 : sub al, 8 ; add dword ptr [rax + 0x39], ecx ; ret
0x0000000000034822 : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rax, rcx ; pop rbx ; ret
0x00000000000e4382 : sub al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000589fa : sub al, byte ptr [rbx - 0x1cf43] ; call qword ptr [rax]
0x00000000000da657 : sub al, ch ; ret
0x00000000001308c4 : sub bh, bh ; hlt ; call rax
0x000000000011c3c9 : sub bl, al ; call qword ptr [rax]
0x00000000000a46ab : sub byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x0000000000095666 : sub byte ptr [r11], r15b ; sub byte ptr [rbp + 0x63], r14b ; ret
0x0000000000114af5 : sub byte ptr [r8 + r15*4], r8b ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000c8c13 : sub byte ptr [r8 - 0x77], r9b ; ret
0x0000000000097499 : sub byte ptr [r8 - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x00000000000bcabb : sub byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000010f5fa : sub byte ptr [rax + 1], bh ; ret
0x0000000000114af6 : sub byte ptr [rax + rdi*4], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000114bae : sub byte ptr [rax - 0x75], cl ; sbb byte ptr [r11 + 0x5d], r11b ; pop r12 ; ret
0x00000000000e453c : sub byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000000a7f4a : sub byte ptr [rax - 0x77], cl ; jmp 0x48cd08a0
0x00000000000a8196 : sub byte ptr [rax - 0x77], cl ; jmp 0x4ccd0aec
0x000000000010c1b9 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x00000000000c8c14 : sub byte ptr [rax - 0x77], cl ; ret
0x000000000010aab8 : sub byte ptr [rax - 0x77], cl ; ret 0x4388
0x00000000000e5c04 : sub byte ptr [rax - 0x77], cl ; ret 0x4d72
0x000000000008ffd2 : sub byte ptr [rax - 0x77], cl ; ret 0x894c
0x000000000007028c : sub byte ptr [rax - 0x78], al ; cmp dword ptr [rax + 0xf], eax ; mov dh, 0xc7 ; ret
0x0000000000076787 : sub byte ptr [rax - 0x78], r8b ; cmp dword ptr [rax + 0xf], eax ; mov dh, 0xc7 ; ret
0x000000000009749a : sub byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x00000000000afdf4 : sub byte ptr [rax - 0x7d], cl ; ret
0x00000000000d1bdc : sub byte ptr [rax - 0x7d], cl ; ret 0x4d01
0x00000000000e5971 : sub byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000e5945 : sub byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000db218 : sub byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000000e093a : sub byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000000dd9fb : sub byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000e5a3c : sub byte ptr [rax], al ; add word ptr [rdx + rax*2], 1 ; ret
0x00000000000eb144 : sub byte ptr [rax], al ; cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x000000000011c33f : sub byte ptr [rax], al ; jne 0x11c358 ; add rsp, 0x38 ; ret
0x00000000000dd788 : sub byte ptr [rax], al ; jne 0xdd7a1 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000e8433 : sub byte ptr [rax], al ; mov dword ptr fs:[rax], edx ; add rsp, 0x18 ; ret
0x00000000000e6399 : sub byte ptr [rax], al ; mov eax, dword ptr [rax + 0x38] ; ret
0x00000000000e5cb5 : sub byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x00000000000deffe : sub byte ptr [rax], al ; mov rdx, rax ; jmp 0xdefd8
0x00000000000dec6a : sub byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000e0320 : sub byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e583c : sub byte ptr [rax], al ; pop rbx ; ret
0x00000000000dfea2 : sub byte ptr [rax], al ; ret
0x000000000011197b : sub byte ptr [rbp + 0x41], bl ; pop rsp ; ret
0x000000000009566a : sub byte ptr [rbp + 0x63], dh ; ret
0x0000000000095669 : sub byte ptr [rbp + 0x63], r14b ; ret
0x00000000000bb812 : sub byte ptr [rbp - 0xb], dh ; or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x0000000000021c38 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000a46ac : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000036e20 : sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000011c19b : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x000000000011c19a : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x00000000000f852c : sub byte ptr [rbx - 0x71f0ff08], al ; ret 1
0x0000000000095667 : sub byte ptr [rbx], bh ; sub byte ptr [rbp + 0x63], r14b ; ret
0x00000000000b30c0 : sub byte ptr [rcx + 0x81bed8], cl ; add byte ptr [rax], al ; syscall
0x000000000007d5c2 : sub byte ptr [rcx + rcx*4 + 0x62], cl ; and byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000114be7 : sub byte ptr [rcx + rcx*4 + 0x63], cl ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000080542 : sub byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x00000000000f0c26 : sub byte ptr [rcx + rcx*4 - 0x38], al ; syscall
0x000000000007de52 : sub byte ptr [rcx + rcx*4 - 1], cl ; call qword ptr [rax]
0x0000000000035d89 : sub byte ptr [rcx - 0x3b76b310], cl ; mov rbp, r9 ; jmp rdx
0x000000000015f248 : sub byte ptr [rcx], ah ; sti ; jmp qword ptr [rdx]
0x00000000000dc878 : sub byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x0000000000140075 : sub byte ptr [rcx], al ; add byte ptr [rcx + rbp - 9], ah ; jmp rsp
0x0000000000074cbe : sub byte ptr [rcx], al ; jmp 0x74c88
0x0000000000073a17 : sub byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000061663 : sub byte ptr [rcx], dh ; rol byte ptr [rbp - 0x3f60f025], 0x29 ; ret
0x00000000000bbf54 : sub byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000001093b4 : sub byte ptr [rdi - 0x17], dh ; mov qword ptr [rdx + 0x20], rsi ; ret
0x0000000000029689 : sub byte ptr [rdi], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000001460f8 : sub byte ptr [rsi], ch ; out dx, eax ; call qword ptr [rsi]
0x000000000014f548 : sub byte ptr [rsi], dh ; cmc ; jmp qword ptr [rdx]
0x0000000000145f81 : sub ch, bh ; jmp qword ptr [rsi]
0x0000000000035559 : sub cl, al ; jne 0x35570 ; add rsp, 8 ; ret
0x0000000000035844 : sub cl, al ; jne 0x35858 ; add rsp, 8 ; ret
0x00000000000353dc : sub cl, al ; ret
0x00000000000a38d2 : sub cl, byte ptr [rax + 0x63] ; fld qword ptr [rbx + 0x14809c5] ; ret
0x00000000000d2cf2 : sub cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x403c
0x00000000000e1d95 : sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000130ab1 : sub dh, dh ; call qword ptr [rbx]
0x0000000000130aa5 : sub dh, dh ; call rax
0x0000000000150e91 : sub dh, dh ; jmp qword ptr [rax]
0x00000000000bd005 : sub dh, dh ; ret 0x7420
0x00000000001484b9 : sub dh, dl ; call rcx
0x000000000008f51e : sub dword ptr [rax - 0x77], ecx ; jmp 0x4ccb7e78
0x00000000000e4845 : sub dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000000e441 : sub dword ptr [rax], eax ; add byte ptr [rdx], dl ; add byte ptr [rbx], cl ; add byte ptr [rax], al ; ret 6
0x00000000000cbfc7 : sub dword ptr [rax], eax ; mov dword ptr [rdx], ecx ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000c96f9 : sub dword ptr [rax], eax ; mov rax, qword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x00000000000e7ed0 : sub dword ptr [rax], ebp ; add byte ptr [rax - 0x77], cl ; ret 0x84e9
0x0000000000074cbc : sub dword ptr [rbx + 0x28], 1 ; jmp 0x74c8a
0x000000000000efc8 : sub dword ptr [rbx], eax ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; or eax, dword ptr [rax] ; push rax ; call qword ptr [rax]
0x0000000000117b25 : sub dword ptr [rdi + 0x18], 1 ; je 0x117b38 ; xor eax, eax ; ret
0x00000000000b8334 : sub dword ptr [rdi], ecx ; test bl, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000080d77 : sub dword ptr [rsi], 0 ; test eax, eax ; js 0x80d87 ; ret
0x00000000001114ce : sub eax, -0x80 ; add rsp, 8 ; ret
0x0000000000114992 : sub eax, 0x10c48348 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000145f7d : sub eax, 0x2a100000 ; out dx, eax ; jmp qword ptr [rsi]
0x000000000003562d : sub eax, 0x7f800000 ; shr eax, 0x1f ; ret
0x000000000004d57a : sub eax, 0x83000000 ; ret 0x8b01
0x00000000000598da : sub eax, 0x8300001e ; ret 0x8308
0x00000000000e79fc : sub eax, 0x89480028 ; ret 0x8948
0x0000000000142cf5 : sub eax, 0x90d40002 ; std ; jmp rsp
0x00000000000452b7 : sub eax, 0xf3ffffff ; ret
0x00000000000445f7 : sub eax, 1 ; cmp rax, rbx ; jne 0x445f9 ; pop rbx ; ret
0x000000000002bb74 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00000000000be79e : sub eax, 1 ; pop rbp ; ret
0x00000000000457ef : sub eax, 1 ; ret
0x0000000000096542 : sub eax, 4 ; ret
0x0000000000145ddd : sub eax, dword ptr [rax] ; add al, al ; and ebp, edi ; jmp rsp
0x00000000000e42e2 : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x00000000000b1bb2 : sub eax, dword ptr [rax] ; jne 0xb1bc8 ; jmp 0xb1be6
0x00000000000b0633 : sub eax, dword ptr [rax] ; mov dword ptr fs:[rax], edx ; add rsp, 0x18 ; ret
0x000000000002f7af : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000009483b : sub eax, dword ptr [rcx + r8*4] ; je 0x9481f ; ret
0x000000000009483c : sub eax, dword ptr [rcx + rax*4] ; je 0x9481e ; ret
0x0000000000155da5 : sub eax, dword ptr [rcx] ; add al, bl ; mov al, 0xf8 ; call rdi
0x00000000000e4bc7 : sub eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x000000000007aff2 : sub eax, dword ptr [rdi + 0x18] ; ret
0x000000000007606d : sub eax, dword ptr [rdi + 0x20] ; ret
0x0000000000075f3d : sub eax, dword ptr [rdi + 0x38] ; ret
0x0000000000071e29 : sub eax, dword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x000000000007605a : sub eax, dword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x0000000000075f2a : sub eax, dword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x00000000000947ec : sub eax, dword ptr [rdx + rcx*4] ; je 0x947d6 ; ret
0x000000000007a6b7 : sub eax, dword ptr [rsi + 0x10] ; ret
0x00000000000471c5 : sub eax, eax ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000095bec : sub eax, eax ; nop ; ret
0x0000000000095ba9 : sub eax, eax ; ret
0x000000000007158e : sub eax, ebp ; pop r13 ; pop r14 ; ret
0x00000000000799fb : sub eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000096d32 : sub eax, ebp ; pop rbp ; pop r12 ; ret
0x0000000000079e79 : sub eax, ecx ; lea eax, [r8 - 1] ; ret
0x00000000000850bc : sub eax, ecx ; ret
0x00000000000eb566 : sub eax, edi ; pop r15 ; ret
0x00000000000858a1 : sub eax, edi ; ret
0x000000000003919d : sub eax, edx ; ret
0x0000000000035923 : sub eax, edx ; sar eax, 0x10 ; ret
0x0000000000035613 : sub eax, edx ; shr eax, 0x1f ; ret
0x0000000000035251 : sub eax, edx ; shr rax, 0x3f ; ret
0x00000000000a69f7 : sub eax, edx ; sub ecx, eax ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000073bd6 : sub eax, esi ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000077a89 : sub eax, esp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000095beb : sub eax, r8d ; nop ; ret
0x0000000000095ba8 : sub eax, r8d ; ret
0x000000000012d47e : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x000000000013f921 : sub ebp, esi ; jmp rsp
0x0000000000100708 : sub ebx, dword ptr [rbx + 0x5d] ; ret
0x000000000012bf15 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000002f3b : sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000015f699 : sub ebx, edi ; jmp qword ptr [rbx]
0x000000000007c57e : sub ecx, dword ptr [rax + 0x39] ; ret
0x00000000000ffb8e : sub ecx, dword ptr [rax + 0x5d5b1153] ; pop r12 ; ret
0x000000000006731f : sub ecx, dword ptr [rax - 0x77] ; ret
0x00000000000ed065 : sub ecx, dword ptr [rax - 0x7d] ; ret
0x00000000000a2d9e : sub ecx, eax ; lea rax, [r8 + rcx] ; ret
0x00000000000a69f9 : sub ecx, eax ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000949fc : sub edi, 0x10 ; add rax, rdi ; ret
0x0000000000153d79 : sub edi, eax ; jmp rsi
0x0000000000140079 : sub edi, esi ; jmp rsp
0x00000000000874d3 : sub edx, 1 ; mov byte ptr [rcx], r8b ; jne 0x874c9 ; ret
0x0000000000095cc2 : sub edx, 1 ; mov dword ptr [rcx], r8d ; jne 0x95cb9 ; ret
0x000000000007a6e8 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000007a6d9 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000088b74 : sub edx, eax ; jbe 0x88bb7 ; add rax, rdi ; ret
0x0000000000088b84 : sub edx, eax ; jbe 0x88bb9 ; lea rax, [rdi + rax + 0x10] ; ret
0x0000000000088b94 : sub edx, eax ; jbe 0x88bb9 ; lea rax, [rdi + rax + 0x20] ; ret
0x0000000000088ba4 : sub edx, eax ; jbe 0x88bb9 ; lea rax, [rdi + rax + 0x30] ; ret
0x00000000000207c6 : sub edx, ebx ; inc rdx ; jmp 0x207d5
0x00000000000358e1 : sub edx, ecx ; not eax ; and eax, edx ; ret
0x0000000000072bea : sub edx, esi ; mov rdi, rbx ; call rax
0x0000000000091112 : sub esi, 1 ; jne 0x9110f ; xor eax, eax ; ret
0x00000000001005a2 : sub esi, 1 ; mov byte ptr [rdi + 1], sil ; ret
0x000000000011b762 : sub esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000013ee19 : sub esi, ebx ; call rsp
0x000000000001f5d8 : sub esi, edx ; add edx, ecx ; cmp esi, ecx ; cmovge eax, edx ; jmp 0x1f5b6
0x0000000000114cda : sub esp, -0x80 ; mov rax, rdx ; pop rbx ; ret
0x00000000000d664c : sub esp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fb40c : sub esp, -0x80 ; pop rbx ; ret
0x00000000000fb419 : sub esp, -0x80 ; xor eax, eax ; pop rbx ; ret
0x0000000000074479 : sub esp, 0x80 ; call 0xf0778
0x00000000000744ec : sub esp, 0x80 ; call 0xf07a8
0x000000000011de1c : sub esp, 8 ; call 0xca035
0x00000000000e4585 : sub esp, 8 ; call 0xf07c5
0x00000000000f0891 : sub esp, 8 ; mov rdi, qword ptr [rdi + 8] ; call qword ptr [rax]
0x00000000000db1bf : sub esp, 8 ; syscall
0x00000000000a11a7 : sub esp, eax ; pop rbp ; mov eax, r12d ; pop r12 ; ret
0x0000000000074cbb : sub qword ptr [rbx + 0x28], 1 ; jmp 0x74c8b
0x00000000000a11a6 : sub r12d, eax ; pop rbp ; mov eax, r12d ; pop r12 ; ret
0x0000000000079e78 : sub r8, rcx ; lea eax, [r8 - 1] ; ret
0x00000000001114cd : sub rax, -0x80 ; add rsp, 8 ; ret
0x0000000000089a66 : sub rax, 1 ; ret
0x0000000000096541 : sub rax, 4 ; ret
0x000000000007aff1 : sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000007606c : sub rax, qword ptr [rdi + 0x20] ; ret
0x0000000000075f3c : sub rax, qword ptr [rdi + 0x38] ; ret
0x0000000000071e28 : sub rax, qword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x0000000000076059 : sub rax, qword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x0000000000075f29 : sub rax, qword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x0000000000077a88 : sub rax, r12 ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007158d : sub rax, r13 ; pop r13 ; pop r14 ; ret
0x0000000000073bd5 : sub rax, r14 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000096d31 : sub rax, rbp ; pop rbp ; pop r12 ; ret
0x00000000000858a0 : sub rax, rdi ; ret
0x00000000000391b1 : sub rax, rdx ; ret
0x0000000000035250 : sub rax, rdx ; shr rax, 0x3f ; ret
0x00000000000a2d9d : sub rcx, rax ; lea rax, [r8 + rcx] ; ret
0x00000000000949fb : sub rdi, 0x10 ; add rax, rdi ; ret
0x0000000000088b73 : sub rdx, rax ; jbe 0x88bb8 ; add rax, rdi ; ret
0x00000000000207c5 : sub rdx, rbx ; inc rdx ; jmp 0x207d6
0x0000000000072be9 : sub rdx, rsi ; mov rdi, rbx ; call rax
0x0000000000091111 : sub rsi, 1 ; jne 0x91110 ; xor eax, eax ; ret
0x0000000000114cd9 : sub rsp, -0x80 ; mov rax, rdx ; pop rbx ; ret
0x00000000000d664b : sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fb40b : sub rsp, -0x80 ; pop rbx ; ret
0x00000000000fb418 : sub rsp, -0x80 ; xor eax, eax ; pop rbx ; ret
0x0000000000074478 : sub rsp, 0x80 ; call 0xf0779
0x00000000000744eb : sub rsp, 0x80 ; call 0xf07a9
0x000000000011de1b : sub rsp, 8 ; call 0xca036
0x00000000000e4584 : sub rsp, 8 ; call 0xf07c6
0x00000000000f0890 : sub rsp, 8 ; mov rdi, qword ptr [rdi + 8] ; call qword ptr [rax]
0x00000000000db1be : sub rsp, 8 ; syscall
0x0000000000130ab0 : sub sil, sil ; call qword ptr [rbx]
0x0000000000035330 : subps xmm0, xmm1 ; ret
0x000000000003532f : subsd xmm0, xmm1 ; ret
0x00000000000356a4 : subss xmm0, xmm1 ; ret
0x0000000000002677 : syscall
0x000000000006ded4 : test ah, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000014214c : test ah, cl ; add dword ptr [rax], eax ; adc al, 0x3e ; cld ; call rsp
0x00000000000bfbcd : test ah, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000094d0 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000010610 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d
0x000000000000a220 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2c
0x000000000011154f : test al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000010c01e : test al, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000001104a5 : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000002dd54 : test al, 0 ; add byte ptr [rax], al ; ret
0x00000000000dd375 : test al, 0 ; add byte ptr [rax], al ; syscall
0x000000000015b378 : test al, 0x1b ; cli ; jmp rax
0x000000000015b428 : test al, 0x1e ; cli ; call rcx
0x000000000014c038 : test al, 0x25 ; jmp rdx
0x0000000000003c5a : test al, 0x35 ; push rbx ; or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x000000000015b798 : test al, 0x42 ; cli ; jmp qword ptr [rbx]
0x0000000000146928 : test al, 0x46 ; out dx, eax ; jmp rax
0x00000000000c5e59 : test al, 0x48 ; add eax, ecx ; jmp rax
0x00000000000af767 : test al, 0x48 ; mov edi, dword ptr [rbp - 0x68] ; call r14
0x000000000007961d : test al, 0x66 ; nop ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000012c7d7 : test al, 0x97 ; xchg eax, esp ; ret
0x0000000000144988 : test al, 0xa5 ; out dx, al ; call qword ptr [rdi]
0x0000000000144df8 : test al, 0xdb ; out dx, al ; jmp qword ptr [rbx]
0x000000000014fd58 : test al, 0xe1 ; cmc ; jmp qword ptr [rbx]
0x0000000000022deb : test al, 0xe9 ; ret
0x0000000000095fd9 : test al, 0xf0 ; jne 0x96038 ; lea rax, [rdi - 0x10] ; ret
0x0000000000095fd8 : test al, 0xf0 ; jne 0x96039 ; lea rax, [rdi - 0x10] ; ret
0x0000000000159d41 : test al, 0xf9 ; jmp rdx
0x0000000000161941 : test al, 0xfb ; jmp qword ptr [rsi]
0x0000000000142439 : test al, 0xfc ; call rsp
0x000000000009115a : test al, al ; jne 0x910fe ; mov rax, rdi ; ret
0x00000000000937d9 : test al, al ; jne 0x937c5 ; ret
0x00000000000f19d9 : test al, al ; mov byte ptr [rdi], al ; jne 0xf19d1 ; mov rax, rdi ; ret
0x00000000000f1ba9 : test al, al ; mov byte ptr [rdi], al ; jne 0xf1ba1 ; mov rax, r10 ; ret
0x000000000003ab75 : test bh, bh ; cmove eax, edx ; add rsp, 8 ; ret
0x000000000003aba5 : test bh, bh ; cmovne eax, edx ; add rsp, 8 ; ret
0x00000000000de0a0 : test bh, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x00000000000ae621 : test bh, ch ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xdb31
0x000000000009171a : test bl, ah ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000000b8336 : test bl, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000001159bb : test byte ptr [rax + 0x1000001], dl ; ret 0x894c
0x000000000002ed6a : test byte ptr [rax + 0x200], bh ; ret
0x00000000000b4952 : test byte ptr [rax + 0x63], 0x14 ; mov al, 0x48 ; add eax, edx ; jmp rax
0x000000000010ebf9 : test byte ptr [rax + 0x63], 0x34 ; mov al, 0x48 ; add eax, esi ; jmp rax
0x000000000010f559 : test byte ptr [rax + 0x63], 0xc ; mov al, 0x48 ; add eax, ecx ; jmp rax
0x0000000000035ec2 : test byte ptr [rax + 0x63], 0xf9 ; mov eax, 0xea ; syscall
0x00000000000db29f : test byte ptr [rax + 0x63], 0xff ; mov eax, 0x118 ; syscall
0x00000000000dba53 : test byte ptr [rax + 0x63], 0xff ; mov eax, 0x11d ; syscall
0x00000000000e3886 : test byte ptr [rax + 0x63], 0xff ; mov eax, 0x122 ; syscall
0x00000000000d6e8b : test byte ptr [rax + 0x63], 0xff ; mov eax, 0x48 ; syscall
0x00000000000dc41a : test byte ptr [rax + 0x63], 0xff ; mov eax, ecx ; syscall
0x00000000000a25a4 : test byte ptr [rax + 0xf], 0x45 ; ret 0x8948
0x000000000014de9c : test byte ptr [rax + rax - 0xba69000], ch ; jmp qword ptr [rdx]
0x000000000014669c : test byte ptr [rax + rax], dh ; add al, dl ; cmp edi, ebp ; jmp qword ptr [rcx]
0x00000000000442a1 : test byte ptr [rax + rcx*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret 0x1ee9
0x00000000000cdf60 : test byte ptr [rax + rcx], dl ; add byte ptr [rax - 0x77], cl ; ret
0x00000000000c3fb9 : test byte ptr [rax + rdi*2], ah ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x854d
0x0000000000029448 : test byte ptr [rax + rdx*4], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000c6c51 : test byte ptr [rax + rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x84c6
0x00000000000c775d : test byte ptr [rax + rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000023dbf : test byte ptr [rax - 0x39], cl ; ret
0x00000000000276cf : test byte ptr [rax - 0x77000000], dh ; ret 0xe281
0x00000000000f0f63 : test byte ptr [rax - 0x77], 0xdf ; mov eax, 0xe6 ; syscall
0x000000000013ef08 : test byte ptr [rax - 0xd], al ; jmp rsp
0x00000000001421f0 : test byte ptr [rax - 4], ah ; jmp rsp
0x0000000000140748 : test byte ptr [rax - 7], al ; jmp rsp
0x000000000013f86d : test byte ptr [rax], 0 ; and al, 0xbe ; hlt ; jmp rsp
0x00000000000c9322 : test byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe2c1
0x000000000013e5e5 : test byte ptr [rax], al ; add ah, ah ; mov ah, 0xef ; jmp rsp
0x000000000011dd6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x00000000000e96aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, eax ; jmp 0xe96a3
0x000000000006b5fa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x00000000000962ea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000006eeea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000002dd1a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000006c8fa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000093dca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000000d6315 : test byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x0000000000153a9c : test byte ptr [rax], cl ; add dword ptr [rax], eax ; shl byte ptr [rdi], 0xf8 ; jmp qword ptr [rdx]
0x0000000000023ce6 : test byte ptr [rbp + rcx*4 + 0x2c], cl ; ret
0x00000000000b8697 : test byte ptr [rbp - 0x76fffffd], ah ; ret 0x8349
0x00000000000eef00 : test byte ptr [rbx + 0x1c], 0x20 ; je 0xeef78 ; xor eax, eax ; pop rbx ; ret
0x00000000000d2cec : test byte ptr [rbx + 0x3c00000f], dh ; sub cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x403c
0x0000000000158d9c : test byte ptr [rbx + 1], bl ; add al, ah ; jp 0x158da3 ; jmp qword ptr [rbx]
0x000000000015d59c : test byte ptr [rbx - 0x511fffff], ah ; cli ; call qword ptr [rdi]
0x0000000000097ae8 : test byte ptr [rbx], bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000de100 : test byte ptr [rbx], ch ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x0000000000097fb8 : test byte ptr [rbx], cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000ddfdf : test byte ptr [rcx + rax - 0x7cb80000], ah ; ret 0x3c01
0x0000000000101e48 : test byte ptr [rcx + rbp - 0xe], 0x83 ; ret 0xe82e
0x0000000000036340 : test byte ptr [rcx + rcx*4 - 0x31], 0x44 ; mov eax, eax ; syscall
0x00000000000eb268 : test byte ptr [rcx + rsi*2 + 1], 0x40 ; cmovne eax, edx ; ret
0x000000000003c7ad : test byte ptr [rcx - 0x47], 0x40 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x894c
0x00000000000ae0b2 : test byte ptr [rcx - 0x7d], 0xc4 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000000001423e5 : test byte ptr [rcx], 0 ; hlt ; wait ; cld ; call rsp
0x00000000000f4e75 : test byte ptr [rcx], 0xf0 ; bswap eax ; ret
0x000000000014108d : test byte ptr [rcx], al ; add ah, dh ; cli ; call rsp
0x000000000009ebb9 : test byte ptr [rcx], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0x000000000008595c : test byte ptr [rdi + 0x48000000], bl ; bsf eax, edx ; ret
0x00000000000bd049 : test byte ptr [rdi + rdi*8 - 1], bh ; lcall ptr [rbx - 0x70] ; ret
0x00000000000b0134 : test byte ptr [rdi + rdi*8 - 1], ch ; dec dword ptr [rax - 0x77] ; ret 0xb9
0x00000000000b83b7 : test byte ptr [rdi + rdi*8 - 1], dl ; dec dword ptr [rax - 0x7d] ; ret
0x00000000000d38a0 : test byte ptr [rdi + rsi*8 + 0x3145ffff], dh ; imul cl ; ret
0x00000000000cdf25 : test byte ptr [rdi - 0x76fffff8], cl ; ret 0x8948
0x00000000000c950d : test byte ptr [rdi], 0x4e ; ret 0x148d
0x00000000000eba96 : test byte ptr [rdi], 0x84 ; ret
0x00000000000fdd3b : test byte ptr [rdi], 0x85 ; ret
0x000000000009283a : test byte ptr [rdi], 0x95 ; ret 0xd029
0x0000000000075f96 : test byte ptr [rdi], 4 ; sete al ; ret
0x0000000000075fa6 : test byte ptr [rdi], 8 ; sete al ; ret
0x00000000000ce5d6 : test byte ptr [rdi], al ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ret 0x840f
0x000000000003efc4 : test byte ptr [rdi], al ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x000000000002ecf8 : test byte ptr [rdx + 0x200], al ; ret
0x000000000015c49c : test byte ptr [rdx + 0x7b600001], dl ; cli ; call qword ptr [rax]
0x000000000014349c : test byte ptr [rdx], al ; add byte ptr [rax], al ; push rax ; out dx, eax ; in eax, dx ; jmp rdx
0x000000000005f7ee : test byte ptr [rdx], al ; ret 0xffff
0x000000000013fbb4 : test byte ptr [rdx], cl ; add dword ptr [rax], eax ; and al, 0x9a ; cmc ; call rsp
0x000000000013e128 : test byte ptr [rdx], dl ; out dx, eax ; call rsp
0x00000000000cff1d : test byte ptr [rip + 0x39000001], dl ; ret 0x8e0f
0x000000000000e731 : test byte ptr [rip], 0 ; ret
0x000000000015a09c : test byte ptr [rsi + 1], ch ; add byte ptr [rax - 0x50], dh ; stc ; call rdi
0x00000000001031b9 : test byte ptr [rsi + rcx*2 + 1], 0x20 ; je 0x1031a8 ; ret
0x00000000000f4f78 : test byte ptr [rsi - 0x77000000], ah ; ret 0xe283
0x0000000000108eb8 : test byte ptr [rsi], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call qword ptr [rbx]
0x000000000008576d : test byte ptr [rsi], bh ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000013e028 : test byte ptr [rsi], cl ; out dx, eax ; call rsp
0x00000000000572c1 : test byte ptr [rsi], cl ; ret
0x00000000000e0d5e : test byte ptr [rsp + 0x29], 0x80 ; setne dl ; jmp 0xe0d42
0x00000000000449ae : test byte ptr [rsp + rax - 0x76b80000], cl ; ret 0x2948
0x00000000000945d6 : test ch, 0xf0 ; je 0x945c3 ; movzx eax, cl ; pop rbx ; ret
0x000000000015fe9c : test cl, ah ; add dword ptr [rax], eax ; add byte ptr [rsi], bh ; sti ; call qword ptr [rsi]
0x0000000000085b99 : test cl, cl ; je 0x85b61 ; mov byte ptr [r10 + 1], 0 ; ret
0x0000000000093780 : test cl, cl ; jne 0x93778 ; nop dword ptr [rax - 0x45] ; ret
0x00000000000eb2fd : test cl, cl ; jne 0xeb2ed ; ret
0x000000000003b55c : test cl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x48], cl ; ret 0xffff
0x000000000003d06f : test cl, dh ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], cl ; ret
0x0000000000094606 : test dh, 0xf0 ; je 0x945c1 ; movzx eax, dl ; pop rbx ; ret
0x0000000000094606 : test dh, 0xf0 ; je 0x945c3 ; movzx eax, dl ; pop rbx ; ret
0x0000000000033828 : test dh, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000011e00c : test dh, cl ; and al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000093950 : test dh, dh ; jne 0x93947 ; mov qword ptr [rdx], rcx ; ret
0x0000000000025139 : test dh, dh ; mov eax, 0xffffffff ; cmovns eax, edx ; ret
0x0000000000047433 : test dh, dl ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret
0x00000000000de03f : test dl, ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x3c01
0x000000000013f2bc : test dl, ch ; add byte ptr [rax], al ; je 0x13f280 ; call rsp
0x000000000003ab89 : test dl, dl ; cmovne eax, ecx ; add rsp, 8 ; ret
0x000000000009119e : test dl, dl ; cmovne rax, rcx ; ret
0x000000000003453a : test dl, dl ; jne 0x3451c ; ret
0x000000000009372c : test dl, dl ; jne 0x93725 ; ret
0x00000000000b583d : test dl, dl ; jne 0xb581d ; xor eax, eax ; ret
0x00000000000b5a8e : test dl, dl ; jne 0xb5a72 ; ret
0x0000000000088c08 : test dword ptr [rax + rax - 0x8b70000], ecx ; ret 2
0x0000000000056fdf : test dword ptr [rax + rbp*8 - 0x5d160001], esp ; ret 0xffff
0x000000000007f5f5 : test dword ptr [rax - 0x14000002], ecx ; ret
0x00000000000649f8 : test dword ptr [rax - 0x16000002], ecx ; ret 0xffd3
0x000000000002fba8 : test dword ptr [rax - 0x77], 0x89488845 ; ret
0x00000000000ae3b2 : test dword ptr [rax - 0x77], 0xe8082474 ; ret
0x00000000000586e2 : test dword ptr [rax - 0x7c000002], ecx ; ret 0x8908
0x0000000000049d0f : test dword ptr [rax - 0x7c000005], edi ; ret 0x8908
0x0000000000049d7f : test dword ptr [rax - 0x7c000005], edi ; ret 0x8910
0x000000000010a510 : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x31], cl ; ret 0x8949
0x00000000000f4081 : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rbx] ; jmp 0xf4057
0x00000000000d64ab : test dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000080adc : test dword ptr [rax], eax ; add rax, r13 ; jmp rax
0x000000000005c6f5 : test dword ptr [rax], ebx ; ret 0xffff
0x0000000000080adb : test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x0000000000089430 : test dword ptr [rbp + 0x48fffffe], esp ; mov eax, edi ; ret
0x0000000000093cde : test dword ptr [rbp], edi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000008961a : test dword ptr [rbx + 0x48fffffc], edi ; mov eax, edi ; ret
0x0000000000095580 : test dword ptr [rbx + 1], ecx ; add byte ptr [rax], al ; ret
0x0000000000095ec8 : test dword ptr [rbx + 1], esp ; add byte ptr [rax], al ; lea rax, [rdi - 0x10] ; ret
0x0000000000089719 : test dword ptr [rbx + rdi*8 - 0x76b70001], edi ; clc ; ret
0x0000000000002b37 : test dword ptr [rbx - 0x2e], ebp ; cmp dl, byte ptr [rdi] ; ret
0x00000000000941a8 : test dword ptr [rbx - 0x77000000], edi ; ret 0xeac1
0x00000000000cfc00 : test dword ptr [rbx - 0x9fffffe], ebx ; ret 0xf01
0x000000000008e555 : test dword ptr [rbx - 0xc000002], edx ; ret
0x0000000000093c48 : test dword ptr [rbx], eax ; add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000088aea : test dword ptr [rcx + 0x48000000], esi ; xor eax, eax ; ret
0x00000000000955c7 : test dword ptr [rcx + rax], eax ; add byte ptr [rax], al ; ret
0x0000000000095597 : test dword ptr [rcx + rax], esi ; add byte ptr [rax], al ; ret
0x00000000001099fd : test dword ptr [rcx - 0x77], 0x7520247c ; ret
0x000000000008e73f : test dword ptr [rcx - 0xc000004], ebp ; ret
0x000000000005f7b7 : test dword ptr [rcx], edi ; ret 0xffff
0x0000000000036897 : test dword ptr [rdi + rax*8], edx ; setne al ; movzx eax, al ; ret
0x00000000000abe25 : test dword ptr [rdi + rdi*8 - 1], ebp ; inc dword ptr [rbp - 0x77] ; ret 0x12e9
0x00000000000ed577 : test dword ptr [rdi + rdi*8 - 1], edi ; call qword ptr [rax]
0x00000000000eda46 : test dword ptr [rdi + rdi*8 - 1], edi ; jmp qword ptr [rax]
0x00000000000c314a : test dword ptr [rdi + rdi*8 - 1], esi ; push rsi ; ret 0x7420
0x0000000000036b0a : test dword ptr [rdi], eax ; setne al ; movzx eax, al ; ret
0x000000000004c74d : test dword ptr [rdx + rdi*8 + 0x1ffff], esi ; add byte ptr [rax], al ; jmp rax
0x000000000008e83e : test dword ptr [rdx - 0xc000005], ebp ; ret
0x00000000000c1cc4 : test dword ptr [rdx], ebx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000430cc : test dword ptr [rdx], esi ; add byte ptr [rcx - 0x3a], al ; add al, 0x10 ; add bl, dh ; ret
0x0000000000095f6d : test dword ptr [rsi + 0x48000000], edi ; lea eax, [rdi - 0x10] ; ret
0x000000000014db2d : test eax, 0x35700000 ; hlt ; call rax
0x000000000012e4c0 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000000356d1 : test eax, 0x7fffff ; je 0x356ce ; ret
0x000000000002cc0c : test eax, 0x83fffffc ; ret 0x8901
0x0000000000134351 : test eax, 0xa9ccfffd ; std ; jmp rsp
0x0000000000134359 : test eax, 0xa9fcfffd ; std ; jmp rsp
0x0000000000132556 : test eax, 0xc3fffb00 ; add dh, bh ; jmp rdi
0x000000000013ebfd : test eax, 0xe8e40000 ; jmp rsp
0x000000000008e740 : test eax, 0xf3fffffc ; ret
0x0000000000103998 : test eax, eax ; je 0x1039b0 ; add rsp, 8 ; ret
0x0000000000106665 : test eax, eax ; je 0x106679 ; mov rdi, rsp ; call rax
0x0000000000106d89 : test eax, eax ; je 0x106d9d ; mov rdi, rbp ; call rax
0x000000000010718a : test eax, eax ; je 0x107194 ; ret
0x0000000000107e7f : test eax, eax ; je 0x107e93 ; mov rdi, r14 ; call rax
0x000000000010811d : test eax, eax ; je 0x108131 ; mov rdi, rbx ; call rax
0x000000000010c90d : test eax, eax ; je 0x10c921 ; mov rdi, r12 ; call rax
0x000000000010cb55 : test eax, eax ; je 0x10cb6b ; lea rdi, [rbp + 0x10] ; call rax
0x000000000010dd97 : test eax, eax ; je 0x10ddab ; mov rdi, rbx ; call rax
0x000000000010de70 : test eax, eax ; je 0x10de84 ; mov rdi, rbp ; call rax
0x000000000010eba1 : test eax, eax ; je 0x10ebb7 ; lea rdi, [rbx + 0x68] ; call rax
0x000000000010f31a : test eax, eax ; je 0x10f32e ; mov rdi, r12 ; call rax
0x000000000010f741 : test eax, eax ; je 0x10f757 ; lea rdi, [rbx + 0x58] ; call rax
0x0000000000111408 : test eax, eax ; je 0x1113de ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00000000001113d1 : test eax, eax ; je 0x1113e5 ; pop rbx ; ret
0x0000000000111445 : test eax, eax ; je 0x1113f9 ; pop rbx ; ret
0x0000000000112115 : test eax, eax ; je 0x11212b ; lea rdi, [rbp + 0x10] ; call rax
0x000000000011286e : test eax, eax ; je 0x112884 ; lea rdi, [rbp + 0x10] ; call rax
0x000000000011a136 : test eax, eax ; je 0x11a149 ; xor ebx, ebx ; mov eax, ebx ; pop rbx ; ret
0x0000000000022050 : test eax, eax ; je 0x2205a ; call rax
0x0000000000022090 : test eax, eax ; je 0x220a3 ; call rax
0x000000000002c1c6 : test eax, eax ; je 0x2c1d4 ; call rax
0x000000000002d4bd : test eax, eax ; je 0x2d4cb ; call rax
0x0000000000076d55 : test eax, eax ; je 0x76d65 ; pop rbx ; ret
0x000000000007de7d : test eax, eax ; je 0x7de9a ; mov qword ptr [rsp + 0x28], rdx ; call rax
0x00000000000809cf : test eax, eax ; je 0x809dd ; call rax
0x00000000000854b8 : test eax, eax ; je 0x854c9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b2e6c : test eax, eax ; je 0xb2e7a ; call rax
0x00000000000b3099 : test eax, eax ; je 0xb30ab ; call rax
0x00000000000dcb40 : test eax, eax ; je 0xdcb4b ; ret
0x00000000000de845 : test eax, eax ; je 0xde854 ; mov qword ptr [rax], rdx ; ret
0x00000000000e2484 : test eax, eax ; je 0xe2540 ; call rax
0x00000000000e261f : test eax, eax ; je 0xe2740 ; call rax
0x00000000000f0c7c : test eax, eax ; je 0xf0c8d ; ret
0x00000000000f2f52 : test eax, eax ; je 0xf2f68 ; add rsp, 8 ; ret
0x00000000000fc231 : test eax, eax ; je 0xfc245 ; mov rdi, rbx ; call rax
0x00000000000e3556 : test eax, eax ; jl 0xe35a7 ; je 0xe3563 ; ret
0x0000000000103e20 : test eax, eax ; jne 0x103e2c ; ret
0x0000000000109c1c : test eax, eax ; jne 0x109bff ; xor eax, eax ; pop rbx ; ret
0x000000000010cdea : test eax, eax ; jne 0x10cdf4 ; ret
0x000000000011238a : test eax, eax ; jne 0x112394 ; ret
0x000000000011d1be : test eax, eax ; jne 0x11d1cc ; ret
0x000000000011deda : test eax, eax ; jne 0x11dee4 ; ret
0x000000000011e5e3 : test eax, eax ; jne 0x11e5f5 ; pop rbx ; ret
0x0000000000035daa : test eax, eax ; jne 0x35db4 ; ret
0x000000000006987b : test eax, eax ; jne 0x69890 ; mov rax, rbx ; pop rbx ; ret
0x000000000007a68c : test eax, eax ; jne 0x7a685 ; ret
0x00000000000837bf : test eax, eax ; jne 0x837b6 ; xor eax, eax ; ret
0x0000000000088b27 : test eax, eax ; jne 0x88b87 ; xor rax, rax ; ret
0x0000000000093d18 : test eax, eax ; jne 0x93d96 ; xor eax, eax ; ret
0x00000000000960c1 : test eax, eax ; jne 0x96095 ; ret
0x00000000000961ae : test eax, eax ; jne 0x961a6 ; xor eax, eax ; ret
0x0000000000097781 : test eax, eax ; jne 0x97740 ; nop dword ptr [rax] ; ret
0x00000000000afe6a : test eax, eax ; jne 0xafe98 ; mov eax, 0x74 ; syscall
0x00000000000dae33 : test eax, eax ; jne 0xdadd1 ; mov edi, r12d ; call 0xd7129
0x00000000000e2d4c : test eax, eax ; jne 0xe2d19 ; movsxd rdi, r15d ; mov al, 3 ; syscall
0x00000000000f008e : test eax, eax ; jne 0xf009c ; ret
0x00000000000f020e : test eax, eax ; jne 0xf021c ; ret
0x00000000000f038e : test eax, eax ; jne 0xf039c ; ret
0x00000000000f057e : test eax, eax ; jne 0xf058c ; ret
0x00000000000f06fe : test eax, eax ; jne 0xf070c ; ret
0x00000000000f0793 : test eax, eax ; jne 0xf078f ; pop rdx ; pop r10 ; ret
0x00000000000f0c3b : test eax, eax ; jne 0xf0c05 ; leave ; ret
0x00000000000f3293 : test eax, eax ; jne 0xf3285 ; ret
0x000000000007440f : test eax, eax ; js 0x7441d ; ret
0x0000000000080d7a : test eax, eax ; js 0x80d84 ; ret
0x00000000000c0296 : test ebp, ebp ; je 0xc025c ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000088a50 : test ebp, ebx ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x000000000011d13e : test ebx, ebx ; jne 0x11d14c ; ret
0x000000000011da37 : test ebx, ebx ; jne 0x11da28 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011dfd3 : test ebx, ebx ; jne 0x11dfc6 ; pop rbx ; ret
0x00000000000769f8 : test ebx, ebx ; jne 0x76a10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f014e : test ebx, ebx ; jne 0xf015c ; ret
0x00000000000f02ce : test ebx, ebx ; jne 0xf02dc ; ret
0x00000000000f04ce : test ebx, ebx ; jne 0xf04dc ; ret
0x00000000000f063e : test ebx, ebx ; jne 0xf064c ; ret
0x00000000000f31ca : test ebx, ebx ; jne 0xf31e0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002c595 : test ecx, ecx ; je 0x2c5a3 ; call rcx
0x000000000006a01c : test ecx, ecx ; je 0x6a02d ; ret
0x00000000000928d7 : test ecx, ecx ; jg 0x928c7 ; or byte ptr [rdi], sil ; ret
0x000000000011d0fe : test ecx, ecx ; jne 0x11d10c ; ret
0x000000000011d17c : test ecx, ecx ; jne 0x11d18c ; ret
0x00000000000960ab : test ecx, ecx ; jne 0x960a5 ; ret
0x00000000000f000c : test ecx, ecx ; jne 0xf001c ; ret
0x00000000000f00ce : test ecx, ecx ; jne 0xf00dc ; ret
0x00000000000f01cc : test ecx, ecx ; jne 0xf01dc ; ret
0x00000000000f024e : test ecx, ecx ; jne 0xf025c ; ret
0x00000000000f034c : test ecx, ecx ; jne 0xf035c ; ret
0x00000000000f048e : test ecx, ecx ; jne 0xf049c ; ret
0x00000000000f053c : test ecx, ecx ; jne 0xf054c ; ret
0x00000000000f05be : test ecx, ecx ; jne 0xf05cc ; ret
0x00000000000f06bc : test ecx, ecx ; jne 0xf06cc ; ret
0x00000000000f073e : test ecx, ecx ; jne 0xf074c ; ret
0x0000000000095ad8 : test ecx, ecx ; mov dword ptr [r8 + 4], ecx ; jne 0x95ab1 ; ret
0x0000000000094883 : test ecx, ecx ; mov dword ptr [rdx], ecx ; jne 0x9487f ; ret
0x0000000000017ad0 : test ecx, edi ; movsxd rcx, dword ptr [rcx] ; add byte ptr [rax], al ; sbb byte ptr [rax], al ; ret 0x58
0x0000000000140879 : test edi, ecx ; call rsp
0x000000000011dc17 : test edi, edi ; jne 0x11dc07 ; pop rbx ; ret
0x00000000000e1a25 : test edi, edi ; jne 0xe1a34 ; ret
0x00000000001030cb : test edi, edi ; js 0x1030f0 ; mov eax, 3 ; syscall
0x000000000011a6fb : test edi, edi ; js 0x11a71a ; mov eax, 3 ; syscall
0x00000000000b4854 : test edi, edi ; js 0xb4869 ; mov eax, 1 ; ret
0x00000000000f4e96 : test edi, edi ; js 0xf4ea9 ; mov eax, edi ; shr eax, 0x18 ; ret
0x0000000000081bab : test edx, edi ; je 0x81bbe ; pop rbx ; ret
0x00000000000bfd98 : test edx, edx ; cmovne eax, edx ; jmp 0xbfd76
0x00000000000e3123 : test edx, edx ; cmovne eax, edx ; ret
0x0000000000039263 : test edx, edx ; cmovns eax, edx ; pop rbx ; ret
0x00000000000e0b83 : test edx, edx ; cmovns rax, rdx ; jmp 0xe0b92
0x0000000000108aa3 : test edx, edx ; je 0x108ab7 ; mov rdi, rbp ; call rdx
0x000000000011685a : test edx, edx ; je 0x11686e ; xor eax, eax ; ret
0x000000000011d75c : test edx, edx ; je 0x11d76a ; call rdx
0x000000000011d89d : test edx, edx ; je 0x11d8b0 ; call rdx
0x00000000000763de : test edx, edx ; je 0x763f9 ; mov eax, 0xffffffff ; ret
0x000000000007c397 : test edx, edx ; je 0x7c3a5 ; call rdx
0x000000000008571d : test edx, edx ; je 0x8572b ; bsf eax, edx ; ret
0x000000000008571d : test edx, edx ; je 0x8572c ; bsf eax, edx ; ret
0x00000000000857d2 : test edx, edx ; je 0x857e7 ; bsf rax, rdx ; ret
0x00000000000857d2 : test edx, edx ; je 0x857e8 ; bsf rax, rdx ; ret
0x00000000000859d1 : test edx, edx ; je 0x859f7 ; bsf rax, rdx ; ret
0x00000000000859d1 : test edx, edx ; je 0x859f8 ; bsf rax, rdx ; ret
0x00000000000b3011 : test edx, edx ; je 0xb3023 ; call rdx
0x0000000000112061 : test edx, edx ; jne 0x11204d ; pop rbx ; ret
0x000000000011d1fe : test edx, edx ; jne 0x11d20c ; ret
0x000000000011d243 : test edx, edx ; jne 0x11d266 ; mov eax, 0x27 ; syscall
0x0000000000070b5f : test edx, edx ; jne 0x70b55 ; ret
0x0000000000079267 : test edx, edx ; jne 0x7925d ; ret
0x0000000000083889 : test edx, edx ; jne 0x83885 ; ret
0x00000000000977d2 : test edx, edx ; jne 0x977cd ; ret
0x00000000000effcf : test edx, edx ; jne 0xeffdc ; ret
0x00000000000f010e : test edx, edx ; jne 0xf011c ; ret
0x00000000000f018c : test edx, edx ; jne 0xf019c ; ret
0x00000000000f028e : test edx, edx ; jne 0xf029c ; ret
0x00000000000f030c : test edx, edx ; jne 0xf031c ; ret
0x00000000000f03ce : test edx, edx ; jne 0xf03dc ; ret
0x00000000000f040c : test edx, edx ; jne 0xf041c ; ret
0x00000000000f05fe : test edx, edx ; jne 0xf060c ; ret
0x00000000000f067c : test edx, edx ; jne 0xf068c ; ret
0x00000000000f088a : test edx, edx ; jne 0xf0894 ; ret
0x00000000000f0b0d : test edx, edx ; jne 0xf0b05 ; leave ; ret
0x00000000000964a7 : test edx, edx ; mov dword ptr [rax], edx ; jne 0x964a7 ; ret
0x0000000000095717 : test edx, edx ; mov dword ptr [rsi + rcx], edx ; jne 0x95718 ; ret
0x0000000000114e94 : test edx, edx ; mov eax, 1 ; jne 0x114ea9 ; ret
0x0000000000114ed4 : test edx, edx ; mov eax, 1 ; jne 0x114ee9 ; ret
0x0000000000078767 : test edx, edx ; push rbx ; mov rbx, rdx ; jne 0x78781 ; pop rbx ; ret
0x000000000009690d : test edx, edx ; sete al ; ret
0x000000000002bb60 : test esi, esi ; je 0x2bb22 ; pop rbx ; ret
0x000000000011d0bc : test esi, esi ; jne 0x11d0cc ; ret
0x0000000000035ea6 : test esi, esi ; jne 0x35ee9 ; mov eax, 0xba ; syscall
0x00000000000858b5 : test esi, esi ; jne 0x858c4 ; xor rax, rax ; ret
0x0000000000090812 : test esi, esi ; jne 0x90829 ; jmp 0x907df
0x00000000000f004c : test esi, esi ; jne 0xf005c ; ret
0x00000000000f044c : test esi, esi ; jne 0xf045c ; ret
0x00000000000f3370 : test esi, esi ; mov dword ptr [rax], esi ; jne 0xf3367 ; ret
0x00000000001023eb : test esp, eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000083842 : test esp, esp ; jne 0x8386d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000036b09 : test qword ptr [rdi], rax ; setne al ; movzx eax, al ; ret
0x000000000011d1fd : test r10d, r10d ; jne 0x11d20d ; ret
0x00000000000f010d : test r10d, r10d ; jne 0xf011d ; ret
0x00000000000f028d : test r10d, r10d ; jne 0xf029d ; ret
0x00000000000f03cd : test r10d, r10d ; jne 0xf03dd ; ret
0x00000000000f05fd : test r10d, r10d ; jne 0xf060d ; ret
0x000000000011d13d : test r11d, r11d ; jne 0x11d14d ; ret
0x00000000000f014d : test r11d, r11d ; jne 0xf015d ; ret
0x00000000000f02cd : test r11d, r11d ; jne 0xf02dd ; ret
0x00000000000f04cd : test r11d, r11d ; jne 0xf04dd ; ret
0x00000000000f063d : test r11d, r11d ; jne 0xf064d ; ret
0x0000000000083841 : test r12, r12 ; jne 0x8386e ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f0c3a : test r8, r8 ; jne 0xf0c06 ; leave ; ret
0x0000000000091159 : test r8b, r8b ; jne 0x910ff ; mov rax, rdi ; ret
0x00000000000937d8 : test r8b, r8b ; jne 0x937c6 ; ret
0x0000000000103e1f : test r8d, r8d ; jne 0x103e2d ; ret
0x000000000011d1bd : test r8d, r8d ; jne 0x11d1cd ; ret
0x00000000000960c0 : test r8d, r8d ; jne 0x96096 ; ret
0x0000000000097780 : test r8d, r8d ; jne 0x97741 ; nop dword ptr [rax] ; ret
0x00000000000f008d : test r8d, r8d ; jne 0xf009d ; ret
0x00000000000f020d : test r8d, r8d ; jne 0xf021d ; ret
0x00000000000f038d : test r8d, r8d ; jne 0xf039d ; ret
0x00000000000f057d : test r8d, r8d ; jne 0xf058d ; ret
0x00000000000f06fd : test r8d, r8d ; jne 0xf070d ; ret
0x00000000000f3292 : test r8d, r8d ; jne 0xf3286 ; ret
0x000000000011d0fd : test r9d, r9d ; jne 0x11d10d ; ret
0x00000000000f00cd : test r9d, r9d ; jne 0xf00dd ; ret
0x00000000000f024d : test r9d, r9d ; jne 0xf025d ; ret
0x00000000000f048d : test r9d, r9d ; jne 0xf049d ; ret
0x00000000000f05bd : test r9d, r9d ; jne 0xf05cd ; ret
0x00000000000f073d : test r9d, r9d ; jne 0xf074d ; ret
0x0000000000106664 : test rax, rax ; je 0x10667a ; mov rdi, rsp ; call rax
0x0000000000106d88 : test rax, rax ; je 0x106d9e ; mov rdi, rbp ; call rax
0x0000000000107e7e : test rax, rax ; je 0x107e94 ; mov rdi, r14 ; call rax
0x000000000010811c : test rax, rax ; je 0x108132 ; mov rdi, rbx ; call rax
0x000000000010c90c : test rax, rax ; je 0x10c922 ; mov rdi, r12 ; call rax
0x000000000010cb54 : test rax, rax ; je 0x10cb6c ; lea rdi, [rbp + 0x10] ; call rax
0x000000000010dd96 : test rax, rax ; je 0x10ddac ; mov rdi, rbx ; call rax
0x000000000010de6f : test rax, rax ; je 0x10de85 ; mov rdi, rbp ; call rax
0x000000000010eba0 : test rax, rax ; je 0x10ebb8 ; lea rdi, [rbx + 0x68] ; call rax
0x000000000010f319 : test rax, rax ; je 0x10f32f ; mov rdi, r12 ; call rax
0x000000000010f740 : test rax, rax ; je 0x10f758 ; lea rdi, [rbx + 0x58] ; call rax
0x00000000001113d0 : test rax, rax ; je 0x1113e6 ; pop rbx ; ret
0x0000000000111444 : test rax, rax ; je 0x1113fa ; pop rbx ; ret
0x0000000000112114 : test rax, rax ; je 0x11212c ; lea rdi, [rbp + 0x10] ; call rax
0x000000000011286d : test rax, rax ; je 0x112885 ; lea rdi, [rbp + 0x10] ; call rax
0x000000000002204f : test rax, rax ; je 0x2205b ; call rax
0x000000000002208f : test rax, rax ; je 0x220a4 ; call rax
0x000000000002c1c5 : test rax, rax ; je 0x2c1d5 ; call rax
0x000000000002d4bc : test rax, rax ; je 0x2d4cc ; call rax
0x0000000000076d54 : test rax, rax ; je 0x76d66 ; pop rbx ; ret
0x00000000000809ce : test rax, rax ; je 0x809de ; call rax
0x00000000000854b7 : test rax, rax ; je 0x854ca ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b2e6b : test rax, rax ; je 0xb2e7b ; call rax
0x00000000000b3098 : test rax, rax ; je 0xb30ac ; call rax
0x00000000000dcb3f : test rax, rax ; je 0xdcb4c ; ret
0x00000000000de844 : test rax, rax ; je 0xde855 ; mov qword ptr [rax], rdx ; ret
0x00000000000e2483 : test rax, rax ; je 0xe2541 ; call rax
0x00000000000e261e : test rax, rax ; je 0xe2741 ; call rax
0x00000000000f0c7b : test rax, rax ; je 0xf0c8e ; ret
0x00000000000f2f51 : test rax, rax ; je 0xf2f69 ; add rsp, 8 ; ret
0x00000000000fc230 : test rax, rax ; je 0xfc246 ; mov rdi, rbx ; call rax
0x00000000000e3555 : test rax, rax ; jl 0xe35a8 ; je 0xe3564 ; ret
0x000000000007a68b : test rax, rax ; jne 0x7a686 ; ret
0x00000000000837be : test rax, rax ; jne 0x837b7 ; xor eax, eax ; ret
0x000000000011da36 : test rbx, rbx ; jne 0x11da29 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011dfd2 : test rbx, rbx ; jne 0x11dfc7 ; pop rbx ; ret
0x00000000000769f7 : test rbx, rbx ; jne 0x76a11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f31c9 : test rbx, rbx ; jne 0xf31e1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002c594 : test rcx, rcx ; je 0x2c5a4 ; call rcx
0x000000000011dc16 : test rdi, rdi ; jne 0x11dc08 ; pop rbx ; ret
0x00000000000e1a24 : test rdi, rdi ; jne 0xe1a35 ; ret
0x0000000000081baa : test rdx, rdi ; je 0x81bbf ; pop rbx ; ret
0x0000000000108aa2 : test rdx, rdx ; je 0x108ab8 ; mov rdi, rbp ; call rdx
0x000000000011d75b : test rdx, rdx ; je 0x11d76b ; call rdx
0x000000000011d89c : test rdx, rdx ; je 0x11d8b1 ; call rdx
0x000000000007c396 : test rdx, rdx ; je 0x7c3a6 ; call rdx
0x00000000000857d1 : test rdx, rdx ; je 0x857e8 ; bsf rax, rdx ; ret
0x00000000000857d1 : test rdx, rdx ; je 0x857e9 ; bsf rax, rdx ; ret
0x00000000000859d0 : test rdx, rdx ; je 0x859f8 ; bsf rax, rdx ; ret
0x00000000000859d0 : test rdx, rdx ; je 0x859f9 ; bsf rax, rdx ; ret
0x00000000000b3010 : test rdx, rdx ; je 0xb3024 ; call rdx
0x0000000000112060 : test rdx, rdx ; jne 0x11204e ; pop rbx ; ret
0x0000000000070b5e : test rdx, rdx ; jne 0x70b56 ; ret
0x0000000000079266 : test rdx, rdx ; jne 0x7925e ; ret
0x0000000000083888 : test rdx, rdx ; jne 0x83886 ; ret
0x00000000000f0b0c : test rdx, rdx ; jne 0xf0b06 ; leave ; ret
0x00000000000858b4 : test rsi, rsi ; jne 0x858c5 ; xor rax, rax ; ret
0x0000000000090811 : test rsi, rsi ; jne 0x9082a ; jmp 0x907e0
0x000000000009394f : test sil, sil ; jne 0x93948 ; mov qword ptr [rdx], rcx ; ret
0x0000000000002b36 : test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x000000000003f922 : verw bx ; ret 0x8b44
0x0000000000078a95 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x00000000000cfc01 : wait ; add al, byte ptr [rax] ; add dh, dh ; ret 0xf01
0x000000000014cd5d : wait ; add byte ptr [rax], al ; adc byte ptr [rbx - 0xd], ch ; jmp qword ptr [rcx]
0x000000000012fc4d : wait ; call qword ptr [rdx]
0x0000000000155809 : wait ; clc ; jmp rdi
0x00000000001423e9 : wait ; cld ; call rsp
0x0000000000141dc1 : wait ; sti ; call rsp
0x0000000000002b88 : xabort -0xd ; ret
0x0000000000002b84 : xbegin 0xfffffffff8c6ef84 ; ret
0x00000000001553b1 : xchg al, bh ; jmp qword ptr [rdx]
0x000000000002d6bb : xchg al, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x000000000013f111 : xchg bl, dh ; jmp rsp
0x00000000000baf65 : xchg byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x95 ; ret
0x00000000000222ff : xchg byte ptr [rax - 0x7d], cl ; ret 0x4901
0x0000000000108b47 : xchg byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x39 ; ret 0xf077
0x00000000000e4025 : xchg byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x00000000000ffba4 : xchg byte ptr [rbx + 0x5d], bl ; xor eax, eax ; pop r12 ; ret
0x000000000015b8c5 : xchg byte ptr [rcx], al ; add byte ptr [rax], cl ; cli ; call qword ptr [rsi]
0x00000000001410dd : xchg byte ptr [rcx], al ; add byte ptr [rcx + rdx*2 - 6], dl ; call rsp
0x00000000000831e8 : xchg byte ptr [rsi], ch ; add byte ptr [rax], al ; je 0x831f6 ; ret
0x00000000000a9dd6 : xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x000000000005b46e : xchg dword ptr [rax - 0x7cfffffe], esi ; ret 0x8308
0x00000000000e3df5 : xchg dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x0000000000023720 : xchg dword ptr [rbp + rcx*4 + 0x74], ecx ; ret
0x000000000005c562 : xchg dword ptr [rbp - 0x76ffffeb], eax ; ret 0x348
0x0000000000064a60 : xchg dword ptr [rbp - 0x76fffffd], ebp ; ret 0x348
0x00000000000960bf : xchg dword ptr [rbp - 0x7b], eax ; sal byte ptr [rbp - 0x35], 0xf3 ; ret
0x000000000005d158 : xchg dword ptr [rbx - 0x77000000], edx ; ret 0x348
0x000000000012c18c : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x00000000000d6025 : xchg dword ptr [rcx + rax], ecx ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000002cc0b : xchg dword ptr [rcx - 0x7c000004], ebp ; ret 0x8901
0x0000000000141115 : xchg dword ptr [rcx], eax ; add byte ptr [rsp + rdx*2 - 6], dl ; jmp rsp
0x000000000005cbbb : xchg dword ptr [rdi - 0x77000000], ebp ; ret 0x348
0x00000000000e0484 : xchg dword ptr [rdi], eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000f0791 : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0xf0791 ; pop rdx ; pop r10 ; ret
0x00000000000e217f : xchg dword ptr [rdx + 5], ecx ; add byte ptr [rax - 0x77], cl ; ret 0xff31
0x00000000000598d9 : xchg dword ptr [rip - 0x7cffffe2], ebp ; ret 0x8308
0x000000000012c32b : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x00000000000af80b : xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000000f50cd : xchg eax, ebp ; add byte ptr [rax - 0x7d], cl ; ret 0x901
0x000000000005418f : xchg eax, ebp ; add byte ptr [rax], 0 ; add byte ptr [rcx + 1], cl ; ret 0x3145
0x000000000015c7fd : xchg eax, ebp ; add dword ptr [rax], eax ; or byte ptr [rdx], 0xfc ; jmp qword ptr [rcx]
0x00000000000f11e3 : xchg eax, ebp ; add rsp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000001309d5 : xchg eax, ebp ; cmc ; jmp rax
0x00000000000f8ecf : xchg eax, ebp ; jmp qword ptr [rsi]
0x000000000007f8c3 : xchg eax, ebp ; mov rsi, qword ptr [rsp + 0x18] ; call rax
0x0000000000130f54 : xchg eax, ebp ; push -9 ; jmp qword ptr [rsi]
0x000000000000209b : xchg eax, ebp ; ret
0x00000000000c718c : xchg eax, ebp ; ret 0x2041
0x00000000000735fa : xchg eax, ebp ; ret 0x44e9
0x00000000000cc492 : xchg eax, ebp ; ret 0x460f
0x000000000003b3d8 : xchg eax, ebp ; ret 0x53c
0x0000000000044be9 : xchg eax, ebp ; ret 0x8348
0x000000000007b5bf : xchg eax, ebp ; ret 0x8441
0x000000000003ae9f : xchg eax, ebp ; ret 0x8545
0x0000000000044bf2 : xchg eax, ebp ; ret 0x854d
0x000000000007ebce : xchg eax, ebp ; ret 0x948
0x000000000003acf5 : xchg eax, ebp ; ret 0xb60f
0x00000000000a1a5c : xchg eax, ebp ; ret 0xbbe9
0x0000000000044ac9 : xchg eax, ebp ; ret 0xc031
0x000000000003ad9d : xchg eax, ebp ; ret 0xc748
0x000000000009283c : xchg eax, ebp ; ret 0xd029
0x0000000000109328 : xchg eax, ebp ; ret 0xd089
0x00000000000fdc4b : xchg eax, ebp ; ret 0xd120
0x00000000000a3199 : xchg eax, ebp ; ret 0xd138
0x0000000000073543 : xchg eax, ebp ; ret 0xd284
0x000000000003adf4 : xchg eax, ebp ; ret 0xd348
0x00000000000e0d64 : xchg eax, ebp ; ret 0xd3eb
0x000000000006c4ea : xchg eax, ebp ; ret 0xdaf7
0x00000000000c9329 : xchg eax, ebp ; ret 0xe2c1
0x00000000000fdd1a : xchg eax, ebp ; ret 0xf685
0x0000000000097243 : xchg eax, ebp ; ret 0xf883
0x0000000000044a98 : xchg eax, ebp ; ret 0xff31
0x00000000000dd82a : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000069f06 : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; pop rbx ; ret
0x00000000000cc472 : xchg eax, ebp ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00000000000dd29b : xchg eax, ebp ; sal bh, 0xd8 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000110739 : xchg eax, ebp ; sal bh, 0xd8 ; add rsp, 0x18 ; ret
0x0000000000002b35 : xchg eax, ebp ; test word ptr [rbx - 0x2e], bp ; cmp dl, byte ptr [rdi] ; ret
0x000000000014c57d : xchg eax, ebx ; add byte ptr [rax], al ; jmp qword ptr [rdx]
0x00000000000701fb : xchg eax, ebx ; add byte ptr [rax], al ; nop dword ptr [rax - 0x34] ; mov edx, eax ; jmp 0x701a1
0x00000000000038dd : xchg eax, ebx ; and cl, ah ; ret
0x00000000001309d1 : xchg eax, ebx ; cmc ; call rax
0x00000000000647d6 : xchg eax, ebx ; fdivr st(7) ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x00000000001593f9 : xchg eax, ebx ; stc ; call qword ptr [rdx]
0x00000000000dfea1 : xchg eax, ebx ; sub byte ptr [rax], al ; ret
0x000000000013fba1 : xchg eax, ecx ; cmc ; jmp rsp
0x000000000012fd39 : xchg eax, ecx ; jmp rdx
0x00000000000dae36 : xchg eax, ecx ; mov edi, r12d ; call 0xd7126
0x00000000000dcad3 : xchg eax, ecx ; ret
0x000000000005346d : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rbx - 0x110343], al ; call qword ptr [rax]
0x0000000000053dfd : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rbx - 0x114743], al ; call qword ptr [rax]
0x00000000000d60f0 : xchg eax, edi ; add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000000fdd35 : xchg eax, edi ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], 0x85 ; ret
0x00000000000a6c32 : xchg eax, edi ; add rdx, rdi ; jmp rdx
0x0000000000155429 : xchg eax, edi ; jmp qword ptr [rsi]
0x00000000001444b9 : xchg eax, edi ; out dx, al ; jmp qword ptr [rcx]
0x00000000000b4496 : xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00000000000e5d6a : xchg eax, edi ; ror byte ptr [rdi], 0xb6 ; sal bh, 0xd8 ; ret
0x00000000000d844d : xchg eax, edi ; ror byte ptr [rdi], 0xb6 ; shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x00000000000db7d7 : xchg eax, edi ; ror dword ptr [rdi], -0x6e ; ret 0xcc80
0x00000000000c0888 : xchg eax, edi ; ror dword ptr [rdi], -0x6e ; ret 0xd138
0x000000000012c7d8 : xchg eax, edi ; xchg eax, esp ; ret
0x000000000014c4cd : xchg eax, edx ; add byte ptr [rax], al ; add byte ptr [rcx - 0xd], al ; jmp rdx
0x000000000007029f : xchg eax, edx ; add byte ptr [rax], al ; nop dword ptr [rax - 0x34] ; pop rdx ; ret
0x0000000000130a0d : xchg eax, edx ; cmc ; call qword ptr [rax]
0x000000000012e09d : xchg eax, edx ; jae 0x12e07a ; push rsi ; pop rdx ; je 0x12e06f ; ret 0xacfc
0x00000000000cfcf2 : xchg eax, edx ; ret 0x29
0x00000000000a0de6 : xchg eax, edx ; ret 0x8941
0x00000000000d8432 : xchg eax, edx ; ret 0x970f
0x00000000000db7da : xchg eax, edx ; ret 0xcc80
0x00000000000b4499 : xchg eax, edx ; ret 0xd029
0x00000000000c088b : xchg eax, edx ; ret 0xd138
0x000000000012c18f : xchg eax, edx ; ret 0xf869
0x0000000000140991 : xchg eax, edx ; stc ; jmp rsp
0x000000000014c835 : xchg eax, esi ; add byte ptr [rax], al ; fcomp dword ptr [rax - 0xd] ; jmp qword ptr [rbx]
0x0000000000141545 : xchg eax, esi ; add dword ptr [rax], eax ; movsb byte ptr [rdi], byte ptr [rsi] ; xchg edx, edi ; call rsp
0x0000000000130b34 : xchg eax, esi ; cmp dh, dh ; call qword ptr [rdx + rdi + 0x3bc2fff6]
0x00000000000f9733 : xchg eax, esi ; ret
0x0000000000107676 : xchg eax, esi ; ret 0
0x0000000000085374 : xchg eax, esi ; ret 0x144
0x00000000000f2aa8 : xchg eax, esi ; ret 0x394c
0x000000000007b5b8 : xchg eax, esi ; ret 0x8348
0x000000000012ea2c : xchg eax, esi ; ret 0xcd11
0x00000000000adf6c : xchg eax, esi ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000001458ac : xchg eax, esp ; add byte ptr es:[rax], al ; ror byte ptr [rdi], 1 ; out dx, eax ; jmp qword ptr [rcx]
0x00000000001414e5 : xchg eax, esp ; add dword ptr [rax], eax ; xor al, 0x7b ; cli ; jmp rsp
0x000000000009cb91 : xchg eax, esp ; and al, 0x44 ; sbb eax, dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0x840f
0x00000000000423e9 : xchg eax, esp ; and al, 0x54 ; sbb eax, dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0x840f
0x0000000000026996 : xchg eax, esp ; and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000002732e : xchg eax, esp ; and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000007075c : xchg eax, esp ; and al, 0xf0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x00000000001553ac : xchg eax, esp ; and dword ptr [rcx], eax ; add byte ptr [rax], dh ; xchg al, bh ; jmp qword ptr [rdx]
0x000000000013f8d4 : xchg eax, esp ; clc ; add byte ptr [rax], al ; mov ah, 0x17 ; cmc ; jmp rsp
0x000000000013f67c : xchg eax, esp ; in al, dx ; add byte ptr [rax], al ; hlt ; jmp rsp
0x00000000001307a0 : xchg eax, esp ; mov bl, 0xf3 ; call rsp
0x0000000000130760 : xchg eax, esp ; mov bl, 0xf3 ; jmp rsp
0x0000000000141a4c : xchg eax, esp ; mov bl, 1 ; add byte ptr [rbx + rdi - 5], dh ; jmp rsp
0x000000000013ee14 : xchg eax, esp ; mov eax, 0x2b540000 ; call rsp
0x000000000013ef04 : xchg eax, esp ; mov ebp, 0x40840000 ; jmp rsp
0x000000000015edac : xchg eax, esp ; mov ebx, 0x11a00001 ; sti ; call qword ptr [rax]
0x000000000013ee6c : xchg eax, esp ; mov edx, 0x33c40000 ; jmp rsp
0x000000000013e7a4 : xchg eax, esp ; mov word ptr [rax], es ; add ah, ah ; imul bh ; jmp rsp
0x00000000000f1c7b : xchg eax, esp ; nop dword ptr [rax] ; mov rax, rdi ; pop rbx ; ret
0x00000000000b587b : xchg eax, esp ; nop dword ptr [rax] ; mov rax, rdi ; ret
0x000000000013f59c : xchg eax, esp ; out 0, al ; add ah, dh ; and esp, esi ; jmp rsp
0x0000000000142fe0 : xchg eax, esp ; out dx, al ; std ; jmp rsp
0x00000000000d624b : xchg eax, esp ; pop rbx ; ret
0x000000000012ec3f : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x12ebd0 ; ret 0x48f
0x000000000003b507 : xchg eax, esp ; ret
0x000000000007cc27 : xchg eax, esp ; ret 0x1589
0x00000000000a3d5a : xchg eax, esp ; ret 0x2b3c
0x00000000000ccce7 : xchg eax, esp ; ret 0x38b
0x00000000000cee4e : xchg eax, esp ; ret 0x38e9
0x00000000001016c8 : xchg eax, esp ; ret 0x3945
0x00000000000c6dc5 : xchg eax, esp ; ret 0x3d
0x0000000000110697 : xchg eax, esp ; ret 0x3d83
0x00000000000d2cf4 : xchg eax, esp ; ret 0x403c
0x00000000000a33cf : xchg eax, esp ; ret 0x543a
0x0000000000043873 : xchg eax, esp ; ret 0x8341
0x00000000000cfd6d : xchg eax, esp ; ret 0x840f
0x00000000000b6369 : xchg eax, esp ; ret 0x8548
0x00000000000a410c : xchg eax, esp ; ret 0x894c
0x00000000000cecb5 : xchg eax, esp ; ret 0x8b48
0x0000000000021cfb : xchg eax, esp ; ret 0x8d48
0x000000000007d083 : xchg eax, esp ; ret 0x96e8
0x0000000000030168 : xchg eax, esp ; ret 0xb60f
0x0000000000069936 : xchg eax, esp ; ret 0xd089
0x000000000005f8a9 : xchg eax, esp ; ret 0xd189
0x0000000000021e09 : xchg eax, esp ; ret 0xd284
0x000000000006ed20 : xchg eax, esp ; ret 0xdaf7
0x00000000000b7cfe : xchg eax, esp ; ret 0xe283
0x00000000001154fe : xchg eax, esp ; ret 0xea83
0x0000000000033647 : xchg eax, esp ; ret 0xfe9
0x000000000013eb68 : xchg eax, esp ; ret 0xfff2
0x0000000000142560 : xchg eax, esp ; ret 0xfffc
0x0000000000141cd4 : xchg eax, esp ; ret 1
0x000000000013f22c : xchg eax, esp ; rol dword ptr [rax], 1 ; add ah, al ; sahf ; jmp rsp
0x00000000000d8247 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x0000000000042a53 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x0000000000114d31 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rdi], cl ; mov dh, 0xc0 ; ret
0x00000000000a2cd8 : xchg eax, esp ; ror byte ptr [rcx + rbp - 0x31], 0x29 ; ret
0x0000000000142a24 : xchg eax, esp ; sbb eax, 0x55040002 ; std ; jmp rsp
0x000000000013dee8 : xchg eax, esp ; scasd eax, dword ptr [rdi] ; out dx, al ; jmp rsp
0x000000000004b478 : xchg eax, esp ; shr eax, 0x11 ; ret
0x0000000000141a90 : xchg eax, esp ; sti ; call rsp
0x0000000000141874 : xchg eax, esp ; stosd dword ptr [rdi], eax ; add dword ptr [rax], eax ; hlt ; adc ebx, edi ; jmp rsp
0x000000000013f920 : xchg eax, esp ; sub ebp, esi ; jmp rsp
0x00000000001410dc : xchg eax, esp ; xchg byte ptr [rcx], al ; add byte ptr [rcx + rdx*2 - 6], dl ; call rsp
0x0000000000141ef8 : xchg eax, esp ; xlatb ; sti ; jmp rsp
0x00000000000efe2a : xchg eax, r8d ; mov eax, dword ptr [rbx - 0x30] ; mov dword ptr [rbp - 0x80], eax ; call r8
0x000000000005a400 : xchg ebp, esi ; xor eax, 0x83480000 ; ret
0x00000000000601f7 : xchg ebx, eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000005fdf8 : xchg edi, eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000141549 : xchg edx, edi ; call rsp
0x0000000000060583 : xchg esi, edi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000dfea0 : xchg rax, rbx ; sub byte ptr [rax], al ; ret
0x000000000007ba14 : xlatb ; add byte ptr cs:[rax + 0x39], cl ; ret 0xb76
0x00000000001296c9 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000001425f9 : xlatb ; cld ; call rsp
0x000000000000266f : xlatb ; enter -0x1ee6, -0x4c ; hlt ; out 0xdf, eax ; syscall
0x000000000004757b : xlatb ; jbe 0x47578 ; nop ; mov rax, rsi ; ret
0x0000000000081bac : xlatb ; je 0x81bbd ; pop rbx ; ret
0x00000000000a618e : xlatb ; je 0xa619d ; mov eax, ecx ; ret
0x00000000000e33a6 : xlatb ; jne 0xe339f ; mov rax, qword ptr [rax + 8] ; ret
0x000000000012d203 : xlatb ; jo 0x12d27f ; mov ebp, 0xfb67d10d ; ret
0x000000000007b472 : xlatb ; mov byte ptr [rax + rsi], dil ; ret
0x0000000000047852 : xlatb ; mov byte ptr [rsi], al ; jne 0x47838 ; mov rax, rsi ; ret
0x00000000000b31c2 : xlatb ; mov eax, r8d ; syscall
0x00000000000b31d3 : xlatb ; mov eax, r9d ; syscall
0x0000000000032118 : xlatb ; movsxd rdi, r13d ; mov eax, 3 ; syscall
0x000000000005c83b : xlatb ; ret
0x0000000000085743 : xlatb ; ret 0x4166
0x000000000012e6a6 : xlatb ; ret 0x4e27
0x0000000000003208 : xlatb ; ret 0x5a51
0x00000000000876f7 : xlatb ; ret 0x94c
0x000000000008894f : xlatb ; ret 0xc085
0x0000000000083bb0 : xlatb ; ret 0xc148
0x0000000000093e7b : xlatb ; ret 0xf188
0x00000000000903d1 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x0000000000093d16 : xlatb ; rol dword ptr [rbp + 0x317475c0], -0x40 ; ret
0x0000000000093c74 : xlatb ; ror dword ptr [rdi], -0x43 ; ror byte ptr [rax + 1], 0xf8 ; ret
0x0000000000085056 : xlatb ; sal bh, 1 ; ret 0x8000
0x0000000000084f16 : xlatb ; sal bh, 1 ; ret 0xc000
0x0000000000084dd6 : xlatb ; sal bh, 1 ; ret 0xe000
0x0000000000084c96 : xlatb ; sal bh, 1 ; ret 0xf000
0x0000000000084b56 : xlatb ; sal bh, 1 ; ret 0xf800
0x0000000000084a16 : xlatb ; sal bh, 1 ; ret 0xfc00
0x00000000000848d6 : xlatb ; sal bh, 1 ; ret 0xfe00
0x0000000000084796 : xlatb ; sal bh, 1 ; ret 0xff00
0x0000000000084656 : xlatb ; sal bh, 1 ; ret 0xff80
0x0000000000084516 : xlatb ; sal bh, 1 ; ret 0xffc0
0x00000000000843d6 : xlatb ; sal bh, 1 ; ret 0xffe0
0x0000000000084296 : xlatb ; sal bh, 1 ; ret 0xfff0
0x0000000000084156 : xlatb ; sal bh, 1 ; ret 0xfff8
0x0000000000084016 : xlatb ; sal bh, 1 ; ret 0xfffc
0x0000000000083ed6 : xlatb ; sal bh, 1 ; ret 0xfffe
0x0000000000087695 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000000000876a6 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000141ef9 : xlatb ; sti ; jmp rsp
0x00000000000d5e02 : xlatb ; syscall
0x00000000000368ec : xlatb ; xor eax, eax ; ret
0x0000000000039cdb : xlatb ; xor r8d, dword ptr [r8] ; add rsp, 8 ; ret
0x0000000000002598 : xor ah, byte ptr [rsi] ; sahf ; jl 0x2531 ; loop 0x257c ; ret 0x23cb
0x00000000001466b5 : xor al, 0 ; add al, ch ; cmp edi, ebp ; jmp qword ptr [rbx]
0x000000000014669d : xor al, 0 ; add al, dl ; cmp edi, ebp ; jmp qword ptr [rcx]
0x000000000014f4b8 : xor al, 0 ; add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0
0x00000000000e43e5 : xor al, 0 ; add byte ptr [rax], al ; syscall
0x0000000000062e96 : xor al, 0 ; add byte ptr [rcx - 0x7d], al ; in eax, dx ; add dword ptr [rax + 1], ecx ; ret
0x0000000000022069 : xor al, 0 ; mov rdi, qword ptr [rsp + 8] ; call rax
0x000000000001f51f : xor al, 0 ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000023229 : xor al, 0 ; ret
0x000000000002204d : xor al, 0 ; test rax, rax ; je 0x2205d ; call rax
0x000000000002208d : xor al, 0 ; test rax, rax ; je 0x220a6 ; call rax
0x000000000012c18a : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x00000000000b29e6 : xor al, 0x24 ; mov eax, ecx ; movsxd rdi, dword ptr [rsp + 8] ; syscall
0x00000000000f986a : xor al, 0x24 ; mov rdi, r12 ; call rax
0x000000000009080f : xor al, 0x24 ; test rsi, rsi ; jne 0x9082c ; jmp 0x907e2
0x00000000000b3da5 : xor al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; mov eax, esi ; ret
0x00000000000f741c : xor al, 0x27 ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000000bbbfc : xor al, 0x31 ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000013e1b0 : xor al, 0x32 ; out dx, eax ; jmp rsp
0x0000000000002019 : xor al, 0x39 ; push rbx ; cmp byte ptr [rdi - 0x19ade7f3], dl ; ret
0x00000000000cb237 : xor al, 0x39 ; ret 0x840f
0x0000000000093d9b : xor al, 0x48 ; lea eax, [rdi + rax + 0x20] ; ret
0x0000000000141168 : xor al, 0x56 ; cli ; call rsp
0x0000000000142218 : xor al, 0x63 ; cld ; call rsp
0x000000000013efc0 : xor al, 0x63 ; inc esp ; ret
0x0000000000062928 : xor al, 0x66 ; xor byte ptr [rax], al ; call rax
0x00000000001414e8 : xor al, 0x7b ; cli ; jmp rsp
0x000000000009469d : xor al, 0x81 ; add rcx, rsi ; jmp rcx
0x000000000009465d : xor al, 0x82 ; add rdx, rsi ; jmp rdx
0x00000000000af15c : xor al, 0x89 ; ret 0xe283
0x000000000013eb5c : xor al, 0xa5 ; add byte ptr [rax], al ; ret 0xfff2
0x000000000010ebfc : xor al, 0xb0 ; add rax, rsi ; jmp rax
0x000000000015e74c : xor al, 0xb5 ; add dword ptr [rax], eax ; sal al, 1 ; cli ; call qword ptr [rbx]
0x000000000015f94c : xor al, 0xc7 ; add dword ptr [rax], eax ; nop ; sti ; jmp qword ptr [rbx]
0x000000000012d36a : xor al, 0xd8 ; ret
0x0000000000140688 : xor al, 0xe5 ; clc ; call rsp
0x000000000006bb98 : xor al, 0xe9 ; ret 0xfffd
0x00000000001430c0 : xor al, 0xf7 ; std ; jmp rsp
0x00000000001430e0 : xor al, 0xf9 ; std ; call rsp
0x000000000015fa79 : xor al, 0xfb ; jmp rsp
0x00000000001428a1 : xor al, 0xfd ; jmp rsp
0x0000000000140de8 : xor al, 0xfd ; stc ; jmp rsp
0x0000000000095598 : xor al, 1 ; add byte ptr [rax], al ; ret
0x00000000000e4225 : xor al, 1 ; add byte ptr [rax], al ; syscall
0x0000000000140285 : xor al, 1 ; add byte ptr [rbx + rbp*2 - 9], dh ; call rsp
0x0000000000153a4c : xor al, 8 ; add dword ptr [rax], eax ; loopne 0x153a7f ; clc ; jmp qword ptr [rbx]
0x00000000000bba7f : xor al, al ; add esi, esi ; or esi, r11d ; jne 0xbba99 ; ret
0x00000000000e373f : xor al, al ; or eax, edi ; ret
0x00000000000d10d7 : xor al, al ; pop rbx ; ret
0x00000000000d57fb : xor al, al ; ret
0x000000000014642d : xor al, byte ptr [rax] ; add al, dl ; out dx, eax ; call qword ptr [rsi]
0x00000000001464a5 : xor al, byte ptr [rax] ; add byte ptr [rax + 0x37], ch ; out dx, eax ; jmp qword ptr [rdi]
0x00000000000e4475 : xor al, byte ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000047c0b : xor al, byte ptr [rax] ; call rax
0x00000000000430cd : xor al, byte ptr [rax] ; mov byte ptr [r8 + rdx], 0 ; ret
0x00000000000e1319 : xor al, byte ptr [rcx + 0xf] ; lahf ; ret 0x8545
0x00000000000dd005 : xor al, byte ptr [rcx] ; add byte ptr [rax], al ; syscall
0x00000000000daccc : xor ax, ax ; ret
0x0000000000130a64 : xor bh, bl ; cmc ; jmp qword ptr [rax]
0x00000000001461e1 : xor bh, ch ; call qword ptr [rbx]
0x0000000000088bac : xor bl, al ; nop ; xor rax, rax ; ret
0x00000000000efec2 : xor bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000012ffe5 : xor bl, dh ; inc dword ptr [rsi + 0x23] ; jmp qword ptr [rdi]
0x000000000007b476 : xor bl, dh ; ret
0x000000000009568c : xor byte ptr [r11], r15b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x0000000000088a6d : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x00000000000450db : xor byte ptr [r8 - 0x75], r9b ; jg 0x45151 ; xor eax, eax ; ret
0x00000000000751ef : xor byte ptr [rax + 0x29], cl ; ret
0x0000000000083bdf : xor byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000083ab5 : xor byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000093d76 : xor byte ptr [rax + 1], cl ; ret 0x547c
0x000000000004543c : xor byte ptr [rax - 0x75], cl ; jbe 0x454b8 ; xor eax, eax ; ret
0x00000000000450dc : xor byte ptr [rax - 0x75], cl ; jg 0x45150 ; xor eax, eax ; ret
0x000000000004543b : xor byte ptr [rax - 0x75], r9b ; jbe 0x454b9 ; xor eax, eax ; ret
0x0000000000083a0f : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000114cae : xor byte ptr [rax - 0x77], cl ; and al, 8 ; xor eax, eax ; call rdx
0x00000000000a8077 : xor byte ptr [rax - 0x77], cl ; jmp 0x48cd09cd
0x00000000000a7485 : xor byte ptr [rax - 0x77], cl ; jmp 0x4cccfddb
0x00000000000a751d : xor byte ptr [rax - 0x77], cl ; jmp 0x4cccfe73
0x00000000000a75aa : xor byte ptr [rax - 0x77], cl ; jmp 0x4cccff00
0x00000000000a8dcf : xor byte ptr [rax - 0x77], cl ; jmp 0x4ccd1725
0x00000000000c6a53 : xor byte ptr [rax - 0x77], cl ; ret
0x00000000000a8a31 : xor byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000001045b1 : xor byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], cl ; ret 0x8b4c
0x000000000005e57c : xor byte ptr [rax - 0x7d], cl ; ret
0x0000000000031b0f : xor byte ptr [rax - 0x7d], cl ; ret 0xeb04
0x00000000000eb2eb : xor byte ptr [rax - 0x7d], cl ; ret 0xf601
0x0000000000021de7 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000030ebd : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x00000000000946d5 : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000e4815 : xor byte ptr [rax], al ; add byte ptr [rax], al ; syscall
0x000000000005973a : xor byte ptr [rax], al ; call rax
0x00000000000710b2 : xor byte ptr [rax], al ; je 0x710c5 ; pop rbx ; ret
0x0000000000069837 : xor byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000e96d4 : xor byte ptr [rax], ch ; add byte ptr [rax - 0x77], cl ; ret 0xb9
0x0000000000095690 : xor byte ptr [rbp + 0x3d], dh ; ret
0x000000000009568f : xor byte ptr [rbp + 0x3d], r14b ; ret
0x0000000000085331 : xor byte ptr [rbp + rcx*4 + 0x48], al ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret 0x8341
0x00000000000f3373 : xor byte ptr [rbp - 0x16], dh ; ret
0x00000000000809e6 : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000b4d53 : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000014c087 : xor byte ptr [rbx + 0xaea0206], al ; ret
0x000000000008967b : xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x000000000009568d : xor byte ptr [rbx], bh ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x000000000009f4be : xor byte ptr [rcx + 0x39], cl ; ret 0x840f
0x0000000000001af8 : xor byte ptr [rcx + 0x3a6d4813], ah ; ret
0x00000000000cac73 : xor byte ptr [rcx + 0x5d], al ; pop r14 ; pop r15 ; ret
0x000000000005e26c : xor byte ptr [rcx + 0xf], al ; mov dh, 0x45 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000000971f0 : xor byte ptr [rcx + rcx*4 - 0x17], cl ; mov rdi, rbp ; call rbx
0x0000000000096a31 : xor byte ptr [rcx + rcx*4 - 0xf], cl ; mov rdi, qword ptr [r13] ; call r12
0x00000000000cb233 : xor byte ptr [rcx - 0x75], al ; xor al, 0x39 ; ret 0x840f
0x00000000000bc352 : xor byte ptr [rcx], 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fb41b : xor byte ptr [rcx], 0xc0 ; pop rbx ; ret
0x00000000000dbbac : xor byte ptr [rcx], 0xc0 ; ret
0x00000000000e41c2 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; syscall
0x000000000015624d : xor byte ptr [rcx], al ; add byte ptr [rax], dl ; ret
0x00000000000c7cb9 : xor byte ptr [rcx], bh ; ret 0x1772
0x00000000000bce17 : xor byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000e679a : xor byte ptr [rcx], dh ; rol byte ptr [rbx - 0x69f0f601], 0xc0 ; ret
0x00000000000bb806 : xor byte ptr [rcx], dl ; je 0xbb816 ; xor eax, eax ; ret
0x0000000000132e50 : xor byte ptr [rdi - 3], dl ; call qword ptr [rax]
0x00000000000f4f76 : xor byte ptr [rdi], cl ; test byte ptr [rsi - 0x77000000], ah ; ret 0xe283
0x00000000000d78f5 : xor byte ptr [rdx + 1], bh ; jmp 0xd78c7
0x000000000008765c : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000088a6e : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000158635 : xor byte ptr [rsi + rcx + 0x18], dh ; ret
0x000000000014f5e0 : xor byte ptr [rsi], 0xf5 ; jmp qword ptr [rdx]
0x0000000000146110 : xor byte ptr [rsi], ch ; out dx, eax ; jmp qword ptr [rdx]
0x0000000000143a30 : xor byte ptr [rsi], dl ; out dx, al ; call rax
0x000000000013e1b1 : xor ch, bh ; jmp rsp
0x00000000000e95b4 : xor ch, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000010ec53 : xor cl, byte ptr [rax - 0x77] ; jp 0x10ec65 ; ret
0x000000000010ec73 : xor cl, byte ptr [rax - 0x77] ; jp 0x10ec85 ; ret
0x000000000010f5bb : xor cl, byte ptr [rax - 0x77] ; jp 0x10f5cd ; ret
0x000000000010f5db : xor cl, byte ptr [rax - 0x77] ; jp 0x10f5ed ; ret
0x000000000010f61b : xor cl, byte ptr [rax - 0x77] ; jp 0x10f62d ; ret
0x00000000000a2766 : xor cl, byte ptr [rax - 0x77] ; ret 0xc148
0x00000000000a9a05 : xor cl, byte ptr [rax - 0x77] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x000000000010b87c : xor cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x00000000000bb817 : xor cl, byte ptr [rax] ; xor eax, eax ; ret
0x0000000000027c7a : xor cl, byte ptr [rbp + 0x39] ; ret 0x3672
0x00000000000432ed : xor cl, byte ptr [rbp + 0x39] ; ret 0x830f
0x00000000000b63fd : xor cl, byte ptr [rdi] ; mov dh, 0x43 ; add cl, byte ptr [rax - 0x7d] ; ret
0x000000000007cc25 : xor cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x1589
0x0000000000151139 : xor dh, dh ; call rax
0x000000000009394e : xor dword ptr [rax - 0x7c], eax ; div byte ptr [rbp - 0x14] ; mov qword ptr [rdx], rcx ; ret
0x000000000004a37f : xor dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x00000000000e4345 : xor dword ptr [rax], eax ; add byte ptr [rax], al ; syscall
0x000000000004cf3f : xor dword ptr [rax], eax ; call rax
0x00000000000e3a85 : xor dword ptr [rcx], eax ; add byte ptr [rax], al ; syscall
0x0000000000062558 : xor dword ptr [rcx], ebp ; ret
0x0000000000083513 : xor dword ptr [rdx + 0x2e], ebx ; add byte ptr [rax - 0x77], cl ; and al, 8 ; call qword ptr [rdx]
0x0000000000042728 : xor eax, 0x1f3 ; call rax
0x00000000000db9a6 : xor eax, 0x20 ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x00000000000822d2 : xor eax, 0x2e9599 ; ret
0x0000000000062927 : xor eax, 0x306634 ; call rax
0x0000000000059737 : xor eax, 0x30f824 ; call rax
0x0000000000057eb4 : xor eax, 0x3110a7 ; call rax
0x0000000000052860 : xor eax, 0x3166fb ; call rax
0x000000000004cf3c : xor eax, 0x31c01f ; call rax
0x0000000000047c08 : xor eax, 0x321353 ; call rax
0x000000000006e023 : xor eax, 0x38 ; call rax
0x00000000001467cd : xor eax, 0x42500000 ; out dx, eax ; jmp qword ptr [rcx]
0x00000000001467e5 : xor eax, 0x42680000 ; out dx, eax ; jmp qword ptr [rbx]
0x00000000001467fd : xor eax, 0x42800000 ; out dx, eax ; jmp qword ptr [rcx]
0x0000000000146815 : xor eax, 0x42980000 ; out dx, eax ; jmp qword ptr [rbx]
0x000000000010a982 : xor eax, 0x7d8041 ; add byte ptr [rax - 0x77], cl ; ret 0x850f
0x000000000005a402 : xor eax, 0x83480000 ; ret
0x0000000000104c82 : xor eax, 0x83480e78 ; ret
0x0000000000002435 : xor eax, 0xdd410018 ; out 0xa9, al ; ret 0xbd07
0x000000000007a5db : xor eax, 0xffffe670 ; call rax
0x000000000007a153 : xor eax, 0xffffeaf8 ; call rax
0x00000000000791db : xor eax, 0xfffffa70 ; call rax
0x000000000006e333 : xor eax, 0xfffffd28 ; call rax
0x0000000000078f1b : xor eax, 0xfffffd30 ; call rax
0x0000000000021de4 : xor eax, dword ptr [0x30] ; call rax
0x00000000000e4415 : xor eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall
0x0000000000039cdd : xor eax, dword ptr [rax] ; add rsp, 8 ; ret
0x000000000002dc9a : xor eax, dword ptr [rax] ; mov byte ptr [rip + 0x33ce1b], dl ; ret
0x0000000000036d57 : xor eax, dword ptr [rax] ; mov eax, edx ; ret
0x000000000002e7f5 : xor eax, dword ptr [rax] ; mov qword ptr [rax], rdx ; ret
0x000000000002b369 : xor eax, dword ptr [rax] ; ret
0x0000000000035da8 : xor eax, dword ptr [rax] ; test eax, eax ; jne 0x35db6 ; ret
0x00000000000e4c87 : xor eax, dword ptr [rcx] ; add byte ptr [rax], al ; syscall
0x000000000007a72f : xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000044699 : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000814fe : xor eax, eax ; add rsp, 0x18 ; ret
0x00000000000a623a : xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000fee25 : xor eax, eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001108ff : xor eax, eax ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000011cb50 : xor eax, eax ; add rsp, 0x48 ; ret
0x0000000000038b54 : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000036360 : xor eax, eax ; add rsp, 8 ; pop rbx ; ret
0x0000000000080620 : xor eax, eax ; add rsp, 8 ; ret
0x000000000002edc4 : xor eax, eax ; and edi, 0xffffff80 ; sete al ; ret
0x00000000000da50a : xor eax, eax ; call 0xd6814
0x0000000000073bbf : xor eax, eax ; call r12
0x0000000000106a78 : xor eax, eax ; call rbx
0x000000000011414c : xor eax, eax ; call rcx
0x0000000000114cb4 : xor eax, eax ; call rdx
0x000000000003922a : xor eax, eax ; cmp byte ptr [rdi], 0 ; jne 0x39240 ; pop rbx ; ret
0x00000000000e679b : xor eax, eax ; cmp edi, 9 ; setbe al ; ret
0x00000000000bdc47 : xor eax, eax ; cmp edx, dword ptr [rsi + 4] ; je 0xbdc58 ; ret
0x00000000000e0e91 : xor eax, eax ; cmp qword ptr [rsi], 0 ; je 0xe0ea4 ; pop rbx ; ret
0x00000000000b28a1 : xor eax, eax ; cmp rdx, -1 ; cmovne rax, rdx ; ret
0x00000000000effab : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x00000000000dc535 : xor eax, eax ; cmp rsi, rdx ; ja 0xdc548 ; ret
0x00000000000cb806 : xor eax, eax ; jmp 0xcb0c5
0x00000000000dcdf1 : xor eax, eax ; jmp 0xdcdbb
0x00000000000f9ab8 : xor eax, eax ; mov byte ptr [rdx], 0 ; pop r12 ; ret
0x00000000000ffc57 : xor eax, eax ; mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x0000000000039857 : xor eax, eax ; mov qword ptr [rdi + 8], rdx ; ret
0x0000000000039867 : xor eax, eax ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 8], rdx ; ret
0x00000000000ffc14 : xor eax, eax ; mov qword ptr [rdi], rsi ; ret
0x0000000000093978 : xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x00000000000f0fd5 : xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x000000000010cacf : xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; call rcx
0x0000000000039fe1 : xor eax, eax ; mov word ptr [rdi + 2], dx ; ret
0x00000000000c025c : xor eax, eax ; nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000960c9 : xor eax, eax ; nop dword ptr [rax + rax] ; ret
0x0000000000078752 : xor eax, eax ; pop r12 ; ret
0x00000000000a12e8 : xor eax, eax ; pop r14 ; ret
0x00000000000bc044 : xor eax, eax ; pop r15 ; ret
0x0000000000044688 : xor eax, eax ; pop rbp ; ret
0x00000000000f104d : xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000024283 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002b5c6 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000243cb : xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000034872 : xor eax, eax ; pop rbx ; ret
0x00000000000368ca : xor eax, eax ; ret
0x00000000000f2ddc : xor eax, eax ; syscall
0x0000000000075f94 : xor eax, eax ; test byte ptr [rdi], 4 ; sete al ; ret
0x0000000000075fa4 : xor eax, eax ; test byte ptr [rdi], 8 ; sete al ; ret
0x0000000000094604 : xor eax, eax ; test dh, 0xf0 ; je 0x945c3 ; movzx eax, dl ; pop rbx ; ret
0x000000000009119c : xor eax, eax ; test dl, dl ; cmovne rax, rcx ; ret
0x000000000011d17a : xor eax, eax ; test ecx, ecx ; jne 0x11d18e ; ret
0x00000000000f000a : xor eax, eax ; test ecx, ecx ; jne 0xf001e ; ret
0x00000000000f01ca : xor eax, eax ; test ecx, ecx ; jne 0xf01de ; ret
0x00000000000f034a : xor eax, eax ; test ecx, ecx ; jne 0xf035e ; ret
0x00000000000f053a : xor eax, eax ; test ecx, ecx ; jne 0xf054e ; ret
0x00000000000f06ba : xor eax, eax ; test ecx, ecx ; jne 0xf06ce ; ret
0x00000000000e0b81 : xor eax, eax ; test edx, edx ; cmovns rax, rdx ; jmp 0xe0b94
0x00000000000f018a : xor eax, eax ; test edx, edx ; jne 0xf019e ; ret
0x00000000000f030a : xor eax, eax ; test edx, edx ; jne 0xf031e ; ret
0x00000000000f040a : xor eax, eax ; test edx, edx ; jne 0xf041e ; ret
0x00000000000f067a : xor eax, eax ; test edx, edx ; jne 0xf068e ; ret
0x000000000009690b : xor eax, eax ; test edx, edx ; sete al ; ret
0x000000000011d0ba : xor eax, eax ; test esi, esi ; jne 0x11d0ce ; ret
0x00000000000f004a : xor eax, eax ; test esi, esi ; jne 0xf005e ; ret
0x00000000000f044a : xor eax, eax ; test esi, esi ; jne 0xf045e ; ret
0x000000000011d1fb : xor eax, eax ; test r10d, r10d ; jne 0x11d20f ; ret
0x00000000000f010b : xor eax, eax ; test r10d, r10d ; jne 0xf011f ; ret
0x00000000000f028b : xor eax, eax ; test r10d, r10d ; jne 0xf029f ; ret
0x00000000000f03cb : xor eax, eax ; test r10d, r10d ; jne 0xf03df ; ret
0x00000000000f05fb : xor eax, eax ; test r10d, r10d ; jne 0xf060f ; ret
0x000000000011d13b : xor eax, eax ; test r11d, r11d ; jne 0x11d14f ; ret
0x00000000000f014b : xor eax, eax ; test r11d, r11d ; jne 0xf015f ; ret
0x00000000000f02cb : xor eax, eax ; test r11d, r11d ; jne 0xf02df ; ret
0x00000000000f04cb : xor eax, eax ; test r11d, r11d ; jne 0xf04df ; ret
0x00000000000f063b : xor eax, eax ; test r11d, r11d ; jne 0xf064f ; ret
0x000000000011d1bb : xor eax, eax ; test r8d, r8d ; jne 0x11d1cf ; ret
0x00000000000f008b : xor eax, eax ; test r8d, r8d ; jne 0xf009f ; ret
0x00000000000f020b : xor eax, eax ; test r8d, r8d ; jne 0xf021f ; ret
0x00000000000f038b : xor eax, eax ; test r8d, r8d ; jne 0xf039f ; ret
0x00000000000f057b : xor eax, eax ; test r8d, r8d ; jne 0xf058f ; ret
0x00000000000f06fb : xor eax, eax ; test r8d, r8d ; jne 0xf070f ; ret
0x000000000011d0fb : xor eax, eax ; test r9d, r9d ; jne 0x11d10f ; ret
0x00000000000f00cb : xor eax, eax ; test r9d, r9d ; jne 0xf00df ; ret
0x00000000000f024b : xor eax, eax ; test r9d, r9d ; jne 0xf025f ; ret
0x00000000000f048b : xor eax, eax ; test r9d, r9d ; jne 0xf049f ; ret
0x00000000000f05bb : xor eax, eax ; test r9d, r9d ; jne 0xf05cf ; ret
0x00000000000f073b : xor eax, eax ; test r9d, r9d ; jne 0xf074f ; ret
0x0000000000039b71 : xor eax, edx ; ret
0x000000000003919b : xor eax, edx ; sub eax, edx ; ret
0x00000000000391af : xor eax, edx ; sub rax, rdx ; ret
0x0000000000039229 : xor eax, r8d ; cmp byte ptr [rdi], 0 ; jne 0x39241 ; pop rbx ; ret
0x000000000011317d : xor ebp, ebp ; call 0x1f474
0x0000000000098364 : xor ebp, ebp ; mov edx, eax ; jmp 0x9831b
0x000000000009a9b4 : xor ebp, ebp ; mov edx, eax ; jmp 0x9a96b
0x000000000009cf34 : xor ebp, ebp ; mov edx, eax ; jmp 0x9ceeb
0x000000000006cc75 : xor ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000010737b : xor ebx, ebx ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x000000000011a13a : xor ebx, ebx ; mov eax, ebx ; pop rbx ; ret
0x000000000002d7e9 : xor ebx, ebx ; mov qword ptr [rcx], rax ; jmp 0x2d805
0x000000000015fa29 : xor ebx, edi ; call rdx
0x00000000000462b1 : xor ecx, dword ptr [rax + 0x39] ; ret
0x00000000000e1b5c : xor ecx, dword ptr [rax - 0x77] ; fimul word ptr [rcx + rcx*4 - 0x11] ; call r14
0x0000000000092ddb : xor ecx, dword ptr [rcx + 0x39] ; ret 0x860f
0x0000000000104779 : xor edi, dword ptr [0x30] ; call rax
0x0000000000141a31 : xor edi, ebx ; jmp rsp
0x000000000007e12e : xor edi, edi ; call qword ptr [rax]
0x00000000000f0ed2 : xor edi, edi ; mov eax, 0xe3 ; syscall
0x0000000000021e20 : xor edi, edi ; mov eax, edx ; syscall
0x000000000007b471 : xor edi, edx ; mov byte ptr [rax + rsi], dil ; ret
0x0000000000142119 : xor edi, esp ; call rsp
0x0000000000030eba : xor edx, dword ptr [0x30] ; call rdx
0x0000000000001ae4 : xor edx, dword ptr [rdx - 0x7b] ; mov bl, 0x5a ; ret 0x2a63
0x000000000010a552 : xor edx, ecx ; mov qword ptr [rdi + 8], rdx ; pop rbx ; ret
0x0000000000023004 : xor edx, edx ; add eax, 2 ; mov dword ptr [rsp], eax ; call rbx
0x00000000000f0c21 : xor edx, edx ; add rdi, 0x28 ; mov eax, r9d ; syscall
0x00000000000a68d9 : xor edx, edx ; add rsp, 8 ; mov rax, rdx ; ret
0x0000000000076a6d : xor edx, edx ; div rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000025a2e : xor edx, edx ; mov dword ptr [rsp + 8], eax ; call r14
0x00000000000853a0 : xor edx, edx ; mov eax, edx ; ret
0x0000000000093a29 : xor edx, edx ; mov qword ptr [rdi], rdx ; nop dword ptr [rax - 0x45] ; ret
0x0000000000093aa2 : xor edx, edx ; mov qword ptr [rdi], rdx ; ret
0x00000000000801a0 : xor edx, edx ; mov rdi, rbx ; call 0x7c427
0x00000000001053ae : xor edx, edx ; mov rdi, rbx ; call r10
0x0000000000036e9a : xor edx, edx ; mov rsi, r8 ; mov eax, ecx ; syscall
0x000000000006df89 : xor edx, edx ; mov rsi, r9 ; mov eax, r8d ; syscall
0x00000000000878c3 : xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x0000000000076a28 : xor edx, edx ; pop rbx ; div rbp ; pop rbp ; pop r12 ; ret
0x00000000000e0d5c : xor edx, edx ; test byte ptr [rsp + 0x29], 0x80 ; setne dl ; jmp 0xe0d44
0x00000000000da506 : xor edx, edx ; xor esi, esi ; xor eax, eax ; call 0xd6818
0x00000000000933b1 : xor esi, 0xffffffff ; dec dword ptr [rcx + 1] ; ret
0x000000000013ee71 : xor esi, ebx ; jmp rsp
0x000000000013eac1 : xor esi, edx ; call rsp
0x00000000000822c6 : xor esi, edx ; mov qword ptr [rax + 8], rsi ; ret
0x00000000000f0e06 : xor esi, esi ; mov eax, ecx ; movsxd rdi, r8d ; syscall
0x00000000000bd6c3 : xor esi, esi ; mov edx, r8d ; jmp 0xbd6df
0x000000000003633f : xor esi, esi ; mov rdi, r9 ; mov eax, r8d ; syscall
0x0000000000036926 : xor esi, esi ; ret 0x7502
0x00000000000db1bc : xor esi, esi ; sub rsp, 8 ; syscall
0x00000000000da508 : xor esi, esi ; xor eax, eax ; call 0xd6816
0x000000000013f5e9 : xor esp, esi ; call rsp
0x0000000000039cdc : xor r8d, dword ptr [r8] ; add rsp, 8 ; ret
0x0000000000073bbe : xor r8d, r8d ; call r12
0x00000000000dcdf0 : xor r8d, r8d ; jmp 0xdcdbc
0x00000000000bb816 : xor r9b, byte ptr [rax] ; xor eax, eax ; ret
0x00000000000db9a5 : xor rax, 0x20 ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x0000000000021de3 : xor rax, qword ptr [0x30] ; call rax
0x0000000000021de2 : xor rax, qword ptr fs:[0x30] ; call rax
0x00000000000858b9 : xor rax, rax ; ret
0x00000000000391ae : xor rax, rdx ; sub rax, rdx ; ret
0x0000000000104778 : xor rdi, qword ptr [0x30] ; call rax
0x0000000000104777 : xor rdi, qword ptr fs:[0x30] ; call rax
0x0000000000030eb9 : xor rdx, qword ptr [0x30] ; call rdx
0x0000000000030eb8 : xor rdx, qword ptr fs:[0x30] ; call rdx
0x000000000010a551 : xor rdx, rcx ; mov qword ptr [rdi + 8], rdx ; pop rbx ; ret
0x00000000000822c5 : xor rsi, rdx ; mov qword ptr [rax + 8], rsi ; ret
0x0000000000052862 : xor word ptr [rax], ax ; call rax

Unique gadgets found: 15977
