section gadget count: 0
0001f390: CLP; jmp qword ptr [rip + 0x349c7e]
read: 
write: 
--------------------------------------------------------------------------------
0001f3b0: CLP; jmp qword ptr [rip + 0x349c66]
read: 
write: 
--------------------------------------------------------------------------------
0001f3d0: CLP; jmp qword ptr [rip + 0x349c4e]
read: 
write: 
--------------------------------------------------------------------------------
0001f3f0: CLP; jmp qword ptr [rip + 0x349c36]
read: 
write: 
--------------------------------------------------------------------------------
0001f410: CLP; jmp qword ptr [rip + 0x349c1e]
read: 
write: 
--------------------------------------------------------------------------------
0001f430: CLP; jmp qword ptr [rip + 0x349c06]
read: 
write: 
--------------------------------------------------------------------------------
0001f450: CLP; jmp qword ptr [rip + 0x349bee]
read: 
write: 
--------------------------------------------------------------------------------
0001f470: CLP; jmp qword ptr [rip + 0x349bd6]
read: 
write: 
--------------------------------------------------------------------------------
0001f490: CLP; jmp qword ptr [rip + 0x349bbe]
read: 
write: 
--------------------------------------------------------------------------------
0001f4b0: CLP; push rbp ; lea rdi, [rip + 0x114f8a] ; mov esi, 0x80000001 ; push rbx ; push rdx ; call 0x11c37c
read: rbp rbx rdx rip rsp 
write: esi rdi rsp 
--------------------------------------------------------------------------------
0001f525: CLP; mov rcx, qword ptr [rip + 0x348618] ; mov r8, qword ptr [rip + 0x348621] ; xor r10d, r10d ; mov al, byte ptr [rsi] ; test al, al ; je 0x1f571
read: al r10d rflags 
write: al r10d r8 rcx rflags 
--------------------------------------------------------------------------------
0001f59b: CLP; mov rax, qword ptr [rdi] ; mov r8d, 0x7fffffff ; movzx eax, byte ptr [rax] ; sub eax, 0x30 ; mov rdx, qword ptr [rdi] ; lea rcx, [rdx + 1] ; mov qword ptr [rdi], rcx ; movzx edx, byte ptr [rdx + 1] ; sub edx, 0x30 ; cmp edx, 9 ; ja 0x1f5e4
read: eax edx rcx rflags 
write: eax edx r8d rax rcx rdx rflags 
--------------------------------------------------------------------------------
0001f5e9: CLP; push rbp ; mov r9, rcx ; xor eax, eax ; mov r11, rdi ; or rcx, 0xffffffffffffffff ; mov rdi, r9 ; mov rbp, rsp ; push r15 ; push r14 ; push r13 ; push r12 ; push rbx ; sub rsp, 0x18 ; movsx ebx, byte ptr [rdx] ; repne scasb al, byte ptr [rdi]
read: al eax r12 r13 r14 r15 r9 rbp rbx rcx rdi rflags rsp 
write: eax ebx r11 r9 rbp rcx rdi rflags rsp 
--------------------------------------------------------------------------------
0001f6e5: CLP; push rbp ; mov rbp, rsp ; push r15 ; mov r15, rdi ; lea rdi, [rip + 0x1154c6] ; push r14 ; mov r14, rdx ; push r13 ; push r12 ; push rbx ; mov rbx, rsi ; sub rsp, 0x68 ; call 0xe6e3c
read: r12 r13 r14 r15 rbp rbx rdi rdx rip rsi rsp 
write: r14 r15 rbp rbx rdi rflags rsp 
--------------------------------------------------------------------------------
0001f929: CLP; push rbp ; mov rbp, rsp ; push r15 ; mov r15, rdi ; lea rdi, [rip + 0x115282] ; push r14 ; mov r14, rdx ; push r13 ; push r12 ; push rbx ; mov rbx, rsi ; sub rsp, 0x68 ; call 0xe6e3c
read: r12 r13 r14 r15 rbp rbx rdi rdx rip rsi rsp 
write: r14 r15 rbp rbx rdi rflags rsp 
--------------------------------------------------------------------------------
0001fb6d: CLP; mov rdx, qword ptr [rdi] ; mov r9d, 0x7fffffff ; mov eax, dword ptr [rdx] ; add rdx, 4 ; sub eax, 0x30 ; mov esi, dword ptr [rdx] ; lea ecx, [rsi - 0x30] ; cmp ecx, 9 ; ja 0x1fbb3
read: eax ecx rdx rflags 
write: eax ecx esi r9d rdx rflags 
--------------------------------------------------------------------------------
0001fbbb: CLP; push rbp ; mov rbp, rsp ; push r15 ; push r14 ; mov r14d, ecx ; push r13 ; push r12 ; push rbx ; push rax ; movsx ebx, byte ptr [rdx] ; mov rax, rdi ; lea ecx, [rbx - 1] ; cmp cl, 0x7d ; ja 0x1fc77
read: cl ecx r12 r13 r14 r15 rax rbp rbx rdi rflags rsp 
write: ebx ecx r14d rax rbp rflags rsp 
--------------------------------------------------------------------------------
0001fc8a: CLP; push rbp ; mov rbp, rsp ; push r15 ; push r14 ; push r13 ; mov r13, rsi ; push r12 ; mov r12, rdi ; lea rdi, [rip + 0x114f18] ; sub r13, r12 ; push rbx ; and r13, 0xfffffffffffffffc ; mov ebx, 1 ; sub rsp, 0x18 ; mov qword ptr [rbp - 0x38], rdx
read: r12 r13 r14 r15 rbp rbx rdi rdx rsi rsp 
write: ebx r12 r13 rbp rdi rflags rsp 
--------------------------------------------------------------------------------
0001fde8: CLP; dec edi ; jle 0x1fed5
read: edi rflags 
write: edi rflags 
--------------------------------------------------------------------------------
0001feda: CLP; push rbp ; mov r9, rdi ; xor eax, eax ; mov rdi, rdx ; mov rbp, rsp ; push r14 ; mov r14, rcx ; or rcx, 0xffffffffffffffff ; push r13 ; mov r13, rdx ; mov rdx, rsi ; push r12 ; push rbx ; sub rsp, 0x90 ; repne scasb al, byte ptr [rdi]
read: al eax r12 r13 r14 rbp rbx rcx rdi rdx rflags rsi rsp 
write: eax r13 r14 r9 rbp rcx rdi rdx rflags rsp 
--------------------------------------------------------------------------------
0001ff68: CLP; push rbp ; mov rbp, rsp ; push r15 ; mov r15, rdx ; push r14 ; mov r14, rsi ; push r13 ; lea r13, [r14 + 4] ; push r12 ; push rbx ; mov ebx, edi ; sub rsp, 0x68 ; mov dword ptr [rbp - 0x6c], edi ; mov rdi, rsi ; mov dword ptr [rbp - 0x44], r8d
read: edi r12 r13 r14 r15 r8d rbp rbx rdx rsi rsp 
write: ebx r13 r14 r15 rbp rdi rflags rsp 
--------------------------------------------------------------------------------
000205be: CLP; push rbp ; xor eax, eax ; mov rbp, rsp ; push r15 ; mov r15, rdx ; push r14 ; push r13 ; lea r13, [rsi + 1] ; push r12 ; push rbx ; mov ebx, edi ; sub rsp, 0x68 ; mov dword ptr [rbp - 0x6c], edi ; mov qword ptr [rbp - 0x50], rcx ; mov dword ptr [rbp - 0x44], r8d
read: eax edi r12 r13 r14 r15 r8d rbp rbx rcx rdx rsp 
write: eax ebx r13 r15 rbp rflags rsp 
--------------------------------------------------------------------------------
00020bf2: CLP; push rbp ; mov rbp, rsp ; push r15 ; push r14 ; mov r14, rdi ; mov edi, 0x3000 ; push r13 ; push r12 ; push rbx ; sub rsp, 0xb8 ; mov qword ptr [rbp - 0xb0], rsi ; call 0xeff6c
read: r12 r13 r14 r15 rbp rbx rdi rip rsi rsp 
write: edi r14 rbp rflags rsp 
--------------------------------------------------------------------------------
000217f0: CLP; push r13 ; push r12 ; push rbp ; xor ebp, ebp ; mov eax, ebp ; push rbx ; cpuid ; sub rsp, 8 ; cmp ebx, 0x756e6547 ; jne 0x21818
read: eax ebp ebx ecx r12 r13 rbp rbx rflags rsp 
write: eax ebp ebx ecx edx rflags rsp 
--------------------------------------------------------------------------------
00021ac0: CLP; ret
read: 
write: 
--------------------------------------------------------------------------------
00021ad0: CLP; ret
read: 
write: 
--------------------------------------------------------------------------------
00021ae0: CLP; ret
read: 
write: 
--------------------------------------------------------------------------------
00021af0: CLP; push r13 ; push r12 ; mov r12d, edi ; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdx ; sub rsp, 0x28 ; mov rax, qword ptr [rip + 0x34742a] ; test rax, rax ; je 0x21c3c
read: edi r12 r13 rax rbp rbx rdx rflags rsi rsp 
write: r12d rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00021cb0: CLP; sub rsp, 8 ; call 0x372fc
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00021cc0: CLP; push r14 ; push r13 ; push r12 ; push rbp ; mov rbp, rcx ; push rbx ; sub rsp, 0x90 ; mov rax, qword ptr [rip + 0x34725b] ; mov qword ptr [rsp + 0x18], rdi ; mov dword ptr [rsp + 0x14], esi ; mov qword ptr [rsp + 8], rdx ; test rax, rax ; je 0x21dcc
read: esi r12 r13 r14 rax rbp rbx rcx rdi rdx rflags rsp 
write: rax rbp rflags rsp 
--------------------------------------------------------------------------------
00021ec0: CLP; lea rsi, [rip + 0x11af75] ; sub rsp, 8 ; mov edx, 0x25c ; mov edi, 1 ; call 0xd6acc
read: rip rsp 
write: edi edx rflags rsi rsp 
--------------------------------------------------------------------------------
00021ef0: CLP; lea rax, [rip + 0x112530] ; ret
read: 
write: rax 
--------------------------------------------------------------------------------
00021f00: CLP; lea rax, [rip + 0x1146b1] ; ret
read: 
write: rax 
--------------------------------------------------------------------------------
00021f10: CLP; sub rsp, 8 ; call 0x21ebc
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00021f30: CLP; push r12 ; xor eax, eax ; push rbp ; mov ebp, esi ; mov esi, 1 ; push rbx ; mov ebx, edi ; sub rsp, 0x90 ; call 0xd6f3c
read: eax edi esi r12 rbp rbx rip rsp 
write: eax ebp ebx esi rflags rsp 
--------------------------------------------------------------------------------
00021ff0: CLP; sub rsp, 8 ; mov esi, 0x20001 ; xor edi, edi ; call 0x21f2c
read: edi rip rsp 
write: edi esi rflags rsp 
--------------------------------------------------------------------------------
00022040: CLP; sub rsp, 0x18 ; mov rax, qword ptr [rip + 0x3488a1] ; test rax, rax ; je 0x22052
read: rax rflags rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
00022080: CLP; sub rsp, 0x28 ; mov rax, qword ptr [rip + 0x348859] ; test rax, rax ; je 0x2209b
read: rax rflags rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000220e0: CLP; mov rax, qword ptr [rip + 0x346d7d] ; add rax, qword ptr fs:[0] ; ret
read: rax 
write: rax rflags 
--------------------------------------------------------------------------------
00022100: CLP; movzx eax, byte ptr [rsi] ; test al, al ; je 0x221af
read: al rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000221c0: CLP; push rbp ; mov rbp, rsp ; push r15 ; push r14 ; push r13 ; push r12 ; mov r12, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 0x18 ; call 0x856dc
read: r12 r13 r14 r15 rbp rbx rdi rip rsi rsp 
write: r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000223f0: CLP; push r15 ; push r14 ; mov r14, r8 ; push r13 ; push r12 ; mov r12, rdx ; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rcx ; sub rsp, 0x18 ; test rcx, rcx ; je 0x22584
read: r12 r13 r14 r15 r8 rbp rbx rcx rdx rflags rsi rsp 
write: r12 r14 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000225e0: CLP; cmp rdi, -1 ; je 0x22602
read: rdi rflags 
write: rflags 
--------------------------------------------------------------------------------
00022620: CLP; push rbp ; mov rbp, rsp ; push r15 ; push r14 ; push r13 ; push r12 ; push rbx ; sub rsp, 0x68 ; mov qword ptr [rbp - 0x58], rsi ; mov esi, 0x2f ; mov qword ptr [rbp - 0x60], rdi ; mov qword ptr [rbp - 0x88], rdx ; mov dword ptr [rbp - 0x68], ecx ; call 0x83a5c
read: ecx r12 r13 r14 r15 rbp rbx rdi rdx rip rsi rsp 
write: esi rbp rflags rsp 
--------------------------------------------------------------------------------
00022e40: CLP; push r15 ; mov r15, rdi ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x38 ; cmp rdi, -1 ; mov qword ptr [rsp + 0x20], rcx ; je 0x22fac
read: r12 r13 r14 r15 rbp rbx rcx rdi rflags rsp 
write: r15 rflags rsp 
--------------------------------------------------------------------------------
000230b0: CLP; push r15 ; push r14 ; push r13 ; mov r13, rdi ; push r12 ; lea r12, [rdi + 0x48] ; push rbp ; push rbx ; sub rsp, 8 ; mov r14, qword ptr [rdi + 8] ; mov r15, qword ptr [rdi] ; mov rbx, qword ptr [r12 - 8] ; test rbx, rbx ; jne 0x230df
read: r12 r13 r14 r15 rbp rbx rdi rflags rsp 
write: r12 r13 r14 r15 rbx rflags rsp 
--------------------------------------------------------------------------------
00023170: CLP; sub rsp, 8 ; mov rsi, qword ptr [rsi] ; mov rdi, qword ptr [rdi] ; call 0x83c8c
read: rip rsp 
write: rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00023190: CLP; sub rsp, 0x18 ; lea rdx, [rip - 0x2f] ; lea rsi, [rip + 0x34b1ba] ; mov qword ptr [rsp], rdi ; mov rdi, rsp ; call 0xe152c
read: rdi rip rsp 
write: rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000231e0: CLP; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov rsi, qword ptr [rsi] ; mov rdi, qword ptr [rdi] ; call 0x83c8c
read: rbp rbx rdi rip rsi rsp 
write: rbp rbx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00023220: CLP; mov rax, qword ptr [rip + 0x34b145] ; ret
read: 
write: rax 
--------------------------------------------------------------------------------
00023230: CLP; mov rax, qword ptr [rip + 0x34b125] ; ret
read: 
write: rax 
--------------------------------------------------------------------------------
00023240: CLP; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov rdi, qword ptr [rdi] ; test rdi, rdi ; je 0x2329c
read: rbp rbx rdi rflags rsp 
write: rbx rdi rflags rsp 
--------------------------------------------------------------------------------
000232d0: CLP; push rbp ; mov rax, rsi ; mov rbp, rsp ; push r15 ; mov r15, r8 ; push r14 ; push r13 ; push r12 ; mov r12, r9 ; push rbx ; mov rbx, rcx ; sub rsp, 0x88 ; test rsi, rsi ; mov qword ptr [rbp - 0x80], rdi ; cmove rax, rdi
read: r12 r13 r14 r15 r8 r9 rax rbp rbx rcx rdi rflags rsi rsp 
write: r12 r15 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00023dd0: CLP; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 0x18 ; mov edi, dword ptr [rip + 0x34a98a] ; test edi, edi ; jne 0x23e5c
read: edi rbp rbx rdi rflags rsi rsp 
write: edi rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00023eb0: CLP; push r15 ; push r14 ; mov r14d, r8d ; push r13 ; mov r13, rcx ; push r12 ; mov r12, rdx ; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 0x18 ; mov r9d, dword ptr [rip + 0x34a898] ; test r9d, r9d ; jne 0x24054
read: r12 r13 r14 r15 r8d r9d rbp rbx rcx rdi rdx rflags rsi rsp 
write: r12 r13 r14d r9d rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000241b0: CLP; push r13 ; xor eax, eax ; mov r13, rdi ; push r12 ; mov r12, rsi ; mov esi, 1 ; push rbp ; push rbx ; sub rsp, 8 ; cmp dword ptr [rip + 0x34a5a2], 0 ; je 0x241dc
read: eax r12 r13 rbp rbx rdi rflags rsi rsp 
write: eax esi r12 r13 rflags rsp 
--------------------------------------------------------------------------------
00024290: CLP; push r14 ; mov r14d, esi ; push r13 ; mov r13, rdi ; push r12 ; push rbp ; lea rbp, [rip + 0x34a0c8] ; push rbx ; jmp 0x242d1
read: esi r12 r13 r14 rbp rbx rdi rsp 
write: r13 r14d rbp rsp 
--------------------------------------------------------------------------------
00024390: CLP; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 8 ; mov rbx, qword ptr [rip + 0x349fcc] ; test rbx, rbx ; je 0x243c3
read: rbp rbx rdi rflags rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000243f0: CLP; push rbp ; mov r9, rdx ; mov rbp, rsp ; push r15 ; push r14 ; push r13 ; push r12 ; mov r12, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 0x48 ; movzx eax, byte ptr [rdi] ; mov rdx, qword ptr [rip + 0x343730] ; movsx rsi, al ; test byte ptr [rdx + rsi*2 + 1], 0x20
read: al r12 r13 r14 r15 rbp rbx rdi rdx rsi rsp 
write: eax r12 r9 rbp rbx rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00024750: CLP; push r13 ; mov r13, rsi ; push r12 ; mov r12, rdi ; push rbp ; mov rbp, rdx ; sub rbp, rdi ; push rbx ; lea rdi, [rbp + 0x10] ; sub rsp, 8 ; call 0x1f3cc
read: r12 r13 rbp rbx rdi rdx rip rsi rsp 
write: r12 r13 rbp rdi rflags rsp 
--------------------------------------------------------------------------------
000247e0: CLP; push rbp ; mov esi, 1 ; xor eax, eax ; mov rbp, rsp ; push r15 ; push r14 ; push r13 ; push r12 ; push rbx ; sub rsp, 0x28 ; cmp dword ptr [rip + 0x349f71], 0 ; je 0x2480d
read: eax r12 r13 r14 r15 rbp rbx rflags rsp 
write: eax esi rbp rflags rsp 
--------------------------------------------------------------------------------
00024be0: CLP; push rbp ; mov rbp, rsp ; push r15 ; push r14 ; push r13 ; push r12 ; push rbx ; sub rsp, 0x68 ; mov rax, qword ptr [rip + 0x34426c] ; mov eax, dword ptr fs:[rax] ; mov dword ptr [rbp - 0x84], eax ; call 0x2b36c
read: eax r12 r13 r14 r15 rbp rbx rip rsp 
write: eax rax rbp rflags rsp 
--------------------------------------------------------------------------------
00025060: CLP; push r14 ; lea r14, [rip + 0x341ad3] ; push r13 ; mov r13, rsi ; push r12 ; mov r12, rdi ; push rbp ; xor ebp, ebp ; push rbx ; mov rbx, r14 ; nop ; mov rsi, qword ptr [rbx] ; mov rdi, r12 ; call 0x83c8c
read: ebp r12 r13 r14 rbp rbx rdi rip rsi rsp 
write: ebp r12 r13 r14 rbx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00025130: CLP; movzx edx, sil ; test sil, sil ; mov eax, 0xffffffff ; cmovns eax, edx ; ret
read: eax edx rflags sil 
write: eax edx rflags 
--------------------------------------------------------------------------------
00025150: CLP; push r15 ; lea rax, [rdi + 0x68] ; push r14 ; mov r14, rsi ; push r13 ; mov r13, rdx ; push r12 ; push rbp ; push rbx ; sub rsp, 0x78 ; test byte ptr [rsi + 0x10], 1 ; mov qword ptr [rsp + 0x40], rax ; lea rax, [rsi + 0x38] ; mov qword ptr [rsp + 0x20], rcx ; mov qword ptr [rsp + 0x30], r8
read: r12 r13 r14 r15 r8 rax rbp rbx rcx rdx rsi rsp 
write: r13 r14 rax rflags rsp 
--------------------------------------------------------------------------------
00025590: CLP; push r15 ; lea rax, [rdi + 0x68] ; push r14 ; push r13 ; mov r13, rsi ; push r12 ; mov r12, rdx ; push rbp ; push rbx ; sub rsp, 0x78 ; mov qword ptr [rsp + 0x28], r8 ; mov r8d, dword ptr [rsi + 0x10] ; mov qword ptr [rsp + 0x40], rax ; lea rax, [rsi + 0x38] ; mov qword ptr [rsp + 0x18], rcx
read: r12 r13 r14 r15 r8 rax rbp rbx rcx rdx rsi rsp 
write: r12 r13 r8d rax rflags rsp 
--------------------------------------------------------------------------------
00025ac0: CLP; push r15 ; lea rax, [rdi + 0x68] ; push r14 ; mov r14, rsi ; push r13 ; mov r13, rdx ; push r12 ; push rbp ; push rbx ; sub rsp, 0x78 ; test byte ptr [rsi + 0x10], 1 ; mov qword ptr [rsp + 0x40], rax ; lea rax, [rsi + 0x38] ; mov qword ptr [rsp + 0x30], rcx ; mov qword ptr [rsp + 0x28], r8
read: r12 r13 r14 r15 r8 rax rbp rbx rcx rdx rsi rsp 
write: r13 r14 rax rflags rsp 
--------------------------------------------------------------------------------
00025ef0: CLP; push r15 ; lea rax, [rdi + 0x68] ; push r14 ; push r13 ; mov r13, rsi ; push r12 ; mov r12, rdx ; push rbp ; push rbx ; sub rsp, 0x78 ; mov qword ptr [rsp + 0x10], rcx ; mov ecx, dword ptr [rsi + 0x10] ; mov qword ptr [rsp + 0x40], rax ; lea rax, [rsi + 0x38] ; mov qword ptr [rsp + 0x28], r8
read: r12 r13 r14 r15 r8 rax rbp rbx rcx rdx rsi rsp 
write: ecx r12 r13 rax rflags rsp 
--------------------------------------------------------------------------------
00026440: CLP; push r15 ; mov rax, rsi ; push r14 ; push r13 ; mov r13, rdx ; push r12 ; mov r12, rcx ; push rbp ; push rbx ; sub rsp, 0x78 ; mov edx, dword ptr [rax + 0x10] ; mov qword ptr [rsp + 0x10], rsi ; lea rsi, [rdi + 0x68] ; mov qword ptr [rsp + 0x28], r8 ; mov qword ptr [rsp + 0x38], r9
read: r12 r13 r14 r15 r8 r9 rbp rbx rcx rdx rsi rsp 
write: edx r12 r13 rax rflags rsi rsp 
--------------------------------------------------------------------------------
00026800: CLP; push r15 ; push r14 ; mov r14, rdx ; push r13 ; push r12 ; push rbp ; push rbx ; mov rbx, rcx ; sub rsp, 0xa8 ; mov r11d, dword ptr [rsi + 0x10] ; mov qword ptr [rsp + 0x70], rdi ; add rdi, 0x68 ; mov qword ptr [rsp + 0x18], rsi ; mov qword ptr [rsp + 0x58], rdi ; lea rdi, [rsi + 0x38]
read: r12 r13 r14 r15 rbp rbx rcx rdi rdx rsi rsp 
write: r11d r14 rbx rdi rflags rsp 
--------------------------------------------------------------------------------
00027190: CLP; push r15 ; push r14 ; mov r14, rdx ; push r13 ; push r12 ; push rbp ; push rbx ; mov rbx, rcx ; sub rsp, 0xb8 ; mov r15d, dword ptr [rsi + 0x10] ; mov qword ptr [rsp + 0x68], rdi ; add rdi, 0x68 ; mov qword ptr [rsp + 0x10], rsi ; mov qword ptr [rsp + 0x48], rdi ; lea rdi, [rsi + 0x38]
read: r12 r13 r14 r15 rbp rbx rcx rdi rdx rsi rsp 
write: r14 r15d rbx rdi rflags rsp 
--------------------------------------------------------------------------------
00027ea0: CLP; push r15 ; mov rax, rsi ; push r14 ; mov r14, rcx ; push r13 ; mov r13, rdx ; push r12 ; push rbp ; push rbx ; sub rsp, 0x98 ; mov qword ptr [rsp + 0x18], rsi ; mov qword ptr [rsp + 0x38], r8 ; lea rsi, [rdi + 0x68] ; mov r8d, dword ptr [rax + 0x10] ; mov qword ptr [rsp + 0x48], r9
read: r12 r13 r14 r15 r8 r9 rbp rbx rcx rdx rsi rsp 
write: r13 r14 r8d rax rflags rsi rsp 
--------------------------------------------------------------------------------
00028c70: CLP; push r15 ; mov rax, rsi ; push r14 ; mov r14, rcx ; push r13 ; mov r13, rdx ; push r12 ; push rbp ; push rbx ; sub rsp, 0x88 ; mov qword ptr [rsp + 0x10], rsi ; lea rsi, [rdi + 0x68] ; mov qword ptr [rsp + 0x28], r8 ; mov qword ptr [rsp + 0x38], r9 ; mov ebx, dword ptr [rsp + 0xc0]
read: r12 r13 r14 r15 r8 r9 rbp rbx rcx rdx rsi rsp 
write: ebx r13 r14 rax rflags rsi rsp 
--------------------------------------------------------------------------------
000292b0: CLP; push r15 ; mov rax, rdi ; mov r15, rsi ; add rax, 0x68 ; push r14 ; mov r14, rdx ; push r13 ; push r12 ; push rbp ; push rbx ; mov rbx, rcx ; sub rsp, 0xa8 ; mov r11d, dword ptr [rsi + 0x10] ; mov qword ptr [rsp + 0x58], rax ; lea rax, [rsi + 0x38]
read: r12 r13 r14 r15 rax rbp rbx rcx rdi rdx rsi rsp 
write: r11d r14 r15 rax rbx rflags rsp 
--------------------------------------------------------------------------------
00029c80: CLP; push r15 ; mov rax, rsi ; push r14 ; mov r14, rcx ; push r13 ; mov r13, rdx ; push r12 ; push rbp ; push rbx ; sub rsp, 0x88 ; mov qword ptr [rsp + 0x10], rsi ; lea rsi, [rdi + 0x68] ; mov qword ptr [rsp + 0x28], r8 ; mov qword ptr [rsp + 0x38], r9 ; mov ebx, dword ptr [rsp + 0xc0]
read: r12 r13 r14 r15 r8 r9 rbp rbx rcx rdx rsi rsp 
write: ebx r13 r14 rax rflags rsi rsp 
--------------------------------------------------------------------------------
0002a2d0: CLP; push r15 ; mov rax, rdi ; mov r15, rsi ; add rax, 0x68 ; push r14 ; mov r14, rdx ; push r13 ; push r12 ; push rbp ; push rbx ; mov rbx, rcx ; sub rsp, 0xa8 ; mov r11d, dword ptr [rsi + 0x10] ; mov qword ptr [rsp + 0x58], rax ; lea rax, [rsi + 0x38]
read: r12 r13 r14 r15 rax rbp rbx rcx rdi rdx rsi rsp 
write: r11d r14 r15 rax rbx rflags rsp 
--------------------------------------------------------------------------------
0002aca0: CLP; push r15 ; mov rax, rdi ; push r14 ; push r13 ; push r12 ; mov r12, r9 ; push rbp ; push rbx ; sub rsp, 0xa8 ; cmp qword ptr [rax], 0 ; mov r15, qword ptr [rax + 0x28] ; mov qword ptr [rsp + 0x18], rdi ; mov rdi, qword ptr [r8] ; mov qword ptr [rsp + 0x20], rsi ; mov qword ptr [rsp + 0x60], r8
read: r12 r13 r14 r15 r8 r9 rbp rbx rdi rsi rsp 
write: r12 r15 rax rdi rflags rsp 
--------------------------------------------------------------------------------
0002b140: CLP; mov eax, 1 ; ret
read: 
write: eax 
--------------------------------------------------------------------------------
0002b150: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x28 ; mov rbp, qword ptr [rip + 0x33f7b7] ; mov qword ptr [rsp + 0x18], rsi ; mov qword ptr [rsp + 0x10], rdi ; movzx r14d, word ptr [rbp + 4] ; movzx ebx, word ptr [rbp + 6] ; lea rax, [rbp + r14] ; add rbx, rbp ; mov qword ptr [rsp + 8], rax
read: r12 r13 r14 r15 rax rbp rbx rdi rsi rsp 
write: ebx r14d rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0002b240: CLP; push rbp ; mov rbp, rsp ; push r15 ; push r14 ; mov r14, rdi ; push r13 ; push r12 ; mov r12, rsi ; push rbx ; mov rbx, rdx ; sub rsp, 8 ; call 0x856dc
read: r12 r13 r14 r15 rbp rbx rdi rdx rip rsi rsp 
write: r12 r14 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0002b360: CLP; mov rax, qword ptr [rip + 0x33f5b5] ; ret
read: 
write: rax 
--------------------------------------------------------------------------------
0002b370: CLP; push r12 ; lea rdi, [rip + 0x109398] ; push rbp ; push rbx ; sub rsp, 0x90 ; call 0x3819c
read: r12 rbp rbx rip rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
0002b580: CLP; cmp qword ptr [rip + 0x33f394], 0 ; je 0x2b5fc
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
0002b610: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; mov ebx, 2 ; sub rsp, 0x48 ; mov r14, qword ptr [rip + 0x33f2f2] ; test r14, r14 ; je 0x2b687
read: r12 r13 r14 r15 rbp rbx rflags rsp 
write: ebx r14 rflags rsp 
--------------------------------------------------------------------------------
0002bac0: CLP; cmp qword ptr [rip + 0x33ee54], 0 ; je 0x2badb
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
0002baf0: CLP; sub rsp, 8 ; mov rsi, qword ptr [rsi] ; mov rdi, qword ptr [rdi] ; call 0x83c8c
read: rip rsp 
write: rdi rflags rsi rsp 
--------------------------------------------------------------------------------
0002bb10: CLP; cmp esi, 3 ; push rbx ; mov rbx, qword ptr [rdi] ; jne 0x2bb5c
read: esi rbx rflags rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
0002bba0: CLP; sub rsp, 8 ; mov qword ptr [rip + 0x33ed79], rdi ; mov rdi, qword ptr [rip + 0x33ed7a] ; lea rsi, [rip - 0xad] ; call 0xe1a1c
read: rdi rip rsp 
write: rdi rflags rsi rsp 
--------------------------------------------------------------------------------
0002bbd0: CLP; push r13 ; lea rdx, [rip - 0xed] ; lea rsi, [rip + 0x33ed4c] ; push r12 ; push rbp ; push rbx ; sub rsp, 0x18 ; mov qword ptr [rsp + 8], rdi ; lea rdi, [rsp + 8] ; call 0xe152c
read: r12 r13 rbp rbx rdi rip rsp 
write: rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0002be00: CLP; push r15 ; push r14 ; xor r14d, r14d ; push r13 ; push r12 ; xor r12d, r12d ; push rbp ; mov ebp, edi ; push rbx ; mov ebx, 1 ; sub rsp, 0x18 ; mov qword ptr [rsp + 8], rsi ; mov dword ptr [rsp + 4], 1 ; jmp 0x2bea0
read: edi r12 r12d r13 r14 r14d r15 rbp rbx rsi rsp 
write: ebp ebx r12d r14d rflags rsp 
--------------------------------------------------------------------------------
0002c040: CLP; push r15 ; push r14 ; mov r14d, edi ; push r13 ; push r12 ; push rbp ; push rbx ; movsxd rbx, edi ; sub rsp, 0x128 ; cmp rbx, 0xc ; ja 0x2c641
read: edi r12 r13 r14 r15 rbp rbx rflags rsp 
write: r14d rbx rflags rsp 
--------------------------------------------------------------------------------
0002c7b0: CLP; push rbp ; mov rbp, rsp ; push r15 ; push r14 ; push r13 ; mov r13, rdi ; push r12 ; mov r12d, edx ; push rbx ; mov rbx, rcx ; sub rsp, 0x78 ; mov r14, qword ptr [rcx] ; mov qword ptr [rbp - 0x68], rsi ; cmp byte ptr [r14], 0 ; je 0x2c8cc
read: edx r12 r13 r14 r15 rbp rbx rcx rdi rflags rsi rsp 
write: r12d r13 r14 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0002cd80: CLP; sub rsp, 8 ; sub dword ptr [rsi + 0x30], 1 ; jne 0x2cdd1
read: rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0002cde0: CLP; push r15 ; push r14 ; push r13 ; mov r13, rdx ; push r12 ; push rbp ; push rbx ; sub rsp, 8 ; cmp rdx, 7 ; jbe 0x2cf3c
read: r12 r13 r14 r15 rbp rbx rdx rflags rsp 
write: r13 rflags rsp 
--------------------------------------------------------------------------------
0002d1b0: CLP; push rbp ; xor eax, eax ; mov rbp, rsp ; push r15 ; push r14 ; mov r14d, esi ; mov esi, 0x80000 ; push r13 ; push r12 ; push rbx ; mov rbx, rdi ; sub rsp, 0xb8 ; mov dword ptr [rdi + 8], 1 ; mov qword ptr [rdi + 0x10], 0 ; mov rdi, qword ptr [rdi]
read: eax esi r12 r13 r14 r15 rbp rbx rdi rsp 
write: eax esi r14d rbp rbx rdi rflags rsp 
--------------------------------------------------------------------------------
0002d4b0: CLP; push rbx ; mov rax, qword ptr [rdi + 0x20] ; mov rbx, rdi ; test rax, rax ; je 0x2d4c3
read: rax rbx rdi rflags rsp 
write: rax rbx rflags rsp 
--------------------------------------------------------------------------------
0002d530: CLP; push rbp ; mov rbp, rsp ; push r15 ; push r14 ; push r13 ; push r12 ; push rbx ; sub rsp, 0x108 ; mov dword ptr [rbp - 0x124], edi ; mov edi, 0x1e ; mov qword ptr [rbp - 0x120], rsi ; mov rbx, qword ptr [rsi] ; call 0xb4c0c
read: edi r12 r13 r14 r15 rbp rbx rip rsi rsp 
write: edi rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0002dab0: CLP; mov rax, qword ptr [rip + 0x33b305] ; mov rdx, qword ptr fs:[rax] ; mov rax, qword ptr [rdx + 8] ; mov rcx, qword ptr [rax + 0x40] ; mov qword ptr [rip + 0x33cf92], rcx ; mov rcx, qword ptr [rax + 0x48] ; mov rax, qword ptr [rax + 0x50] ; mov qword ptr [rip + 0x33cf8b], rcx ; mov qword ptr [rip + 0x33cf8c], rax ; movzx eax, byte ptr [rax] ; and eax, 0x7f ; cmp al, 0x7f ; jne 0x2daf8
read: al eax rax rcx rflags 
write: eax rax rcx rdx rflags 
--------------------------------------------------------------------------------
0002dcb0: CLP; sub rsp, 8 ; mov rax, qword ptr [rip + 0x33b101] ; mov rsi, qword ptr fs:[rax] ; call 0x2dcdc
read: rip rsp 
write: rax rflags rsi rsp 
--------------------------------------------------------------------------------
0002dce0: CLP; mov edx, edi ; lea rax, [rip + 0x106c29] ; sar edx, 0x10 ; cmp edx, 6 ; je 0x2dd1c
read: edi edx rflags 
write: edx rax rflags 
--------------------------------------------------------------------------------
0002dd40: CLP; mov rax, qword ptr [rip + 0x33b075] ; mov rax, qword ptr fs:[rax] ; mov rax, qword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
read: 
write: eax rax 
--------------------------------------------------------------------------------
0002dd60: CLP; push rbp ; mov eax, edi ; mov rbp, rsp ; push r15 ; push r14 ; push r13 ; push r12 ; mov r12, rsi ; push rbx ; sub rsp, 0x1a8 ; cmp edi, 0x40 ; mov dword ptr [rbp - 0x1ac], edi ; mov qword ptr [rbp - 0x1b8], rdx ; je 0x2e17c
read: edi r12 r13 r14 r15 rbp rbx rdx rflags rsi rsp 
write: eax r12 rbp rflags rsp 
--------------------------------------------------------------------------------
0002e420: CLP; push r15 ; lea rax, [rip + 0x3396b3] ; push r14 ; mov r14, rdi ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x18 ; cmp rdi, rax ; je 0x2e5d9
read: r12 r13 r14 r15 rax rbp rbx rdi rflags rsp 
write: r14 rax rflags rsp 
--------------------------------------------------------------------------------
0002e5f0: CLP; push r12 ; lea rax, [rip + 0x3394e3] ; mov r12, rdi ; push rbp ; cmp rdi, rax ; push rbx ; je 0x2e658
read: r12 rax rbp rbx rdi rflags rsp 
write: r12 rax rflags rsp 
--------------------------------------------------------------------------------
0002e6c0: CLP; mov rax, qword ptr [rip + 0x33a6f5] ; test rdi, rdi ; lea rcx, [rip + 0x33b84b] ; mov rdx, qword ptr fs:[rax] ; je 0x2e710
read: rdi rflags 
write: rax rcx rdx rflags 
--------------------------------------------------------------------------------
0002e730: CLP; mov rax, qword ptr [rip + 0x33b7e5] ; mov rdi, qword ptr [rax + 0x40] ; lea rsi, [rdi + 0x100] ; mov qword ptr [rip + 0x33b83b], rsi ; mov rdi, qword ptr [rax + 0x58] ; lea rdx, [rdi + 0x200] ; lea rdi, [rip + 0x33b7c1] ; mov qword ptr [rip + 0x33b82a], rdx ; mov rcx, qword ptr [rax + 0x48] ; mov rax, qword ptr [rip + 0x33a64f] ; add rcx, 0x200 ; mov rax, qword ptr fs:[rax] ; mov qword ptr [rip + 0x33b815], rcx ; cmp rax, rdi ; je 0x2e7fc
read: rax rcx rdi rdx rflags rsi 
write: rax rcx rdi rdx rflags rsi 
--------------------------------------------------------------------------------
0002e830: CLP; mov rax, qword ptr [rip + 0x33a585] ; movsxd rdi, edi ; mov rax, qword ptr fs:[rax] ; mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
read: edi 
write: rax rdi 
--------------------------------------------------------------------------------
0002e850: CLP; mov ecx, dword ptr [rdi] ; mov edx, esi ; xor eax, eax ; shr edx, cl ; cmp edx, dword ptr [rdi + 4] ; jae 0x2e88b
read: cl eax edx esi rflags 
write: eax ecx edx rflags 
--------------------------------------------------------------------------------
0002e8a0: CLP; mov ecx, dword ptr [rdi] ; mov edx, esi ; mov eax, 0xffffffff ; shr edx, cl ; cmp edx, dword ptr [rdi + 4] ; jb 0x2e8bc
read: cl edx esi rflags 
write: eax ecx edx rflags 
--------------------------------------------------------------------------------
0002e8f0: CLP; push r12 ; mov r9d, ecx ; mov r12, rsi ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 0x50 ; mov eax, dword ptr [rip + 0x33fe65] ; test eax, eax ; jne 0x2ea32
read: eax ecx r12 rbp rbx rdi rflags rsi rsp 
write: eax r12 r9d rbp rflags rsp 
--------------------------------------------------------------------------------
0002eab0: CLP; push r13 ; mov r13, rcx ; push r12 ; mov r12d, edx ; mov edx, 5 ; push rbp ; mov rbp, rsi ; lea rsi, [rip + 0x10954a] ; push rbx ; mov rbx, rdi ; lea rdi, [rip + 0x105ed8] ; sub rsp, 8 ; call 0x2f4bc
read: edx r12 r13 rbp rbx rcx rdi rip rsi rsp 
write: edx r12d r13 rbp rbx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
0002eb00: CLP; push r13 ; mov r13, rcx ; push r12 ; mov r12d, edx ; mov edx, 0x400 ; push rbp ; mov rbp, rsi ; push rbx ; sub rsp, 0x408 ; mov rsi, rsp ; call 0x8552c
read: edx r12 r13 rbp rbx rcx rip rsi rsp 
write: edx r12d r13 rbp rflags rsi rsp 
--------------------------------------------------------------------------------
0002eb60: CLP; sub rsp, 8 ; xor ecx, ecx ; call 0x2eaac
read: ecx rip rsp 
write: ecx rflags rsp 
--------------------------------------------------------------------------------
0002eb70: CLP; mov rax, qword ptr [rip + 0x33a285] ; movsxd rdi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 8 ; movzx eax, ax ; ret
read: ax eax edi 
write: eax rax rdi rflags 
--------------------------------------------------------------------------------
0002eb90: CLP; mov rax, qword ptr [rip + 0x33a265] ; movsxd rdi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x400 ; movzx eax, ax ; ret
read: ax edi 
write: ax eax rax rdi rflags 
--------------------------------------------------------------------------------
0002ebb0: CLP; mov rax, qword ptr [rip + 0x33a245] ; movsxd rdi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 2 ; movzx eax, ax ; ret
read: ax eax edi 
write: eax rax rdi rflags 
--------------------------------------------------------------------------------
0002ebd0: CLP; mov rax, qword ptr [rip + 0x33a225] ; movsxd rdi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x800 ; movzx eax, ax ; ret
read: ax edi 
write: ax eax rax rdi rflags 
--------------------------------------------------------------------------------
0002ebf0: CLP; mov rax, qword ptr [rip + 0x33a205] ; movsxd rdi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x200 ; movzx eax, ax ; ret
read: ax edi 
write: ax eax rax rdi rflags 
--------------------------------------------------------------------------------
0002ec10: CLP; mov rax, qword ptr [rip + 0x33a1e5] ; movsxd rdi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x8000 ; movzx eax, ax ; ret
read: ax edi 
write: ax eax rax rdi rflags 
--------------------------------------------------------------------------------
0002ec30: CLP; mov rax, qword ptr [rip + 0x33a1c5] ; movsxd rdi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x4000 ; movzx eax, ax ; ret
read: ax edi 
write: ax eax rax rdi rflags 
--------------------------------------------------------------------------------
0002ec50: CLP; mov rax, qword ptr [rip + 0x33a1a5] ; movsxd rdi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 4 ; movzx eax, ax ; ret
read: ax eax edi 
write: eax rax rdi rflags 
--------------------------------------------------------------------------------
0002ec70: CLP; mov rax, qword ptr [rip + 0x33a185] ; movsxd rdi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x2000 ; movzx eax, ax ; ret
read: ax edi 
write: ax eax rax rdi rflags 
--------------------------------------------------------------------------------
0002ec90: CLP; mov rax, qword ptr [rip + 0x33a165] ; movsxd rdi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x100 ; movzx eax, ax ; ret
read: ax edi 
write: ax eax rax rdi rflags 
--------------------------------------------------------------------------------
0002ecb0: CLP; mov rax, qword ptr [rip + 0x33a145] ; movsxd rdi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x1000 ; movzx eax, ax ; ret
read: ax edi 
write: ax eax rax rdi rflags 
--------------------------------------------------------------------------------
0002ecd0: CLP; lea edx, [rdi + 0x80] ; movsxd rax, edi ; cmp edx, 0x17f ; ja 0x2ecfa
read: edi edx rflags 
write: edx rax rflags 
--------------------------------------------------------------------------------
0002ed00: CLP; lea edx, [rdi + 0x80] ; movsxd rax, edi ; cmp edx, 0x17f ; ja 0x2ed2a
read: edi edx rflags 
write: edx rax rflags 
--------------------------------------------------------------------------------
0002ed30: CLP; mov rax, qword ptr [rip + 0x33a0c5] ; movsxd rdi, edi ; mov rax, qword ptr fs:[rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
read: eax edi 
write: eax rax rdi rflags 
--------------------------------------------------------------------------------
0002ed50: CLP; mov rax, qword ptr [rip + 0x33a065] ; movsxd rdi, edi ; mov rax, qword ptr fs:[rax] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x58] ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
read: edi 
write: eax rax rdi 
--------------------------------------------------------------------------------
0002ed80: CLP; mov rax, qword ptr [rip + 0x33a035] ; movsxd rdi, edi ; mov rax, qword ptr fs:[rax] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x48] ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
read: edi 
write: eax rax rdi 
--------------------------------------------------------------------------------
0002edb0: CLP; mov eax, edi ; and eax, 0x7f ; ret
read: eax edi 
write: eax rflags 
--------------------------------------------------------------------------------
0002edc0: CLP; xor eax, eax ; and edi, 0xffffff80 ; sete al ; ret
read: eax edi rflags 
write: al eax edi rflags 
--------------------------------------------------------------------------------
0002edd0: CLP; mov rax, qword ptr [rsi + 0x68] ; movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
read: eax edi 
write: eax rax rdi rflags 
--------------------------------------------------------------------------------
0002edf0: CLP; mov rax, qword ptr [rsi + 0x68] ; movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 8 ; movzx eax, ax ; ret
read: ax eax edi 
write: eax rax rdi rflags 
--------------------------------------------------------------------------------
0002ee10: CLP; mov rax, qword ptr [rsi + 0x68] ; movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x400 ; movzx eax, ax ; ret
read: ax edi 
write: ax eax rax rdi rflags 
--------------------------------------------------------------------------------
0002ee30: CLP; mov rax, qword ptr [rsi + 0x68] ; movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 2 ; movzx eax, ax ; ret
read: ax eax edi 
write: eax rax rdi rflags 
--------------------------------------------------------------------------------
0002ee50: CLP; mov rax, qword ptr [rsi + 0x68] ; movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x800 ; movzx eax, ax ; ret
read: ax edi 
write: ax eax rax rdi rflags 
--------------------------------------------------------------------------------
0002ee70: CLP; mov rax, qword ptr [rsi + 0x68] ; movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x200 ; movzx eax, ax ; ret
read: ax edi 
write: ax eax rax rdi rflags 
--------------------------------------------------------------------------------
0002ee90: CLP; mov rax, qword ptr [rsi + 0x68] ; movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x8000 ; movzx eax, ax ; ret
read: ax edi 
write: ax eax rax rdi rflags 
--------------------------------------------------------------------------------
0002eeb0: CLP; mov rax, qword ptr [rsi + 0x68] ; movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x4000 ; movzx eax, ax ; ret
read: ax edi 
write: ax eax rax rdi rflags 
--------------------------------------------------------------------------------
0002eed0: CLP; mov rax, qword ptr [rsi + 0x68] ; movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 4 ; movzx eax, ax ; ret
read: ax eax edi 
write: eax rax rdi rflags 
--------------------------------------------------------------------------------
0002eef0: CLP; mov rax, qword ptr [rsi + 0x68] ; movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x2000 ; movzx eax, ax ; ret
read: ax edi 
write: ax eax rax rdi rflags 
--------------------------------------------------------------------------------
0002ef10: CLP; mov rax, qword ptr [rsi + 0x68] ; movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x100 ; movzx eax, ax ; ret
read: ax edi 
write: ax eax rax rdi rflags 
--------------------------------------------------------------------------------
0002ef30: CLP; mov rax, qword ptr [rsi + 0x68] ; movsxd rdi, edi ; movzx eax, word ptr [rax + rdi*2] ; and ax, 0x1000 ; movzx eax, ax ; ret
read: ax edi 
write: ax eax rax rdi rflags 
--------------------------------------------------------------------------------
0002ef50: CLP; mov rax, qword ptr [rsi + 0x70] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
read: edi 
write: eax rax rdi 
--------------------------------------------------------------------------------
0002ef60: CLP; mov rax, qword ptr [rsi + 0x78] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
read: edi 
write: eax rax rdi 
--------------------------------------------------------------------------------
0002ef70: CLP; mov rax, qword ptr [rip + 0x339e45] ; movsxd rdi, edi ; mov rax, qword ptr fs:[rax] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x40] ; movzx eax, word ptr [rax + rdi*2 + 0x100] ; and eax, esi ; ret
read: eax edi esi 
write: eax rax rdi rflags 
--------------------------------------------------------------------------------
0002efa0: CLP; mov rax, qword ptr [rip + 0x339e55] ; add rax, qword ptr fs:[0] ; ret
read: rax 
write: rax rflags 
--------------------------------------------------------------------------------
0002efc0: CLP; mov rax, qword ptr [rip + 0x339f0d] ; add rax, qword ptr fs:[0] ; ret
read: rax 
write: rax rflags 
--------------------------------------------------------------------------------
0002efe0: CLP; mov rax, qword ptr [rip + 0x339f35] ; add rax, qword ptr fs:[0] ; ret
read: rax 
write: rax rflags 
--------------------------------------------------------------------------------
0002f000: CLP; mov rax, qword ptr [rip + 0x339db5] ; mov rdx, qword ptr [rip + 0x339dee] ; mov rax, qword ptr fs:[rax] ; mov rax, qword ptr [rax] ; mov rsi, qword ptr [rax + 0x40] ; mov rdi, qword ptr [rax + 0x48] ; lea rcx, [rsi + 0x100] ; mov qword ptr fs:[rdx], rcx ; mov rdx, qword ptr [rip + 0x339ea5] ; lea rcx, [rdi + 0x200] ; mov qword ptr fs:[rdx], rcx ; mov rdx, qword ptr [rax + 0x58] ; mov rax, qword ptr [rip + 0x339ed7] ; add rdx, 0x200 ; mov qword ptr fs:[rax], rdx
read: rcx rdx 
write: rax rcx rdi rdx rflags rsi 
--------------------------------------------------------------------------------
0002f060: CLP; push r15 ; push r14 ; push r13 ; mov r13, rdx ; push r12 ; mov r12, rsi ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 8 ; mov edx, dword ptr [rip + 0x33f6ef] ; test edx, edx ; jne 0x2f2fc
read: edx r12 r13 r14 r15 rbp rbx rdi rdx rflags rsi rsp 
write: edx r12 r13 rbp rflags rsp 
--------------------------------------------------------------------------------
0002f440: CLP; sub rsp, 0x18 ; xor eax, eax ; test rdi, rdi ; mov qword ptr [rsp + 8], rsi ; je 0x2f455
read: eax rdi rflags rsi rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
0002f480: CLP; sub rsp, 0x18 ; xor eax, eax ; test rdi, rdi ; mov qword ptr [rsp + 8], rsi ; je 0x2f495
read: eax rdi rflags rsi rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
0002f4c0: CLP; sub rsp, 8 ; mov r9d, edx ; xor r8d, r8d ; xor ecx, ecx ; xor edx, edx ; call 0x3051c
read: ecx edx r8d rip rsp 
write: ecx edx r8d r9d rflags rsp 
--------------------------------------------------------------------------------
0002f4e0: CLP; sub rsp, 8 ; mov edx, 5 ; call 0x2f4bc
read: rip rsp 
write: edx rflags rsp 
--------------------------------------------------------------------------------
0002f500: CLP; sub rsp, 8 ; mov rsi, rdi ; mov edx, 5 ; xor edi, edi ; call 0x2f4bc
read: edi rdi rip rsp 
write: edi edx rflags rsi rsp 
--------------------------------------------------------------------------------
0002f520: CLP; push r13 ; push r12 ; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov eax, dword ptr [rdi] ; cmp eax, 1 ; je 0x2f61c
read: eax r12 r13 rbp rbx rdi rflags rsi rsp 
write: eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0002f750: CLP; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; cmp qword ptr [rsi + 0x20], 0 ; je 0x2f7cc
read: rbp rbx rdi rflags rsi rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0002f7e0: CLP; push r13 ; mov r13, rdi ; push r12 ; mov r12, rdx ; push rbp ; mov rbp, rcx ; push rbx ; xor ebx, ebx ; sub rsp, 8 ; mov rdi, qword ptr [rdi + 0xb8] ; call 0x2f51c
read: ebx r12 r13 rbp rbx rcx rdi rdx rip rsp 
write: ebx r12 r13 rbp rdi rflags rsp 
--------------------------------------------------------------------------------
0002f870: CLP; push rbp ; mov rbp, rsp ; push r15 ; push r14 ; push r13 ; push r12 ; push rbx ; sub rsp, 0x78 ; mov r10d, dword ptr [rdi + 8] ; mov qword ptr [rbp - 0x90], rdi ; mov qword ptr [rbp - 0xa0], rsi ; mov qword ptr [rbp - 0x60], rdx ; mov dword ptr [rbp - 0x88], ecx ; mov qword ptr [rbp - 0x98], r8 ; test r10d, r10d
read: ecx r10d r12 r13 r14 r15 r8 rbp rbx rdi rdx rsi rsp 
write: r10d rbp rflags rsp 
--------------------------------------------------------------------------------
00030520: CLP; push rbp ; mov rbp, rsp ; push r15 ; push r14 ; push r13 ; push r12 ; push rbx ; sub rsp, 0xc8 ; test rsi, rsi ; mov qword ptr [rbp - 0xa8], rdi ; mov qword ptr [rbp - 0x88], rsi ; mov qword ptr [rbp - 0xc0], rdx ; mov dword ptr [rbp - 0xb0], ecx ; mov qword ptr [rbp - 0xb8], r8 ; mov dword ptr [rbp - 0xac], r9d
read: ecx r12 r13 r14 r15 r8 r9d rbp rbx rdi rdx rsi rsp 
write: rbp rflags rsp 
--------------------------------------------------------------------------------
00030f10: CLP; sub rsp, 8 ; mov r9d, r8d ; mov r8, rcx ; mov ecx, 1 ; call 0x3051c
read: r8d rcx rip rsp 
write: ecx r8 r9d rflags rsp 
--------------------------------------------------------------------------------
00030f40: CLP; sub rsp, 8 ; mov r8d, 5 ; call 0x30f0c
read: rip rsp 
write: r8d rflags rsp 
--------------------------------------------------------------------------------
00030f60: CLP; sub rsp, 8 ; mov rcx, rdx ; mov r8d, 5 ; mov rdx, rsi ; mov rsi, rdi ; xor edi, edi ; call 0x30f0c
read: edi rdi rdx rip rsi rsp 
write: edi r8d rcx rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00030f90: CLP; push rbp ; mov rbp, rsp ; push r15 ; mov r15, rdx ; push r14 ; mov r14, rcx ; push r13 ; mov r13, rsi ; push r12 ; mov r12, rdi ; push rbx ; sub rsp, 0x68 ; mov r11d, dword ptr [rip + 0x33d7b8] ; test r11d, r11d ; jne 0x31054
read: r11d r12 r13 r14 r15 rbp rbx rcx rdi rdx rflags rsi rsp 
write: r11d r12 r13 r14 r15 rbp rflags rsp 
--------------------------------------------------------------------------------
000312f0: CLP; push rbp ; mov rdx, qword ptr fs:[0x10] ; mov rbp, rsp ; push r15 ; push r14 ; push r13 ; push r12 ; push rbx ; mov rbx, rdi ; sub rsp, 0x138 ; cmp rdx, qword ptr [rip + 0x3398ad] ; mov qword ptr [rbp - 0xd8], rsi ; je 0x3136a
read: r12 r13 r14 r15 rbp rbx rdi rdx rflags rsi rsp 
write: rbp rbx rdx rflags rsp 
--------------------------------------------------------------------------------
000329a0: CLP; sub rsp, 8 ; mov rsi, qword ptr [rsi] ; mov rdi, qword ptr [rdi] ; lea rdx, [rip + 0x33512b] ; call 0x89afc
read: rip rsp 
write: rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000329d0: CLP; push rbp ; movsxd rdx, esi ; mov rsi, rdi ; lea rax, [rdx + 0x2c] ; mov rbp, rsp ; push r15 ; and rax, 0xfffffffffffffff0 ; push r14 ; push r13 ; push r12 ; push rbx ; sub rsp, 0x1e8 ; sub rsp, rax ; lea rbx, [rsp + 0xf] ; and rbx, 0xfffffffffffffff0
read: esi r12 r13 r14 r15 rax rbp rbx rdi rsp 
write: rax rbp rbx rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00032ea0: CLP; push r15 ; mov esi, 1 ; xor eax, eax ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x28 ; mov qword ptr [rsp + 8], rdi ; cmp dword ptr [rip + 0x33b8af], 0 ; je 0x32ecf
read: eax r12 r13 r14 r15 rbp rbx rdi rflags rsp 
write: eax esi rflags rsp 
--------------------------------------------------------------------------------
00033070: CLP; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; test rdi, rdi ; je 0x331b4
read: rbp rbx rdi rflags rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
000331d0: CLP; push r15 ; push r14 ; push r13 ; push r12 ; mov r12d, ecx ; push rbp ; push rbx ; xor ebx, ebx ; sub rsp, 0x78 ; mov qword ptr [rsp + 0x30], rdi ; mov rdi, r8 ; mov qword ptr [rsp + 0x50], rsi ; mov qword ptr [rsp + 0x48], rdx ; mov qword ptr [rsp + 0x38], r8 ; mov qword ptr [rsp + 0x40], r9
read: ebx ecx r12 r13 r14 r15 r8 r9 rbp rbx rdi rdx rsi rsp 
write: ebx r12d rdi rflags rsp 
--------------------------------------------------------------------------------
00033690: CLP; push r12 ; mov r12, rdi ; push rbp ; push rbx ; sub rsp, 0x10 ; test rsi, rsi ; je 0x337aa
read: r12 rbp rbx rdi rflags rsi rsp 
write: r12 rflags rsp 
--------------------------------------------------------------------------------
000337c0: CLP; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x20 ; mov qword ptr [rdx], 0 ; mov qword ptr [rcx], 0 ; mov qword ptr [r8], 0 ; mov qword ptr [r9], 0 ; mov qword ptr [rsi], rdi ; movzx eax, byte ptr [rdi] ; test al, 0xbf ; je 0x339e4
read: al r12 r13 r14 rbp rbx rdi rflags rsp 
write: al eax rflags rsp 
--------------------------------------------------------------------------------
00033a80: CLP; test rdi, rdi ; push rbx ; mov rbx, rdi ; je 0x33aa6
read: rbx rdi rflags rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
00033ae0: CLP; push r12 ; mov r12d, edi ; push rbp ; push rbx ; mov ebx, edi ; sub rsp, 0x10 ; sub ebx, 1 ; js 0x33bd4
read: ebx edi r12 rbp rbx rflags rsp 
write: ebx r12d rflags rsp 
--------------------------------------------------------------------------------
00033c10: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; xor ebp, ebp ; push rbx ; mov ebx, 0xc8 ; mov r15, rbx ; sub rsp, 0x838 ; lea rax, [rsp + 0x60] ; lea r12, [rsp + 0x1f0] ; mov qword ptr [rsp + 0x30], rdi ; mov dword ptr [rsp + 0x1c], 0 ; mov dword ptr [rsp + 0x18], 0xfffffffe
read: ebp r12 r13 r14 r15 rbp rbx rdi rsp 
write: ebp ebx r12 r15 rax rflags rsp 
--------------------------------------------------------------------------------
00034400: CLP; push r13 ; push r12 ; mov r12, rsi ; push rbp ; mov rbp, rdx ; push rbx ; mov rbx, rdi ; sub rsp, 0x28 ; test rdi, rdi ; je 0x34484
read: r12 r13 rbp rbx rdi rdx rflags rsi rsp 
write: r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00034500: CLP; xor eax, eax ; nop word ptr cs:[rax + rax] ; movzx edx, byte ptr [rdi] ; test dl, dl ; je 0x3453a
read: dl eax rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
00034540: CLP; push rbp ; mov rbp, rsp ; push r14 ; xor r14d, r14d ; push r13 ; xor r13d, r13d ; push r12 ; mov r12, rdi ; push rbx ; mov ebx, esi ; mov esi, 0x2f ; call 0x83a5c
read: esi r12 r13 r13d r14 r14d rbp rbx rdi rip rsp 
write: ebx esi r12 r13d r14d rbp rflags rsp 
--------------------------------------------------------------------------------
000347b0: CLP; cmp rdi, -1 ; je 0x3482c
read: rdi rflags 
write: rflags 
--------------------------------------------------------------------------------
00034840: CLP; cmp rdi, -1 ; push rbx ; mov rbx, rdi ; je 0x34894
read: rbx rdi rflags rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
000348b0: CLP; push rbp ; mov rbp, rsp ; push r15 ; push r14 ; push r13 ; mov r13, rsi ; mov esi, 0x2f ; push r12 ; push rbx ; sub rsp, 0xc8 ; mov qword ptr [rbp - 0xd0], rdi ; mov qword ptr [rbp - 0xc8], rdx ; mov qword ptr [rbp - 0xe8], rcx ; call 0x83a5c
read: r12 r13 r14 r15 rbp rbx rcx rdi rdx rip rsi rsp 
write: esi r13 rbp rflags rsp 
--------------------------------------------------------------------------------
000351f0: CLP; movabs rdx, 0x7fffffffffffffff ; movabs rax, 0x7ff0000000000000 ; movq rcx, xmm0 ; and rdx, rcx ; sar rcx, 0x3e ; xor rdx, rax ; mov rax, rdx ; neg rax ; or rax, rdx ; sar rax, 0x3f ; not eax ; and eax, ecx ; ret
read: eax ecx rax rcx rdx xmm0 
write: eax rax rcx rdx rflags 
--------------------------------------------------------------------------------
00035230: CLP; movabs rax, 0x7fffffffffffffff ; movq rdx, xmm0 ; and rdx, rax ; movabs rax, 0x7ff0000000000000 ; sub rax, rdx ; shr rax, 0x3f ; ret
read: rax rdx xmm0 
write: rax rdx rflags 
--------------------------------------------------------------------------------
00035260: CLP; movabs rdx, 0x7fffffffffffffff ; movq rax, xmm0 ; and rax, rdx ; movabs rdx, 0x8010000000000000 ; add rax, rdx ; shr rax, 0x3f ; ret
read: rax rdx xmm0 
write: rax rdx rflags 
--------------------------------------------------------------------------------
00035290: CLP; andpd xmm0, xmmword ptr [rip + 0x108184] ; andpd xmm1, xmmword ptr [rip + 0x10816c] ; orpd xmm0, xmm1 ; ret
read: xmm0 xmm1 
write: xmm0 xmm1 
--------------------------------------------------------------------------------
000352b0: CLP; movq rax, xmm0 ; mov rcx, rax ; sar rcx, 0x34 ; and ecx, 0x7ff ; sub ecx, 0x3ff ; cmp ecx, 0x33 ; jg 0x352fc
read: ecx rax rcx rflags xmm0 
write: ecx rax rcx rflags 
--------------------------------------------------------------------------------
00035370: CLP; movq rax, xmm0 ; mov rdx, rax ; sar rdx, 0x34 ; and edx, 0x7ff ; je 0x35421
read: edx rax rdx rflags xmm0 
write: edx rax rdx rflags 
--------------------------------------------------------------------------------
00035490: CLP; movq rcx, xmm0 ; mov rax, rcx ; sar rax, 0x34 ; and eax, 0x7ff ; cmp eax, 0x7ff ; je 0x354ec
read: eax rax rcx rflags xmm0 
write: eax rax rcx rflags 
--------------------------------------------------------------------------------
00035520: CLP; movabs rdx, 0x7fffffffffffffff ; sub rsp, 8 ; movq rax, xmm0 ; and rax, rdx ; movabs rdx, 0x7fefffffffffffff ; cmp rax, rdx ; movapd xmm1, xmm0 ; ja 0x35559
read: rax rdx rflags rsp xmm0 
write: rax rdx rflags rsp xmm1 
--------------------------------------------------------------------------------
000355c0: CLP; pmovmskb eax, xmm0 ; and eax, 0x80 ; ret
read: eax xmm0 
write: eax rflags 
--------------------------------------------------------------------------------
000355d0: CLP; movd ecx, xmm0 ; mov edx, ecx ; sar ecx, 0x1e ; and edx, 0x7fffffff ; xor edx, 0x7f800000 ; mov eax, edx ; neg eax ; or eax, edx ; sar eax, 0x1f ; not eax ; and eax, ecx ; ret
read: eax ecx edx xmm0 
write: eax ecx edx rflags 
--------------------------------------------------------------------------------
00035600: CLP; movd edx, xmm0 ; mov eax, 0x7f800000 ; and edx, 0x7fffffff ; sub eax, edx ; shr eax, 0x1f ; ret
read: eax edx xmm0 
write: eax edx rflags 
--------------------------------------------------------------------------------
00035620: CLP; movd eax, xmm0 ; and eax, 0x7fffffff ; sub eax, 0x7f800000 ; shr eax, 0x1f ; ret
read: eax xmm0 
write: eax rflags 
--------------------------------------------------------------------------------
00035640: CLP; movss xmm3, dword ptr [rip + 0xf6054] ; andps xmm0, xmm3 ; andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
read: xmm0 xmm1 xmm3 
write: xmm0 xmm3 
--------------------------------------------------------------------------------
00035660: CLP; movd eax, xmm0 ; mov ecx, eax ; sar ecx, 0x17 ; movzx ecx, cl ; sub ecx, 0x7f ; cmp ecx, 0x16 ; jg 0x356ba
read: cl eax ecx rflags xmm0 
write: eax ecx rflags 
--------------------------------------------------------------------------------
000356e0: CLP; movd edx, xmm0 ; mov eax, edx ; and eax, 0x7f800000 ; sar eax, 0x17 ; test eax, eax ; je 0x35768
read: eax edx rflags xmm0 
write: eax edx rflags 
--------------------------------------------------------------------------------
000357c0: CLP; movd eax, xmm0 ; mov edx, eax ; mov dword ptr [rdi], 0 ; and edx, 0x7fffffff ; je 0x35816
read: eax edx rflags xmm0 
write: eax edx rflags 
--------------------------------------------------------------------------------
00035820: CLP; movd eax, xmm0 ; and eax, 0x7fffffff ; sub rsp, 8 ; cmp eax, 0x7f7fffff ; movaps xmm1, xmm0 ; ja 0x35844
read: eax rflags rsp xmm0 
write: eax rflags rsp xmm1 
--------------------------------------------------------------------------------
00035890: CLP; pmovmskb eax, xmm0 ; and eax, 8 ; ret
read: eax xmm0 
write: eax rflags 
--------------------------------------------------------------------------------
000358a0: CLP; fld xword ptr [rsp + 8] ; fstp xword ptr [rsp - 0x18] ; movsx ecx, word ptr [rsp - 0x10] ; mov eax, dword ptr [rsp - 0x14] ; lea edx, [rax - 0x80000000] ; or edx, dword ptr [rsp - 0x18] ; mov eax, ecx ; and ecx, 0x8000 ; not eax ; sar ecx, 0xe ; and eax, 0x7fff ; or edx, eax ; mov eax, edx ; neg eax ; or eax, edx
read: eax ecx edx 
write: eax ecx edx fpsw rflags 
--------------------------------------------------------------------------------
000358f0: CLP; fld xword ptr [rsp + 8] ; fstp xword ptr [rsp - 0x18] ; mov eax, dword ptr [rsp - 0x14] ; movsx ecx, word ptr [rsp - 0x10] ; and eax, 0x7fffffff ; or eax, dword ptr [rsp - 0x18] ; add ecx, ecx ; mov edx, eax ; neg edx ; or edx, eax ; movzx eax, cx ; shr edx, 0x1f ; or edx, eax ; mov eax, 0xfffe ; sub eax, edx
read: cx eax ecx edx 
write: eax ecx edx fpsw rflags 
--------------------------------------------------------------------------------
00035930: CLP; mov eax, dword ptr [rsp + 0x10] ; or eax, 0xffff8000 ; inc eax ; shr eax, 0x1f ; ret
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
00035950: CLP; mov edx, dword ptr [rsp + 0x20] ; mov eax, dword ptr [rsp + 0x10] ; and edx, 0x8000 ; and eax, 0x7fff ; or eax, edx ; mov dword ptr [rsp + 0x10], eax ; fld xword ptr [rsp + 8] ; ret
read: eax edx 
write: eax edx fpsw rflags 
--------------------------------------------------------------------------------
00035980: CLP; fld xword ptr [rsp + 8] ; fld st(0) ; fstp xword ptr [rsp - 0x18] ; movzx eax, word ptr [rsp - 0x10] ; mov r9d, dword ptr [rsp - 0x14] ; mov r8d, dword ptr [rsp - 0x18] ; mov edx, eax ; and edx, 0x7fff ; lea ecx, [rdx - 0x3fff] ; cmp ecx, 0x1f ; jg 0x359ec
read: eax ecx edx rflags st0 
write: eax ecx edx fpsw r8d r9d rflags 
--------------------------------------------------------------------------------
00035aa0: CLP; mov dword ptr [rsp - 4], edi ; fild dword ptr [rsp - 4] ; fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
read: edi st1 
write: fpsw 
--------------------------------------------------------------------------------
00035ac0: CLP; fld xword ptr [rsp + 8] ; mov dword ptr [rdi], 0 ; fld st(0) ; fstp xword ptr [rsp - 0x18] ; movsx edx, word ptr [rsp - 0x10] ; mov ecx, dword ptr [rsp - 0x14] ; mov esi, dword ptr [rsp - 0x18] ; mov eax, edx ; and eax, 0x7fff ; cmp eax, 0x7fff ; je 0x35b3e
read: eax edx rflags st0 
write: eax ecx edx esi fpsw rflags 
--------------------------------------------------------------------------------
00035b50: CLP; push rbx ; mov ebx, edi ; sub rsp, 0x20 ; fld xword ptr [rsp + 0x30] ; fld st(0) ; fstp xword ptr [rsp] ; fstp xword ptr [rsp + 0x10] ; call 0x3592c
read: edi rbx rip rsp st0 
write: ebx fpsw rflags rsp 
--------------------------------------------------------------------------------
00035bf0: CLP; fld xword ptr [rsp + 8] ; fstp xword ptr [rsp - 0x18] ; movsx eax, word ptr [rsp - 0x10] ; and eax, 0x8000 ; ret
read: eax 
write: eax fpsw rflags 
--------------------------------------------------------------------------------
00035c10: CLP; fnstcw word ptr [rsp - 2] ; movzx eax, word ptr [rsp - 2] ; and di, 0xf3f ; and ax, 0xf0c0 ; or edi, eax ; mov word ptr [rsp - 2], di ; fldcw word ptr [rsp - 2] ; ret
read: ax di eax edi 
write: ax di eax edi rflags 
--------------------------------------------------------------------------------
00035c40: CLP; mov qword ptr [rdi], rbx ; mov rax, rbp ; xor rax, qword ptr fs:[0x30] ; rol rax, 0x11 ; mov qword ptr [rdi + 8], rax ; mov qword ptr [rdi + 0x10], r12 ; mov qword ptr [rdi + 0x18], r13 ; mov qword ptr [rdi + 0x20], r14 ; mov qword ptr [rdi + 0x28], r15 ; lea rdx, [rsp + 8] ; xor rdx, qword ptr fs:[0x30] ; rol rdx, 0x11 ; mov qword ptr [rdi + 0x30], rdx ; mov rax, qword ptr [rsp] ; xor rax, qword ptr fs:[0x30]
read: r12 r13 r14 r15 rax rbp rbx rdx 
write: rax rdx rflags 
--------------------------------------------------------------------------------
00035ca0: CLP; xor eax, eax ; test esi, esi ; push rbx ; mov rbx, rdi ; je 0x35cc3
read: eax esi rbx rdi rflags rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
00035cd0: CLP; mov esi, 1 ; jmp 0x35c3c
read: 
write: esi 
--------------------------------------------------------------------------------
00035ce0: CLP; xor esi, esi ; jmp 0x35c3c
read: esi 
write: esi rflags 
--------------------------------------------------------------------------------
00035cf0: CLP; push rbp ; mov ebp, esi ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; call 0x35d9c
read: esi rbp rbx rdi rip rsp 
write: ebp rbx rflags rsp 
--------------------------------------------------------------------------------
00035d40: CLP; mov r8, qword ptr [rdi + 0x30] ; mov r9, qword ptr [rdi + 8] ; mov rdx, qword ptr [rdi + 0x38] ; ror r8, 0x11 ; xor r8, qword ptr fs:[0x30] ; ror r9, 0x11 ; xor r9, qword ptr fs:[0x30] ; ror rdx, 0x11 ; xor rdx, qword ptr fs:[0x30] ; mov rbx, qword ptr [rdi] ; mov r12, qword ptr [rdi + 0x10] ; mov r13, qword ptr [rdi + 0x18] ; mov r14, qword ptr [rdi + 0x20] ; mov r15, qword ptr [rdi + 0x28] ; mov eax, esi
read: esi r8 r9 rdx 
write: eax r12 r13 r14 r15 r8 r9 rbx rdx rflags 
--------------------------------------------------------------------------------
00035da0: CLP; mov eax, dword ptr [rip + 0x3389c6] ; test eax, eax ; jne 0x35dac
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00035de0: CLP; lea edx, [rdi - 1] ; mov r8d, edi ; cmp edx, 0x3f ; ja 0x35e6c
read: edi edx rflags 
write: edx r8d rflags 
--------------------------------------------------------------------------------
00035e90: CLP; mov eax, dword ptr fs:[0x2d4] ; mov ecx, eax ; mov esi, dword ptr fs:[0x2d0] ; test esi, esi ; jne 0x35edc
read: eax esi rflags 
write: eax ecx esi rflags 
--------------------------------------------------------------------------------
00035f10: CLP; test edi, edi ; js 0x35f2c
read: edi rflags 
write: rflags 
--------------------------------------------------------------------------------
00035f60: CLP; mov rax, 0xf ; syscall ; nop dword ptr [rax] ; nop dword ptr [rax - 0x56] ; sub rsp, 0xd0 ; test rsi, rsi ; mov r8, rdx ; je 0x3603b
read: rdx rflags rsi rsp 
write: r8 rax rflags rsp 
--------------------------------------------------------------------------------
00035f70: CLP; sub rsp, 0xd0 ; test rsi, rsi ; mov r8, rdx ; je 0x3603b
read: rdx rflags rsi rsp 
write: r8 rflags rsp 
--------------------------------------------------------------------------------
00036180: CLP; lea eax, [rdi - 0x20] ; cmp eax, 1 ; jbe 0x3619a
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000361b0: CLP; mov r10d, 8 ; movsxd rdi, edi ; mov eax, 0xe ; syscall ; cmp rax, -0x1000 ; ja 0x361ca
read: edi rax rflags 
write: eax r10d rdi rflags 
--------------------------------------------------------------------------------
000361e0: CLP; mov eax, 0x3e ; syscall ; cmp rax, -0xfff ; jae 0x361f0
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00036210: CLP; mov esi, 8 ; mov eax, 0x7f ; syscall ; cmp rax, -0x1000 ; ja 0x36226
read: rax rflags 
write: eax esi rflags 
--------------------------------------------------------------------------------
00036240: CLP; mov eax, dword ptr [rip + 0x33852a] ; test eax, eax ; jne 0x36270
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000362d0: CLP; mov esi, 8 ; mov eax, 0x82 ; syscall ; cmp rax, -0x1000 ; ja 0x362e6
read: rax rflags 
write: eax esi rflags 
--------------------------------------------------------------------------------
00036300: CLP; push rbx ; mov rbx, rsi ; sub rsp, 8 ; test rdi, rdi ; je 0x3636c
read: rbx rdi rflags rsi rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
000363a0: CLP; push rbp ; push rbx ; sub rsp, 0x18 ; mov eax, dword ptr [rip + 0x3383c4] ; test eax, eax ; jne 0x363c0
read: eax rbp rbx rflags rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
00036400: CLP; sub rsp, 0x108 ; mov eax, edi ; mov qword ptr [rsp], rax ; lea rdx, [rsp + 0x80] ; lea rax, [rsp + 8] ; mov rsi, rsp ; nop dword ptr [rax] ; add rax, 8 ; mov qword ptr [rax - 8], 0 ; cmp rax, rdx ; jne 0x36424
read: edi rax rdx rflags rsp 
write: eax rax rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00036470: CLP; sub rsp, 0x108 ; mov eax, edi ; mov qword ptr [rsp], rax ; lea rdx, [rsp + 0x80] ; lea rax, [rsp + 8] ; mov rsi, rsp ; nop dword ptr [rax] ; add rax, 8 ; mov qword ptr [rax - 8], 0 ; cmp rax, rdx ; jne 0x36494
read: edi rax rdx rflags rsp 
write: eax rax rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000364e0: CLP; push rbp ; mov ebp, edi ; push rbx ; sub rsp, 0x88 ; test esi, esi ; jne 0x3653c
read: edi esi rbp rbx rflags rsp 
write: ebp rflags rsp 
--------------------------------------------------------------------------------
00036570: CLP; push rbp ; push rbx ; sub rsp, 0x18 ; mov eax, dword ptr [rip + 0x3381f4] ; test eax, eax ; jne 0x36590
read: eax rbp rbx rflags rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
000365d0: CLP; sub rsp, 8 ; xor esi, esi ; call 0x3656c
read: esi rip rsp 
write: esi rflags rsp 
--------------------------------------------------------------------------------
000365f0: CLP; sub rsp, 8 ; mov esi, 1 ; call 0x3656c
read: rip rsp 
write: esi rflags rsp 
--------------------------------------------------------------------------------
00036610: CLP; push rbx ; mov rbx, rdx ; sub rsp, 0x140 ; test rsi, rsi ; je 0x366fc
read: rbx rdx rflags rsi rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
00036710: CLP; push rbx ; mov rbx, rsi ; xor esi, esi ; sub rsp, 0x40 ; test rbx, rbx ; lea rdx, [rsp + 0x20] ; cmovne rsi, rdx ; test rdi, rdi ; je 0x3677c
read: esi rbx rdi rdx rflags rsi rsp 
write: esi rbx rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00036790: CLP; mov eax, 0x83 ; syscall ; cmp rax, -0xfff ; jae 0x367a0
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000367c0: CLP; push r12 ; mov r12d, esi ; xor esi, esi ; push rbp ; push rbx ; mov ebx, edi ; sub rsp, 0xa0 ; mov rdx, rsp ; mov rbp, rsp ; call 0x3617c
read: edi esi r12 rbp rbx rip rsp 
write: ebx esi r12d rbp rdx rflags rsp 
--------------------------------------------------------------------------------
00036880: CLP; lea ecx, [rsi - 1] ; mov edx, 1 ; movsxd rax, ecx ; shl rdx, cl ; shr rax, 6 ; test qword ptr [rdi + rax*8], rdx ; setne al ; movzx eax, al ; ret
read: al cl ecx rax rdx rflags 
write: al eax ecx edx rax rdx rflags 
--------------------------------------------------------------------------------
000368b0: CLP; lea ecx, [rsi - 1] ; mov edx, 1 ; movsxd rax, ecx ; shl rdx, cl ; shr rax, 6 ; or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
read: cl eax ecx rax rdx 
write: eax ecx edx rax rdx rflags 
--------------------------------------------------------------------------------
000368d0: CLP; lea ecx, [rsi - 1] ; mov eax, 1 ; movsxd rdx, ecx ; shl rax, cl ; shr rdx, 6 ; not rax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
read: cl eax ecx rax rdx 
write: eax ecx rax rdx rflags 
--------------------------------------------------------------------------------
000368f0: CLP; test rdi, rdi ; je 0x369a4
read: rdi rflags 
write: rflags 
--------------------------------------------------------------------------------
000369c0: CLP; test rdi, rdi ; je 0x36a54
read: rdi rflags 
write: rflags 
--------------------------------------------------------------------------------
00036a70: CLP; lea ecx, [rsi - 1] ; cmp ecx, 0x3f ; ja 0x36a8c
read: ecx rflags 
write: ecx rflags 
--------------------------------------------------------------------------------
00036ab0: CLP; lea ecx, [rsi - 1] ; cmp ecx, 0x3f ; ja 0x36ad4
read: ecx rflags 
write: ecx rflags 
--------------------------------------------------------------------------------
00036af0: CLP; lea ecx, [rsi - 1] ; cmp ecx, 0x3f ; ja 0x36b14
read: ecx rflags 
write: ecx rflags 
--------------------------------------------------------------------------------
00036b30: CLP; mov rax, qword ptr [rip + 0x33232d] ; mov dword ptr fs:[rax], 0x26 ; mov eax, 0xffffffff ; ret
read: 
write: eax rax 
--------------------------------------------------------------------------------
00036b50: CLP; sub rsp, 8 ; xor edi, edi ; call 0x363fc
read: edi rip rsp 
write: edi rflags rsp 
--------------------------------------------------------------------------------
00036b70: CLP; lea eax, [rdi - 1] ; mov r8d, edi ; cmp eax, 0x3f ; ja 0x36bdc
read: eax edi rflags 
write: eax r8d rflags 
--------------------------------------------------------------------------------
00036c00: CLP; test rdi, rdi ; je 0x36c2f
read: rdi rflags 
write: rflags 
--------------------------------------------------------------------------------
00036c50: CLP; test rdi, rdi ; je 0x36c80
read: rdi rflags 
write: rflags 
--------------------------------------------------------------------------------
00036ca0: CLP; test rdi, rdi ; je 0x36cd0
read: rdi rflags 
write: rflags 
--------------------------------------------------------------------------------
00036cf0: CLP; mov eax, dword ptr [rip + 0x332372] ; ret
read: 
write: eax 
--------------------------------------------------------------------------------
00036d00: CLP; mov eax, dword ptr [rip + 0x33235e] ; ret
read: 
write: eax 
--------------------------------------------------------------------------------
00036d10: CLP; mov eax, dword ptr [rip + 0x332352] ; cmp eax, -1 ; je 0x36d41
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00036d60: CLP; sub rsp, 0x10 ; test rdi, rdi ; mov r8, rsi ; je 0x36dc4
read: rdi rflags rsi rsp 
write: r8 rflags rsp 
--------------------------------------------------------------------------------
00036e00: CLP; push rbp ; push rbx ; sub rsp, 0x28 ; mov eax, dword ptr [rip + 0x337964] ; test eax, eax ; jne 0x36e20
read: eax rbp rbx rflags rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
00036e70: CLP; sub rsp, 0x10 ; test rdi, rdi ; mov r8, rsi ; je 0x36ed4
read: rdi rflags rsi rsp 
write: r8 rflags rsp 
--------------------------------------------------------------------------------
00036f10: CLP; push rbp ; push rbx ; sub rsp, 0x18 ; mov eax, dword ptr [rip + 0x337854] ; test eax, eax ; jne 0x36f30
read: eax rbp rbx rflags rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
00036f70: CLP; push r13 ; xor eax, eax ; mov ecx, 0x10 ; mov r13, rdx ; push r12 ; mov r12d, edi ; push rbp ; mov ebp, esi ; push rbx ; sub rsp, 0x88 ; mov rdi, rsp ; rep stosq qword ptr [rdi], rax ; mov dword ptr [rsp], esi ; mov dword ptr [rsp + 8], 0xffffffff ; call 0xb3d6c
read: eax edi esi r12 r13 rax rbp rbx rcx rdi rdx rflags rip rsp 
write: eax ebp ecx r12d r13 rcx rdi rflags rsp 
--------------------------------------------------------------------------------
00037000: CLP; push rbp ; xor esi, esi ; mov ebp, edi ; mov edi, 2 ; push rbx ; sub rsp, 0x88 ; mov rdx, rsp ; call 0x361ac
read: edi esi rbp rbx rip rsp 
write: ebp edi esi rdx rflags rsp 
--------------------------------------------------------------------------------
00037060: CLP; push rbp ; xor esi, esi ; mov ebp, edi ; mov edi, 2 ; push rbx ; sub rsp, 0x88 ; mov rdx, rsp ; call 0x361ac
read: edi esi rbp rbx rip rsp 
write: ebp edi esi rdx rflags rsp 
--------------------------------------------------------------------------------
000370c0: CLP; sub rsp, 0xa8 ; mov r8d, edi ; xor eax, eax ; lea rdx, [rsp + 8] ; mov ecx, 0x10 ; mov rsi, rsp ; mov qword ptr [rsp], 1 ; mov dword ptr [rsp + 0x88], 0 ; mov rdi, rdx ; xor edx, edx ; rep stosq qword ptr [rdi], rax ; mov edi, r8d ; call 0x3617c
read: eax edi edx r8d rax rcx rdi rdx rflags rip rsp 
write: eax ecx edi edx r8d rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00037110: CLP; push r12 ; push rbp ; push rbx ; mov ebx, edi ; sub rsp, 0x240 ; cmp rsi, 2 ; je 0x371fc
read: edi r12 rbp rbx rflags rsi rsp 
write: ebx rflags rsp 
--------------------------------------------------------------------------------
00037280: CLP; sub rsp, 8 ; xor esi, esi ; call 0x3aaac
read: esi rip rsp 
write: esi rflags rsp 
--------------------------------------------------------------------------------
000372a0: CLP; sub rsp, 8 ; mov edx, 0xa ; xor esi, esi ; call 0x3a03c
read: esi rip rsp 
write: edx esi rflags rsp 
--------------------------------------------------------------------------------
000372c0: CLP; sub rsp, 8 ; mov edx, 0xa ; xor esi, esi ; call 0x3a03c
read: esi rip rsp 
write: edx esi rflags rsp 
--------------------------------------------------------------------------------
000372e0: CLP; sub rsp, 8 ; mov edx, 0xa ; xor esi, esi ; call 0x3a03c
read: esi rip rsp 
write: edx esi rflags rsp 
--------------------------------------------------------------------------------
00037300: CLP; sub rsp, 0x128 ; mov rdx, qword ptr fs:[0x10] ; cmp rdx, qword ptr [rip + 0x3338fd] ; je 0x37363
read: rdx rflags rsp 
write: rdx rflags rsp 
--------------------------------------------------------------------------------
000375a0: CLP; push r15 ; xor r15d, r15d ; push r14 ; mov r14, rdx ; push r13 ; mov r13, rcx ; push r12 ; mov r12, r8 ; push rbp ; push rbx ; sub rsp, 0x18 ; test rdx, rdx ; mov qword ptr [rsp], rdi ; mov qword ptr [rsp + 8], rsi ; jne 0x375d7
read: r12 r13 r14 r15 r15d r8 rbp rbx rcx rdi rdx rflags rsi rsp 
write: r12 r13 r14 r15d rflags rsp 
--------------------------------------------------------------------------------
00037640: CLP; push r15 ; mov rax, rdx ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x448 ; test rsi, rsi ; mov qword ptr [rsp + 0x30], rdi ; mov qword ptr [rsp], rdx ; je 0x37814
read: r12 r13 r14 r15 rbp rbx rdi rdx rflags rsi rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
00037ad0: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; mov rbp, rdx ; shr rbp, 1 ; push rbx ; mov r8, rbp ; mov rbx, rdx ; sub rbx, rbp ; sub rsp, 0x38 ; imul r8, qword ptr [rdi] ; cmp rbp, 1 ; mov qword ptr [rsp + 0x18], rdi
read: r12 r13 r14 r15 r8 rbp rbx rdi rdx rsp 
write: r8 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00037e20: CLP; push rbp ; mov rbp, rsp ; push r15 ; mov r15, rcx ; push r14 ; mov r14, rdi ; push r13 ; push r12 ; push rbx ; mov rbx, rdx ; sub rsp, 0x68 ; cmp rdx, 0x20 ; mov qword ptr [rbp - 0x80], rsi ; ja 0x38014
read: r12 r13 r14 r15 rbp rbx rcx rdi rdx rflags rsi rsp 
write: r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00038180: CLP; sub rsp, 8 ; xor r8d, r8d ; call 0x37e1c
read: r8d rip rsp 
write: r8d rflags rsp 
--------------------------------------------------------------------------------
000381a0: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; call 0x856dc
read: r12 r13 r14 r15 rbp rbx rdi rip rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
00038290: CLP; push rbp ; mov esi, 0x3d ; mov rbp, rsp ; push r12 ; push rbx ; mov rbx, rdi ; sub rsp, 0x10 ; call 0x83a5c
read: r12 rbp rbx rdi rip rsp 
write: esi rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00038390: CLP; push rbp ; mov rbp, rsp ; push r15 ; push r14 ; push r13 ; mov r13, rdi ; push r12 ; push rbx ; mov rbx, rsi ; sub rsp, 0x28 ; mov qword ptr [rbp - 0x50], rsi ; mov qword ptr [rbp - 0x38], rdx ; mov dword ptr [rbp - 0x3c], ecx ; call 0x856dc
read: ecx r12 r13 r14 r15 rbp rbx rdi rdx rip rsi rsp 
write: r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00038700: CLP; push r12 ; test rdi, rdi ; push rbp ; push rbx ; mov rbx, rdi ; je 0x3874c
read: r12 rbp rbx rdi rflags rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
00038770: CLP; push r13 ; push r12 ; mov r12, rdi ; push rbp ; push rbx ; sub rsp, 8 ; test rdi, rdi ; je 0x388ac
read: r12 r13 rbp rbx rdi rflags rsp 
write: r12 rflags rsp 
--------------------------------------------------------------------------------
000388d0: CLP; push rbx ; mov esi, 1 ; xor eax, eax ; cmp dword ptr [rip + 0x335e91], 0 ; je 0x388ed
read: eax rbx rflags rsp 
write: eax esi rflags rsp 
--------------------------------------------------------------------------------
00038990: CLP; mov rdx, qword ptr [rip + 0x33048d] ; xor eax, eax ; mov edx, dword ptr [rdx] ; test edx, edx ; jne 0x389b0
read: eax edx rflags 
write: eax edx rdx rflags 
--------------------------------------------------------------------------------
000389c0: CLP; push r13 ; push r12 ; mov r12d, edx ; push rbp ; mov rbp, rsi ; push rbx ; mov ebx, edi ; sub rsp, 8 ; call 0x3909c
read: edi edx r12 r13 rbp rbx rip rsi rsp 
write: ebx r12d rbp rflags rsp 
--------------------------------------------------------------------------------
00038af0: CLP; lea rsi, [rip + 0x330aad] ; sub rsp, 8 ; mov edx, 1 ; call 0x389bc
read: rip rsp 
write: edx rflags rsi rsp 
--------------------------------------------------------------------------------
00038b10: CLP; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; lea rdi, [rip + 0x330a85] ; sub rsp, 8 ; call 0x38b6c
read: rbp rbx rdi rip rsi rsp 
write: rbp rbx rdi rflags rsp 
--------------------------------------------------------------------------------
00038b70: CLP; push rbp ; mov esi, 1 ; xor eax, eax ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; cmp dword ptr [rip + 0x335be9], 0 ; je 0x38b95
read: eax rbp rbx rdi rflags rsp 
write: eax esi rbx rflags rsp 
--------------------------------------------------------------------------------
00038d10: CLP; push r12 ; mov r12, rsi ; push rbp ; mov rbp, rdx ; push rbx ; mov rbx, rdi ; mov rdi, rcx ; call 0x38b6c
read: r12 rbp rbx rcx rdi rdx rip rsi rsp 
write: r12 rbp rbx rdi rsp 
--------------------------------------------------------------------------------
00038d70: CLP; push r12 ; mov r12, rsi ; push rbp ; mov rbp, rdx ; push rbx ; mov rbx, rdi ; lea rdi, [rip + 0x330820] ; call 0x38b6c
read: r12 rbp rbx rdi rdx rip rsi rsp 
write: r12 rbp rbx rdi rsp 
--------------------------------------------------------------------------------
00038dd0: CLP; push r15 ; push r14 ; push r13 ; xor r13d, r13d ; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 8 ; mov r14, qword ptr [rip + 0x3307b9] ; test r14, r14 ; je 0x38e98
read: r12 r13 r13d r14 r15 rbp rbx rdi rflags rsp 
write: r13d r14 rbp rflags rsp 
--------------------------------------------------------------------------------
00038f20: CLP; lea rsi, [rip + 0x330685] ; sub rsp, 8 ; xor edx, edx ; call 0x389bc
read: edx rip rsp 
write: edx rflags rsi rsp 
--------------------------------------------------------------------------------
00038f40: CLP; lea rcx, [rip + 0x330665] ; sub rsp, 8 ; mov rdx, rsi ; xor esi, esi ; call 0x38d0c
read: esi rip rsi rsp 
write: esi rcx rdx rflags rsp 
--------------------------------------------------------------------------------
00038f70: CLP; push r13 ; mov r13, rdx ; push r12 ; mov r12, rdi ; mov edi, 1 ; push rbp ; mov rbp, rsi ; mov esi, 0x20 ; push rbx ; sub rsp, 8 ; call 0x1f44c
read: r12 r13 rbp rbx rdi rdx rip rsi rsp 
write: edi esi r12 r13 rbp rflags rsp 
--------------------------------------------------------------------------------
000390a0: CLP; push r12 ; push rbp ; push rbx ; lea rdi, [rip + 0x32fce1] ; call 0x1f3ec
read: r12 rbp rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
00039190: CLP; mov edx, edi ; mov eax, edi ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
read: eax edi edx 
write: eax edx rflags 
--------------------------------------------------------------------------------
000391a0: CLP; mov rdx, rdi ; mov rax, rdi ; sar rdx, 0x3f ; xor rax, rdx ; sub rax, rdx ; ret
read: rax rdi rdx 
write: rax rdx rflags 
--------------------------------------------------------------------------------
000391c0: CLP; mov rdx, rdi ; mov rax, rdi ; sar rdx, 0x3f ; xor rax, rdx ; sub rax, rdx ; ret
read: rax rdi rdx 
write: rax rdx rflags 
--------------------------------------------------------------------------------
000391e0: CLP; mov eax, edi ; cdq ; idiv esi ; shl rdx, 0x20 ; mov eax, eax ; or rax, rdx ; ret
read: eax edi edx esi rax rdx 
write: eax edx rax rdx rflags 
--------------------------------------------------------------------------------
00039200: CLP; mov rax, rdi ; cqo ; idiv rsi ; ret
read: rax rdi rdx rsi 
write: rax rdx rflags 
--------------------------------------------------------------------------------
00039210: CLP; mov rax, rdi ; cqo ; idiv rsi ; ret
read: rax rdi rdx rsi 
write: rax rdx rflags 
--------------------------------------------------------------------------------
00039220: CLP; test rdi, rdi ; push rbx ; je 0x3926c
read: rbx rdi rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000392d0: CLP; sub rsp, 0x28 ; mov qword ptr [rsp + 8], rsi ; lea rcx, [rsp + 0x10] ; lea rsi, [rsp + 8] ; mov qword ptr [rsp + 0x10], 0 ; call 0x96d9c
read: rip rsi rsp 
write: rcx rflags rsi rsp 
--------------------------------------------------------------------------------
00039300: CLP; test rsi, rsi ; push rbx ; je 0x39344
read: rbx rflags rsi rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000393a0: CLP; sub rsp, 0x28 ; mov qword ptr [rsp + 8], rsi ; lea rcx, [rsp + 0x10] ; lea rsi, [rsp + 8] ; mov qword ptr [rsp + 0x10], 0 ; call 0x96ddc
read: rip rsi rsp 
write: rcx rflags rsi rsp 
--------------------------------------------------------------------------------
000393d0: CLP; test rdi, rdi ; push rbx ; je 0x393ec
read: rbx rdi rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00039450: CLP; sub rsp, 8 ; mov edx, edi ; mov esi, 1 ; xor eax, eax ; cmp dword ptr [rip + 0x33530c], 0 ; je 0x39472
read: eax edi rflags rsp 
write: eax edx esi rflags rsp 
--------------------------------------------------------------------------------
000394f0: CLP; mov r10, rsi ; push rbx ; mov r9d, edi ; mov esi, 1 ; xor eax, eax ; cmp dword ptr [rip + 0x33526b], 0 ; je 0x39513
read: eax edi rbx rflags rsi rsp 
write: eax esi r10 r9d rflags rsp 
--------------------------------------------------------------------------------
000395b0: CLP; push rbx ; mov rdx, rdi ; mov esi, 1 ; xor eax, eax ; cmp dword ptr [rip + 0x3351ae], 0 ; je 0x395d0
read: eax rbx rdi rflags rsp 
write: eax esi rdx rflags rsp 
--------------------------------------------------------------------------------
00039670: CLP; sub rsp, 0x18 ; mov esi, 1 ; xor eax, eax ; cmp dword ptr [rip + 0x3350ee], 0 ; je 0x39690
read: eax rflags rsp 
write: eax esi rflags rsp 
--------------------------------------------------------------------------------
00039720: CLP; test rdi, rdi ; lea rcx, [rdi + 4] ; je 0x397f4
read: rdi rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
00039810: CLP; test rdi, rdi ; je 0x39894
read: rdi rflags 
write: rflags 
--------------------------------------------------------------------------------
000398b0: CLP; push r12 ; push rbp ; mov rbp, rsi ; push rbx ; sub rsp, 0x10 ; test rsi, rsi ; je 0x3998e
read: r12 rbp rbx rflags rsi rsp 
write: rbp rflags rsp 
--------------------------------------------------------------------------------
000399a0: CLP; push r13 ; push r12 ; push rbp ; push rbx ; mov rbx, rcx ; sub rsp, 8 ; test rcx, rcx ; je 0x39adc
read: r12 r13 rbp rbx rcx rflags rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
00039b00: CLP; sub rsp, 8 ; call 0x3966c
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00039b20: CLP; mov eax, dword ptr [rdi] ; imul ecx, eax, 0x41c64e6d ; add ecx, 0x3039 ; mov eax, ecx ; imul ecx, ecx, 0x41c64e6d ; shr eax, 6 ; and eax, 0x1ffc00 ; add ecx, 0x3039 ; mov edx, ecx ; imul ecx, ecx, 0x41c64e6d ; shr edx, 0x10 ; and edx, 0x3ff ; xor eax, edx ; add ecx, 0x3039 ; shl eax, 0xa
read: eax ecx edx 
write: eax ecx edx rflags 
--------------------------------------------------------------------------------
00039b80: CLP; sub rsp, 0x18 ; lea rsi, [rip + 0x334921] ; lea rdx, [rsp + 8] ; mov rdi, rsi ; call 0x39d2c
read: rip rsi rsp 
write: rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00039bb0: CLP; sub rsp, 0x18 ; lea rsi, [rip + 0x3348f1] ; lea rdx, [rsp + 8] ; call 0x39d2c
read: rip rsp 
write: rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00039be0: CLP; sub rsp, 0x18 ; lea rsi, [rip + 0x3348c1] ; lea rdx, [rsp + 8] ; mov rdi, rsi ; call 0x39dec
read: rip rsi rsp 
write: rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00039c10: CLP; sub rsp, 0x18 ; lea rsi, [rip + 0x334891] ; lea rdx, [rsp + 8] ; call 0x39dec
read: rip rsp 
write: rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00039c40: CLP; sub rsp, 0x18 ; lea rsi, [rip + 0x334861] ; lea rdx, [rsp + 8] ; mov rdi, rsi ; call 0x39e6c
read: rip rsi rsp 
write: rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00039c70: CLP; sub rsp, 0x18 ; lea rsi, [rip + 0x334831] ; lea rdx, [rsp + 8] ; call 0x39e6c
read: rip rsp 
write: rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00039ca0: CLP; lea rsi, [rip + 0x334805] ; sub rsp, 8 ; call 0x39ebc
read: rip rsp 
write: rflags rsi rsp 
--------------------------------------------------------------------------------
00039cc0: CLP; lea rsi, [rip + 0x3347e5] ; sub rsp, 8 ; call 0x39efc
read: rip rsp 
write: rflags rsi rsp 
--------------------------------------------------------------------------------
00039cf0: CLP; lea rsi, [rip + 0x3347b5] ; sub rsp, 8 ; call 0x39f4c
read: rip rsp 
write: rflags rsi rsp 
--------------------------------------------------------------------------------
00039d10: CLP; sub rsp, 8 ; mov rdx, rsi ; mov rsi, rdi ; call 0x39d2c
read: rdi rip rsi rsp 
write: rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00039d30: CLP; push rbp ; mov rbp, rdx ; push rbx ; mov rbx, rdi ; sub rsp, 0x18 ; call 0x39f9c
read: rbp rbx rdi rdx rip rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00039dc0: CLP; test rdi, rdi ; je 0x39de4
read: rdi rflags 
write: rflags 
--------------------------------------------------------------------------------
00039df0: CLP; push rbp ; mov rbp, rdx ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; call 0x39f9c
read: rbp rbx rdi rdx rip rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00039e40: CLP; test rdi, rdi ; je 0x39e64
read: rdi rflags 
write: rflags 
--------------------------------------------------------------------------------
00039e70: CLP; push rbp ; mov rbp, rdx ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; call 0x39f9c
read: rbp rbx rdi rdx rip rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00039ec0: CLP; mov edi, edi ; mov edx, 0xb ; mov ecx, 1 ; mov rax, rdi ; mov word ptr [rsi + 2], di ; mov word ptr [rsi + 0xc], dx ; sar rax, 0x10 ; mov word ptr [rsi + 0xe], cx ; mov word ptr [rsi + 4], ax ; mov eax, 0x330e ; mov word ptr [rsi], ax ; movabs rax, 0x5deece66d ; mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
read: ax cx di dx eax edi rax rdi 
write: eax ecx edi edx rax rflags 
--------------------------------------------------------------------------------
00039f00: CLP; mov eax, dword ptr [rsi] ; mov edx, 1 ; mov dword ptr [rsi + 6], eax ; movzx eax, word ptr [rsi + 4] ; mov word ptr [rsi + 0xa], ax ; movzx eax, word ptr [rdi + 4] ; mov word ptr [rsi + 4], ax ; movzx eax, word ptr [rdi + 2] ; mov word ptr [rsi + 2], ax ; movzx eax, word ptr [rdi] ; mov word ptr [rsi + 0xe], dx ; mov word ptr [rsi], ax ; movabs rax, 0x5deece66d ; mov qword ptr [rsi + 0x10], rax ; mov eax, 0xb
read: ax dx eax rax 
write: eax edx rax 
--------------------------------------------------------------------------------
00039f50: CLP; mov eax, dword ptr [rdi] ; mov dword ptr [rsi], eax ; movzx eax, word ptr [rdi + 4] ; mov word ptr [rsi + 4], ax ; movzx eax, word ptr [rdi + 0xa] ; movzx edx, word ptr [rdi + 6] ; shl rax, 0x20 ; or rax, rdx ; movzx edx, word ptr [rdi + 8] ; shl edx, 0x10 ; or rax, rdx ; mov qword ptr [rsi + 0x10], rax ; movzx eax, word ptr [rdi + 0xc] ; mov word ptr [rsi + 0xc], ax ; mov eax, 1
read: ax eax edx rax rdx 
write: eax edx rax rflags 
--------------------------------------------------------------------------------
00039fa0: CLP; cmp word ptr [rsi + 0xe], 0 ; je 0x39fe4
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
0003a010: CLP; sub rsp, 8 ; mov rax, qword ptr [rip + 0x32eda1] ; mov r8, qword ptr fs:[rax] ; call 0x3a0cc
read: rip rsp 
write: r8 rax rflags rsp 
--------------------------------------------------------------------------------
0003a040: CLP; sub rsp, 8 ; mov rax, qword ptr [rip + 0x32ed71] ; xor ecx, ecx ; mov r8, qword ptr fs:[rax] ; call 0x3a0cc
read: ecx rip rsp 
write: ecx r8 rax rflags rsp 
--------------------------------------------------------------------------------
0003a070: CLP; sub rsp, 8 ; mov rax, qword ptr [rip + 0x32ed41] ; mov r8, qword ptr fs:[rax] ; call 0x3a5ac
read: rip rsp 
write: r8 rax rflags rsp 
--------------------------------------------------------------------------------
0003a0a0: CLP; sub rsp, 8 ; mov rax, qword ptr [rip + 0x32ed11] ; xor ecx, ecx ; mov r8, qword ptr fs:[rax] ; call 0x3a5ac
read: ecx rip rsp 
write: ecx r8 rax rflags rsp 
--------------------------------------------------------------------------------
0003a0d0: CLP; push r15 ; push r14 ; mov r14, rsi ; push r13 ; mov r13, rdi ; push r12 ; push rbp ; push rbx ; sub rsp, 0x28 ; test ecx, ecx ; mov rax, qword ptr [r8 + 8] ; jne 0x3a4de
read: ecx r12 r13 r14 r15 rbp rbx rdi rflags rsi rsp 
write: r13 r14 rax rflags rsp 
--------------------------------------------------------------------------------
0003a590: CLP; sub rsp, 8 ; mov r8, rcx ; xor ecx, ecx ; call 0x3a0cc
read: ecx rcx rip rsp 
write: ecx r8 rflags rsp 
--------------------------------------------------------------------------------
0003a5b0: CLP; push r15 ; push r14 ; mov r14, rsi ; push r13 ; mov r13, rdi ; push r12 ; push rbp ; push rbx ; sub rsp, 0x28 ; test ecx, ecx ; mov rax, qword ptr [r8 + 8] ; jne 0x3a94e
read: ecx r12 r13 r14 r15 rbp rbx rdi rflags rsi rsp 
write: r13 r14 rax rflags rsp 
--------------------------------------------------------------------------------
0003aa00: CLP; sub rsp, 8 ; mov r8, rcx ; xor ecx, ecx ; call 0x3a5ac
read: ecx rcx rip rsp 
write: ecx r8 rflags rsp 
--------------------------------------------------------------------------------
0003aa20: CLP; sub rsp, 8 ; mov rax, qword ptr [rip + 0x32e391] ; mov rcx, qword ptr fs:[rax] ; call 0x3b2ac
read: rip rsp 
write: rax rcx rflags rsp 
--------------------------------------------------------------------------------
0003aa50: CLP; sub rsp, 8 ; mov rax, qword ptr [rip + 0x32e361] ; xor edx, edx ; mov rcx, qword ptr fs:[rax] ; call 0x3b2ac
read: edx rip rsp 
write: edx rax rcx rflags rsp 
--------------------------------------------------------------------------------
0003aa80: CLP; sub rsp, 8 ; mov rax, qword ptr [rip + 0x32e331] ; mov rcx, qword ptr fs:[rax] ; call 0x3db5c
read: rip rsp 
write: rax rcx rflags rsp 
--------------------------------------------------------------------------------
0003aab0: CLP; sub rsp, 8 ; mov rax, qword ptr [rip + 0x32e301] ; xor edx, edx ; mov rcx, qword ptr fs:[rax] ; call 0x3db5c
read: edx rip rsp 
write: edx rax rcx rflags rsp 
--------------------------------------------------------------------------------
0003aae0: CLP; sub rsp, 8 ; mov rax, qword ptr [rip + 0x32e2d1] ; mov rcx, qword ptr fs:[rax] ; call 0x403bc
read: rip rsp 
write: rax rcx rflags rsp 
--------------------------------------------------------------------------------
0003ab10: CLP; sub rsp, 8 ; mov rax, qword ptr [rip + 0x32e2a1] ; xor edx, edx ; mov rcx, qword ptr fs:[rax] ; call 0x403bc
read: edx rip rsp 
write: edx rax rcx rflags rsp 
--------------------------------------------------------------------------------
0003ab40: CLP; sub rsp, 8 ; cmp r8d, 0x400 ; je 0x3ab9c
read: r8d rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0003abb0: CLP; push r15 ; push r14 ; push r13 ; mov r13, rcx ; push r12 ; mov r12, rdi ; push rbp ; mov ebp, edx ; push rbx ; mov rbx, rsi ; sub rsp, 0x28 ; fnstcw word ptr [rsp + 0x1c] ; movzx eax, word ptr [rsp + 0x1c] ; and ax, 0xc00 ; cmp ax, 0x400
read: ax edx r12 r13 r14 r15 rbp rbx rcx rdi rsi rsp 
write: ax eax ebp r12 r13 rbx rflags rsp 
--------------------------------------------------------------------------------
0003afd0: CLP; push r15 ; push r14 ; mov r14, rcx ; push r13 ; push r12 ; mov r12d, esi ; push rbp ; push rbx ; sub rsp, 0x18 ; test esi, esi ; mov qword ptr [rcx], 0 ; mov qword ptr [rsp + 8], r8 ; mov r8, qword ptr [rsp + 0x50] ; jle 0x3b26e
read: esi r12 r13 r14 r15 r8 rbp rbx rcx rflags rsp 
write: r12d r14 r8 rflags rsp 
--------------------------------------------------------------------------------
0003b2b0: CLP; push r15 ; mov r15, rcx ; push r14 ; push r13 ; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 0x118 ; test edx, edx ; mov rax, qword ptr [rcx + 8] ; mov qword ptr [rsp + 0x10], rsi ; jne 0x3d0ac
read: edx r12 r13 r14 r15 rbp rbx rcx rdi rflags rsi rsp 
write: r15 rax rbp rflags rsp 
--------------------------------------------------------------------------------
0003d3c0: CLP; sub rsp, 8 ; mov rcx, rdx ; xor edx, edx ; call 0x3b2ac
read: edx rdx rip rsp 
write: edx rcx rflags rsp 
--------------------------------------------------------------------------------
0003d3e0: CLP; sub rsp, 8 ; cmp r8d, 0x400 ; je 0x3d43c
read: r8d rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0003d450: CLP; push r15 ; push r14 ; push r13 ; mov r13, rcx ; push r12 ; mov r12, rdi ; push rbp ; mov ebp, edx ; push rbx ; mov rbx, rsi ; sub rsp, 0x28 ; fnstcw word ptr [rsp + 0x18] ; movzx eax, word ptr [rsp + 0x18] ; and ax, 0xc00 ; cmp ax, 0x400
read: ax edx r12 r13 r14 r15 rbp rbx rcx rdi rsi rsp 
write: ax eax ebp r12 r13 rbx rflags rsp 
--------------------------------------------------------------------------------
0003d880: CLP; push r15 ; push r14 ; mov r14, rcx ; push r13 ; push r12 ; mov r12d, esi ; push rbp ; push rbx ; sub rsp, 0x18 ; test esi, esi ; mov qword ptr [rcx], 0 ; mov qword ptr [rsp + 8], r8 ; mov r8, qword ptr [rsp + 0x50] ; jle 0x3db1e
read: esi r12 r13 r14 r15 r8 rbp rbx rcx rflags rsp 
write: r12d r14 r8 rflags rsp 
--------------------------------------------------------------------------------
0003db60: CLP; push r15 ; mov r15, rcx ; push r14 ; mov r14, rdi ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x438 ; test edx, edx ; mov rax, qword ptr [rcx + 8] ; mov qword ptr [rsp + 8], rsi ; jne 0x3f68f
read: edx r12 r13 r14 r15 rbp rbx rcx rdi rflags rsi rsp 
write: r14 r15 rax rflags rsp 
--------------------------------------------------------------------------------
0003fc40: CLP; sub rsp, 8 ; mov rcx, rdx ; xor edx, edx ; call 0x3db5c
read: edx rdx rip rsp 
write: edx rcx rflags rsp 
--------------------------------------------------------------------------------
0003fc60: CLP; sub rsp, 8 ; cmp r8d, 0x400 ; je 0x3fcbc
read: r8d rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0003fcd0: CLP; push r15 ; push r14 ; push r13 ; mov r13, rcx ; push r12 ; mov r12d, edx ; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rsi ; sub rsp, 0x28 ; fnstcw word ptr [rsp + 0x10] ; movzx eax, word ptr [rsp + 0x10] ; and ax, 0xc00 ; cmp ax, 0x400
read: ax edx r12 r13 r14 r15 rbp rbx rcx rdi rsi rsp 
write: ax eax r12d r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000400d0: CLP; push r15 ; push r14 ; mov r14, rcx ; push r13 ; push r12 ; mov r12d, esi ; push rbp ; push rbx ; sub rsp, 0x18 ; test esi, esi ; mov qword ptr [rcx], 0 ; mov qword ptr [rsp + 8], r8 ; mov r8, qword ptr [rsp + 0x50] ; jle 0x40376
read: esi r12 r13 r14 r15 r8 rbp rbx rcx rflags rsp 
write: r12d r14 r8 rflags rsp 
--------------------------------------------------------------------------------
000403c0: CLP; push r15 ; mov r15, rcx ; push r14 ; mov r14, rdi ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x3638 ; test edx, edx ; mov rax, qword ptr [rcx + 8] ; mov qword ptr [rsp + 8], rsi ; jne 0x41fd7
read: edx r12 r13 r14 r15 rbp rbx rcx rdi rflags rsi rsp 
write: r14 r15 rax rflags rsp 
--------------------------------------------------------------------------------
00042410: CLP; sub rsp, 8 ; mov rcx, rdx ; xor edx, edx ; call 0x403bc
read: edx rdx rip rsp 
write: edx rcx rflags rsp 
--------------------------------------------------------------------------------
00042430: CLP; push r12 ; xor eax, eax ; mov ecx, 0x10 ; mov esi, 1 ; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 0x170 ; lea rbp, [rsp + 0xd0] ; mov qword ptr [rsp + 0xd0], 1 ; mov dword ptr [rsp + 0x158], 0 ; lea rdx, [rbp + 8] ; mov rdi, rdx ; rep stosq qword ptr [rdi], rax ; cmp dword ptr [rip + 0x32c2f6], 0
read: eax r12 rax rbp rbx rcx rdi rdx rflags rsp 
write: eax ecx esi rbp rbx rcx rdi rdx rflags rsp 
--------------------------------------------------------------------------------
00042920: CLP; push rbx ; mov ebx, dword ptr [rdi] ; mov esi, 9 ; mov eax, 0x3e ; movsxd rdi, ebx ; syscall ; jmp 0x42949
read: ebx rbx rsp 
write: eax ebx esi rdi rsp 
--------------------------------------------------------------------------------
00042a20: CLP; sub rsp, 8 ; test rdi, rdi ; je 0x42a3c
read: rdi rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00042a60: CLP; push rbp ; mov rbp, rsp ; push r15 ; push r14 ; push r13 ; mov r13, rdi ; push r12 ; push rbx ; sub rsp, 0xc8 ; test rdi, rdi ; mov qword ptr [rbp - 0xd8], rsi ; je 0x42fa2
read: r12 r13 r14 r15 rbp rbx rdi rflags rsi rsp 
write: r13 rbp rflags rsp 
--------------------------------------------------------------------------------
00043020: CLP; sub rsp, 8 ; xor esi, esi ; call 0x42a5c
read: esi rip rsp 
write: esi rflags rsp 
--------------------------------------------------------------------------------
00043040: CLP; lea r8, [rdi + 6] ; xor ecx, ecx ; xor eax, eax ; movsx edx, byte ptr [rdi] ; sub edx, 0x2e ; cmp edx, 0x4c ; ja 0x43074
read: eax ecx edx rflags 
write: eax ecx edx r8 rflags 
--------------------------------------------------------------------------------
00043080: CLP; mov edi, edi ; lea rax, [rip + 0xf1889] ; test rdi, rdi ; je 0x430d0
read: edi rdi rflags 
write: edi rax rflags 
--------------------------------------------------------------------------------
000430e0: CLP; push r15 ; mov r15, r10 ; push r14 ; mov r14d, edx ; push r13 ; mov r13d, esi ; push r12 ; mov r12, r8 ; push rbp ; mov rbp, rcx ; push rbx ; sub rsp, 8 ; call 0x2dcac
read: edx esi r10 r12 r13 r14 r15 r8 rbp rbx rcx rip rsp 
write: r12 r13d r14d r15 rbp rflags rsp 
--------------------------------------------------------------------------------
00043190: CLP; push rbx ; lea r8, [rip + 0x328504] ; lea rcx, [rip + 0x32853d] ; xor edx, edx ; mov esi, 1 ; sub rsp, 0x10 ; mov qword ptr [rsp], rdi ; mov r10, rsp ; mov edi, 0x50000 ; call 0x430dc
read: edx rbx rdi rip rsp 
write: edi edx esi r10 r8 rcx rflags rsp 
--------------------------------------------------------------------------------
00043200: CLP; sub rsp, 0xd8 ; test al, al ; mov qword ptr [rsp + 0x38], rcx ; mov qword ptr [rsp + 0x40], r8 ; mov qword ptr [rsp + 0x48], r9 ; je 0x43251
read: al r8 r9 rcx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000432b0: CLP; push r15 ; mov rax, rdi ; mov r10, rax ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x1d8 ; mov r11, qword ptr [rdx + 0x20] ; mov qword ptr [rsp + 0x10], r8 ; lea r8, [rax + rsi - 1] ; mov qword ptr [rsp + 0x18], rdi ; mov qword ptr [rsp + 0x20], rsi ; movzx eax, byte ptr [rcx]
read: r12 r13 r14 r15 r8 rax rbp rbx rdi rsi rsp 
write: eax r10 r11 r8 rax rflags rsp 
--------------------------------------------------------------------------------
00044360: CLP; sub rsp, 0xd8 ; test al, al ; mov qword ptr [rsp + 0x40], r8 ; mov qword ptr [rsp + 0x48], r9 ; je 0x443ac
read: al r8 r9 rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000443f0: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x28 ; mov rbp, qword ptr [rdi] ; mov qword ptr [rsp + 8], rdi ; mov qword ptr [rsp + 0x10], rdx ; cmp byte ptr [rbp], 0 ; je 0x4452b
read: r12 r13 r14 r15 rbp rbx rdi rdx rflags rsp 
write: rbp rflags rsp 
--------------------------------------------------------------------------------
00044540: CLP; test rdi, rdi ; push rbx ; lea rax, [rip + 0xf2262] ; mov rbx, rdi ; je 0x445bc
read: rbx rdi rflags rsp 
write: rax rbx rflags rsp 
--------------------------------------------------------------------------------
00044610: CLP; push rbp ; push rbx ; mov ebx, edi ; sub rsp, 0x18 ; mov rbp, qword ptr [rip + 0x324fcd] ; test rbp, rbp ; je 0x4464c
read: edi rbp rbx rflags rsp 
write: ebx rbp rflags rsp 
--------------------------------------------------------------------------------
000446e0: CLP; push r15 ; lea rdi, [rip + 0xf0486] ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x18 ; call 0x3819c
read: r12 r13 r14 r15 rbp rbx rip rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
00044950: CLP; push r15 ; mov r15, r9 ; push r14 ; mov r14, rdi ; push r13 ; mov r13d, edx ; push r12 ; push rbp ; mov rbp, rsi ; push rbx ; sub rsp, 0x78 ; mov esi, dword ptr [rip + 0x329dfc] ; mov qword ptr [rsp + 0x30], rcx ; mov qword ptr [rsp + 0x38], r8 ; test esi, esi
read: edx esi r12 r13 r14 r15 r8 r9 rbp rbx rcx rdi rsi rsp 
write: esi r13d r14 r15 rbp rflags rsp 
--------------------------------------------------------------------------------
00044e70: CLP; cmp edi, 4 ; mov r8d, edi ; mov eax, 0xffffffff ; jle 0x44f1c
read: edi rflags 
write: eax r8d rflags 
--------------------------------------------------------------------------------
00044f30: CLP; sub rsp, 8 ; xor ecx, ecx ; call 0x3a00c
read: ecx rip rsp 
write: ecx rflags rsp 
--------------------------------------------------------------------------------
00044f50: CLP; sub rsp, 8 ; xor ecx, ecx ; call 0x3a06c
read: ecx rip rsp 
write: ecx rflags rsp 
--------------------------------------------------------------------------------
00044f70: CLP; sub rsp, 8 ; xor ecx, ecx ; call 0x977dc
read: ecx rip rsp 
write: ecx rflags rsp 
--------------------------------------------------------------------------------
00044f90: CLP; sub rsp, 8 ; xor ecx, ecx ; call 0x9783c
read: ecx rip rsp 
write: ecx rflags rsp 
--------------------------------------------------------------------------------
00044fb0: CLP; mov qword ptr [rdi + 0x80], rbx ; mov qword ptr [rdi + 0x78], rbp ; mov qword ptr [rdi + 0x48], r12 ; mov qword ptr [rdi + 0x50], r13 ; mov qword ptr [rdi + 0x58], r14 ; mov qword ptr [rdi + 0x60], r15 ; mov qword ptr [rdi + 0x68], rdi ; mov qword ptr [rdi + 0x70], rsi ; mov qword ptr [rdi + 0x88], rdx ; mov qword ptr [rdi + 0x98], rcx ; mov qword ptr [rdi + 0x28], r8 ; mov qword ptr [rdi + 0x30], r9 ; mov rcx, qword ptr [rsp] ; mov qword ptr [rdi + 0xa8], rcx ; lea rcx, [rsp + 8]
read: r12 r13 r14 r15 r8 r9 rbp rbx rcx rdi rdx rsi 
write: rcx 
--------------------------------------------------------------------------------
00045060: CLP; push rdi ; lea rsi, [rdi + 0x128] ; xor edx, edx ; mov edi, 2 ; mov r10d, 8 ; mov eax, 0xe ; syscall ; pop rdi ; cmp rax, -0xfff ; jae 0x450e0
read: edx rax rdi rflags rsp 
write: eax edi edx r10d rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00045100: CLP; mov r11, qword ptr [rdi + 0x10] ; add r11, qword ptr [rdi + 0x20] ; cmp edx, 6 ; mov qword ptr [rsp - 0x18], rcx ; mov qword ptr [rsp - 0x10], r8 ; mov qword ptr [rsp - 8], r9 ; jle 0x4532c
read: edx r11 r8 r9 rcx rflags 
write: r11 rflags 
--------------------------------------------------------------------------------
00045350: CLP; mov qword ptr [rdi + 0x80], rbx ; mov qword ptr [rdi + 0x78], rbp ; mov qword ptr [rdi + 0x48], r12 ; mov qword ptr [rdi + 0x50], r13 ; mov qword ptr [rdi + 0x58], r14 ; mov qword ptr [rdi + 0x60], r15 ; mov qword ptr [rdi + 0x68], rdi ; mov qword ptr [rdi + 0x70], rsi ; mov qword ptr [rdi + 0x88], rdx ; mov qword ptr [rdi + 0x98], rcx ; mov qword ptr [rdi + 0x28], r8 ; mov qword ptr [rdi + 0x30], r9 ; mov rcx, qword ptr [rsp] ; mov qword ptr [rdi + 0xa8], rcx ; lea rcx, [rsp + 8]
read: r12 r13 r14 r15 r8 r9 rbp rbx rcx rdi rdx rsi 
write: rcx 
--------------------------------------------------------------------------------
00045460: CLP; mov rax, qword ptr [rsi] ; lea r8, [rsi + 8] ; lea rsi, [rdi + 8] ; add rcx, rax ; cmp rax, rcx ; mov qword ptr [rdi], rcx ; ja 0x454bd
read: rax rcx rflags 
write: r8 rax rcx rflags rsi 
--------------------------------------------------------------------------------
000454d0: CLP; push r12 ; xor eax, eax ; mov r12, rsi ; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rdx ; sub rsp, 0x10 ; test r8, r8 ; jne 0x4551c
read: eax r12 r8 rbp rbx rdi rdx rflags rsi rsp 
write: eax r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00045540: CLP; lea r8, [rsi + 8] ; mov rsi, qword ptr [rsi] ; mov rax, rsi ; sub rax, rcx ; lea rcx, [rdi + 8] ; cmp rsi, rax ; mov qword ptr [rdi], rax ; jb 0x4559d
read: rax rcx rflags rsi 
write: r8 rax rcx rflags rsi 
--------------------------------------------------------------------------------
000455b0: CLP; push r12 ; xor eax, eax ; mov r12, rsi ; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rdx ; sub rsp, 0x10 ; test r8, r8 ; jne 0x455fc
read: eax r12 r8 rbp rbx rdi rdx rflags rsi rsp 
write: eax r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00045620: CLP; xor r8, r8 ; mov r10, qword ptr [rsi] ; mov r11, qword ptr [rdx] ; lea rsi, [rsi + rcx*8 - 8] ; lea rdx, [rdx + rcx*8 - 8] ; lea rdi, [rdi + rcx*8 - 0x10] ; mov eax, ecx ; neg rcx ; and eax, 3 ; je 0x45651
read: eax ecx r8 rcx rflags 
write: eax r10 r11 r8 rcx rdi rdx rflags rsi 
--------------------------------------------------------------------------------
000456d0: CLP; push rbx ; push rbp ; lea rbx, [rdx] ; neg rbx ; mov rax, qword ptr [rsi] ; mov r10, qword ptr [rdi] ; lea rdi, [rdi + rdx*8 - 0x10] ; lea rsi, [rsi + rdx*8] ; mul rcx ; bt ebx, 0 ; jb 0x45714
read: ebx rax rbp rbx rcx rflags rsp 
write: r10 rax rbx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000457c0: CLP; sub rdx, 1 ; jns 0x457d6
read: rdx rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
00045800: CLP; xor eax, eax ; test rdx, rdx ; mov r9, rdx ; je 0x45848
read: eax rdx rflags 
write: eax r9 rflags 
--------------------------------------------------------------------------------
00045860: CLP; push r15 ; mov rax, r9 ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; mov rbx, rcx ; sub rsp, 0x58 ; cmp r9, 1 ; mov qword ptr [rsp + 0x20], rsi ; mov qword ptr [rsp + 0x28], rdi ; mov rsi, rdx ; mov qword ptr [rsp], r8 ; mov qword ptr [rsp + 8], r9
read: r12 r13 r14 r15 r8 r9 rbp rbx rcx rdi rdx rsi rsp 
write: rax rbx rflags rsi rsp 
--------------------------------------------------------------------------------
00045cb0: CLP; lea rdi, [rdi + rdx*8 - 8] ; lea rsi, [rsi + rdx*8 - 8] ; mov eax, edx ; and eax, 3 ; jne 0x45cdf
read: eax edx rflags 
write: eax rdi rflags rsi 
--------------------------------------------------------------------------------
00045dd0: CLP; mov eax, edx ; and eax, 3 ; jne 0x45df9
read: eax edx rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00045ee0: CLP; xor eax, eax ; test rsi, rsi ; mov r8, rdx ; je 0x45f18
read: eax rdx rflags rsi 
write: eax r8 rflags 
--------------------------------------------------------------------------------
00045f30: CLP; push rbp ; mov rbp, rsp ; push r15 ; push r14 ; mov r14, rcx ; push r13 ; push r12 ; mov r12, rdx ; push rbx ; mov rbx, r8 ; sub rsp, 0x58 ; cmp r8, 0x1f ; mov qword ptr [rbp - 0x40], rdi ; mov qword ptr [rbp - 0x38], rsi ; jg 0x46014
read: r12 r13 r14 r15 r8 rbp rbx rcx rdi rdx rflags rsi rsp 
write: r12 r14 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00046300: CLP; push rbx ; xor r10, r10 ; mov rax, qword ptr [rsi] ; mov rbx, rdx ; mul rcx ; mov r11, rbx ; add rax, r10 ; adc rdx, 0 ; and ebx, 3 ; je 0x4634e
read: ebx r10 rax rbx rcx rdx rflags rsp 
write: ebx r10 r11 rax rbx rdx rflags rsp 
--------------------------------------------------------------------------------
00046420: CLP; push r15 ; mov r15, rcx ; push r14 ; mov r14, rsi ; push r13 ; push r12 ; mov r12, rdx ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 8 ; mov rcx, qword ptr [rdx] ; cmp rcx, 1 ; jbe 0x464dc
read: r12 r13 r14 r15 rbp rbx rcx rdi rdx rflags rsi rsp 
write: r12 r14 r15 rbp rcx rflags rsp 
--------------------------------------------------------------------------------
00046540: CLP; push r15 ; push r14 ; push r13 ; mov r13, r8 ; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rcx ; sub rsp, 0x48 ; test cl, 1 ; mov qword ptr [rsp + 8], rsi ; mov qword ptr [rsp + 0x10], rdx ; je 0x465f4
read: cl r12 r13 r14 r15 r8 rbp rbx rcx rdi rdx rflags rsi rsp 
write: r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00046990: CLP; push r14 ; mov r14, rsi ; push r13 ; push r12 ; mov r12, rdx ; push rbp ; mov rbp, rdi ; push rbx ; mov rcx, qword ptr [rsi] ; cmp rcx, 1 ; jbe 0x46a3c
read: r12 r13 r14 rbp rbx rcx rdi rdx rflags rsi rsp 
write: r12 r14 rbp rcx rflags rsp 
--------------------------------------------------------------------------------
00046aa0: CLP; push r15 ; mov r15, rcx ; push r14 ; push r13 ; push r12 ; mov r12, rsi ; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rdx ; sub rsp, 0x38 ; test dl, 1 ; je 0x46b3c
read: dl r12 r13 r14 r15 rbp rbx rcx rdi rdx rflags rsi rsp 
write: r12 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00046e70: CLP; push rbp ; cmp rsi, rdx ; mov rax, rcx ; mov rbp, rsp ; je 0x46ec4
read: rbp rcx rdx rflags rsi rsp 
write: rax rbp rflags rsp 
--------------------------------------------------------------------------------
00046f10: CLP; xor r8, r8 ; mov r10, qword ptr [rsi] ; mov r11, qword ptr [rdx] ; lea rsi, [rsi + rcx*8 - 8] ; lea rdx, [rdx + rcx*8 - 8] ; lea rdi, [rdi + rcx*8 - 0x10] ; mov eax, ecx ; neg rcx ; and eax, 3 ; je 0x46f41
read: eax ecx r8 rcx rflags 
write: eax r10 r11 r8 rcx rdi rdx rflags rsi 
--------------------------------------------------------------------------------
00046fc0: CLP; push rbx ; push rbp ; lea rbx, [rdx] ; neg rbx ; mov rax, qword ptr [rsi] ; mov r10, qword ptr [rdi] ; lea rdi, [rdi + rdx*8 - 0x10] ; lea rsi, [rsi + rdx*8] ; mul rcx ; bt ebx, 0 ; jb 0x47004
read: ebx rax rbp rbx rcx rflags rsp 
write: r10 rax rbx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000470b0: CLP; movsd qword ptr [rsp - 8], xmm0 ; mov rax, qword ptr [rsp - 8] ; mov rsi, rax ; shr rsi, 0x3f ; mov dword ptr [rcx], esi ; mov rcx, rax ; movabs rsi, 0xfffffffffffff ; shr rcx, 0x34 ; and rsi, rax ; shr rax, 0x30 ; and ecx, 0x7ff ; sub ecx, 0x3ff ; test eax, 0x7ff0 ; mov dword ptr [rdx], ecx ; mov qword ptr [rdi], rsi
read: eax ecx esi rax rcx rsi xmm0 
write: eax ecx rax rcx rflags rsi 
--------------------------------------------------------------------------------
00047150: CLP; fld xword ptr [rsp + 8] ; fstp xword ptr [rsp - 0x18] ; movzx eax, byte ptr [rsp - 0xf] ; mov r8d, dword ptr [rsp - 0x18] ; shr al, 7 ; movzx eax, al ; mov dword ptr [rcx], eax ; movzx ecx, word ptr [rsp - 0x10] ; and cx, 0x7fff ; movzx esi, cx ; lea eax, [rsi - 0x3fff] ; mov dword ptr [rdx], eax ; mov eax, dword ptr [rsp - 0x14] ; shl rax, 0x20 ; or rax, r8
read: al cx eax r8 rax 
write: al cx eax ecx esi fpsw r8d rax rflags 
--------------------------------------------------------------------------------
00047210: CLP; add esi, 0x7f ; mov rax, qword ptr [rdi] ; shl edx, 0x1f ; movzx esi, sil ; shl esi, 0x17 ; and eax, 0x7fffff ; or edx, esi ; or edx, eax ; mov dword ptr [rsp - 4], edx ; movss xmm0, dword ptr [rsp - 4] ; ret
read: eax edx esi sil 
write: eax edx esi rax rflags xmm0 
--------------------------------------------------------------------------------
00047240: CLP; mov rax, qword ptr [rdi] ; add si, 0x3ff ; shl rdx, 0x3f ; and esi, 0x7ff ; shl rsi, 0x34 ; mov ecx, eax ; or rdx, rsi ; movabs rsi, 0xfffff00000000 ; and rax, rsi ; or rdx, rcx ; or rdx, rax ; mov qword ptr [rsp - 8], rdx ; movsd xmm0, qword ptr [rsp - 8] ; ret
read: eax esi rax rcx rdx rsi si 
write: ecx esi rax rdx rflags rsi si xmm0 
--------------------------------------------------------------------------------
00047280: CLP; movzx eax, byte ptr [rsp - 0xf] ; shl edx, 7 ; add si, 0x3fff ; and si, 0x7fff ; and eax, 0x7f ; or eax, edx ; mov byte ptr [rsp - 0xf], al ; movzx eax, word ptr [rsp - 0x10] ; and ax, 0x8000 ; or eax, esi ; mov word ptr [rsp - 0x10], ax ; mov rax, qword ptr [rdi] ; mov dword ptr [rsp - 0x18], eax ; shr rax, 0x20 ; mov dword ptr [rsp - 0x14], eax
read: al ax eax edx esi rax si 
write: ax eax edx rax rflags si 
--------------------------------------------------------------------------------
000472d0: CLP; push r15 ; mov r15, rsi ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x18 ; test rcx, rcx ; mov qword ptr [rsp + 8], rcx ; je 0x473dd
read: r12 r13 r14 r15 rbp rbx rcx rflags rsi rsp 
write: r15 rflags rsp 
--------------------------------------------------------------------------------
00047550: CLP; test rcx, rcx ; je 0x4757c
read: rcx rflags 
write: rflags 
--------------------------------------------------------------------------------
00047690: CLP; mov rsp, rbx ; pop rdi ; test rdi, rdi ; je 0x476a5
read: rbx rdi rflags rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
000476c0: CLP; lea rdx, [rip + 0x324029] ; mov rax, rdi ; test rdi, rdi ; movabs rcx, 0x7974742f7665642f ; cmove rax, rdx ; mov qword ptr [rax], rcx ; mov byte ptr [rax + 8], 0 ; ret
read: rax rcx rdi rdx rflags 
write: rax rcx rdx rflags 
--------------------------------------------------------------------------------
000476f0: CLP; push rbx ; mov rbx, rdi ; sub rsp, 0x440 ; call 0xb3dcc
read: rbx rdi rip rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
00047790: CLP; lea r8, [rip + 0xe7b05] ; lea rax, [rip + 0xe7abe] ; test ecx, ecx ; cmove r8, rax ; cmp edx, 0xa ; je 0x4781c
read: ecx edx r8 rax rflags 
write: r8 rax rflags 
--------------------------------------------------------------------------------
00047860: CLP; push rbx ; mov rbx, rsi ; sub rsp, 0x20 ; lea rsi, [rsp + 0x20] ; call 0x4778c
read: rbx rip rsi rsp 
write: rbx rflags rsi rsp 
--------------------------------------------------------------------------------
000478d0: CLP; push r13 ; push r12 ; push rbp ; mov ebp, esi ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov rcx, qword ptr [rbx + 0x28] ; mov rsi, qword ptr [rbx + 0x20] ; mov rdi, qword ptr [rdi + 0xe0] ; mov rdx, rcx ; sub rdx, rsi ; test edx, edx ; jne 0x4791c
read: edx esi r12 r13 rbp rbx rcx rdi rdx rflags rsi rsp 
write: ebp rbx rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00047980: CLP; push rbp ; mov rbp, rsp ; push r15 ; mov r15, rdx ; push r14 ; mov r14, rsi ; push r13 ; push r12 ; push rbx ; mov rbx, rdi ; sub rsp, 0x588 ; mov rax, qword ptr [rip + 0x3214c0] ; mov eax, dword ptr fs:[rax] ; mov dword ptr [rbp - 0x4b0], eax ; mov eax, dword ptr [rdi + 0xc0]
read: eax r12 r13 r14 r15 rbp rbx rdi rdx rsi rsp 
write: eax r14 r15 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0004cd30: CLP; push r13 ; push r12 ; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 0x2128 ; mov ecx, dword ptr [rdi + 0xc0] ; test ecx, ecx ; jne 0x4ce9c
read: ecx r12 r13 rbp rbx rdi rflags rsp 
write: ecx rbx rflags rsp 
--------------------------------------------------------------------------------
0004cf50: CLP; sub rsp, 8 ; mov rax, qword ptr [rip + 0x31bfe1] ; mov rdx, rsi ; mov rsi, rdi ; mov rdi, qword ptr [rax] ; call 0x4797c
read: rdi rip rsi rsp 
write: rax rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0004cf80: CLP; push rbp ; push rbx ; mov rbx, r10 ; sub rsp, 8 ; mov eax, dword ptr [r10 + 0x30] ; test eax, eax ; je 0x4cf9c
read: eax r10 rbp rbx rflags rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
0004d0e0: CLP; movzx edx, byte ptr [rsi] ; xor eax, eax ; xor r8d, r8d ; lea ecx, [rdx - 1] ; cmp cl, 0x7d ; jbe 0x4d117
read: cl eax r8d rflags 
write: eax ecx edx r8d rflags 
--------------------------------------------------------------------------------
0004d140: CLP; push rbp ; mov rbp, rsp ; push r15 ; push r14 ; push r13 ; push r12 ; push rbx ; mov rbx, rdi ; sub rsp, 0x128 ; movzx ecx, byte ptr [rsi + 0xd] ; mov qword ptr [rbp - 0xa8], rsi ; mov dword ptr [rbp - 0x40], 0 ; mov dword ptr [rbp - 0x94], 0 ; mov r14, qword ptr [rip + 0x31bc42] ; mov eax, ecx
read: ecx r12 r13 r14 r15 rbp rbx rdi rsi rsp 
write: eax ecx r14 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0004f6a0: CLP; push rbp ; push rbx ; movsxd rbx, edi ; sub rsp, 0x18 ; cmp ebx, 0xff ; ja 0x4f7ac
read: ebx edi rbp rbx rflags rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
0004f7d0: CLP; sub rsp, 8 ; call 0x4f69c
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0004f7f0: CLP; push r15 ; push r14 ; push r13 ; mov r13, rdx ; push r12 ; push rbp ; mov rbp, rsi ; mov esi, 0x25 ; push rbx ; sub rsp, 0x68 ; mov qword ptr [rsp + 8], 0 ; call 0x9045c
read: r12 r13 r14 r15 rbp rbx rdx rip rsi rsp 
write: esi r13 rbp rflags rsp 
--------------------------------------------------------------------------------
0004f910: CLP; push r15 ; mov r8, rsi ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 0x168 ; mov eax, dword ptr [rsi] ; mov r14d, dword ptr [rsi + 4] ; mov dword ptr [rsp + 0x18], eax ; movzx eax, byte ptr [rsi + 0xd] ; mov ebp, eax ; shr bpl, 2
read: bpl eax r12 r13 r14 r15 rbp rbx rdi rsi rsp 
write: bpl eax ebp r14d r8 rbx rflags rsp 
--------------------------------------------------------------------------------
000513f0: CLP; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; mov eax, dword ptr [rdi] ; sub eax, 1 ; cmp eax, 0xfe ; ja 0x51544
read: eax r12 rbp rbx rdi rflags rsp 
write: eax rbp rflags rsp 
--------------------------------------------------------------------------------
000515b0: CLP; push r14 ; mov rax, qword ptr [rip + 0x31cf13] ; push r13 ; push r12 ; push rbp ; mov rbp, qword ptr [rdi] ; push rbx ; movzx edx, byte ptr [rbp] ; mov r9, qword ptr [rax + rdx*8] ; test r9, r9 ; je 0x51675
read: r12 r13 r14 r9 rbp rbx rflags rsp 
write: edx r9 rax rbp rflags rsp 
--------------------------------------------------------------------------------
00051690: CLP; push r13 ; mov rax, qword ptr [rip + 0x31ce33] ; push r12 ; push rbp ; push rbx ; mov rbx, qword ptr [rdi] ; mov edx, dword ptr [rbx] ; mov r9, qword ptr [rax + rdx*8] ; test r9, r9 ; je 0x5174d
read: r12 r13 r9 rbp rbx rflags rsp 
write: edx r9 rax rbx rflags rsp 
--------------------------------------------------------------------------------
00051760: CLP; push rbx ; mov esi, 1 ; mov rbx, rdi ; xor eax, eax ; cmp dword ptr [rip + 0x31cffe], 0 ; je 0x51780
read: eax rbx rdi rflags rsp 
write: eax esi rbx rflags rsp 
--------------------------------------------------------------------------------
00051870: CLP; push r15 ; push r14 ; push r13 ; push r12 ; mov r12, rdi ; push rbp ; mov rbp, rsi ; push rbx ; sub rsp, 0x88 ; mov rax, qword ptr [rip + 0x31756e] ; movsxd rcx, dword ptr [rsi + 8] ; movzx r13d, byte ptr [rbp + 0xd] ; mov rax, qword ptr fs:[rax] ; movzx eax, byte ptr [rax + rcx*2 + 1] ; and eax, 1
read: eax r12 r13 r14 r15 rbp rbx rdi rsi rsp 
write: eax r12 r13d rax rbp rcx rflags rsp 
--------------------------------------------------------------------------------
00052100: CLP; test rsi, rsi ; je 0x52119
read: rflags rsi 
write: rflags 
--------------------------------------------------------------------------------
00052130: CLP; sub rsp, 0xd8 ; test al, al ; mov qword ptr [rsp + 0x30], rdx ; mov qword ptr [rsp + 0x38], rcx ; mov qword ptr [rsp + 0x40], r8 ; mov qword ptr [rsp + 0x48], r9 ; je 0x52186
read: al r8 r9 rcx rdx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000521d0: CLP; sub rsp, 0xd8 ; test al, al ; mov qword ptr [rsp + 0x28], rsi ; mov qword ptr [rsp + 0x30], rdx ; mov qword ptr [rsp + 0x38], rcx ; mov qword ptr [rsp + 0x40], r8 ; mov qword ptr [rsp + 0x48], r9 ; je 0x5222b
read: al r8 r9 rcx rdx rflags rsi rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00052280: CLP; sub rsp, 0xd8 ; test al, al ; mov qword ptr [rsp + 0x38], rcx ; mov qword ptr [rsp + 0x40], r8 ; mov qword ptr [rsp + 0x48], r9 ; je 0x522d1
read: al r8 r9 rcx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00052320: CLP; sub rsp, 0xd8 ; test al, al ; mov qword ptr [rsp + 0x30], rdx ; mov qword ptr [rsp + 0x38], rcx ; mov qword ptr [rsp + 0x40], r8 ; mov qword ptr [rsp + 0x48], r9 ; je 0x52376
read: al r8 r9 rcx rdx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000523c0: CLP; sub rsp, 0xd8 ; test al, al ; mov qword ptr [rsp + 0x30], rdx ; mov qword ptr [rsp + 0x38], rcx ; mov qword ptr [rsp + 0x40], r8 ; mov qword ptr [rsp + 0x48], r9 ; je 0x52416
read: al r8 r9 rcx rdx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00052460: CLP; sub rsp, 0xd8 ; test al, al ; mov qword ptr [rsp + 0x30], rdx ; mov qword ptr [rsp + 0x38], rcx ; mov qword ptr [rsp + 0x40], r8 ; mov qword ptr [rsp + 0x48], r9 ; je 0x524b6
read: al r8 r9 rcx rdx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00052500: CLP; push r13 ; push r12 ; push rbp ; mov ebp, esi ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov rcx, qword ptr [rbx + 0xa0] ; mov rdi, qword ptr [rdi + 0x228] ; mov rsi, qword ptr [rcx + 0x18] ; mov rdx, qword ptr [rcx + 0x20] ; sub rdx, rsi ; sar rdx, 2 ; test edx, edx ; jne 0x52554
read: edx esi r12 r13 rbp rbx rdi rdx rflags rsi rsp 
write: ebp rbx rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000525e0: CLP; push rbp ; mov rbp, rsp ; push r15 ; mov r15, rsi ; mov esi, 1 ; push r14 ; mov r14, rdi ; push r13 ; push r12 ; push rbx ; mov rbx, rdx ; sub rsp, 0x1168 ; mov rax, qword ptr [rip + 0x31685b] ; mov eax, dword ptr fs:[rax] ; mov dword ptr [rbp - 0x1080], eax
read: eax r12 r13 r14 r15 rbp rbx rdi rdx rsi rsp 
write: eax esi r14 r15 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00057c80: CLP; push r13 ; push r12 ; mov r12, rdx ; push rbp ; mov rbp, rsi ; mov esi, 1 ; push rbx ; mov rbx, rdi ; sub rsp, 0x8268 ; call 0x73bdc
read: r12 r13 rbp rbx rdi rdx rip rsi rsp 
write: esi r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00057ed0: CLP; push rbp ; mov r9, rsi ; mov rbp, rsp ; push r15 ; mov r15, rdi ; push r14 ; push r13 ; push r12 ; push rbx ; sub rsp, 0x298 ; mov rax, qword ptr [rip + 0x310ecb] ; mov qword ptr [rbp - 0x248], rdx ; mov qword ptr [rbp - 0x280], rcx ; mov rax, qword ptr fs:[rax] ; mov qword ptr [rbp - 0x210], rax
read: r12 r13 r14 r15 rax rbp rbx rcx rdi rdx rsi rsp 
write: r15 r9 rax rbp rflags rsp 
--------------------------------------------------------------------------------
00060fc0: CLP; sub rsp, 8 ; xor ecx, ecx ; call 0x57ecc
read: ecx rip rsp 
write: ecx rflags rsp 
--------------------------------------------------------------------------------
00060fe0: CLP; push rbp ; mov rbp, rsp ; push r15 ; mov r15, rdi ; push r14 ; push r13 ; push r12 ; push rbx ; sub rsp, 0x1d8 ; mov rax, qword ptr [rdx] ; mov qword ptr [rbp - 0x128], rsi ; mov esi, 1 ; mov qword ptr [rbp - 0x1b8], rdx ; mov qword ptr [rbp - 0x1d8], rcx ; mov qword ptr [rbp - 0x108], rax
read: r12 r13 r14 r15 rax rbp rbx rcx rdi rdx rsi rsp 
write: esi r15 rax rbp rflags rsp 
--------------------------------------------------------------------------------
00069270: CLP; sub rsp, 8 ; xor ecx, ecx ; call 0x60fdc
read: ecx rip rsp 
write: ecx rflags rsp 
--------------------------------------------------------------------------------
00069290: CLP; sub rsp, 0xd8 ; test al, al ; mov qword ptr [rsp + 0x30], rdx ; mov qword ptr [rsp + 0x38], rcx ; mov qword ptr [rsp + 0x40], r8 ; mov qword ptr [rsp + 0x48], r9 ; je 0x692e6
read: al r8 r9 rcx rdx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00069330: CLP; sub rsp, 0xd8 ; test al, al ; mov qword ptr [rsp + 0x28], rsi ; mov qword ptr [rsp + 0x30], rdx ; mov qword ptr [rsp + 0x38], rcx ; mov qword ptr [rsp + 0x40], r8 ; mov qword ptr [rsp + 0x48], r9 ; je 0x6938b
read: al r8 r9 rcx rdx rflags rsi rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000693e0: CLP; sub rsp, 0xd8 ; test al, al ; mov qword ptr [rsp + 0x30], rdx ; mov qword ptr [rsp + 0x38], rcx ; mov qword ptr [rsp + 0x40], r8 ; mov qword ptr [rsp + 0x48], r9 ; je 0x69436
read: al r8 r9 rcx rdx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00069480: CLP; push r12 ; mov r12, rdi ; mov edi, edx ; push rbp ; push rbx ; mov rbx, rsi ; sub rsp, 0x400 ; test rsi, rsi ; je 0x694e4
read: edx r12 rbp rbx rdi rflags rsi rsp 
write: edi r12 rbx rflags rsp 
--------------------------------------------------------------------------------
00069500: CLP; push r13 ; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 0x18 ; mov rbx, qword ptr [rip + 0x2ff888] ; mov rax, qword ptr [rip + 0x2ff949] ; mov rdi, qword ptr [rbx] ; mov edx, dword ptr fs:[rax] ; mov eax, dword ptr [rdi + 0xc0] ; test eax, eax ; je 0x69542
read: eax r12 r13 rbp rbx rdi rflags rsp 
write: eax edx rax rbp rbx rdi rflags rsp 
--------------------------------------------------------------------------------
000695f0: CLP; push r12 ; push rbp ; mov ebp, edi ; push rbx ; mov rbx, rsi ; sub rsp, 0x10 ; test rsi, rsi ; je 0x6960b
read: edi r12 rbp rbx rflags rsi rsp 
write: ebp rbx rflags rsp 
--------------------------------------------------------------------------------
00069710: CLP; push rbp ; lea rcx, [rip + 0xcb561] ; xor r8d, r8d ; xor edx, edx ; mov esi, 0x1000 ; push rbx ; sub rsp, 0x1008 ; mov rdi, rsp ; call 0x6994c
read: edx r8d rbp rbx rip rsp 
write: edx esi r8d rcx rdi rflags rsp 
--------------------------------------------------------------------------------
000697b0: CLP; push rbp ; mov esi, 0x14 ; mov rbp, rdi ; push rbx ; sub rsp, 0x28 ; test rdi, rdi ; mov rbx, rsp ; cmovne rbx, rdi ; xor r8d, r8d ; xor ecx, ecx ; xor edx, edx ; mov rdi, rbx ; call 0x6994c
read: ecx edx r8d rbp rbx rdi rflags rip rsp 
write: ecx edx esi r8d rbp rbx rdi rflags rsp 
--------------------------------------------------------------------------------
00069840: CLP; test rdi, rdi ; push rbx ; mov rbx, rdi ; je 0x69884
read: rbx rdi rflags rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
00069890: CLP; push rbx ; mov rdx, rdi ; mov rcx, rsi ; mov r8d, 1 ; mov esi, 0x1000 ; sub rsp, 0x1000 ; mov rdi, rsp ; call 0x6994c
read: rbx rdi rip rsi rsp 
write: esi r8d rcx rdi rdx rflags rsp 
--------------------------------------------------------------------------------
00069900: CLP; sub rsp, 0x98 ; mov rsi, rdi ; mov edi, 1 ; mov rdx, rsp ; call 0xd639c
read: rdi rip rsp 
write: edi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00069950: CLP; push r15 ; push r14 ; push r13 ; mov r13, rdi ; push r12 ; mov r12, rsi ; push rbp ; mov rbp, rcx ; push rbx ; mov rbx, rdx ; sub rsp, 0x18 ; test rcx, rcx ; je 0x69978
read: r12 r13 r14 r15 rbp rbx rcx rdi rdx rflags rsi rsp 
write: r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00069b00: CLP; push r15 ; mov r15, rdi ; push r14 ; mov r14d, edx ; push r13 ; push r12 ; push rbp ; mov ebp, esi ; push rbx ; mov ebx, ecx ; sub rsp, 0xb8 ; mov rax, qword ptr [rip + 0x2ff342] ; mov qword ptr [rsp + 8], rdi ; mov eax, dword ptr fs:[rax] ; mov dword ptr [rsp + 0x1c], eax
read: eax ecx edx esi r12 r13 r14 r15 rbp rbx rdi rsp 
write: eax ebp ebx r14d r15 rax rflags rsp 
--------------------------------------------------------------------------------
00069e30: CLP; sub rsp, 8 ; mov rcx, rdx ; mov edx, 0xa ; call 0x6d62c
read: rdx rip rsp 
write: edx rcx rflags rsp 
--------------------------------------------------------------------------------
00069e50: CLP; sub rsp, 0x18 ; mov rcx, rdi ; mov edx, 1 ; lea rdi, [rsp + 0xc] ; mov esi, 4 ; call 0x6ceec
read: rdi rip rsp 
write: edx esi rcx rdi rflags rsp 
--------------------------------------------------------------------------------
00069e90: CLP; sub rsp, 0x18 ; mov rcx, rsi ; mov edx, 1 ; mov dword ptr [rsp + 0xc], edi ; lea rdi, [rsp + 0xc] ; mov esi, 4 ; call 0x6d45c
read: edi rip rsi rsp 
write: edx esi rcx rdi rflags rsp 
--------------------------------------------------------------------------------
00069ed0: CLP; push rbx ; mov rbx, rdi ; call 0xd838c
read: rbx rdi rip rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
00069f10: CLP; mov eax, 0x52 ; syscall ; cmp rax, -0xfff ; jae 0x69f20
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00069f40: CLP; mov r10, rcx ; movsxd rdx, edx ; movsxd rdi, edi ; mov eax, 0x108 ; syscall ; cmp rax, -0x1000 ; ja 0x69f5a
read: edi edx rax rcx rflags 
write: eax r10 rdi rdx rflags 
--------------------------------------------------------------------------------
00069f70: CLP; mov rdx, qword ptr [rdi + 0x88] ; mov r9, rdi ; mov r8, qword ptr fs:[0x10] ; cmp r8, qword ptr [rdx + 8] ; je 0x69fcb
read: r8 rdi rflags 
write: r8 r9 rdx rflags 
--------------------------------------------------------------------------------
00069fe0: CLP; mov rdx, qword ptr [rdi + 0x88] ; mov r8, qword ptr fs:[0x10] ; cmp r8, qword ptr [rdx + 8] ; je 0x6a03c
read: r8 rflags 
write: r8 rdx rflags 
--------------------------------------------------------------------------------
0006a050: CLP; mov rdx, qword ptr [rdi + 0x88] ; sub dword ptr [rdx + 4], 1 ; jne 0x6a093
read: rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
0006a0a0: CLP; push rbp ; push rbx ; sub rsp, 0xd8 ; test al, al ; mov qword ptr [rsp + 0x28], rsi ; mov qword ptr [rsp + 0x30], rdx ; mov qword ptr [rsp + 0x38], rcx ; mov qword ptr [rsp + 0x40], r8 ; mov qword ptr [rsp + 0x48], r9 ; je 0x6a0fd
read: al r8 r9 rbp rbx rcx rdx rflags rsi rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0006a290: CLP; push r12 ; mov r10, qword ptr [rip + 0x2fed1b] ; mov rdx, rsi ; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, qword ptr [r10] ; mov eax, dword ptr [rbx] ; mov rdi, rbx ; and eax, 0x8000 ; jne 0x6a314
read: eax r12 rbp rbx rdi rflags rsi rsp 
write: eax r10 rbp rbx rdi rdx rflags rsp 
--------------------------------------------------------------------------------
0006a400: CLP; push rbx ; mov rbx, rdi ; sub rsp, 0xd0 ; test al, al ; mov qword ptr [rsp + 0x30], rdx ; mov qword ptr [rsp + 0x38], rcx ; mov qword ptr [rsp + 0x40], r8 ; mov qword ptr [rsp + 0x48], r9 ; je 0x6a45a
read: al r8 r9 rbx rcx rdi rdx rflags rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
0006a5d0: CLP; push rbp ; mov r10, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov eax, dword ptr [rdi] ; and eax, 0x8000 ; jne 0x6a642
read: eax rbp rbx rdi rflags rsi rsp 
write: eax r10 rbx rflags rsp 
--------------------------------------------------------------------------------
0006a720: CLP; sub rsp, 0xd8 ; test al, al ; mov qword ptr [rsp + 0x30], rdx ; mov qword ptr [rsp + 0x38], rcx ; mov qword ptr [rsp + 0x40], r8 ; mov qword ptr [rsp + 0x48], r9 ; je 0x6a776
read: al r8 r9 rcx rdx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0006a7c0: CLP; push r13 ; xor r8d, r8d ; mov r13, rdi ; xor ecx, ecx ; push r12 ; mov r12, rdx ; mov edx, 0xffffffff ; push rbp ; mov rbp, rsi ; mov esi, 0x8000 ; push rbx ; sub rsp, 0xf8 ; mov rdi, rsp ; mov qword ptr [rsp + 0x88], 0 ; call 0x79c0c
read: ecx r12 r13 r8d rbp rbx rdi rdx rip rsi rsp 
write: ecx edx esi r12 r13 r8d rbp rdi rflags rsp 
--------------------------------------------------------------------------------
0006a850: CLP; push r14 ; lea rdx, [rip + 0xccc8a] ; push r13 ; mov r13, rsi ; mov esi, 0x200 ; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 0x200 ; mov rdi, rsp ; mov r12, rsp ; call 0x765ac
read: r12 r13 r14 rbp rbx rdi rip rsi rsp 
write: esi r12 r13 rbp rdi rdx rflags rsp 
--------------------------------------------------------------------------------
0006ae50: CLP; mov rdx, qword ptr [rdi] ; mov r9d, 0x7fffffff ; movzx eax, byte ptr [rdx] ; add rdx, 1 ; sub eax, 0x30 ; jmp 0x6ae88
read: eax rdx 
write: eax r9d rdx rflags 
--------------------------------------------------------------------------------
0006aec0: CLP; push r14 ; mov r14, rdi ; push r13 ; lea r13, [rdi + 1] ; push r12 ; mov r12, rsi ; push rbp ; mov rbp, rcx ; push rbx ; mov rbx, rdx ; sub rsp, 0x10 ; and byte ptr [rdx + 0xc], 7 ; mov dword ptr [rdx + 0x30], 0xffffffff ; mov qword ptr [rsp + 8], r13 ; movzx eax, byte ptr [rdx + 0xd]
read: r12 r13 r14 rbp rbx rcx rdi rdx rsi rsp 
write: eax r12 r13 r14 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0006b5a0: CLP; mov rdx, qword ptr [rdi] ; mov r9d, 0x7fffffff ; mov eax, dword ptr [rdx] ; add rdx, 4 ; sub eax, 0x30 ; jmp 0x6b5d8
read: eax rdx 
write: eax r9d rdx rflags 
--------------------------------------------------------------------------------
0006b610: CLP; push r14 ; lea r14, [rdi + 4] ; push r13 ; mov r13, rdi ; mov rdi, r14 ; push r12 ; mov r12, rsi ; push rbp ; mov rbp, rcx ; push rbx ; mov rbx, rdx ; sub rsp, 0x10 ; and byte ptr [rdx + 0xc], 7 ; mov dword ptr [rdx + 0x30], 0xffffffff ; mov qword ptr [rsp + 8], r14
read: r12 r13 r14 rbp rbx rcx rdi rdx rsi rsp 
write: r12 r13 r14 rbp rbx rdi rflags rsp 
--------------------------------------------------------------------------------
0006bcc0: CLP; push rbp ; mov rbp, rsp ; push r13 ; mov r13, rdi ; push r12 ; push rbx ; sub rsp, 0xd8 ; test al, al ; mov qword ptr [rbp - 0xc0], rdx ; mov qword ptr [rbp - 0xb8], rcx ; mov qword ptr [rbp - 0xb0], r8 ; mov qword ptr [rbp - 0xa8], r9 ; je 0x6bd19
read: al r12 r13 r8 r9 rbp rbx rcx rdi rdx rflags rsp 
write: r13 rbp rflags rsp 
--------------------------------------------------------------------------------
0006be30: CLP; push r12 ; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 0x90 ; mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x6be8c
read: eax r12 rbp rbx rdi rflags rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
0006bf60: CLP; push r12 ; push rbp ; push rbx ; mov edx, dword ptr [rdi] ; mov rbx, rdi ; test dh, 0x20 ; mov ecx, edx ; jne 0x6c13c
read: dh edx r12 rbp rbx rdi rflags rsp 
write: ecx edx rbx rflags rsp 
--------------------------------------------------------------------------------
0006c200: CLP; push r14 ; push r13 ; push r12 ; mov r12d, edi ; push rbp ; push rbx ; movzx eax, byte ptr [rsi] ; cmp al, 0x72 ; je 0x6c3e4
read: al edi r12 r13 r14 rbp rbx rflags rsp 
write: eax r12d rflags rsp 
--------------------------------------------------------------------------------
0006c460: CLP; test rdi, rdi ; push rbx ; mov rbx, rdi ; je 0x6c544
read: rbx rdi rflags rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
0006c5c0: CLP; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov eax, dword ptr [rdi] ; and eax, 0x8000 ; jne 0x6c62f
read: eax rbp rbx rdi rflags rsi rsp 
write: eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0006c7b0: CLP; test esi, esi ; mov r9d, esi ; jle 0x6c8fc
read: esi rflags 
write: r9d rflags 
--------------------------------------------------------------------------------
0006c970: CLP; test byte ptr [rdi + 0x74], 1 ; mov rax, rdi ; je 0x6c9ad
read: rdi rflags 
write: rax rflags 
--------------------------------------------------------------------------------
0006c9c0: CLP; push r13 ; mov r13d, edx ; push r12 ; mov r12, rsi ; push rbp ; mov rbp, rdi ; mov edi, 0x238 ; push rbx ; sub rsp, 0x18 ; call 0x1f3cc
read: edx r12 r13 rbp rbx rdi rip rsi rsp 
write: edi r12 r13d rbp rflags rsp 
--------------------------------------------------------------------------------
0006caa0: CLP; sub rsp, 8 ; mov edx, 1 ; call 0x6c9bc
read: rip rsp 
write: edx rflags rsp 
--------------------------------------------------------------------------------
0006cac0: CLP; mov rax, qword ptr [rdi + 0xe8] ; test rax, rax ; je 0x6caec
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
0006cb00: CLP; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov rax, qword ptr [rdi + 0xf0] ; test rax, rax ; je 0x6cb2a
read: rax rbp rbx rdi rflags rsp 
write: rax rbx rflags rsp 
--------------------------------------------------------------------------------
0006cb40: CLP; sub rsp, 0x18 ; mov rax, qword ptr [rdi + 0xf8] ; mov qword ptr [rsp + 8], rsi ; test rax, rax ; je 0x6cb7c
read: rax rflags rsi rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
0006cb90: CLP; mov rdx, qword ptr [rdi + 0x100] ; xor eax, eax ; test rdx, rdx ; je 0x6cbb3
read: eax rdx rflags 
write: eax rdx rflags 
--------------------------------------------------------------------------------
0006cbc0: CLP; sub rsp, 8 ; mov qword ptr [rdi + 0x90], -1 ; call 0x76e8c
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0006cbf0: CLP; push r12 ; mov r12, rdx ; push rbp ; mov ebp, esi ; xor esi, esi ; push rbx ; mov rbx, rdi ; call 0x79ccc
read: esi r12 rbp rbx rdi rdx rip rsp 
write: ebp esi r12 rbx rflags rsp 
--------------------------------------------------------------------------------
0006cc80: CLP; push r12 ; mov r12, rdi ; push rbp ; push rbx ; sub rsp, 0x20 ; movzx eax, byte ptr [rsi] ; cmp al, 0x72 ; je 0x6cd5c
read: al r12 rbp rbx rdi rflags rsp 
write: eax r12 rflags rsp 
--------------------------------------------------------------------------------
0006cd70: CLP; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rsi ; call 0x856dc
read: r12 rbp rbx rdi rip rsi rsp 
write: rbp rbx rsp 
--------------------------------------------------------------------------------
0006cef0: CLP; push r13 ; mov r13, rdx ; push r12 ; mov r12, rsi ; push rbp ; mov rbp, rsi ; imul rbp, rdx ; push rbx ; sub rsp, 8 ; test rbp, rbp ; je 0x6cffc
read: r12 r13 rbp rbx rdx rflags rsi rsp 
write: r12 r13 rbp rflags rsp 
--------------------------------------------------------------------------------
0006d070: CLP; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov eax, dword ptr [rdi] ; and eax, 0x8000 ; jne 0x6d0df
read: eax rbp rbx rdi rflags rsi rsp 
write: eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0006d210: CLP; push rbx ; mov eax, dword ptr [rdi] ; mov rbx, rdi ; and eax, 0x8000 ; jne 0x6d277
read: eax rbx rdi rflags rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
0006d3b0: CLP; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov rdx, qword ptr [rdi + 0x38] ; test rdx, rdx ; je 0x6d43c
read: rbp rbx rdi rdx rflags rsp 
write: rbx rdx rflags rsp 
--------------------------------------------------------------------------------
0006d460: CLP; push r13 ; mov r13, rdx ; push r12 ; mov r12, rsi ; imul r12, rdx ; push rbp ; mov rbp, rsi ; push rbx ; sub rsp, 8 ; test r12, r12 ; je 0x6d56c
read: r12 r13 rbp rbx rdx rflags rsi rsp 
write: r12 r13 rbp rflags rsp 
--------------------------------------------------------------------------------
0006d630: CLP; push r15 ; push r14 ; push r13 ; push r12 ; mov r12, rdi ; push rbp ; push rbx ; sub rsp, 0x28 ; test rdi, rdi ; mov qword ptr [rsp + 0x10], rsi ; mov dword ptr [rsp + 0x1c], edx ; je 0x6d8cb
read: edx r12 r13 r14 r15 rbp rbx rdi rflags rsi rsp 
write: r12 rflags rsp 
--------------------------------------------------------------------------------
0006d970: CLP; push r15 ; mov r15, rdx ; push r14 ; mov r14, rdi ; push r13 ; push r12 ; push rbp ; mov ebp, ecx ; push rbx ; sub rsp, 0x28 ; test r9, r9 ; mov qword ptr [rsp + 8], rsi ; mov dword ptr [rsp + 0x14], r8d ; mov qword ptr [rsp + 0x18], r9 ; je 0x6d9a1
read: ecx r12 r13 r14 r15 r8d r9 rbp rbx rdi rdx rflags rsi rsp 
write: ebp r14 r15 rflags rsp 
--------------------------------------------------------------------------------
0006db30: CLP; sub rsp, 8 ; xor r9d, r9d ; call 0x6d96c
read: r9d rip rsp 
write: r9d rflags rsp 
--------------------------------------------------------------------------------
0006db50: CLP; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, qword ptr [rip + 0x2fcbb6] ; mov eax, dword ptr [rbx] ; mov rdi, rbx ; and eax, 0x8000 ; jne 0x6dbcf
read: eax r12 rbp rbx rdi rflags rsp 
write: eax rbp rbx rdi rflags rsp 
--------------------------------------------------------------------------------
0006dd40: CLP; push r13 ; lea r13, [rip + 0xcf783] ; push r12 ; mov r12, rdi ; push rbp ; push rbx ; sub rsp, 0x18 ; cmp esi, 0x20 ; je 0x6dd88
read: esi r12 r13 rbp rbx rdi rflags rsp 
write: r12 r13 rflags rsp 
--------------------------------------------------------------------------------
0006de10: CLP; push r12 ; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 0x20 ; mov ebp, dword ptr [rip + 0x30094b] ; test ebp, ebp ; jne 0x6e004
read: ebp r12 rbp rbx rdi rflags rsp 
write: ebp rbx rflags rsp 
--------------------------------------------------------------------------------
0006e060: CLP; sub dword ptr [rip + 0x2fd6d9], 1 ; jne 0x6e0ae
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
0006e0c0: CLP; push r15 ; xor r9d, r9d ; push r14 ; push r13 ; mov r13, rsi ; push r12 ; mov r12, rdi ; push rbp ; xor ebp, ebp ; push rbx ; xor ebx, ebx ; sub rsp, 0x48 ; movzx r8d, byte ptr [rdx] ; test r8b, r8b ; je 0x6e136
read: ebp ebx r12 r13 r14 r15 r8b r9d rbp rbx rdi rflags rsi rsp 
write: ebp ebx r12 r13 r8d r9d rflags rsp 
--------------------------------------------------------------------------------
0006e410: CLP; push r12 ; mov r12, rsi ; push rbp ; mov rbp, rdi ; mov edi, 0x100 ; push rbx ; sub rsp, 0x10 ; call 0x1f3cc
read: r12 rbp rbx rdi rip rsi rsp 
write: edi r12 rbp rflags rsp 
--------------------------------------------------------------------------------
0006e4c0: CLP; push r12 ; mov r12, rdi ; push rbp ; push rbx ; call 0x856dc
read: r12 rbp rbx rdi rip rsp 
write: r12 rsp 
--------------------------------------------------------------------------------
0006e6b0: CLP; cmp edx, 2 ; ja 0x6e76c
read: edx rflags 
write: rflags 
--------------------------------------------------------------------------------
0006e790: CLP; push r12 ; mov r10, rsi ; push rbp ; mov ebp, ecx ; push rbx ; mov eax, dword ptr [rdi] ; mov rbx, rdi ; and eax, 0x8000 ; jne 0x6e802
read: eax ecx r12 rbp rbx rdi rflags rsi rsp 
write: eax ebp r10 rbx rflags rsp 
--------------------------------------------------------------------------------
0006e8d0: CLP; push r12 ; mov r12d, edx ; push rbp ; mov rbp, rsi ; push rbx ; mov eax, dword ptr [rdi + 0xc0] ; mov rbx, rdi ; test eax, eax ; jle 0x6e91c
read: eax edx r12 rbp rbx rdi rflags rsi rsp 
write: eax r12d rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0006e940: CLP; push rbp ; mov r10, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov eax, dword ptr [rdi] ; and eax, 0x8000 ; jne 0x6e9b2
read: eax rbp rbx rdi rflags rsi rsp 
write: eax r10 rbx rflags rsp 
--------------------------------------------------------------------------------
0006ea80: CLP; push r12 ; mov r12, rsi ; push rbp ; push rbx ; mov ecx, dword ptr [rdi] ; mov rbx, rdi ; mov eax, ecx ; and eax, 0x8000 ; jne 0x6eaf4
read: eax ecx r12 rbp rbx rdi rflags rsi rsp 
write: eax ecx r12 rbx rflags rsp 
--------------------------------------------------------------------------------
0006ec00: CLP; push r12 ; mov r10, rsi ; push rbp ; mov rbp, rcx ; push rbx ; mov rbx, rdi ; mov edi, dword ptr [rdi] ; mov eax, edi ; mov r8d, edi ; and eax, 0x8000 ; jne 0x6ec7d
read: eax edi r12 rbp rbx rcx rdi rflags rsi rsp 
write: eax edi r10 r8d rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0006ee10: CLP; cmp edi, -1 ; mov r8d, edi ; je 0x6eef4
read: edi rflags 
write: r8d rflags 
--------------------------------------------------------------------------------
0006ef00: CLP; push r13 ; xor r8d, r8d ; xor ecx, ecx ; mov r13, rdx ; mov edx, 0xffffffff ; push r12 ; mov r12, rsi ; mov esi, 0x8000 ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 0xf8 ; mov rdi, rsp ; mov qword ptr [rsp + 0x88], 0 ; call 0x79c0c
read: ecx r12 r13 r8d rbp rbx rdi rdx rip rsi rsp 
write: ecx edx esi r12 r13 r8d rbp rdi rflags rsp 
--------------------------------------------------------------------------------
0006efb0: CLP; push r13 ; xor r8d, r8d ; mov r13, rdi ; xor ecx, ecx ; push r12 ; mov r12, rdx ; mov edx, 0xffffffff ; push rbp ; mov rbp, rsi ; mov esi, 0x8000 ; push rbx ; sub rsp, 0xf8 ; mov rdi, rsp ; mov qword ptr [rsp + 0x88], 0 ; call 0x79c0c
read: ecx r12 r13 r8d rbp rbx rdi rdx rip rsi rsp 
write: ecx edx esi r12 r13 r8d rbp rdi rflags rsp 
--------------------------------------------------------------------------------
0006f040: CLP; push rbp ; mov ebp, edi ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; mov eax, dword ptr [rsi] ; and eax, 0x8000 ; jne 0x6f0ae
read: eax edi rbp rbx rflags rsi rsp 
write: eax ebp rbx rflags rsp 
--------------------------------------------------------------------------------
0006f1c0: CLP; push rbp ; mov ebp, edi ; push rbx ; mov rbx, rsi ; mov esi, 1 ; mov rdi, rbx ; sub rsp, 8 ; call 0x73bdc
read: edi rbp rbx rip rsi rsp 
write: ebp esi rbx rdi rflags rsp 
--------------------------------------------------------------------------------
0006f230: CLP; push rbx ; mov eax, dword ptr [rdi] ; mov rbx, rdi ; and eax, 0x8000 ; jne 0x6f297
read: eax rbx rdi rflags rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
0006f380: CLP; sub rsp, 8 ; mov rax, qword ptr [rdi + 0xa0] ; test rax, rax ; je 0x6f3a7
read: rax rflags rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
0006f3c0: CLP; push rbx ; mov rbx, qword ptr [rip + 0x2fb34c] ; mov eax, dword ptr [rbx] ; mov rdi, rbx ; and eax, 0x8000 ; jne 0x6f439
read: eax rbx rflags rsp 
write: eax rbx rdi rflags rsp 
--------------------------------------------------------------------------------
0006f530: CLP; sub rsp, 8 ; mov rdi, qword ptr [rip + 0x2fb1d9] ; mov rax, qword ptr [rdi + 0xa0] ; test rax, rax ; je 0x6f55e
read: rax rflags rsp 
write: rax rdi rflags rsp 
--------------------------------------------------------------------------------
0006f570: CLP; test esi, esi ; mov r9d, esi ; jle 0x6f6bc
read: esi rflags 
write: r9d rflags 
--------------------------------------------------------------------------------
0006f730: CLP; test esi, esi ; jle 0x6f7ac
read: esi rflags 
write: rflags 
--------------------------------------------------------------------------------
0006f7c0: CLP; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rsi ; call 0x957cc
read: r12 rbp rbx rdi rip rsi rsp 
write: rbp rbx rsp 
--------------------------------------------------------------------------------
0006f940: CLP; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rsi ; call 0x957cc
read: r12 rbp rbx rdi rip rsi rsp 
write: rbp rbx rsp 
--------------------------------------------------------------------------------
0006f9b0: CLP; push r15 ; mov r15, rdx ; push r14 ; mov r14, rdi ; push r13 ; push r12 ; push rbp ; mov ebp, ecx ; push rbx ; sub rsp, 0x28 ; test r9, r9 ; mov qword ptr [rsp + 8], rsi ; mov dword ptr [rsp + 0x14], r8d ; mov qword ptr [rsp + 0x18], r9 ; je 0x6f9e1
read: ecx r12 r13 r14 r15 r8d r9 rbp rbx rdi rdx rflags rsi rsp 
write: ebp r14 r15 rflags rsp 
--------------------------------------------------------------------------------
0006fba0: CLP; sub rsp, 8 ; xor r9d, r9d ; call 0x6f9ac
read: r9d rip rsp 
write: r9d rflags rsp 
--------------------------------------------------------------------------------
0006fbc0: CLP; push r13 ; lea r13, [rip + 0xc0cb3] ; push r12 ; mov r12, rdi ; push rbp ; push rbx ; sub rsp, 0x48 ; cmp esi, 0x20 ; je 0x6fc07
read: esi r12 r13 rbp rbx rdi rflags rsp 
write: r12 r13 rflags rsp 
--------------------------------------------------------------------------------
0006fc90: CLP; push rbp ; mov ebp, edi ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; mov eax, dword ptr [rsi] ; and eax, 0x8000 ; jne 0x6fcfe
read: eax edi rbp rbx rflags rsi rsp 
write: eax ebp rbx rflags rsp 
--------------------------------------------------------------------------------
0006fd80: CLP; push rbx ; mov eax, dword ptr [rsi] ; mov r8d, edi ; mov rbx, rsi ; and eax, 0x8000 ; jne 0x6fdea
read: eax edi rbx rflags rsi rsp 
write: eax r8d rbx rflags rsp 
--------------------------------------------------------------------------------
0006fee0: CLP; sub rsp, 8 ; mov rdx, qword ptr [rsi + 0xa0] ; mov rax, rsi ; test rdx, rdx ; je 0x6ff0e
read: rdx rflags rsi rsp 
write: rax rdx rflags rsp 
--------------------------------------------------------------------------------
0006ff30: CLP; push rbx ; mov rbx, qword ptr [rip + 0x2fa7d4] ; mov r8d, edi ; mov eax, dword ptr [rbx] ; mov rdi, rbx ; and eax, 0x8000 ; jne 0x6ffac
read: eax edi rbx rflags rsp 
write: eax r8d rbx rdi rflags rsp 
--------------------------------------------------------------------------------
000700b0: CLP; sub rsp, 8 ; mov rax, qword ptr [rip + 0x2fa651] ; mov rdx, qword ptr [rax + 0xa0] ; test rdx, rdx ; je 0x700e2
read: rdx rflags rsp 
write: rax rdx rflags rsp 
--------------------------------------------------------------------------------
00070100: CLP; push rbx ; mov rbx, qword ptr [rip + 0x2fa604] ; mov r8d, edi ; mov eax, dword ptr [rbx] ; mov rdi, rbx ; and eax, 0x8000 ; jne 0x7017c
read: eax edi rbx rflags rsp 
write: eax r8d rbx rdi rflags rsp 
--------------------------------------------------------------------------------
00070270: CLP; mov rdx, qword ptr [rip + 0x2fa495] ; mov rcx, qword ptr [rdx + 0x28] ; cmp rcx, qword ptr [rdx + 0x30] ; jae 0x70291
read: rcx rflags 
write: rcx rdx rflags 
--------------------------------------------------------------------------------
000702b0: CLP; sub rsp, 0xd8 ; test al, al ; mov qword ptr [rsp + 0x30], rdx ; mov qword ptr [rsp + 0x38], rcx ; mov qword ptr [rsp + 0x40], r8 ; mov qword ptr [rsp + 0x48], r9 ; je 0x70306
read: al r8 r9 rcx rdx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00070350: CLP; sub rsp, 0xd8 ; test al, al ; mov qword ptr [rsp + 0x38], rcx ; mov qword ptr [rsp + 0x40], r8 ; mov qword ptr [rsp + 0x48], r9 ; je 0x703a1
read: al r8 r9 rcx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000703f0: CLP; sub rsp, 8 ; mov rax, qword ptr [rip + 0x2f8b41] ; mov rdx, rsi ; mov rsi, rdi ; mov rdi, qword ptr [rax] ; call 0x525dc
read: rdi rip rsi rsp 
write: rax rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00070420: CLP; sub rsp, 0xd8 ; test al, al ; mov qword ptr [rsp + 0x28], rsi ; mov qword ptr [rsp + 0x30], rdx ; mov qword ptr [rsp + 0x38], rcx ; mov qword ptr [rsp + 0x40], r8 ; mov qword ptr [rsp + 0x48], r9 ; je 0x7047b
read: al r8 r9 rcx rdx rflags rsi rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000704d0: CLP; sub rsp, 0xd8 ; test al, al ; mov qword ptr [rsp + 0x28], rsi ; mov qword ptr [rsp + 0x30], rdx ; mov qword ptr [rsp + 0x38], rcx ; mov qword ptr [rsp + 0x40], r8 ; mov qword ptr [rsp + 0x48], r9 ; je 0x7052b
read: al r8 r9 rcx rdx rflags rsi rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00070580: CLP; sub rsp, 0xd8 ; test al, al ; mov qword ptr [rsp + 0x30], rdx ; mov qword ptr [rsp + 0x38], rcx ; mov qword ptr [rsp + 0x40], r8 ; mov qword ptr [rsp + 0x48], r9 ; je 0x705d6
read: al r8 r9 rcx rdx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00070620: CLP; sub rsp, 8 ; mov rdx, rsi ; mov rsi, rdi ; mov rdi, qword ptr [rip + 0x2fa0e3] ; xor ecx, ecx ; call 0x60fdc
read: ecx rdi rip rsi rsp 
write: ecx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00070650: CLP; push r13 ; mov r13d, esi ; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; lea rbx, [rdi + 0xf0] ; sub rsp, 8 ; mov rdx, qword ptr [rdi + 0xa0] ; cmp qword ptr [rdx + 0x30], rbx ; je 0x706a2
read: esi r12 r13 rbp rbx rdi rflags rsp 
write: r13d rbp rbx rdx rflags rsp 
--------------------------------------------------------------------------------
000706c0: CLP; push r14 ; push r13 ; push r12 ; mov r12, rsi ; push rbp ; push rbx ; sub rsp, 0x340 ; test rsi, rsi ; mov qword ptr [rsp + 0x1d8], 0 ; je 0x7078c
read: r12 r13 r14 rbp rbx rflags rsi rsp 
write: r12 rflags rsp 
--------------------------------------------------------------------------------
000707a0: CLP; push r13 ; lea r8, [rip + 0x2f77f3] ; mov r13, rdi ; push r12 ; mov r12, rdx ; xor edx, edx ; push rbp ; mov rbp, rsi ; mov esi, 0x8000 ; push rbx ; sub rsp, 0x248 ; lea rcx, [rsp + 0xf0] ; mov rdi, rsp ; mov qword ptr [rsp + 0x88], 0 ; call 0x79c0c
read: edx r12 r13 rbp rbx rdi rdx rip rsi rsp 
write: edx esi r12 r13 r8 rbp rcx rdi rflags rsp 
--------------------------------------------------------------------------------
00070830: CLP; sub rsp, 0xd8 ; test al, al ; mov qword ptr [rsp + 0x30], rdx ; mov qword ptr [rsp + 0x38], rcx ; mov qword ptr [rsp + 0x40], r8 ; mov qword ptr [rsp + 0x48], r9 ; je 0x70886
read: al r8 r9 rcx rdx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000708d0: CLP; push r15 ; push r14 ; mov r14, rdi ; push r13 ; mov r13, rsi ; push r12 ; mov r12, rdx ; push rbp ; mov rbp, rdx ; push rbx ; sub rsp, 0x28 ; mov r8, qword ptr [rsi] ; mov rax, qword ptr [rdi] ; mov r9, qword ptr [r8 + 0x10] ; sub rbp, r9
read: r12 r13 r14 r15 r9 rbp rbx rdi rdx rsi rsp 
write: r12 r13 r14 r8 r9 rax rbp rflags rsp 
--------------------------------------------------------------------------------
00070b30: CLP; mov rdx, qword ptr [rdi + 0xa0] ; mov rax, rsi ; sub rax, qword ptr [rdx + 0x10] ; mov rdx, qword ptr [rdi + 0x60] ; sar rax, 2 ; test rdx, rdx ; je 0x70b5f
read: rax rdx rflags rsi 
write: rax rdx rflags 
--------------------------------------------------------------------------------
00070b70: CLP; mov rax, qword ptr [rdi + 0xa0] ; and dword ptr [rdi], 0xfffffeff ; mov rdx, qword ptr [rax + 8] ; mov rcx, qword ptr [rax + 0x50] ; mov qword ptr [rax + 0x50], rdx ; mov rdx, qword ptr [rax + 0x40] ; mov qword ptr [rax + 8], rcx ; mov rcx, qword ptr [rax + 0x10] ; mov qword ptr [rax], rdx ; mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
read: rcx rdx 
write: rax rcx rdx rflags 
--------------------------------------------------------------------------------
00070bb0: CLP; mov rax, qword ptr [rdi + 0xa0] ; or dword ptr [rdi], 0x100 ; mov rcx, qword ptr [rax + 8] ; mov rdx, qword ptr [rax + 0x50] ; mov rsi, qword ptr [rax + 0x40] ; mov qword ptr [rax + 0x50], rcx ; mov rcx, qword ptr [rax + 0x10] ; mov qword ptr [rax + 8], rdx ; mov qword ptr [rax], rdx ; mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
read: rcx rdx rsi 
write: rax rcx rdx rflags rsi 
--------------------------------------------------------------------------------
00070bf0: CLP; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 0x18 ; mov rax, qword ptr [rdi + 0xa0] ; mov r8d, dword ptr [rbx + 0x74] ; mov rdi, qword ptr [rax + 0x30] ; test rdi, rdi ; je 0x70c16
read: rbp rbx rdi rflags rsi rsp 
write: r8d rax rbp rbx rdi rflags rsp 
--------------------------------------------------------------------------------
00070c90: CLP; push r15 ; push r14 ; push r13 ; push r12 ; mov r12d, esi ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 0x18 ; mov rbx, qword ptr [rdi + 0xa0] ; mov rdx, qword ptr [rbx] ; mov r13, qword ptr [rbx + 0x10] ; mov rax, rbx ; cmp rdx, r13 ; ja 0x70d1c
read: esi r12 r13 r14 r15 rbp rbx rdi rdx rflags rsp 
write: r12d r13 rax rbp rbx rdx rflags rsp 
--------------------------------------------------------------------------------
00070e40: CLP; push rbx ; mov rdx, qword ptr [rdi + 0xa0] ; mov rbx, rdi ; mov rdi, qword ptr [rdx + 0x30] ; test rdi, rdi ; je 0x70e5a
read: rbx rdi rflags rsp 
write: rbx rdi rdx rflags rsp 
--------------------------------------------------------------------------------
00070ef0: CLP; mov rax, qword ptr [rdi + 0xd8] ; push rbx ; mov rbx, rdi ; call qword ptr [rax + 0x20]
read: rbx rdi rsp 
write: rax rbx rsp 
--------------------------------------------------------------------------------
00070f30: CLP; push rbp ; mov ebp, esi ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov eax, dword ptr [rdi + 0xc0] ; test eax, eax ; jne 0x70f53
read: eax esi rbp rbx rdi rflags rsp 
write: eax ebp rbx rflags rsp 
--------------------------------------------------------------------------------
00070f80: CLP; push r15 ; xor eax, eax ; push r14 ; push r13 ; push r12 ; mov r12, rdx ; push rbp ; push rbx ; sub rsp, 8 ; test rdx, rdx ; je 0x71062
read: eax r12 r13 r14 r15 rbp rbx rdx rflags rsp 
write: eax r12 rflags rsp 
--------------------------------------------------------------------------------
000710a0: CLP; push rbx ; mov rsi, qword ptr [rdi + 0xa0] ; mov rbx, rdi ; cmp qword ptr [rsi + 0x30], 0 ; je 0x710bc
read: rbx rdi rflags rsp 
write: rbx rflags rsi rsp 
--------------------------------------------------------------------------------
00071100: CLP; push rbx ; xor r9d, r9d ; mov rbx, rdi ; mov r8d, 0xffffffff ; xor edi, edi ; mov ecx, 0x22 ; mov edx, 3 ; mov esi, 0x2000 ; call 0xe004c
read: edi r9d rbx rdi rip rsp 
write: ecx edi edx esi r8d r9d rbx rflags rsp 
--------------------------------------------------------------------------------
00071160: CLP; mov rax, qword ptr [rdi + 0xa0] ; push rbx ; mov rbx, rdi ; mov rdx, qword ptr [rax + 0x20] ; cmp rdx, qword ptr [rax + 0x18] ; ja 0x711bc
read: rbx rdi rdx rflags rsp 
write: rax rbx rdx rflags rsp 
--------------------------------------------------------------------------------
000711f0: CLP; push rbx ; mov eax, dword ptr [rdi] ; mov rbx, rdi ; test ah, 1 ; je 0x7125c
read: ah rbx rdi rflags rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
00071270: CLP; push rbx ; mov ecx, dword ptr [rdi + 0xc0] ; mov rbx, rdi ; test ecx, ecx ; js 0x712dc
read: ecx rbx rdi rflags rsp 
write: ecx rbx rflags rsp 
--------------------------------------------------------------------------------
000713b0: CLP; push rbx ; mov rbx, rdi ; mov edi, dword ptr [rdi + 0xc0] ; test edi, edi ; js 0x7141c
read: edi rbx rdi rflags rsp 
write: edi rbx rflags rsp 
--------------------------------------------------------------------------------
000714f0: CLP; push r14 ; push r13 ; mov r13, rdx ; push r12 ; mov r12, rsi ; push rbp ; mov rbp, rdx ; push rbx ; mov rbx, rdi ; nop dword ptr [rax + rax] ; mov rdi, qword ptr [rbx + 0xa0] ; mov rsi, qword ptr [rdi] ; mov r8, qword ptr [rdi + 8] ; sub r8, rsi ; sar r8, 2
read: r12 r13 r14 r8 rbp rbx rdi rdx rsi rsp 
write: r12 r13 r8 rbp rbx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000715d0: CLP; push rbx ; mov rdx, qword ptr [rdi + 0xa0] ; mov rbx, rdi ; mov eax, esi ; mov rcx, qword ptr [rdx] ; cmp rcx, qword ptr [rdx + 0x10] ; jbe 0x715eb
read: esi rbx rcx rdi rflags rsp 
write: eax rbx rcx rdx rflags rsp 
--------------------------------------------------------------------------------
00071620: CLP; mov rax, qword ptr [rdi + 0xa0] ; push rbx ; mov rbx, rdi ; mov rdx, qword ptr [rax] ; cmp rdx, qword ptr [rax + 0x10] ; jbe 0x7164c
read: rbx rdi rdx rflags rsp 
write: rax rbx rdx rflags rsp 
--------------------------------------------------------------------------------
00071670: CLP; movsxd rcx, edx ; lea r8, [rsi + rcx*4] ; cmp rsi, r8 ; jae 0x7169a
read: edx r8 rflags rsi 
write: r8 rcx rflags 
--------------------------------------------------------------------------------
000716c0: CLP; push rbx ; mov rbx, rdi ; sub rsp, 0x10 ; mov eax, dword ptr [rsi] ; mov qword ptr [rdi + 8], rsi ; test ah, 8 ; jne 0x71714
read: ah rbx rdi rflags rsi rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
00071740: CLP; mov rax, qword ptr [rdi + 8] ; test rax, rax ; je 0x7177a
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
00071790: CLP; mov rdx, qword ptr [rsi + 8] ; mov eax, 0xffffffff ; cmp rdx, rdi ; jne 0x717e5
read: rdi rdx rflags 
write: eax rdx rflags 
--------------------------------------------------------------------------------
00071850: CLP; cmp qword ptr [rdi + 0x60], 0 ; je 0x7185f
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
00071880: CLP; mov rax, qword ptr [rdi + 0xa0] ; mov rdx, qword ptr [rax + 0x20] ; mov rsi, qword ptr [rax + 8] ; cmp rdx, rsi ; jbe 0x7189b
read: rdx rflags rsi 
write: rax rdx rflags rsi 
--------------------------------------------------------------------------------
000718e0: CLP; push r15 ; push r14 ; push r13 ; push r12 ; mov r12d, esi ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 0x18 ; mov edx, dword ptr [rdi] ; cmp esi, -1 ; sete r13b ; test dl, 8 ; je 0x7191c
read: dl esi r12 r13 r14 r15 rbp rbx rdi rflags rsp 
write: edx r12d r13b rbp rflags rsp 
--------------------------------------------------------------------------------
00071af0: CLP; sub rsp, 8 ; test byte ptr [rdi], 8 ; je 0x71b0c
read: rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00071b20: CLP; push rbx ; mov rax, qword ptr [rdi + 0xa0] ; mov rbx, rdi ; mov rdi, qword ptr [rax + 0x30] ; test rdi, rdi ; je 0x71b4b
read: rbx rdi rflags rsp 
write: rax rbx rdi rflags rsp 
--------------------------------------------------------------------------------
00071b70: CLP; push r15 ; push r14 ; push r13 ; mov r13, rdi ; push r12 ; push rbp ; push rbx ; sub rsp, 0x28 ; mov r14, qword ptr [rdi + 0xa0] ; mov ebx, dword ptr [rdi + 0x74] ; mov dword ptr [rsp + 0xc], edx ; mov rax, qword ptr [r14 + 0x18] ; and ebx, 8 ; mov r15, qword ptr [r14 + 0x28] ; mov qword ptr [rsp], rax
read: ebx edx r12 r13 r14 r15 rax rbp rbx rdi rsp 
write: ebx r13 r14 r15 rax rflags rsp 
--------------------------------------------------------------------------------
00071d60: CLP; push r13 ; push r12 ; mov r12, rcx ; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; test rdx, rdx ; jne 0x71ddc
read: r12 r13 rbp rbx rcx rdi rdx rflags rsi rsp 
write: r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00071e10: CLP; mov rdx, qword ptr [rdi + 0xa0] ; mov rax, qword ptr [rdx + 8] ; cmp qword ptr [rdx + 0x20], rax ; cmovae rax, qword ptr [rdx + 0x20] ; sub rax, qword ptr [rdx + 0x10] ; sar rax, 2 ; ret
read: rax rflags 
write: rax rdx rflags 
--------------------------------------------------------------------------------
00071e40: CLP; push r14 ; test ecx, ecx ; push r13 ; mov r13d, edx ; push r12 ; mov r12d, ecx ; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; jne 0x71ed4
read: ecx edx r12 r13 r14 rbp rbx rdi rflags rsi rsp 
write: r12d r13d rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00072060: CLP; push r12 ; mov r12d, esi ; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 0x20 ; mov rbp, qword ptr [rdi + 0x98] ; mov rdi, rbp ; call qword ptr [rbp + 0x20]
read: esi r12 rbp rbx rdi rsp 
write: r12d rbp rbx rdi rflags rsp 
--------------------------------------------------------------------------------
00072140: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 0x48 ; mov eax, dword ptr [rdi] ; test al, 4 ; jne 0x72727
read: al r12 r13 r14 r15 rbp rbx rdi rflags rsp 
write: al eax rbx rflags rsp 
--------------------------------------------------------------------------------
000727c0: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 0xc8 ; test ecx, ecx ; je 0x72ab4
read: ecx r12 r13 r14 r15 rbp rbx rdi rflags rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
00072f60: CLP; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 0x28 ; mov eax, dword ptr [rdi] ; test al, 4 ; jne 0x73094
read: al rbp rbx rdi rflags rsp 
write: al eax rbx rflags rsp 
--------------------------------------------------------------------------------
000730b0: CLP; push rbx ; mov rbx, rdi ; call 0x7772c
read: rbx rdi rip rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
000730f0: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; mov rbp, rdx ; push rbx ; mov rbx, rdi ; sub rsp, 0x38 ; test rdx, rdx ; mov r13, qword ptr [rdi + 0x98] ; je 0x731c8
read: r12 r13 r14 r15 rbp rbx rdi rdx rflags rsp 
write: r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00073250: CLP; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov eax, dword ptr [rdi] ; test al, 8 ; je 0x73284
read: al rbp rbx rdi rflags rsp 
write: al eax rbx rflags rsp 
--------------------------------------------------------------------------------
00073500: CLP; push r12 ; push rbp ; push rbx ; mov rax, qword ptr [rdi + 0xa0] ; mov rbx, rdi ; mov rdx, qword ptr [rax + 0x20] ; mov rsi, qword ptr [rax + 0x18] ; cmp rdx, rsi ; jbe 0x73551
read: r12 rbp rbx rdi rdx rflags rsi rsp 
write: rax rbx rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00073670: CLP; push r15 ; xor eax, eax ; push r14 ; push r13 ; push r12 ; push rbp ; mov rbp, rdx ; push rbx ; sub rsp, 8 ; test rdx, rdx ; je 0x73740
read: eax r12 r13 r14 r15 rbp rbx rdx rflags rsp 
write: eax rbp rflags rsp 
--------------------------------------------------------------------------------
00073810: CLP; mov rdx, qword ptr [rdi + 0x48] ; mov ecx, dword ptr [rdx + 0x58] ; test ecx, ecx ; jne 0x7382c
read: ecx rflags 
write: ecx rdx rflags 
--------------------------------------------------------------------------------
00073840: CLP; xor eax, eax ; ret
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
00073850: CLP; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
read: 
write: eax rax 
--------------------------------------------------------------------------------
00073860: CLP; push r14 ; mov r14, r8 ; push r13 ; mov r13, rcx ; push r12 ; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 0x20 ; mov r12, qword ptr [rdi + 0x48] ; mov qword ptr [rdi + 0x50], r9 ; mov rax, qword ptr [rsp + 0x50] ; mov qword ptr [rdi + 0x70], rsi ; mov qword ptr [rsp + 0x18], rdx ; mov qword ptr [rdi + 0x58], rax
read: r12 r13 r14 r8 r9 rax rbp rbx rcx rdi rdx rsi rsp 
write: r12 r13 r14 rax rbx rflags rsp 
--------------------------------------------------------------------------------
00073950: CLP; push r13 ; mov r13, r8 ; push r12 ; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 0x28 ; mov r12, qword ptr [rdi + 0x90] ; mov qword ptr [rdi + 0x98], rdx ; mov qword ptr [rdi + 0xa0], rcx ; mov qword ptr [rdi + 0xb8], rsi ; cmp qword ptr [r12], 0 ; mov rbp, qword ptr [r12 + 0x28] ; je 0x73995
read: r12 r13 r8 rbp rbx rcx rdi rdx rflags rsi rsp 
write: r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00073a30: CLP; push r14 ; mov r14, r8 ; push r13 ; mov r13, rcx ; push r12 ; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 0x20 ; mov r12, qword ptr [rdi + 0x90] ; mov qword ptr [rdi + 0x98], r9 ; mov rax, qword ptr [rsp + 0x50] ; mov qword ptr [rdi + 0xb8], rsi ; mov qword ptr [rsp + 0x18], rdx ; mov qword ptr [rdi + 0xa0], rax
read: r12 r13 r14 r8 r9 rax rbp rbx rcx rdi rdx rsi rsp 
write: r12 r13 r14 rax rbx rflags rsp 
--------------------------------------------------------------------------------
00073b30: CLP; push rbp ; shl r8, 2 ; lea rax, [r8 + 0x12] ; mov rbp, rsp ; push r15 ; mov r15, rcx ; and rax, 0xfffffffffffffff0 ; push r14 ; mov r14, rdx ; push r13 ; push r12 ; push rbx ; mov rbx, rdi ; sub rsp, 0x28 ; mov r13, qword ptr [rdi + 0x48]
read: r12 r13 r14 r15 r8 rax rbp rbx rcx rdi rdx rsp 
write: r13 r14 r15 r8 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00073be0: CLP; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 0x20 ; test esi, esi ; mov eax, dword ptr [rdi + 0xc0] ; js 0x73dbc
read: esi r12 rbp rbx rdi rflags rsp 
write: eax rbp rflags rsp 
--------------------------------------------------------------------------------
00073dd0: CLP; test esi, esi ; push rbx ; mov rbx, rdi ; js 0x73ed4
read: esi rbx rdi rflags rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
00073f10: CLP; mov rax, qword ptr [rdi + 0xa0] ; push rbx ; mov rbx, rdi ; mov rdx, qword ptr [rax + 0x20] ; cmp rdx, qword ptr [rax + 0x28] ; je 0x73f5c
read: rbx rdi rdx rflags rsp 
write: rax rbx rdx rflags rsp 
--------------------------------------------------------------------------------
00073f80: CLP; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov rax, qword ptr [rdi + 0xa0] ; mov rbp, qword ptr [rdi + 0xf0] ; mov rdi, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax + 0x20] ; sub rax, rdi ; sar rax, 2 ; lea rsi, [rax*4 + 4] ; call 0x1f3ac
read: rax rbp rbx rdi rip rsp 
write: rax rbp rbx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00074010: CLP; push r13 ; mov r13, rdi ; mov edi, 0x258 ; push r12 ; mov r12, rsi ; push rbp ; push rbx ; sub rsp, 8 ; call 0x1f3cc
read: r12 r13 rbp rbx rdi rip rsi rsp 
write: edi r12 r13 rflags rsp 
--------------------------------------------------------------------------------
00074110: CLP; mov ecx, dword ptr [rdi] ; mov r8, rdi ; mov eax, ecx ; and eax, 0x8000 ; jne 0x741d4
read: eax ecx rdi rflags 
write: eax ecx r8 rflags 
--------------------------------------------------------------------------------
00074200: CLP; mov esi, dword ptr [rdi] ; mov r8, rdi ; mov eax, esi ; and eax, 0x8000 ; jne 0x742cc
read: eax esi rdi rflags 
write: eax esi r8 rflags 
--------------------------------------------------------------------------------
00074300: CLP; mov esi, dword ptr [rdi] ; mov r8, rdi ; mov eax, esi ; and eax, 0x8000 ; jne 0x743cc
read: eax esi rdi rflags 
write: eax esi r8 rflags 
--------------------------------------------------------------------------------
00074400: CLP; test dword ptr [rdi], 0x2000 ; je 0x74414
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
00074430: CLP; push rbx ; mov eax, dword ptr [rsi] ; mov r8d, edi ; mov rbx, rsi ; and eax, 0x8000 ; jne 0x7449a
read: eax edi rbx rflags rsi rsp 
write: eax r8d rbx rflags rsp 
--------------------------------------------------------------------------------
00074580: CLP; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; mov rbx, rdx ; sub rsp, 0x90 ; mov eax, dword ptr [rdx] ; test ah, 0x20 ; je 0x747ec
read: ah r12 r13 r14 rbp rbx rdx rflags rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
00074880: CLP; push rbp ; mov r10, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov eax, dword ptr [rdi] ; and eax, 0x8000 ; jne 0x748f2
read: eax rbp rbx rdi rflags rsi rsp 
write: eax r10 rbx rflags rsp 
--------------------------------------------------------------------------------
000749d0: CLP; push rbx ; mov eax, dword ptr [rdi] ; mov rbx, rdi ; and eax, 0x8000 ; jne 0x74a37
read: eax rbx rdi rflags rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
00074b10: CLP; push rbx ; mov rbx, qword ptr [rip + 0x2f5bfc] ; mov eax, dword ptr [rbx] ; mov rdi, rbx ; and eax, 0x8000 ; jne 0x74b89
read: eax rbx rflags rsp 
write: eax rbx rdi rflags rsp 
--------------------------------------------------------------------------------
00074c70: CLP; mov rax, qword ptr [rdi + 0x28] ; cmp rax, qword ptr [rdi + 0x30] ; push rbx ; mov rbx, rdi ; je 0x74cac
read: rax rbx rdi rflags rsp 
write: rax rbx rflags rsp 
--------------------------------------------------------------------------------
00074cd0: CLP; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov rbp, qword ptr [rdi + 0xf0] ; mov rsi, qword ptr [rbx + 0x28] ; mov rdi, qword ptr [rdi + 0x20] ; sub rsi, rdi ; add rsi, 1 ; call 0x1f3ac
read: rbp rbx rdi rip rsi rsp 
write: rbp rbx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00074d50: CLP; push r13 ; mov r13, rdi ; mov edi, 0x258 ; push r12 ; mov r12, rsi ; push rbp ; push rbx ; sub rsp, 8 ; call 0x1f3cc
read: r12 r13 rbp rbx rdi rip rsi rsp 
write: edi r12 r13 rflags rsp 
--------------------------------------------------------------------------------
00074e30: CLP; sub rsp, 8 ; call 0x6bf5c
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00074e50: CLP; push rbx ; mov eax, dword ptr [rsi] ; mov r8d, edi ; mov rbx, rsi ; and eax, 0x8000 ; jne 0x74eba
read: eax edi rbx rflags rsi rsp 
write: eax r8d rbx rflags rsp 
--------------------------------------------------------------------------------
00074fa0: CLP; push rbx ; mov eax, dword ptr [rdi] ; mov rbx, rdi ; and eax, 0x8000 ; jne 0x75007
read: eax rbx rdi rflags rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
000750e0: CLP; sub rsp, 8 ; mov edx, 0x2000 ; call 0x6ea7c
read: rip rsp 
write: edx rflags rsp 
--------------------------------------------------------------------------------
00075100: CLP; sub rsp, 8 ; xor ecx, ecx ; mov edx, 1 ; xor esi, esi ; call 0x6ebfc
read: ecx esi rip rsp 
write: ecx edx esi rflags rsp 
--------------------------------------------------------------------------------
00075120: CLP; push r14 ; mov r14, rdx ; push r13 ; mov r13, rsi ; push r12 ; mov r12, rdi ; mov edi, 0x64 ; push rbp ; push rbx ; sub rsp, 0xf0 ; call 0x1f3cc
read: r12 r13 r14 rbp rbx rdi rdx rip rsi rsp 
write: edi r12 r13 r14 rflags rsp 
--------------------------------------------------------------------------------
000752b0: CLP; push r13 ; lea r8, [rip + 0x2f2f23] ; mov r13, rdx ; xor edx, edx ; push r12 ; mov r12, rsi ; mov esi, 0x8000 ; push rbp ; mov ebp, edi ; push rbx ; sub rsp, 0x238 ; lea rcx, [rsp + 0xe0] ; mov rdi, rsp ; mov qword ptr [rsp + 0x88], 0 ; mov rbx, rsp
read: edi edx r12 r13 rbp rbx rdx rsi rsp 
write: ebp edx esi r12 r13 r8 rbx rcx rdi rflags rsp 
--------------------------------------------------------------------------------
000753f0: CLP; sub rsp, 8 ; mov rdx, rsi ; mov rsi, rdi ; mov rdi, qword ptr [rip + 0x2f5313] ; xor ecx, ecx ; call 0x57ecc
read: ecx rdi rip rsi rsp 
write: ecx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00075420: CLP; push r13 ; mov r13d, esi ; push r12 ; push rbp ; lea rbp, [rdi + 0xf0] ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; cmp qword ptr [rdi + 0x38], rbp ; je 0x7546c
read: esi r12 r13 rbp rbx rdi rflags rsp 
write: r13d rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00075490: CLP; push r14 ; push r13 ; mov r13, rcx ; push r12 ; mov r12, rdx ; push rbp ; push rbx ; sub rsp, 0x130 ; test rsi, rsi ; mov qword ptr [rsp + 0x88], 0 ; je 0x75544
read: r12 r13 r14 rbp rbx rcx rdx rflags rsi rsp 
write: r12 r13 rflags rsp 
--------------------------------------------------------------------------------
00075560: CLP; push r14 ; mov r14, rsi ; push r13 ; push r12 ; mov r12, rdx ; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, qword ptr [rdi + 0xe0] ; mov rdi, qword ptr [rdi + 0x28] ; mov rax, qword ptr [rbp + 0x30] ; lea rdx, [rdi + rdx] ; cmp rax, rdx ; jae 0x755fc
read: r12 r13 r14 rax rbp rbx rdi rdx rflags rsi rsp 
write: r12 r14 rax rbp rbx rdi rdx rflags rsp 
--------------------------------------------------------------------------------
00075620: CLP; push r12 ; cmp esi, -1 ; mov r12d, esi ; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, qword ptr [rdi + 0xe0] ; je 0x75691
read: esi r12 rbp rbx rdi rflags rsp 
write: r12d rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000756c0: CLP; push r15 ; xor ecx, ecx ; xor r8d, r8d ; push r14 ; push r13 ; mov r13, rdx ; mov edx, 0xffffffff ; push r12 ; mov r12, rsi ; mov esi, 0x8000 ; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 0xf8 ; mov rdi, rsp
read: ecx r12 r13 r14 r15 r8d rbp rbx rdi rdx rsi rsp 
write: ecx edx esi r12 r13 r8d rbx rdi rflags rsp 
--------------------------------------------------------------------------------
00075860: CLP; sub rsp, 0xd8 ; test al, al ; mov qword ptr [rsp + 0x30], rdx ; mov qword ptr [rsp + 0x38], rcx ; mov qword ptr [rsp + 0x40], r8 ; mov qword ptr [rsp + 0x48], r9 ; je 0x758b6
read: al r8 r9 rcx rdx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00075900: CLP; sub rsp, 8 ; call 0x7a16c
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00075920: CLP; push rbp ; mov r10, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov eax, dword ptr [rdi] ; and eax, 0x8000 ; jne 0x75992
read: eax rbp rbx rdi rflags rsi rsp 
write: eax r10 rbx rflags rsp 
--------------------------------------------------------------------------------
00075a70: CLP; push rbx ; mov eax, dword ptr [rdi] ; mov rbx, rdi ; and eax, 0x8000 ; jne 0x75ad7
read: eax rbx rdi rflags rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
00075c10: CLP; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; mov rbx, rdx ; sub rsp, 0x90 ; mov eax, dword ptr [rdx] ; test ah, 0x20 ; je 0x75e7c
read: ah r12 r13 r14 rbp rbx rdx rflags rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
00075f10: CLP; mov eax, dword ptr [rdi + 0xc0] ; test eax, eax ; jle 0x75f34
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00075f50: CLP; mov edx, dword ptr [rdi] ; mov eax, 1 ; test dl, 8 ; jne 0x75f6b
read: dl rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
00075f80: CLP; mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
00075f90: CLP; xor eax, eax ; test byte ptr [rdi], 4 ; sete al ; ret
read: eax rflags 
write: al eax rflags 
--------------------------------------------------------------------------------
00075fa0: CLP; xor eax, eax ; test byte ptr [rdi], 8 ; sete al ; ret
read: eax rflags 
write: al eax rflags 
--------------------------------------------------------------------------------
00075fb0: CLP; mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
00075fc0: CLP; mov eax, dword ptr [rdi + 0xc0] ; push rbx ; mov rbx, rdi ; test eax, eax ; jle 0x76004
read: eax rbx rdi rflags rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
00076040: CLP; mov eax, dword ptr [rdi + 0xc0] ; test eax, eax ; jle 0x76064
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00076080: CLP; mov edx, dword ptr [rdi] ; mov eax, edx ; and eax, 0x8000 ; cmp eax, 1 ; sbb eax, eax ; add eax, 2 ; test esi, esi ; je 0x7609f
read: eax edx esi rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
000760b0: CLP; push rbp ; mov rbp, rsp ; push r15 ; lea rax, [rbp + 0x10] ; push r14 ; push r13 ; push r12 ; push rbx ; mov rbx, rsi ; sub rsp, 0x68 ; mov dword ptr [rbp - 0x84], edi ; mov qword ptr [rbp - 0x70], rax ; lea rdi, [rip + 0xbf8f0] ; lea rax, [rbp - 0x60] ; mov qword ptr [rbp - 0x50], rdx
read: edi r12 r13 r14 r15 rax rbp rbx rdx rsi rsp 
write: rax rbp rbx rdi rflags rsp 
--------------------------------------------------------------------------------
000763a0: CLP; push rbx ; mov rbx, rdi ; nop dword ptr [rax + rax] ; lea rsi, [rip + 0xc0855] ; mov rdx, rbx ; mov edi, 1 ; xor eax, eax ; call 0x760ac
read: eax rbx rdi rip rsp 
write: eax edi rbx rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000763d0: CLP; cmp edx, 1 ; je 0x7641c
read: edx rflags 
write: rflags 
--------------------------------------------------------------------------------
00076440: CLP; push rbx ; mov edx, dword ptr [rdi + 8] ; mov rbx, rdi ; test edx, edx ; je 0x76457
read: edx rbx rdi rflags rsp 
write: edx rbx rflags rsp 
--------------------------------------------------------------------------------
00076470: CLP; push r12 ; push rbp ; mov rbp, rdx ; push rbx ; mov ecx, dword ptr [rdi + 0xc] ; mov rbx, rdi ; test ecx, ecx ; jne 0x764a3
read: ecx r12 rbp rbx rdi rdx rflags rsp 
write: ecx rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00076530: CLP; push rbp ; mov rbp, rdx ; push rbx ; mov rbx, rdi ; mov rdi, rsi ; sub rsp, 8 ; mov rax, qword ptr [rbx + 0x18] ; mov rdx, qword ptr [rbx + 0x10] ; lea rcx, [rbp + rax] ; cmp rcx, rdx ; jbe 0x7655c
read: rbp rbx rcx rdi rdx rflags rsi rsp 
write: rax rbp rbx rcx rdi rdx rflags rsp 
--------------------------------------------------------------------------------
000765b0: CLP; push r13 ; push r12 ; mov r12, rsi ; push rbp ; push rbx ; sub rsp, 0x48 ; test rsi, rsi ; je 0x7671f
read: r12 r13 rbp rbx rflags rsi rsp 
write: r12 rflags rsp 
--------------------------------------------------------------------------------
00076740: CLP; and dword ptr [rdi], 0xffffffcf ; ret
read: 
write: rflags 
--------------------------------------------------------------------------------
00076750: CLP; mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
00076760: CLP; mov eax, dword ptr [rdi] ; shr eax, 5 ; and eax, 1 ; ret
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
00076770: CLP; mov rcx, qword ptr [rsi + 0x28] ; cmp rcx, qword ptr [rsi + 0x30] ; mov rdx, rsi ; jae 0x7678d
read: rcx rflags rsi 
write: rcx rdx rflags 
--------------------------------------------------------------------------------
000767b0: CLP; mov rax, qword ptr [rdi + 8] ; cmp rax, qword ptr [rdi + 0x10] ; jae 0x767c6
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000767e0: CLP; mov rdi, qword ptr [rip + 0x2f3f2d] ; mov rax, qword ptr [rdi + 8] ; cmp rax, qword ptr [rdi + 0x10] ; jae 0x767fd
read: rax rflags 
write: rax rdi rflags 
--------------------------------------------------------------------------------
00076810: CLP; sub rsp, 8 ; test rdi, rdi ; je 0x7683c
read: rdi rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00076850: CLP; mov rcx, qword ptr [rsi + 0x28] ; cmp rcx, qword ptr [rsi + 0x30] ; mov rdx, rsi ; jae 0x7686d
read: rcx rflags rsi 
write: rcx rdx rflags 
--------------------------------------------------------------------------------
00076890: CLP; push rbx ; mov eax, dword ptr [rdi] ; mov rbx, rdi ; and eax, 0x8000 ; jne 0x768f7
read: eax rbx rdi rflags rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
000769e0: CLP; push r12 ; xor eax, eax ; mov r12, rdx ; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rsi ; imul rbx, rdx ; test rbx, rbx ; jne 0x76a04
read: eax r12 rbp rbx rdx rflags rsi rsp 
write: eax r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00076a40: CLP; push r12 ; xor eax, eax ; mov r12, rdx ; push rbp ; mov rbp, rsi ; imul rbp, rdx ; push rbx ; mov rbx, rsi ; test rbp, rbp ; je 0x76a6e
read: eax r12 rbp rbx rdx rflags rsi rsp 
write: eax r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00076ac0: CLP; test esi, esi ; jle 0x76b3c
read: esi rflags 
write: rflags 
--------------------------------------------------------------------------------
00076b50: CLP; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rsi ; call 0x856dc
read: r12 rbp rbx rdi rip rsi rsp 
write: rbp rbx rsp 
--------------------------------------------------------------------------------
00076bc0: CLP; mov rax, qword ptr [rdi + 0xd8] ; push rbx ; mov rbx, rdi ; call qword ptr [rax + 0x80]
read: rbx rdi rsp 
write: rax rbx rsp 
--------------------------------------------------------------------------------
00076c00: CLP; push rbx ; mov rdx, qword ptr [rdi + 0x28] ; mov rbx, rdi ; mov rsi, qword ptr [rdi + 0x20] ; cmp rdx, rsi ; jbe 0x76c43
read: rbx rdi rdx rflags rsi rsp 
write: rbx rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00076cc0: CLP; sub rsp, 8 ; mov edi, dword ptr [rdi + 0x70] ; call 0xd7129
read: rip rsp 
write: edi rflags rsp 
--------------------------------------------------------------------------------
00076ce0: CLP; push rbx ; mov rbx, rdi ; call 0x79a1c
read: rbx rdi rip rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
00076d20: CLP; lea rax, [rip + 0x2f1975] ; push rbx ; lea rcx, [rip + 0x2f14ad] ; mov rbx, rdi ; mov qword ptr [rdi + 0xd8], rax ; mov rax, qword ptr [rdi + 0xa0] ; mov qword ptr [rax + 0x140], rcx ; call 0x76cdc
read: rax rbx rcx rdi rip rsp 
write: rax rbx rcx rsp 
--------------------------------------------------------------------------------
00076d90: CLP; push r12 ; mov r12, rsi ; push rbp ; mov rbp, rdx ; push rbx ; test dword ptr [rdi], 0x1000 ; mov rbx, rdi ; je 0x76e0c
read: r12 rbp rbx rdi rdx rflags rsi rsp 
write: r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00076e90: CLP; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 0x90 ; test ecx, ecx ; je 0x771cc
read: ecx r12 r13 r14 rbp rbx rdi rflags rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
00077320: CLP; push rbx ; mov rbx, rdi ; mov rdi, qword ptr [rdi + 0x38] ; mov rsi, qword ptr [rbx + 0x40] ; sub rsi, rdi ; call 0xe007c
read: rbx rdi rip rsi rsp 
write: rbx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00077360: CLP; push r12 ; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 0x90 ; mov rax, qword ptr [rdi + 0xd8] ; mov rsi, rsp ; call qword ptr [rax + 0x90]
read: r12 rbp rbx rdi rsp 
write: rax rbx rflags rsi rsp 
--------------------------------------------------------------------------------
00077550: CLP; sub rsp, 8 ; mov edi, dword ptr [rdi + 0x70] ; call 0xe35bc
read: rip rsp 
write: edi rflags rsp 
--------------------------------------------------------------------------------
00077570: CLP; push rbx ; mov rsi, qword ptr [rdi + 8] ; mov rbx, rdi ; cmp rsi, qword ptr [rdi + 0x10] ; je 0x775bc
read: rbx rdi rflags rsi rsp 
write: rbx rflags rsi rsp 
--------------------------------------------------------------------------------
000775e0: CLP; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 0x98 ; mov rax, qword ptr [rdi + 0xd8] ; mov rsi, rsp ; call qword ptr [rax + 0x90]
read: rbp rbx rdi rsp 
write: rax rbx rflags rsi rsp 
--------------------------------------------------------------------------------
00077730: CLP; push rbx ; mov rbx, rdi ; call 0x775dc
read: rbx rdi rip rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
00077760: CLP; push r12 ; mov r12, rdx ; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; call 0x775dc
read: r12 rbp rbx rdi rdx rip rsi rsp 
write: r12 rbp rbx rsp 
--------------------------------------------------------------------------------
000777a0: CLP; sub rsp, 8 ; mov rdx, rsi ; mov esi, dword ptr [rdi + 0x70] ; mov edi, 1 ; call 0xd63ec
read: rip rsi rsp 
write: edi esi rdx rflags rsp 
--------------------------------------------------------------------------------
000777d0: CLP; push r13 ; mov r13, rdx ; push r12 ; mov r12, rdi ; push rbp ; push rbx ; sub rsp, 8 ; test rdx, rdx ; jle 0x7785c
read: r12 r13 rbp rbx rdi rdx rflags rsp 
write: r12 r13 rflags rsp 
--------------------------------------------------------------------------------
00077880: CLP; push r15 ; push r14 ; mov r14, rdx ; push r13 ; push r12 ; mov r12, rsi ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 8 ; mov r13, qword ptr [rdi + 8] ; mov rbx, qword ptr [rdi + 0x10] ; sub rbx, r13 ; cmp rbx, rdx ; jae 0x7790c
read: r12 r13 r14 r15 rbp rbx rdi rdx rflags rsi rsp 
write: r12 r13 r14 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00077990: CLP; push r14 ; mov r14, rsi ; push r13 ; mov r13, rdx ; push r12 ; push rbp ; push rbx ; cmp qword ptr [rdi + 0x38], 0 ; mov rbx, rdi ; je 0x77b64
read: r12 r13 r14 rbp rbx rdi rdx rflags rsi rsp 
write: r13 r14 rbx rflags rsp 
--------------------------------------------------------------------------------
00077ba0: CLP; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; test ecx, ecx ; je 0x77c3c
read: ecx rbp rbx rdi rflags rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
00077c90: CLP; push rbx ; mov rax, qword ptr [rdi + 8] ; mov rbx, rdi ; cmp rax, qword ptr [rdi + 0x10] ; jae 0x77cac
read: rax rbx rdi rflags rsp 
write: rax rbx rflags rsp 
--------------------------------------------------------------------------------
00077cf0: CLP; sub rsp, 8 ; test byte ptr [rdi + 0x74], 2 ; mov edi, dword ptr [rdi + 0x70] ; jne 0x77d0b
read: rflags rsp 
write: edi rflags rsp 
--------------------------------------------------------------------------------
00077d20: CLP; push r14 ; xor eax, eax ; test rdx, rdx ; push r13 ; push r12 ; push rbp ; push rbx ; mov rbx, rdx ; je 0x77d9a
read: eax r12 r13 r14 rbp rbx rdx rflags rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
00077ee0: CLP; push rbp ; mov rbp, -1 ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; or dword ptr [rdi], 0x240c ; mov qword ptr [rdi + 0x90], rbp ; call 0x78fac
read: rbp rbx rdi rip rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00077f20: CLP; push r12 ; push rbp ; push rbx ; mov eax, dword ptr [rdi + 0x70] ; mov rbx, rdi ; cmp eax, -1 ; je 0x7803e
read: eax r12 rbp rbx rdi rflags rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
000780d0: CLP; push rbx ; cmp dword ptr [rdi + 0x70], -1 ; mov rbx, rdi ; je 0x7810a
read: rbx rdi rflags rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
00078160: CLP; push r12 ; xor eax, eax ; mov r12d, r8d ; push rbp ; push rbx ; mov rbx, rdi ; mov rdi, rsi ; test byte ptr [rbx + 0x74], 2 ; mov esi, edx ; mov edx, ecx ; jne 0x78210
read: eax ecx edx r12 r8d rbp rbx rdi rflags rsi rsp 
write: eax edx esi r12d rbx rdi rflags rsp 
--------------------------------------------------------------------------------
00078230: CLP; push rbp ; mov rbp, rsp ; push r15 ; push r14 ; push r13 ; push r12 ; mov r12, rdi ; push rbx ; sub rsp, 0x38 ; cmp dword ptr [rdi + 0x70], -1 ; jne 0x782a4
read: r12 r13 r14 r15 rbp rbx rdi rflags rsp 
write: r12 rbp rflags rsp 
--------------------------------------------------------------------------------
000786e0: CLP; push r12 ; cmp dword ptr [rdi + 0x70], -1 ; push rbp ; push rbx ; mov rbx, rdi ; jne 0x7874c
read: r12 rbp rbx rdi rflags rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
00078760: CLP; xor eax, eax ; test rdx, rdx ; push rbx ; mov rbx, rdx ; jne 0x78774
read: eax rbx rdx rflags rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
00078790: CLP; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov eax, dword ptr [rdi] ; test al, 4 ; jne 0x789ac
read: al rbp rbx rdi rflags rsp 
write: al eax rbx rflags rsp 
--------------------------------------------------------------------------------
00078a30: CLP; push r12 ; push rbp ; push rbx ; mov ecx, dword ptr [rdi] ; mov rbx, rdi ; test cl, 8 ; jne 0x78bac
read: cl r12 rbp rbx rdi rflags rsp 
write: ecx rbx rflags rsp 
--------------------------------------------------------------------------------
00078c50: CLP; mov rax, qword ptr [rip + 0x2f2b15] ; test rax, rax ; je 0x78ca7
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
00078d00: CLP; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 0x28 ; test byte ptr [rdi], 0x80 ; je 0x78ec9
read: rbp rbx rdi rflags rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
00078fb0: CLP; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 0x28 ; mov eax, dword ptr [rdi] ; test al, 0x80 ; jne 0x79163
read: al rbp rbx rdi rflags rsp 
write: al eax rbx rflags rsp 
--------------------------------------------------------------------------------
00079240: CLP; mov rdx, qword ptr [rdi + 0x60] ; mov rax, rsi ; sub rax, qword ptr [rdi + 0x18] ; test rdx, rdx ; je 0x79267
read: rax rdx rflags rsi 
write: rax rdx rflags 
--------------------------------------------------------------------------------
00079270: CLP; push r15 ; push r14 ; push r13 ; mov r13, rsi ; mov r14, r13 ; push r12 ; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 0x28 ; call 0x7923c
read: r12 r13 r14 r15 rbp rbx rdi rip rsi rsp 
write: r13 r14 rbx rflags rsp 
--------------------------------------------------------------------------------
00079450: CLP; mov rax, qword ptr [rdi + 0x10] ; mov rdx, qword ptr [rdi + 0x58] ; and dword ptr [rdi], 0xfffffeff ; mov qword ptr [rdi + 0x10], rdx ; mov qword ptr [rdi + 0x58], rax ; mov rdx, qword ptr [rdi + 0x18] ; mov rax, qword ptr [rdi + 0x48] ; mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
read: rax rdx 
write: rax rdx rflags 
--------------------------------------------------------------------------------
00079480: CLP; mov rdx, qword ptr [rdi + 0x10] ; mov rax, qword ptr [rdi + 0x58] ; mov rcx, qword ptr [rdi + 0x48] ; or dword ptr [rdi], 0x100 ; mov qword ptr [rdi + 0x58], rdx ; mov rdx, qword ptr [rdi + 0x18] ; mov qword ptr [rdi + 0x10], rax ; mov qword ptr [rdi + 0x18], rcx ; mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
read: rax rcx rdx 
write: rax rcx rdx rflags 
--------------------------------------------------------------------------------
000794b0: CLP; mov rax, qword ptr [rdi + 0x28] ; cmp rax, qword ptr [rdi + 0x20] ; push rbx ; mov rbx, rdi ; ja 0x794fc
read: rax rbx rdi rflags rsp 
write: rax rbx rflags rsp 
--------------------------------------------------------------------------------
00079520: CLP; push rbx ; test dword ptr [rdi], 0x100 ; mov rbx, rdi ; je 0x79535
read: rbx rdi rflags rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
00079560: CLP; sub rsp, 8 ; mov eax, dword ptr [rdi + 0xc0] ; test eax, eax ; jne 0x79578
read: eax rflags rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
00079590: CLP; push rbx ; mov eax, dword ptr [rdi + 0xc0] ; mov rbx, rdi ; test eax, eax ; jne 0x795f4
read: eax rbx rdi rflags rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
00079660: CLP; push rbx ; mov eax, dword ptr [rdi + 0xc0] ; mov rbx, rdi ; test eax, eax ; jne 0x796cc
read: eax rbx rdi rflags rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
00079750: CLP; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 0x18 ; mov rdi, qword ptr [rdi + 0x38] ; mov eax, dword ptr [rbx] ; test rdi, rdi ; je 0x7976b
read: rbp rbx rdi rflags rsi rsp 
write: eax rbp rbx rdi rflags rsp 
--------------------------------------------------------------------------------
000797e0: CLP; push rbx ; cmp qword ptr [rdi + 0x38], 0 ; mov rbx, rdi ; je 0x797f4
read: rbx rdi rflags rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
00079840: CLP; mov eax, 0xffffffff ; ret
read: 
write: eax 
--------------------------------------------------------------------------------
00079850: CLP; mov rax, qword ptr [rdi + 0xd8] ; push rbx ; mov rbx, rdi ; call qword ptr [rax + 0x20]
read: rbx rdi rsp 
write: rax rbx rsp 
--------------------------------------------------------------------------------
00079880: CLP; push r14 ; xor eax, eax ; test rdx, rdx ; push r13 ; mov r13, rdx ; push r12 ; push rbp ; push rbx ; je 0x79942
read: eax r12 r13 r14 rbp rbx rdx rflags rsp 
write: eax r13 rflags rsp 
--------------------------------------------------------------------------------
00079950: CLP; sub rsp, 8 ; mov rax, qword ptr [rdi + 0xd8] ; call qword ptr [rax + 0x40]
read: rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
00079970: CLP; push r14 ; push r13 ; mov r13, rsi ; push r12 ; mov r12, rdx ; push rbp ; mov rbp, rdx ; push rbx ; mov rbx, rdi ; nop dword ptr [rax + rax] ; mov rsi, qword ptr [rbx + 8] ; mov rdx, qword ptr [rbx + 0x10] ; cmp rsi, rdx ; jae 0x799dc
read: r12 r13 r14 rbp rbx rdi rdx rflags rsi rsp 
write: r12 r13 rbp rbx rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00079a20: CLP; push r12 ; mov r12, rdx ; push rbp ; mov rbp, rsi ; push rbx ; mov rax, qword ptr [rdi + 0xd8] ; mov rbx, rdi ; call qword ptr [rax + 0x60]
read: r12 rbp rbx rdi rdx rsi rsp 
write: r12 rax rbp rbx rsp 
--------------------------------------------------------------------------------
00079ae0: CLP; sub rsp, 8 ; mov rax, qword ptr [rdi + 0xd8] ; mov ecx, edx ; xor edx, edx ; call qword ptr [rax + 0x48]
read: edx rsp 
write: ecx edx rax rflags rsp 
--------------------------------------------------------------------------------
00079b00: CLP; push rbx ; xor r9d, r9d ; mov rbx, rdi ; mov r8d, 0xffffffff ; xor edi, edi ; mov ecx, 0x22 ; mov edx, 3 ; mov esi, 0x2000 ; call 0xe004c
read: edi r9d rbx rdi rip rsp 
write: ecx edi edx esi r8d r9d rbx rflags rsp 
--------------------------------------------------------------------------------
00079b60: CLP; mov rax, qword ptr [rdi + 0x88] ; or esi, 0xfbad0000 ; xor ecx, ecx ; mov dword ptr [rdi], esi ; mov dword ptr [rdi + 0x74], 0 ; mov qword ptr [rdi + 0x38], 0 ; mov qword ptr [rdi + 0x40], 0 ; test rax, rax ; mov qword ptr [rdi + 0x18], 0 ; mov qword ptr [rdi + 8], 0 ; mov qword ptr [rdi + 0x10], 0 ; mov qword ptr [rdi + 0x20], 0 ; mov qword ptr [rdi + 0x28], 0 ; mov qword ptr [rdi + 0x30], 0 ; mov qword ptr [rdi + 0x68], 0
read: ecx esi rax 
write: ecx esi rax rflags 
--------------------------------------------------------------------------------
00079c10: CLP; push r13 ; mov r13, r8 ; push r12 ; mov r12d, edx ; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rcx ; sub rsp, 8 ; call 0x79b5c
read: edx r12 r13 r8 rbp rbx rcx rdi rip rsp 
write: r12d r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00079cd0: CLP; sub rsp, 8 ; xor r8d, r8d ; xor ecx, ecx ; mov edx, 0xffffffff ; call 0x79c0c
read: ecx r8d rip rsp 
write: ecx edx r8d rflags rsp 
--------------------------------------------------------------------------------
00079cf0: CLP; xor eax, eax ; ret
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
00079d00: CLP; push rbx ; mov rbx, rdi ; mov rdi, qword ptr [rdi + 0x38] ; test rdi, rdi ; je 0x79d12
read: rbx rdi rflags rsp 
write: rbx rdi rflags rsp 
--------------------------------------------------------------------------------
00079d90: CLP; mov rax, -1 ; ret
read: 
write: rax 
--------------------------------------------------------------------------------
00079da0: CLP; push rbx ; mov rdx, qword ptr [rdi + 8] ; mov rbx, rdi ; cmp rdx, qword ptr [rdi + 0x18] ; jbe 0x79db4
read: rbx rdi rdx rflags rsp 
write: rbx rdx rflags rsp 
--------------------------------------------------------------------------------
00079df0: CLP; mov rax, qword ptr [rdi + 8] ; cmp rax, qword ptr [rdi + 0x18] ; push rbx ; mov rbx, rdi ; jbe 0x79e14
read: rax rbx rdi rflags rsp 
write: rax rbx rflags rsp 
--------------------------------------------------------------------------------
00079e40: CLP; movsxd r8, edx ; add r8, rsi ; cmp rsi, r8 ; jae 0x79e6a
read: edx r8 rflags rsi 
write: r8 rflags 
--------------------------------------------------------------------------------
00079e80: CLP; push r15 ; push r14 ; push r13 ; xor r13d, r13d ; push r12 ; push rbp ; mov ebp, edi ; push rbx ; sub rsp, 0x28 ; test edi, edi ; je 0x79f22
read: edi r12 r13 r13d r14 r15 rbp rbx rflags rsp 
write: ebp r13d rflags rsp 
--------------------------------------------------------------------------------
0007a170: CLP; push r13 ; xor edi, edi ; push r12 ; push rbp ; mov rbp, qword ptr fs:[0x10] ; push rbx ; sub rsp, 8 ; call 0x79e7c
read: edi r12 r13 rbp rbx rip rsp 
write: edi rbp rflags rsp 
--------------------------------------------------------------------------------
0007a340: CLP; sub rsp, 8 ; mov edi, 1 ; call 0x79e7c
read: rip rsp 
write: edi rflags rsp 
--------------------------------------------------------------------------------
0007a360: CLP; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x28 ; mov ebp, dword ptr [rip + 0x2f43fc] ; test ebp, ebp ; jne 0x7a5bc
read: ebp r12 r13 rbp rbx rflags rsp 
write: ebp rflags rsp 
--------------------------------------------------------------------------------
0007a5f0: CLP; push rbx ; mov rbx, rdi ; sub rsp, 0x10 ; mov eax, dword ptr [rsi] ; mov qword ptr [rdi + 8], rsi ; test ah, 8 ; jne 0x7a63c
read: ah rbx rdi rflags rsi rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
0007a660: CLP; mov rax, qword ptr [rdi + 8] ; mov rdx, qword ptr [rax + 0x60] ; test rdx, rdx ; je 0x7a68c
read: rdx rflags 
write: rax rdx rflags 
--------------------------------------------------------------------------------
0007a6b0: CLP; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
0007a6c0: CLP; mov rax, qword ptr [rdi + 8] ; test rax, rax ; je 0x7a6ed
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
0007a700: CLP; push rbx ; mov eax, 0xffffffff ; sub rsp, 0x10 ; mov rbx, qword ptr [rsi + 8] ; cmp rbx, rdi ; jne 0x7a72d
read: rbx rdi rflags rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
0007a7a0: CLP; cmp qword ptr [rdi + 0x60], 0 ; je 0x7a7af
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
0007a7d0: CLP; push r15 ; push r14 ; push r13 ; push r12 ; mov r12d, esi ; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov rbp, qword ptr [rdi + 8] ; mov r13, qword ptr [rdi + 0x18] ; cmp rbp, r13 ; ja 0x7a83c
read: esi r12 r13 r14 r15 rbp rbx rdi rflags rsp 
write: r12d r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0007a910: CLP; mov rax, -1 ; ret
read: 
write: rax 
--------------------------------------------------------------------------------
0007a920: CLP; mov eax, 0xffffffff ; ret
read: 
write: eax 
--------------------------------------------------------------------------------
0007a930: CLP; mov rax, -1 ; ret
read: 
write: rax 
--------------------------------------------------------------------------------
0007a940: CLP; xor eax, eax ; ret
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
0007a950: CLP; mov eax, 0xffffffff ; ret
read: 
write: eax 
--------------------------------------------------------------------------------
0007a960: CLP; ret
read: 
write: 
--------------------------------------------------------------------------------
0007a970: CLP; mov rax, qword ptr [rip + 0x2ef6c5] ; ret
read: 
write: rax 
--------------------------------------------------------------------------------
0007a980: CLP; xor eax, eax ; ret
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
0007a990: CLP; mov rax, qword ptr [rdi + 0x68] ; ret
read: 
write: rax 
--------------------------------------------------------------------------------
0007a9a0: CLP; mov rax, rdi ; ret
read: rdi 
write: rax 
--------------------------------------------------------------------------------
0007a9b0: CLP; mov rdx, qword ptr fs:[0x10] ; cmp rdx, qword ptr [rip + 0x2f0dc4] ; je 0x7aa0c
read: rdx rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
0007aa20: CLP; sub dword ptr [rip + 0x2f0d59], 1 ; jne 0x7aa6e
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
0007aa80: CLP; mov dword ptr [rip + 0x2f0cf2], 0 ; mov dword ptr [rip + 0x2f0cec], 0 ; mov qword ptr [rip + 0x2f0ce5], 0 ; ret
read: 
write: 
--------------------------------------------------------------------------------
0007aab0: CLP; mov rax, qword ptr [rdi + 0x28] ; mov rcx, qword ptr [rdi + 0x10] ; cmp rax, rcx ; jbe 0x7aac4
read: rax rcx rflags 
write: rax rcx rflags 
--------------------------------------------------------------------------------
0007ab10: CLP; push r15 ; push r14 ; push r13 ; push r12 ; mov r12d, esi ; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 0x18 ; mov edx, dword ptr [rdi] ; cmp esi, -1 ; sete r13b ; test dl, 8 ; je 0x7ab4c
read: dl esi r12 r13 r14 r15 rbp rbx rdi rflags rsp 
write: edx r12d r13b rbx rflags rsp 
--------------------------------------------------------------------------------
0007acc0: CLP; push r15 ; push r14 ; push r13 ; push r12 ; mov r12, rsi ; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 0x28 ; mov rbp, qword ptr [rdi + 0x38] ; mov rax, qword ptr [rdi + 0x40] ; sub rax, rbp ; cmp rax, rsi ; jge 0x7adfc
read: r12 r13 r14 r15 rax rbp rbx rdi rflags rsi rsp 
write: r12 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0007ae70: CLP; sub rsp, 8 ; test byte ptr [rdi], 8 ; je 0x7ae82
read: rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0007aea0: CLP; push rbx ; mov rbx, rdi ; mov rdi, qword ptr [rdi + 0x38] ; test rdi, rdi ; je 0x7aebc
read: rbx rdi rflags rsp 
write: rbx rdi rflags rsp 
--------------------------------------------------------------------------------
0007aee0: CLP; push r13 ; mov r13, rcx ; push r12 ; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; test rdx, rdx ; jne 0x7af54
read: r12 r13 rbp rbx rcx rdi rdx rflags rsi rsp 
write: r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0007af80: CLP; sub rsp, 8 ; mov eax, 0xffffffff ; test edx, edx ; cmovns eax, edx ; movsxd rdx, eax ; call 0x7aedc
read: eax edx rflags rip rsp 
write: eax rdx rflags rsp 
--------------------------------------------------------------------------------
0007afb0: CLP; test edx, edx ; mov eax, 0xffffffff ; push rbx ; cmovns eax, edx ; mov rbx, rdi ; xor ecx, ecx ; movsxd rdx, eax ; call 0x7aedc
read: eax ecx edx rbx rdi rflags rip rsp 
write: eax ecx rbx rdx rflags rsp 
--------------------------------------------------------------------------------
0007afe0: CLP; mov rax, qword ptr [rdi + 0x10] ; cmp qword ptr [rdi + 0x28], rax ; cmovae rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x18] ; ret
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
0007b000: CLP; push r14 ; test ecx, ecx ; push r13 ; mov r13d, edx ; push r12 ; mov r12, rsi ; push rbp ; mov ebp, ecx ; push rbx ; mov rbx, rdi ; jne 0x7b07c
read: ecx edx r12 r13 r14 rbp rbx rdi rflags rsi rsp 
write: ebp r12 r13d rbx rflags rsp 
--------------------------------------------------------------------------------
0007b1b0: CLP; lea rcx, [rdi + 0x58] ; mov edx, 0x7f ; mov rax, rcx ; mov qword ptr [rax + 0x18], rax ; mov qword ptr [rax + 0x10], rax ; add rax, 0x10 ; sub edx, 1 ; jne 0x7b1bc
read: edx rax rcx rflags 
write: edx rax rcx rflags 
--------------------------------------------------------------------------------
0007b210: CLP; mov eax, dword ptr [rip + 0x2edf0a] ; test eax, eax ; jle 0x7b33f
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0007b350: CLP; mov edx, dword ptr [rip + 0x2eddca] ; test edx, edx ; jle 0x7b3e8
read: edx rflags 
write: edx rflags 
--------------------------------------------------------------------------------
0007b3f0: CLP; xor eax, eax ; ret
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
0007b400: CLP; test rdi, rdi ; mov rax, rdi ; je 0x7b473
read: rdi rflags 
write: rax rflags 
--------------------------------------------------------------------------------
0007b480: CLP; test dil, 0xf ; jne 0x7b5fc
read: dil rflags 
write: rflags 
--------------------------------------------------------------------------------
0007b710: CLP; sub rsp, 0x28 ; test rcx, rcx ; mov r8, rsi ; mov r9d, edx ; je 0x7b785
read: edx rcx rflags rsi rsp 
write: r8 r9d rflags rsp 
--------------------------------------------------------------------------------
0007b7a0: CLP; mov rax, qword ptr [rip + 0x2ed6b5] ; push r12 ; push rbp ; lea rbp, [rdi + rsi] ; mov rax, qword ptr [rax + 0x18] ; push rbx ; sub rax, 1 ; cmp rbp, 0x7fff ; jbe 0x7b8c4
read: r12 rax rbp rbx rflags rsp 
write: rax rbp rflags rsp 
--------------------------------------------------------------------------------
0007b960: CLP; push r12 ; mov rax, qword ptr [rip + 0x2ed4f3] ; push rbp ; mov rax, qword ptr [rax + 0x18] ; push rbx ; mov rdx, qword ptr [rdi + 8] ; mov rbp, qword ptr [rdi] ; sub rax, 1 ; mov r12, rdx ; and r12, 0xfffffffffffffff8 ; and edx, 2 ; je 0x7ba4f
read: edx r12 rax rbp rbx rdx rflags rsp 
write: edx r12 rax rbp rdx rflags rsp 
--------------------------------------------------------------------------------
0007bab0: CLP; mov ecx, dword ptr [rip + 0x2ed66a] ; test ecx, ecx ; jle 0x7bb80
read: ecx rflags 
write: ecx rflags 
--------------------------------------------------------------------------------
0007bb90: CLP; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x18 ; mov rcx, qword ptr [rsi] ; mov rax, qword ptr [rip + 0x2ed2b8] ; mov rbx, qword ptr [rcx + 8] ; mov r8, qword ptr [rax + 0x18] ; and rbx, 0xfffffffffffffff8 ; lea rax, [rbx - 0x21] ; cmp rax, rdi ; jbe 0x7bbca
read: r12 r13 rax rbp rbx rdi rflags rsp 
write: r8 rax rbx rcx rflags rsp 
--------------------------------------------------------------------------------
0007bc90: CLP; push r12 ; mov eax, edi ; mov r12, rsi ; and eax, 5 ; push rbp ; push rbx ; mov ebx, edi ; sub rsp, 0x20 ; cmp eax, 5 ; je 0x7bd4c
read: eax edi r12 rbp rbx rflags rsi rsp 
write: eax ebx r12 rflags rsp 
--------------------------------------------------------------------------------
0007bd80: CLP; sub rsp, 8 ; mov rdx, qword ptr [rdi + 8] ; mov rax, rdi ; mov rsi, rdx ; and rsi, 0xfffffffffffffff8 ; and edx, 2 ; je 0x7bddd
read: edx rdi rdx rflags rsi rsp 
write: edx rax rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0007be20: CLP; push r15 ; mov r15, rdi ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x28 ; cmp qword ptr [rip + 0x2efa23], 0 ; je 0x7c034
read: r12 r13 r14 r15 rbp rbx rdi rflags rsp 
write: r15 rflags rsp 
--------------------------------------------------------------------------------
0007c190: CLP; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; mov rax, qword ptr [rdi + 0x58] ; test rax, rax ; je 0x7c294
read: rax rbp rbx rdi rflags rsi rsp 
write: rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0007c2b0: CLP; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 8 ; mov rax, qword ptr [rip + 0x2ecb9b] ; mov rdx, qword ptr [rip + 0x2ed3ac] ; mov rbx, qword ptr [rax + 0x18] ; lea rax, [rip + 0x2ed3a1] ; cmp rdx, rax ; je 0x7c3ec
read: r12 r13 rax rbp rbx rdx rflags rsp 
write: rax rbx rdx rflags rsp 
--------------------------------------------------------------------------------
0007c420: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; mov rbx, rsi ; sub rsp, 0x48 ; mov rax, qword ptr [rsi + 8] ; mov dword ptr [rsp + 0x10], edx ; mov rbp, rax ; and rbp, 0xfffffffffffffff8 ; mov rdx, rbp ; neg rdx ; cmp rsi, rdx
read: edx r12 r13 r14 r15 rax rbp rbx rdx rsi rsp 
write: rax rbp rbx rdx rflags rsp 
--------------------------------------------------------------------------------
0007d050: CLP; test rdi, rdi ; je 0x7d08e
read: rdi rflags 
write: rflags 
--------------------------------------------------------------------------------
0007d0c0: CLP; test rdi, rdi ; push rbx ; mov rbx, rdi ; je 0x7d17f
read: rbx rdi rflags rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
0007d230: CLP; push r15 ; push r14 ; mov r14, rsi ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x68 ; cmp rsi, -0x41 ; ja 0x7d96d
read: r12 r13 r14 r15 rbp rbx rflags rsi rsp 
write: r14 rflags rsp 
--------------------------------------------------------------------------------
0007e5e0: CLP; cmp rdi, -1 ; push rbx ; mov rbx, rdi ; je 0x7e6ac
read: rbx rdi rflags rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
0007e6d0: CLP; cmp rdx, -0x41 ; ja 0x7e87c
read: rdx rflags 
write: rflags 
--------------------------------------------------------------------------------
0007e8f0: CLP; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; cmp rdi, 0x10 ; jbe 0x7ea34
read: rbp rbx rdi rflags rsi rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0007ea80: CLP; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; mov rbx, rsi ; sub rsp, 0x10 ; mov rax, qword ptr [rsi + 8] ; cmp rax, 0x10 ; jbe 0x7ed82
read: r12 r13 r14 rax rbp rbx rflags rsi rsp 
write: rax rbx rflags rsp 
--------------------------------------------------------------------------------
0007eeb0: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; mov rbx, rsi ; sub rsp, 0x28 ; cmp rsi, -1 ; je 0x7f0cc
read: r12 r13 r14 r15 rbp rbx rflags rsi rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
0007f1c0: CLP; push r12 ; cmp qword ptr [rip + 0x2ec682], 0 ; mov r12, rdi ; push rbp ; mov rbp, rsi ; push rbx ; je 0x7f2c4
read: r12 rbp rbx rdi rflags rsi rsp 
write: r12 rbp rflags rsp 
--------------------------------------------------------------------------------
0007f600: CLP; lea rax, [rip + 0x2ea015] ; mov rdx, rdi ; cmp rdi, rax ; je 0x7f68c
read: rax rdi rflags 
write: rax rdx rflags 
--------------------------------------------------------------------------------
0007f6e0: CLP; mov eax, dword ptr [rip + 0x2ec0fe] ; test eax, eax ; jne 0x7f73c
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0007f750: CLP; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 8 ; mov rax, qword ptr [rip + 0x2e977c] ; mov rax, qword ptr [rax] ; test rax, rax ; jne 0x7f8c0
read: rax rbp rbx rdi rflags rsp 
write: rax rbp rflags rsp 
--------------------------------------------------------------------------------
0007f900: CLP; mov rax, qword ptr [rip + 0x2e9475] ; push rbx ; mov rbx, rdi ; cmp qword ptr fs:[rax], -1 ; je 0x7f9a4
read: rbx rdi rflags rsp 
write: rax rbx rflags rsp 
--------------------------------------------------------------------------------
0007fa10: CLP; push rbx ; mov edi, 0x8a8 ; call 0x7f74c
read: rbx rip rsp 
write: edi rsp 
--------------------------------------------------------------------------------
0007fc50: CLP; push r12 ; mov rax, qword ptr [rip + 0x2e9273] ; mov r12, rsi ; push rbp ; push rbx ; mov rax, qword ptr [rax] ; mov rbx, rdi ; test rax, rax ; jne 0x7fe91
read: r12 rax rbp rbx rdi rflags rsi rsp 
write: r12 rax rbx rflags rsp 
--------------------------------------------------------------------------------
0007fed0: CLP; sub rsp, 8 ; mov rax, qword ptr [rip + 0x2e9009] ; mov rax, qword ptr [rax] ; test rax, rax ; jne 0x7ff5d
read: rax rflags rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
0007ff70: CLP; push r15 ; push r14 ; mov r14, rsi ; push r13 ; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 0x18 ; mov rax, qword ptr [rip + 0x2e9049] ; mov rax, qword ptr [rax] ; test rax, rax ; jne 0x80217
read: r12 r13 r14 r15 rax rbp rbx rdi rflags rsi rsp 
write: r14 rax rbp rflags rsp 
--------------------------------------------------------------------------------
00080250: CLP; sub rsp, 8 ; mov rdx, qword ptr [rsp + 8] ; call 0x7fc4c
read: rip rsp 
write: rdx rflags rsp 
--------------------------------------------------------------------------------
00080270: CLP; push r13 ; mov rdx, rdi ; mov eax, 0xffffffff ; or rdx, rsi ; push r12 ; mov r12, rdi ; imul r12, rsi ; push rbp ; push rbx ; sub rsp, 8 ; cmp rdx, rax ; ja 0x80567
read: r12 r13 rax rbp rbx rdi rdx rflags rsi rsp 
write: eax r12 rdx rflags rsp 
--------------------------------------------------------------------------------
000805d0: CLP; sub rsp, 8 ; test rdi, rdi ; je 0x8061c
read: rdi rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000806c0: CLP; push rbp ; mov ebp, edi ; push rbx ; movsxd rbx, esi ; sub rsp, 8 ; mov edi, dword ptr [rip + 0x2e8a4f] ; test edi, edi ; js 0x808cc
read: edi esi rbp rbx rflags rsp 
write: ebp edi rbx rflags rsp 
--------------------------------------------------------------------------------
000808e0: CLP; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x30 ; cmp qword ptr [rip + 0x2eda48], 0 ; mov dword ptr [rip + 0x2e8822], 0 ; je 0x80a14
read: r12 r13 r14 rbp rbx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00080d70: CLP; mov eax, dword ptr [rip + 0x2e83aa] ; test eax, eax ; js 0x80d7c
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00080da0: CLP; sub rsp, 0x18 ; mov rax, qword ptr [rip + 0x2e8131] ; mov qword ptr [rax], 0 ; mov eax, dword ptr [rip + 0x2e8368] ; test eax, eax ; js 0x80dcc
read: eax rflags rsp 
write: eax rax rflags rsp 
--------------------------------------------------------------------------------
00080e00: CLP; sub rsp, 0x18 ; mov rax, qword ptr [rip + 0x2e80d1] ; mov qword ptr [rax], 0 ; mov rax, qword ptr [rip + 0x2e81bb] ; mov qword ptr [rax], 0 ; mov eax, dword ptr [rip + 0x2e82fa] ; test eax, eax ; js 0x80e3c
read: eax rflags rsp 
write: eax rax rflags rsp 
--------------------------------------------------------------------------------
00080e70: CLP; sub rsp, 0x18 ; mov rax, qword ptr [rip + 0x2e8051] ; mov qword ptr [rax], 0 ; mov eax, dword ptr [rip + 0x2e8298] ; test eax, eax ; js 0x80ea4
read: eax rflags rsp 
write: eax rax rflags rsp 
--------------------------------------------------------------------------------
00080ee0: CLP; push r12 ; mov r8d, dword ptr [rip + 0x2e8237] ; mov dword ptr [rip + 0x2ea8f1], 1 ; push rbp ; test r8d, r8d ; push rbx ; mov rbx, rdi ; js 0x813ed
read: r12 r8d rbp rbx rdi rflags rsp 
write: r8d rbx rflags rsp 
--------------------------------------------------------------------------------
00081440: CLP; sub rsp, 0x18 ; mov r9d, dword ptr [rip + 0x2e7cd5] ; mov rsi, rdi ; test r9d, r9d ; js 0x81474
read: r9d rdi rflags rsp 
write: r9d rflags rsi rsp 
--------------------------------------------------------------------------------
00081490: CLP; sub rsp, 0x18 ; mov r10d, dword ptr [rip + 0x2e7c85] ; test r10d, r10d ; js 0x81504
read: r10d rflags rsp 
write: r10d rflags rsp 
--------------------------------------------------------------------------------
00081520: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x28 ; mov r11d, dword ptr [rip + 0x2e7beb] ; mov qword ptr [rsp + 0x18], rdi ; test r11d, r11d ; js 0x817d5
read: r11d r12 r13 r14 r15 rbp rbx rdi rflags rsp 
write: r11d rflags rsp 
--------------------------------------------------------------------------------
00081810: CLP; push r14 ; mov r14, rdi ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x30 ; mov ebx, dword ptr [rip + 0x2e78fb] ; test ebx, ebx ; js 0x8192c
read: ebx r12 r13 r14 rbp rbx rdi rflags rsp 
write: ebx r14 rflags rsp 
--------------------------------------------------------------------------------
00081940: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x48 ; mov ebp, dword ptr [rip + 0x2e77cc] ; mov rbx, qword ptr [rip + 0x2e7819] ; test ebp, ebp ; mov r15d, ebx ; js 0x81b6c
read: ebp ebx r12 r13 r14 r15 rbp rbx rflags rsp 
write: ebp r15d rbx rflags rsp 
--------------------------------------------------------------------------------
00081b80: CLP; test sil, 7 ; mov rcx, rsi ; mov eax, 0x16 ; je 0x81b94
read: rflags rsi sil 
write: eax rcx rflags 
--------------------------------------------------------------------------------
00081bf0: CLP; test edi, edi ; mov eax, 0x16 ; je 0x81bfc
read: edi rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00082110: CLP; sub rsp, 8 ; call 0xdc57c
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00082140: CLP; sub rsp, 8 ; cmp edi, 1 ; je 0x821e0
read: edi rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00082210: CLP; push rbx ; mov rdx, qword ptr [rdi + 0x18] ; mov eax, 0xd8675309 ; add rdx, qword ptr [rdi + 0x10] ; xor rdx, qword ptr [rdi + 8] ; cmp rdx, rax ; je 0x82284
read: rax rbx rdx rflags rsp 
write: eax rdx rflags rsp 
--------------------------------------------------------------------------------
00082290: CLP; test rsi, rsi ; je 0x822ac
read: rflags rsi 
write: rflags 
--------------------------------------------------------------------------------
000822e0: CLP; push rbx ; mov rbx, qword ptr [rip + 0x2e9584] ; mov dword ptr [rip + 0x2e9572], 0 ; test rbx, rbx ; jne 0x82305
read: rbx rflags rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
00082340: CLP; push r12 ; push rbp ; mov rbp, rsi ; push rbx ; sub rsp, 0x10 ; mov ecx, dword ptr [rip + 0x2e9513] ; test ecx, ecx ; jne 0x8243c
read: ecx r12 rbp rbx rflags rsi rsp 
write: ecx rbp rflags rsp 
--------------------------------------------------------------------------------
000824a0: CLP; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 0x18 ; mov edi, dword ptr [rip + 0x2e93b5] ; test edi, edi ; jne 0x8257c
read: edi rbp rbx rdi rflags rsp 
write: edi rbx rflags rsp 
--------------------------------------------------------------------------------
000825e0: CLP; push r12 ; mov r9d, dword ptr [rip + 0x2e927b] ; mov r12, rsi ; push rbp ; test r9d, r9d ; push rbx ; mov rbx, rdi ; jne 0x8268c
read: r12 r9d rbp rbx rdi rflags rsi rsp 
write: r12 r9d rbx rflags rsp 
--------------------------------------------------------------------------------
000826e0: CLP; push r15 ; mov r15, rdx ; push r14 ; push r13 ; push r12 ; mov r12, rsi ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 8 ; test rsi, rsi ; je 0x82914
read: r12 r13 r14 r15 rbp rbx rdi rdx rflags rsi rsp 
write: r12 r15 rbp rflags rsp 
--------------------------------------------------------------------------------
00082940: CLP; push rbx ; lea rax, [rip - 0x80c] ; sub rsp, 0x10 ; test rdi, rdi ; cmovne rax, rdi ; mov qword ptr [rip + 0x2e8f1a], rax ; mov eax, dword ptr [rip + 0x2e67c0] ; test eax, eax ; jle 0x8297c
read: eax rax rbx rdi rflags rsp 
write: eax rax rflags rsp 
--------------------------------------------------------------------------------
00082a30: CLP; sub rsp, 8 ; call 0x8293c
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00082a60: CLP; mov eax, dword ptr [rip + 0x2e8e02] ; test eax, eax ; je 0x82a84
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00082a90: CLP; test rdi, rdi ; je 0x82afc
read: rdi rflags 
write: rflags 
--------------------------------------------------------------------------------
00082b10: CLP; push rbp ; test rdi, rdi ; mov rbp, rsp ; push r14 ; push r13 ; push r12 ; mov r12, rdi ; push rbx ; je 0x82bf9
read: r12 r13 r14 rbp rbx rdi rflags rsp 
write: r12 rbp rflags rsp 
--------------------------------------------------------------------------------
00082c40: CLP; push r15 ; mov r15, rdi ; mov rdi, rdx ; push r14 ; push r13 ; mov r13, rsi ; push r12 ; push rbp ; push rbx ; mov rbx, rdx ; sub rsp, 0x28 ; mov rsi, rsp ; call 0x82a8c
read: r12 r13 r14 r15 rbp rbx rdi rdx rip rsi rsp 
write: r13 r15 rbx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00082d60: CLP; push r14 ; push r13 ; mov r13, rdi ; push r12 ; push rbp ; push rbx ; mov rbx, rsi ; mov rdi, rbx ; sub rsp, 0x20 ; mov rsi, rsp ; call 0x82a8c
read: r12 r13 r14 rbp rbx rdi rip rsi rsp 
write: r13 rbx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00082e50: CLP; push r15 ; push r14 ; push r13 ; mov r13, rsi ; push r12 ; mov r12, rdi ; mov rdi, rdx ; push rbp ; push rbx ; mov rbx, rdx ; sub rsp, 0x28 ; mov rsi, rsp ; call 0x82a8c
read: r12 r13 r14 r15 rbp rbx rdi rdx rip rsi rsp 
write: r12 r13 rbx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00083050: CLP; push r12 ; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 0x20 ; test rdi, rdi ; je 0x83119
read: r12 rbp rbx rdi rflags rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
000831d0: CLP; ret
read: 
write: 
--------------------------------------------------------------------------------
000831e0: CLP; cmp qword ptr [rip + 0x2e86ec], 0 ; je 0x831ec
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
00083390: CLP; push rbx ; mov rbx, qword ptr [rip + 0x2e853c] ; test rbx, rbx ; je 0x83415
read: rbx rflags rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
00083420: CLP; lea rsi, [rip + 0xb29f8] ; lea rdi, [rip + 0xb157f] ; sub rsp, 8 ; mov edx, 5 ; call 0x2f4bc
read: rip rsp 
write: edx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00083470: CLP; push r12 ; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 0x10 ; test edx, edx ; je 0x834f4
read: edx r12 rbp rbx rdi rflags rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
00083530: CLP; push r12 ; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 0x10 ; test edx, edx ; je 0x835bc
read: edx r12 rbp rbx rdi rflags rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
00083600: CLP; push r13 ; movsxd rdx, esi ; push r12 ; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 0x18 ; mov rbp, qword ptr [rdi + 0x18] ; sub rbp, qword ptr [rdi + 0x10] ; mov r13, qword ptr [rdi + 8] ; mov rax, rbp ; add rdx, rbp ; sar rax, 3 ; add rdx, rax ; movsxd rax, dword ptr [rdi + 0x30]
read: esi r12 r13 rax rbp rbx rdi rdx rsp 
write: r13 rax rbp rbx rdx rflags rsp 
--------------------------------------------------------------------------------
000837a0: CLP; mov rax, qword ptr [rdi + 8] ; test rax, rax ; je 0x837bf
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000837e0: CLP; push r12 ; mov r12, rsi ; push rbp ; push rbx ; mov rsi, qword ptr [rdi + 8] ; mov rbx, rdi ; test rsi, rsi ; jne 0x83813
read: r12 rbp rbx rdi rflags rsi rsp 
write: r12 rbx rflags rsi rsp 
--------------------------------------------------------------------------------
00083870: CLP; mov rdx, qword ptr [rdi + 8] ; xor eax, eax ; test rdx, rdx ; je 0x8388b
read: eax rdx rflags 
write: eax rdx rflags 
--------------------------------------------------------------------------------
000838a0: CLP; mov rcx, rdi ; and ecx, 7 ; mov rax, rdi ; movabs r8, 0xfefefefefefefeff ; je 0x838cc
read: ecx rdi rflags 
write: ecx r8 rax rcx rflags 
--------------------------------------------------------------------------------
00083a60: CLP; movd xmm1, esi ; mov eax, edi ; and eax, 0xfff ; punpcklbw xmm1, xmm1 ; cmp eax, 0xfc0 ; punpcklwd xmm1, xmm1 ; pshufd xmm1, xmm1, 0 ; jg 0x83bec
read: eax edi esi rflags xmm1 
write: eax rflags xmm1 
--------------------------------------------------------------------------------
00083c90: CLP; mov ecx, esi ; mov eax, edi ; and rcx, 0x3f ; and rax, 0x3f ; cmp ecx, 0x30 ; ja 0x83cec
read: ecx edi esi rax rcx rflags 
write: eax ecx rax rcx rflags 
--------------------------------------------------------------------------------
000850e0: CLP; sub rsp, 8 ; mov rax, qword ptr [rip + 0x2e3cd1] ; mov rdx, qword ptr fs:[rax] ; call 0x9211c
read: rip rsp 
write: rax rdx rflags rsp 
--------------------------------------------------------------------------------
00085110: CLP; mov rcx, rsi ; and ecx, 7 ; mov rdx, rdi ; je 0x85136
read: ecx rdi rflags rsi 
write: ecx rcx rdx rflags 
--------------------------------------------------------------------------------
00085200: CLP; mov rdx, rdi ; mov r8, rdi ; sub rsp, 0x100 ; mov ecx, 0x20 ; mov rdi, rsp ; xor eax, eax ; cld ; rep stosq qword ptr [rdi], rax ; mov rax, rsi ; nop word ptr cs:[rax + rax] ; mov cl, byte ptr [rax] ; test cl, cl ; je 0x8525a
read: cl eax rax rcx rdi rflags rsi rsp 
write: cl eax ecx r8 rax rcx rdi rdx rflags rsp 
--------------------------------------------------------------------------------
000852b0: CLP; cmp rdi, rsi ; je 0x8539c
read: rdi rflags rsi 
write: rflags 
--------------------------------------------------------------------------------
000853f0: CLP; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; call 0x856dc
read: rbp rbx rdi rip rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
00085440: CLP; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 8 ; call 0x858ac
read: rbp rbx rdi rip rsp 
write: rbp rflags rsp 
--------------------------------------------------------------------------------
000854a0: CLP; push r12 ; xor edx, edx ; xor esi, esi ; push rbp ; push rbx ; mov ebx, edi ; call 0x8552c
read: edi edx esi r12 rbp rbx rip rsp 
write: ebx edx esi rflags rsp 
--------------------------------------------------------------------------------
00085530: CLP; push r15 ; push r14 ; push r13 ; push r12 ; mov r12, rsi ; push rbp ; mov rbp, rdx ; push rbx ; mov ebx, edi ; sub rsp, 0x28 ; test edi, edi ; js 0x85591
read: edi r12 r13 r14 r15 rbp rbx rdx rflags rsi rsp 
write: ebx r12 rbp rflags rsp 
--------------------------------------------------------------------------------
000856e0: CLP; pxor xmm8, xmm8 ; pxor xmm9, xmm9 ; pxor xmm10, xmm10 ; pxor xmm11, xmm11 ; mov rax, rdi ; mov rcx, rdi ; and rcx, 0xfff ; cmp rcx, 0xfcf ; ja 0x8577c
read: rcx rdi rflags xmm10 xmm11 xmm8 xmm9 
write: rax rcx rflags xmm10 xmm11 xmm8 xmm9 
--------------------------------------------------------------------------------
000858b0: CLP; test rsi, rsi ; jne 0x858b9
read: rflags rsi 
write: rflags 
--------------------------------------------------------------------------------
00085ae0: CLP; mov rax, rdi ; mov r9, rdi ; jmp 0x85aef
read: rdi 
write: r9 rax 
--------------------------------------------------------------------------------
00085bb0: CLP; test rdx, rdx ; je 0x873f0
read: rdx rflags 
write: rflags 
--------------------------------------------------------------------------------
00087410: CLP; cmp rdx, 3 ; mov rax, rdi ; lea rcx, [rdi - 1] ; jbe 0x874ac
read: rdi rdx rflags 
write: rax rcx rflags 
--------------------------------------------------------------------------------
00087520: CLP; movd xmm1, esi ; mov rax, rdi ; and eax, 0xfff ; punpcklbw xmm1, xmm1 ; cmp rax, 0xfc0 ; punpcklwd xmm1, xmm1 ; pshufd xmm1, xmm1, 0 ; ja 0x8774c
read: eax esi rax rdi rflags xmm1 
write: eax rax rflags xmm1 
--------------------------------------------------------------------------------
00087820: CLP; mov rdx, rdi ; mov r8, rdi ; sub rsp, 0x100 ; mov ecx, 0x20 ; mov rdi, rsp ; xor eax, eax ; cld ; rep stosq qword ptr [rdi], rax ; mov rax, rsi ; nop word ptr cs:[rax + rax] ; mov cl, byte ptr [rax] ; test cl, cl ; je 0x8787a
read: cl eax rax rcx rdi rflags rsi rsp 
write: cl eax ecx r8 rax rcx rdi rdx rflags rsp 
--------------------------------------------------------------------------------
000878d0: CLP; mov eax, dword ptr [rip + 0x2e6e96] ; test eax, eax ; jne 0x878ec
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00087940: CLP; sub rsp, 8 ; call 0x1f46c
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00087990: CLP; push rbp ; push rbx ; mov ebx, edi ; sub rsp, 8 ; mov r8d, dword ptr [rip + 0x2e6dcd] ; test r8d, r8d ; jne 0x87b2c
read: edi r8d rbp rbx rflags rsp 
write: ebx r8d rflags rsp 
--------------------------------------------------------------------------------
00087bc0: CLP; mov rdx, rdi ; mov r8, rdi ; sub rsp, 0x100 ; mov ecx, 0x20 ; mov rdi, rsp ; xor eax, eax ; cld ; rep stosq qword ptr [rdi], rax ; mov rax, rsi ; nop word ptr cs:[rax + rax] ; mov cl, byte ptr [rax] ; test cl, cl ; je 0x87c1a
read: cl eax rax rcx rdi rflags rsi rsp 
write: cl eax ecx r8 rax rcx rdi rdx rflags rsp 
--------------------------------------------------------------------------------
00087c70: CLP; push rbx ; mov r11d, 1 ; mov r8d, 1 ; xor r9d, r9d ; mov rax, -1 ; nop dword ptr [rax + rax] ; lea rcx, [r8 + r9] ; cmp rcx, rsi ; jae 0x87cbf
read: r9d rbx rcx rflags rsi rsp 
write: r11d r8d r9d rax rcx rflags rsp 
--------------------------------------------------------------------------------
00087da0: CLP; push r15 ; mov r15, rdi ; mov rdi, rdx ; push r14 ; push r13 ; push r12 ; push rbp ; mov rbp, rsi ; mov rsi, rcx ; push rbx ; mov rbx, rcx ; sub rsp, 0x868 ; mov qword ptr [rsp + 0x18], rdx ; lea rdx, [rsp + 0x58] ; call 0x87c6c
read: r12 r13 r14 r15 rbp rbx rcx rdi rdx rip rsi rsp 
write: r15 rbp rbx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00088180: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 0x68 ; movzx eax, byte ptr [rdi] ; test al, al ; je 0x88612
read: al r12 r13 r14 r15 rbp rbx rdi rflags rsp 
write: eax rbp rflags rsp 
--------------------------------------------------------------------------------
00088650: CLP; mov r8, rdi ; sub rsp, 0x100 ; mov ecx, 0x20 ; mov rdi, rsp ; xor eax, eax ; cld ; rep stosq qword ptr [rdi], rax ; mov rax, qword ptr [rip + 0x2e3315] ; mov rdx, r8 ; cmp rdx, 0 ; cmove rdx, rax ; test rdx, rdx ; je 0x88736
read: eax r8 rax rcx rdi rdx rflags rsp 
write: eax ecx r8 rax rcx rdi rdx rflags rsp 
--------------------------------------------------------------------------------
00088750: CLP; mov r8, rdi ; sub rsp, 0x100 ; mov ecx, 0x20 ; mov rdi, rsp ; xor eax, eax ; cld ; rep stosq qword ptr [rdi], rax ; mov r9, rdx ; mov rax, qword ptr [rdx] ; mov rdx, r8 ; cmp rdx, 0 ; cmove rdx, rax ; test rdx, rdx ; je 0x88831
read: eax r8 rax rcx rdi rdx rflags rsp 
write: eax ecx r8 r9 rax rcx rdi rdx rflags rsp 
--------------------------------------------------------------------------------
00088840: CLP; sub rsp, 8 ; mov rax, qword ptr [rip + 0x2e0571] ; mov rcx, qword ptr fs:[rax] ; call 0x9291c
read: rip rsp 
write: rax rcx rflags rsp 
--------------------------------------------------------------------------------
00088870: CLP; movq xmm1, rsi ; mov rcx, rdi ; punpcklbw xmm1, xmm1 ; test rdx, rdx ; je 0x88bac
read: rdi rdx rflags rsi xmm1 
write: rcx rflags xmm1 
--------------------------------------------------------------------------------
00088bc0: CLP; test rdx, rdx ; je 0x88cbc
read: rdx rflags 
write: rflags 
--------------------------------------------------------------------------------
00088fc0: CLP; push r12 ; mov rcx, rdi ; mov rax, rdi ; sub rcx, rsi ; push rbp ; push rbx ; sub rsp, 0x10 ; cmp rcx, rdx ; jb 0x8908c
read: r12 rbp rbx rcx rdi rdx rflags rsi rsp 
write: rax rcx rflags rsp 
--------------------------------------------------------------------------------
00089170: CLP; mov rax, rdi ; mov rdx, rsi ; pxor xmm8, xmm8 ; jmp 0x891d8
read: rdi rsi xmm8 
write: rax rdx xmm8 
--------------------------------------------------------------------------------
00089190: CLP; mov rax, rcx ; movd xmm8, esi ; punpcklbw xmm8, xmm8 ; punpcklwd xmm8, xmm8 ; pshufd xmm8, xmm8, 0 ; jmp 0x891d8
read: esi rcx xmm8 
write: rax xmm8 
--------------------------------------------------------------------------------
000891b0: CLP; cmp rcx, rdx ; jb 0xf291c
read: rcx rdx rflags 
write: rflags 
--------------------------------------------------------------------------------
000891c0: CLP; movd xmm8, esi ; mov rax, rdi ; punpcklbw xmm8, xmm8 ; punpcklwd xmm8, xmm8 ; pshufd xmm8, xmm8, 0 ; cmp rdx, 0x40 ; ja 0x8920c
read: esi rdi rdx rflags xmm8 
write: rax rflags xmm8 
--------------------------------------------------------------------------------
000892c0: CLP; cmp rcx, rdx ; jb 0xf291c
read: rcx rdx rflags 
write: rflags 
--------------------------------------------------------------------------------
000892d0: CLP; cmp rdx, 0x20 ; jae 0x8934c
read: rdx rflags 
write: rflags 
--------------------------------------------------------------------------------
00089730: CLP; push r12 ; mov rax, rsi ; sub rax, rdi ; push rbp ; cmp rax, rdx ; push rbx ; jb 0x897e4
read: r12 rax rbp rbx rdi rdx rflags rsi rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000898b0: CLP; mov edx, 0xffffffff ; bsf eax, edi ; cmove eax, edx ; add eax, 1 ; ret
read: eax edi edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
000898d0: CLP; mov edx, 0xffffffff ; bsf rax, rdi ; cmove rax, rdx ; add eax, 1 ; ret
read: eax rax rdi rdx rflags 
write: eax edx rax rflags 
--------------------------------------------------------------------------------
000898f0: CLP; mov rcx, rsi ; and ecx, 7 ; mov rdx, rdi ; je 0x89916
read: ecx rdi rflags rsi 
write: ecx rcx rdx rflags 
--------------------------------------------------------------------------------
000899e0: CLP; cmp rdx, 3 ; jbe 0x89a74
read: rdx rflags 
write: rflags 
--------------------------------------------------------------------------------
00089ae0: CLP; mov rax, qword ptr [rip + 0x2df2d5] ; mov rdx, qword ptr fs:[rax] ; nop dword ptr [rax + rax] ; nop word ptr cs:[rax + rax] ; nop dword ptr [rax - 0x56] ; mov rax, qword ptr [rdx] ; test dword ptr [rax + 0x278], 1 ; jne 0x947bc
read: rflags 
write: rax rdx rflags 
--------------------------------------------------------------------------------
00089b00: CLP; mov rax, qword ptr [rdx] ; test dword ptr [rax + 0x278], 1 ; jne 0x947bc
read: rflags 
write: rax rflags 
--------------------------------------------------------------------------------
0008bd30: CLP; mov rax, qword ptr [rip + 0x2dd085] ; mov rcx, qword ptr fs:[rax] ; nop dword ptr [rax + rax] ; nop word ptr cs:[rax + rax] ; nop dword ptr [rax - 0x56] ; mov rax, qword ptr [rcx] ; test dword ptr [rax + 0x278], 1 ; jne 0x947fc
read: rflags 
write: rax rcx rflags 
--------------------------------------------------------------------------------
0008bd50: CLP; mov rax, qword ptr [rcx] ; test dword ptr [rax + 0x278], 1 ; jne 0x947fc
read: rflags 
write: rax rflags 
--------------------------------------------------------------------------------
0008e390: CLP; add rcx, rsi ; jmp 0x8e3af
read: rcx rsi 
write: rcx rflags 
--------------------------------------------------------------------------------
0008e3d0: CLP; cmp rcx, rdx ; jb 0xf291c
read: rcx rdx rflags 
write: rflags 
--------------------------------------------------------------------------------
0008e3e0: CLP; cmp rdx, 0x20 ; mov rax, rdi ; jae 0x8e45c
read: rdi rdx rflags 
write: rax rflags 
--------------------------------------------------------------------------------
0008e850: CLP; lea rax, [rip + 0xa21f5] ; mov rcx, rdx ; and ecx, 7 ; movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
read: ecx rax rcx rdx 
write: ecx rax rcx rflags 
--------------------------------------------------------------------------------
0008e9d0: CLP; mov r8d, esi ; mov rcx, rdx ; push rbp ; and r8d, 7 ; mov eax, 0x40 ; and ecx, 3 ; shl r8d, 3 ; and rsi, 0xfffffffffffffff8 ; push rbx ; sub eax, r8d ; cmp rcx, 2 ; je 0x8eae4
read: eax ecx esi r8d rbp rbx rcx rdx rflags rsi rsp 
write: eax ecx r8d rcx rflags rsi rsp 
--------------------------------------------------------------------------------
0008eb10: CLP; lea rax, [rip + 0xa1f55] ; mov r8, rdx ; and r8d, 7 ; movsxd r8, dword ptr [rax + r8*4] ; add rax, r8 ; jmp rax
read: r8 r8d rax rdx 
write: r8 r8d rax rflags 
--------------------------------------------------------------------------------
0008ecb0: CLP; push r13 ; mov r8d, esi ; mov rcx, rdx ; and r8d, 7 ; mov eax, 0x40 ; and ecx, 3 ; push r12 ; shl r8d, 3 ; and rsi, 0xfffffffffffffff8 ; sub eax, r8d ; cmp rcx, 2 ; mov r9, rsi ; push rbp ; push rbx ; je 0x8edec
read: eax ecx esi r12 r13 r8d rbp rbx rcx rdx rflags rsi rsp 
write: eax ecx r8d r9 rcx rflags rsi rsp 
--------------------------------------------------------------------------------
0008ee20: CLP; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 8 ; mov rbx, qword ptr [rdi] ; test rbx, rbx ; je 0x8eeac
read: rbp rbx rdi rflags rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0008eec0: CLP; push r12 ; mov r12, qword ptr [rip + 0x2da053] ; mov r8d, 1 ; xor r9d, r9d ; mov rax, -1 ; push rbp ; mov ebp, 1 ; push rbx ; mov r10, qword ptr fs:[r12] ; nop dword ptr [rax] ; lea rcx, [r8 + r9] ; cmp rcx, rsi ; jae 0x8ef29
read: r12 r9d rbp rbx rcx rflags rsi rsp 
write: ebp r10 r12 r8d r9d rax rcx rflags rsp 
--------------------------------------------------------------------------------
0008f030: CLP; push r15 ; mov r15, rdx ; push r14 ; push r13 ; mov r13, rdi ; mov rdi, r15 ; push r12 ; mov r12, rsi ; mov rsi, rcx ; push rbp ; push rbx ; mov rbx, rcx ; sub rsp, 0x868 ; lea rdx, [rsp + 0x58] ; call 0x8eebc
read: r12 r13 r14 r15 rbp rbx rcx rdi rdx rip rsi rsp 
write: r12 r13 r15 rbx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0008f490: CLP; push r15 ; mov r8, rsi ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x68 ; movzx eax, byte ptr [rdi] ; test al, al ; je 0x8f96a
read: al r12 r13 r14 r15 rbp rbx rflags rsi rsp 
write: eax r8 rflags rsp 
--------------------------------------------------------------------------------
0008f9b0: CLP; and rdx, 0xfffffffffffffffe ; cmp rdx, 1 ; jle 0x8f9d6
read: rdx rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
0008f9e0: CLP; push r14 ; push r13 ; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 0x10 ; mov eax, dword ptr [rip + 0x2dbff7] ; test eax, eax ; je 0x8fa74
read: eax r12 r13 r14 rbp rbx rdi rflags rsp 
write: eax rbp rflags rsp 
--------------------------------------------------------------------------------
0008fad0: CLP; test rsi, rsi ; mov rax, rdi ; lea rcx, [rdi + rsi] ; mov rdx, rdi ; je 0x8faf1
read: rdi rflags rsi 
write: rax rcx rdx rflags 
--------------------------------------------------------------------------------
0008fb00: CLP; push rbx ; mov r11d, 1 ; mov r8d, 1 ; xor r9d, r9d ; mov rax, -1 ; nop dword ptr [rax + rax] ; lea rcx, [r8 + r9] ; cmp rcx, rsi ; jae 0x8fb4f
read: r9d rbx rcx rflags rsi rsp 
write: r11d r8d r9d rax rcx rflags rsp 
--------------------------------------------------------------------------------
0008fc30: CLP; push r15 ; mov r15, rdx ; push r14 ; push r13 ; mov r13, rsi ; mov rsi, rcx ; push r12 ; mov r12, rdi ; mov rdi, r15 ; push rbp ; mov rbp, rcx ; push rbx ; sub rsp, 0x838 ; lea rdx, [rsp + 0x28] ; call 0x8fafc
read: r12 r13 r14 r15 rbp rbx rcx rdi rdx rip rsi rsp 
write: r12 r13 r15 rbp rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0008ff40: CLP; push r15 ; mov rax, rdi ; push r14 ; push r13 ; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rcx ; sub rsp, 0x38 ; test rcx, rcx ; je 0x900e6
read: r12 r13 r14 r15 rbp rbx rcx rdi rflags rsp 
write: rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00090240: CLP; movq xmm1, rsi ; mov rcx, rdi ; punpcklbw xmm1, xmm1 ; punpcklbw xmm1, xmm1 ; and rcx, 0x3f ; pshufd xmm1, xmm1, 0 ; cmp rcx, 0x30 ; ja 0x9028c
read: rcx rdi rflags rsi xmm1 
write: rcx rflags xmm1 
--------------------------------------------------------------------------------
00090460: CLP; movd xmm1, esi ; mov eax, edi ; and eax, 0xfff ; punpcklbw xmm1, xmm1 ; cmp eax, 0xfc0 ; punpcklwd xmm1, xmm1 ; pshufd xmm1, xmm1, 0 ; jg 0x905cc
read: eax edi esi rflags xmm1 
write: eax rflags xmm1 
--------------------------------------------------------------------------------
00090670: CLP; push r15 ; mov r15, rdx ; push r14 ; mov r14, rcx ; push r13 ; mov r13, rdi ; push r12 ; mov r12, rcx ; push rbp ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; add r12, qword ptr [rsi] ; mov rdi, qword ptr [rdi] ; mov rsi, r12
read: r12 r13 r14 r15 rbp rbx rcx rdi rdx rsi rsp 
write: r12 r13 r14 r15 rbx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000906e0: CLP; push r12 ; mov r12, rsi ; push rbp ; mov rbp, rdi ; mov rdi, rdx ; push rbx ; mov rbx, rdx ; call 0x856dc
read: r12 rbp rbx rdi rdx rip rsi rsp 
write: r12 rbp rbx rdi rsp 
--------------------------------------------------------------------------------
00090720: CLP; push r12 ; test rsi, rsi ; push rbp ; mov rbp, rsi ; push rbx ; je 0x90768
read: r12 rbp rbx rflags rsi rsp 
write: rbp rflags rsp 
--------------------------------------------------------------------------------
00090780: CLP; push r15 ; push r14 ; mov r14, rdx ; push r13 ; mov r13, rsi ; push r12 ; mov r12, rdi ; push rbp ; push rbx ; sub rsp, 8 ; mov rdi, qword ptr [rdi] ; test rdi, rdi ; je 0x907cc
read: r12 r13 r14 r15 rbp rbx rdi rdx rflags rsi rsp 
write: r12 r13 r14 rdi rflags rsp 
--------------------------------------------------------------------------------
00090840: CLP; push r14 ; mov r14, rdx ; push r13 ; push r12 ; mov r12d, esi ; push rbp ; mov rbp, rcx ; push rbx ; mov rbx, rdi ; call 0x856dc
read: esi r12 r13 r14 rbp rbx rcx rdi rdx rip rsp 
write: r12d r14 rbp rbx rsp 
--------------------------------------------------------------------------------
00090940: CLP; push rbp ; push rbx ; sub rsp, 8 ; test rdx, rdx ; je 0x9097c
read: rbp rbx rdx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000909a0: CLP; push r12 ; test rdx, rdx ; push rbp ; push rbx ; mov rbx, rdx ; je 0x909ee
read: r12 rbp rbx rdx rflags rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
00090a20: CLP; push r12 ; test rsi, rsi ; mov r12, rsi ; push rbp ; mov rbp, rdx ; push rbx ; mov rbx, rdi ; je 0x90a64
read: r12 rbp rbx rdi rdx rflags rsi rsp 
write: r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00090a80: CLP; push r15 ; push r14 ; mov r14, rsi ; push r13 ; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 0x28 ; test rdx, rdx ; je 0x90b7c
read: r12 r13 r14 r15 rbp rbx rdi rdx rflags rsi rsp 
write: r14 rbp rflags rsp 
--------------------------------------------------------------------------------
00090ba0: CLP; push r12 ; test rsi, rsi ; mov r12d, edx ; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rsi ; jne 0x90bc3
read: edx r12 rbp rbx rdi rflags rsi rsp 
write: r12d rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00090bf0: CLP; push r14 ; mov r14, rdi ; mov rdi, rdx ; push r13 ; push r12 ; mov r12d, ecx ; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdx ; call 0x856dc
read: ecx r12 r13 r14 rbp rbx rdi rdx rip rsi rsp 
write: r12d r14 rbp rbx rdi rsp 
--------------------------------------------------------------------------------
00090cb0: CLP; push r15 ; mov r15, rdx ; push r14 ; mov r14, rcx ; push r13 ; mov r13, rcx ; push r12 ; mov r12, rdi ; push rbp ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; add r13, qword ptr [rsi] ; mov rdi, qword ptr [rdi] ; lea rsi, [r13 + 1]
read: r12 r13 r14 r15 rbp rbx rcx rdi rdx rsi rsp 
write: r12 r13 r14 r15 rbx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00090d50: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; xor ebx, ebx ; sub rsp, 0x88 ; test rdx, rdx ; mov qword ptr [rsp + 0x50], rdi ; mov qword ptr [rsp + 0x58], rsi ; mov qword ptr [rsp + 0x10], rdx ; mov qword ptr [rsp + 0x38], r8 ; je 0x90f9a
read: ebx r12 r13 r14 r15 r8 rbp rbx rdi rdx rflags rsi rsp 
write: ebx rflags rsp 
--------------------------------------------------------------------------------
000910a0: CLP; nop dword ptr [rax] ; test rsi, rsi ; je 0x91113
read: rflags rsi 
write: rflags 
--------------------------------------------------------------------------------
00091170: CLP; call 0x9109c
read: rip rsp 
write: rsp 
--------------------------------------------------------------------------------
000911b0: CLP; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov rsi, qword ptr [rsi] ; mov rdi, qword ptr [rdi] ; call 0x9109c
read: rbp rbx rdi rip rsi rsp 
write: rbp rbx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000911f0: CLP; push r15 ; push r14 ; push r13 ; mov r13, rcx ; push r12 ; mov r12, rdx ; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 0x28 ; call 0x911ac
read: r12 r13 r14 r15 rbp rbx rcx rdi rdx rip rsi rsp 
write: r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00091310: CLP; push r15 ; push r14 ; mov r14, rdi ; push r13 ; mov r13, rsi ; push r12 ; mov r12, rcx ; push rbp ; push rbx ; mov rbx, rdx ; sub rsp, 0x18 ; test rcx, rcx ; mov dword ptr [rsp + 0xc], r8d ; jne 0x9134b
read: r12 r13 r14 r15 r8d rbp rbx rcx rdi rdx rflags rsi rsp 
write: r12 r13 r14 rbx rflags rsp 
--------------------------------------------------------------------------------
000913e0: CLP; push r14 ; mov r14, rdi ; push r13 ; mov r13, rsi ; push r12 ; push rbp ; push rbx ; mov rbp, qword ptr [rsi] ; mov rbx, qword ptr [rdi] ; test rbp, rbp ; je 0x91459
read: r12 r13 r14 rbp rbx rdi rflags rsi rsp 
write: r13 r14 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00091470: CLP; push rbx ; mov esi, 0x2f ; mov rbx, rdi ; call 0x8751c
read: rbx rdi rip rsp 
write: esi rbx rsp 
--------------------------------------------------------------------------------
000914a0: CLP; push r15 ; push r14 ; push r13 ; xor r13d, r13d ; push r12 ; push rbp ; push rbx ; mov eax, dword ptr [rdi] ; mov qword ptr [rdi + 8], 0 ; mov r12, qword ptr [rdi + 0x30] ; mov qword ptr [rsp - 8], rdi ; mov rbx, qword ptr [rdi + 0x28] ; test eax, eax ; mov r14, qword ptr [rdi + 0x20] ; mov r10, qword ptr [rdi + 0x18]
read: eax r12 r13 r13d r14 r15 rbp rbx rdi rsp 
write: eax r10 r12 r13d r14 rbx rflags rsp 
--------------------------------------------------------------------------------
000915f0: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; mov eax, dword ptr [rdi] ; mov rbx, rdi ; mov qword ptr [rdi + 8], 0 ; mov r14, qword ptr [rbx + 0x48] ; mov qword ptr [rsp - 8], rdi ; mov qword ptr [rsp - 0x58], rdx ; mov edi, eax ; mov rdx, qword ptr [rbx + 0x18] ; mov dword ptr [rsp - 0xc], eax
read: eax r12 r13 r14 r15 rbp rbx rdi rdx rsp 
write: eax edi r14 rbx rdx rsp 
--------------------------------------------------------------------------------
000919f0: CLP; push r15 ; push r14 ; push r13 ; push r12 ; mov r12, rcx ; push rbp ; push rbx ; mov ecx, dword ptr [rdi] ; mov ebx, dword ptr [rsp + 0x40] ; mov qword ptr [rdi + 8], 0 ; mov qword ptr [rsp - 0x50], rdx ; mov rdx, qword ptr [rdi + 0x30] ; test ecx, ecx ; mov qword ptr [rsp - 0x60], r8 ; mov qword ptr [rsp - 0x20], rdi
read: ecx r12 r13 r14 r15 r8 rbp rbx rcx rdi rdx rsp 
write: ebx ecx r12 rdx rflags rsp 
--------------------------------------------------------------------------------
00092120: CLP; push rbp ; mov rbp, rsp ; push r15 ; push r14 ; push r13 ; push r12 ; push rbx ; sub rsp, 0x158 ; mov rax, qword ptr [rdx + 0x18] ; mov qword ptr [rbp - 0x138], rdi ; mov qword ptr [rbp - 0x140], rsi ; mov r15d, dword ptr [rax + 0x40] ; mov edx, r15d ; test rdx, rdx ; mov qword ptr [rbp - 0x130], rdx
read: r12 r13 r14 r15 r15d rbp rbx rdi rdx rsi rsp 
write: edx r15d rax rbp rflags rsp 
--------------------------------------------------------------------------------
00092870: CLP; test esi, 0xfffff800 ; je 0x928db
read: esi rflags 
write: rflags 
--------------------------------------------------------------------------------
00092920: CLP; push rbp ; mov rbp, rsp ; push r15 ; push r14 ; push r13 ; push r12 ; mov r12, rsi ; push rbx ; sub rsp, 0xa8 ; mov r13, qword ptr [rcx + 0x18] ; mov qword ptr [rbp - 0x90], rdi ; mov rdi, rsi ; mov qword ptr [rbp - 0x50], rdx ; mov eax, dword ptr [r13 + 0x40] ; mov rbx, rax
read: r12 r13 r14 r15 rax rbp rbx rdi rdx rsi rsp 
write: eax r12 r13 rbp rbx rdi rflags rsp 
--------------------------------------------------------------------------------
00093490: CLP; mov rax, qword ptr [rsp + 0x20] ; mov r11d, dword ptr [rsp + 8] ; cmp eax, 8 ; ja 0x934c7
read: eax rflags 
write: r11d rax rflags 
--------------------------------------------------------------------------------
000935a0: CLP; cmp r9d, 8 ; ja 0x935c3
read: r9d rflags 
write: rflags 
--------------------------------------------------------------------------------
00093650: CLP; cmp r9d, 8 ; ja 0x93673
read: r9d rflags 
write: rflags 
--------------------------------------------------------------------------------
00093700: CLP; movsx eax, byte ptr [rdi] ; test al, al ; je 0x93736
read: al rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00093750: CLP; movsx eax, byte ptr [rdi] ; test al, al ; je 0x9378e
read: al rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000937a0: CLP; movsx eax, byte ptr [rdi] ; test al, al ; je 0x937de
read: al rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000937f0: CLP; movsx ecx, byte ptr [rdi] ; xor eax, eax ; cmp ecx, esi ; jne 0x9380a
read: eax ecx esi rflags 
write: eax ecx rflags 
--------------------------------------------------------------------------------
00093810: CLP; xor eax, eax ; jmp 0x93820
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
00093840: CLP; xor eax, eax ; jmp 0x93850
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
00093870: CLP; movsx eax, byte ptr [rdi] ; test al, al ; jne 0x9388b
read: al rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000938b0: CLP; movsx eax, byte ptr [rdi] ; test al, al ; je 0x938e8
read: al rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00093900: CLP; test rdi, rdi ; mov rax, rdi ; mov r8d, esi ; je 0x9396c
read: esi rdi rflags 
write: r8d rax rflags 
--------------------------------------------------------------------------------
00093990: CLP; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 8 ; mov rbx, qword ptr [rdi] ; test rbx, rbx ; je 0x939c8
read: rbp rbx rdi rflags rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000939e0: CLP; mov rax, qword ptr [rdi] ; mov r8d, esi ; mov r9d, edx ; test rax, rax ; je 0x93a2a
read: edx esi rax rflags 
write: r8d r9d rax rflags 
--------------------------------------------------------------------------------
00093a50: CLP; mov rax, qword ptr [rdi] ; mov r8d, esi ; mov r9d, edx ; mov r10d, ecx ; test rax, rax ; je 0x93aa3
read: ecx edx esi rax rflags 
write: r10d r8d r9d rax rflags 
--------------------------------------------------------------------------------
00093ac0: CLP; movq xmm1, rsi ; sub rdx, 0x10 ; jbe 0x93e0c
read: rdx rflags rsi 
write: rdx rflags xmm1 
--------------------------------------------------------------------------------
00093ec0: CLP; push r13 ; push r12 ; mov r12, rsi ; push rbp ; mov rbp, rdx ; push rbx ; movsxd rbx, edi ; mov edi, ebx ; sub rsp, 8 ; call 0x8552c
read: ebx edi r12 r13 rbp rbx rdx rip rsi rsp 
write: edi r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00093fd0: CLP; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; mov ebx, edi ; sub rsp, 0x10 ; test edi, edi ; js 0x94043
read: edi r12 r13 r14 rbp rbx rflags rsp 
write: ebx rflags rsp 
--------------------------------------------------------------------------------
00094110: CLP; test esi, esi ; js 0x9432f
read: esi rflags 
write: rflags 
--------------------------------------------------------------------------------
00094420: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x28 ; cmp esi, 1 ; jbe 0x94533
read: esi r12 r13 r14 r15 rbp rbx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00094560: CLP; push rbx ; mov eax, 0x80000000 ; cpuid ; cmp edi, 0xc4 ; jg 0x945b4
read: eax ecx edi rbx rflags rsp 
write: eax ebx ecx edx rflags rsp 
--------------------------------------------------------------------------------
00094750: CLP; xor eax, eax ; push rbx ; cpuid ; cmp ebx, 0x756e6547 ; jne 0x94765
read: eax ebx ecx rbx rflags rsp 
write: eax ebx ecx edx rflags rsp 
--------------------------------------------------------------------------------
000947c0: CLP; cmp rdi, rsi ; je 0x947f4
read: rdi rflags rsi 
write: rflags 
--------------------------------------------------------------------------------
00094800: CLP; cmp rdi, rsi ; je 0x94844
read: rdi rflags rsi 
write: rflags 
--------------------------------------------------------------------------------
00094850: CLP; mov rax, rdi ; mov rdx, rdi ; jmp 0x9485f
read: rdi 
write: rax rdx 
--------------------------------------------------------------------------------
00094890: CLP; movq xmm1, rsi ; pxor xmm2, xmm2 ; mov rcx, rdi ; punpckldq xmm1, xmm1 ; punpckldq xmm1, xmm1 ; and rcx, 0x3f ; cmp rcx, 0x30 ; ja 0x948f6
read: rcx rdi rflags rsi xmm1 xmm2 
write: rcx rflags xmm1 xmm2 
--------------------------------------------------------------------------------
00094a20: CLP; mov eax, esi ; mov edx, edi ; pxor xmm0, xmm0 ; mov ch, al ; mov cl, dl ; and eax, 0x3f ; and edx, 0x3f ; and cl, 0xf ; je 0x94c7c
read: al cl dl eax edi edx esi rflags xmm0 
write: ch cl eax edx rflags xmm0 
--------------------------------------------------------------------------------
000956f0: CLP; mov rdx, rdi ; mov rax, rdi ; sub rdx, rsi ; sar rdx, 2 ; lea rcx, [rdx*4 - 4] ; nop dword ptr [rax] ; add rsi, 4 ; mov edx, dword ptr [rsi - 4] ; test edx, edx ; mov dword ptr [rsi + rcx], edx ; jne 0x9570c
read: edx rdi rdx rflags rsi 
write: edx rax rcx rdx rflags rsi 
--------------------------------------------------------------------------------
00095720: CLP; push r12 ; mov r12, rsi ; push rbp ; mov rbp, rdi ; push rbx ; mov esi, dword ptr [rdi] ; xor ebx, ebx ; test esi, esi ; jne 0x95748
read: ebx esi r12 rbp rbx rdi rflags rsi rsp 
write: ebx esi r12 rbp rflags rsp 
--------------------------------------------------------------------------------
00095770: CLP; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; call 0x957cc
read: rbp rbx rdi rip rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
000957d0: CLP; cmp dword ptr [rdi], 0 ; je 0x959ec
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
00095a70: CLP; mov rax, rdi ; mov r9, rdi ; jmp 0x95a7f
read: rdi 
write: r9 rax 
--------------------------------------------------------------------------------
00095b40: CLP; cmp rdx, 3 ; jbe 0x95bac
read: rdx rflags 
write: rflags 
--------------------------------------------------------------------------------
00095c00: CLP; cmp rdx, 3 ; mov rax, rdi ; lea rcx, [rdi - 4] ; jbe 0x95c9c
read: rdi rdx rflags 
write: rax rcx rflags 
--------------------------------------------------------------------------------
00095d00: CLP; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov esi, dword ptr [rdi] ; test esi, esi ; jne 0x95d26
read: esi rbp rbx rdi rflags rsi rsp 
write: esi rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00095d50: CLP; movq xmm1, rsi ; mov rcx, rdi ; punpckldq xmm1, xmm1 ; pxor xmm2, xmm2 ; punpckldq xmm1, xmm1 ; and rcx, 0x3f ; cmp rcx, 0x30 ; ja 0x95dcc
read: rcx rdi rflags rsi xmm1 xmm2 
write: rcx rflags xmm1 xmm2 
--------------------------------------------------------------------------------
00096070: CLP; mov r8d, dword ptr [rdi] ; test r8d, r8d ; je 0x960c5
read: r8d rflags 
write: r8d rflags 
--------------------------------------------------------------------------------
000960e0: CLP; push r12 ; test rdi, rdi ; mov r12, rdx ; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; je 0x9613c
read: r12 rbp rbx rdi rdx rflags rsi rsp 
write: r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00096180: CLP; mov edx, dword ptr [rsi] ; mov rax, rdi ; test edx, edx ; je 0x9621c
read: edx rdi rflags 
write: edx rax rflags 
--------------------------------------------------------------------------------
00096290: CLP; jmp 0x962b7
read: 
write: 
--------------------------------------------------------------------------------
00096320: CLP; jmp 0x96360
read: 
write: 
--------------------------------------------------------------------------------
000963d0: CLP; sub rsp, 8 ; shl rdx, 2 ; call 0x8e3dc
read: rdx rip rsp 
write: rdx rflags rsp 
--------------------------------------------------------------------------------
000963f0: CLP; sub rsp, 8 ; shl rdx, 2 ; call 0x88fbc
read: rdx rip rsp 
write: rdx rflags rsp 
--------------------------------------------------------------------------------
00096410: CLP; cmp rdx, 3 ; mov rax, rdi ; mov rcx, rdi ; jbe 0x96453
read: rdi rdx rflags 
write: rax rcx rflags 
--------------------------------------------------------------------------------
00096480: CLP; sub rsi, rdi ; lea rax, [rdi - 4] ; sar rsi, 2 ; lea rcx, [rsi*4 + 4] ; nop word ptr [rax + rax] ; mov edx, dword ptr [rax + rcx] ; add rax, 4 ; test edx, edx ; mov dword ptr [rax], edx ; jne 0x9649c
read: edx rax rdi rflags rsi 
write: edx rax rcx rflags rsi 
--------------------------------------------------------------------------------
000964b0: CLP; cmp rdx, 3 ; jbe 0x96554
read: rdx rflags 
write: rflags 
--------------------------------------------------------------------------------
000965d0: CLP; sub rsp, 8 ; shl rdx, 2 ; call 0x892cc
read: rdx rip rsp 
write: rdx rflags rsp 
--------------------------------------------------------------------------------
000965f0: CLP; push r12 ; lea edx, [rdi + 0x80] ; mov eax, 0xffffffff ; push rbp ; push rbx ; mov ebx, edi ; sub rsp, 0x70 ; cmp edx, 0x17f ; jbe 0x9661c
read: edi edx r12 rbp rbx rflags rsp 
write: eax ebx edx rflags rsp 
--------------------------------------------------------------------------------
00096790: CLP; push r14 ; mov r14d, edi ; push r13 ; push r12 ; push rbp ; push rbx ; add rsp, -0x80 ; cmp edi, -1 ; je 0x968bc
read: edi r12 r13 r14 rbp rbx rflags rsp 
write: r14d rflags rsp 
--------------------------------------------------------------------------------
00096900: CLP; test rdi, rdi ; je 0x96914
read: rdi rflags 
write: rflags 
--------------------------------------------------------------------------------
00096920: CLP; lea rcx, [rip + 0x2d50c9] ; sub rsp, 8 ; test rdx, rdx ; cmovne rcx, rdx ; mov rdx, rsi ; mov rsi, rdi ; xor edi, edi ; call 0x9694c
read: edi rcx rdi rdx rflags rip rsi rsp 
write: edi rcx rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00096950: CLP; push r14 ; lea rax, [rip + 0x2d509f] ; push r13 ; push r12 ; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; add rsp, -0x80 ; test rdi, rdi ; lea rsi, [rsp + 0x20] ; mov dword ptr [rsp + 0x54], 0 ; mov dword ptr [rsp + 0x58], 1 ; mov dword ptr [rsp + 0x50], 1 ; mov qword ptr [rsp + 0x70], 0
read: r12 r13 r14 rbp rbx rdi rsi rsp 
write: rax rbp rbx rflags rsi rsp 
--------------------------------------------------------------------------------
00096b90: CLP; push r12 ; lea rax, [rip + 0x2d4e67] ; push rbp ; mov rbp, rdi ; push rbx ; add rsp, -0x80 ; test rdx, rdx ; cmovne rax, rdx ; test rdi, rdi ; mov dword ptr [rsp + 0x1c], esi ; mov dword ptr [rsp + 0x54], 0 ; mov dword ptr [rsp + 0x58], 1 ; mov dword ptr [rsp + 0x50], 1 ; mov qword ptr [rsp + 0x60], rax ; mov qword ptr [rsp + 0x70], 0
read: esi r12 rax rbp rbx rdi rdx rflags rsp 
write: rax rbp rflags rsp 
--------------------------------------------------------------------------------
00096da0: CLP; lea rax, [rip + 0x2d4c61] ; sub rsp, 8 ; test rcx, rcx ; cmovne rax, rcx ; mov rcx, qword ptr [rip + 0x2d2003] ; mov r8, qword ptr fs:[rcx] ; mov rcx, rax ; call 0xa176c
read: rax rcx rflags rip rsp 
write: r8 rax rcx rflags rsp 
--------------------------------------------------------------------------------
00096de0: CLP; push r15 ; lea rax, [rip + 0x2d4c27] ; push r14 ; mov r14, rdx ; push r13 ; mov r13, rsi ; push r12 ; mov r12, rdi ; push rbp ; push rbx ; sub rsp, 0x188 ; test rcx, rcx ; cmovne rax, rcx ; mov qword ptr [rsp + 0x70], 0 ; mov dword ptr [rsp + 0x54], 0
read: r12 r13 r14 r15 rax rbp rbx rcx rdi rdx rflags rsi rsp 
write: r12 r13 r14 rax rflags rsp 
--------------------------------------------------------------------------------
000970f0: CLP; push r15 ; lea rax, [rip + 0x2d491f] ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x188 ; test r8, r8 ; cmovne rax, r8 ; mov dword ptr [rsp + 0x54], 0 ; mov dword ptr [rsp + 0x58], 1 ; mov qword ptr [rsp + 0x60], rax ; xor eax, eax ; test rdx, rdx
read: eax r12 r13 r14 r15 r8 rax rbp rbx rdx rflags rsp 
write: eax rax rflags rsp 
--------------------------------------------------------------------------------
00097400: CLP; push r15 ; lea rax, [rip + 0x2d4617] ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x188 ; test r8, r8 ; cmovne rax, r8 ; mov dword ptr [rsp + 0x54], 0 ; mov dword ptr [rsp + 0x58], 1 ; mov qword ptr [rsp + 0x60], rax ; xor eax, eax ; test rdx, rdx
read: eax r12 r13 r14 r15 r8 rax rbp rbx rdx rflags rsp 
write: eax rax rflags rsp 
--------------------------------------------------------------------------------
00097700: CLP; test rsi, rsi ; je 0x97790
read: rflags rsi 
write: rflags 
--------------------------------------------------------------------------------
000977b0: CLP; mov edx, dword ptr [rdi] ; mov rax, rdi ; test edx, edx ; je 0x977d2
read: edx rdi rflags 
write: edx rax rflags 
--------------------------------------------------------------------------------
000977e0: CLP; sub rsp, 8 ; mov rax, qword ptr [rip + 0x2d15d1] ; mov r8, qword ptr fs:[rax] ; call 0x979bc
read: rip rsp 
write: r8 rax rflags rsp 
--------------------------------------------------------------------------------
00097810: CLP; sub rsp, 8 ; mov rax, qword ptr [rip + 0x2d15a1] ; xor ecx, ecx ; mov r8, qword ptr fs:[rax] ; call 0x979bc
read: ecx rip rsp 
write: ecx r8 rax rflags rsp 
--------------------------------------------------------------------------------
00097840: CLP; sub rsp, 8 ; mov rax, qword ptr [rip + 0x2d1571] ; mov r8, qword ptr fs:[rax] ; call 0x97e8c
read: rip rsp 
write: r8 rax rflags rsp 
--------------------------------------------------------------------------------
00097870: CLP; sub rsp, 8 ; mov rax, qword ptr [rip + 0x2d1541] ; xor ecx, ecx ; mov r8, qword ptr fs:[rax] ; call 0x97e8c
read: ecx rip rsp 
write: ecx r8 rax rflags rsp 
--------------------------------------------------------------------------------
000978a0: CLP; sub rsp, 8 ; mov rax, qword ptr [rip + 0x2d1511] ; mov rcx, qword ptr fs:[rax] ; call 0x989dc
read: rip rsp 
write: rax rcx rflags rsp 
--------------------------------------------------------------------------------
000978d0: CLP; sub rsp, 8 ; mov rax, qword ptr [rip + 0x2d14e1] ; xor edx, edx ; mov rcx, qword ptr fs:[rax] ; call 0x989dc
read: edx rip rsp 
write: edx rax rcx rflags rsp 
--------------------------------------------------------------------------------
00097900: CLP; sub rsp, 8 ; mov rax, qword ptr [rip + 0x2d14b1] ; mov rcx, qword ptr fs:[rax] ; call 0x9b00c
read: rip rsp 
write: rax rcx rflags rsp 
--------------------------------------------------------------------------------
00097930: CLP; sub rsp, 8 ; mov rax, qword ptr [rip + 0x2d1481] ; xor edx, edx ; mov rcx, qword ptr fs:[rax] ; call 0x9b00c
read: edx rip rsp 
write: edx rax rcx rflags rsp 
--------------------------------------------------------------------------------
00097960: CLP; sub rsp, 8 ; mov rax, qword ptr [rip + 0x2d1451] ; mov rcx, qword ptr fs:[rax] ; call 0x9d59c
read: rip rsp 
write: rax rcx rflags rsp 
--------------------------------------------------------------------------------
00097990: CLP; sub rsp, 8 ; mov rax, qword ptr [rip + 0x2d1421] ; xor edx, edx ; mov rcx, qword ptr fs:[rax] ; call 0x9d59c
read: edx rip rsp 
write: edx rax rcx rflags rsp 
--------------------------------------------------------------------------------
000979c0: CLP; push r15 ; push r14 ; push r13 ; push r12 ; mov r12d, edx ; push rbp ; mov rbp, r8 ; push rbx ; sub rsp, 0x48 ; test ecx, ecx ; mov rax, qword ptr [r8 + 8] ; mov qword ptr [rsp + 0x18], rdi ; mov qword ptr [rsp + 0x20], rsi ; jne 0x97d69
read: ecx edx r12 r13 r14 r15 r8 rbp rbx rdi rflags rsi rsp 
write: r12d rax rbp rflags rsp 
--------------------------------------------------------------------------------
00097e70: CLP; sub rsp, 8 ; mov r8, rcx ; xor ecx, ecx ; call 0x979bc
read: ecx rcx rip rsp 
write: ecx r8 rflags rsp 
--------------------------------------------------------------------------------
00097e90: CLP; push r15 ; push r14 ; push r13 ; push r12 ; mov r12d, edx ; push rbp ; mov rbp, r8 ; push rbx ; sub rsp, 0x48 ; test ecx, ecx ; mov rax, qword ptr [r8 + 8] ; mov qword ptr [rsp + 0x18], rdi ; mov qword ptr [rsp + 0x20], rsi ; jne 0x981d9
read: ecx edx r12 r13 r14 r15 r8 rbp rbx rdi rflags rsi rsp 
write: r12d rax rbp rflags rsp 
--------------------------------------------------------------------------------
000982c0: CLP; sub rsp, 8 ; mov r8, rcx ; xor ecx, ecx ; call 0x97e8c
read: ecx rcx rip rsp 
write: ecx r8 rflags rsp 
--------------------------------------------------------------------------------
000982e0: CLP; push r15 ; push r14 ; mov r14, rcx ; push r13 ; push r12 ; mov r12d, esi ; push rbp ; push rbx ; sub rsp, 8 ; test esi, esi ; mov qword ptr [rcx], 0 ; jle 0x984de
read: esi r12 r13 r14 r15 rbp rbx rcx rflags rsp 
write: r12d r14 rflags rsp 
--------------------------------------------------------------------------------
00098540: CLP; sub rsp, 8 ; cmp r8d, 0x400 ; je 0x9859c
read: r8d rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000985b0: CLP; push r15 ; push r14 ; push r13 ; mov r13, rcx ; push r12 ; mov r12, rdi ; push rbp ; mov ebp, edx ; push rbx ; mov rbx, rsi ; sub rsp, 0x28 ; fnstcw word ptr [rsp + 0x18] ; movzx eax, word ptr [rsp + 0x18] ; and ax, 0xc00 ; cmp ax, 0x400
read: ax edx r12 r13 r14 r15 rbp rbx rcx rdi rsi rsp 
write: ax eax ebp r12 r13 rbx rflags rsp 
--------------------------------------------------------------------------------
000989e0: CLP; push r15 ; push r14 ; push r13 ; push r12 ; mov r12, rcx ; push rbp ; push rbx ; sub rsp, 0x428 ; test edx, edx ; mov rax, qword ptr [rcx + 8] ; mov qword ptr [rsp + 0x18], rdi ; mov qword ptr [rsp + 0x10], rsi ; jne 0x9a41f
read: edx r12 r13 r14 r15 rbp rbx rcx rdi rflags rsi rsp 
write: r12 rax rflags rsp 
--------------------------------------------------------------------------------
0009a910: CLP; sub rsp, 8 ; mov rcx, rdx ; xor edx, edx ; call 0x989dc
read: edx rdx rip rsp 
write: edx rcx rflags rsp 
--------------------------------------------------------------------------------
0009a930: CLP; push r15 ; push r14 ; mov r14, rcx ; push r13 ; push r12 ; mov r12d, esi ; push rbp ; push rbx ; sub rsp, 8 ; test esi, esi ; mov qword ptr [rcx], 0 ; jle 0x9ab36
read: esi r12 r13 r14 r15 rbp rbx rcx rflags rsp 
write: r12d r14 rflags rsp 
--------------------------------------------------------------------------------
0009aba0: CLP; sub rsp, 8 ; cmp r8d, 0x400 ; je 0x9abfc
read: r8d rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0009ac10: CLP; push r15 ; push r14 ; push r13 ; mov r13, rcx ; push r12 ; mov r12d, edx ; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rsi ; sub rsp, 0x28 ; fnstcw word ptr [rsp + 0x10] ; movzx eax, word ptr [rsp + 0x10] ; and ax, 0xc00 ; cmp ax, 0x400
read: ax edx r12 r13 r14 r15 rbp rbx rcx rdi rsi rsp 
write: ax eax r12d r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0009b010: CLP; push r15 ; push r14 ; push r13 ; push r12 ; mov r12, rcx ; push rbp ; push rbx ; sub rsp, 0x3628 ; test edx, edx ; mov rax, qword ptr [rcx + 8] ; mov qword ptr [rsp + 0x18], rdi ; mov qword ptr [rsp + 0x10], rsi ; jne 0x9cc23
read: edx r12 r13 r14 r15 rbp rbx rcx rdi rflags rsi rsp 
write: r12 rax rflags rsp 
--------------------------------------------------------------------------------
0009ce90: CLP; sub rsp, 8 ; mov rcx, rdx ; xor edx, edx ; call 0x9b00c
read: edx rdx rip rsp 
write: edx rcx rflags rsp 
--------------------------------------------------------------------------------
0009ceb0: CLP; push r15 ; push r14 ; mov r14, rcx ; push r13 ; push r12 ; mov r12d, esi ; push rbp ; push rbx ; sub rsp, 8 ; test esi, esi ; mov qword ptr [rcx], 0 ; jle 0x9d0ae
read: esi r12 r13 r14 r15 rbp rbx rcx rflags rsp 
write: r12d r14 rflags rsp 
--------------------------------------------------------------------------------
0009d110: CLP; sub rsp, 8 ; cmp r8d, 0x400 ; je 0x9d16c
read: r8d rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0009d180: CLP; push r15 ; push r14 ; push r13 ; mov r13, rcx ; push r12 ; mov r12, rdi ; push rbp ; mov ebp, edx ; push rbx ; mov rbx, rsi ; sub rsp, 0x28 ; fnstcw word ptr [rsp + 0x1c] ; movzx eax, word ptr [rsp + 0x1c] ; and ax, 0xc00 ; cmp ax, 0x400
read: ax edx r12 r13 r14 r15 rbp rbx rcx rdi rsi rsp 
write: ax eax ebp r12 r13 rbx rflags rsp 
--------------------------------------------------------------------------------
0009d5a0: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; mov rbp, rcx ; push rbx ; sub rsp, 0x108 ; test edx, edx ; mov rax, qword ptr [rcx + 8] ; mov qword ptr [rsp + 0x20], rdi ; mov qword ptr [rsp + 0x18], rsi ; jne 0x9f43e
read: edx r12 r13 r14 r15 rbp rbx rcx rdi rflags rsi rsp 
write: rax rbp rflags rsp 
--------------------------------------------------------------------------------
0009f560: CLP; sub rsp, 8 ; mov rcx, rdx ; xor edx, edx ; call 0x9d59c
read: edx rdx rip rsp 
write: edx rcx rflags rsp 
--------------------------------------------------------------------------------
0009f580: CLP; sub rsp, 8 ; mov rax, qword ptr [rip + 0x2c9831] ; mov rdx, qword ptr fs:[rax] ; call 0xa011c
read: rip rsp 
write: rax rdx rflags rsp 
--------------------------------------------------------------------------------
0009f5b0: CLP; sub rsp, 8 ; mov rax, qword ptr [rip + 0x2c9801] ; mov rcx, qword ptr fs:[rax] ; call 0xa08cc
read: rip rsp 
write: rax rcx rflags rsp 
--------------------------------------------------------------------------------
0009f5e0: CLP; mov rax, qword ptr [rip + 0x2c97d5] ; mov edx, edi ; mov rax, qword ptr fs:[rax] ; mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0xa0] ; mov ecx, dword ptr [rax] ; shr edx, cl ; cmp edx, dword ptr [rax + 4] ; jae 0x9f63c
read: cl edi edx rflags 
write: ecx edx rax rflags 
--------------------------------------------------------------------------------
0009f650: CLP; test rsi, rsi ; je 0x9f729
read: rflags rsi 
write: rflags 
--------------------------------------------------------------------------------
0009f730: CLP; push r15 ; push r14 ; push r13 ; xor r13d, r13d ; push r12 ; push rbp ; push rbx ; mov eax, dword ptr [rdi] ; mov qword ptr [rdi + 8], 0 ; mov r12, qword ptr [rdi + 0x30] ; mov qword ptr [rsp - 8], rdi ; mov rbx, qword ptr [rdi + 0x28] ; test eax, eax ; mov r14, qword ptr [rdi + 0x20] ; mov r10, qword ptr [rdi + 0x18]
read: eax r12 r13 r13d r14 r15 rbp rbx rdi rsp 
write: eax r10 r12 r13d r14 rbx rflags rsp 
--------------------------------------------------------------------------------
0009f880: CLP; push r15 ; push r14 ; push r13 ; push r12 ; mov r12, rdx ; push rbp ; push rbx ; sub rsp, 0x58 ; mov ebx, dword ptr [rdi] ; mov qword ptr [rdi + 8], 0 ; mov qword ptr [rsp + 0x30], rcx ; mov qword ptr [rsp + 0x48], rdi ; mov dword ptr [rsp + 0x40], esi ; mov qword ptr [rsp], r8 ; mov ecx, ebx
read: ebx esi r12 r13 r14 r15 r8 rbp rbx rcx rdi rdx rsp 
write: ebx ecx r12 rflags rsp 
--------------------------------------------------------------------------------
0009fbb0: CLP; push r15 ; mov rax, rdi ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x58 ; mov qword ptr [rdi + 8], 0 ; mov r15, qword ptr [rax + 0x20] ; mov dword ptr [rsp + 0x40], esi ; mov rsi, qword ptr [rax + 0x30] ; mov qword ptr [rsp + 0x28], rdi ; mov edi, dword ptr [rdi] ; mov qword ptr [rsp + 0x20], r9
read: esi r12 r13 r14 r15 r9 rbp rbx rdi rsp 
write: edi r15 rax rflags rsi rsp 
--------------------------------------------------------------------------------
000a0120: CLP; push rbp ; mov rbp, rsp ; push r15 ; push r14 ; push r13 ; push r12 ; push rbx ; sub rsp, 0x148 ; mov rax, qword ptr [rdx + 0x18] ; mov qword ptr [rbp - 0x138], rdi ; mov qword ptr [rbp - 0x140], rsi ; mov r15d, dword ptr [rax + 0x40] ; mov ebx, r15d ; test rbx, rbx ; mov qword ptr [rbp - 0x130], rbx
read: r12 r13 r14 r15 r15d rbp rbx rdi rsi rsp 
write: ebx r15d rax rbp rflags rsp 
--------------------------------------------------------------------------------
000a08d0: CLP; push rbp ; mov rbp, rsp ; push r15 ; mov r15, rsi ; push r14 ; push r13 ; mov r13, rdi ; mov rdi, rsi ; push r12 ; mov r12, rdx ; push rbx ; sub rsp, 0x68 ; mov r14, qword ptr [rcx + 0x18] ; mov eax, dword ptr [r14 + 0x40] ; mov rbx, rax
read: r12 r13 r14 r15 rax rbp rbx rdi rdx rsi rsp 
write: eax r12 r13 r14 r15 rbp rbx rdi rflags rsp 
--------------------------------------------------------------------------------
000a1160: CLP; push r12 ; cmp rdi, rsi ; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rsi ; jne 0xa1179
read: r12 rbp rbx rdi rflags rsi rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000a11c0: CLP; push r13 ; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; cmp rdi, rsi ; je 0xa11dd
read: r12 r13 rbp rbx rdi rflags rsi rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000a1240: CLP; push r13 ; mov r13, rdx ; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; cmp rdi, rsi ; jne 0xa1261
read: r12 r13 rbp rbx rdi rdx rflags rsi rsp 
write: r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000a12c0: CLP; push r14 ; cmp rdi, rsi ; push r13 ; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rsi ; je 0xa12de
read: r12 r13 r14 rbp rbx rdi rflags rsi rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000a1340: CLP; push rbx ; mov rbx, qword ptr [rdi + 0x28] ; test rbx, rbx ; je 0xa1387
read: rbx rflags rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
000a1390: CLP; push rbx ; mov rbx, rdx ; xor r8d, r8d ; sub rsp, 0x10 ; lea rdx, [rsp + 8] ; mov rcx, rsp ; call 0x23eac
read: r8d rbx rdx rip rsp 
write: r8d rbx rcx rdx rflags rsp 
--------------------------------------------------------------------------------
000a1400: CLP; push rbp ; mov rbp, rsp ; push r13 ; push r12 ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov edx, dword ptr [rip + 0x2cd356] ; test edx, edx ; jne 0xa1584
read: edx r12 r13 rbp rbx rdi rflags rsp 
write: edx rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000a1660: CLP; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov rax, qword ptr [rip + 0x2c774c] ; mov rax, qword ptr fs:[rax] ; mov rbp, qword ptr [rax] ; mov rax, qword ptr [rbp + 0x28] ; test rax, rax ; je 0xa16bd
read: rax rbp rbx rdi rflags rsp 
write: rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000a16f0: CLP; push rbp ; lea rdx, [rdi + 8] ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; lea rdi, [rip + 0x92ea7] ; sub rsp, 8 ; call 0xa138c
read: rbp rbx rdi rip rsi rsp 
write: rbp rbx rdi rdx rflags rsp 
--------------------------------------------------------------------------------
000a1770: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x198 ; mov rbx, qword ptr [r8] ; mov qword ptr [rsp + 0x80], 0 ; mov qword ptr [rsp + 0x20], rsi ; mov rsi, rdx ; mov qword ptr [rsp + 0x18], rdi ; mov dword ptr [rsp + 0x64], 0 ; mov rax, qword ptr [rbx + 0x28] ; mov dword ptr [rsp + 0x68], 1
read: r12 r13 r14 r15 rbp rbx rdi rdx rsi rsp 
write: rax rbx rflags rsi rsp 
--------------------------------------------------------------------------------
000a1b30: CLP; push rbp ; push rbx ; sub rsp, 0xd8 ; test al, al ; mov qword ptr [rsp + 0x28], rsi ; mov qword ptr [rsp + 0x30], rdx ; mov qword ptr [rsp + 0x38], rcx ; mov qword ptr [rsp + 0x40], r8 ; mov qword ptr [rsp + 0x48], r9 ; je 0xa1b8d
read: al r8 r9 rbp rbx rcx rdx rflags rsi rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000a1d20: CLP; push r12 ; mov r10, qword ptr [rip + 0x2c728b] ; mov rdx, rsi ; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, qword ptr [r10] ; mov eax, dword ptr [rbx] ; mov rdi, rbx ; and eax, 0x8000 ; jne 0xa1da4
read: eax r12 rbp rbx rdi rflags rsi rsp 
write: eax r10 rbp rbx rdi rdx rflags rsp 
--------------------------------------------------------------------------------
000a1e90: CLP; push rbx ; mov rbx, rdi ; sub rsp, 0xd0 ; test al, al ; mov qword ptr [rsp + 0x30], rdx ; mov qword ptr [rsp + 0x38], rcx ; mov qword ptr [rsp + 0x40], r8 ; mov qword ptr [rsp + 0x48], r9 ; je 0xa1eea
read: al r8 r9 rbx rcx rdi rdx rflags rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
000a2060: CLP; push rbp ; mov r10, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov eax, dword ptr [rdi] ; and eax, 0x8000 ; jne 0xa20d2
read: eax rbp rbx rdi rflags rsi rsp 
write: eax r10 rbx rflags rsp 
--------------------------------------------------------------------------------
000a21b0: CLP; sub rsp, 0xd8 ; test al, al ; mov qword ptr [rsp + 0x30], rdx ; mov qword ptr [rsp + 0x38], rcx ; mov qword ptr [rsp + 0x40], r8 ; mov qword ptr [rsp + 0x48], r9 ; je 0xa2206
read: al r8 r9 rcx rdx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000a2250: CLP; push r13 ; lea r8, [rip + 0x2c5d43] ; mov r13, rdi ; push r12 ; mov r12, rdx ; xor edx, edx ; push rbp ; mov rbp, rsi ; mov esi, 0x8000 ; push rbx ; sub rsp, 0x248 ; lea rcx, [rsp + 0xf0] ; mov rdi, rsp ; mov qword ptr [rsp + 0x88], 0 ; call 0x79c0c
read: edx r12 r13 rbp rbx rdi rdx rip rsi rsp 
write: edx esi r12 r13 r8 rbp rcx rdi rflags rsp 
--------------------------------------------------------------------------------
000a22f0: CLP; push r15 ; lea rax, [rip + 0x2c972f] ; push r14 ; mov r14, rdi ; push r13 ; push r12 ; push rbp ; push rbx ; mov rbx, rcx ; sub rsp, 0x88 ; test rcx, rcx ; cmove rbx, rax ; mov eax, dword ptr [rbx] ; test eax, eax ; js 0xa247c
read: eax r12 r13 r14 r15 rax rbp rbx rcx rdi rflags rsp 
write: eax r14 rax rbx rflags rsp 
--------------------------------------------------------------------------------
000a2590: CLP; lea rax, [rip + 0x2c9499] ; sub rsp, 8 ; test rdx, rdx ; movzx esi, si ; cmovne rax, rdx ; mov rdx, rax ; call 0x96b8c
read: rax rdx rflags rip rsp si 
write: esi rax rdx rflags rsp 
--------------------------------------------------------------------------------
000a25c0: CLP; push r14 ; movabs rcx, 0x1845c8a0ce512957 ; push r13 ; push r12 ; push rbp ; mov rbp, rdx ; push rbx ; mov rdi, qword ptr [rdi] ; mov rax, rdi ; imul rcx ; mov rax, rdi ; sar rax, 0x3f ; mov rcx, rdx ; sar rcx, 0xd ; sub rcx, rax
read: r12 r13 r14 rax rbp rbx rcx rdi rdx rsp 
write: rax rbp rcx rdi rdx rflags rsp 
--------------------------------------------------------------------------------
000a29c0: CLP; test rdi, rdi ; je 0xa2a9c
read: rdi rflags 
write: rflags 
--------------------------------------------------------------------------------
000a2ac0: CLP; sub rsp, 8 ; mov edx, 0x1a ; call 0xa29bc
read: rip rsp 
write: edx rflags rsp 
--------------------------------------------------------------------------------
000a2ae0: CLP; lea rsi, [rip + 0x2c8f55] ; sub rsp, 8 ; mov edx, 0x72 ; call 0xa29bc
read: rip rsp 
write: edx rflags rsi rsp 
--------------------------------------------------------------------------------
000a2b10: CLP; sub rsp, 0x18 ; mov edi, 2 ; mov rsi, rsp ; call 0xf0e6c
read: rip rsp 
write: edi rflags rsi rsp 
--------------------------------------------------------------------------------
000a2b70: CLP; sub rsp, 8 ; call 0xa2c5c
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000a2ba0: CLP; push rbx ; mov rbx, rsi ; sub rsp, 0x40 ; mov rsi, rsp ; call 0xa2c3c
read: rbx rip rsi rsp 
write: rbx rflags rsi rsp 
--------------------------------------------------------------------------------
000a2bd0: CLP; mov qword ptr [rsp - 0x18], rdi ; fild qword ptr [rsp - 0x18] ; mov qword ptr [rsp - 0x18], rsi ; fild qword ptr [rsp - 0x18] ; fsubp st(1) ; fstp qword ptr [rsp - 0x10] ; movsd xmm0, qword ptr [rsp - 0x10] ; ret
read: rdi rsi st1 
write: fpsw xmm0 
--------------------------------------------------------------------------------
000a2c00: CLP; sub rsp, 8 ; mov rdx, rsi ; xor esi, esi ; call 0xa47ac
read: esi rip rsi rsp 
write: esi rdx rflags rsp 
--------------------------------------------------------------------------------
000a2c20: CLP; lea rdx, [rip + 0x2cb8d5] ; sub rsp, 8 ; xor esi, esi ; call 0xa47ac
read: esi rip rsp 
write: esi rdx rflags rsp 
--------------------------------------------------------------------------------
000a2c40: CLP; sub rsp, 8 ; mov rdx, rsi ; mov esi, 1 ; call 0xa47ac
read: rip rsi rsp 
write: esi rdx rflags rsp 
--------------------------------------------------------------------------------
000a2c60: CLP; lea rdx, [rip + 0x2cb895] ; sub rsp, 8 ; mov esi, 1 ; call 0xa47ac
read: rip rsp 
write: esi rdx rflags rsp 
--------------------------------------------------------------------------------
000a2c90: CLP; push r12 ; xor eax, eax ; mov r10d, 0x51eb851f ; movsxd r12, edx ; movsxd r8, r8d ; movsxd rcx, ecx ; push rbp ; mov rbp, rdi ; sar rbp, 2 ; push rbx ; add ebp, 0x1db ; mov ebx, r9d ; test dil, 3 ; sete al ; sar ebx, 2
read: dil eax ebp ebx ecx edx r12 r8d r9d rbp rbx rdi rflags rsp 
write: al eax ebp ebx r10d r12 r8 rbp rcx rflags rsp 
--------------------------------------------------------------------------------
000a2db0: CLP; push r15 ; push r14 ; mov r14, rdx ; push r13 ; mov r13, rdi ; push r12 ; mov r12, rsi ; mov rsi, rdx ; mov rdi, r12 ; push rbp ; push rbx ; sub rsp, 8 ; call r13
read: r12 r13 r14 r15 rbp rbx rdi rdx rsi rsp 
write: r12 r13 r14 rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000a2e80: CLP; push rbx ; mov rbx, r9 ; sub rsp, 0x20 ; mov rax, qword ptr [rsp + 0x30] ; test rax, rax ; je 0xa2ed9
read: r9 rax rbx rflags rsp 
write: rax rbx rflags rsp 
--------------------------------------------------------------------------------
000a2f40: CLP; push r15 ; mov ecx, 0x2aaaaaab ; xor r8d, r8d ; push r14 ; push r13 ; mov r13, rdi ; push r12 ; push rbp ; push rbx ; sub rsp, 0x138 ; mov eax, dword ptr [rdi] ; mov qword ptr [rsp + 0x38], rsi ; mov esi, dword ptr [r13 + 0x10] ; mov qword ptr [rsp + 0x68], rdx ; mov dword ptr [rsp + 0x5c], eax
read: eax r12 r13 r14 r15 r8d rbp rbx rdi rdx rsi rsp 
write: eax ecx esi r13 r8d rflags rsp 
--------------------------------------------------------------------------------
000a3460: CLP; push rbx ; mov rbx, rdi ; call 0xa46dc
read: rbx rdi rip rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
000a3490: CLP; lea rax, [rip + 0x90f2d] ; sub rsp, 0x28 ; lea rdx, [rip + 0x90f27] ; mov dword ptr [rsp + 0xc], 1 ; mov dword ptr [rsp + 8], 0x3ae75f6 ; mov ecx, 0x5f ; mov qword ptr [rsp], rax ; mov eax, 0x50e3a8 ; shl rax, 4 ; add rdx, 1 ; add rcx, rax ; mov rax, rcx ; and eax, 0xf0000000 ; shr rax, 0x18 ; xor rax, rcx
read: eax rax rcx rdx rsp 
write: eax ecx rax rcx rdx rflags rsp 
--------------------------------------------------------------------------------
000a3550: CLP; lea rax, [rip + 0x90e6d] ; sub rsp, 0x28 ; lea rdx, [rip + 0x90e67] ; mov dword ptr [rsp + 0xc], 1 ; mov dword ptr [rsp + 8], 0x3ae75f6 ; mov ecx, 0x5f ; mov qword ptr [rsp], rax ; mov eax, 0x50e3a8 ; shl rax, 4 ; add rdx, 1 ; add rcx, rax ; mov rax, rcx ; and eax, 0xf0000000 ; shr rax, 0x18 ; xor rax, rcx
read: eax rax rcx rdx rsp 
write: eax ecx rax rcx rdx rflags rsp 
--------------------------------------------------------------------------------
000a3610: CLP; mov eax, 0xa4 ; syscall ; cmp rax, -0xfff ; jae 0xa3620
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000a3640: CLP; push rbx ; mov rbx, rsi ; sub rsp, 0xd0 ; test rdi, rdi ; je 0xa376c
read: rbx rdi rflags rsi rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
000a37b0: CLP; mov r8d, 0x3b ; cmp edi, 0x3b ; mov eax, edi ; cmova eax, r8d ; mov ecx, 0x18 ; cmp edx, 0x18 ; cmovbe ecx, edx ; mov edx, 0x3c ; imul ecx, ecx, 0xe10 ; add eax, ecx ; cmp esi, 0x3b ; cmova esi, r8d ; imul esi, edx ; add eax, esi ; ret
read: eax ecx edi edx esi r8d rflags 
write: eax ecx edx esi r8d rflags 
--------------------------------------------------------------------------------
000a37f0: CLP; push rbp ; cmp esi, -1 ; push rbx ; je 0xa3a34
read: esi rbp rbx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000a3ad0: CLP; push rbp ; xor ecx, ecx ; push rbx ; sub rsp, 8 ; mov rax, qword ptr [rip + 0x2c8015] ; cmp rax, qword ptr [rip + 0x2c803e] ; mov rdx, qword ptr [rip + 0x2c53d7] ; mov rdi, qword ptr [rip + 0x2c7fe8] ; mov rbp, qword ptr [rip + 0x2c8011] ; setne cl ; neg rax ; mov dword ptr [rdx], ecx ; mov rdx, qword ptr [rip + 0x2c5342] ; mov qword ptr [rdx], rax ; mov rax, qword ptr [rip + 0x2c5330]
read: ecx rax rbp rbx rflags rsp 
write: cl ecx rax rbp rdi rdx rflags rsp 
--------------------------------------------------------------------------------
000a3b60: CLP; push r14 ; push r13 ; mov r13, rdi ; push r12 ; push rbp ; push rbx ; call 0x856dc
read: r12 r13 r14 rbp rbx rdi rip rsp 
write: r13 rsp 
--------------------------------------------------------------------------------
000a3c30: CLP; push rbp ; xor eax, eax ; mov ecx, 0xc ; mov rbp, rsp ; push r15 ; mov r15, rdi ; push r14 ; push r13 ; lea r13, [rip + 0x2c7e91] ; push r12 ; mov rdi, r13 ; lea r12, [rbp - 0x3c] ; push rbx ; sub rsp, 0x68 ; rep stosq qword ptr [rdi], rax
read: eax r12 r13 r14 r15 rax rbp rbx rcx rdi rflags rsp 
write: eax ecx r12 r13 r15 rbp rcx rdi rflags rsp 
--------------------------------------------------------------------------------
000a43a0: CLP; push rbp ; mov ebp, esi ; push rbx ; sub rsp, 8 ; mov r8d, dword ptr [rip + 0x2c7719] ; test r8d, r8d ; je 0xa43bc
read: esi r8d rbp rbx rflags rsp 
write: ebp r8d rflags rsp 
--------------------------------------------------------------------------------
000a4580: CLP; sub rsp, 8 ; mov esi, 1 ; xor eax, eax ; cmp dword ptr [rip + 0x2ca1de], 0 ; je 0xa45a0
read: eax rflags rsp 
write: eax esi rflags rsp 
--------------------------------------------------------------------------------
000a4620: CLP; push r12 ; mov r12, rdi ; lea rdi, [rip + 0x2c74b0] ; push rbp ; mov ebp, edx ; push rbx ; mov eax, dword ptr [rsi + 0x14] ; mov rbx, rsi ; lea esi, [rax + 0x76c] ; call 0xa37ec
read: edx r12 rbp rbx rdi rip rsi rsp 
write: eax ebp esi r12 rbx rdi rsp 
--------------------------------------------------------------------------------
000a46e0: CLP; sub rsp, 8 ; mov esi, 1 ; xor eax, eax ; cmp dword ptr [rip + 0x2ca07e], 0 ; je 0xa4700
read: eax rflags rsp 
write: eax esi rflags rsp 
--------------------------------------------------------------------------------
000a47b0: CLP; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 0x10 ; test rdi, rdi ; je 0xa498c
read: r12 rbp rbx rdi rflags rsp 
write: rbp rflags rsp 
--------------------------------------------------------------------------------
000a49b0: CLP; mov rdx, qword ptr [rip + 0x2c71b5] ; lea rcx, [rdx + rdi] ; nop ; cmp byte ptr [rdx], 0 ; mov rax, rdx ; je 0xa49eb
read: rdx rflags 
write: rax rcx rdx rflags 
--------------------------------------------------------------------------------
000a4a00: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 0x118 ; test rdi, rdi ; mov r12d, dword ptr [rip + 0x2c9b1e] ; mov qword ptr [rsp + 8], rsi ; mov qword ptr [rsp + 0x10], rdx ; mov qword ptr [rsp + 0x48], 0 ; mov dword ptr [rip + 0x2c9b01], 0 ; je 0xa4d3c
read: r12 r13 r14 r15 rbp rbx rdi rdx rflags rsi rsp 
write: r12d rbx rflags rsp 
--------------------------------------------------------------------------------
000a5830: CLP; push r15 ; mov r15, rdx ; push r14 ; push r13 ; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rsi ; sub rsp, 0x28 ; mov qword ptr [rsp + 8], rcx ; call 0x856dc
read: r12 r13 r14 r15 rbp rbx rcx rdi rdx rip rsi rsp 
write: r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000a59f0: CLP; push r15 ; push r14 ; push r13 ; mov r13, rcx ; push r12 ; mov r12, rdx ; push rbp ; push rbx ; sub rsp, 0x28 ; test esi, esi ; mov qword ptr [rsp + 0x18], rdi ; je 0xa5c0c
read: esi r12 r13 r14 r15 rbp rbx rcx rdi rdx rflags rsp 
write: r12 r13 rflags rsp 
--------------------------------------------------------------------------------
000a60a0: CLP; mov eax, 0x24 ; syscall ; cmp rax, -0xfff ; jae 0xa60b0
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000a60d0: CLP; mov eax, 0x26 ; syscall ; cmp rax, -0xfff ; jae 0xa60e0
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000a6100: CLP; test rdi, rdi ; je 0xa612c
read: rdi rflags 
write: rflags 
--------------------------------------------------------------------------------
000a6150: CLP; test dil, 3 ; mov ecx, 0x16d ; jne 0xa618d
read: dil rflags 
write: ecx rflags 
--------------------------------------------------------------------------------
000a61a0: CLP; lea rdx, [rip + 0x2c5a05] ; lea rsi, [rip - 0x35b2] ; sub rsp, 8 ; mov dword ptr [rdi + 0x20], 0 ; call 0xa2f3c
read: rip rsp 
write: rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000a61d0: CLP; push rbx ; mov rbx, rdi ; sub rsp, 0x20 ; lea rdi, [rsp + 0x10] ; mov rsi, rsp ; call 0x1f38c
read: rbx rdi rip rsp 
write: rbx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000a6270: CLP; push rbp ; mov rbp, rsp ; push r15 ; push r14 ; mov r14d, 1 ; push r13 ; push r12 ; mov r12, rdi ; lea rdi, [rip + 0x8fe7f] ; push rbx ; mov rbx, rsi ; sub rsp, 0x148 ; call 0x3819c
read: r12 r13 r14 r15 rbp rbx rdi rip rsi rsp 
write: r12 r14d rbp rbx rdi rflags rsp 
--------------------------------------------------------------------------------
000a68a0: CLP; lea rsi, [rip + 0x2c5315] ; sub rsp, 8 ; call 0xa626c
read: rip rsp 
write: rflags rsi rsp 
--------------------------------------------------------------------------------
000a68f0: CLP; sub rsp, 8 ; mov rax, qword ptr [rip + 0x2c24c1] ; xor ecx, ecx ; mov r8, qword ptr fs:[rax] ; call 0xa69fc
read: ecx rip rsp 
write: ecx r8 rax rflags rsp 
--------------------------------------------------------------------------------
000a6920: CLP; movsxd r9, dword ptr [rdi + 0x10] ; mov eax, dword ptr [rdi + 0x14] ; xor edx, edx ; mov esi, 0x51eb851f ; push rbx ; lea ecx, [rax + 0x76c] ; cmp r9d, 1 ; setle dl ; sub ecx, edx ; lea r11d, [rcx + 3] ; test ecx, ecx ; cmovns r11d, ecx ; sub eax, 0x46 ; imul eax, eax, 0x16d ; mov r8d, r11d
read: eax ecx edx r11d r9d rbx rflags rsp 
write: dl eax ecx edx esi r11d r8d r9 rflags rsp 
--------------------------------------------------------------------------------
000a6a00: CLP; push r15 ; mov r15, rdx ; push r14 ; mov r14, rcx ; push r13 ; push r12 ; mov r12, rsi ; push rbp ; mov rbp, r8 ; push rbx ; sub rsp, 0xc8 ; mov rax, qword ptr [r8 + 0x10] ; test rcx, rcx ; mov qword ptr [rsp + 0x68], rdi ; mov qword ptr [rsp], rax
read: r12 r13 r14 r15 r8 rax rbp rbx rcx rdi rdx rsi rsp 
write: r12 r14 r15 rax rbp rflags rsp 
--------------------------------------------------------------------------------
000a9bc0: CLP; sub rsp, 8 ; mov r8, rcx ; xor ecx, ecx ; call 0xa69fc
read: ecx rcx rip rsp 
write: ecx r8 rflags rsp 
--------------------------------------------------------------------------------
000a9be0: CLP; sub rsp, 8 ; mov rax, qword ptr [rip + 0x2bf1d1] ; mov r8, qword ptr fs:[rax] ; call 0xabbdc
read: rip rsp 
write: r8 rax rflags rsp 
--------------------------------------------------------------------------------
000a9c10: CLP; sub rsp, 8 ; mov rax, qword ptr [rip + 0x2bf1a1] ; mov r8, qword ptr fs:[rax] ; call 0xadefc
read: rip rsp 
write: r8 rax rflags rsp 
--------------------------------------------------------------------------------
000a9c40: CLP; push r15 ; mov r11, rdi ; mov r10, rsi ; push r14 ; push r13 ; push r12 ; mov r12, r9 ; push rbp ; push rbx ; mov rbx, rdx ; sub rsp, 0xd8 ; mov rdi, qword ptr [r9 + 0x10] ; mov rax, qword ptr [rcx + 0x30] ; mov qword ptr [rsp + 0x20], rcx ; mov qword ptr [rsp + 0x38], r8
read: r12 r13 r14 r15 r8 r9 rbp rbx rcx rdi rdx rsi rsp 
write: r10 r11 r12 rax rbx rdi rflags rsp 
--------------------------------------------------------------------------------
000abbe0: CLP; sub rsp, 0x18 ; mov r9, r8 ; lea r8, [rsp + 0xf] ; mov byte ptr [rsp + 0xf], 0 ; call 0xa9c3c
read: r8 rip rsp 
write: r8 r9 rflags rsp 
--------------------------------------------------------------------------------
000abc10: CLP; push r13 ; mov r13, rsi ; push r12 ; mov r12, rcx ; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rdx ; sub rsp, 8 ; test rdx, rdx ; je 0xabc47
read: r12 r13 rbp rbx rcx rdi rdx rflags rsi rsp 
write: r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000abc60: CLP; push rbp ; mov r11, rdx ; mov rbp, rsp ; push r15 ; push r14 ; push r13 ; mov r13, rdi ; push r12 ; push rbx ; sub rsp, 0x118 ; mov edi, dword ptr [rcx + 8] ; mov qword ptr [rbp - 0xd8], rsi ; mov rax, qword ptr [rcx + 0x30] ; mov rsi, qword ptr [r9 + 0x10] ; mov qword ptr [rbp - 0xe8], rcx
read: r12 r13 r14 r15 rbp rbx rcx rdi rdx rsi rsp 
write: edi r11 r13 rax rbp rflags rsi rsp 
--------------------------------------------------------------------------------
000adf00: CLP; sub rsp, 0x18 ; mov r9, r8 ; lea r8, [rsp + 0xf] ; mov byte ptr [rsp + 0xf], 0 ; call 0xabc5c
read: r8 rip rsp 
write: r8 r9 rflags rsp 
--------------------------------------------------------------------------------
000adf30: CLP; cmp esi, 1 ; je 0xadf3c
read: esi rflags 
write: rflags 
--------------------------------------------------------------------------------
000adf80: CLP; push r14 ; mov ecx, dword ptr [rip + 0x2c07e4] ; push r13 ; test ecx, ecx ; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; jne 0xae01c
read: ecx r12 r13 r14 rbp rbx rdi rflags rsp 
write: ecx rbp rflags rsp 
--------------------------------------------------------------------------------
000ae1f0: CLP; push rbx ; mov rbx, rdi ; sub rsp, 0x10 ; mov rax, qword ptr [rsi + 0x28] ; test rax, rax ; je 0xae29c
read: rax rbx rdi rflags rsp 
write: rax rbx rflags rsp 
--------------------------------------------------------------------------------
000ae360: CLP; push rbx ; mov ebx, edi ; sub rsp, 0x10 ; mov rax, qword ptr [rsi + 0x28] ; test rax, rax ; je 0xae394
read: edi rax rbx rflags rsp 
write: ebx rax rflags rsp 
--------------------------------------------------------------------------------
000ae3e0: CLP; push r12 ; push rbp ; push rbx ; mov r12, qword ptr [rdi + 0x28] ; mov rbx, rdi ; test r12, r12 ; je 0xae461
read: r12 rbp rbx rdi rflags rsp 
write: r12 rbx rflags rsp 
--------------------------------------------------------------------------------
000ae4a0: CLP; push rbp ; mov ebp, edi ; push rbx ; sub rsp, 8 ; cmp ebp, 0x63 ; ja 0xae58c
read: ebp edi rbp rbx rflags rsp 
write: ebp rflags rsp 
--------------------------------------------------------------------------------
000ae5a0: CLP; push r13 ; mov r13d, edi ; push r12 ; push rbp ; push rbx ; sub rsp, 0x18 ; cmp r13d, 0x63 ; ja 0xae6eb
read: edi r12 r13 r13d rbp rbx rflags rsp 
write: r13d rflags rsp 
--------------------------------------------------------------------------------
000ae750: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; mov rbx, rsi ; sub rsp, 0x18 ; mov rax, qword ptr [rdi] ; mov qword ptr [rsp + 8], rdi ; mov qword ptr [rsp], rax ; mov rax, qword ptr [rsi + 0x350] ; mov r13d, dword ptr [rax] ; test r13d, r13d ; je 0xae8a6
read: r12 r13 r13d r14 r15 rax rbp rbx rdi rflags rsi rsp 
write: r13d rax rbx rflags rsp 
--------------------------------------------------------------------------------
000ae8c0: CLP; push rbx ; mov rbx, qword ptr [rdi + 0x28] ; test rbx, rbx ; je 0xae90c
read: rbx rflags rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
000ae920: CLP; push rbx ; mov rbx, rdi ; sub rsp, 0xd0 ; mov rdi, rsp ; mov dword ptr [rsp], 0 ; call 0xe39ec
read: rbx rdi rip rsp 
write: rbx rdi rflags rsp 
--------------------------------------------------------------------------------
000ae970: CLP; push rbx ; mov rbx, rdi ; sub rsp, 0xd0 ; mov rdi, rsp ; mov dword ptr [rsp], 0 ; call 0xe39ec
read: rbx rdi rip rsp 
write: rbx rdi rflags rsp 
--------------------------------------------------------------------------------
000ae9f0: CLP; push r12 ; mov r12d, esi ; push rbp ; mov ebp, edi ; push rbx ; sub rsp, 0x10 ; test sil, sil ; jne 0xaea0e
read: edi esi r12 rbp rbx rflags rsp sil 
write: ebp r12d rflags rsp 
--------------------------------------------------------------------------------
000aeb10: CLP; cmp byte ptr [rsi], 0 ; je 0xaeb46
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000aeb60: CLP; sub rsp, 8 ; mov rsi, rdi ; mov edi, 0xffffff9c ; call 0xaeb0c
read: rdi rip rsp 
write: edi rflags rsi rsp 
--------------------------------------------------------------------------------
000aeb80: CLP; test rdi, rdi ; je 0xaeba4
read: rdi rflags 
write: rflags 
--------------------------------------------------------------------------------
000aebc0: CLP; push r13 ; mov esi, 1 ; xor eax, eax ; push r12 ; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov r12, qword ptr [rip + 0x2ba289] ; mov r13d, dword ptr fs:[r12] ; cmp dword ptr [rip + 0x2bfb89], 0 ; je 0xaebf2
read: eax r12 r13 rbp rbx rdi rflags rsp 
write: eax esi r12 r13d rbx rflags rsp 
--------------------------------------------------------------------------------
000aecd0: CLP; push r15 ; push r14 ; push r13 ; push r12 ; mov r12, rsi ; mov esi, 1 ; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 0x18 ; mov rax, qword ptr [rip + 0x2ba174] ; mov qword ptr [rsp], rdx ; mov eax, dword ptr fs:[rax] ; mov dword ptr [rsp + 0xc], eax ; xor eax, eax
read: eax r12 r13 r14 r15 rbp rbx rdi rdx rsi rsp 
write: eax esi r12 rax rbx rflags rsp 
--------------------------------------------------------------------------------
000aee70: CLP; push rbx ; mov esi, 1 ; mov rbx, rdi ; xor eax, eax ; cmp dword ptr [rip + 0x2bf8ee], 0 ; je 0xaee8d
read: eax rbx rdi rflags rsp 
write: eax esi rbx rflags rsp 
--------------------------------------------------------------------------------
000aef20: CLP; push rbp ; xor eax, eax ; mov rbp, rsi ; mov esi, 1 ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; cmp dword ptr [rip + 0x2bf836], 0 ; je 0xaef45
read: eax rbp rbx rdi rflags rsi rsp 
write: eax esi rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000aefd0: CLP; mov rax, qword ptr [rdi + 0x20] ; ret
read: 
write: rax 
--------------------------------------------------------------------------------
000aefe0: CLP; sub rsp, 8 ; mov r8, rcx ; mov rcx, rdx ; mov rdx, rsi ; mov rsi, rdi ; mov edi, 0xffffff9c ; call 0xaf20c
read: rcx rdi rdx rip rsi rsp 
write: edi r8 rcx rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000af010: CLP; sub rsp, 8 ; mov rsi, qword ptr [rsi] ; mov rdi, qword ptr [rdi] ; add rsi, 0x13 ; add rdi, 0x13 ; call 0x850dc
read: rdi rip rsi rsp 
write: rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000af040: CLP; sub rsp, 8 ; mov rsi, qword ptr [rsi] ; mov rdi, qword ptr [rdi] ; add rsi, 0x13 ; add rdi, 0x13 ; call 0x852ac
read: rdi rip rsi rsp 
write: rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000af070: CLP; push r14 ; movsxd rdi, edi ; mov eax, 0x4e ; push r13 ; push r12 ; push rbp ; push rbx ; mov rbx, rsi ; syscall ; cmp rax, -0x1000 ; ja 0xaf0e6
read: edi r12 r13 r14 rax rbp rbx rflags rsi rsp 
write: eax rbx rdi rflags rsp 
--------------------------------------------------------------------------------
000af100: CLP; mov eax, dword ptr [rdi] ; ret
read: 
write: eax 
--------------------------------------------------------------------------------
000af110: CLP; push rbp ; mov esi, edi ; push rbx ; mov ebx, edi ; mov edi, 1 ; sub rsp, 0x98 ; mov rdx, rsp ; call 0xd63ec
read: edi rbp rbx rip rsp 
write: ebx edi esi rdx rflags rsp 
--------------------------------------------------------------------------------
000af1b0: CLP; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; xor ebx, ebx ; cmp qword ptr [rdi + 0x10], 0 ; mov r12, qword ptr [rdi + 8] ; je 0xaf1e3
read: ebx r12 rbp rbx rdi rflags rsp 
write: ebx r12 rbp rflags rsp 
--------------------------------------------------------------------------------
000af210: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; mov rbx, rcx ; sub rsp, 0x38 ; mov qword ptr [rsp + 0x18], rdx ; mov qword ptr [rsp + 0x20], r8 ; call 0xaeb0c
read: r12 r13 r14 r15 r8 rbp rbx rcx rdx rip rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
000af3f0: CLP; push r14 ; mov r14, rcx ; push r13 ; push r12 ; mov r12, rdx ; mov edx, 1 ; push rbp ; mov rbp, rsi ; xor esi, esi ; push rbx ; mov ebx, edi ; call 0xe35bc
read: edi esi r12 r13 r14 rbp rbx rcx rdx rip rsi rsp 
write: ebx edx esi r12 r14 rbp rflags rsp 
--------------------------------------------------------------------------------
000af440: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 0x38 ; lea rbp, [rsp + 0x20] ; mov rsi, rbp ; call 0x6c5bc
read: r12 r13 r14 r15 rbp rbx rdi rip rsp 
write: rbp rbx rflags rsi rsp 
--------------------------------------------------------------------------------
000af640: CLP; push rbp ; mov rbp, rsp ; push r15 ; push r14 ; mov r14, r9 ; push r13 ; push r12 ; mov r12, rdi ; mov edi, 0x45 ; push rbx ; mov rbx, rsi ; sub rsp, 0x78 ; mov dword ptr [rbp - 0x74], edx ; mov qword ptr [rbp - 0x80], rcx ; mov qword ptr [rbp - 0x88], r8
read: edx r12 r13 r14 r15 r8 r9 rbp rbx rcx rdi rsi rsp 
write: edi r12 r14 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000af9b0: CLP; push r15 ; mov r15, rcx ; push r14 ; push r13 ; push r12 ; mov r12, rdx ; push rbp ; mov ebp, esi ; push rbx ; sub rsp, 0x48 ; mov eax, dword ptr [rip + 0x2befa0] ; mov qword ptr [rsp + 0x18], rdi ; mov qword ptr [rsp + 0x20], r8 ; cmp eax, 0 ; jle 0xafc24
read: eax esi r12 r13 r14 r15 r8 rbp rbx rcx rdi rdx rflags rsp 
write: eax ebp r12 r15 rflags rsp 
--------------------------------------------------------------------------------
000afca0: CLP; push r13 ; mov eax, 1 ; mov r13d, esi ; push r12 ; mov r12, rdx ; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rcx ; sub rsp, 0x18 ; mov edx, dword ptr [rcx] ; test edx, edx ; cmovg eax, dword ptr [rcx] ; cdqe ; lea rdi, [rax*4]
read: eax edx esi r12 r13 rbp rbx rcx rdi rdx rflags rsp 
write: eax edx r12 r13d rax rbp rbx rdi rflags rsp 
--------------------------------------------------------------------------------
000afd60: CLP; push r13 ; push r12 ; mov r12d, esi ; push rbp ; mov rbp, rdi ; mov edi, 3 ; push rbx ; sub rsp, 0x18 ; call 0xb4c0c
read: esi r12 r13 rbp rbx rdi rip rsp 
write: edi r12d rbp rflags rsp 
--------------------------------------------------------------------------------
000afe60: CLP; mov eax, dword ptr [rip + 0x2be906] ; test eax, eax ; jne 0xafe8b
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000afed0: CLP; sub rsp, 8 ; mov esi, 1 ; xor eax, eax ; cmp dword ptr [rip + 0x2be88e], 0 ; je 0xafef0
read: eax rflags rsp 
write: eax esi rflags rsp 
--------------------------------------------------------------------------------
000affb0: CLP; push r13 ; mov esi, 1 ; xor eax, eax ; push r12 ; push rbp ; mov ebp, edi ; push rbx ; sub rsp, 0x18 ; cmp dword ptr [rip + 0x2be7a6], 0 ; je 0xaffd8
read: eax edi r12 r13 rbp rbx rflags rsp 
write: eax ebp esi rflags rsp 
--------------------------------------------------------------------------------
000b0150: CLP; push r13 ; mov esi, 1 ; xor eax, eax ; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 0x18 ; cmp dword ptr [rip + 0x2be605], 0 ; je 0xb0179
read: eax r12 r13 rbp rbx rdi rflags rsp 
write: eax esi rbp rflags rsp 
--------------------------------------------------------------------------------
000b02f0: CLP; push r15 ; mov r15, rdi ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 8 ; test rdi, rdi ; je 0xb0529
read: r12 r13 r14 r15 rbp rbx rdi rflags rsp 
write: r15 rflags rsp 
--------------------------------------------------------------------------------
000b0560: CLP; sub rsp, 0x18 ; mov esi, 1 ; xor eax, eax ; cmp dword ptr [rip + 0x2be1fe], 0 ; je 0xb0580
read: eax rflags rsp 
write: eax esi rflags rsp 
--------------------------------------------------------------------------------
000b0640: CLP; cmp qword ptr [rip + 0x2bb6cc], 0 ; je 0xb0716
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000b0720: CLP; push rbx ; mov r10, rsi ; mov r9, rdi ; mov rbx, rcx ; mov esi, 1 ; xor eax, eax ; sub rsp, 0x40 ; cmp dword ptr [rip + 0x2be034], 0 ; je 0xb074a
read: eax rbx rcx rdi rflags rsi rsp 
write: eax esi r10 r9 rbx rflags rsp 
--------------------------------------------------------------------------------
000b0830: CLP; push r15 ; push r14 ; push r13 ; mov r13, rcx ; push r12 ; mov r12, rdx ; push rbp ; mov ebp, edi ; push rbx ; mov rbx, rsi ; sub rsp, 0x38 ; mov eax, dword ptr [rip + 0x2be11d] ; mov qword ptr [rsp + 0x18], r8 ; cmp eax, 0 ; jle 0xb0a0c
read: eax edi r12 r13 r14 r15 r8 rbp rbx rcx rdx rflags rsi rsp 
write: eax ebp r12 r13 rbx rflags rsp 
--------------------------------------------------------------------------------
000b0ad0: CLP; push r15 ; push r14 ; push r13 ; mov r13, rcx ; push r12 ; mov r12, rdx ; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rsi ; sub rsp, 0x38 ; mov eax, dword ptr [rip + 0x2bde7c] ; mov qword ptr [rsp + 0x18], r8 ; cmp eax, 0 ; jle 0xb0cac
read: eax r12 r13 r14 r15 r8 rbp rbx rcx rdi rdx rflags rsi rsp 
write: eax r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000b0d70: CLP; push r15 ; mov r15, rdx ; push r14 ; mov r14, rdx ; push r13 ; lea r13, [rdx + rcx] ; push r12 ; mov r12, rsi ; push rbp ; mov rbp, r8 ; push rbx ; mov rbx, rdi ; sub rsp, 0x18 ; cmp rdx, rdi ; ja 0xb0d9f
read: r12 r13 r14 r15 r8 rbp rbx rdi rdx rflags rsi rsp 
write: r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000b1060: CLP; push r15 ; mov r15, r8 ; push r14 ; mov r14, rcx ; push r13 ; push r12 ; mov r12, rdx ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 0x18 ; mov eax, dword ptr [rdi] ; mov qword ptr [rsp], rsi ; and eax, 0x8000 ; jne 0xb10e1
read: eax r12 r13 r14 r15 r8 rbp rbx rcx rdi rdx rflags rsi rsp 
write: eax r12 r14 r15 rbp rflags rsp 
--------------------------------------------------------------------------------
000b12f0: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 0x38 ; lea rbp, [rsp + 0x20] ; mov rsi, rbp ; call 0x6c5bc
read: r12 r13 r14 r15 rbp rbx rdi rip rsp 
write: rbp rbx rflags rsi rsp 
--------------------------------------------------------------------------------
000b14f0: CLP; push rbp ; mov rbp, rsp ; push r12 ; push rbx ; mov rbx, rsi ; sub rsp, 0x60 ; test rsi, rsi ; je 0xb15ac
read: r12 rbp rbx rflags rsi rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000b15d0: CLP; test rdi, rdi ; je 0xb16cc
read: rdi rflags 
write: rflags 
--------------------------------------------------------------------------------
000b16f0: CLP; sub rsp, 8 ; mov esi, 1 ; xor eax, eax ; cmp dword ptr [rip + 0x2bd06e], 0 ; je 0xb1710
read: eax rflags rsp 
write: eax esi rflags rsp 
--------------------------------------------------------------------------------
000b17d0: CLP; push r13 ; mov esi, 1 ; xor eax, eax ; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 0x18 ; cmp dword ptr [rip + 0x2bcf85], 0 ; je 0xb17f9
read: eax r12 r13 rbp rbx rdi rflags rsp 
write: eax esi rbp rflags rsp 
--------------------------------------------------------------------------------
000b1970: CLP; push r13 ; mov esi, 1 ; xor eax, eax ; push r12 ; push rbp ; mov ebp, edi ; push rbx ; sub rsp, 0x18 ; cmp dword ptr [rip + 0x2bcde6], 0 ; je 0xb1998
read: eax edi r12 r13 rbp rbx rflags rsp 
write: eax ebp esi rflags rsp 
--------------------------------------------------------------------------------
000b1b10: CLP; sub rsp, 0x18 ; mov esi, 1 ; xor eax, eax ; cmp dword ptr [rip + 0x2bcc4e], 0 ; je 0xb1b30
read: eax rflags rsp 
write: eax esi rflags rsp 
--------------------------------------------------------------------------------
000b1bf0: CLP; cmp qword ptr [rip + 0x2ba28c], 0 ; je 0xb1cc6
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000b1cd0: CLP; push rbx ; mov r10, rsi ; mov r9, rdi ; mov rbx, rcx ; mov esi, 1 ; xor eax, eax ; sub rsp, 0x40 ; cmp dword ptr [rip + 0x2bca84], 0 ; je 0xb1cfa
read: eax rbx rcx rdi rflags rsi rsp 
write: eax esi r10 r9 rbx rflags rsp 
--------------------------------------------------------------------------------
000b1de0: CLP; push r15 ; push r14 ; push r13 ; mov r13, rcx ; push r12 ; mov r12, rdx ; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rsi ; sub rsp, 0x38 ; mov eax, dword ptr [rip + 0x2bcb4c] ; mov qword ptr [rsp + 0x18], r8 ; cmp eax, 0 ; jle 0xb1fbc
read: eax r12 r13 r14 r15 r8 rbp rbx rcx rdi rdx rflags rsi rsp 
write: eax r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000b2080: CLP; push r15 ; push r14 ; push r13 ; mov r13, rcx ; push r12 ; mov r12, rdx ; push rbp ; mov ebp, edi ; push rbx ; mov rbx, rsi ; sub rsp, 0x38 ; mov eax, dword ptr [rip + 0x2bc8ad] ; mov qword ptr [rsp + 0x18], r8 ; cmp eax, 0 ; jle 0xb225c
read: eax edi r12 r13 r14 r15 r8 rbp rbx rcx rdx rflags rsi rsp 
write: eax ebp r12 r13 rbx rflags rsp 
--------------------------------------------------------------------------------
000b2320: CLP; push r12 ; push rbp ; mov rbp, rsi ; mov esi, 0xa ; push rbx ; mov rbx, rdi ; sub rsp, 0x10 ; call 0x83a5c
read: r12 rbp rbx rdi rip rsi rsp 
write: esi rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000b25e0: CLP; push r15 ; mov r15, r8 ; push r14 ; mov r14, rcx ; push r13 ; push r12 ; mov r12, rdx ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 0x18 ; mov eax, dword ptr [rdi] ; mov qword ptr [rsp], rsi ; and eax, 0x8000 ; jne 0xb2661
read: eax r12 r13 r14 r15 r8 rbp rbx rcx rdi rdx rflags rsi rsp 
write: eax r12 r14 r15 rbp rflags rsp 
--------------------------------------------------------------------------------
000b2850: CLP; mov eax, 0x3f ; syscall ; cmp rax, -0xfff ; jae 0xb2860
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000b2880: CLP; mov ecx, 0x64 ; mov rsi, rdi ; mov eax, ecx ; syscall ; cmp rax, -0x1000 ; mov rdx, rax ; jbe 0xb289d
read: ecx rax rdi rflags 
write: eax ecx rdx rflags rsi 
--------------------------------------------------------------------------------
000b28e0: CLP; mov r8d, dword ptr [rip + 0x2bbe89] ; mov rsi, rdi ; test r8d, r8d ; jne 0xb291c
read: r8d rdi rflags 
write: r8d rflags rsi 
--------------------------------------------------------------------------------
000b2980: CLP; mov r9d, dword ptr [rip + 0x2bbde9] ; test r9d, r9d ; jne 0xb29b6
read: r9d rflags 
write: r9d rflags 
--------------------------------------------------------------------------------
000b2a30: CLP; sub rsp, 8 ; mov rcx, rdx ; mov edx, esi ; mov rsi, rdi ; mov edi, 0xffffffff ; call 0xb2a5c
read: esi rdi rdx rip rsp 
write: edi edx rcx rflags rsi rsp 
--------------------------------------------------------------------------------
000b2a60: CLP; mov r10, rcx ; mov eax, 0x3d ; syscall ; cmp rax, -0xfff ; jae 0xb2a73
read: rax rcx rflags 
write: eax r10 rflags 
--------------------------------------------------------------------------------
000b2a90: CLP; mov eax, dword ptr [rip + 0x2bbcda] ; test eax, eax ; jne 0xb2ac5
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000b2b40: CLP; mov eax, 0x25 ; syscall ; cmp rax, -0xfff ; jae 0xb2b50
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000b2b70: CLP; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x1b8 ; test edi, edi ; je 0xb2cf6
read: edi r12 r13 rbp rbx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000b2d40: CLP; cmp dword ptr [rip + 0x2bba29], 0 ; jne 0xb2d5d
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000b2d4d: CLP; mov eax, 0x22 ; syscall ; cmp rax, -0xfff ; jae 0xb2d95
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000b2db0: CLP; cmp dword ptr [rip + 0x2bb9b9], 0 ; jne 0xb2dcd
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000b2dbd: CLP; mov eax, 0x23 ; syscall ; cmp rax, -0xfff ; jae 0xb2e05
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000b2e20: CLP; push rbp ; mov rbp, rsp ; push r14 ; push r13 ; push r12 ; push rbx ; mov rbx, qword ptr [rip + 0x2bb722] ; test rbx, rbx ; je 0xb30e4
read: r12 r13 r14 rbp rbx rflags rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000b3150: CLP; pop rdi ; mov esi, dword ptr fs:[0x2d4] ; mov ecx, 0x80000000 ; mov edx, esi ; neg edx ; cmove edx, ecx ; mov dword ptr fs:[0x2d4], edx ; mov eax, 0x3a ; syscall ; push rdi ; test rax, rax ; je 0xb3182
read: ecx edx esi rax rdi rflags rsp 
write: eax ecx edx esi rdi rflags rsp 
--------------------------------------------------------------------------------
000b31a0: CLP; movsxd rdx, edi ; mov r10, qword ptr [rip + 0x2b5cba] ; mov r9d, 0xe7 ; mov r8d, 0x3c ; jmp 0xb31cd
read: edi 
write: r10 r8d r9d rdx 
--------------------------------------------------------------------------------
000b3200: CLP; mov eax, 0x3b ; syscall ; cmp rax, -0x1000 ; ja 0xb3211
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000b3230: CLP; mov eax, edi ; shr eax, 0x1f ; test al, al ; jne 0xb32dc
read: al eax edi rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000b3310: CLP; sub rsp, 8 ; mov rax, qword ptr [rip + 0x2b5b89] ; mov rdx, qword ptr [rax] ; call 0xb31fc
read: rip rsp 
write: rax rdx rflags rsp 
--------------------------------------------------------------------------------
000b3330: CLP; push r15 ; push r14 ; push r13 ; push r12 ; mov r12, rdi ; push rbp ; push rbx ; sub rsp, 0x2068 ; test rsi, rsi ; lea rax, [rsp + 0x20a0] ; mov qword ptr [rsp + 0x2040], rdx ; mov qword ptr [rsp + 0x2048], rcx ; mov qword ptr [rsp + 0x2050], r8 ; mov qword ptr [rsp + 0x2058], r9 ; mov qword ptr [rsp + 0x20], rax
read: r12 r13 r14 r15 r8 r9 rax rbp rbx rcx rdi rdx rsi rsp 
write: r12 rax rflags rsp 
--------------------------------------------------------------------------------
000b34f0: CLP; push r15 ; push r14 ; push r13 ; push r12 ; mov r12, rdi ; push rbp ; push rbx ; sub rsp, 0x2068 ; test rsi, rsi ; lea rax, [rsp + 0x20a0] ; mov qword ptr [rsp + 0x2040], rdx ; mov qword ptr [rsp + 0x2048], rcx ; mov qword ptr [rsp + 0x2050], r8 ; mov qword ptr [rsp + 0x2058], r9 ; mov qword ptr [rsp + 0x20], rax
read: r12 r13 r14 r15 r8 r9 rax rbp rbx rcx rdi rdx rsi rsp 
write: r12 rax rflags rsp 
--------------------------------------------------------------------------------
000b36a0: CLP; sub rsp, 8 ; mov rax, qword ptr [rip + 0x2b57f9] ; mov rdx, qword ptr [rax] ; call 0xb385c
read: rip rsp 
write: rax rdx rflags rsp 
--------------------------------------------------------------------------------
000b36c0: CLP; push r15 ; push r14 ; push r13 ; push r12 ; mov r12, rdi ; push rbp ; push rbx ; sub rsp, 0x2068 ; test rsi, rsi ; lea rax, [rsp + 0x20a0] ; mov qword ptr [rsp + 0x2040], rdx ; mov qword ptr [rsp + 0x2048], rcx ; mov qword ptr [rsp + 0x2050], r8 ; mov qword ptr [rsp + 0x2058], r9 ; mov qword ptr [rsp + 0x20], rax
read: r12 r13 r14 r15 r8 r9 rax rbp rbx rcx rdi rdx rsi rsp 
write: r12 rax rflags rsp 
--------------------------------------------------------------------------------
000b3860: CLP; push rbp ; mov rbp, rsp ; push r15 ; mov r15, rdi ; push r14 ; push r13 ; push r12 ; push rbx ; sub rsp, 0x58 ; cmp byte ptr [rdi], 0 ; je 0xb38cc
read: r12 r13 r14 r15 rbp rbx rdi rflags rsp 
write: r15 rbp rflags rsp 
--------------------------------------------------------------------------------
000b3d70: CLP; mov edx, dword ptr fs:[0x2d4] ; cmp edx, 0 ; mov eax, edx ; jle 0xb3d81
read: edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
000b3db0: CLP; mov eax, 0x6e ; syscall ; ret
read: 
write: eax 
--------------------------------------------------------------------------------
000b3dc0: CLP; mov eax, 0x66 ; syscall ; ret
read: 
write: eax 
--------------------------------------------------------------------------------
000b3dd0: CLP; mov eax, 0x6b ; syscall ; ret
read: 
write: eax 
--------------------------------------------------------------------------------
000b3de0: CLP; mov eax, 0x68 ; syscall ; ret
read: 
write: eax 
--------------------------------------------------------------------------------
000b3df0: CLP; mov eax, 0x6c ; syscall ; ret
read: 
write: eax 
--------------------------------------------------------------------------------
000b3e00: CLP; mov eax, 0x73 ; syscall ; cmp rax, -0xfff ; jae 0xb3e10
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000b3e30: CLP; mov eax, dword ptr [rip + 0x2ba936] ; test eax, eax ; jne 0xb3e5d
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000b3ea0: CLP; mov eax, dword ptr [rip + 0x2ba8c6] ; test eax, eax ; jne 0xb3ecd
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000b3f10: CLP; push rbp ; mov rbp, rsp ; push r14 ; mov r14d, 0x10 ; push r13 ; mov r13d, edi ; push r12 ; push rbx ; mov ebx, 0x10000 ; jmp 0xb3f2e
read: edi r12 r13 r14 rbp rbx rsp 
write: ebx r13d r14d rbp rsp 
--------------------------------------------------------------------------------
000b3fc0: CLP; mov eax, 0x79 ; syscall ; cmp rax, -0xfff ; jae 0xb3fd0
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000b3ff0: CLP; mov eax, 0x6d ; syscall ; cmp rax, -0xfff ; jae 0xb4000
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000b4020: CLP; mov eax, 0x6f ; syscall ; ret
read: 
write: eax 
--------------------------------------------------------------------------------
000b4030: CLP; sub rsp, 8 ; call 0xb3fbc
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000b4050: CLP; sub rsp, 8 ; xor esi, esi ; xor edi, edi ; call 0xb3fec
read: edi esi rip rsp 
write: edi esi rflags rsp 
--------------------------------------------------------------------------------
000b4070: CLP; mov eax, 0x7c ; syscall ; cmp rax, -0xfff ; jae 0xb4080
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000b40a0: CLP; mov eax, 0x70 ; syscall ; cmp rax, -0xfff ; jae 0xb40b0
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000b40d0: CLP; mov eax, 0x76 ; syscall ; cmp rax, -0xfff ; jae 0xb40e0
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000b4100: CLP; mov eax, 0x78 ; syscall ; cmp rax, -0xfff ; jae 0xb4110
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000b4130: CLP; mov eax, dword ptr [rip + 0x2ba636] ; test eax, eax ; jne 0xb4161
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000b41b0: CLP; mov eax, dword ptr [rip + 0x2ba5b6] ; test eax, eax ; jne 0xb41e1
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000b4230: CLP; push rbp ; mov rbp, rsp ; push r14 ; lea rdx, [rbp - 0x1540] ; push r13 ; push r12 ; push rbx ; sub rsp, 0x1590 ; test rdi, rdi ; je 0xb438c
read: r12 r13 r14 rbp rbx rdi rflags rsp 
write: rbp rdx rflags rsp 
--------------------------------------------------------------------------------
000b4500: CLP; test edi, edi ; js 0xb459c
read: edi rflags 
write: rflags 
--------------------------------------------------------------------------------
000b4660: CLP; test edi, edi ; js 0xb46fc
read: edi rflags 
write: rflags 
--------------------------------------------------------------------------------
000b47a0: CLP; test edi, edi ; js 0xb4804
read: edi rflags 
write: rflags 
--------------------------------------------------------------------------------
000b4850: CLP; test edi, edi ; js 0xb485c
read: edi rflags 
write: rflags 
--------------------------------------------------------------------------------
000b4880: CLP; push r12 ; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 0x90 ; cmp esi, 6 ; je 0xb495c
read: esi r12 rbp rbx rdi rflags rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
000b4b10: CLP; push rbp ; mov rbp, rsp ; push r15 ; push r14 ; mov r14, rdi ; lea rdi, [rip + 0x817af] ; push r13 ; push r12 ; push rbx ; sub rsp, 0x98 ; mov rax, qword ptr [rip + 0x2b432f] ; mov r13d, dword ptr fs:[rax] ; call 0x3898c
read: r12 r13 r14 r15 rbp rbx rdi rip rsp 
write: r13d r14 rax rbp rdi rflags rsp 
--------------------------------------------------------------------------------
000b4c10: CLP; push r12 ; push rbp ; push rbx ; mov ebx, edi ; lea eax, [rbx - 0xb9] ; sub rsp, 0x30 ; cmp eax, 0xe ; jbe 0xb4d5c
read: eax edi r12 rbp rbx rflags rsp 
write: eax ebx rflags rsp 
--------------------------------------------------------------------------------
000b5570: CLP; push r12 ; push rbp ; push rbx ; mov ebx, edi ; sub rsp, 0x90 ; cmp esi, 6 ; je 0xb5644
read: edi esi r12 rbp rbx rflags rsp 
write: ebx rflags rsp 
--------------------------------------------------------------------------------
000b5800: CLP; xor eax, eax ; and esi, 0x40 ; nop dword ptr [rax] ; movzx edx, byte ptr [rdi] ; test dl, dl ; je 0xb583d
read: dl eax esi rflags 
write: eax edx esi rflags 
--------------------------------------------------------------------------------
000b5890: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; mov rbx, rsi ; sub rsp, 0x18 ; mov qword ptr [rsp + 8], rdi ; mov qword ptr [rsp], rdx ; call 0x856dc
read: r12 r13 r14 r15 rbp rbx rdi rdx rip rsi rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
000b59b0: CLP; mov rdi, qword ptr [rdi] ; mov rsi, qword ptr [rsi] ; cmp rdi, rsi ; je 0xb59dc
read: rdi rflags rsi 
write: rdi rflags rsi 
--------------------------------------------------------------------------------
000b5a00: CLP; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 8 ; mov rdi, qword ptr [rdi + 8] ; test rdi, rdi ; je 0xb5a4f
read: rbp rbx rdi rflags rsp 
write: rbp rdi rflags rsp 
--------------------------------------------------------------------------------
000b5a60: CLP; movzx edx, byte ptr [rdi] ; xor eax, eax ; test dl, dl ; je 0xb5ad5
read: dl eax rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
000b5ae0: CLP; push rbp ; mov rbp, rsp ; push r15 ; push r14 ; mov r14, rcx ; push r13 ; mov r13, r9 ; push r12 ; mov r12d, edx ; mov r15d, r12d ; push rbx ; mov rbx, rdi ; sub rsp, 0x448 ; mov qword ptr [rbp - 0x400], rdi ; mov rdi, rsi
read: edx r12 r12d r13 r14 r15 r9 rbp rbx rcx rdi rsi rsp 
write: r12d r13 r14 r15d rbp rbx rdi rflags rsp 
--------------------------------------------------------------------------------
000b6340: CLP; push rbp ; mov rbp, rsp ; push r15 ; mov r15, rdi ; push r14 ; push r13 ; push r12 ; mov r12, rcx ; push rbx ; sub rsp, 0x208 ; test rdi, rdi ; mov qword ptr [rbp - 0x1a8], rdx ; sete dl ; test rcx, rcx ; sete al
read: r12 r13 r14 r15 rbp rbx rcx rdi rdx rflags rsp 
write: al dl r12 r15 rbp rflags rsp 
--------------------------------------------------------------------------------
000b81d0: CLP; call 0xb5a5c
read: rip rsp 
write: rsp 
--------------------------------------------------------------------------------
000b81f0: CLP; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov edx, dword ptr [rbx + 4] ; test edx, edx ; je 0xb8234
read: edx rbp rbx rdi rflags rsp 
write: edx rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000b8300: CLP; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; movzx edx, byte ptr [rbx + 1] ; test dl, dl ; je 0xb834c
read: dl rbp rbx rdi rflags rsp 
write: edx rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000b8420: CLP; push rbp ; mov rbp, rsp ; push r15 ; push r14 ; mov r14, rdi ; mov edi, r8d ; push r13 ; mov r13, rsi ; mov esi, r8d ; mov r15, r13 ; push r12 ; push rbx ; mov rbx, r14 ; sub rsp, 0x28f8 ; mov rax, qword ptr [rip + 0x2b096f]
read: r12 r13 r14 r15 r8d rbp rbx rdi rsi rsp 
write: edi esi r13 r14 r15 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000b9c30: CLP; push r15 ; mov r11, rsi ; mov esi, r8d ; push r14 ; mov r14, rdi ; mov edi, r8d ; push r13 ; mov r13d, ecx ; push r12 ; push rbp ; push rbx ; sub rsp, 0x8d8 ; mov rax, qword ptr [rip + 0x2af165] ; mov qword ptr [rsp + 8], rdx ; mov dword ptr [rsp + 0x14], r8d
read: ecx r12 r13 r14 r15 r8d rbp rbx rdi rdx rsi rsp 
write: edi esi r11 r13d r14 rax rflags rsp 
--------------------------------------------------------------------------------
000bb2d0: CLP; push rbp ; mov rbp, rsp ; push r15 ; push r14 ; push r13 ; mov r13d, edx ; push r12 ; push rbx ; sub rsp, 0x58 ; mov rax, qword ptr [rip + 0x2adad1] ; mov qword ptr [rbp - 0x48], rdi ; mov qword ptr [rbp - 0x50], rsi ; mov rax, qword ptr fs:[rax] ; mov rax, qword ptr [rax] ; cmp dword ptr [rax + 0xa8], 1
read: edx r12 r13 r14 r15 rbp rbx rdi rsi rsp 
write: r13d rax rbp rflags rsp 
--------------------------------------------------------------------------------
000bb670: CLP; mov r8d, dword ptr [rdi + 0x34] ; cmp dword ptr [rdi + 0x40], r8d ; cmovle r8d, dword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi + 0x2c] ; cmp r8d, eax ; jle 0xbb6b7
read: eax r8d rflags 
write: eax r8d rflags 
--------------------------------------------------------------------------------
000bb6d0: CLP; movsxd rax, dword ptr [rsi + 0x38] ; cmp dword ptr [rsi + 0x48], eax ; jle 0xbb724
read: eax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000bb800: CLP; cmp byte ptr [rsi + 0x30], 0x11 ; je 0xbb80c
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000bb820: CLP; push r15 ; movsxd r10, ecx ; shl r10, 4 ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x48 ; mov r15, qword ptr [rdi + 0x70] ; mov qword ptr [rsp], rdi ; mov dword ptr [rsp + 0xc], esi ; mov dword ptr [rsp + 0x34], ecx ; mov dword ptr [rsp + 8], r8d ; add r10, qword ptr [r15 + 0x30]
read: ecx esi r10 r12 r13 r14 r15 r8d rbp rbx rdi rsp 
write: r10 r15 rflags rsp 
--------------------------------------------------------------------------------
000bba40: CLP; movsxd rsi, esi ; mov rax, qword ptr [rdi + 0xa0] ; lea rsi, [rsi + rsi*4] ; lea rax, [rax + rsi*4] ; mov esi, dword ptr [rax + 8] ; cmp esi, r8d ; jg 0xbbaa4
read: esi r8d rflags 
write: esi rax rflags rsi 
--------------------------------------------------------------------------------
000bbab0: CLP; push r12 ; mov r12, rsi ; push rbp ; mov rbp, rdx ; push rbx ; mov rbx, rdi ; jmp 0xbbac7
read: r12 rbp rbx rdi rdx rsi rsp 
write: r12 rbp rbx rsp 
--------------------------------------------------------------------------------
000bbb20: CLP; push r12 ; mov r12, rsi ; push rbp ; mov rbp, rdx ; push rbx ; mov rbx, rdi ; jmp 0xbbb37
read: r12 rbp rbx rdi rdx rsi rsp 
write: r12 rbp rbx rsp 
--------------------------------------------------------------------------------
000bbb90: CLP; push r12 ; push rbp ; mov ebp, esi ; push rbx ; cmp dword ptr [rdi + 0x68], 1 ; mov rbx, rdi ; jle 0xbbbf0
read: esi r12 rbp rbx rdi rflags rsp 
write: ebp rbx rflags rsp 
--------------------------------------------------------------------------------
000bbc30: CLP; push rbp ; mov ebp, esi ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; movsxd rdx, dword ptr [rdi + 4] ; cmp dword ptr [rdi], edx ; je 0xbbc5c
read: edx esi rbp rbx rdi rflags rsp 
write: ebp rbx rdx rflags rsp 
--------------------------------------------------------------------------------
000bbc90: CLP; push r15 ; push r14 ; push r13 ; push r12 ; mov r12, rsi ; push rbp ; movzx ebp, dl ; push rbx ; mov rbx, rdi ; sub rsp, 0x28 ; mov rax, qword ptr [rdi + 0x10] ; mov rcx, qword ptr [rdi + 8] ; cmp rax, rcx ; jae 0xbbd83
read: dl r12 r13 r14 r15 rax rbp rbx rcx rdi rflags rsi rsp 
write: ebp r12 rax rbx rcx rflags rsp 
--------------------------------------------------------------------------------
000bbe70: CLP; push r13 ; mov r13d, edx ; push r12 ; mov r12d, esi ; push rbp ; movsxd rbp, esi ; shl rbp, 4 ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov rax, qword ptr [rdi] ; mov rsi, qword ptr [rax + rbp] ; mov rdx, qword ptr [rax + rbp + 8] ; call 0xbbc8c
read: edx esi r12 r13 rbp rbx rdi rip rsp 
write: r12d r13d rax rbp rbx rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000bbf20: CLP; push rbp ; mov ebp, esi ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov dword ptr [rdi], 1 ; mov dword ptr [rdi + 4], 1 ; mov edi, 4 ; call 0x1f3cc
read: esi rbp rbx rdi rip rsp 
write: ebp edi rbx rflags rsp 
--------------------------------------------------------------------------------
000bbf70: CLP; push r15 ; push r14 ; mov r14, rdi ; push r13 ; mov r13d, edx ; push r12 ; push rbp ; mov rbp, rsi ; push rbx ; sub rsp, 8 ; mov r15d, dword ptr [rsi + 0xc] ; mov dword ptr [rbp], edx ; mov dword ptr [rsi + 0x1c], 0 ; movsxd rdi, r15d ; mov dword ptr [rsi + 0x18], r15d
read: edx r12 r13 r14 r15 r15d rbp rbx rdi rsi rsp 
write: r13d r14 r15d rbp rdi rflags rsp 
--------------------------------------------------------------------------------
000bc080: CLP; push r15 ; mov r15, rdi ; push r14 ; push r13 ; push r12 ; mov r12, rsi ; push rbp ; xor ebp, ebp ; push rbx ; xor ebx, ebx ; sub rsp, 0x28 ; mov r8d, dword ptr [rsi + 4] ; mov r14, qword ptr [rdi + 0x70] ; test r8d, r8d ; jg 0xbc0be
read: ebp ebx r12 r13 r14 r15 r8d rbp rbx rdi rflags rsi rsp 
write: ebp ebx r12 r14 r15 r8d rflags rsp 
--------------------------------------------------------------------------------
000bc1f0: CLP; push r12 ; push rbp ; push rbx ; movzx eax, byte ptr [rsi + 0x30] ; movsxd r8, dword ptr [rsi + 0x38] ; cmp al, 0x10 ; ja 0xbc334
read: al r12 rbp rbx rflags rsp 
write: eax r8 rflags rsp 
--------------------------------------------------------------------------------
000bc430: CLP; push r15 ; push r14 ; mov r14, rdi ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x38 ; cmp dword ptr [rdi + 0x68], 0x10 ; jg 0xbc577
read: r12 r13 r14 r15 rbp rbx rdi rflags rsp 
write: r14 rflags rsp 
--------------------------------------------------------------------------------
000bc620: CLP; push r15 ; mov r15, rdi ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x78 ; cmp dword ptr [rdi + 0x68], 0x10 ; jg 0xbc9c3
read: r12 r13 r14 r15 rbp rbx rdi rflags rsp 
write: r15 rflags rsp 
--------------------------------------------------------------------------------
000bcc60: CLP; mov r9d, dword ptr [rdi + 0x34] ; cmp dword ptr [rdi + 0x40], r9d ; cmovle r9d, dword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi + 0x2c] ; cmp r9d, eax ; jle 0xbcce6
read: eax r9d rflags 
write: eax r9d rflags 
--------------------------------------------------------------------------------
000bcd00: CLP; push rbx ; mov rbx, rdi ; sub rsp, 0x10 ; mov eax, dword ptr [rdi + 0x34] ; cmp eax, 0x7fffffe ; ja 0xbcdd1
read: eax rbx rdi rflags rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
000bcde0: CLP; push r12 ; push rbp ; mov ebp, esi ; push rbx ; mov eax, dword ptr [rdi + 0x34] ; mov rbx, rdi ; movsxd r12, dword ptr [rdi + 0x90] ; cmp eax, esi ; jg 0xbce1c
read: eax esi r12 rbp rbx rdi rflags rsp 
write: eax ebp r12 rbx rflags rsp 
--------------------------------------------------------------------------------
000bce80: CLP; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 8 ; test esi, esi ; js 0xbcee4
read: esi rbp rbx rdi rflags rsp 
write: rbp rflags rsp 
--------------------------------------------------------------------------------
000bcf70: CLP; movsxd rax, edx ; mov r8d, edx ; mov rdx, qword ptr [rdi + 8] ; push rbx ; movzx ecx, byte ptr [rdx + rax] ; movzx eax, byte ptr [rsi + 8] ; cmp al, 3 ; je 0xbd054
read: al edx rbx rflags rsp 
write: eax ecx r8d rax rdx rflags rsp 
--------------------------------------------------------------------------------
000bd0a0: CLP; push rbx ; mov rbx, rdi ; mov rdi, qword ptr [rdi] ; call 0x1f46c
read: rbx rdi rip rsp 
write: rbx rdi rsp 
--------------------------------------------------------------------------------
000bd110: CLP; sub rsp, 8 ; mov eax, dword ptr [rdi + 8] ; and eax, 0x400ff ; cmp eax, 6 ; je 0xbd144
read: eax rflags rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
000bd160: CLP; lea rdi, [rsi + 0x28] ; sub rsp, 8 ; call 0xbd10c
read: rip rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
000bd180: CLP; push rbx ; mov rbx, rdi ; mov rdi, qword ptr [rdi + 0x20] ; call 0x1f46c
read: rbx rdi rip rsp 
write: rbx rdi rsp 
--------------------------------------------------------------------------------
000bd200: CLP; push rbx ; mov rbx, rdi ; mov rdi, qword ptr [rdi + 0x10] ; call 0x1f46c
read: rbx rdi rip rsp 
write: rbx rdi rsp 
--------------------------------------------------------------------------------
000bd250: CLP; push r15 ; push r14 ; push r13 ; mov r13, rdi ; push r12 ; push rbp ; push rbx ; sub rsp, 8 ; mov rax, qword ptr [rdi] ; test rax, rax ; je 0xbd2a0
read: r12 r13 r14 r15 rax rbp rbx rdi rflags rsp 
write: r13 rax rflags rsp 
--------------------------------------------------------------------------------
000bd430: CLP; push r15 ; mov r15, rdi ; push r14 ; xor r14d, r14d ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x18 ; mov r13d, dword ptr [rdi + 0xac] ; mov dword ptr [rsp + 0xc], 0 ; test r13d, r13d ; jle 0xbd501
read: r12 r13 r13d r14 r14d r15 rbp rbx rdi rflags rsp 
write: r13d r14d r15 rflags rsp 
--------------------------------------------------------------------------------
000bd530: CLP; push r12 ; test rdi, rdi ; push rbp ; mov rbp, rdi ; push rbx ; je 0xbd58b
read: r12 rbp rbx rdi rflags rsp 
write: rbp rflags rsp 
--------------------------------------------------------------------------------
000bd5a0: CLP; push r15 ; push r14 ; push r13 ; mov r13d, edx ; push r12 ; mov r12d, esi ; push rbp ; mov ebp, esi ; push rbx ; mov rbx, rdi ; sub rsp, 0x58 ; sub ebp, dword ptr [rdi + 0x28] ; js 0xbd777
read: ebp edx esi r12 r13 r14 r15 rbp rbx rdi rflags rsp 
write: ebp r12d r13d rbx rflags rsp 
--------------------------------------------------------------------------------
000bdc40: CLP; mov edx, dword ptr [rdi + 4] ; xor eax, eax ; cmp edx, dword ptr [rsi + 4] ; je 0xbdc4c
read: eax edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
000bdc90: CLP; test edi, edi ; jle 0xbdce4
read: edi rflags 
write: rflags 
--------------------------------------------------------------------------------
000bdcf0: CLP; test esi, esi ; js 0xbdd25
read: esi rflags 
write: rflags 
--------------------------------------------------------------------------------
000bdd30: CLP; movzx eax, byte ptr [rsi + 0x30] ; cmp al, 4 ; je 0xbdd9c
read: al rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000bddd0: CLP; movzx eax, byte ptr [rsi + 0x30] ; cmp al, 0xb ; je 0xbde24
read: al rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000bde40: CLP; mov r8d, edi ; xor eax, eax ; jmp 0xbde4f
read: eax edi 
write: eax r8d rflags 
--------------------------------------------------------------------------------
000bdec0: CLP; push r15 ; mov r15, rsi ; push r14 ; lea r14, [rdi + 0xa0] ; push r13 ; mov rsi, r14 ; mov r13d, ecx ; push r12 ; mov r12d, r9d ; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 0x28 ; mov ebp, dword ptr [rdi + 0x94] ; mov rax, qword ptr [rdi + 0x70]
read: ecx r12 r13 r14 r15 r9d rbp rbx rdi rsi rsp 
write: ebp r12d r13d r14 r15 rax rbx rflags rsi rsp 
--------------------------------------------------------------------------------
000bdff0: CLP; push r14 ; push r13 ; push r12 ; mov r12, rdx ; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 0x10 ; cmp dword ptr [rsi + 0x68], 1 ; mov ebp, dword ptr [rsi + 0x38] ; mov rdi, qword ptr [rsi + 0x10] ; mov r11d, dword ptr [rsi + 0x2c] ; je 0xbe07c
read: r12 r13 r14 rbp rbx rdi rdx rflags rsp 
write: ebp r11d r12 rbx rdi rflags rsp 
--------------------------------------------------------------------------------
000be270: CLP; push rbp ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; cmp byte ptr [rsi + 0x30], 0x10 ; je 0xbe2e4
read: rbp rbx rflags rsi rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
000be310: CLP; push rbx ; mov rbx, rdi ; sub rsp, 0x20 ; movsxd rax, dword ptr [rsi] ; cmp eax, 0xf ; je 0xbe388
read: eax rbx rdi rflags rsp 
write: rax rbx rflags rsp 
--------------------------------------------------------------------------------
000be3e0: CLP; push r14 ; push r13 ; lea r13, [rsi + 0x70] ; push r12 ; lea r12, [rsi + 0x80] ; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 0x10 ; mov rbp, qword ptr [rdi] ; lea r14, [rsp + 8] ; jmp 0xbe413
read: r12 r13 r14 rbp rbx rdi rsp 
write: r12 r13 r14 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000be4a0: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; mov rbx, rdx ; sub rsp, 0x28 ; test byte ptr [rsi + 0x38], 0x10 ; mov r13, qword ptr [rsi] ; mov qword ptr [rsp + 8], rdi ; mov r10, qword ptr [rdx + 8] ; je 0xbe5ec
read: r12 r13 r14 r15 rbp rbx rdi rdx rflags rsp 
write: r10 r13 rbx rflags rsp 
--------------------------------------------------------------------------------
000be6c0: CLP; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rsi ; sub rsp, 0x18 ; mov rdx, qword ptr [rsi + 8] ; mov dword ptr [rsp + 0xc], 0 ; test rdx, rdx ; je 0xbe6e3
read: rbp rbx rdi rdx rflags rsi rsp 
write: rbp rbx rdx rflags rsp 
--------------------------------------------------------------------------------
000be750: CLP; push rbp ; mov ebp, esi ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov eax, dword ptr [rdi] ; test eax, eax ; je 0xbe784
read: eax esi rbp rbx rdi rflags rsp 
write: eax ebp rbx rflags rsp 
--------------------------------------------------------------------------------
000be870: CLP; push r15 ; push r14 ; push r13 ; mov r13, rdi ; push r12 ; mov r12d, edx ; push rbp ; mov ebp, r8d ; push rbx ; mov ebx, esi ; sub rsp, 0x18 ; mov dword ptr [rsp + 0xc], ecx ; nop dword ptr [rax] ; mov rax, qword ptr [r13] ; movsxd r14, ebx
read: ebx ecx edx esi r12 r13 r14 r15 r8d rbp rbx rdi rsp 
write: ebp ebx r12d r13 r14 rax rflags rsp 
--------------------------------------------------------------------------------
000beb40: CLP; push r15 ; mov r15d, edx ; push r14 ; lea r14, [rsi + 8] ; push r13 ; mov r13d, r8d ; push r12 ; mov r12, rsi ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 0x18 ; mov dword ptr [rsp + 0xc], ecx ; jmp 0xbeb73
read: ecx edx r12 r13 r14 r15 r8d rbp rbx rdi rsi rsp 
write: r12 r13d r14 r15d rbp rflags rsp 
--------------------------------------------------------------------------------
000bec50: CLP; push r12 ; test rsi, rsi ; mov r12, rsi ; push rbp ; push rbx ; je 0xbedcc
read: r12 rbp rbx rflags rsi rsp 
write: r12 rflags rsp 
--------------------------------------------------------------------------------
000bee50: CLP; push r15 ; mov r15, rsi ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; movsxd rbx, edx ; shl rbx, 4 ; sub rsp, 0x48 ; mov rbp, rbx ; add rbp, qword ptr [rsi + 0x28] ; mov qword ptr [rsp + 0x10], rdi ; mov dword ptr [rsp + 0x18], edx ; mov dword ptr [rsp + 0x1c], ecx
read: ecx edx r12 r13 r14 r15 rbp rbx rdi rsi rsp 
write: r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000bf0d0: CLP; push r15 ; mov r15, rsi ; push r14 ; mov r14, rdi ; push r13 ; push r12 ; push rbp ; mov ebp, edx ; push rbx ; mov ebx, ecx ; sub rsp, 0x28 ; mov r12d, dword ptr [rsi + 4] ; mov dword ptr [rsp + 0x14], 0 ; movsxd rdi, r12d ; mov dword ptr [rsp + 0x10], r12d
read: ecx edx r12 r12d r13 r14 r15 rbp rbx rdi rsi rsp 
write: ebp ebx r12d r14 r15 rdi rflags rsp 
--------------------------------------------------------------------------------
000bf230: CLP; push r12 ; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; movsxd rdi, dword ptr [rsi + 4] ; mov dword ptr [rbx + 4], edi ; movsxd r12, dword ptr [rsi + 4] ; test r12d, r12d ; jle 0xbf284
read: edi r12 r12d rbp rbx rdi rflags rsi rsp 
write: r12 rbp rbx rdi rflags rsp 
--------------------------------------------------------------------------------
000bf2b0: CLP; push r15 ; push r14 ; mov r14, rdi ; push r13 ; mov r13, rdx ; push r12 ; mov r12, rsi ; push rbp ; push rbx ; sub rsp, 8 ; test rsi, rsi ; je 0xbf39c
read: r12 r13 r14 r15 rbp rbx rdi rdx rflags rsi rsp 
write: r12 r13 r14 rflags rsp 
--------------------------------------------------------------------------------
000bf480: CLP; push r15 ; push r14 ; mov r14, rdx ; mov edx, ecx ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x38 ; mov ecx, dword ptr [r14 + 4] ; mov qword ptr [rsp + 0x20], rdi ; test ecx, ecx ; je 0xbf797
read: ecx r12 r13 r14 r15 rbp rbx rdi rdx rflags rsp 
write: ecx edx r14 rflags rsp 
--------------------------------------------------------------------------------
000bf7e0: CLP; push r15 ; mov r15, rdx ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x18 ; mov edx, dword ptr [rdx + 4] ; mov qword ptr [rsp + 8], rdi ; cmp edx, 0 ; je 0xbf9e8
read: edx r12 r13 r14 r15 rbp rbx rdi rdx rflags rsp 
write: edx r15 rflags rsp 
--------------------------------------------------------------------------------
000bfa10: CLP; test ecx, ecx ; jle 0xbfadd
read: ecx rflags 
write: rflags 
--------------------------------------------------------------------------------
000bfaf0: CLP; push r15 ; push r14 ; push r13 ; mov r13, rdi ; push r12 ; mov r12d, edx ; push rbp ; mov rbp, rsi ; lea rsi, [rdi + 0xa0] ; push rbx ; sub rsp, 0x68 ; mov rax, qword ptr [rdi + 0x70] ; mov edi, dword ptr [rdi + 0x94] ; mov dword ptr [rsp + 0x38], ecx ; mov dword ptr [rsp + 0x3c], r8d
read: ecx edx r12 r13 r14 r15 r8d rbp rbx rdi rsi rsp 
write: edi r12d r13 rax rbp rflags rsi rsp 
--------------------------------------------------------------------------------
000bfda0: CLP; push r14 ; xor eax, eax ; push r13 ; push r12 ; mov r12, rsi ; push rbp ; push rbx ; sub rsp, 0x10 ; mov r10d, dword ptr [rsi + 4] ; test r10d, r10d ; je 0xbfed2
read: eax r10d r12 r13 r14 rbp rbx rflags rsi rsp 
write: eax r10d r12 rflags rsp 
--------------------------------------------------------------------------------
000bffb0: CLP; push r15 ; movsxd r15, esi ; shl r15, 4 ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x48 ; add r15, qword ptr [rdi + 0x38] ; mov qword ptr [rsp + 0x30], 0 ; mov qword ptr [rsp + 0x38], 0 ; mov dword ptr [rsp], esi ; mov qword ptr [rsp + 0x10], rdx ; mov qword ptr [rsp + 0x20], rcx
read: esi r12 r13 r14 r15 rbp rbx rcx rdx rsp 
write: r15 rflags rsp 
--------------------------------------------------------------------------------
000c01f0: CLP; push r12 ; mov r12, rdx ; push rbp ; mov rbp, rdi ; push rbx ; mov edx, dword ptr [rdi + 0x78] ; mov ebx, esi ; mov esi, ecx ; call 0xbce7c
read: ecx esi r12 rbp rbx rdi rdx rip rsp 
write: ebx edx esi r12 rbp rsp 
--------------------------------------------------------------------------------
000c02a0: CLP; push r12 ; push rbp ; push rbx ; mov eax, dword ptr [rdi] ; mov rbx, rdi ; lea ebp, [rax - 1] ; test ebp, ebp ; mov dword ptr [rdi], ebp ; js 0xc031b
read: ebp r12 rbp rbx rdi rflags rsp 
write: eax ebp rbx rflags rsp 
--------------------------------------------------------------------------------
000c0340: CLP; push r14 ; push r13 ; mov r13, rdi ; push r12 ; mov r12, rcx ; push rbp ; mov rbp, r9 ; push rbx ; mov rbx, rsi ; sub rsp, 0x10 ; test qword ptr [rsp + 0x40], 0x400000 ; je 0xc0381
read: r12 r13 r14 r9 rbp rbx rcx rdi rflags rsi rsp 
write: r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000c0b60: CLP; push r15 ; mov r15, rsi ; mov esi, 1 ; push r14 ; push r13 ; mov r13d, r8d ; push r12 ; mov r12, rdi ; mov edi, 0x20 ; push rbp ; mov rbp, rcx ; push rbx ; sub rsp, 0x58 ; mov qword ptr [rsp + 0x10], rdx ; mov qword ptr [rsp + 0x18], r9
read: r12 r13 r14 r15 r8d r9 rbp rbx rcx rdi rdx rsi rsp 
write: edi esi r12 r13d r15 rbp rflags rsp 
--------------------------------------------------------------------------------
000c0da0: CLP; push rbp ; mov rbp, rsp ; push r15 ; push r14 ; xor r14d, r14d ; push r13 ; mov r13, rcx ; push r12 ; push rbx ; sub rsp, 0x158 ; mov r12, qword ptr [rdi] ; mov qword ptr [rbp - 0x158], rdi ; mov qword ptr [rbp - 0x148], rsi ; mov qword ptr [rbp - 0x150], rdx ; cmp dword ptr [r12 + 0xa4], 1
read: r12 r13 r14 r14d r15 rbp rbx rcx rdi rdx rsi rsp 
write: r12 r13 r14d rbp rflags rsp 
--------------------------------------------------------------------------------
000c1420: CLP; push r15 ; movsxd rdx, edx ; shl rdx, 4 ; push r14 ; push r13 ; lea r13, [rdi + rdx] ; push r12 ; push rbp ; push rbx ; sub rsp, 0x58 ; movzx edi, byte ptr [r13 + 8] ; cmp dil, 7 ; je 0xc1e35
read: dil edx r12 r13 r14 r15 rbp rbx rdx rflags rsp 
write: edi r13 rdx rflags rsp 
--------------------------------------------------------------------------------
000c1f30: CLP; push r15 ; push r14 ; push r13 ; mov r13, rdi ; push r12 ; mov r12d, edx ; push rbp ; push rbx ; mov ebx, ecx ; sub rsp, 0xa8 ; mov rax, qword ptr [rdi + 0x70] ; movsxd rbp, dword ptr [rsi + 4] ; mov dword ptr [rsp + 0x78], 0 ; mov qword ptr [rsp + 0x58], rsi ; mov dword ptr [rsp + 0x6c], r8d
read: ecx edx r12 r13 r14 r15 r8d rbp rbx rdi rsi rsp 
write: ebx r12d r13 rax rbp rflags rsp 
--------------------------------------------------------------------------------
000c2660: CLP; push rbp ; mov rbp, rsp ; push r15 ; mov r15, rsi ; push r14 ; push r13 ; push r12 ; push rbx ; sub rsp, 0xa8 ; mov rax, qword ptr [rdi] ; test r8d, r8d ; mov qword ptr [rbp - 0xa0], rdx ; mov qword ptr [rbp - 0x70], rcx ; mov dword ptr [rbp - 0x40], 0 ; mov dword ptr [rbp - 0x3c], 2
read: r12 r13 r14 r15 r8d rbp rbx rcx rdx rsi rsp 
write: r15 rax rbp rflags rsp 
--------------------------------------------------------------------------------
000c2e80: CLP; push r15 ; mov r9d, r8d ; push r14 ; mov r14, rsi ; lea rsi, [rdx + 8] ; push r13 ; mov r13d, ecx ; push r12 ; mov r12d, r8d ; mov r8d, r13d ; push rbp ; mov rbp, rdx ; push rbx ; mov rbx, rdi ; sub rsp, 0x18
read: ecx r12 r13 r13d r14 r15 r8d rbp rbx rdi rdx rsi rsp 
write: r12d r13d r14 r8d r9d rbp rbx rflags rsi rsp 
--------------------------------------------------------------------------------
000c3040: CLP; push r15 ; mov rax, rsi ; mov r15, rdi ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0xc8 ; mov ebx, dword ptr [rax + 4] ; mov qword ptr [rsp + 0x58], rsi ; mov rsi, qword ptr [rdi + 0x70] ; test ebx, ebx ; mov qword ptr [rsp + 0x60], rsi ; mov esi, dword ptr [rdi + 0x38]
read: ebx r12 r13 r14 r15 rbp rbx rdi rsi rsp 
write: ebx esi r15 rax rflags rsi rsp 
--------------------------------------------------------------------------------
000c3900: CLP; push r15 ; push r14 ; mov r14, rdx ; push r13 ; push r12 ; push rbp ; push rbx ; mov rbx, rsi ; sub rsp, 0x28 ; mov r13d, dword ptr [rsi + 0x38] ; cmp r13d, dword ptr [rsi + 0x90] ; mov qword ptr [rsp], rdi ; mov rbp, qword ptr [rsi + 0x70] ; movsxd r12, r13d ; jle 0xc3964
read: r12 r13 r13d r14 r15 rbp rbx rdi rdx rflags rsi rsp 
write: r12 r13d r14 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000c3ae0: CLP; push r15 ; push r14 ; mov r14, rsi ; push r13 ; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 0x68 ; mov eax, dword ptr [rsi + 0x14] ; mov esi, dword ptr [rsi + 0x10] ; lea rbx, [rsp + 0x50] ; mov qword ptr [rsp + 0x10], rdi ; mov rdi, rbx ; mov r15d, eax
read: eax r12 r13 r14 r15 rbp rbx rdi rsi rsp 
write: eax esi r14 r15d rbp rbx rdi rflags rsp 
--------------------------------------------------------------------------------
000c3e20: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; mov ebp, r9d ; push rbx ; mov ebx, ecx ; mov ecx, 0x18 ; sub rsp, 0x1d8 ; mov rax, qword ptr [rdi] ; mov qword ptr [rsp + 0x80], rsi ; mov rsi, rdi ; lea r14, [rsp + 0x110] ; mov r15, qword ptr [rsi + 0x20]
read: ecx r12 r13 r14 r15 r9d rbp rbx rdi rsi rsp 
write: ebp ebx ecx r14 r15 rax rflags rsi rsp 
--------------------------------------------------------------------------------
000c5590: CLP; push r15 ; mov rax, rdi ; push r14 ; mov r14, rsi ; push r13 ; push r12 ; push rbp ; push rbx ; mov rbx, rcx ; sub rsp, 0xb8 ; mov rax, qword ptr [rax + 0x88] ; mov r10, qword ptr [rdi + 0x70] ; mov qword ptr [rsp + 0x38], rdi ; movsxd rdi, edx ; mov dword ptr [rsp + 4], edx
read: edx r12 r13 r14 r15 rbp rbx rcx rdi rsi rsp 
write: r10 r14 rax rbx rdi rflags rsp 
--------------------------------------------------------------------------------
000c5d90: CLP; push r14 ; push r13 ; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rsi ; sub rsp, 0x20 ; movsxd rax, dword ptr [rsi + 0x38] ; cmp dword ptr [rsi + 0x48], eax ; jle 0xc5e5c
read: eax r12 r13 r14 rbp rbx rdi rflags rsi rsp 
write: rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000c64b0: CLP; push r14 ; mov r14, rdx ; push r13 ; mov r13d, 0xffffffff ; push r12 ; mov r12, rdi ; push rbp ; mov rbp, rsi ; push rbx ; mov ebx, dword ptr [rdi + 0x38] ; jmp 0xc64d2
read: r12 r13 r14 rbp rbx rdi rdx rsi rsp 
write: ebx r12 r13d r14 rbp rsp 
--------------------------------------------------------------------------------
000c6560: CLP; push r15 ; push r14 ; push r13 ; push r12 ; mov r12, rsi ; push rbp ; push rbx ; sub rsp, 0x158 ; movzx eax, byte ptr [rdx + 8] ; mov qword ptr [rsp + 0x50], rcx ; mov rcx, qword ptr [rsi] ; mov qword ptr [rsp + 0x48], rdi ; mov qword ptr [rsp + 0x28], rdx ; mov qword ptr [rsp + 0x58], r9 ; cmp al, 0x24
read: al r12 r13 r14 r15 r9 rbp rbx rcx rdi rdx rsi rsp 
write: eax r12 rcx rflags rsp 
--------------------------------------------------------------------------------
000c8430: CLP; push r15 ; mov r15, rcx ; push r14 ; push r13 ; mov r13, rsi ; push r12 ; mov r12d, r8d ; push rbp ; mov rbp, rdx ; push rbx ; mov rbx, r9 ; sub rsp, 0x48 ; mov r11, qword ptr [rsi] ; mov qword ptr [rsp + 8], rdi ; mov qword ptr [rsp + 0x10], r11
read: r11 r12 r13 r14 r15 r8d r9 rbp rbx rcx rdi rdx rsi rsp 
write: r11 r12d r13 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000c85e0: CLP; push r15 ; mov r15, r9 ; push r14 ; mov r14d, r8d ; push r13 ; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rdx ; sub rsp, 0x48 ; mov r13, qword ptr [rsi] ; mov qword ptr [rsp + 0x28], rsi ; mov qword ptr [rsp + 0x20], rcx ; call 0xc842c
read: r12 r13 r14 r15 r8d r9 rbp rbx rcx rdi rdx rip rsi rsp 
write: r13 r14d r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000c8750: CLP; push r15 ; mov r15, rdx ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0xe8 ; movzx eax, byte ptr [rdi + 0x38] ; mov qword ptr [rdi + 0x18], rcx ; mov qword ptr [rsp + 0x20], rdi ; mov qword ptr [rsp + 8], rsi ; mov qword ptr [rsp + 0x28], rcx ; mov dword ptr [rsp + 0x4c], 0 ; mov qword ptr [rdi + 0x10], 0
read: r12 r13 r14 r15 rbp rbx rcx rdi rdx rsi rsp 
write: eax r15 rflags rsp 
--------------------------------------------------------------------------------
000c9670: CLP; sub rsp, 8 ; mov rax, qword ptr [rip + 0x29f931] ; mov r9, rdi ; mov rdi, rdx ; mov rcx, qword ptr [rax] ; movzx eax, byte ptr [rdx + 0x38] ; mov r8, rcx ; shr r8, 0x19 ; and eax, 0xffffffef ; and r8d, 1 ; shl r8d, 4 ; or eax, r8d ; or eax, 0xffffff80 ; mov byte ptr [rdx + 0x38], al ; mov rdx, rsi
read: al eax r8 r8d rcx rdi rdx rsi rsp 
write: eax r8 r8d r9 rax rcx rdi rdx rflags rsp 
--------------------------------------------------------------------------------
000c96f0: CLP; mov rdx, qword ptr [rip + 0x29f8b5] ; mov rax, qword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
read: rdi 
write: rax rdx 
--------------------------------------------------------------------------------
000c9710: CLP; push r12 ; mov esi, 0x100 ; push rbp ; push rbx ; mov r12, qword ptr [rdi + 0x20] ; mov rbx, rdi ; mov rbp, qword ptr [rdi] ; test r12b, 1 ; mov rdi, r12 ; jne 0xc980c
read: r12 r12b rbp rbx rdi rflags rsp 
write: esi r12 rbp rbx rdi rflags rsp 
--------------------------------------------------------------------------------
000c9870: CLP; push r15 ; mov r15d, ecx ; push r14 ; mov r14, rdi ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x48 ; cmp ecx, edx ; mov r12, qword ptr [rdi] ; mov qword ptr [rsp + 0x18], rsi ; mov r13, qword ptr [rsp + 0x80] ; jg 0xc9bff
read: ecx edx r12 r13 r14 r15 rbp rbx rdi rflags rsi rsp 
write: r12 r13 r14 r15d rflags rsp 
--------------------------------------------------------------------------------
000c9d40: CLP; push r15 ; mov eax, edx ; shr eax, 0x1f ; push r14 ; push r13 ; push r12 ; lea r12d, [rdx + r8] ; push rbp ; mov ebp, r8d ; push rbx ; mov ebx, edx ; sub rsp, 0x28 ; test al, al ; jne 0xc9e54
read: al eax edx r12 r13 r14 r15 r8d rbp rbx rflags rsp 
write: eax ebp ebx r12d rflags rsp 
--------------------------------------------------------------------------------
000c9e60: CLP; push r14 ; mov eax, edx ; mov r14, rsi ; and eax, 1 ; push r13 ; mov r13d, edx ; push r12 ; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 0x10 ; cmp eax, 1 ; mov qword ptr [rdi], 0 ; sbb r12, r12 ; mov qword ptr [rdi + 8], 0
read: eax edx r12 r13 r14 rbp rbx rdi rflags rsi rsp 
write: eax r12 r13d r14 rbx rflags rsp 
--------------------------------------------------------------------------------
000c9f90: CLP; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 8 ; cmp edi, 0x10 ; ja 0xca00c
read: edi r12 r13 rbp rbx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000ca030: CLP; push rbx ; mov rbx, rdi ; mov rdi, qword ptr [rdi] ; test rdi, rdi ; je 0xca045
read: rbx rdi rflags rsp 
write: rbx rdi rflags rsp 
--------------------------------------------------------------------------------
000ca090: CLP; push r12 ; test rdi, rdi ; push rbp ; push rbx ; mov rbx, rdi ; je 0xca15c
read: r12 rbp rbx rdi rflags rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
000ca1e0: CLP; push r14 ; mov eax, 2 ; push r13 ; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 0x30 ; test r8d, 0xfffffff8 ; mov rbx, qword ptr [rdi] ; je 0xca214
read: r12 r13 r14 r8d rbp rbx rdi rflags rsp 
write: eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000ca350: CLP; sub rsp, 0x18 ; mov r9d, edx ; mov qword ptr [rsp], r8 ; mov dword ptr [rsp + 8], 1 ; xor r8d, r8d ; call 0xc986c
read: edx r8 r8d rip rsp 
write: r8d r9d rflags rsp 
--------------------------------------------------------------------------------
000ca380: CLP; sub rsp, 0x18 ; mov qword ptr [rsp], r9 ; mov dword ptr [rsp + 8], 0 ; mov r9d, edx ; call 0xc986c
read: edx r9 rip rsp 
write: r9d rflags rsp 
--------------------------------------------------------------------------------
000ca3b0: CLP; sub rsp, 0x28 ; mov eax, dword ptr [rsp + 0x38] ; mov dword ptr [rsp + 0x18], 1 ; mov dword ptr [rsp], 0 ; mov dword ptr [rsp + 0x10], eax ; mov rax, qword ptr [rsp + 0x30] ; mov qword ptr [rsp + 8], rax ; call 0xc9d3c
read: eax rax rip rsp 
write: eax rax rflags rsp 
--------------------------------------------------------------------------------
000ca3f0: CLP; sub rsp, 0x28 ; mov eax, dword ptr [rsp + 0x40] ; mov dword ptr [rsp + 0x18], 0 ; mov dword ptr [rsp + 0x10], eax ; mov rax, qword ptr [rsp + 0x38] ; mov qword ptr [rsp + 8], rax ; mov eax, dword ptr [rsp + 0x30] ; mov dword ptr [rsp], eax ; call 0xc9d3c
read: eax rax rip rsp 
write: eax rax rflags rsp 
--------------------------------------------------------------------------------
000ca430: CLP; test edx, edx ; jne 0xca454
read: edx rflags 
write: rflags 
--------------------------------------------------------------------------------
000ca470: CLP; mov rsi, rdi ; lea rdi, [rip + 0x2a1a62] ; sub rsp, 8 ; xor r8d, r8d ; xor ecx, ecx ; xor edx, edx ; call 0xca1dc
read: ecx edx r8d rdi rip rsp 
write: ecx edx r8d rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000ca4a0: CLP; push r12 ; mov r12, rsi ; push rbp ; push rbx ; mov rbx, rdx ; sub rsp, 0x60 ; cmp edi, 0x45c ; je 0xca68c
read: edi r12 rbp rbx rdx rflags rsi rsp 
write: r12 rbx rflags rsp 
--------------------------------------------------------------------------------
000cabd0: CLP; push r15 ; mov r9d, dword ptr [rsi + 0x34] ; push r14 ; push r13 ; mov r13d, dword ptr [rsi + 0x30] ; push r12 ; mov r12d, dword ptr [rsi] ; mov r10d, r13d ; push rbp ; movsxd rbp, r9d ; mov r11d, r12d ; push rbx ; lea rbx, [rdi + 8] ; nop word ptr cs:[rax + rax] ; cmp r9d, r10d
read: r10d r12 r12d r13 r13d r14 r15 r9d rbp rbx rsp 
write: r10d r11d r12d r13d r9d rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000cacd0: CLP; push rbp ; mov rbp, rsp ; push r15 ; push r14 ; mov r14d, edi ; push r13 ; push r12 ; push rbx ; sub rsp, 0x98 ; mov r15, qword ptr [rbp + 0x10] ; test edi, edi ; mov qword ptr [rbp - 0x78], rsi ; mov qword ptr [rbp - 0x60], rdx ; mov qword ptr [rbp - 0x80], rcx ; mov qword ptr [rbp - 0x90], r8
read: edi r12 r13 r14 r15 r8 rbp rbx rcx rdx rsi rsp 
write: r14d r15 rbp rflags rsp 
--------------------------------------------------------------------------------
000cbf60: CLP; push rbx ; sub rsp, 0x10 ; mov rbx, qword ptr [rip + 0x29cfc0] ; mov eax, dword ptr [rbx] ; mov dword ptr [rip + 0x29ffa8], eax ; mov rax, qword ptr [rip + 0x29d049] ; mov eax, dword ptr [rax] ; mov dword ptr [rip + 0x29ff9d], eax ; mov eax, dword ptr [rsp + 0x20] ; mov dword ptr [rsp + 8], eax ; lea rax, [rip + 0x29ff8a] ; mov qword ptr [rsp], rax ; call 0xcaccc
read: eax rax rbx rip rsp 
write: eax rax rbx rflags rsp 
--------------------------------------------------------------------------------
000cbfe0: CLP; sub rsp, 0x18 ; xor r9d, r9d ; xor r8d, r8d ; mov dword ptr [rsp], 0 ; xor ecx, ecx ; call 0xcbf5c
read: ecx r8d r9d rip rsp 
write: ecx r8d r9d rflags rsp 
--------------------------------------------------------------------------------
000cc010: CLP; sub rsp, 0x18 ; xor r9d, r9d ; xor r8d, r8d ; mov dword ptr [rsp], 1 ; xor ecx, ecx ; call 0xcbf5c
read: ecx r8d r9d rip rsp 
write: ecx r8d r9d rflags rsp 
--------------------------------------------------------------------------------
000cc040: CLP; sub rsp, 0x18 ; xor r9d, r9d ; mov dword ptr [rsp], 0 ; call 0xcbf5c
read: r9d rip rsp 
write: r9d rflags rsp 
--------------------------------------------------------------------------------
000cc060: CLP; sub rsp, 0x18 ; mov qword ptr [rsp], r9 ; mov dword ptr [rsp + 8], 0 ; xor r9d, r9d ; call 0xcaccc
read: r9 r9d rip rsp 
write: r9d rflags rsp 
--------------------------------------------------------------------------------
000cc090: CLP; sub rsp, 0x18 ; mov r9d, 1 ; mov dword ptr [rsp], 0 ; call 0xcbf5c
read: rip rsp 
write: r9d rflags rsp 
--------------------------------------------------------------------------------
000cc0c0: CLP; sub rsp, 0x18 ; mov qword ptr [rsp], r9 ; mov dword ptr [rsp + 8], 0 ; mov r9d, 1 ; call 0xcaccc
read: r9 rip rsp 
write: r9d rflags rsp 
--------------------------------------------------------------------------------
000cc0f0: CLP; mov eax, 0x8e ; syscall ; cmp rax, -0xfff ; jae 0xcc100
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000cc120: CLP; mov eax, 0x8f ; syscall ; cmp rax, -0xfff ; jae 0xcc130
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000cc150: CLP; mov eax, 0x90 ; syscall ; cmp rax, -0xfff ; jae 0xcc160
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000cc180: CLP; mov eax, 0x91 ; syscall ; cmp rax, -0xfff ; jae 0xcc190
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000cc1b0: CLP; mov eax, 0x18 ; syscall ; cmp rax, -0xfff ; jae 0xcc1c0
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000cc1e0: CLP; mov eax, 0x92 ; syscall ; cmp rax, -0xfff ; jae 0xcc1f0
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000cc210: CLP; mov eax, 0x93 ; syscall ; cmp rax, -0xfff ; jae 0xcc220
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000cc240: CLP; mov eax, 0x94 ; syscall ; cmp rax, -0xfff ; jae 0xcc250
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000cc270: CLP; mov r9, rsi ; mov ecx, 0xcc ; mov esi, 0x7fffffff ; cmp r9, 0x7fffffff ; mov r10, rdx ; movsxd rdi, edi ; cmovbe rsi, r9 ; mov eax, ecx ; syscall ; cmp rax, -0x1000 ; mov r8, rax ; ja 0xcc2c7
read: ecx edi r9 rax rdx rflags rsi 
write: eax ecx esi r10 r8 r9 rdi rflags rsi 
--------------------------------------------------------------------------------
000cc2e0: CLP; push rbp ; mov rbp, rsp ; push r15 ; push r14 ; push r13 ; mov r13d, edi ; push r12 ; mov r12, rsi ; push rbx ; mov rbx, rdx ; sub rsp, 8 ; mov rax, qword ptr [rip + 0x29fc53] ; test rax, rax ; je 0xcc3b1
read: edi r12 r13 r14 r15 rax rbp rbx rdx rflags rsi rsp 
write: r12 r13d rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000cc460: CLP; mov edx, dword ptr [rsi + 0x10] ; cmp dword ptr [rdi + 0x10], edx ; mov eax, 1 ; jb 0xcc475
read: edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
000cc480: CLP; mov eax, dword ptr [rsi + 4] ; xor edx, edx ; cmp dword ptr [rdi + 4], eax ; mov eax, 0xffffffff ; setne dl ; cmovbe eax, edx ; ret
read: eax edx rflags 
write: dl eax edx rflags 
--------------------------------------------------------------------------------
000cc4a0: CLP; sub rsp, 8 ; add rsi, 8 ; add rdi, 8 ; mov edx, 0x10 ; call 0x88bbc
read: rdi rip rsi rsp 
write: edx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000cc4d0: CLP; movzx ecx, word ptr [rdi] ; cmp cx, 2 ; je 0xcc4e3
read: cx rflags 
write: ecx rflags 
--------------------------------------------------------------------------------
000cc5b0: CLP; push r15 ; lea rsi, [rip + 0x67f3b] ; lea rdi, [rip + 0x6a02f] ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x128 ; mov qword ptr [rsp + 0x48], 0 ; mov qword ptr [rsp + 0x50], 0 ; mov byte ptr [rsp + 0x46], 0 ; mov qword ptr [rsp + 0x58], 0 ; mov qword ptr [rsp + 0x60], 0 ; mov byte ptr [rsp + 0x47], 0
read: r12 r13 r14 r15 rbp rbx rsp 
write: rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000cd290: CLP; push rbp ; mov rbp, rsp ; push r15 ; mov r15, rcx ; lea rax, [rbp - 0x58] ; push r14 ; mov r14, rsi ; push r13 ; mov r13, rdi ; push r12 ; lea r12, [rsi + 0xa] ; push rbx ; mov ebx, 0x400 ; sub rsp, 0x58 ; mov qword ptr [rbp - 0x68], rax
read: r12 r13 r14 r15 rax rbp rbx rcx rdi rsi rsp 
write: ebx r12 r13 r14 r15 rax rbp rflags rsp 
--------------------------------------------------------------------------------
000cd380: CLP; push rbp ; lea rax, [rip + 0x29ec14] ; mov rbp, rsp ; push r15 ; push r14 ; mov r14, rsi ; push r13 ; push r12 ; push rbx ; mov rbx, rdx ; sub rsp, 0x118 ; mov qword ptr [rbp - 0x78], rcx ; mov rcx, qword ptr [rdx + 8] ; mov qword ptr [rbp - 0xa0], rdi ; mov qword ptr [rbp - 0xa8], r8
read: r12 r13 r14 r15 r8 rbp rbx rcx rdi rdx rsi rsp 
write: r14 rax rbp rbx rcx rflags rsp 
--------------------------------------------------------------------------------
000cfa70: CLP; movzx edx, word ptr [rdi] ; cmp dx, 0xa ; je 0xcfac4
read: dx rflags 
write: edx rflags 
--------------------------------------------------------------------------------
000cfb30: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x48 ; mov r13, qword ptr [rdi] ; mov rbp, qword ptr [rsi] ; mov rbx, qword ptr [rdx] ; lea r8, [r13 + r13*2] ; lea rax, [rbp + rbp*2] ; shl r8, 4 ; shl rax, 4 ; lea r15, [rbx + r8]
read: r12 r13 r14 r15 r8 rax rbp rbx rsp 
write: r13 r15 r8 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000d01a0: CLP; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; test rdi, rdi ; jne 0xd01b7
read: rbp rbx rdi rflags rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
000d01f0: CLP; push rbp ; mov rbp, rsp ; push r15 ; push r14 ; mov r14, rdi ; push r13 ; mov r13, rsi ; push r12 ; mov r12, rdx ; push rbx ; sub rsp, 0x178 ; test rdi, rdi ; mov qword ptr [rbp - 0x198], rcx ; mov qword ptr [rbp - 0x128], 0 ; je 0xd0bbc
read: r12 r13 r14 r15 rbp rbx rcx rdi rdx rflags rsi rsp 
write: r12 r13 r14 rbp rflags rsp 
--------------------------------------------------------------------------------
000d0ea0: CLP; lea rcx, [rip + 0x61695] ; sub rsp, 8 ; xor eax, eax ; nop dword ptr [rax] ; movsx edx, word ptr [rcx + rax*4] ; cmp edx, edi ; je 0xd0eec
read: eax edi edx rflags rsp 
write: eax edx rcx rflags rsp 
--------------------------------------------------------------------------------
000d0f10: CLP; push r12 ; test rsi, rsi ; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; je 0xd0f74
read: r12 rbp rbx rdi rflags rsi rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000d0fd0: CLP; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 0x18 ; mov rsi, qword ptr [rsi] ; cmp rsi, qword ptr [rdx] ; je 0xd100c
read: rbp rbx rdi rflags rsi rsp 
write: rbp rbx rflags rsi rsp 
--------------------------------------------------------------------------------
000d1080: CLP; push rbx ; mov rbx, rdi ; sub rsp, 0x10 ; mov rax, qword ptr [r8] ; movsx ecx, byte ptr [rcx + rax + 1] ; lea rdi, [rax + 1] ; mov eax, 5 ; test cl, cl ; je 0xd10c6
read: cl rbx rdi rflags rsp 
write: eax ecx rax rbx rdi rflags rsp 
--------------------------------------------------------------------------------
000d10f0: CLP; push r14 ; mov r14, rdx ; push r13 ; mov r13, rsi ; push r12 ; mov r12, rdi ; push rbp ; mov rbp, rcx ; push rbx ; mov rbx, r8 ; mov r8, qword ptr [r8] ; movzx r9d, byte ptr [rcx + r8 + 1] ; lea rdx, [r8 + 1] ; cmp r9b, 0x22 ; je 0xd11ac
read: r12 r13 r14 r8 r9b rbp rbx rcx rdi rdx rflags rsi rsp 
write: r12 r13 r14 r8 r9d rbp rbx rdx rflags rsp 
--------------------------------------------------------------------------------
000d11e0: CLP; push r13 ; mov r13, rcx ; push r12 ; mov r12, rsi ; push rbp ; mov rbp, r8 ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov rdi, qword ptr [rsi] ; mov rax, qword ptr [rdx] ; lea r8, [rdi + r8] ; cmp r8, rax ; jbe 0xd1274
read: r12 r13 r8 rax rbp rbx rcx rdi rflags rsi rsp 
write: r12 r13 r8 rax rbp rbx rdi rflags rsp 
--------------------------------------------------------------------------------
000d12c0: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x1a8 ; test rdi, rdi ; mov qword ptr [rsp + 0x30], rdi ; mov qword ptr [rsp + 0x18], rdx ; mov qword ptr [rsp + 0x20], rcx ; mov dword ptr [rsp + 0x40], r8d ; mov qword ptr [rsp + 0x28], r9 ; mov dword ptr [rsp + 0x5c], 0 ; je 0xd1301
read: r12 r13 r14 r15 r8d r9 rbp rbx rcx rdi rdx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000d1a70: CLP; push r15 ; push r14 ; mov r14, r8 ; push r13 ; push r12 ; push rbp ; push rbx ; mov rbx, rcx ; sub rsp, 0x58 ; mov qword ptr [rsp + 0x20], rdx ; mov rdx, qword ptr [r8] ; mov qword ptr [rsp + 0x10], rdi ; mov qword ptr [rsp + 0x18], rsi ; mov qword ptr [rsp + 0x40], 0 ; mov qword ptr [rsp + 0x38], 0
read: r12 r13 r14 r15 r8 rbp rbx rcx rdi rdx rsi rsp 
write: r14 rbx rdx rflags rsp 
--------------------------------------------------------------------------------
000d1c30: CLP; push r13 ; mov r13, rsi ; push r12 ; mov r12, rdi ; push rbp ; push rbx ; sub rsp, 0x18 ; call 0xd1e6c
read: r12 r13 rbp rbx rdi rip rsi rsp 
write: r12 r13 rflags rsp 
--------------------------------------------------------------------------------
000d1d60: CLP; push r13 ; push r12 ; push rbp ; push rbx ; mov rbx, rsi ; sub rsp, 0x28 ; lea rbp, [rsp + 8] ; mov qword ptr [rsp + 8], rdi ; lea r12, [rsp + 0x18] ; mov rdi, rbp ; call 0xd1c2c
read: r12 r13 rbp rbx rdi rip rsi rsp 
write: r12 rbp rbx rdi rflags rsp 
--------------------------------------------------------------------------------
000d1e70: CLP; push r12 ; mov r12, rsi ; push rbp ; mov rbp, rdi ; push rbx ; mov rdi, qword ptr [rdi] ; test rdi, rdi ; je 0xd1ec4
read: r12 rbp rbx rdi rflags rsi rsp 
write: r12 rbp rdi rflags rsp 
--------------------------------------------------------------------------------
000d1f70: CLP; push r13 ; push r12 ; push rbp ; push rbx ; mov rbx, rcx ; sub rsp, 8 ; test rcx, rcx ; je 0xd1fba
read: r12 r13 rbp rbx rcx rflags rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
000d1fe0: CLP; push rbp ; mov rbp, rsp ; push r15 ; push r14 ; push r13 ; push r12 ; push rbx ; sub rsp, 0x78 ; mov rax, qword ptr [rsi] ; mov qword ptr [rbp - 0x78], rdi ; mov qword ptr [rbp - 0x88], rsi ; mov qword ptr [rbp - 0x90], rdx ; mov qword ptr [rbp - 0x80], r8 ; test rax, rax ; je 0xd2062
read: r12 r13 r14 r15 r8 rax rbp rbx rdi rdx rflags rsi rsp 
write: rax rbp rflags rsp 
--------------------------------------------------------------------------------
000d2430: CLP; push r15 ; mov r15, r8 ; push r14 ; mov r14, rcx ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x88 ; mov qword ptr [rsp + 0x38], rdx ; mov rdx, qword ptr [r8] ; mov qword ptr [rsp + 0x28], rdi ; mov qword ptr [rsp + 0x30], rsi ; mov dword ptr [rsp + 0x24], r9d ; mov qword ptr [rsp + 0x48], 0
read: r12 r13 r14 r15 r8 r9d rbp rbx rcx rdi rdx rsi rsp 
write: r14 r15 rdx rflags rsp 
--------------------------------------------------------------------------------
000d2850: CLP; push r15 ; push r14 ; mov r14, r8 ; push r13 ; push r12 ; push rbp ; push rbx ; mov rbx, rcx ; sub rsp, 0x108 ; mov rbp, qword ptr [r8] ; mov qword ptr [rsp + 0x28], rdx ; mov qword ptr [rsp + 0x30], rdi ; mov qword ptr [rsp + 0x20], rsi ; mov dword ptr [rsp + 0x38], r9d ; lea rdx, [rbp + 1]
read: r12 r13 r14 r15 r8 r9d rbp rbx rcx rdi rdx rsi rsp 
write: r14 rbp rbx rdx rflags rsp 
--------------------------------------------------------------------------------
000d4390: CLP; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 8 ; test rdi, rdi ; je 0xd43e9
read: rbp rbx rdi rflags rsp 
write: rbp rflags rsp 
--------------------------------------------------------------------------------
000d4400: CLP; push r15 ; mov rax, rsi ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 0x138 ; mov qword ptr [rsp + 0x28], rsi ; mov rsi, qword ptr [rsi] ; mov dword ptr [rsp + 0x80], edx ; and edx, 8 ; mov qword ptr [rsp + 0xb0], 0 ; mov qword ptr [rsp + 0xa8], 0
read: edx r12 r13 r14 r15 rbp rbx rdi rsi rsp 
write: edx rax rbx rflags rsi rsp 
--------------------------------------------------------------------------------
000d51e0: CLP; cmp dword ptr [rip + 0x299589], 0 ; jne 0xd5200
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000d51ed: CLP; mov r10, rcx ; mov eax, 0x11 ; syscall ; cmp rax, -0xfff ; jae 0xd523b
read: rax rcx rflags 
write: eax r10 rflags 
--------------------------------------------------------------------------------
000d5250: CLP; cmp dword ptr [rip + 0x299519], 0 ; jne 0xd5270
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000d525d: CLP; mov r10, rcx ; mov eax, 0x12 ; syscall ; cmp rax, -0xfff ; jae 0xd52ab
read: rax rcx rflags 
write: eax r10 rflags 
--------------------------------------------------------------------------------
000d52c0: CLP; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov eax, dword ptr [rdi] ; mov rdi, qword ptr [rdi + 8] ; lea ebp, [rax + 8] ; movsxd rsi, ebp ; shl rsi, 5 ; call 0x1f3ac
read: ebp rbp rbx rdi rip rsi rsp 
write: eax ebp rbx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000d5310: CLP; test dil, 1 ; mov edx, 0x50 ; jne 0xd535c
read: dil rflags 
write: edx rflags 
--------------------------------------------------------------------------------
000d53a0: CLP; push r12 ; mov r12, rdi ; push rbp ; xor ebp, ebp ; push rbx ; mov eax, dword ptr [rdi + 4] ; xor ebx, ebx ; mov rdi, qword ptr [rdi + 8] ; test eax, eax ; jg 0xd53ca
read: eax ebp ebx r12 rbp rbx rdi rflags rsp 
write: eax ebp ebx r12 rdi rflags rsp 
--------------------------------------------------------------------------------
000d5410: CLP; push rbp ; mov rbp, rdi ; mov edi, 4 ; push rbx ; mov ebx, esi ; sub rsp, 8 ; call 0xb4c0c
read: esi rbp rbx rdi rip rsp 
write: ebx edi rbp rflags rsp 
--------------------------------------------------------------------------------
000d54a0: CLP; push r15 ; push r14 ; mov r14d, ecx ; push r13 ; mov r13d, r8d ; push r12 ; mov r12, rdi ; mov edi, 4 ; push rbp ; mov rbp, rdx ; push rbx ; mov ebx, esi ; sub rsp, 8 ; call 0xb4c0c
read: ecx esi r12 r13 r14 r15 r8d rbp rbx rdi rdx rip rsp 
write: ebx edi r12 r13d r14d rbp rflags rsp 
--------------------------------------------------------------------------------
000d5580: CLP; push r12 ; mov r12, rdi ; mov edi, 4 ; push rbp ; mov ebp, edx ; push rbx ; mov ebx, esi ; call 0xb4c0c
read: edx esi r12 rbp rbx rdi rip rsp 
write: ebp ebx edi r12 rsp 
--------------------------------------------------------------------------------
000d5610: CLP; test dil, 1 ; mov edx, 0x150 ; jne 0xd565c
read: dil rflags 
write: edx rflags 
--------------------------------------------------------------------------------
000d56a0: CLP; xor eax, eax ; ret
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
000d56b0: CLP; mov rdx, qword ptr [rdi + 8] ; mov qword ptr [rsi], rdx ; mov rdx, qword ptr [rdi + 0x10] ; mov qword ptr [rsi + 8], rdx ; mov rdx, qword ptr [rdi + 0x18] ; mov qword ptr [rsi + 0x10], rdx ; mov rdx, qword ptr [rdi + 0x20] ; mov qword ptr [rsi + 0x18], rdx ; mov rdx, qword ptr [rdi + 0x28] ; mov qword ptr [rsi + 0x20], rdx ; mov rdx, qword ptr [rdi + 0x30] ; mov qword ptr [rsi + 0x28], rdx ; mov rdx, qword ptr [rdi + 0x38] ; mov qword ptr [rsi + 0x30], rdx ; mov rdx, qword ptr [rdi + 0x40]
read: rdx 
write: rdx 
--------------------------------------------------------------------------------
000d5740: CLP; mov rdx, qword ptr [rsi] ; xor eax, eax ; mov qword ptr [rdi + 8], rdx ; mov rdx, qword ptr [rsi + 8] ; mov qword ptr [rdi + 0x10], rdx ; mov rdx, qword ptr [rsi + 0x10] ; mov qword ptr [rdi + 0x18], rdx ; mov rdx, qword ptr [rsi + 0x18] ; mov qword ptr [rdi + 0x20], rdx ; mov rdx, qword ptr [rsi + 0x20] ; mov qword ptr [rdi + 0x28], rdx ; mov rdx, qword ptr [rsi + 0x28] ; mov qword ptr [rdi + 0x30], rdx ; mov rdx, qword ptr [rsi + 0x30] ; mov qword ptr [rdi + 0x38], rdx
read: eax rdx 
write: eax rdx rflags 
--------------------------------------------------------------------------------
000d57d0: CLP; movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
read: ax eax 
write: eax rflags 
--------------------------------------------------------------------------------
000d57e0: CLP; test si, 0xff80 ; mov eax, 0x16 ; je 0xd57f4
read: rflags si 
write: eax rflags 
--------------------------------------------------------------------------------
000d5800: CLP; mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
000d5810: CLP; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
read: eax esi 
write: eax rflags 
--------------------------------------------------------------------------------
000d5820: CLP; sub rsp, 0x18 ; mov dword ptr [rsp], 0 ; call 0xd590c
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000d5840: CLP; sub rsp, 0x18 ; mov dword ptr [rsp], 1 ; call 0xd590c
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000d5860: CLP; mov rcx, rsi ; xor r8d, r8d ; jmp 0xd586f
read: r8d rsi 
write: r8d rcx rflags 
--------------------------------------------------------------------------------
000d5910: CLP; push rbp ; mov rbp, rsp ; push r15 ; push r14 ; push r13 ; push r12 ; push rbx ; sub rsp, 0xf8 ; test rcx, rcx ; mov qword ptr [rbp - 0x120], rdi ; mov qword ptr [rbp - 0x118], rsi ; mov qword ptr [rbp - 0x100], rdx ; mov qword ptr [rbp - 0x108], rcx ; mov qword ptr [rbp - 0xe8], r8 ; mov qword ptr [rbp - 0xf0], r9
read: r12 r13 r14 r15 r8 r9 rbp rbx rcx rdi rdx rsi rsp 
write: rbp rflags rsp 
--------------------------------------------------------------------------------
000d5f60: CLP; mov rdx, qword ptr [rdi + 0x88] ; mov qword ptr [rsi], rdx ; mov rdx, qword ptr [rdi + 0x90] ; mov qword ptr [rsi + 8], rdx ; mov rdx, qword ptr [rdi + 0x98] ; mov qword ptr [rsi + 0x10], rdx ; mov rdx, qword ptr [rdi + 0xa0] ; mov qword ptr [rsi + 0x18], rdx ; mov rdx, qword ptr [rdi + 0xa8] ; mov qword ptr [rsi + 0x20], rdx ; mov rdx, qword ptr [rdi + 0xb0] ; mov qword ptr [rsi + 0x28], rdx ; mov rdx, qword ptr [rdi + 0xb8] ; mov qword ptr [rsi + 0x30], rdx ; mov rdx, qword ptr [rdi + 0xc0]
read: rdx 
write: rdx 
--------------------------------------------------------------------------------
000d6020: CLP; mov eax, dword ptr [rdi + 0x10c] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
000d6030: CLP; mov eax, dword ptr [rdi + 0x108] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
000d6040: CLP; mov rdx, qword ptr [rsi] ; xor eax, eax ; mov qword ptr [rdi + 0x88], rdx ; mov rdx, qword ptr [rsi + 8] ; mov qword ptr [rdi + 0x90], rdx ; mov rdx, qword ptr [rsi + 0x10] ; mov qword ptr [rdi + 0x98], rdx ; mov rdx, qword ptr [rsi + 0x18] ; mov qword ptr [rdi + 0xa0], rdx ; mov rdx, qword ptr [rsi + 0x20] ; mov qword ptr [rdi + 0xa8], rdx ; mov rdx, qword ptr [rsi + 0x28] ; mov qword ptr [rdi + 0xb0], rdx ; mov rdx, qword ptr [rsi + 0x30] ; mov qword ptr [rdi + 0xb8], rdx
read: eax rdx 
write: eax rdx rflags 
--------------------------------------------------------------------------------
000d6100: CLP; cmp esi, 2 ; mov eax, 0x16 ; jbe 0xd610c
read: esi rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000d6120: CLP; mov eax, dword ptr [rsi] ; mov dword ptr [rdi + 0x108], eax ; xor eax, eax ; ret
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
000d6130: CLP; cmp edx, 4 ; je 0xd614c
read: edx rflags 
write: rflags 
--------------------------------------------------------------------------------
000d6160: CLP; sub rsp, 0x18 ; mov edi, 6 ; mov rsi, rsp ; call 0xdc08c
read: rip rsp 
write: edi rflags rsi rsp 
--------------------------------------------------------------------------------
000d6190: CLP; and rdi, 0xfffffffffffffff8 ; add rdi, rsi ; cmp rsi, rdi ; jae 0xd624a
read: rdi rflags rsi 
write: rdi rflags 
--------------------------------------------------------------------------------
000d6260: CLP; add rdi, 0x3f ; sub rsp, 8 ; shr rdi, 6 ; shl rdi, 3 ; call 0x1f3cc
read: rdi rip rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
000d6290: CLP; sub rsp, 8 ; call 0x1f46c
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000d62b0: CLP; sub rsp, 8 ; mov rdi, rsp ; xor esi, esi ; mov edx, 0x38 ; add rdx, qword ptr fs:[0] ; mov rax, qword ptr [rip + 0x298076] ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
read: esi rax rdx rsp 
write: edx esi rax rdi rdx rflags rsp 
--------------------------------------------------------------------------------
000d6310: CLP; mov eax, 0x84 ; syscall ; cmp rax, -0xfff ; jae 0xd6320
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000d6340: CLP; sub rsp, 0x18 ; mov edx, esi ; mov rsi, rdi ; lea rcx, [rsp + 8] ; or dh, 0x10 ; xor edi, edi ; mov qword ptr [rsp + 8], 0 ; call 0xd648c
read: dh edi esi rdi rip rsp 
write: dh edi edx rcx rflags rsi rsp 
--------------------------------------------------------------------------------
000d6370: CLP; sub rsp, 0x18 ; mov ecx, edx ; mov rdx, rsi ; lea r8, [rsp + 8] ; mov esi, edi ; or ch, 0x10 ; xor edi, edi ; mov qword ptr [rsp + 8], 0 ; call 0xd64ec
read: ch edi edx rip rsi rsp 
write: ch ecx edi esi r8 rdx rflags rsp 
--------------------------------------------------------------------------------
000d63a0: CLP; cmp edi, 1 ; mov rax, rsi ; ja 0xd63c4
read: edi rflags rsi 
write: rax rflags 
--------------------------------------------------------------------------------
000d63f0: CLP; cmp edi, 1 ; mov eax, esi ; ja 0xd6414
read: edi esi rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000d6440: CLP; cmp edi, 1 ; mov rax, rsi ; ja 0xd6464
read: edi rflags rsi 
write: rax rflags 
--------------------------------------------------------------------------------
000d6490: CLP; test edi, edi ; mov r8, rsi ; mov esi, edx ; jne 0xd64bc
read: edi edx rflags rsi 
write: esi r8 rflags 
--------------------------------------------------------------------------------
000d64f0: CLP; test edi, edi ; mov r9d, esi ; mov rsi, rdx ; jne 0xd651c
read: edi esi rdx rflags 
write: r9d rflags rsi 
--------------------------------------------------------------------------------
000d6550: CLP; cmp edi, 1 ; mov eax, esi ; mov rsi, rdx ; ja 0xd657c
read: edi esi rdx rflags 
write: eax rflags rsi 
--------------------------------------------------------------------------------
000d65b0: CLP; mov eax, 0x89 ; syscall ; cmp rax, -0xfff ; jae 0xd65c0
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000d65e0: CLP; mov eax, 0x8a ; syscall ; cmp rax, -0xfff ; jae 0xd65f0
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000d6610: CLP; push r12 ; mov r12, rsi ; push rbp ; push rbx ; mov rbx, rdi ; add rsp, -0x80 ; mov rsi, rsp ; call 0xd65ac
read: r12 rbp rbx rdi rip rsi rsp 
write: r12 rbx rflags rsi rsp 
--------------------------------------------------------------------------------
000d6660: CLP; push r12 ; mov r12, rsi ; push rbp ; mov ebp, edi ; push rbx ; add rsp, -0x80 ; mov rsi, rsp ; call 0xd65dc
read: edi r12 rbp rbx rip rsi rsp 
write: ebp r12 rflags rsi rsp 
--------------------------------------------------------------------------------
000d66b0: CLP; mov eax, 0x5f ; syscall ; ret
read: 
write: eax 
--------------------------------------------------------------------------------
000d66c0: CLP; mov eax, 0x5a ; syscall ; cmp rax, -0xfff ; jae 0xd66d0
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000d66f0: CLP; mov eax, 0x5b ; syscall ; cmp rax, -0xfff ; jae 0xd6700
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000d6720: CLP; mov rax, qword ptr [rip + 0x29273d] ; mov dword ptr fs:[rax], 0x26 ; mov eax, 0xffffffff ; ret
read: 
write: eax rax 
--------------------------------------------------------------------------------
000d6740: CLP; test ecx, 0xfffffeff ; jne 0xd677c
read: ecx rflags 
write: rflags 
--------------------------------------------------------------------------------
000d67b0: CLP; mov eax, 0x53 ; syscall ; cmp rax, -0xfff ; jae 0xd67c0
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000d67e0: CLP; mov edx, edx ; movsxd rdi, edi ; mov eax, 0x102 ; syscall ; cmp rax, -0x1000 ; ja 0xd67f6
read: edi edx rax rflags 
write: eax edx rdi rflags 
--------------------------------------------------------------------------------
000d6810: CLP; cmp dword ptr [rip + 0x297f59], 0 ; jne 0xd682d
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000d681d: CLP; mov eax, 2 ; syscall ; cmp rax, -0xfff ; jae 0xd6865
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000d6880: CLP; sub rsp, 8 ; test sil, 0x40 ; jne 0xd689a
read: rflags rsp sil 
write: rflags rsp 
--------------------------------------------------------------------------------
000d68b0: CLP; sub rsp, 8 ; test sil, 0x40 ; jne 0xd68ca
read: rflags rsp sil 
write: rflags rsp 
--------------------------------------------------------------------------------
000d68e0: CLP; mov r10d, ecx ; movsxd rdx, edx ; movsxd rdi, edi ; mov eax, 0x101 ; syscall ; cmp rax, -0x1000 ; ja 0xd68fa
read: ecx edi edx rax rflags 
write: eax r10d rdi rdx rflags 
--------------------------------------------------------------------------------
000d6910: CLP; sub rsp, 0x78 ; xor r10d, r10d ; test dl, 0x40 ; mov qword ptr [rsp + 0x58], rcx ; jne 0xd694c
read: dl r10d rcx rflags rsp 
write: r10d rflags rsp 
--------------------------------------------------------------------------------
000d6a00: CLP; sub rsp, 8 ; test dl, 0x40 ; jne 0xd6a19
read: dl rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000d6a30: CLP; sub rsp, 8 ; test dl, 0x40 ; jne 0xd6a49
read: dl rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000d6a60: CLP; cmp dword ptr [rip + 0x297d09], 0 ; jne 0xd6a7d
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000d6a6d: CLP; mov eax, 0 ; syscall ; cmp rax, -0xfff ; jae 0xd6ab5
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000d6ad0: CLP; cmp dword ptr [rip + 0x297c99], 0 ; jne 0xd6aed
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000d6add: CLP; mov eax, 1 ; syscall ; cmp rax, -0xfff ; jae 0xd6b25
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000d6b40: CLP; mov eax, 0x15 ; syscall ; cmp rax, -0xfff ; jae 0xd6b50
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000d6b70: CLP; push r15 ; push r14 ; push r13 ; push r12 ; mov r12, rdi ; push rbp ; push rbx ; mov ebx, esi ; mov rsi, rdi ; mov edi, 1 ; sub rsp, 0x98 ; mov rdx, rsp ; call 0xd639c
read: esi r12 r13 r14 r15 rbp rbx rdi rip rsp 
write: ebx edi r12 rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000d6cb0: CLP; push r13 ; push r12 ; push rbp ; push rbx ; mov ebx, ecx ; sub rsp, 0x98 ; test ecx, 0xfffffcff ; jne 0xd6e1c
read: ecx r12 r13 rbp rbx rflags rsp 
write: ebx rflags rsp 
--------------------------------------------------------------------------------
000d6e80: CLP; cmp esi, 9 ; je 0xd6e9c
read: esi rflags 
write: rflags 
--------------------------------------------------------------------------------
000d6f00: CLP; sub rsp, 0x58 ; lea rax, [rsp + 0x60] ; mov qword ptr [rsp + 0x30], rdx ; mov dword ptr [rsp + 8], 0x10 ; mov qword ptr [rsp + 0x10], rax ; lea rax, [rsp + 0x20] ; mov qword ptr [rsp + 0x18], rax ; call 0xd6e7c
read: rax rdx rip rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000d6f40: CLP; push rbp ; push rbx ; sub rsp, 0x68 ; lea rax, [rsp + 0x80] ; mov qword ptr [rsp + 0x40], rdx ; mov dword ptr [rsp + 0x18], 0x10 ; mov qword ptr [rsp + 0x20], rax ; lea rax, [rsp + 0x30] ; mov qword ptr [rsp + 0x28], rax ; mov eax, dword ptr [rip + 0x297800] ; test eax, eax ; jne 0xd6f84
read: eax rax rbp rbx rdx rflags rsp 
write: eax rax rflags rsp 
--------------------------------------------------------------------------------
000d6fd0: CLP; mov eax, 0x49 ; syscall ; cmp rax, -0xfff ; jae 0xd6fe0
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000d7000: CLP; push rbx ; mov rax, rdx ; mov r8d, 1 ; sub rsp, 0x20 ; cmp esi, 1 ; mov qword ptr [rsp], 0 ; mov rdx, rsp ; mov qword ptr [rsp + 8], 0 ; mov qword ptr [rsp + 0x18], 0 ; mov word ptr [rsp + 2], r8w ; mov qword ptr [rsp + 0x10], rax ; je 0xd70e4
read: esi r8w rax rbx rdx rflags rsp 
write: r8d rax rdx rflags rsp 
--------------------------------------------------------------------------------
000d7120: CLP; cmp dword ptr [rip + 0x297649], 0 ; jne 0xd713d
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000d712d: CLP; mov eax, 3 ; syscall ; cmp rax, -0xfff ; jae 0xd7175
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000d7190: CLP; mov eax, 0x20 ; syscall ; cmp rax, -0xfff ; jae 0xd71a0
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000d71c0: CLP; mov eax, 0x21 ; syscall ; cmp rax, -0xfff ; jae 0xd71d0
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000d71f0: CLP; mov eax, 0x124 ; syscall ; cmp rax, -0xfff ; jae 0xd7200
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000d7220: CLP; mov eax, 0x16 ; syscall ; cmp rax, -0xfff ; jae 0xd7230
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000d7250: CLP; mov eax, 0x125 ; syscall ; cmp rax, -0xfff ; jae 0xd7260
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000d7280: CLP; cmp dword ptr [rip + 0x2974e9], 0 ; jne 0xd729d
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000d728d: CLP; mov eax, 0x55 ; syscall ; cmp rax, -0xfff ; jae 0xd72d5
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000d72f0: CLP; mov eax, 0x50 ; syscall ; cmp rax, -0xfff ; jae 0xd7300
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000d7320: CLP; mov eax, 0x51 ; syscall ; cmp rax, -0xfff ; jae 0xd7330
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000d7350: CLP; push r15 ; push r14 ; push r13 ; push r12 ; mov r12, rdi ; push rbp ; push rbx ; mov rbx, rsi ; sub rsp, 0xf8 ; test rsi, rsi ; jne 0xd73b4
read: r12 r13 r14 r15 rbp rbx rdi rflags rsi rsp 
write: r12 rbx rflags rsp 
--------------------------------------------------------------------------------
000d7a40: CLP; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 0x1000 ; test rdi, rdi ; je 0xd7a94
read: r12 rbp rbx rdi rflags rsp 
write: rbp rflags rsp 
--------------------------------------------------------------------------------
000d7ad0: CLP; push rbx ; lea rdi, [rip + 0x5ece0] ; sub rsp, 0x120 ; call 0x3819c
read: rbx rip rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
000d7b80: CLP; mov eax, 0x5c ; syscall ; cmp rax, -0xfff ; jae 0xd7b90
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000d7bb0: CLP; mov eax, 0x5d ; syscall ; cmp rax, -0xfff ; jae 0xd7bc0
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000d7be0: CLP; mov eax, 0x5e ; syscall ; cmp rax, -0xfff ; jae 0xd7bf0
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000d7c10: CLP; movsxd r8, r8d ; mov r10d, ecx ; mov edx, edx ; movsxd rdi, edi ; mov eax, 0x104 ; syscall ; cmp rax, -0x1000 ; ja 0xd7c2c
read: ecx edi edx r8d rax rflags 
write: eax edx r10d r8 rdi rflags 
--------------------------------------------------------------------------------
000d7c50: CLP; push r13 ; push r12 ; push rbp ; push rbx ; mov ebx, edi ; sub rsp, 0x198 ; mov rbp, qword ptr [rip + 0x2911fe] ; lea rsi, [rsp + 0x30] ; mov dword ptr [rsp + 0xc], 0 ; mov r13d, dword ptr fs:[rbp] ; call 0xdbd4c
read: edi r12 r13 rbp rbx rip rsp 
write: ebx r13d rbp rflags rsi rsp 
--------------------------------------------------------------------------------
000d7f40: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; mov rbp, rsi ; push rbx ; sub rsp, 0x198 ; mov rbx, qword ptr [rip + 0x290f09] ; test rsi, rsi ; mov dword ptr [rsp + 0xc], 0 ; mov r14d, dword ptr fs:[rbx] ; je 0xd7f9c
read: r12 r13 r14 r15 rbp rbx rflags rsi rsp 
write: r14d rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000d8230: CLP; sub rsp, 0x48 ; mov rsi, rsp ; call 0xdbd4c
read: rip rsp 
write: rflags rsi rsp 
--------------------------------------------------------------------------------
000d8260: CLP; mov eax, 0x56 ; syscall ; cmp rax, -0xfff ; jae 0xd8270
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000d8290: CLP; mov r10, rcx ; movsxd r8, r8d ; movsxd rdx, edx ; movsxd rdi, edi ; mov eax, 0x109 ; syscall ; cmp rax, -0x1000 ; ja 0xd82ad
read: edi edx r8d rax rcx rflags 
write: eax r10 r8 rdi rdx rflags 
--------------------------------------------------------------------------------
000d82d0: CLP; mov eax, 0x58 ; syscall ; cmp rax, -0xfff ; jae 0xd82e0
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000d8300: CLP; movsxd rsi, esi ; mov eax, 0x10a ; syscall ; cmp rax, -0x1000 ; ja 0xd8314
read: esi rax rflags 
write: eax rflags rsi 
--------------------------------------------------------------------------------
000d8330: CLP; mov eax, 0x59 ; syscall ; cmp rax, -0xfff ; jae 0xd8340
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000d8360: CLP; mov r10, rcx ; movsxd rdi, edi ; mov eax, 0x10b ; syscall ; cmp rax, -0x1000 ; ja 0xd8377
read: edi rax rcx rflags 
write: eax r10 rdi rflags 
--------------------------------------------------------------------------------
000d8390: CLP; mov eax, 0x57 ; syscall ; cmp rax, -0xfff ; jae 0xd83a0
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000d83c0: CLP; movsxd rdx, edx ; movsxd rdi, edi ; mov eax, 0x107 ; syscall ; cmp rax, -0x1000 ; ja 0xd83d7
read: edi edx rax rflags 
write: eax rdi rdx rflags 
--------------------------------------------------------------------------------
000d83f0: CLP; mov eax, 0x54 ; syscall ; cmp rax, -0xfff ; jae 0xd8400
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000d8420: CLP; mov rdx, qword ptr [rsi + 8] ; mov rcx, qword ptr [rdi + 8] ; xor eax, eax ; cmp rcx, rdx ; setb dl ; seta al ; movzx edx, dl ; sub eax, edx ; jne 0xd8450
read: dl eax edx rcx rdx rflags 
write: al dl eax edx rcx rdx rflags 
--------------------------------------------------------------------------------
000d8460: CLP; push r12 ; mov r12, rdx ; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; mov edi, 0x10 ; call 0x1f3cc
read: r12 rbp rbx rdi rdx rip rsi rsp 
write: edi r12 rbp rbx rsp 
--------------------------------------------------------------------------------
000d84d0: CLP; push r14 ; mov r14d, r8d ; push r13 ; mov r13, rsi ; push r12 ; mov r12, rcx ; push rbp ; mov rbp, rdx ; push rbx ; mov rbx, rdi ; sub rsp, 0xa0 ; cmp byte ptr [rdx], 0x2e ; je 0xd862c
read: r12 r13 r14 r8d rbp rbx rcx rdi rdx rflags rsi rsp 
write: r12 r13 r14d rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000d8800: CLP; push r15 ; push r14 ; mov r14, rdi ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x58 ; mov eax, dword ptr [rdi + 0x28] ; mov qword ptr [rsp + 0x28], rsi ; xor esi, esi ; mov qword ptr [rsp + 0x18], rdx ; mov dword ptr [rsp + 0x24], eax ; mov rax, rdx ; add rax, 8
read: eax esi r12 r13 r14 r15 rax rbp rbx rdi rdx rsi rsp 
write: eax esi r14 rax rflags rsp 
--------------------------------------------------------------------------------
000d8eb0: CLP; push rbp ; mov rbp, rsp ; push r15 ; mov r15, rdi ; push r14 ; push r13 ; push r12 ; push rbx ; sub rsp, 0x118 ; cmp byte ptr [rdi], 0 ; je 0xd9388
read: r12 r13 r14 r15 rbp rbx rdi rflags rsp 
write: r15 rbp rflags rsp 
--------------------------------------------------------------------------------
000d9430: CLP; sub rsp, 8 ; mov ecx, edx ; xor r8d, r8d ; mov rdx, rsi ; xor esi, esi ; call 0xd8eac
read: edx esi r8d rip rsi rsp 
write: ecx esi r8d rdx rflags rsp 
--------------------------------------------------------------------------------
000d9450: CLP; test ecx, 0xffffffe0 ; mov r8d, ecx ; jne 0xd947c
read: ecx rflags 
write: r8d rflags 
--------------------------------------------------------------------------------
000d94a0: CLP; push r12 ; mov r12d, edx ; push rbp ; mov rbp, rdi ; push rbx ; cmp dword ptr [rdi + 0x30], edx ; mov rbx, rsi ; jl 0xd9544
read: edx r12 rbp rbx rdi rflags rsi rsp 
write: r12d rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000d95b0: CLP; push rbx ; mov eax, dword ptr [rsi] ; mov rbx, rdi ; lea eax, [rax + rdx + 0x100] ; cmp eax, 0xfffe ; mov dword ptr [rsi], eax ; ja 0xd95e4
read: eax rbx rdi rflags rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
000d9630: CLP; push r13 ; push r12 ; push rbp ; mov rbp, rsi ; push rbx ; sub rsp, 0x98 ; test dil, 8 ; mov rbx, rsp ; jne 0xd964d
read: dil r12 r13 rbp rbx rflags rsi rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000d9860: CLP; push r14 ; mov r14, rdx ; push r13 ; mov r13, rdi ; lea rdi, [rcx + 0x78] ; push r12 ; mov r12, rsi ; push rbp ; mov rbp, rcx ; lea rcx, [rcx + 0x117] ; push rbx ; test byte ptr [rsi], 8 ; cmove rdi, rcx ; call 0x1f3cc
read: r12 r13 r14 rbp rbx rcx rdi rdx rflags rip rsi rsp 
write: r12 r13 r14 rbp rcx rdi rflags rsp 
--------------------------------------------------------------------------------
000d9920: CLP; push r14 ; push r13 ; mov r13, rdi ; push r12 ; mov r12d, edx ; push rbp ; mov rbp, rsi ; push rbx ; mov ebx, edx ; sub rsp, 0x90 ; test edx, edx ; js 0xd99cc
read: edx r12 r13 r14 rbp rbx rdi rflags rsi rsp 
write: ebx r12d r13 rbp rflags rsp 
--------------------------------------------------------------------------------
000d9a30: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 0x68 ; mov rax, qword ptr [rdi] ; mov dword ptr [rsp + 0x58], esi ; mov rdi, qword ptr [rax + 0x28] ; mov qword ptr [rsp + 0x38], rax ; call 0xaeb5c
read: esi r12 r13 r14 r15 rax rbp rbx rdi rip rsp 
write: rax rbx rdi rflags rsp 
--------------------------------------------------------------------------------
000da240: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; mov ebx, esi ; sub rsp, 0x28 ; test esi, 0xffffff00 ; mov qword ptr [rsp], rdx ; jne 0xda52c
read: esi r12 r13 r14 r15 rbp rbx rdx rflags rsp 
write: ebx rflags rsp 
--------------------------------------------------------------------------------
000da5b0: CLP; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; mov rdi, qword ptr [rdi] ; test rdi, rdi ; je 0xda610
read: r12 rbp rbx rdi rflags rsp 
write: rbp rdi rflags rsp 
--------------------------------------------------------------------------------
000da6d0: CLP; push r14 ; push r13 ; push r12 ; mov r12, rdi ; push rbp ; push rbx ; mov rbp, qword ptr [rdi] ; test rbp, rbp ; je 0xda9c4
read: r12 r13 r14 rbp rbx rdi rflags rsp 
write: r12 rbp rflags rsp 
--------------------------------------------------------------------------------
000dacc0: CLP; cmp edx, 4 ; ja 0xdaccc
read: edx rflags 
write: rflags 
--------------------------------------------------------------------------------
000dacf0: CLP; push r13 ; mov r13d, esi ; push r12 ; push rbp ; push rbx ; sub rsp, 8 ; test esi, 0xfffffeff ; jne 0xdae5c
read: esi r12 r13 rbp rbx rflags rsp 
write: r13d rflags rsp 
--------------------------------------------------------------------------------
000dae80: CLP; cmp dword ptr [rip + 0x2938e9], 0 ; jne 0xdae9d
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000dae8d: CLP; mov eax, 7 ; syscall ; cmp rax, -0xfff ; jae 0xdaed5
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000daef0: CLP; sub rsp, 0x38 ; test rdx, rdx ; mov r10, rcx ; je 0xdaf3c
read: rcx rdx rflags rsp 
write: r10 rflags rsp 
--------------------------------------------------------------------------------
000dafd0: CLP; movsxd r10, ecx ; movsxd rdi, edi ; mov eax, 0xdd ; syscall ; mov ecx, eax ; xor edx, edx ; neg ecx ; cmp eax, 0xfffff000 ; cmova edx, ecx ; mov eax, edx ; ret
read: eax ecx edi edx rflags 
write: eax ecx edx r10 rdi rflags 
--------------------------------------------------------------------------------
000db000: CLP; push r14 ; mov rax, rsi ; shr rax, 0x3f ; push r13 ; push r12 ; push rbp ; mov rbp, rsi ; push rbx ; sub rsp, 0x120 ; test al, al ; je 0xdb03c
read: al r12 r13 r14 rax rbp rbx rflags rsi rsp 
write: rax rbp rflags rsp 
--------------------------------------------------------------------------------
000db1a0: CLP; push rbp ; mov ecx, 0x11d ; mov rbp, rdx ; mov r10, rdx ; mov r9d, edi ; mov rdx, rsi ; push rbx ; mov eax, ecx ; mov rbx, rsi ; xor esi, esi ; sub rsp, 8 ; syscall ; mov r8, rax ; xor eax, eax ; cmp r8d, 0xfffff000
read: eax ecx edi esi r8d rax rbp rbx rdx rsi rsp 
write: eax ecx esi r10 r8 r9d rbp rbx rdx rflags rsp 
--------------------------------------------------------------------------------
000db210: CLP; mov r10, rcx ; mov eax, 0x28 ; syscall ; cmp rax, -0xfff ; jae 0xdb223
read: rax rcx rflags 
write: eax r10 rflags 
--------------------------------------------------------------------------------
000db240: CLP; test rsi, rsi ; je 0xdb274
read: rflags rsi 
write: rflags 
--------------------------------------------------------------------------------
000db290: CLP; test edi, edi ; js 0xdb2c4
read: edi rflags 
write: rflags 
--------------------------------------------------------------------------------
000db2e0: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; mov ebp, esi ; mov esi, edx ; push rbx ; mov rbx, rdi ; sub rsp, 0x578 ; test esi, esi ; lea rdx, [rsp + 0x50] ; js 0xdb5d8
read: edx esi r12 r13 r14 r15 rbp rbx rdi rflags rsp 
write: ebp esi rbx rdx rflags rsp 
--------------------------------------------------------------------------------
000db920: CLP; push rbx ; mov rax, qword ptr [rdx + 0x48] ; mov rbx, rsi ; mov rsi, qword ptr [rdx + 8] ; mov r8d, dword ptr [rdx + 0x38] ; test rax, rax ; cmove rax, rsi ; mov qword ptr [rbx], rsi ; mov rsi, qword ptr [rdx + 0x30] ; mov qword ptr [rbx + 8], rax ; mov rax, qword ptr [rdx + 0x10] ; mov qword ptr [rbx + 0x10], rax ; mov rax, qword ptr [rdx + 0x18] ; mov qword ptr [rbx + 0x18], rax ; mov rax, qword ptr [rdx + 0x20]
read: rax rbx rflags rsi rsp 
write: r8d rax rbx rflags rsi rsp 
--------------------------------------------------------------------------------
000db9d0: CLP; cmp dword ptr [rip + 0x292d99], 0 ; jne 0xdb9f0
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000db9dd: CLP; mov r10, rcx ; mov eax, 0x115 ; syscall ; cmp rax, -0xfff ; jae 0xdba2b
read: rax rcx rflags 
write: eax r10 rflags 
--------------------------------------------------------------------------------
000dba40: CLP; mov eax, dword ptr [rip + 0x292d2a] ; mov r10, rcx ; test eax, eax ; jne 0xdba74
read: eax rcx rflags 
write: eax r10 rflags 
--------------------------------------------------------------------------------
000dbaf0: CLP; mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
000dbb00: CLP; mov eax, dword ptr [rdi] ; test eax, eax ; js 0xdbb14
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000dbb20: CLP; test esi, 0xffffeff0 ; je 0xdbb33
read: esi rflags 
write: rflags 
--------------------------------------------------------------------------------
000dbb70: CLP; test esi, 0xffffeff0 ; je 0xdbb9c
read: esi rflags 
write: rflags 
--------------------------------------------------------------------------------
000dbbd0: CLP; push r12 ; lea rax, [rip + 0x56cc7] ; lea rdx, [rip + 0x56dc0] ; mov r12, rdi ; push rbp ; push rbx ; mov ebx, esi ; nop dword ptr [rax + rax] ; mov ebp, dword ptr [rax] ; cmp ebp, ebx ; je 0xdbc1c
read: ebp ebx esi r12 rbp rbx rdi rflags rsp 
write: ebp ebx r12 rax rdx rflags rsp 
--------------------------------------------------------------------------------
000dbc70: CLP; cmp esi, 1 ; mov rax, rdx ; je 0xdbd2c
read: esi rdx rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000dbd50: CLP; mov ecx, 0x10 ; mov r8, rsi ; lea rdx, [rsp - 0x38] ; mov esi, 0x5401 ; movsxd rdi, edi ; mov eax, ecx ; syscall ; cmp rax, -0x1000 ; mov rdx, rax ; ja 0xdbde9
read: ecx edi rax rflags rsi 
write: eax ecx esi r8 rdi rdx rflags 
--------------------------------------------------------------------------------
000dbe00: CLP; sub rsp, 0x18 ; xor eax, eax ; mov esi, 0x540f ; lea rdx, [rsp + 0xc] ; call 0xdc63c
read: eax rip rsp 
write: eax esi rdx rflags rsp 
--------------------------------------------------------------------------------
000dbe40: CLP; sub rsp, 0x18 ; xor eax, eax ; lea rdx, [rsp + 0xc] ; mov dword ptr [rsp + 0xc], esi ; mov esi, 0x5410 ; call 0xdc63c
read: eax esi rip rsp 
write: eax esi rdx rflags rsp 
--------------------------------------------------------------------------------
000dbe70: CLP; mov r8d, dword ptr [rip + 0x2928f9] ; test r8d, r8d ; jne 0xdbeaa
read: r8d rflags 
write: r8d rflags 
--------------------------------------------------------------------------------
000dbf10: CLP; sub rsp, 8 ; mov edx, esi ; xor eax, eax ; mov esi, 0x540a ; call 0xdc63c
read: eax esi rip rsp 
write: eax edx esi rflags rsp 
--------------------------------------------------------------------------------
000dbf30: CLP; sub rsp, 8 ; mov edx, esi ; xor eax, eax ; mov esi, 0x540b ; call 0xdc63c
read: eax esi rip rsp 
write: eax edx esi rflags rsp 
--------------------------------------------------------------------------------
000dbf50: CLP; sub rsp, 8 ; test esi, esi ; jle 0xdbf84
read: esi rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000dbfa0: CLP; mov eax, dword ptr [rdi + 8] ; and dword ptr [rdi], 0xfffffa14 ; and dword ptr [rdi + 4], 0xfffffffe ; mov byte ptr [rdi + 0x17], 1 ; and dword ptr [rdi + 0xc], 0xffff7fb4 ; mov byte ptr [rdi + 0x16], 0 ; and eax, 0xfffffecf ; or eax, 0x30 ; mov dword ptr [rdi + 8], eax ; ret
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
000dbfd0: CLP; push r12 ; push rbp ; push rbx ; mov ebx, edi ; sub rsp, 0x10 ; mov eax, dword ptr [rip + 0x28ffec] ; test eax, eax ; jne 0xdc03c
read: eax edi r12 rbp rbx rflags rsp 
write: eax ebx rflags rsp 
--------------------------------------------------------------------------------
000dc090: CLP; mov eax, 0x61 ; syscall ; cmp rax, -0xfff ; jae 0xdc0a0
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000dc0c0: CLP; mov eax, 0xa0 ; syscall ; cmp rax, -0xfff ; jae 0xdc0d0
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000dc0f0: CLP; mov eax, 0x62 ; syscall ; cmp rax, -0xfff ; jae 0xdc100
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000dc120: CLP; push rbx ; sub rsp, 0x60 ; cmp edi, 2 ; lea rax, [rsp + 0x70] ; mov qword ptr [rsp + 0x38], rsi ; mov dword ptr [rsp + 0x18], 8 ; mov qword ptr [rsp + 0x20], rax ; lea rax, [rsp + 0x30] ; mov qword ptr [rsp + 0x28], rax ; je 0xdc1dc
read: edi rax rbx rflags rsi rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000dc270: CLP; push r12 ; movsxd r12, esi ; push rbp ; push rbx ; lea ebx, [rdi - 1] ; sub rsp, 0x10 ; cmp ebx, 5 ; ja 0xdc2bc
read: ebx esi r12 rbp rbx rflags rsp 
write: ebx r12 rflags rsp 
--------------------------------------------------------------------------------
000dc2e0: CLP; push rbp ; xor ebp, ebp ; push rbx ; mov rbx, rdi ; sub rsp, 0x98 ; test rdi, rdi ; je 0xdc3b5
read: ebp rbp rbx rdi rflags rsp 
write: ebp rbx rflags rsp 
--------------------------------------------------------------------------------
000dc3d0: CLP; push rbx ; mov rbx, rsi ; xor esi, esi ; call 0xdc2dc
read: esi rbx rip rsi rsp 
write: esi rbx rflags rsp 
--------------------------------------------------------------------------------
000dc410: CLP; mov ecx, 0x8c ; mov esi, esi ; movsxd rdi, edi ; mov eax, ecx ; syscall ; cmp rax, -0x1000 ; mov rdx, rax ; ja 0xdc436
read: ecx edi esi rax rflags 
write: eax ecx esi rdi rdx rflags 
--------------------------------------------------------------------------------
000dc450: CLP; mov eax, 0x8d ; syscall ; cmp rax, -0xfff ; jae 0xdc460
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000dc480: CLP; push r12 ; xor esi, esi ; push rbp ; mov ebp, edi ; xor edi, edi ; push rbx ; mov rbx, qword ptr [rip + 0x28c9d3] ; mov r12d, dword ptr fs:[rbx] ; mov dword ptr fs:[rbx], 0 ; call 0xdc40c
read: edi esi r12 rbp rbx rip rsp 
write: ebp edi esi r12d rbx rflags rsp 
--------------------------------------------------------------------------------
000dc510: CLP; mov ecx, 0xc ; mov rsi, rdi ; mov eax, ecx ; syscall ; cmp rax, -0x1000 ; mov rdx, rax ; ja 0xdc550
read: ecx rax rdi rflags 
write: eax ecx rdx rflags rsi 
--------------------------------------------------------------------------------
000dc580: CLP; push r12 ; mov r12, qword ptr [rip + 0x28c92b] ; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, qword ptr [r12] ; test rbx, rbx ; je 0xdc5cc
read: r12 rbp rbx rdi rflags rsp 
write: r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000dc620: CLP; mov rax, qword ptr [rip + 0x28c83d] ; mov dword ptr fs:[rax], 0x26 ; mov rax, -1 ; ret
read: 
write: rax 
--------------------------------------------------------------------------------
000dc640: CLP; mov eax, 0x10 ; syscall ; cmp rax, -0xfff ; jae 0xdc650
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000dc670: CLP; mov eax, dword ptr [rip + 0x2920fa] ; test eax, eax ; jne 0xdc6a1
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000dc710: CLP; mov eax, dword ptr [rip + 0x29205a] ; test eax, eax ; jne 0xdc741
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000dc7b0: CLP; mov eax, dword ptr [rip + 0x291fba] ; mov r10, rcx ; test eax, eax ; jne 0xdc7e4
read: eax rcx rflags 
write: eax r10 rflags 
--------------------------------------------------------------------------------
000dc860: CLP; mov eax, dword ptr [rip + 0x291f0a] ; mov r10, rcx ; test eax, eax ; jne 0xdc894
read: eax rcx rflags 
write: eax r10 rflags 
--------------------------------------------------------------------------------
000dc910: CLP; mov eax, dword ptr [rip + 0x291e56] ; test eax, eax ; jne 0xdc93f
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000dc980: CLP; mov eax, dword ptr [rip + 0x291de6] ; test eax, eax ; jne 0xdc9af
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000dc9f0: CLP; cmp edi, -1 ; je 0xdca2c
read: edi rflags 
write: rflags 
--------------------------------------------------------------------------------
000dca90: CLP; cmp edi, -1 ; je 0xdcacc
read: edi rflags 
write: rflags 
--------------------------------------------------------------------------------
000dcb30: CLP; mov rax, qword ptr [rip + 0x28c325] ; mov rax, qword ptr [rax + 0x18] ; test rax, rax ; je 0xdcb42
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000dcb70: CLP; sub rsp, 0x18 ; mov edi, 7 ; mov rsi, rsp ; call 0xdc08c
read: rip rsp 
write: edi rflags rsi rsp 
--------------------------------------------------------------------------------
000dcba0: CLP; push r14 ; mov r14, rdi ; push r13 ; push r12 ; push rbp ; push rbx ; mov rbx, rsi ; sub rsp, 0x190 ; mov rdi, rsp ; call 0xb284c
read: r12 r13 r14 rbp rbx rdi rip rsi rsp 
write: r14 rbx rdi rflags rsp 
--------------------------------------------------------------------------------
000dcc40: CLP; mov eax, 0xaa ; syscall ; cmp rax, -0xfff ; jae 0xdcc50
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000dcc70: CLP; push r12 ; mov r12, rdi ; push rbp ; mov rbp, rsi ; push rbx ; sub rsp, 0x190 ; mov rdi, rsp ; mov rbx, rsp ; call 0xb284c
read: r12 rbp rbx rdi rip rsi rsp 
write: r12 rbp rbx rdi rflags rsp 
--------------------------------------------------------------------------------
000dccf0: CLP; mov eax, 0xab ; syscall ; cmp rax, -0xfff ; jae 0xdcd00
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000dcd20: CLP; cmp dword ptr [rip + 0x291a49], 0 ; jne 0xdcd40
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000dcd2d: CLP; mov r10, rcx ; mov eax, 0x17 ; syscall ; cmp rax, -0xfff ; jae 0xdcd7b
read: rax rcx rflags 
write: eax r10 rflags 
--------------------------------------------------------------------------------
000dcd90: CLP; push rbp ; mov r10, rcx ; push rbx ; sub rsp, 0x58 ; test r8, r8 ; je 0xdcdec
read: r8 rbp rbx rcx rflags rsp 
write: r10 rflags rsp 
--------------------------------------------------------------------------------
000dce90: CLP; mov eax, 0xa3 ; syscall ; cmp rax, -0xfff ; jae 0xdcea0
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000dcec0: CLP; mov eax, 0xa1 ; syscall ; cmp rax, -0xfff ; jae 0xdced0
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000dcef0: CLP; cmp dword ptr [rip + 0x291879], 0 ; jne 0xdcf0d
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000dcefd: CLP; mov eax, 0x4a ; syscall ; cmp rax, -0xfff ; jae 0xdcf45
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000dcf60: CLP; mov eax, 0xa2 ; syscall ; cmp rax, -0xfff ; jae 0xdcf70
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000dcf90: CLP; cmp dword ptr [rip + 0x2917d9], 0 ; jne 0xdcfad
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000dcf9d: CLP; mov eax, 0x4b ; syscall ; cmp rax, -0xfff ; jae 0xdcfe5
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000dd000: CLP; mov eax, 0x132 ; syscall ; cmp rax, -0xfff ; jae 0xdd010
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000dd030: CLP; movsxd rdx, edi ; mov esi, 0x28121969 ; mov rdi, -0x11e2153 ; mov eax, 0xa9 ; syscall ; cmp rax, -0x1000 ; ja 0xdd050
read: edi rax rflags 
write: eax esi rdi rdx rflags 
--------------------------------------------------------------------------------
000dd070: CLP; push rbp ; lea rdi, [rip + 0x59889] ; xor edx, edx ; xor esi, esi ; xor eax, eax ; mov rbp, rsp ; push r15 ; push r14 ; push r13 ; push r12 ; push rbx ; sub rsp, 0xa8 ; call 0xd6819
read: eax edx esi r12 r13 r14 r15 rbp rbx rip rsp 
write: eax edx esi rbp rdi rflags rsp 
--------------------------------------------------------------------------------
000dd230: CLP; push rbx ; sub rsp, 0x10 ; mov rax, qword ptr [rip + 0x28bbe8] ; mov dword ptr [rsp + 0xc], edi ; mov eax, dword ptr [rax] ; test eax, eax ; jne 0xdd2c4
read: eax edi rbx rflags rsp 
write: eax rax rflags rsp 
--------------------------------------------------------------------------------
000dd2f0: CLP; mov rax, qword ptr [rip + 0x28bb6d] ; mov dword ptr fs:[rax], 0x26 ; mov eax, 0xffffffff ; ret
read: 
write: eax rax 
--------------------------------------------------------------------------------
000dd310: CLP; mov eax, 0x99 ; syscall ; cmp rax, -0xfff ; jae 0xdd320
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000dd340: CLP; mov eax, 0xa7 ; syscall ; cmp rax, -0xfff ; jae 0xdd350
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000dd370: CLP; mov eax, 0xa8 ; syscall ; cmp rax, -0xfff ; jae 0xdd380
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000dd3a0: CLP; push rbx ; xor edx, edx ; xor esi, esi ; mov ecx, 2 ; mov rbx, rdi ; call 0x69afc
read: edx esi rbx rdi rip rsp 
write: ecx edx esi rbx rflags rsp 
--------------------------------------------------------------------------------
000dd3d0: CLP; sub rsp, 8 ; xor ecx, ecx ; xor edx, edx ; xor esi, esi ; call 0x69afc
read: ecx edx esi rip rsp 
write: ecx edx esi rflags rsp 
--------------------------------------------------------------------------------
000dd3f0: CLP; push rbx ; xor edx, edx ; xor esi, esi ; mov ecx, 1 ; mov rbx, rdi ; call 0x69afc
read: edx esi rbx rdi rip rsp 
write: ecx edx esi rbx rflags rsp 
--------------------------------------------------------------------------------
000dd420: CLP; sub rsp, 8 ; mov edx, esi ; xor ecx, ecx ; xor esi, esi ; call 0x69afc
read: ecx esi rip rsp 
write: ecx edx esi rflags rsp 
--------------------------------------------------------------------------------
000dd440: CLP; test esi, esi ; js 0xdd45c
read: esi rflags 
write: rflags 
--------------------------------------------------------------------------------
000dd480: CLP; test esi, esi ; js 0xdd49c
read: esi rflags 
write: rflags 
--------------------------------------------------------------------------------
000dd4c0: CLP; sub rsp, 0x48 ; mov eax, edi ; xor edi, edi ; lea rdx, [rsp + 0x20] ; mov qword ptr [rsp + 0x18], rax ; mov eax, esi ; mov rsi, rsp ; mov qword ptr [rsp + 0x10], 0 ; mov qword ptr [rsp], 0 ; mov qword ptr [rsp + 8], rax ; call 0xa60cc
read: edi esi rax rip rsp 
write: eax edi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000dd520: CLP; mov eax, edi ; mov edx, 0x431bde83 ; sub rsp, 0x18 ; mul edx ; xor esi, esi ; shr edx, 0x12 ; mov eax, edx ; imul edx, edx, 0xf4240 ; mov qword ptr [rsp], rax ; sub edi, edx ; imul rdi, rdi, 0x3e8 ; mov qword ptr [rsp + 8], rdi ; mov rdi, rsp ; call 0xb2dac
read: eax edi edx esi rax rdi rip rsp 
write: eax edi edx esi rdi rflags rsp 
--------------------------------------------------------------------------------
000dd570: CLP; test rsi, rsi ; mov rax, qword ptr [rip + 0x28b8ea] ; je 0xdd58c
read: rflags rsi 
write: rax rflags 
--------------------------------------------------------------------------------
000dd5a0: CLP; test rsi, rsi ; mov rax, qword ptr [rip + 0x28b8ba] ; je 0xdd5bc
read: rflags rsi 
write: rax rflags 
--------------------------------------------------------------------------------
000dd5d0: CLP; lea rax, [rsp + 8] ; lea r8d, [rdi - 1] ; mov qword ptr [rsp - 0x28], rsi ; mov qword ptr [rsp - 0x20], rdx ; mov qword ptr [rsp - 0x18], rcx ; lea r10, [rsp - 0x50] ; mov qword ptr [rsp - 0x40], rax ; lea rax, [rsp - 0x30] ; cmp r8d, 2 ; movsxd rsi, dword ptr [rax + 8] ; mov rdx, qword ptr [rax + 0x10] ; mov edi, edi ; mov qword ptr [rsp - 0x38], rax ; cmova r10, qword ptr [rax + 0x18] ; mov eax, 0x65
read: edi r10 r8d rax rcx rdx rflags rsi 
write: eax edi r10 r8d rax rdx rflags rsi 
--------------------------------------------------------------------------------
000dd660: CLP; push r12 ; lea rsi, [rip + 0x592a7] ; lea r12, [rdi + 0x38] ; push rbp ; lea rbp, [rdi + 0x10] ; push rbx ; mov rax, qword ptr [rdi + 0x10] ; mov rbx, rdi ; mov qword ptr [rdi + 0x38], rax ; mov rax, qword ptr [rdi + 0x18] ; mov qword ptr [rdi + 0x40], rax ; mov rax, qword ptr [rdi + 0x20] ; mov qword ptr [rdi + 0x48], rax ; mov rax, qword ptr [rdi + 0x28] ; mov qword ptr [rdi + 0x50], rax
read: r12 rax rbp rbx rdi rsp 
write: r12 rax rbp rbx rsi rsp 
--------------------------------------------------------------------------------
000dd760: CLP; push rbx ; mov ebx, edi ; sub rsp, 0x10 ; cmp qword ptr [rip + 0x28e875], 0 ; je 0xdd7b4
read: edi rbx rflags rsp 
write: ebx rflags rsp 
--------------------------------------------------------------------------------
000dd810: CLP; sub rsp, 8 ; mov edi, 1 ; call 0xdd75c
read: rip rsp 
write: edi rflags rsp 
--------------------------------------------------------------------------------
000dd840: CLP; push rbx ; xor edi, edi ; call 0xdd75c
read: edi rbx rip rsp 
write: edi rflags rsp 
--------------------------------------------------------------------------------
000dd890: CLP; push r12 ; mov r12, rdi ; mov edi, 1 ; push rbp ; push rbx ; call 0xdd75c
read: r12 rbp rbx rdi rip rsp 
write: edi r12 rsp 
--------------------------------------------------------------------------------
000dd920: CLP; push r12 ; mov r12, rdi ; mov edi, 1 ; push rbp ; push rbx ; call 0xdd75c
read: r12 rbp rbx rdi rip rsp 
write: edi r12 rsp 
--------------------------------------------------------------------------------
000dd9b0: CLP; mov rdi, qword ptr [rip + 0x28e625] ; test rdi, rdi ; je 0xdd9d8
read: rdi rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
000dd9e0: CLP; sub rsp, 8 ; mov edi, 0x1000 ; call 0x1f3cc
read: rip rsp 
write: edi rflags rsp 
--------------------------------------------------------------------------------
000dda10: CLP; mov edx, dword ptr [rip + 0x290d56] ; push rbx ; mov rbx, rdi ; test edx, edx ; jne 0xdda5c
read: edx rbx rdi rflags rsp 
write: edx rbx rflags rsp 
--------------------------------------------------------------------------------
000ddad0: CLP; mov rax, rdi ; lea rcx, [rdi + 1] ; mov rdx, rdi ; jmp 0xddaf0
read: rdi 
write: rax rcx rdx 
--------------------------------------------------------------------------------
000ddba0: CLP; push rbp ; mov rbp, rsp ; push r12 ; mov r12, rdi ; mov rdi, rsi ; push rbx ; mov rbx, rsi ; call 0x856dc
read: r12 rbp rbx rdi rip rsi rsp 
write: r12 rbp rbx rdi rsp 
--------------------------------------------------------------------------------
000ddc10: CLP; test rdi, rdi ; je 0xddc2c
read: rdi rflags 
write: rflags 
--------------------------------------------------------------------------------
000ddc40: CLP; push r14 ; mov r14, rsi ; push r13 ; mov r13d, ecx ; push r12 ; mov r12, rdi ; push rbp ; mov rbp, rdx ; push rbx ; sub rsp, 0x400 ; mov rbx, rsp ; nop word ptr [rax + rax] ; mov rdx, r12 ; mov esi, r13d ; mov rdi, rbp
read: ecx r12 r13 r13d r14 rbp rbx rdi rdx rsi rsp 
write: esi r12 r13d r14 rbp rbx rdi rdx rflags rsp 
--------------------------------------------------------------------------------
000ddf50: CLP; push rbp ; mov edx, 2 ; mov rbp, rsp ; push r15 ; push r14 ; mov r14, rdi ; push r13 ; push r12 ; push rbx ; sub rsp, 0x38 ; mov eax, dword ptr [rsi + 0x20] ; mov r15, qword ptr [rsi] ; mov r13, qword ptr [rsi + 8] ; mov r12, qword ptr [rsi + 0x10] ; mov rbx, qword ptr [rsi + 0x18]
read: r12 r13 r14 r15 rbp rbx rdi rsp 
write: eax edx r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000de4e0: CLP; push r12 ; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; mov rdi, rsi ; call 0x856dc
read: r12 rbp rbx rdi rip rsi rsp 
write: rbp rbx rdi rsp 
--------------------------------------------------------------------------------
000de570: CLP; mov eax, 0xeb ; syscall ; cmp rax, -0x1000 ; ja 0xde581
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000de5a0: CLP; test rsi, rsi ; je 0xde614
read: rflags rsi 
write: rflags 
--------------------------------------------------------------------------------
000de650: CLP; test rsi, rsi ; je 0xde6bc
read: rflags rsi 
write: rflags 
--------------------------------------------------------------------------------
000de6f0: CLP; test rsi, rsi ; je 0xde71c
read: rflags rsi 
write: rflags 
--------------------------------------------------------------------------------
000de740: CLP; mov eax, 0x4c ; syscall ; cmp rax, -0xfff ; jae 0xde750
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000de770: CLP; mov eax, 0x4d ; syscall ; cmp rax, -0xfff ; jae 0xde780
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000de7a0: CLP; test rdi, rdi ; mov rax, qword ptr [rip + 0x28a6ba] ; je 0xde7bc
read: rdi rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000de7d0: CLP; test edi, edi ; mov rax, qword ptr [rip + 0x28a68b] ; js 0xde7ec
read: edi rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000de800: CLP; test rsi, rsi ; je 0xde81c
read: rflags rsi 
write: rflags 
--------------------------------------------------------------------------------
000de830: CLP; mov rdx, qword ptr [rdi] ; mov rax, qword ptr [rdi + 8] ; test rdx, rdx ; je 0xde840
read: rdx rflags 
write: rax rdx rflags 
--------------------------------------------------------------------------------
000de850: CLP; movzx ecx, byte ptr [rdi] ; movsx edx, cl ; test edx, edx ; je 0xde92e
read: cl edx rflags 
write: ecx edx rflags 
--------------------------------------------------------------------------------
000de940: CLP; sub rsp, 8 ; mov rdi, qword ptr [rip + 0x28d7f9] ; test rdi, rdi ; je 0xde96c
read: rdi rflags rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
000de9b0: CLP; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 8 ; mov rdx, qword ptr [rip + 0x28d783] ; test rdx, rdx ; je 0xdea98
read: r12 r13 rbp rbx rdx rflags rsp 
write: rdx rflags rsp 
--------------------------------------------------------------------------------
000dece0: CLP; mov rdi, qword ptr [rip + 0x28d45d] ; mov eax, 1 ; test rdi, rdi ; je 0xded16
read: rdi rflags 
write: eax rdi rflags 
--------------------------------------------------------------------------------
000ded20: CLP; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 8 ; call 0xde93c
read: rbp rbx rdi rip rsp 
write: rbp rflags rsp 
--------------------------------------------------------------------------------
000ded80: CLP; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x98 ; mov rdi, qword ptr [rip + 0x28d3d0] ; call 0x1f46c
read: r12 r13 rbp rbx rip rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
000defc0: CLP; sub rsp, 8 ; mov rdx, qword ptr [rip + 0x28d1a1] ; test rdx, rdx ; je 0xdefec
read: rdx rflags rsp 
write: rdx rflags rsp 
--------------------------------------------------------------------------------
000df010: CLP; sub rsp, 8 ; mov rdi, qword ptr [rip + 0x28d149] ; call 0x1f46c
read: rip rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
000df060: CLP; sub rsp, 8 ; call 0xded7c
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000df080: CLP; push r15 ; lea rsi, [rip + 0x578ea] ; mov r15, rdi ; lea rdi, [rip + 0x56949] ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x88 ; call 0x6ca9c
read: r12 r13 r14 r15 rbp rbx rdi rip rsp 
write: r15 rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000df2c0: CLP; push rbp ; mov edi, 0x48 ; mov rbp, rsp ; push r13 ; push r12 ; push rbx ; sub rsp, 8 ; call 0xb4c0c
read: r12 r13 rbp rbx rip rsp 
write: edi rbp rflags rsp 
--------------------------------------------------------------------------------
000df3c0: CLP; cmp dword ptr [rip + 0x28f3a9], 0 ; je 0xdf3d4
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000df400: CLP; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 8 ; test rdi, rdi ; je 0xdf416
read: r12 r13 rbp rbx rdi rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000df5f0: CLP; sub rsp, 8 ; mov edi, dword ptr [rip + 0x289bfa] ; call 0xd711c
read: rip rsp 
write: edi rflags rsp 
--------------------------------------------------------------------------------
000df620: CLP; push r15 ; mov r15d, edi ; push r14 ; push r13 ; mov r13, rcx ; push r12 ; mov r12, rdx ; push rbp ; mov ebp, esi ; push rbx ; sub rsp, 0xa8 ; mov rax, qword ptr [rip + 0x289821] ; test edi, 0xfffffc00 ; mov qword ptr [rsp + 0x10], 0 ; mov qword ptr [rsp + 0x18], 0
read: edi esi r12 r13 r14 r15 rbp rbx rcx rdx rsp 
write: ebp r12 r13 r15d rax rflags rsp 
--------------------------------------------------------------------------------
000dfbf0: CLP; sub rsp, 0xd8 ; test al, al ; mov qword ptr [rsp + 0x30], rdx ; mov qword ptr [rsp + 0x38], rcx ; mov qword ptr [rsp + 0x40], r8 ; mov qword ptr [rsp + 0x48], r9 ; je 0xdfc46
read: al r8 r9 rcx rdx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000dfc90: CLP; sub rsp, 0xd8 ; test al, al ; mov qword ptr [rsp + 0x38], rcx ; mov qword ptr [rsp + 0x40], r8 ; mov qword ptr [rsp + 0x48], r9 ; je 0xdfce1
read: al r8 r9 rcx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000dfd30: CLP; sub rsp, 8 ; mov rcx, rdx ; mov rdx, rsi ; mov esi, 0xffffffff ; call 0xdf61c
read: rdx rip rsi rsp 
write: esi rcx rdx rflags rsp 
--------------------------------------------------------------------------------
000dfd60: CLP; mov r10d, esi ; push rbx ; mov r9, rdi ; mov esi, 1 ; xor eax, eax ; cmp dword ptr [rip + 0x28e9fb], 0 ; je 0xdfd83
read: eax esi rbx rdi rflags rsp 
write: eax esi r10d r9 rflags rsp 
--------------------------------------------------------------------------------
000dfdf0: CLP; push rbx ; mov esi, 1 ; xor eax, eax ; cmp dword ptr [rip + 0x28e971], 0 ; je 0xdfe0d
read: eax rbx rflags rsp 
write: eax esi rflags rsp 
--------------------------------------------------------------------------------
000dfe90: CLP; test edi, edi ; mov eax, dword ptr [rip + 0x289354] ; je 0xdfea0
read: edi rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000dfeb0: CLP; mov rax, rdi ; mov rdi, rsi ; mov rsi, rdx ; mov rdx, rcx ; mov r10, r8 ; mov r8, r9 ; mov r9, qword ptr [rsp + 8] ; syscall ; cmp rax, -0xfff ; jae 0xdfed2
read: r8 r9 rax rcx rdi rdx rflags rsi 
write: r10 r8 r9 rax rdi rdx rflags rsi 
--------------------------------------------------------------------------------
000dfef0: CLP; push r12 ; mov r12d, edi ; push rbp ; mov ebp, esi ; push rbx ; sub rsp, 0x90 ; call 0xb2e1c
read: edi esi r12 rbp rbx rip rsp 
write: ebp r12d rflags rsp 
--------------------------------------------------------------------------------
000e0050: CLP; mov r10, rcx ; mov eax, 9 ; syscall ; cmp rax, -0xfff ; jae 0xe0063
read: rax rcx rflags 
write: eax r10 rflags 
--------------------------------------------------------------------------------
000e0080: CLP; mov eax, 0xb ; syscall ; cmp rax, -0xfff ; jae 0xe0090
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e00b0: CLP; mov eax, 0xa ; syscall ; cmp rax, -0xfff ; jae 0xe00c0
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e00e0: CLP; cmp dword ptr [rip + 0x28e689], 0 ; jne 0xe00fd
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000e00ed: CLP; mov eax, 0x1a ; syscall ; cmp rax, -0xfff ; jae 0xe0135
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e0150: CLP; mov eax, 0x1c ; syscall ; cmp rax, -0xfff ; jae 0xe0160
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e0180: CLP; mov eax, 0x1b ; syscall ; cmp rax, -0xfff ; jae 0xe0190
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e01b0: CLP; mov r10, rcx ; mov eax, 0xd8 ; syscall ; cmp rax, -0xfff ; jae 0xe01c3
read: rax rcx rflags 
write: eax r10 rflags 
--------------------------------------------------------------------------------
000e01e0: CLP; mov eax, 0x95 ; syscall ; cmp rax, -0xfff ; jae 0xe01f0
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e0210: CLP; mov eax, 0x96 ; syscall ; cmp rax, -0xfff ; jae 0xe0220
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e0240: CLP; mov eax, 0x97 ; syscall ; cmp rax, -0xfff ; jae 0xe0250
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e0270: CLP; mov eax, 0x98 ; syscall ; cmp rax, -0xfff ; jae 0xe0280
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e02a0: CLP; push r12 ; movapd xmm1, xmm0 ; mov r12, rdx ; push rbp ; mov rbp, rsi ; push rbx ; mov ebx, edi ; sub rsp, 0x10 ; mov rcx, qword ptr [rip + 0x28a509] ; test rcx, rcx ; je 0xe02ec
read: edi r12 rbp rbx rcx rdx rflags rsi rsp xmm0 
write: ebx r12 rbp rcx rflags rsp xmm1 
--------------------------------------------------------------------------------
000e0360: CLP; lea rcx, [rip + 0x28bee5] ; sub rsp, 8 ; mov r8d, 0x14 ; call 0xe066c
read: rip rsp 
write: r8d rcx rflags rsp 
--------------------------------------------------------------------------------
000e0390: CLP; push rbx ; cmp edi, 0x11 ; mov rbx, rsi ; mov edx, 0x11 ; lea rsi, [rip + 0x565fb] ; mov eax, 1 ; cmovle edx, edi ; mov rdi, rbx ; call 0x5231c
read: edi edx rbx rflags rip rsi rsp 
write: eax edx rbx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000e03c0: CLP; push r15 ; push r14 ; push r13 ; push r12 ; mov r12, rcx ; push rbp ; push rbx ; sub rsp, 0x18 ; test rcx, rcx ; je 0xe0574
read: r12 r13 r14 r15 rbp rbx rcx rflags rsp 
write: r12 rflags rsp 
--------------------------------------------------------------------------------
000e0670: CLP; push r15 ; movapd xmm1, xmm0 ; mov r15, r8 ; push r14 ; mov r14, rcx ; push r13 ; mov r13, rdx ; push r12 ; mov r12d, edi ; push rbp ; mov rbp, rsi ; push rbx ; xor ebx, ebx ; sub rsp, 0x18 ; movsd qword ptr [rsp + 8], xmm1
read: ebx edi r12 r13 r14 r15 r8 rbp rbx rcx rdx rsi rsp xmm0 xmm1 
write: ebx r12d r13 r14 r15 rbp rflags rsp xmm1 
--------------------------------------------------------------------------------
000e0850: CLP; push r12 ; mov r12, rdx ; push rbp ; mov rbp, rsi ; push rbx ; mov ebx, edi ; sub rsp, 0x20 ; mov rcx, qword ptr [rip + 0x289f65] ; fld xword ptr [rsp + 0x40] ; test rcx, rcx ; je 0xe089c
read: edi r12 rbp rbx rcx rdx rflags rsi rsp 
write: ebx fpsw r12 rbp rcx rflags rsp 
--------------------------------------------------------------------------------
000e0910: CLP; sub rsp, 0x18 ; lea rcx, [rip + 0x28b981] ; mov r8d, 0x21 ; fld xword ptr [rsp + 0x20] ; fstp xword ptr [rsp] ; call 0xe0c2c
read: rip rsp 
write: fpsw r8d rcx rflags rsp 
--------------------------------------------------------------------------------
000e0950: CLP; push rbx ; mov edx, 0x15 ; mov rbx, rsi ; lea rsi, [rip + 0x56048] ; sub rsp, 0x10 ; cmp edi, 0x15 ; fld xword ptr [rsp + 0x20] ; cmovle edx, edi ; mov rdi, rbx ; xor eax, eax ; fstp xword ptr [rsp] ; call 0x5231c
read: eax edi edx rbx rflags rip rsi rsp 
write: eax edx fpsw rbx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000e0990: CLP; push r15 ; push r14 ; push r13 ; push r12 ; mov r12, rcx ; push rbp ; push rbx ; sub rsp, 0x38 ; test rcx, rcx ; fld xword ptr [rsp + 0x70] ; je 0xe0b38
read: r12 r13 r14 r15 rbp rbx rcx rflags rsp 
write: fpsw r12 rflags rsp 
--------------------------------------------------------------------------------
000e0c30: CLP; push r15 ; mov r15, r8 ; push r14 ; mov r14, rcx ; push r13 ; mov r13, rdx ; push r12 ; mov r12d, edi ; push rbp ; mov rbp, rsi ; push rbx ; xor ebx, ebx ; sub rsp, 0x38 ; fld xword ptr [rsp + 0x70] ; fld st(0)
read: ebx edi r12 r13 r14 r15 r8 rbp rbx rcx rdx rsi rsp st0 
write: ebx fpsw r12d r13 r14 r15 rbp rflags rsp 
--------------------------------------------------------------------------------
000e0e10: CLP; lea rdi, [rip + 0x28b4f5] ; sub rsp, 8 ; call 0xe0f5c
read: rip rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
000e0e30: CLP; sub rsp, 0x18 ; lea r8, [rip + 0x28b4d1] ; lea rcx, [rsp + 8] ; call 0xe0f9c
read: rip rsp 
write: r8 rcx rflags rsp 
--------------------------------------------------------------------------------
000e0e60: CLP; lea rsi, [rip + 0x28b4a5] ; sub rsp, 8 ; call 0xe0e7c
read: rip rsp 
write: rflags rsi rsp 
--------------------------------------------------------------------------------
000e0e80: CLP; test rsi, rsi ; push rbx ; mov rbx, rsi ; je 0xe0f41
read: rbx rflags rsi rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
000e0f60: CLP; test rdi, rdi ; push rbx ; mov rbx, rdi ; je 0xe0f84
read: rbx rdi rflags rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
000e0fa0: CLP; push r15 ; mov r15, rdi ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x38 ; mov dword ptr [rsp + 0x20], edx ; mov qword ptr [rsp + 0x28], rsi ; mov qword ptr [rsp + 0x18], rcx ; mov qword ptr [rsp + 0x10], r8 ; call 0x856dc
read: edx r12 r13 r14 r15 r8 rbp rbx rcx rdi rip rsi rsp 
write: r15 rflags rsp 
--------------------------------------------------------------------------------
000e11b0: CLP; push r12 ; mov r12d, edx ; push rbp ; mov rbp, rsi ; push rbx ; cmp qword ptr [rdi + 8], 0 ; mov rbx, rdi ; je 0xe122c
read: edx r12 rbp rbx rdi rflags rsi rsp 
write: r12d rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000e1250: CLP; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov rdi, qword ptr [rdi + 8] ; test rdi, rdi ; je 0xe126e
read: rbp rbx rdi rflags rsi rsp 
write: rbp rbx rdi rflags rsp 
--------------------------------------------------------------------------------
000e12b0: CLP; cmp r9d, 1 ; mov rax, qword ptr [rdi + 0x10] ; je 0xe1364
read: r9d rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000e13e0: CLP; push r15 ; push r14 ; push r13 ; push r12 ; mov r12, rsi ; push rbp ; push rbx ; sub rsp, 0x28 ; test rsi, rsi ; mov qword ptr [rsp + 0x10], rdi ; mov qword ptr [rsp + 0x18], rdx ; je 0xe151c
read: r12 r13 r14 r15 rbp rbx rdi rdx rflags rsi rsp 
write: r12 rflags rsp 
--------------------------------------------------------------------------------
000e1530: CLP; push r12 ; test rsi, rsi ; mov r12, rdi ; push rbp ; mov rbp, rdx ; push rbx ; jne 0xe1562
read: r12 rbp rbx rdi rdx rflags rsi rsp 
write: r12 rbp rflags rsp 
--------------------------------------------------------------------------------
000e1580: CLP; push rbp ; mov rbp, rsp ; push r15 ; push r14 ; push r13 ; push r12 ; push rbx ; mov rbx, rsi ; sub rsp, 0x38 ; mov qword ptr [rbp - 0x40], rdi ; mov qword ptr [rbp - 0x48], rdx ; sub rsp, 0x150 ; lea r12, [rsp + 0xf] ; and r12, 0xfffffffffffffff0 ; test rsi, rsi
read: r12 r13 r14 r15 rbp rbx rdi rdx rsi rsp 
write: r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000e1a20: CLP; test rdi, rdi ; jne 0xe1a2c
read: rdi rflags 
write: rflags 
--------------------------------------------------------------------------------
000e1a50: CLP; test rdi, rdi ; je 0xe1a66
read: rdi rflags 
write: rflags 
--------------------------------------------------------------------------------
000e1a70: CLP; push r15 ; push r14 ; mov r14, rcx ; push r13 ; push r12 ; mov r12, rdi ; push rbp ; mov rbp, rdx ; push rbx ; sub rsp, 0x18 ; cmp qword ptr [rdx], 0 ; mov qword ptr [rsp + 8], rsi ; je 0xe1ae5
read: r12 r13 r14 r15 rbp rbx rcx rdi rdx rflags rsi rsp 
write: r12 r14 rbp rflags rsp 
--------------------------------------------------------------------------------
000e1b20: CLP; push r15 ; push r14 ; push r13 ; push r12 ; mov r12, rdx ; push rbp ; push rbx ; sub rsp, 8 ; cmp qword ptr [rdx], 0 ; je 0xe1b8c
read: r12 r13 r14 r15 rbp rbx rdx rflags rsp 
write: r12 rflags rsp 
--------------------------------------------------------------------------------
000e1bb0: CLP; push rbp ; mov rbp, rsp ; push r15 ; push r14 ; push r13 ; mov r13, rdi ; push r12 ; push rbx ; sub rsp, 0x38 ; test rdi, rdi ; mov qword ptr [rbp - 0x58], rsi ; je 0xe1ca5
read: r12 r13 r14 r15 rbp rbx rdi rflags rsi rsp 
write: r13 rbp rflags rsp 
--------------------------------------------------------------------------------
000e1cf0: CLP; push r12 ; mov rdx, qword ptr [rip + 0x2870f3] ; mov r12, rsi ; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, qword ptr [rip + 0x287094] ; mov rdx, qword ptr [rdx] ; mov rdi, qword ptr [rbx] ; mov eax, dword ptr [rdi + 0xc0] ; test eax, eax ; jle 0xe1d54
read: eax r12 rbp rbx rdi rflags rsi rsp 
write: eax r12 rbp rbx rdi rdx rflags rsp 
--------------------------------------------------------------------------------
000e1db0: CLP; push r14 ; mov r14, rsi ; push r13 ; push r12 ; mov r12, rdi ; push rbp ; mov rbp, qword ptr [rip + 0x2870a0] ; push rbx ; mov rbx, qword ptr [rip + 0x286fd0] ; mov r13d, dword ptr fs:[rbp] ; mov rdi, qword ptr [rbx] ; mov edx, dword ptr [rdi + 0xc0] ; test edx, edx ; mov rdx, qword ptr [rip + 0x287009] ; mov rdx, qword ptr [rdx]
read: edx r12 r13 r14 rbp rbx rdi rsi rsp 
write: edx r12 r13d r14 rbp rbx rdi rdx rflags rsp 
--------------------------------------------------------------------------------
000e1ec0: CLP; sub rsp, 0xd8 ; test al, al ; mov qword ptr [rsp + 0x28], rsi ; mov qword ptr [rsp + 0x30], rdx ; mov qword ptr [rsp + 0x38], rcx ; mov qword ptr [rsp + 0x40], r8 ; mov qword ptr [rsp + 0x48], r9 ; je 0xe1f1b
read: al r8 r9 rcx rdx rflags rsi rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000e1f60: CLP; sub rsp, 0xd8 ; test al, al ; mov qword ptr [rsp + 0x28], rsi ; mov qword ptr [rsp + 0x30], rdx ; mov qword ptr [rsp + 0x38], rcx ; mov qword ptr [rsp + 0x40], r8 ; mov qword ptr [rsp + 0x48], r9 ; je 0xe1fbb
read: al r8 r9 rcx rdx rflags rsi rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000e2000: CLP; push rbx ; mov ebx, edi ; mov rdi, rsi ; mov rsi, rdx ; call 0xe1dac
read: edi rbx rdx rip rsi rsp 
write: ebx rdi rsi rsp 
--------------------------------------------------------------------------------
000e2020: CLP; push rbx ; mov ebx, edi ; mov rdi, rsi ; mov rsi, rdx ; call 0xe1cec
read: edi rbx rdx rip rsi rsp 
write: ebx rdi rsi rsp 
--------------------------------------------------------------------------------
000e2040: CLP; sub rsp, 0xd8 ; test al, al ; mov qword ptr [rsp + 0x30], rdx ; mov qword ptr [rsp + 0x38], rcx ; mov qword ptr [rsp + 0x40], r8 ; mov qword ptr [rsp + 0x48], r9 ; je 0xe2096
read: al r8 r9 rcx rdx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000e20d0: CLP; sub rsp, 0xd8 ; test al, al ; mov qword ptr [rsp + 0x30], rdx ; mov qword ptr [rsp + 0x38], rcx ; mov qword ptr [rsp + 0x40], r8 ; mov qword ptr [rsp + 0x48], r9 ; je 0xe2126
read: al r8 r9 rcx rdx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000e2160: CLP; sub rsp, 0x408 ; mov edx, 0x400 ; mov rsi, rsp ; call 0x8552c
read: rip rsp 
write: edx rflags rsi rsp 
--------------------------------------------------------------------------------
000e21a0: CLP; push rbp ; mov rbp, rsp ; push r15 ; push r14 ; push r13 ; mov r13, rdx ; push r12 ; push rbx ; sub rsp, 0x48 ; mov rax, qword ptr [rip + 0x286be1] ; mov dword ptr [rbp - 0x58], edi ; mov qword ptr [rbp - 0x60], rcx ; mov dword ptr [rbp - 0x54], esi ; mov rdi, qword ptr [rax] ; mov ecx, dword ptr [rdi + 0xc0]
read: edi esi r12 r13 r14 r15 rbp rbx rcx rdx rsp 
write: ecx r13 rax rbp rdi rflags rsp 
--------------------------------------------------------------------------------
000e23f0: CLP; push r12 ; push rbp ; mov ebp, esi ; push rbx ; mov ebx, edi ; sub rsp, 0xd0 ; test al, al ; mov qword ptr [rsp + 0x38], rcx ; mov qword ptr [rsp + 0x40], r8 ; mov qword ptr [rsp + 0x48], r9 ; je 0xe2449
read: al edi esi r12 r8 r9 rbp rbx rcx rflags rsp 
write: ebp ebx rflags rsp 
--------------------------------------------------------------------------------
000e2560: CLP; push r14 ; push r13 ; mov r13d, esi ; push r12 ; mov r12d, edi ; push rbp ; mov ebp, ecx ; push rbx ; mov rbx, rdx ; sub rsp, 0xd0 ; test al, al ; mov qword ptr [rsp + 0x48], r9 ; je 0xe25ba
read: al ecx edi esi r12 r13 r14 r9 rbp rbx rdx rflags rsp 
write: ebp r12d r13d rbx rflags rsp 
--------------------------------------------------------------------------------
000e2760: CLP; mov rax, rdi ; mov edi, edi ; cmp rdi, rax ; jne 0xe277c
read: edi rax rdi rflags 
write: edi rax rflags 
--------------------------------------------------------------------------------
000e27b0: CLP; push r15 ; mov r15, rdx ; push r14 ; mov r14, rsi ; mov esi, 0xa ; push r13 ; push r12 ; push rbp ; mov rbp, rcx ; push rbx ; sub rsp, 0x18 ; mov r12, qword ptr [rcx] ; mov rbx, qword ptr [rdx] ; mov dword ptr [rsp + 0xc], edi ; mov qword ptr [rsp], r8
read: edi r12 r13 r14 r15 r8 rbp rbx rcx rdx rsi rsp 
write: esi r12 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000e2980: CLP; push r13 ; lea rsi, [rip + 0x51b6b] ; push r12 ; mov r12, rdi ; lea rdi, [rip + 0x54032] ; push rbp ; push rbx ; sub rsp, 0x2018 ; mov qword ptr [rsp + 8], -1 ; call 0x6ca9c
read: r12 r13 rbp rbx rdi rip rsp 
write: r12 rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000e2a80: CLP; push rbp ; xor edi, edi ; mov rbp, rsp ; push r15 ; push r14 ; push r13 ; push r12 ; push rbx ; sub rsp, 0x48 ; call 0x1f48c
read: edi r12 r13 r14 r15 rbp rbx rip rsp 
write: edi rbp rflags rsp 
--------------------------------------------------------------------------------
000e2d60: CLP; push r13 ; lea rdi, [rip + 0x53c8f] ; push r12 ; push rbp ; push rbx ; sub rsp, 0x18 ; call 0xaeb5c
read: r12 r13 rbp rbx rip rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
000e2e30: CLP; lea rdi, [rip + 0x53bd9] ; sub rsp, 8 ; call 0xe297c
read: rip rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
000e2e50: CLP; lea rdi, [rip + 0x53bca] ; sub rsp, 8 ; call 0xe297c
read: rip rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
000e2e70: CLP; test rdi, rdi ; push rbx ; mov rbx, rdi ; je 0xe2f24
read: rbx rdi rflags rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
000e2f40: CLP; push rbx ; mov rbx, rdi ; lea rdi, [rsi + 8] ; mov r8d, 2 ; mov edx, 1 ; mov rsi, rbx ; sub rsp, 0x10 ; and rdi, 0xfffffffffffffff8 ; mov rcx, rsp ; call 0xca1dc
read: rbx rdi rip rsp 
write: edx r8d rbx rcx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000e2fb0: CLP; push rbx ; mov rbx, rdi ; lea rdi, [rsi + 8] ; mov r8d, 2 ; mov edx, 1 ; mov rsi, rbx ; sub rsp, 0x10 ; and rdi, 0xfffffffffffffff8 ; mov rcx, rsp ; call 0xca1dc
read: rbx rdi rip rsp 
write: edx r8d rbx rcx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000e3010: CLP; push r14 ; xor eax, eax ; mov r14d, esi ; xor esi, esi ; push r13 ; push r12 ; push rbp ; mov rbp, rdi ; lea rdi, [rip + 0x53a13] ; push rbx ; sub rsp, 0x60 ; call 0xd6819
read: eax esi r12 r13 r14 rbp rbx rdi rip rsp 
write: eax esi r14d rbp rdi rflags rsp 
--------------------------------------------------------------------------------
000e3110: CLP; mov rax, qword ptr [rip + 0x285d45] ; mov edx, dword ptr [rax + 0x38] ; mov eax, 0x64 ; test edx, edx ; cmovne eax, edx ; ret
read: eax edx rflags 
write: eax edx rax rflags 
--------------------------------------------------------------------------------
000e3130: CLP; mov r10, rcx ; mov eax, 0xc1 ; syscall ; cmp rax, -0xfff ; jae 0xe3143
read: rax rcx rflags 
write: eax r10 rflags 
--------------------------------------------------------------------------------
000e3160: CLP; mov eax, 0xc4 ; syscall ; cmp rax, -0xfff ; jae 0xe3170
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e3190: CLP; mov eax, 0xc7 ; syscall ; cmp rax, -0xfff ; jae 0xe31a0
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e31c0: CLP; mov r10, rcx ; mov eax, 0xbe ; syscall ; cmp rax, -0xfff ; jae 0xe31d3
read: rax rcx rflags 
write: eax r10 rflags 
--------------------------------------------------------------------------------
000e31f0: CLP; mov r10, rcx ; mov eax, 0xbf ; syscall ; cmp rax, -0xfff ; jae 0xe3203
read: rax rcx rflags 
write: eax r10 rflags 
--------------------------------------------------------------------------------
000e3220: CLP; mov eax, 0xc2 ; syscall ; cmp rax, -0xfff ; jae 0xe3230
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e3250: CLP; mov r10, rcx ; mov eax, 0xc0 ; syscall ; cmp rax, -0xfff ; jae 0xe3263
read: rax rcx rflags 
write: eax r10 rflags 
--------------------------------------------------------------------------------
000e3280: CLP; mov eax, 0xc3 ; syscall ; cmp rax, -0xfff ; jae 0xe3290
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e32b0: CLP; mov eax, 0xc6 ; syscall ; cmp rax, -0xfff ; jae 0xe32c0
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e32e0: CLP; mov r10, rcx ; mov eax, 0xbd ; syscall ; cmp rax, -0xfff ; jae 0xe32f3
read: rax rcx rflags 
write: eax r10 rflags 
--------------------------------------------------------------------------------
000e3310: CLP; mov eax, 0xc5 ; syscall ; cmp rax, -0xfff ; jae 0xe3320
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e3340: CLP; mov r10, rcx ; mov eax, 0xbc ; syscall ; cmp rax, -0xfff ; jae 0xe3353
read: rax rcx rflags 
write: eax r10 rflags 
--------------------------------------------------------------------------------
000e3370: CLP; cmp rdi, 0x10 ; mov rax, qword ptr [rip + 0x285ae1] ; je 0xe33c4
read: rdi rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000e33e0: CLP; xor eax, eax ; ret
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
000e33f0: CLP; push rbp ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; test rsi, rsi ; je 0xe3437
read: rbp rbx rflags rsi rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
000e3460: CLP; mov eax, 0xad ; syscall ; cmp rax, -0xfff ; jae 0xe3470
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e3490: CLP; mov eax, 0xac ; syscall ; cmp rax, -0xfff ; jae 0xe34a0
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e34c0: CLP; push rbp ; xor eax, eax ; mov rbp, rcx ; mov ecx, 0xa ; push rbx ; mov rbx, rdi ; lea rdi, [rsp - 0x58] ; rep stosq qword ptr [rdi], rax ; mov qword ptr [rsp - 0x58], rbx ; mov dword ptr [rsp - 0x50], esi ; lea rdi, [rsp - 0x58] ; mov qword ptr [rsp - 0x48], rdx ; mov qword ptr [rsp - 0x40], rbp ; mov al, 0x9c ; mov qword ptr [rsp - 0x38], r8
read: eax esi r8 rax rbp rbx rcx rdi rdx rflags rsp 
write: al eax ecx rbp rbx rcx rdi rflags rsp 
--------------------------------------------------------------------------------
000e3520: CLP; mov rax, -0x16 ; test rdi, rdi ; je 0xe359d
read: rdi rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000e35c0: CLP; cmp dword ptr [rip + 0x28b1a9], 0 ; jne 0xe35dd
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000e35cd: CLP; mov eax, 8 ; syscall ; cmp rax, -0xfff ; jae 0xe3615
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e3630: CLP; sub rsp, 8 ; xor esi, esi ; call 0xe364c
read: esi rip rsp 
write: esi rflags rsp 
--------------------------------------------------------------------------------
000e3650: CLP; mov eax, 0xa6 ; syscall ; cmp rax, -0xfff ; jae 0xe3660
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e3680: CLP; mov eax, 0xbb ; syscall ; cmp rax, -0xfff ; jae 0xe3690
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e36b0: CLP; mov eax, 0x7a ; syscall ; cmp rax, -0xfff ; jae 0xe36c0
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e36e0: CLP; mov eax, 0x7b ; syscall ; cmp rax, -0xfff ; jae 0xe36f0
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e3710: CLP; mov rax, rdi ; shr rdi, 8 ; shr rax, 0x20 ; and edi, 0xfff ; and eax, 0xfffff000 ; or eax, edi ; ret
read: eax edi rax rdi 
write: eax edi rax rdi rflags 
--------------------------------------------------------------------------------
000e3730: CLP; mov rax, rdi ; movzx edi, dil ; shr rax, 0xc ; xor al, al ; or eax, edi ; ret
read: al dil eax edi rax rdi 
write: al eax edi rax rflags 
--------------------------------------------------------------------------------
000e3750: CLP; mov eax, edi ; movzx edx, sil ; and esi, 0xffffff00 ; and eax, 0xfff ; shl rsi, 0xc ; and edi, 0xfffff000 ; shl eax, 8 ; shl rdi, 0x20 ; or eax, edx ; or rax, rsi ; or rax, rdi ; ret
read: eax edi edx esi rax rdi rsi sil 
write: eax edi edx esi rax rdi rflags rsi 
--------------------------------------------------------------------------------
000e3780: CLP; mov eax, dword ptr [rip + 0x28afea] ; test eax, eax ; jne 0xe37ba
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e3840: CLP; movsxd r10, edx ; movsxd rdi, edi ; mov edx, 8 ; mov eax, 0x121 ; syscall ; cmp rax, -0x1000 ; ja 0xe385c
read: edi edx rax rflags 
write: eax edx r10 rdi rflags 
--------------------------------------------------------------------------------
000e3880: CLP; movsxd rsi, esi ; movsxd rdi, edi ; mov eax, 0x122 ; syscall ; cmp rax, -0x1000 ; ja 0xe3897
read: edi esi rax rflags 
write: eax rdi rflags rsi 
--------------------------------------------------------------------------------
000e38b0: CLP; sub rsp, 8 ; mov edx, 8 ; call 0xd6a5c
read: rip rsp 
write: edx rflags rsp 
--------------------------------------------------------------------------------
000e38e0: CLP; sub rsp, 0x18 ; mov edx, 8 ; mov qword ptr [rsp + 8], rsi ; lea rsi, [rsp + 8] ; call 0xd6acc
read: rip rsi rsp 
write: edx rflags rsi rsp 
--------------------------------------------------------------------------------
000e3920: CLP; mov r10, rcx ; mov eax, 0x12e ; syscall ; cmp rax, -0xfff ; jae 0xe3933
read: rax rcx rflags 
write: eax r10 rflags 
--------------------------------------------------------------------------------
000e3950: CLP; mov eax, 0x9e ; syscall ; cmp rax, -0xfff ; jae 0xe3960
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e3980: CLP; mov eax, 0x9a ; syscall ; cmp rax, -0xfff ; jae 0xe3990
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e39b0: CLP; mov eax, 0xe4 ; syscall ; ret
read: 
write: eax 
--------------------------------------------------------------------------------
000e39c0: CLP; mov r10, rcx ; mov eax, 0x12d ; syscall ; cmp rax, -0xfff ; jae 0xe39d3
read: rax rcx rflags 
write: eax r10 rflags 
--------------------------------------------------------------------------------
000e39f0: CLP; mov eax, 0x9f ; syscall ; cmp rax, -0xfff ; jae 0xe3a00
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e3a20: CLP; mov eax, 0x7d ; syscall ; cmp rax, -0xfff ; jae 0xe3a30
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e3a50: CLP; mov eax, 0x7e ; syscall ; cmp rax, -0xfff ; jae 0xe3a60
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e3a80: CLP; mov eax, 0x131 ; syscall ; cmp rax, -0xfff ; jae 0xe3a90
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e3ab0: CLP; mov eax, 0xae ; syscall ; cmp rax, -0xfff ; jae 0xe3ac0
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e3ae0: CLP; mov eax, 0xb0 ; syscall ; cmp rax, -0xfff ; jae 0xe3af0
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e3b10: CLP; mov eax, 0xd5 ; syscall ; cmp rax, -0xfff ; jae 0xe3b20
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e3b40: CLP; mov eax, 0x123 ; syscall ; cmp rax, -0xfff ; jae 0xe3b50
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e3b70: CLP; mov r10, rcx ; mov eax, 0xe9 ; syscall ; cmp rax, -0xfff ; jae 0xe3b83
read: rax rcx rflags 
write: eax r10 rflags 
--------------------------------------------------------------------------------
000e3ba0: CLP; cmp dword ptr [rip + 0x28abc9], 0 ; jne 0xe3bc0
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000e3bad: CLP; mov r10, rcx ; mov eax, 0xe8 ; syscall ; cmp rax, -0xfff ; jae 0xe3bfb
read: rax rcx rflags 
write: eax r10 rflags 
--------------------------------------------------------------------------------
000e3c10: CLP; mov eax, 0xb1 ; syscall ; cmp rax, -0xfff ; jae 0xe3c20
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e3c40: CLP; mov r10, rcx ; mov eax, 0xaf ; syscall ; cmp rax, -0xfff ; jae 0xe3c53
read: rax rcx rflags 
write: eax r10 rflags 
--------------------------------------------------------------------------------
000e3c70: CLP; mov eax, 0xfe ; syscall ; cmp rax, -0xfff ; jae 0xe3c80
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e3ca0: CLP; mov eax, 0xfd ; syscall ; cmp rax, -0xfff ; jae 0xe3cb0
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e3cd0: CLP; mov eax, 0x126 ; syscall ; cmp rax, -0xfff ; jae 0xe3ce0
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e3d00: CLP; mov eax, 0xff ; syscall ; cmp rax, -0xfff ; jae 0xe3d10
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e3d30: CLP; mov eax, 0x67 ; syscall ; cmp rax, -0xfff ; jae 0xe3d40
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e3d60: CLP; mov r10, rcx ; mov eax, 0xa5 ; syscall ; cmp rax, -0xfff ; jae 0xe3d73
read: rax rcx rflags 
write: eax r10 rflags 
--------------------------------------------------------------------------------
000e3d90: CLP; mov r10, rcx ; mov eax, 0x19 ; syscall ; cmp rax, -0xfff ; jae 0xe3da3
read: rax rcx rflags 
write: eax r10 rflags 
--------------------------------------------------------------------------------
000e3dc0: CLP; mov eax, 0xb4 ; syscall ; cmp rax, -0xfff ; jae 0xe3dd0
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e3df0: CLP; mov eax, 0x87 ; syscall ; cmp rax, -0xfff ; jae 0xe3e00
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e3e20: CLP; mov eax, 0x9b ; syscall ; cmp rax, -0xfff ; jae 0xe3e30
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e3e50: CLP; mov r10, rcx ; mov eax, 0x9d ; syscall ; cmp rax, -0xfff ; jae 0xe3e63
read: rax rcx rflags 
write: eax r10 rflags 
--------------------------------------------------------------------------------
000e3e80: CLP; mov r10, rcx ; mov eax, 0xb2 ; syscall ; cmp rax, -0xfff ; jae 0xe3e93
read: rax rcx rflags 
write: eax r10 rflags 
--------------------------------------------------------------------------------
000e3eb0: CLP; mov r10, rcx ; mov eax, 0xb3 ; syscall ; cmp rax, -0xfff ; jae 0xe3ec3
read: rax rcx rflags 
write: eax r10 rflags 
--------------------------------------------------------------------------------
000e3ee0: CLP; cmp dword ptr [rip + 0x28a889], 0 ; jne 0xe3f00
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000e3eed: CLP; mov r10, rcx ; mov eax, 0x113 ; syscall ; cmp rax, -0xfff ; jae 0xe3f3b
read: rax rcx rflags 
write: eax r10 rflags 
--------------------------------------------------------------------------------
000e3f50: CLP; mov eax, 0x63 ; syscall ; cmp rax, -0xfff ; jae 0xe3f60
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e3f80: CLP; cmp dword ptr [rip + 0x28a7e9], 0 ; jne 0xe3fa0
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000e3f8d: CLP; mov r10, rcx ; mov eax, 0x114 ; syscall ; cmp rax, -0xfff ; jae 0xe3fdb
read: rax rcx rflags 
write: eax r10 rflags 
--------------------------------------------------------------------------------
000e3ff0: CLP; mov eax, 0x110 ; syscall ; cmp rax, -0xfff ; jae 0xe4000
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e4020: CLP; mov eax, 0x86 ; syscall ; cmp rax, -0xfff ; jae 0xe4030
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e4050: CLP; cmp dword ptr [rip + 0x28a719], 0 ; jne 0xe4070
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000e405d: CLP; mov r10, rcx ; mov eax, 0x116 ; syscall ; cmp rax, -0xfff ; jae 0xe40ab
read: rax rcx rflags 
write: eax r10 rflags 
--------------------------------------------------------------------------------
000e40c0: CLP; mov eax, 0x11b ; syscall ; cmp rax, -0xfff ; jae 0xe40d0
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e40f0: CLP; mov r10, rcx ; mov eax, 0x11e ; syscall ; cmp rax, -0xfff ; jae 0xe4103
read: rax rcx rflags 
write: eax r10 rflags 
--------------------------------------------------------------------------------
000e4120: CLP; mov eax, 0x11f ; syscall ; cmp rax, -0xfff ; jae 0xe4130
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e4150: CLP; mov eax, 0x12c ; syscall ; cmp rax, -0xfff ; jae 0xe4160
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e4180: CLP; mov r10, rcx ; mov eax, 0x12f ; syscall ; cmp rax, -0xfff ; jae 0xe4193
read: rax rcx rflags 
write: eax r10 rflags 
--------------------------------------------------------------------------------
000e41b0: CLP; cmp dword ptr [rip + 0x28a5b9], 0 ; jne 0xe41cd
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000e41bd: CLP; mov eax, 0x130 ; syscall ; cmp rax, -0xfff ; jae 0xe4205
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e4220: CLP; mov eax, 0x134 ; syscall ; cmp rax, -0xfff ; jae 0xe4230
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e4250: CLP; mov r10, rcx ; mov eax, 0x136 ; syscall ; cmp rax, -0xfff ; jae 0xe4263
read: rax rcx rflags 
write: eax r10 rflags 
--------------------------------------------------------------------------------
000e4280: CLP; mov r10, rcx ; mov eax, 0x137 ; syscall ; cmp rax, -0xfff ; jae 0xe4293
read: rax rcx rflags 
write: eax r10 rflags 
--------------------------------------------------------------------------------
000e42b0: CLP; mov rax, qword ptr [rip + 0x284bad] ; mov dword ptr fs:[rax], 0x26 ; mov rax, -1 ; ret
read: 
write: rax 
--------------------------------------------------------------------------------
000e42d0: CLP; cmp dword ptr [rip + 0x28a499], 0 ; jne 0xe42ed
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000e42dd: CLP; mov eax, 0x2b ; syscall ; cmp rax, -0xfff ; jae 0xe4325
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e4340: CLP; mov eax, 0x31 ; syscall ; cmp rax, -0xfff ; jae 0xe4350
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e4370: CLP; cmp dword ptr [rip + 0x28a3f9], 0 ; jne 0xe438d
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000e437d: CLP; mov eax, 0x2a ; syscall ; cmp rax, -0xfff ; jae 0xe43c5
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e43e0: CLP; mov eax, 0x34 ; syscall ; cmp rax, -0xfff ; jae 0xe43f0
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e4410: CLP; mov eax, 0x33 ; syscall ; cmp rax, -0xfff ; jae 0xe4420
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e4440: CLP; mov r10, rcx ; mov eax, 0x37 ; syscall ; cmp rax, -0xfff ; jae 0xe4453
read: rax rcx rflags 
write: eax r10 rflags 
--------------------------------------------------------------------------------
000e4470: CLP; mov eax, 0x32 ; syscall ; cmp rax, -0xfff ; jae 0xe4480
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e44a0: CLP; mov eax, dword ptr [rip + 0x28a2ca] ; test eax, eax ; jne 0xe44d7
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e4560: CLP; cmp dword ptr [rip + 0x28a209], 0 ; jne 0xe4580
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000e456d: CLP; mov r10, rcx ; mov eax, 0x2d ; syscall ; cmp rax, -0xfff ; jae 0xe45bb
read: rax rcx rflags 
write: eax r10 rflags 
--------------------------------------------------------------------------------
000e45d0: CLP; cmp dword ptr [rip + 0x28a199], 0 ; jne 0xe45ed
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000e45dd: CLP; mov eax, 0x2f ; syscall ; cmp rax, -0xfff ; jae 0xe4625
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e4640: CLP; mov eax, dword ptr [rip + 0x28a12a] ; test eax, eax ; jne 0xe4677
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e4700: CLP; cmp dword ptr [rip + 0x28a069], 0 ; jne 0xe471d
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000e470d: CLP; mov eax, 0x2e ; syscall ; cmp rax, -0xfff ; jae 0xe4755
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e4770: CLP; cmp dword ptr [rip + 0x289ff9], 0 ; jne 0xe4790
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000e477d: CLP; mov r10, rcx ; mov eax, 0x2c ; syscall ; cmp rax, -0xfff ; jae 0xe47cb
read: rax rcx rflags 
write: eax r10 rflags 
--------------------------------------------------------------------------------
000e47e0: CLP; mov r10, rcx ; mov eax, 0x36 ; syscall ; cmp rax, -0xfff ; jae 0xe47f3
read: rax rcx rflags 
write: eax r10 rflags 
--------------------------------------------------------------------------------
000e4810: CLP; mov eax, 0x30 ; syscall ; cmp rax, -0xfff ; jae 0xe4820
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e4840: CLP; mov eax, 0x29 ; syscall ; cmp rax, -0xfff ; jae 0xe4850
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e4870: CLP; mov r10, rcx ; mov eax, 0x35 ; syscall ; cmp rax, -0xfff ; jae 0xe4883
read: rax rcx rflags 
write: eax r10 rflags 
--------------------------------------------------------------------------------
000e48a0: CLP; push r12 ; mov r12d, esi ; mov esi, edi ; mov edi, 1 ; push rbp ; push rbx ; sub rsp, 0x90 ; mov rbx, qword ptr [rip + 0x2845a8] ; mov rdx, rsp ; mov ebp, dword ptr fs:[rbx] ; call 0xd63ec
read: edi esi r12 rbp rbx rip rsp 
write: ebp edi esi r12d rbx rdx rflags rsp 
--------------------------------------------------------------------------------
000e4900: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x38 ; mov edi, dword ptr [rip + 0x287a24] ; test edi, edi ; je 0xe4975
read: edi r12 r13 r14 r15 rbp rbx rflags rsp 
write: edi rflags rsp 
--------------------------------------------------------------------------------
000e4ad0: CLP; sub rsp, 0x18 ; xor eax, eax ; mov esi, 0x8905 ; lea rdx, [rsp + 0xc] ; call 0xdc63c
read: eax rip rsp 
write: eax esi rdx rflags rsp 
--------------------------------------------------------------------------------
000e4b00: CLP; mov eax, dword ptr [rip + 0x289c6a] ; test eax, eax ; jne 0xe4b31
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e4bb0: CLP; mov eax, dword ptr [rip + 0x289bba] ; test eax, eax ; jne 0xe4be3
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e4c70: CLP; mov eax, dword ptr [rip + 0x289afa] ; test eax, eax ; jne 0xe4ca3
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e4d20: CLP; sub edi, 1 ; xor eax, eax ; cmp di, 0x12 ; ja 0xe4d38
read: di eax edi rflags 
write: eax edi rflags 
--------------------------------------------------------------------------------
000e4d40: CLP; mov rax, qword ptr [rsi] ; cmp rax, 0xf ; jbe 0xe4d7c
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000e4d90: CLP; push rbx ; mov ebx, esi ; mov rsi, rdi ; mov edi, 1 ; sub rsp, 0x90 ; mov rdx, rsp ; call 0xd639c
read: esi rbx rdi rip rsp 
write: ebx edi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000e4de0: CLP; cmp dword ptr [rip + 0x289989], 0 ; jne 0xe4e00
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000e4ded: CLP; mov r10, rcx ; mov eax, 0x45 ; syscall ; cmp rax, -0xfff ; jae 0xe4e3b
read: rax rcx rflags 
write: eax r10 rflags 
--------------------------------------------------------------------------------
000e4e50: CLP; cmp dword ptr [rip + 0x289919], 0 ; jne 0xe4e70
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000e4e5d: CLP; mov r10, rcx ; mov eax, 0x46 ; syscall ; cmp rax, -0xfff ; jae 0xe4eab
read: rax rcx rflags 
write: eax r10 rflags 
--------------------------------------------------------------------------------
000e4ec0: CLP; mov eax, 0x44 ; syscall ; cmp rax, -0xfff ; jae 0xe4ed0
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e4ef0: CLP; mov eax, 0x47 ; syscall ; cmp rax, -0xfff ; jae 0xe4f00
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e4f20: CLP; mov eax, 0x41 ; syscall ; cmp rax, -0xfff ; jae 0xe4f30
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e4f50: CLP; mov eax, 0x40 ; syscall ; cmp rax, -0xfff ; jae 0xe4f60
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e4f80: CLP; mov r10, rcx ; mov eax, 0x42 ; syscall ; cmp rax, -0xfff ; jae 0xe4f93
read: rax rcx rflags 
write: eax r10 rflags 
--------------------------------------------------------------------------------
000e4fb0: CLP; mov r10, rcx ; mov eax, 0xdc ; syscall ; cmp rax, -0xfff ; jae 0xe4fc3
read: rax rcx rflags 
write: eax r10 rflags 
--------------------------------------------------------------------------------
000e4fe0: CLP; mov eax, 0x1e ; syscall ; cmp rax, -0xfff ; jae 0xe4ff0
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e5010: CLP; mov eax, 0x43 ; syscall ; cmp rax, -0xfff ; jae 0xe5020
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e5040: CLP; mov eax, 0x1d ; syscall ; cmp rax, -0xfff ; jae 0xe5050
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e5070: CLP; mov eax, 0x1f ; syscall ; cmp rax, -0xfff ; jae 0xe5080
read: rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e50a0: CLP; push rbp ; lea rdi, [rip + 0x519c5] ; mov rbp, rsp ; push r15 ; push r14 ; push r13 ; push r12 ; push rbx ; sub rsp, 0x6e8 ; call 0x3819c
read: r12 r13 r14 r15 rbp rbx rip rsp 
write: rbp rdi rflags rsp 
--------------------------------------------------------------------------------
000e55c0: CLP; cmp qword ptr [rip + 0x283c54], 2 ; je 0xe55f2
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000e5640: CLP; push r13 ; movabs rdx, 0x28f5c28f5c28f5c3 ; push r12 ; lea r12, [rsi + 3] ; push rbp ; and r12, 0xfffffffffffffffc ; mov rbp, rdi ; and rbp, 0xfffffffffffffffc ; mov rax, r12 ; push rbx ; sub rax, rbp ; mov rdi, rax ; sub rsp, 8 ; mov qword ptr [rip + 0x283bf9], rax ; lea rax, [rax + rax*2]
read: r12 r13 rax rbp rbx rdi rsp 
write: r12 rax rbp rdi rdx rflags rsp 
--------------------------------------------------------------------------------
000e5810: CLP; push rbx ; mov rbx, qword ptr [rip + 0x283a04] ; mov qword ptr [rip + 0x2839f9], 3 ; test ebx, ebx ; jne 0xe5830
read: ebx rbx rflags rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
000e5840: CLP; sub rsp, 8 ; xor edi, edi ; call 0xe55bc
read: edi rip rsp 
write: edi rflags rsp 
--------------------------------------------------------------------------------
000e5880: CLP; push rbp ; mov edx, 1 ; xor eax, eax ; mov rbp, rsp ; lock cmpxchg qword ptr [rip + 0x283988], rdx ; jne 0xe5947
read: eax rbp rdx rflags rsp 
write: eax edx rbp rflags rsp 
--------------------------------------------------------------------------------
000e59f0: CLP; mov rax, qword ptr [rdx + 0xa8] ; sub rax, qword ptr [rip + 0x286a26] ; mov ecx, dword ptr [rip + 0x286a18] ; mov rdx, rax ; shr rdx, 0x3f ; add rax, rdx ; sar rax, 1 ; mov rdx, rax ; movzx eax, ax ; shr rdx, 0x10 ; imul rax, rcx ; imul rdx, rcx ; shr rax, 0x10 ; add rax, rdx ; cmp rax, qword ptr [rip + 0x2869fb]
read: ax rax rcx rdx 
write: eax ecx rax rdx rflags 
--------------------------------------------------------------------------------
000e5a50: CLP; push r13 ; push r12 ; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 0xc8 ; test rdi, rdi ; je 0xe5b8c
read: r12 r13 rbp rbx rdi rflags rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
000e5bf0: CLP; mov rax, qword ptr [rip + 0x286855] ; cmp rdi, qword ptr [rax + 0x20] ; jb 0xe5c06
read: rdi rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000e5d10: CLP; mov rdi, qword ptr [rdx + 0xa8] ; xor esi, esi ; call 0xe5bec
read: esi rip rsp 
write: esi rdi rflags rsp 
--------------------------------------------------------------------------------
000e5d30: CLP; mov rdi, qword ptr [rdx + 0xa8] ; mov esi, 1 ; call 0xe5bec
read: rip rsp 
write: esi rdi rsp 
--------------------------------------------------------------------------------
000e5d50: CLP; mov rcx, qword ptr [rdi] ; mov rdx, qword ptr [rsi] ; mov eax, 1 ; mov rdx, qword ptr [rdx + 0x10] ; cmp qword ptr [rcx + 0x10], rdx ; jb 0xe5d6d
read: rdx rflags 
write: eax rcx rdx rflags 
--------------------------------------------------------------------------------
000e5d80: CLP; push r15 ; movsxd r15, edi ; push r14 ; mov r14d, r8d ; push r13 ; mov r13, rsi ; push r12 ; mov r12, rdx ; push rbp ; push rbx ; mov rbx, rcx ; sub rsp, 8 ; mov eax, dword ptr [rip + 0x286699] ; test eax, eax ; jne 0xe5e4c
read: eax edi r12 r13 r14 r15 r8d rbp rbx rcx rdx rflags rsi rsp 
write: eax r12 r13 r14d r15 rbx rflags rsp 
--------------------------------------------------------------------------------
000e5ed0: CLP; push rbp ; mov rbp, rsp ; push r15 ; mov r15, rdi ; push r14 ; push r13 ; movsxd r13, esi ; lea rax, [r13*8 + 0x16] ; push r12 ; mov r12, rdx ; and rax, 0xfffffffffffffff0 ; push rbx ; mov ebx, esi ; sub rsp, 0xe8 ; mov dword ptr [rbp - 0x104], ecx
read: ecx esi r12 r13 r14 r15 rax rbp rbx rdi rdx rsp 
write: ebx r12 r13 r15 rax rbp rflags rsp 
--------------------------------------------------------------------------------
000e6390: CLP; mov rax, qword ptr [rip + 0x282ac5] ; mov eax, dword ptr [rax + 0x38] ; ret
read: 
write: eax rax 
--------------------------------------------------------------------------------
000e63a0: CLP; sub rsp, 0x38 ; mov qword ptr [rsp], rax ; mov qword ptr [rsp + 8], rcx ; mov qword ptr [rsp + 0x10], rdx ; mov qword ptr [rsp + 0x18], rsi ; mov qword ptr [rsp + 0x20], rdi ; mov qword ptr [rsp + 0x28], r8 ; mov qword ptr [rsp + 0x30], r9 ; mov rsi, qword ptr [rsp + 0x38] ; mov rdi, qword ptr [rbp + 8] ; call 0xe587c
read: r8 r9 rax rcx rdi rdx rip rsi rsp 
write: rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000e6410: CLP; sub rsp, 0x40 ; mov qword ptr [rsp], rax ; mov qword ptr [rsp + 8], rcx ; mov qword ptr [rsp + 0x10], rdx ; mov qword ptr [rsp + 0x18], rsi ; mov qword ptr [rsp + 0x20], rdi ; mov qword ptr [rsp + 0x28], r8 ; mov qword ptr [rsp + 0x30], r9 ; mov rsi, qword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x48] ; call 0xe587c
read: r8 r9 rax rcx rdi rdx rip rsi rsp 
write: rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000e6480: CLP; test edi, 0xffffff80 ; je 0xe6504
read: edi rflags 
write: rflags 
--------------------------------------------------------------------------------
000e6520: CLP; test edi, 0xffffff80 ; je 0xe65a4
read: edi rflags 
write: rflags 
--------------------------------------------------------------------------------
000e65d0: CLP; test edi, 0xffffff80 ; je 0xe6654
read: edi rflags 
write: rflags 
--------------------------------------------------------------------------------
000e6670: CLP; test edi, 0xffffff80 ; je 0xe66f4
read: edi rflags 
write: rflags 
--------------------------------------------------------------------------------
000e6710: CLP; test edi, 0xffffff80 ; je 0xe6794
read: edi rflags 
write: rflags 
--------------------------------------------------------------------------------
000e67b0: CLP; test edi, 0xffffff80 ; je 0xe6834
read: edi rflags 
write: rflags 
--------------------------------------------------------------------------------
000e6860: CLP; test edi, 0xffffff80 ; je 0xe68e4
read: edi rflags 
write: rflags 
--------------------------------------------------------------------------------
000e6910: CLP; test edi, 0xffffff80 ; je 0xe6994
read: edi rflags 
write: rflags 
--------------------------------------------------------------------------------
000e69c0: CLP; test edi, 0xffffff80 ; je 0xe6a44
read: edi rflags 
write: rflags 
--------------------------------------------------------------------------------
000e6a60: CLP; test edi, 0xffffff80 ; je 0xe6ae4
read: edi rflags 
write: rflags 
--------------------------------------------------------------------------------
000e6b10: CLP; test edi, 0xffffff80 ; je 0xe6b8c
read: edi rflags 
write: rflags 
--------------------------------------------------------------------------------
000e6bb0: CLP; test edi, 0xffffff80 ; je 0xe6c34
read: edi rflags 
write: rflags 
--------------------------------------------------------------------------------
000e6c60: CLP; mov rax, qword ptr [rip + 0x282155] ; mov rax, qword ptr fs:[rax] ; mov rax, qword ptr [rax] ; mov esi, dword ptr [rax + 0xd0] ; lea edx, [rsi + 1] ; movzx edx, dx ; mov rdx, qword ptr [rax + rdx*8 + 0x40] ; mov eax, edi ; mov ecx, dword ptr [rdx] ; shr eax, cl ; mov ecx, eax ; cmp ecx, dword ptr [rdx + 4] ; mov eax, edi ; jae 0xe6cbb
read: cl dx eax ecx edi rflags 
write: eax ecx edx esi rax rdx rflags 
--------------------------------------------------------------------------------
000e6cd0: CLP; mov rax, qword ptr [rip + 0x2820e5] ; mov rax, qword ptr fs:[rax] ; mov rax, qword ptr [rax] ; movzx edx, word ptr [rax + 0xd0] ; mov rdx, qword ptr [rax + rdx*8 + 0x40] ; mov eax, edi ; mov ecx, dword ptr [rdx] ; shr eax, cl ; mov ecx, eax ; cmp ecx, dword ptr [rdx + 4] ; mov eax, edi ; jae 0xe6d26
read: cl eax ecx edi rflags 
write: eax ecx edx rax rdx rflags 
--------------------------------------------------------------------------------
000e6d30: CLP; push r15 ; push r14 ; mov r14, rdi ; push r13 ; push r12 ; xor r12d, r12d ; push rbp ; push rbx ; sub rsp, 8 ; call 0x856dc
read: r12 r12d r13 r14 r15 rbp rbx rdi rip rsp 
write: r12d r14 rflags rsp 
--------------------------------------------------------------------------------
000e6de0: CLP; xor eax, eax ; test rsi, rsi ; je 0xe6e2c
read: eax rflags rsi 
write: eax rflags 
--------------------------------------------------------------------------------
000e6e40: CLP; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 8 ; mov rax, qword ptr [rip + 0x281f6b] ; mov rax, qword ptr fs:[rax] ; mov r13, qword ptr [rax] ; mov rbx, qword ptr [r13 + 0x98] ; cmp byte ptr [rbx], 0 ; je 0xe6ebc
read: r12 r13 rbp rbx rflags rsp 
write: r13 rax rbx rflags rsp 
--------------------------------------------------------------------------------
000e6ed0: CLP; test rsi, rsi ; je 0xe6f14
read: rflags rsi 
write: rflags 
--------------------------------------------------------------------------------
000e6f30: CLP; test edi, 0xffffff80 ; je 0xe6fa4
read: edi rflags 
write: rflags 
--------------------------------------------------------------------------------
000e6fc0: CLP; test edi, 0xffffff80 ; je 0xe7034
read: edi rflags 
write: rflags 
--------------------------------------------------------------------------------
000e7050: CLP; test edi, 0xffffff80 ; je 0xe70c4
read: edi rflags 
write: rflags 
--------------------------------------------------------------------------------
000e70e0: CLP; test edi, 0xffffff80 ; je 0xe7154
read: edi rflags 
write: rflags 
--------------------------------------------------------------------------------
000e7170: CLP; test edi, 0xffffff80 ; je 0xe71e4
read: edi rflags 
write: rflags 
--------------------------------------------------------------------------------
000e7200: CLP; test edi, 0xffffff80 ; je 0xe7274
read: edi rflags 
write: rflags 
--------------------------------------------------------------------------------
000e7290: CLP; test edi, 0xffffff80 ; je 0xe7304
read: edi rflags 
write: rflags 
--------------------------------------------------------------------------------
000e7320: CLP; test edi, 0xffffff80 ; je 0xe7394
read: edi rflags 
write: rflags 
--------------------------------------------------------------------------------
000e73b0: CLP; test edi, 0xffffff80 ; je 0xe7424
read: edi rflags 
write: rflags 
--------------------------------------------------------------------------------
000e7440: CLP; test edi, 0xffffff80 ; je 0xe74b4
read: edi rflags 
write: rflags 
--------------------------------------------------------------------------------
000e74d0: CLP; test edi, 0xffffff80 ; je 0xe753c
read: edi rflags 
write: rflags 
--------------------------------------------------------------------------------
000e7560: CLP; test edi, 0xffffff80 ; je 0xe75d4
read: edi rflags 
write: rflags 
--------------------------------------------------------------------------------
000e75f0: CLP; mov rax, qword ptr [rsi] ; mov edx, dword ptr [rax + 0xd0] ; add edx, 1 ; mov rdx, qword ptr [rax + rdx*8 + 0x40] ; mov eax, edi ; mov ecx, dword ptr [rdx] ; shr eax, cl ; mov ecx, eax ; cmp ecx, dword ptr [rdx + 4] ; mov eax, edi ; jae 0xe763d
read: cl eax ecx edi edx rflags 
write: eax ecx edx rax rdx rflags 
--------------------------------------------------------------------------------
000e7650: CLP; mov rax, qword ptr [rsi] ; mov edx, dword ptr [rax + 0xd0] ; mov rdx, qword ptr [rax + rdx*8 + 0x40] ; mov eax, edi ; mov ecx, dword ptr [rdx] ; shr eax, cl ; mov ecx, eax ; cmp ecx, dword ptr [rdx + 4] ; mov eax, edi ; jae 0xe769a
read: cl eax ecx edi rflags 
write: eax ecx edx rax rdx rflags 
--------------------------------------------------------------------------------
000e76a0: CLP; push r15 ; push r14 ; mov r14, rdi ; push r13 ; push r12 ; xor r12d, r12d ; push rbp ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; call 0x856dc
read: r12 r12d r13 r14 r15 rbp rbx rdi rip rsi rsp 
write: r12d r14 rbx rflags rsp 
--------------------------------------------------------------------------------
000e7750: CLP; xor eax, eax ; test rsi, rsi ; je 0xe779c
read: eax rflags rsi 
write: eax rflags 
--------------------------------------------------------------------------------
000e77b0: CLP; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 8 ; mov r13, qword ptr [rsi] ; mov rbx, qword ptr [r13 + 0x98] ; cmp byte ptr [rbx], 0 ; je 0xe7824
read: r12 r13 rbp rbx rflags rsp 
write: r13 rbx rflags rsp 
--------------------------------------------------------------------------------
000e7840: CLP; test rsi, rsi ; je 0xe7884
read: rflags rsi 
write: rflags 
--------------------------------------------------------------------------------
000e78a0: CLP; sub rsp, 8 ; mov esi, 1 ; xor eax, eax ; cmp dword ptr [rip + 0x286ebe], 0 ; je 0xe78c0
read: eax rflags rsp 
write: eax esi rflags rsp 
--------------------------------------------------------------------------------
000e7980: CLP; push r13 ; mov esi, 1 ; xor eax, eax ; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 0x18 ; cmp dword ptr [rip + 0x286dd5], 0 ; je 0xe79a9
read: eax r12 r13 rbp rbx rdi rflags rsp 
write: eax esi rbp rflags rsp 
--------------------------------------------------------------------------------
000e7b20: CLP; push r13 ; mov esi, 1 ; xor eax, eax ; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 0x18 ; cmp dword ptr [rip + 0x286c35], 0 ; je 0xe7b49
read: eax r12 r13 rbp rbx rdi rflags rsp 
write: eax esi rbp rflags rsp 
--------------------------------------------------------------------------------
000e7ce0: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 0x38 ; lea rbp, [rsp + 0x20] ; mov rsi, rbp ; call 0x6c5bc
read: r12 r13 r14 r15 rbp rbx rdi rip rsp 
write: rbp rbx rflags rsi rsp 
--------------------------------------------------------------------------------
000e7ee0: CLP; push r13 ; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; mov eax, dword ptr [rsi] ; and eax, 0x8000 ; jne 0xe7f53
read: eax r12 r13 rbp rbx rdi rflags rsi rsp 
write: eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000e8360: CLP; sub rsp, 0x18 ; mov esi, 1 ; xor eax, eax ; cmp dword ptr [rip + 0x2863fe], 0 ; je 0xe8380
read: eax rflags rsp 
write: eax esi rflags rsp 
--------------------------------------------------------------------------------
000e8440: CLP; cmp qword ptr [rip + 0x284274], 0 ; je 0xe8516
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000e8520: CLP; push rbx ; mov r10, rsi ; mov r9, rdi ; mov rbx, rcx ; mov esi, 1 ; xor eax, eax ; sub rsp, 0x40 ; cmp dword ptr [rip + 0x286234], 0 ; je 0xe854a
read: eax rbx rcx rdi rflags rsi rsp 
write: eax esi r10 r9 rbx rflags rsp 
--------------------------------------------------------------------------------
000e8630: CLP; push r15 ; push r14 ; push r13 ; mov r13, rcx ; push r12 ; mov r12, rdx ; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rsi ; sub rsp, 0x38 ; cmp byte ptr [rip + 0x284093], 0 ; mov qword ptr [rsp + 0x18], r8 ; je 0xe87c4
read: r12 r13 r14 r15 r8 rbp rbx rcx rdi rdx rflags rsi rsp 
write: r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000e8860: CLP; push r12 ; push rbp ; mov rbp, rsi ; mov esi, 0xa ; push rbx ; mov rbx, rdi ; sub rsp, 0x10 ; call 0x83a5c
read: r12 rbp rbx rdi rip rsi rsp 
write: esi rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000e8c40: CLP; push r12 ; mov rax, rdi ; mov rdi, rdx ; mov rdx, rcx ; mov r12, r8 ; push rbp ; mov rbp, rsi ; mov rsi, rax ; push rbx ; lea rbx, [rdi + rcx - 1] ; mov byte ptr [rbx], 0 ; call 0x8740c
read: r12 r8 rax rbp rbx rcx rdi rdx rip rsi rsp 
write: r12 rax rbp rbx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000e8cd0: CLP; push r15 ; push r14 ; mov r14, r8 ; push r13 ; mov r13, rcx ; push r12 ; mov r12, rdx ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 0x18 ; mov eax, dword ptr [rdi] ; mov qword ptr [rsp + 8], rsi ; and eax, 0x8000 ; jne 0xe8d52
read: eax r12 r13 r14 r15 r8 rbp rbx rcx rdi rdx rflags rsi rsp 
write: eax r12 r13 r14 rbp rflags rsp 
--------------------------------------------------------------------------------
000e8f30: CLP; ret
read: 
write: 
--------------------------------------------------------------------------------
000e8f40: CLP; mov eax, 0xffffffff ; cmp dword ptr [rip + 0x280339], eax ; jne 0xe9140
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e91f0: CLP; cmp dword ptr [rip + 0x28008d], -1 ; je 0xe92a4
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000e92b0: CLP; sub rsp, 8 ; mov esi, 1 ; xor eax, eax ; cmp dword ptr [rip + 0x2854ae], 0 ; je 0xe92d0
read: eax rflags rsp 
write: eax esi rflags rsp 
--------------------------------------------------------------------------------
000e9390: CLP; push r13 ; mov esi, 1 ; xor eax, eax ; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 0x18 ; cmp dword ptr [rip + 0x2853c5], 0 ; je 0xe93b9
read: eax r12 r13 rbp rbx rdi rflags rsp 
write: eax esi rbp rflags rsp 
--------------------------------------------------------------------------------
000e9530: CLP; push r14 ; mov esi, 1 ; xor eax, eax ; push r13 ; push r12 ; mov r12, rdi ; push rbp ; push rbx ; sub rsp, 0x10 ; cmp dword ptr [rip + 0x285223], 0 ; je 0xe955b
read: eax r12 r13 r14 rbp rbx rdi rflags rsp 
write: eax esi r12 rflags rsp 
--------------------------------------------------------------------------------
000e9700: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 0x38 ; lea rbp, [rsp + 0x20] ; mov rsi, rbp ; call 0x6c5bc
read: r12 r13 r14 r15 rbp rbx rdi rip rsp 
write: rbp rbx rflags rsi rsp 
--------------------------------------------------------------------------------
000e9900: CLP; push r15 ; push r14 ; push r13 ; mov r13, rdi ; push r12 ; push rbp ; mov rbp, rsi ; push rbx ; sub rsp, 0x18 ; mov eax, dword ptr [rsi] ; and eax, 0x8000 ; jne 0xe9977
read: eax r12 r13 r14 r15 rbp rbx rdi rflags rsi rsp 
write: eax r13 rbp rflags rsp 
--------------------------------------------------------------------------------
000e9b60: CLP; sub rsp, 0x18 ; mov esi, 1 ; xor eax, eax ; cmp dword ptr [rip + 0x284bfe], 0 ; je 0xe9b80
read: eax rflags rsp 
write: eax esi rflags rsp 
--------------------------------------------------------------------------------
000e9c40: CLP; cmp qword ptr [rip + 0x282bcc], 0 ; je 0xe9d16
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000e9d20: CLP; push rbx ; mov r10, rsi ; mov r9, rdi ; mov rbx, rcx ; mov esi, 1 ; xor eax, eax ; sub rsp, 0x40 ; cmp dword ptr [rip + 0x284a34], 0 ; je 0xe9d4a
read: eax rbx rcx rdi rflags rsi rsp 
write: eax esi r10 r9 rbx rflags rsp 
--------------------------------------------------------------------------------
000e9e30: CLP; push r15 ; push r14 ; push r13 ; mov r13, rcx ; push r12 ; mov r12, rdx ; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rsi ; sub rsp, 0x38 ; cmp byte ptr [rip + 0x2829eb], 0 ; mov qword ptr [rsp + 0x18], r8 ; je 0xe9fc4
read: r12 r13 r14 r15 r8 rbp rbx rcx rdi rdx rflags rsi rsp 
write: r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000ea060: CLP; push r15 ; mov r15, rdx ; push r14 ; mov r14, rdx ; push r13 ; lea r13, [rdx + rcx] ; push r12 ; mov r12, rsi ; push rbp ; mov rbp, r8 ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; cmp rdx, rdi ; ja 0xea08f
read: r12 r13 r14 r15 r8 rbp rbx rdi rdx rflags rsi rsp 
write: r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000ea3a0: CLP; push r14 ; cmp rdi, rdx ; push r13 ; mov r13, r8 ; push r12 ; mov r12, rsi ; push rbp ; mov rbp, rcx ; push rbx ; mov rbx, rdx ; jb 0xea3c2
read: r12 r13 r14 r8 rbp rbx rcx rdi rdx rflags rsi rsp 
write: r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000ea450: CLP; push r15 ; mov r15, r8 ; push r14 ; mov r14, rcx ; push r13 ; push r12 ; mov r12, rdx ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 0x18 ; mov eax, dword ptr [rdi] ; mov qword ptr [rsp], rsi ; and eax, 0x8000 ; jne 0xea4d1
read: eax r12 r13 r14 r15 r8 rbp rbx rcx rdi rdx rflags rsi rsp 
write: eax r12 r14 r15 rbp rflags rsp 
--------------------------------------------------------------------------------
000ea6c0: CLP; push r14 ; mov r14, rsi ; push r13 ; mov r13, rdx ; push r12 ; mov r12, rcx ; push rbp ; mov rbp, rdi ; mov edi, 0x48 ; push rbx ; call 0x1f3cc
read: r12 r13 r14 rbp rbx rcx rdi rdx rip rsi rsp 
write: edi r12 r13 r14 rbp rsp 
--------------------------------------------------------------------------------
000ea750: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 0x18 ; mov rbx, qword ptr [rdi + 0x30] ; add rbx, qword ptr [rdi + 0x20] ; mov r14, qword ptr [rdi + 0x38] ; cmp rbx, r14 ; jae 0xea85d
read: r12 r13 r14 r15 rbp rbx rdi rflags rsp 
write: r14 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000ead10: CLP; push rbx ; mov rbx, rdi ; call 0xea74c
read: rbx rdi rip rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
000ead70: CLP; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; cmp rax, rsi ; jb 0xead9c
read: rax rbp rbx rdi rflags rsi rsp 
write: rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000eae30: CLP; push r13 ; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 0xd8 ; test al, al ; mov qword ptr [rsp + 0x30], rdx ; mov qword ptr [rsp + 0x38], rcx ; mov qword ptr [rsp + 0x40], r8 ; mov qword ptr [rsp + 0x48], r9 ; je 0xeae8f
read: al r12 r13 r8 r9 rbp rbx rcx rdi rdx rflags rsp 
write: rbp rflags rsp 
--------------------------------------------------------------------------------
000eaf50: CLP; push r12 ; mov r12, rsi ; push rbp ; mov rbp, rdx ; push rbx ; mov rbx, rdi ; mov rdi, qword ptr [rdi + 0x38] ; lea rax, [rdi + rdx] ; cmp qword ptr [rbx + 0x40], rax ; jae 0xeaf86
read: r12 rax rbp rbx rdi rdx rflags rsi rsp 
write: r12 rax rbp rbx rdi rflags rsp 
--------------------------------------------------------------------------------
000eafb0: CLP; push r12 ; mov r12, rdi ; mov rdi, rsi ; push rbp ; mov rbp, rsi ; push rbx ; call 0x856dc
read: r12 rbp rbx rdi rip rsi rsp 
write: r12 rbp rdi rsp 
--------------------------------------------------------------------------------
000eb000: CLP; push rbp ; mov ebp, esi ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov rdx, qword ptr [rdi + 0x38] ; cmp rdx, qword ptr [rdi + 0x40] ; jae 0xeb02c
read: esi rbp rbx rdi rdx rflags rsp 
write: ebp rbx rdx rflags rsp 
--------------------------------------------------------------------------------
000eb060: CLP; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov rax, qword ptr [rdi + 0x38] ; sub rax, qword ptr [rdi + 0x30] ; cmp rax, qword ptr [rdi + 0x20] ; jbe 0xeb083
read: rax rbp rbx rdi rflags rsi rsp 
write: rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000eb0a0: CLP; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov rax, qword ptr [rdi + 0x38] ; sub rax, qword ptr [rdi + 0x30] ; cmp rax, qword ptr [rdi + 0x20] ; jbe 0xeb0c3
read: rax rbp rbx rdi rflags rsi rsp 
write: rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000eb0e0: CLP; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov rax, qword ptr [rdi + 0x38] ; sub rax, qword ptr [rdi + 0x30] ; cmp rax, qword ptr [rdi + 0x20] ; jbe 0xeb103
read: rax rbp rbx rdi rflags rsi rsp 
write: rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000eb120: CLP; mov rax, qword ptr [rdi + 0x38] ; sub rax, qword ptr [rdi + 0x30] ; cmp rax, qword ptr [rdi + 0x20] ; push rbx ; mov rbx, rdi ; jbe 0xeb13b
read: rax rbx rdi rflags rsp 
write: rax rbx rflags rsp 
--------------------------------------------------------------------------------
000eb150: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x18 ; mov ebp, dword ptr [rdi + 8] ; mov r12, qword ptr [rdi] ; mov r13, qword ptr [rdi + 0x10] ; test ebp, ebp ; je 0xeb231
read: ebp r12 r13 r14 r15 rbp rbx rflags rsp 
write: ebp r12 r13 rflags rsp 
--------------------------------------------------------------------------------
000eb240: CLP; xor eax, eax ; test byte ptr [rdi + 0x18], 8 ; mov edx, dword ptr [rdi + 8] ; jne 0xeb26c
read: eax rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
000eb280: CLP; mov rdx, qword ptr [rdi] ; mov r8, qword ptr [rip + 0x27db72] ; movzx ecx, byte ptr [rdx] ; mov rax, qword ptr fs:[r8] ; movsx rsi, cl ; test byte ptr [rax + rsi*2 + 1], 0x20 ; je 0xeb2c1
read: cl rflags 
write: ecx r8 rax rdx rflags rsi 
--------------------------------------------------------------------------------
000eb310: CLP; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 8 ; mov rdi, qword ptr [rdi + 0x18] ; test rdi, rdi ; jne 0xeb32f
read: rbp rbx rdi rflags rsp 
write: rbp rdi rflags rsp 
--------------------------------------------------------------------------------
000eb380: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rsi ; sub rsp, 0x18 ; mov rdx, qword ptr [rbp + 0x20] ; mov rcx, qword ptr [rbx + 0x20] ; mov edi, dword ptr [rdi + 0x18] ; mov esi, dword ptr [rsi + 0x18] ; cmp rdx, rcx ; je 0xeb514
read: r12 r13 r14 r15 rbp rbx rcx rdi rdx rflags rsi rsp 
write: edi esi rbp rbx rcx rdx rflags rsp 
--------------------------------------------------------------------------------
000eb730: CLP; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 0x18 ; mov rax, qword ptr [rdi + 0x38] ; sub rax, qword ptr [rdi + 0x30] ; cmp rax, qword ptr [rdi + 0x20] ; ja 0xeb7ac
read: rax rbp rbx rdi rflags rsp 
write: rax rbx rflags rsp 
--------------------------------------------------------------------------------
000eb7d0: CLP; push r12 ; test rdx, rdx ; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rdx ; je 0xeb80b
read: r12 rbp rbx rdi rdx rflags rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000eb820: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; mov rbp, rdx ; mov edx, 5 ; push rbx ; mov rbx, rsi ; mov rsi, rdi ; sub rsp, 0x18 ; mov rdi, qword ptr [rbx + 0x30] ; call 0x2f4bc
read: r12 r13 r14 r15 rbp rbx rdi rdx rip rsi rsp 
write: edx rbp rbx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000eba80: CLP; push r14 ; push r13 ; push r12 ; mov r12d, edi ; push rbp ; push rbx ; mov rbx, rsi ; mov esi, dword ptr [rsi + 0x18] ; test esi, esi ; je 0xebb5c
read: edi esi r12 r13 r14 rbp rbx rflags rsi rsp 
write: esi r12d rbx rflags rsp 
--------------------------------------------------------------------------------
000ebc30: CLP; push r15 ; mov r15, rdi ; push r14 ; push r13 ; mov r13d, ecx ; push r12 ; mov r12d, edx ; mov edx, 5 ; push rbp ; mov rbp, r9 ; push rbx ; sub rsp, 0x38 ; mov qword ptr [rsp], rsi ; mov rsi, qword ptr [rdi + 0x18] ; mov rdi, qword ptr [rdi + 0x30]
read: ecx edx r12 r13 r14 r15 r9 rbp rbx rdi rsi rsp 
write: edx r12d r13d r15 rbp rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000ec1d0: CLP; push rbx ; mov rbx, rdi ; sub rsp, 0x10 ; mov rax, qword ptr [rdi + 0x38] ; mov rdx, rax ; sub rdx, qword ptr [rdi + 0x30] ; cmp rdx, qword ptr [rdi + 0x20] ; ja 0xec23c
read: rax rbx rdi rdx rflags rsp 
write: rax rbx rdx rflags rsp 
--------------------------------------------------------------------------------
000ec2a0: CLP; push r13 ; push r12 ; mov r12, rcx ; push rbp ; mov rbp, rdi ; mov rdi, rdx ; push rbx ; sub rsp, 8 ; mov rax, qword ptr [rbp + 0x10] ; mov ebx, dword ptr [rsi + 0x18] ; or ebx, dword ptr [rbp + 0x18] ; test rax, rax ; je 0xec33c
read: ebx r12 r13 rax rbp rbx rcx rdi rdx rflags rsp 
write: ebx r12 rax rbp rdi rflags rsp 
--------------------------------------------------------------------------------
000ec390: CLP; push r15 ; mov r15d, ecx ; push r14 ; mov r14, rsi ; push r13 ; mov r13, rdx ; push r12 ; mov r12, rdi ; push rbp ; mov rbp, r8 ; push rbx ; sub rsp, 0x38 ; mov rax, qword ptr [rdx] ; mov rbx, qword ptr [rdi + 0x20] ; mov qword ptr [rsp], rsi
read: ecx r12 r13 r14 r15 r8 rbp rbx rdi rdx rsi rsp 
write: r12 r13 r14 r15d rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000ec5e0: CLP; cmp qword ptr [rdi + 0x10], 0 ; je 0xec5ec
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000ec620: CLP; push rbp ; mov rbp, rsp ; push r15 ; push r14 ; push r13 ; mov r13, rdi ; push r12 ; push rbx ; sub rsp, 0x38 ; mov ebx, dword ptr [rdi + 8] ; mov qword ptr [rbp - 0x48], rsi ; test ebx, ebx ; jne 0xec64e
read: ebx r12 r13 r14 r15 rbp rbx rdi rflags rsi rsp 
write: ebx r13 rbp rflags rsp 
--------------------------------------------------------------------------------
000ec890: CLP; test rdi, rdi ; je 0xec8d4
read: rdi rflags 
write: rflags 
--------------------------------------------------------------------------------
000ec920: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x48 ; mov r15, qword ptr [rdi + 0x20] ; mov rbx, qword ptr [rdi] ; mov qword ptr [rsp], rdi ; mov edi, 0x20 ; mov qword ptr [rsp + 8], rsi ; call 0x1f3cc
read: r12 r13 r14 r15 rbp rbx rdi rip rsi rsp 
write: edi r15 rbx rflags rsp 
--------------------------------------------------------------------------------
000ecf90: CLP; test esi, esi ; lea eax, [rsi - 1] ; je 0xed020
read: esi rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000ed030: CLP; push rbp ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; test rdi, rdi ; je 0xed09c
read: rbp rbx rdi rflags rsi rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
000ed0b0: CLP; push r14 ; mov r14d, esi ; push r13 ; mov r13d, edx ; push r12 ; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 0x190 ; test al, al ; mov qword ptr [rsp + 0x100], r8 ; mov qword ptr [rsp + 0x108], r9 ; je 0xed11c
read: al edx esi r12 r13 r14 r8 r9 rbp rbx rdi rflags rsp 
write: r13d r14d rbx rflags rsp 
--------------------------------------------------------------------------------
000ed2f0: CLP; push rbp ; mov rbp, rsp ; push r15 ; push r14 ; push r13 ; push r12 ; push rbx ; sub rsp, 0xb8 ; test rdx, rdx ; mov qword ptr [rbp - 0xd0], rdi ; mov qword ptr [rbp - 0xb8], rdx ; mov rdi, rdx ; mov dword ptr [rbp - 0x84], ecx ; mov qword ptr [rbp - 0xa0], r8 ; je 0xeda8c
read: ecx r12 r13 r14 r15 r8 rbp rbx rdi rdx rflags rsp 
write: rbp rdi rflags rsp 
--------------------------------------------------------------------------------
000ee790: CLP; sub rsp, 8 ; mov r8, rcx ; mov ecx, edx ; mov rdx, rsi ; xor esi, esi ; call 0xed2ec
read: edx esi rcx rip rsi rsp 
write: ecx esi r8 rdx rflags rsp 
--------------------------------------------------------------------------------
000ee7b0: CLP; push rbp ; mov ebp, edx ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; test rdi, rdi ; je 0xee820
read: edx rbp rbx rdi rflags rsp 
write: ebp rbx rflags rsp 
--------------------------------------------------------------------------------
000ee850: CLP; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 0xe8 ; test al, al ; mov qword ptr [rsp + 0x40], rdx ; mov qword ptr [rsp + 0x48], rcx ; mov qword ptr [rsp + 0x50], r8 ; mov qword ptr [rsp + 0x58], r9 ; je 0xee8ae
read: al r8 r9 rbp rbx rcx rdi rdx rflags rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
000ee9c0: CLP; push rbp ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; mov rax, qword ptr [rdi] ; mov rbp, qword ptr [rdi + 0x20] ; test rax, rax ; je 0xeea1c
read: rax rbp rbx rflags rsi rsp 
write: rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000eea70: CLP; push rbp ; push rbx ; mov rbx, rdx ; sub rsp, 8 ; cmp edi, -3 ; je 0xeeb7c
read: edi rbp rbx rdx rflags rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
000eebb0: CLP; push r15 ; push r14 ; push r13 ; mov r13, r8 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x38 ; mov r14, qword ptr [rdi] ; mov rbp, qword ptr [rdi + 0x20] ; mov qword ptr [rsp + 0x18], rdi ; mov qword ptr [rsp + 0x20], rsi ; mov dword ptr [rsp + 0x2c], edx ; mov qword ptr [rsp], rcx ; test r14, r14
read: edx r12 r13 r14 r15 r8 rbp rbx rcx rdi rsi rsp 
write: r13 r14 rbp rflags rsp 
--------------------------------------------------------------------------------
000eeed0: CLP; cmp edi, 0x56 ; je 0xeeedc
read: edi rflags 
write: rflags 
--------------------------------------------------------------------------------
000eef80: CLP; push rbp ; mov rbp, rsp ; push r15 ; push r14 ; push r13 ; mov r13, rdi ; push r12 ; mov r12d, ecx ; push rbx ; sub rsp, 0x158 ; test cl, 0x10 ; mov dword ptr [rbp - 0x164], esi ; mov qword ptr [rbp - 0x160], rdx ; mov qword ptr [rbp - 0x178], r8 ; mov qword ptr [rbp - 0x180], r9
read: cl ecx esi r12 r13 r14 r15 r8 r9 rbp rbx rdi rdx rsp 
write: r12d r13 rbp rflags rsp 
--------------------------------------------------------------------------------
000efe90: CLP; test rsi, rsi ; je 0xefec4
read: rflags rsi 
write: rflags 
--------------------------------------------------------------------------------
000efed0: CLP; sub rsp, 8 ; mov rax, qword ptr [rip + 0x278ec1] ; mov edx, 0x106 ; mov rsi, qword ptr [rax] ; call 0xee7ac
read: rip rsp 
write: edx rax rflags rsi rsp 
--------------------------------------------------------------------------------
000eff00: CLP; mov eax, dword ptr [rdi + 0x18] ; and eax, 8 ; jne 0xeff34
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000eff40: CLP; mov ecx, dword ptr [rdi + 8] ; xor eax, eax ; test ecx, ecx ; jne 0xeff4f
read: eax ecx rflags 
write: eax ecx rflags 
--------------------------------------------------------------------------------
000eff70: CLP; mov rax, qword ptr fs:[0x698] ; shr rax, 2 ; mov edx, 0x10000 ; sub rax, 1 ; cmp rax, 0xffff ; ja 0xeffa7
read: rax rflags 
write: edx rax rflags 
--------------------------------------------------------------------------------
000effc0: CLP; mov edx, dword ptr [rip + 0x27e7a6] ; mov eax, 1 ; test edx, edx ; jne 0xeffd4
read: edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
000f0000: CLP; mov ecx, dword ptr [rip + 0x27e766] ; xor eax, eax ; test ecx, ecx ; jne 0xf0014
read: eax ecx rflags 
write: eax ecx rflags 
--------------------------------------------------------------------------------
000f0040: CLP; mov esi, dword ptr [rip + 0x27e726] ; xor eax, eax ; test esi, esi ; jne 0xf0054
read: eax esi rflags 
write: eax esi rflags 
--------------------------------------------------------------------------------
000f0080: CLP; mov r8d, dword ptr [rip + 0x27e6e5] ; xor eax, eax ; test r8d, r8d ; jne 0xf0094
read: eax r8d rflags 
write: eax r8d rflags 
--------------------------------------------------------------------------------
000f00c0: CLP; mov r9d, dword ptr [rip + 0x27e6a5] ; xor eax, eax ; test r9d, r9d ; jne 0xf00d4
read: eax r9d rflags 
write: eax r9d rflags 
--------------------------------------------------------------------------------
000f0100: CLP; mov r10d, dword ptr [rip + 0x27e665] ; xor eax, eax ; test r10d, r10d ; jne 0xf0114
read: eax r10d rflags 
write: eax r10d rflags 
--------------------------------------------------------------------------------
000f0140: CLP; mov r11d, dword ptr [rip + 0x27e625] ; xor eax, eax ; test r11d, r11d ; jne 0xf0154
read: eax r11d rflags 
write: eax r11d rflags 
--------------------------------------------------------------------------------
000f0180: CLP; mov edx, dword ptr [rip + 0x27e5e6] ; xor eax, eax ; test edx, edx ; jne 0xf0194
read: eax edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
000f01c0: CLP; mov ecx, dword ptr [rip + 0x27e5a6] ; xor eax, eax ; test ecx, ecx ; jne 0xf01d4
read: eax ecx rflags 
write: eax ecx rflags 
--------------------------------------------------------------------------------
000f0200: CLP; mov r8d, dword ptr [rip + 0x27e565] ; xor eax, eax ; test r8d, r8d ; jne 0xf0214
read: eax r8d rflags 
write: eax r8d rflags 
--------------------------------------------------------------------------------
000f0240: CLP; mov r9d, dword ptr [rip + 0x27e525] ; xor eax, eax ; test r9d, r9d ; jne 0xf0254
read: eax r9d rflags 
write: eax r9d rflags 
--------------------------------------------------------------------------------
000f0280: CLP; mov r10d, dword ptr [rip + 0x27e4e5] ; xor eax, eax ; test r10d, r10d ; jne 0xf0294
read: eax r10d rflags 
write: eax r10d rflags 
--------------------------------------------------------------------------------
000f02c0: CLP; mov r11d, dword ptr [rip + 0x27e4a5] ; xor eax, eax ; test r11d, r11d ; jne 0xf02d4
read: eax r11d rflags 
write: eax r11d rflags 
--------------------------------------------------------------------------------
000f0300: CLP; mov edx, dword ptr [rip + 0x27e466] ; xor eax, eax ; test edx, edx ; jne 0xf0314
read: eax edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
000f0340: CLP; mov ecx, dword ptr [rip + 0x27e426] ; xor eax, eax ; test ecx, ecx ; jne 0xf0354
read: eax ecx rflags 
write: eax ecx rflags 
--------------------------------------------------------------------------------
000f0380: CLP; mov r8d, dword ptr [rip + 0x27e3e5] ; xor eax, eax ; test r8d, r8d ; jne 0xf0394
read: eax r8d rflags 
write: eax r8d rflags 
--------------------------------------------------------------------------------
000f03c0: CLP; mov r10d, dword ptr [rip + 0x27e3a5] ; xor eax, eax ; test r10d, r10d ; jne 0xf03d4
read: eax r10d rflags 
write: eax r10d rflags 
--------------------------------------------------------------------------------
000f0400: CLP; mov edx, dword ptr [rip + 0x27e366] ; xor eax, eax ; test edx, edx ; jne 0xf0414
read: eax edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
000f0440: CLP; mov esi, dword ptr [rip + 0x27e326] ; xor eax, eax ; test esi, esi ; jne 0xf0454
read: eax esi rflags 
write: eax esi rflags 
--------------------------------------------------------------------------------
000f0480: CLP; mov r9d, dword ptr [rip + 0x27e2e5] ; xor eax, eax ; test r9d, r9d ; jne 0xf0494
read: eax r9d rflags 
write: eax r9d rflags 
--------------------------------------------------------------------------------
000f04c0: CLP; mov r11d, dword ptr [rip + 0x27e2a5] ; xor eax, eax ; test r11d, r11d ; jne 0xf04d4
read: eax r11d rflags 
write: eax r11d rflags 
--------------------------------------------------------------------------------
000f0500: CLP; sub rsp, 8 ; mov eax, dword ptr [rip + 0x27e262] ; test eax, eax ; jne 0xf0515
read: eax rflags rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
000f0530: CLP; mov ecx, dword ptr [rip + 0x27e236] ; xor eax, eax ; test ecx, ecx ; jne 0xf0544
read: eax ecx rflags 
write: eax ecx rflags 
--------------------------------------------------------------------------------
000f0570: CLP; mov r8d, dword ptr [rip + 0x27e1f5] ; xor eax, eax ; test r8d, r8d ; jne 0xf0584
read: eax r8d rflags 
write: eax r8d rflags 
--------------------------------------------------------------------------------
000f05b0: CLP; mov r9d, dword ptr [rip + 0x27e1b5] ; xor eax, eax ; test r9d, r9d ; jne 0xf05c4
read: eax r9d rflags 
write: eax r9d rflags 
--------------------------------------------------------------------------------
000f05f0: CLP; mov r10d, dword ptr [rip + 0x27e175] ; xor eax, eax ; test r10d, r10d ; jne 0xf0604
read: eax r10d rflags 
write: eax r10d rflags 
--------------------------------------------------------------------------------
000f0630: CLP; mov r11d, dword ptr [rip + 0x27e135] ; xor eax, eax ; test r11d, r11d ; jne 0xf0644
read: eax r11d rflags 
write: eax r11d rflags 
--------------------------------------------------------------------------------
000f0670: CLP; mov edx, dword ptr [rip + 0x27e0f6] ; xor eax, eax ; test edx, edx ; jne 0xf0684
read: eax edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
000f06b0: CLP; mov ecx, dword ptr [rip + 0x27e0b6] ; xor eax, eax ; test ecx, ecx ; jne 0xf06c4
read: eax ecx rflags 
write: eax ecx rflags 
--------------------------------------------------------------------------------
000f06f0: CLP; mov r8d, dword ptr [rip + 0x27e075] ; xor eax, eax ; test r8d, r8d ; jne 0xf0704
read: eax r8d rflags 
write: eax r8d rflags 
--------------------------------------------------------------------------------
000f0730: CLP; mov r9d, dword ptr [rip + 0x27e035] ; xor eax, eax ; test r9d, r9d ; jne 0xf0744
read: eax r9d rflags 
write: eax r9d rflags 
--------------------------------------------------------------------------------
000f0770: CLP; push r10 ; push rdx ; xor r10, r10 ; mov edx, 2 ; mov esi, 0x80 ; cmp eax, edx ; jne 0xf078b
read: eax edx r10 rdx rflags rsp 
write: edx esi r10 rflags rsp 
--------------------------------------------------------------------------------
000f07a0: CLP; push rsi ; push rdx ; mov dword ptr [rdi], 0 ; mov esi, 0x81 ; mov edx, 1 ; mov eax, 0xca ; syscall ; pop rdx ; pop rsi ; ret
read: rdx rsi rsp 
write: eax edx esi rdx rsi rsp 
--------------------------------------------------------------------------------
000f07c0: CLP; mov eax, dword ptr fs:[0x308] ; mov r11d, eax ; or r11d, 2 ; cmp r11d, eax ; je 0xf07eb
read: eax r11d rflags 
write: eax r11d rflags 
--------------------------------------------------------------------------------
000f0820: CLP; test edi, 2 ; jne 0xf084f
read: edi rflags 
write: rflags 
--------------------------------------------------------------------------------
000f0880: CLP; mov edx, dword ptr [rdi + 0x10] ; mov rax, rdi ; test edx, edx ; jne 0xf088c
read: edx rdi rflags 
write: edx rax rflags 
--------------------------------------------------------------------------------
000f08b0: CLP; push rbx ; mov qword ptr [rip + 0x27dc94], rdi ; mov rbx, rdx ; xor ecx, ecx ; mov rdx, rsi ; xor edi, edi ; xor esi, esi ; call 0xf091c
read: ecx edi esi rbx rdi rdx rip rsi rsp 
write: ecx edi esi rbx rdx rflags rsp 
--------------------------------------------------------------------------------
000f0920: CLP; push r12 ; xor eax, eax ; mov r12, rcx ; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rsi ; mov esi, 1 ; sub rsp, 0x10 ; cmp dword ptr [rip + 0x27de31], 0 ; je 0xf094d
read: eax r12 rbp rbx rcx rdi rflags rsi rsp 
write: eax esi r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000f0ab0: CLP; nop dword ptr [rax] ; mov rdx, qword ptr [rip + 0x27da99] ; mov qword ptr [rdi], rdx ; mov rax, rdx ; cmp dword ptr fs:[0x18], 0 ; je 0xf0acd
read: rdx rflags 
write: rax rdx rflags 
--------------------------------------------------------------------------------
000f0ae0: CLP; mov r9, qword ptr [rip + 0x27da6d] ; push rbp ; mov rbp, rsp ; test r9, r9 ; je 0xf0b0d
read: r9 rbp rflags rsp 
write: r9 rbp rflags rsp 
--------------------------------------------------------------------------------
000f0c70: CLP; mov rax, qword ptr [rip + 0x27c50d] ; test rax, rax ; je 0xf0c84
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000f0df0: CLP; not edi ; mov ecx, 0xe5 ; mov r9, rsi ; lea r8d, [rdi*8 + 2] ; xor esi, esi ; mov eax, ecx ; movsxd rdi, r8d ; syscall ; cmp eax, 0xfffff000 ; mov rdx, rax ; jbe 0xf0e2c
read: eax ecx edi esi r8d rax rflags rsi 
write: eax ecx edi esi r8d r9 rdi rdx rflags 
--------------------------------------------------------------------------------
000f0e40: CLP; movsxd rdi, edi ; mov eax, 0xe5 ; syscall ; cmp rax, -0x1000 ; ja 0xf0e54
read: edi rax rflags 
write: eax rdi rflags 
--------------------------------------------------------------------------------
000f0e70: CLP; sub rsp, 8 ; mov rax, qword ptr [rip + 0x277f99] ; mov rax, qword ptr [rax] ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; call rax
read: rax rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000f0ec0: CLP; cmp qword ptr [rsi + 8], 0x3b9ac9ff ; ja 0xf0f0c
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000f0f30: CLP; cmp edi, 3 ; mov eax, 0x16 ; je 0xf0f80
read: edi rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000f0fd0: CLP; push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
read: eax rbp rsp 
write: eax rbp rflags rsp 
--------------------------------------------------------------------------------
000f0fe0: CLP; push rbp ; mov rbp, rsp ; push r13 ; push r12 ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; movsxd rdx, dword ptr [rsi + 0x10] ; cmp edx, -1 ; je 0xf103a
read: edx r12 r13 rbp rbx rflags rsi rsp 
write: rbp rbx rdx rflags rsp 
--------------------------------------------------------------------------------
000f1080: CLP; push rbp ; lea rdi, [rip + 0x433ba] ; mov esi, 0x80000001 ; mov rbp, rsp ; call 0x11c37c
read: rbp rip rsp 
write: esi rbp rdi rsp 
--------------------------------------------------------------------------------
000f1130: CLP; push rbp ; mov rbp, rsp ; push rbx ; mov ebx, esi ; sub rsp, 0x28 ; mov edx, dword ptr [rip + 0x27d62b] ; mov qword ptr [rbp - 0x30], rdi ; mov qword ptr [rbp - 0x28], 0 ; mov dword ptr [rbp - 0x20], 0xffffffff ; mov dword ptr [rbp - 0x1c], esi ; test edx, edx ; jne 0xf11ac
read: edx esi rbp rbx rdi rflags rsp 
write: ebx edx rbp rflags rsp 
--------------------------------------------------------------------------------
000f1220: CLP; push rbp ; movsxd rax, esi ; mov rcx, rax ; mov rbp, rsp ; push r15 ; push r14 ; push r13 ; mov r13, rdi ; push r12 ; push rbx ; sub rsp, 0x58 ; mov qword ptr [rbp - 0x60], rax ; shl rax, 5 ; add rax, 0x10 ; mov dword ptr [rbp - 0x64], esi
read: esi r12 r13 r14 r15 rax rbp rbx rdi rsp 
write: r13 rax rbp rcx rflags rsp 
--------------------------------------------------------------------------------
000f1500: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x138 ; test esi, esi ; mov dword ptr [rsp + 0xc], edx ; jle 0xf178c
read: edx esi r12 r13 r14 r15 rbp rbx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f1850: CLP; ret
read: 
write: 
--------------------------------------------------------------------------------
000f1860: CLP; sub rsp, 8 ; cmp rcx, rdx ; jb 0xf1877
read: rcx rdx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f1890: CLP; mov rcx, rsi ; and ecx, 7 ; je 0xf18bf
read: ecx rflags rsi 
write: ecx rcx rflags 
--------------------------------------------------------------------------------
000f19f0: CLP; sub rsp, 8 ; lea r9, [rdi + rdx] ; mov rcx, rdi ; jmp 0xf1a07
read: rdi rsp 
write: r9 rcx rflags rsp 
--------------------------------------------------------------------------------
000f1a60: CLP; mov rcx, rsi ; and ecx, 7 ; mov r10, rdi ; je 0xf1a92
read: ecx rdi rflags rsi 
write: ecx r10 rcx rflags 
--------------------------------------------------------------------------------
000f1bc0: CLP; push rbx ; mov r9, rdi ; lea rbx, [rdi + rcx] ; jmp 0xf1bd2
read: rbx rdi rsp 
write: r9 rbx rsp 
--------------------------------------------------------------------------------
000f1d10: CLP; sub rsp, 8 ; cmp rcx, rdx ; jb 0xf1d27
read: rcx rdx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f1d40: CLP; sub rsp, 8 ; cmp rcx, rdx ; jb 0xf1d57
read: rcx rdx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f1d70: CLP; sub rsp, 0xd8 ; test al, al ; mov qword ptr [rsp + 0x40], r8 ; mov qword ptr [rsp + 0x48], r9 ; je 0xf1dbc
read: al r8 r9 rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f1e00: CLP; sub rsp, 8 ; call 0xf291c
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f1e10: CLP; push r15 ; push r14 ; push r13 ; push r12 ; mov r12, rdx ; push rbp ; push rbx ; sub rsp, 0xf8 ; test rdx, rdx ; mov qword ptr [rsp + 0x88], 0 ; je 0xf1ec2
read: r12 r13 r14 r15 rbp rbx rdx rflags rsp 
write: r12 rflags rsp 
--------------------------------------------------------------------------------
000f1ed0: CLP; sub rsp, 0xd8 ; test al, al ; mov qword ptr [rsp + 0x48], r9 ; je 0xf1f17
read: al r9 rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f1f60: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x138 ; cmp rcx, rsi ; jb 0xf2042
read: r12 r13 r14 r15 rbp rbx rcx rflags rsi rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f2050: CLP; push r12 ; mov r12d, edi ; push rbp ; push rbx ; sub rsp, 0xd0 ; test al, al ; mov qword ptr [rsp + 0x30], rdx ; mov qword ptr [rsp + 0x38], rcx ; mov qword ptr [rsp + 0x40], r8 ; mov qword ptr [rsp + 0x48], r9 ; je 0xf20ad
read: al edi r12 r8 r9 rbp rbx rcx rdx rflags rsp 
write: r12d rflags rsp 
--------------------------------------------------------------------------------
000f2240: CLP; push rbp ; mov ebp, esi ; push rbx ; mov rbx, rdi ; sub rsp, 0xd8 ; test al, al ; mov qword ptr [rsp + 0x38], rcx ; mov qword ptr [rsp + 0x40], r8 ; mov qword ptr [rsp + 0x48], r9 ; je 0xf2298
read: al esi r8 r9 rbp rbx rcx rdi rflags rsp 
write: ebp rbx rflags rsp 
--------------------------------------------------------------------------------
000f2420: CLP; push r13 ; mov r10, rsi ; push r12 ; mov r12d, edi ; push rbp ; push rbx ; sub rsp, 8 ; mov rbp, qword ptr [rip + 0x276b05] ; mov rbx, qword ptr [rbp] ; mov eax, dword ptr [rbx] ; mov rdi, rbx ; and eax, 0x8000 ; jne 0xf24ac
read: eax edi r12 r13 rbp rbx rflags rsi rsp 
write: eax r10 r12d rbp rbx rdi rflags rsp 
--------------------------------------------------------------------------------
000f25a0: CLP; push r12 ; mov r10, rdx ; mov rdx, rcx ; push rbp ; mov ebp, esi ; push rbx ; mov eax, dword ptr [rdi] ; mov rbx, rdi ; and eax, 0x8000 ; jne 0xf2615
read: eax esi r12 rbp rbx rcx rdi rdx rflags rsp 
write: eax ebp r10 rbx rdx rflags rsp 
--------------------------------------------------------------------------------
000f2700: CLP; push r13 ; push r12 ; mov r12, rsi ; push rbp ; push rbx ; sub rsp, 8 ; test rsi, rsi ; je 0xf2909
read: r12 r13 rbp rbx rflags rsi rsp 
write: r12 rflags rsp 
--------------------------------------------------------------------------------
000f2920: CLP; lea rdi, [rip + 0x4445c] ; sub rsp, 8 ; call 0xf4afc
read: rip rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
000f2940: CLP; push r15 ; push r14 ; lea r14, [rdi + rsi] ; push r13 ; mov r13, rdi ; lea rdi, [rip + 0x43065] ; push r12 ; push rbp ; mov rbp, rsi ; lea rsi, [rip + 0x41b93] ; push rbx ; sub rsp, 0x48 ; call 0x6ca9c
read: r12 r13 r14 r15 rbp rbx rdi rip rsi rsp 
write: r13 r14 rbp rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000f2b50: CLP; test edx, edx ; jle 0xf2ca4
read: edx rflags 
write: rflags 
--------------------------------------------------------------------------------
000f2d20: CLP; test edx, edx ; jle 0xf2dbc
read: edx rflags 
write: rflags 
--------------------------------------------------------------------------------
000f2dd0: CLP; cmp rdx, rcx ; ja 0xf2df7
read: rcx rdx rflags 
write: rflags 
--------------------------------------------------------------------------------
000f2e10: CLP; sub rsp, 8 ; cmp rdx, r8 ; ja 0xf2e27
read: r8 rdx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f2e40: CLP; sub rsp, 8 ; cmp rdx, r8 ; ja 0xf2e57
read: r8 rdx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f2e70: CLP; sub rsp, 8 ; cmp rdx, rcx ; ja 0xf2e8a
read: rcx rdx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f2ea0: CLP; sub rsp, 8 ; cmp rdx, rcx ; ja 0xf2ec2
read: rcx rdx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f2ed0: CLP; cmp rdx, rcx ; ja 0xf2ef7
read: rcx rdx rflags 
write: rflags 
--------------------------------------------------------------------------------
000f2f10: CLP; sub rsp, 8 ; cmp rcx, r8 ; ja 0xf2f27
read: r8 rcx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f2f40: CLP; sub rsp, 8 ; call 0xd734c
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f2f80: CLP; sub rsp, 8 ; cmp rsi, rdx ; ja 0xf2f97
read: rdx rflags rsi rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f2fb0: CLP; sub rsp, 8 ; cmp rdx, 0xfff ; jbe 0xf2fcb
read: rdx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f2fe0: CLP; push r13 ; mov eax, 0xffffffff ; mov r9, rdi ; mov r13, r8 ; push r12 ; mov r12, rcx ; push rbp ; mov rbp, rdx ; push rbx ; mov rbx, rdx ; or rdx, rcx ; imul rbx, rcx ; sub rsp, 8 ; cmp rdx, rax ; ja 0xf3119
read: r12 r13 r8 rax rbp rbx rcx rdi rdx rflags rsp 
write: eax r12 r13 r9 rbp rbx rdx rflags rsp 
--------------------------------------------------------------------------------
000f31a0: CLP; push r12 ; mov eax, 0xffffffff ; mov r12, rcx ; push rbp ; mov rbp, rdx ; push rbx ; mov rbx, rdx ; or rdx, rcx ; imul rbx, rcx ; cmp rdx, rax ; ja 0xf31fe
read: r12 rax rbp rbx rcx rdx rflags rsp 
write: eax r12 rbp rbx rdx rflags rsp 
--------------------------------------------------------------------------------
000f3220: CLP; sub rsp, 8 ; mov rax, qword ptr [rip + 0x275b91] ; mov rax, qword ptr fs:[rax] ; mov rax, qword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; cmp rax, rdx ; ja 0xf3252
read: rax rdx rflags rsp 
write: eax rax rflags rsp 
--------------------------------------------------------------------------------
000f3260: CLP; mov r8, rdi ; mov rax, rdi ; xor ecx, ecx ; sub r8, rsi ; sar r8, 2 ; lea r9, [rsi + r8*4 - 4] ; nop dword ptr [rax + rax] ; cmp rcx, rdx ; je 0xf3295
read: ecx r8 rcx rdi rdx rflags rsi 
write: ecx r8 r9 rax rflags 
--------------------------------------------------------------------------------
000f32b0: CLP; sub rsp, 8 ; cmp rcx, rdx ; jb 0xf32cb
read: rcx rdx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f32e0: CLP; sub rsp, 8 ; cmp rcx, rdx ; jb 0xf32fb
read: rcx rdx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f3310: CLP; sub rsp, 8 ; cmp rcx, rdx ; jb 0xf332b
read: rcx rdx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f3340: CLP; sub rsi, rdi ; lea rax, [rdi - 4] ; xor ecx, ecx ; sar rsi, 2 ; lea rdi, [rsi*4 + 4] ; nop dword ptr [rax] ; cmp rcx, rdx ; je 0xf3374
read: ecx rcx rdi rdx rflags rsi 
write: ecx rax rdi rflags rsi 
--------------------------------------------------------------------------------
000f3390: CLP; sub rsp, 8 ; cmp rcx, rdx ; jb 0xf33a7
read: rcx rdx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f33c0: CLP; sub rsp, 8 ; sub rdx, 1 ; mov r8, rdi ; jmp 0xf33da
read: rdi rdx rsp 
write: r8 rdx rflags rsp 
--------------------------------------------------------------------------------
000f3430: CLP; sub rsp, 8 ; mov r10, rdi ; jmp 0xf3442
read: rdi rsp 
write: r10 rflags rsp 
--------------------------------------------------------------------------------
000f3580: CLP; sub rsp, 8 ; cmp rcx, rdx ; jb 0xf3597
read: rcx rdx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f35b0: CLP; sub rsp, 8 ; cmp rcx, rdx ; jb 0xf35c7
read: rcx rdx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f35e0: CLP; sub rsp, 0xd8 ; test al, al ; mov qword ptr [rsp + 0x48], r9 ; je 0xf3627
read: al r9 rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f3670: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; mov rbp, rsi ; push rbx ; sub rsp, 0x348 ; cmp rcx, rsi ; jb 0xf3759
read: r12 r13 r14 r15 rbp rbx rcx rflags rsi rsp 
write: rbp rflags rsp 
--------------------------------------------------------------------------------
000f3770: CLP; push r12 ; mov r12d, edi ; push rbp ; push rbx ; sub rsp, 0xd0 ; test al, al ; mov qword ptr [rsp + 0x30], rdx ; mov qword ptr [rsp + 0x38], rcx ; mov qword ptr [rsp + 0x40], r8 ; mov qword ptr [rsp + 0x48], r9 ; je 0xf37cd
read: al edi r12 r8 r9 rbp rbx rcx rdx rflags rsp 
write: r12d rflags rsp 
--------------------------------------------------------------------------------
000f3960: CLP; push rbp ; mov ebp, esi ; push rbx ; mov rbx, rdi ; sub rsp, 0xd8 ; test al, al ; mov qword ptr [rsp + 0x38], rcx ; mov qword ptr [rsp + 0x40], r8 ; mov qword ptr [rsp + 0x48], r9 ; je 0xf39b8
read: al esi r8 r9 rbp rbx rcx rdi rflags rsp 
write: ebp rbx rflags rsp 
--------------------------------------------------------------------------------
000f3b40: CLP; push r13 ; mov r10, rsi ; push r12 ; mov r12d, edi ; push rbp ; push rbx ; sub rsp, 8 ; mov rbp, qword ptr [rip + 0x2753e5] ; mov rbx, qword ptr [rbp] ; mov eax, dword ptr [rbx] ; mov rdi, rbx ; and eax, 0x8000 ; jne 0xf3bcc
read: eax edi r12 r13 rbp rbx rflags rsi rsp 
write: eax r10 r12d rbp rbx rdi rflags rsp 
--------------------------------------------------------------------------------
000f3cc0: CLP; push r12 ; mov r10, rdx ; mov rdx, rcx ; push rbp ; mov ebp, esi ; push rbx ; mov eax, dword ptr [rdi] ; mov rbx, rdi ; and eax, 0x8000 ; jne 0xf3d35
read: eax esi r12 rbp rbx rcx rdi rdx rflags rsp 
write: eax ebp r10 rbx rdx rflags rsp 
--------------------------------------------------------------------------------
000f3e20: CLP; test edx, edx ; jle 0xf3f7c
read: edx rflags 
write: rflags 
--------------------------------------------------------------------------------
000f3ff0: CLP; test edx, edx ; jle 0xf408c
read: edx rflags 
write: rflags 
--------------------------------------------------------------------------------
000f40a0: CLP; sub rsp, 8 ; cmp rcx, rdx ; jb 0xf40b7
read: rcx rdx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f40d0: CLP; test edi, edi ; js 0xf40f2
read: edi rflags 
write: rflags 
--------------------------------------------------------------------------------
000f4110: CLP; sub rsp, 8 ; cmp rdx, rcx ; ja 0xf4127
read: rcx rdx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f4140: CLP; sub rsp, 8 ; cmp rsi, rdx ; ja 0xf4157
read: rdx rflags rsi rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f4170: CLP; sub rsp, 8 ; cmp rsi, rdx ; ja 0xf4187
read: rdx rflags rsi rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f41a0: CLP; sub rsp, 8 ; mov rax, qword ptr [rip + 0x274c11] ; mov rax, qword ptr fs:[rax] ; mov rax, qword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; cmp rax, rcx ; ja 0xf41cb
read: rax rcx rflags rsp 
write: eax rax rflags rsp 
--------------------------------------------------------------------------------
000f41e0: CLP; sub rsp, 8 ; cmp r9, rcx ; jb 0xf41f7
read: r9 rcx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f4210: CLP; sub rsp, 8 ; cmp r9, rcx ; jb 0xf4227
read: r9 rcx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f4240: CLP; sub rsp, 8 ; cmp r8, rdx ; jb 0xf4257
read: r8 rdx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f4270: CLP; sub rsp, 8 ; cmp r8, rdx ; jb 0xf4287
read: r8 rdx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f42a0: CLP; sub rsp, 0x28 ; cmp rcx, rdx ; mov qword ptr [rsp + 8], rsi ; jb 0xf42cf
read: rcx rdx rflags rsi rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f42e0: CLP; sub rsp, 0x28 ; cmp rcx, rdx ; mov qword ptr [rsp + 8], rsi ; jb 0xf430f
read: rcx rdx rflags rsi rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f4320: CLP; sub rsp, 0xd8 ; test al, al ; mov qword ptr [rsp + 0x38], rcx ; mov qword ptr [rsp + 0x40], r8 ; mov qword ptr [rsp + 0x48], r9 ; je 0xf4371
read: al r8 r9 rcx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f43c0: CLP; push r15 ; mov r15d, esi ; push r14 ; mov r14, rcx ; push r13 ; mov r13, rdx ; push r12 ; mov r12, rdi ; mov edi, 0x64 ; push rbp ; push rbx ; sub rsp, 0xf8 ; call 0x1f3cc
read: esi r12 r13 r14 r15 rbp rbx rcx rdi rdx rip rsp 
write: edi r12 r13 r14 r15d rflags rsp 
--------------------------------------------------------------------------------
000f4570: CLP; sub rsp, 0xd8 ; test al, al ; mov qword ptr [rsp + 0x38], rcx ; mov qword ptr [rsp + 0x40], r8 ; mov qword ptr [rsp + 0x48], r9 ; je 0xf45c1
read: al r8 r9 rcx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f4610: CLP; push r14 ; lea r8, [rip + 0x273bc3] ; mov r14d, esi ; mov esi, 0x8000 ; push r13 ; mov r13, rcx ; push r12 ; mov r12, rdx ; xor edx, edx ; push rbp ; mov ebp, edi ; push rbx ; sub rsp, 0x230 ; lea rcx, [rsp + 0xe0] ; mov rdi, rsp
read: edi edx esi r12 r13 r14 rbp rbx rcx rdx rsp 
write: ebp edx esi r12 r13 r14d r8 rcx rdi rflags rsp 
--------------------------------------------------------------------------------
000f4700: CLP; push r15 ; xor r8d, r8d ; push r14 ; mov r14d, esi ; mov esi, 0x8000 ; push r13 ; mov r13, rcx ; xor ecx, ecx ; push r12 ; mov r12, rdx ; mov edx, 0xffffffff ; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 0x108
read: ecx esi r12 r13 r14 r15 r8d rbp rbx rcx rdi rdx rsp 
write: ecx edx esi r12 r13 r14d r8d rbx rflags rsp 
--------------------------------------------------------------------------------
000f48c0: CLP; sub rsp, 0xd8 ; test al, al ; mov qword ptr [rsp + 0x38], rcx ; mov qword ptr [rsp + 0x40], r8 ; mov qword ptr [rsp + 0x48], r9 ; je 0xf4911
read: al r8 r9 rcx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f4960: CLP; push rbp ; mov ebp, esi ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; call 0x35d9c
read: esi rbp rbx rdi rip rsp 
write: ebp rbx rflags rsp 
--------------------------------------------------------------------------------
000f49b0: CLP; mov r8, qword ptr [rdi + 0x30] ; mov r9, qword ptr [rdi + 8] ; mov rdx, qword ptr [rdi + 0x38] ; ror r8, 0x11 ; xor r8, qword ptr fs:[0x30] ; ror r9, 0x11 ; xor r9, qword ptr fs:[0x30] ; ror rdx, 0x11 ; xor rdx, qword ptr fs:[0x30] ; cmp rsp, r8 ; jbe 0xf4a37
read: r8 r9 rdx rflags rsp 
write: r8 r9 rdx rflags 
--------------------------------------------------------------------------------
000f4a60: CLP; cmp rdi, 0x3ff ; ja 0xf4a71
read: rdi rflags 
write: rflags 
--------------------------------------------------------------------------------
000f4a80: CLP; shr rcx, 3 ; sub rsp, 8 ; cmp rcx, rsi ; jb 0xf4a9b
read: rcx rflags rsi rsp 
write: rcx rflags rsp 
--------------------------------------------------------------------------------
000f4ab0: CLP; shr r8, 3 ; sub rsp, 8 ; cmp r8, rsi ; jb 0xf4acb
read: r8 rflags rsi rsp 
write: r8 rflags rsp 
--------------------------------------------------------------------------------
000f4ae0: CLP; lea rdi, [rip + 0x422ed] ; sub rsp, 8 ; call 0xf4afc
read: rip rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
000f4b00: CLP; push rbp ; mov rbp, rdi ; push rbx ; lea rbx, [rip + 0x40f13] ; sub rsp, 8 ; nop dword ptr [rax] ; mov rax, qword ptr [rip + 0x279831] ; lea rsi, [rip + 0x422ca] ; mov rdx, rbp ; mov edi, 2 ; mov rcx, qword ptr [rax] ; test rcx, rcx ; cmove rcx, rbx ; xor eax, eax ; call 0x760ac
read: eax rbp rbx rcx rdi rflags rip rsp 
write: eax edi rax rbp rbx rcx rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000f4b50: CLP; sub rsp, 8 ; mov esi, 1 ; xor eax, eax ; cmp dword ptr [rip + 0x279c0e], 0 ; je 0xf4b70
read: eax rflags rsp 
write: eax esi rflags rsp 
--------------------------------------------------------------------------------
000f4c80: CLP; push r13 ; mov rax, rdi ; mov r13d, edx ; push r12 ; mov r12, rsi ; push rbp ; mov rbp, rdi ; push rbx ; mov ebx, 4 ; sub rsp, 8 ; movzx r8d, byte ptr [rax] ; jmp 0xf4cd0
read: edx r12 r13 rbp rbx rdi rsi rsp 
write: ebx r12 r13d r8d rax rbp rflags rsp 
--------------------------------------------------------------------------------
000f4d50: CLP; movzx ecx, byte ptr [rdi] ; test cl, cl ; jle 0xf4d67
read: cl rflags 
write: ecx rflags 
--------------------------------------------------------------------------------
000f4de0: CLP; mov eax, edi ; bswap eax ; ret
read: eax edi 
write: eax 
--------------------------------------------------------------------------------
000f4df0: CLP; mov eax, edi ; ror ax, 8 ; ret
read: ax edi 
write: ax eax rflags 
--------------------------------------------------------------------------------
000f4e00: CLP; bswap edi ; test edi, edi ; js 0xf4e14
read: edi rflags 
write: edi rflags 
--------------------------------------------------------------------------------
000f4e40: CLP; cmp edi, 0x7f ; mov eax, edi ; jbe 0xf4e7c
read: edi rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000f4e90: CLP; bswap edi ; test edi, edi ; js 0xf4e9c
read: edi rflags 
write: edi rflags 
--------------------------------------------------------------------------------
000f4ec0: CLP; push r14 ; mov r14d, edi ; shr r14d, 0x10 ; push r13 ; movzx r14d, r14b ; push r12 ; movzx r12d, dil ; push rbp ; push rbx ; mov ebx, edi ; movzx eax, bh ; shr ebx, 0x18 ; sub rsp, 0x10 ; mov r13d, eax ; lea rdi, [rip + 0x273e9f]
read: bh dil eax ebx edi r12 r13 r14 r14b r14d rbp rbx rsp 
write: eax ebx r12d r13d r14d rdi rflags rsp 
--------------------------------------------------------------------------------
000f4f40: CLP; push r13 ; mov rax, qword ptr [rip + 0x273fd3] ; xor r9d, r9d ; mov r8d, 0xa ; push r12 ; mov r12, qword ptr [rip + 0x273ea1] ; push rbp ; push rbx ; mov rbp, qword ptr fs:[rax] ; movzx eax, byte ptr [rdi] ; mov rbx, qword ptr fs:[r12] ; lea r13, [rsp - 0x18] ; mov r11, r13 ; cmp al, 0x30 ; je 0xf501f
read: al r12 r13 r9d rbp rbx rflags rsp 
write: eax r11 r12 r13 r8d r9d rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000f50f0: CLP; mov rax, qword ptr [rip + 0x273d5d] ; add rax, qword ptr fs:[0] ; ret
read: rax 
write: rax rflags 
--------------------------------------------------------------------------------
000f5110: CLP; push r15 ; xor eax, eax ; push r14 ; push r13 ; mov r13d, edx ; push r12 ; mov r12d, esi ; mov esi, 1 ; push rbp ; push rbx ; sub rsp, 0x38 ; mov qword ptr [rsp + 0x18], rdi ; mov dword ptr [rsp + 0x24], 0 ; cmp dword ptr [rip + 0x279631], 0 ; je 0xf514d
read: eax edx esi r12 r13 r14 r15 rbp rbx rdi rflags rsp 
write: eax esi r12d r13d rflags rsp 
--------------------------------------------------------------------------------
000f52f0: CLP; push r15 ; push r14 ; mov r14, rdi ; push r13 ; push r12 ; mov r12, rcx ; push rbp ; mov ebp, esi ; push rbx ; sub rsp, 0x58 ; cmp esi, 0x10 ; mov dword ptr [rsp + 0x14], edx ; mov qword ptr [rsp + 0x18], r8 ; mov qword ptr [rsp + 0x20], r9 ; mov rbx, qword ptr [rsp + 0x98]
read: edx esi r12 r13 r14 r15 r8 r9 rbp rbx rcx rdi rsp 
write: ebp r12 r14 rbx rflags rsp 
--------------------------------------------------------------------------------
000f56e0: CLP; push r12 ; mov esi, 1 ; xor eax, eax ; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 0x30 ; mov dword ptr [rsp + 0x24], 0 ; cmp dword ptr [rip + 0x27906f], 0 ; je 0xf570f
read: eax r12 rbp rbx rdi rflags rsp 
write: eax esi rbx rflags rsp 
--------------------------------------------------------------------------------
000f58f0: CLP; push r13 ; xor eax, eax ; push r12 ; push rbp ; mov ebp, esi ; mov esi, 1 ; push rbx ; mov rbx, rdi ; sub rsp, 0x38 ; mov dword ptr [rsp + 0x24], 0 ; cmp dword ptr [rip + 0x278e5b], 0 ; je 0xf5923
read: eax esi r12 r13 rbp rbx rdi rflags rsp 
write: eax ebp esi rbx rflags rsp 
--------------------------------------------------------------------------------
000f5b00: CLP; push r15 ; push r14 ; mov r14, r8 ; push r13 ; mov r13d, esi ; push r12 ; mov r12, rdi ; push rbp ; mov rbp, rdx ; push rbx ; sub rsp, 0x68 ; mov rbx, qword ptr [rsp + 0xa0] ; lea rax, [rsp + 0x4c] ; lea rdx, [rsp + 0x38] ; mov qword ptr [rsp + 0x38], rcx
read: esi r12 r13 r14 r15 r8 rbp rbx rcx rdi rdx rsp 
write: r12 r13d r14 rax rbp rbx rdx rflags rsp 
--------------------------------------------------------------------------------
000f5f00: CLP; push r15 ; push r14 ; push r13 ; mov r13, rcx ; push r12 ; mov r12, rdi ; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, r9 ; sub rsp, 0x68 ; lea rax, [rsp + 0x4c] ; mov qword ptr [rsp + 0x38], rdx ; lea rdx, [rsp + 0x38] ; mov qword ptr [rsp + 0x30], r8
read: r12 r13 r14 r15 r8 r9 rbp rbx rcx rdi rdx rsi rsp 
write: r12 r13 rax rbp rbx rdx rflags rsp 
--------------------------------------------------------------------------------
000f62e0: CLP; sub rsp, 8 ; mov esi, 1 ; xor eax, eax ; cmp dword ptr [rip + 0x27847e], 0 ; je 0xf6300
read: eax rflags rsp 
write: eax esi rflags rsp 
--------------------------------------------------------------------------------
000f63c0: CLP; sub rsp, 0x18 ; mov r9d, edi ; mov esi, 1 ; xor eax, eax ; cmp dword ptr [rip + 0x27839b], 0 ; je 0xf63e3
read: eax edi rflags rsp 
write: eax esi r9d rflags rsp 
--------------------------------------------------------------------------------
000f64a0: CLP; cmp qword ptr [rip + 0x276e84], 0 ; je 0xf6579
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000f6580: CLP; push rbx ; mov r10, rsi ; mov r9, rdi ; mov rbx, rcx ; mov esi, 1 ; xor eax, eax ; sub rsp, 0x40 ; cmp dword ptr [rip + 0x2781d4], 0 ; je 0xf65aa
read: eax rbx rcx rdi rflags rsi rsp 
write: eax esi r10 r9 rbx rflags rsp 
--------------------------------------------------------------------------------
000f66a0: CLP; push r15 ; xor eax, eax ; push r14 ; push r13 ; mov r13d, esi ; mov esi, 1 ; push r12 ; mov r12d, edi ; push rbp ; push rbx ; sub rsp, 0x28 ; mov dword ptr [rsp + 0x14], 0 ; cmp dword ptr [rip + 0x2780a6], 0 ; je 0xf66d8
read: eax edi esi r12 r13 r14 r15 rbp rbx rflags rsp 
write: eax esi r12d r13d rflags rsp 
--------------------------------------------------------------------------------
000f6880: CLP; push r15 ; push r14 ; mov r14, r8 ; push r13 ; mov r13, rcx ; push r12 ; push rbp ; mov rbp, rdx ; push rbx ; sub rsp, 0x48 ; cmp byte ptr [rip + 0x276ae6], 0 ; mov dword ptr [rsp + 8], edi ; mov dword ptr [rsp + 0xc], esi ; mov qword ptr [rsp + 0x28], r9 ; mov rbx, qword ptr [rsp + 0x80]
read: edi esi r12 r13 r14 r15 r8 r9 rbp rbx rcx rdx rsp 
write: r13 r14 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000f6b50: CLP; push r14 ; mov esi, 1 ; xor eax, eax ; push r13 ; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 0x10 ; mov dword ptr [rsp + 4], 0 ; cmp dword ptr [rip + 0x277bfb], 0 ; je 0xf6b83
read: eax r12 r13 r14 rbp rbx rdi rflags rsp 
write: eax esi rbp rflags rsp 
--------------------------------------------------------------------------------
000f6d20: CLP; sub rsp, 8 ; mov esi, 1 ; xor eax, eax ; cmp dword ptr [rip + 0x277a3e], 0 ; je 0xf6d40
read: eax rflags rsp 
write: eax esi rflags rsp 
--------------------------------------------------------------------------------
000f6e00: CLP; sub rsp, 0x18 ; mov r9d, edi ; mov esi, 1 ; xor eax, eax ; cmp dword ptr [rip + 0x27795b], 0 ; je 0xf6e23
read: eax edi rflags rsp 
write: eax esi r9d rflags rsp 
--------------------------------------------------------------------------------
000f6ee0: CLP; cmp qword ptr [rip + 0x27650c], 0 ; je 0xf6fb9
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000f6fc0: CLP; push rbx ; mov r10, rsi ; mov r9, rdi ; mov rbx, rcx ; mov esi, 1 ; xor eax, eax ; sub rsp, 0x40 ; cmp dword ptr [rip + 0x277794], 0 ; je 0xf6fea
read: eax rbx rcx rdi rflags rsi rsp 
write: eax esi r10 r9 rbx rflags rsp 
--------------------------------------------------------------------------------
000f70e0: CLP; push r15 ; push r14 ; mov r14, rcx ; push r13 ; mov r13, rdx ; push r12 ; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, r9 ; sub rsp, 0x48 ; cmp byte ptr [rip + 0x27631b], 0 ; mov qword ptr [rsp + 8], rdi ; mov qword ptr [rsp + 0x28], r8 ; je 0xf728c
read: r12 r13 r14 r15 r8 r9 rbp rbx rcx rdi rdx rflags rsi rsp 
write: r13 r14 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000f73a0: CLP; push r13 ; mov esi, 1 ; xor eax, eax ; push r12 ; push rbp ; mov ebp, edi ; push rbx ; sub rsp, 0x18 ; cmp dword ptr [rip + 0x2773b6], 0 ; je 0xf73c8
read: eax edi r12 r13 rbp rbx rflags rsp 
write: eax ebp esi rflags rsp 
--------------------------------------------------------------------------------
000f7540: CLP; push r15 ; push r14 ; push r13 ; mov r13, rcx ; push r12 ; mov r12, rdx ; push rbp ; mov ebp, edi ; push rbx ; mov rbx, rsi ; sub rsp, 0x38 ; cmp byte ptr [rip + 0x275f04], 0 ; mov qword ptr [rsp + 0x18], r8 ; je 0xf76d4
read: edi r12 r13 r14 r15 r8 rbp rbx rcx rdx rflags rsi rsp 
write: ebp r12 r13 rbx rflags rsp 
--------------------------------------------------------------------------------
000f7770: CLP; sub rsp, 8 ; mov esi, 1 ; xor eax, eax ; cmp dword ptr [rip + 0x276fee], 0 ; je 0xf7790
read: eax rflags rsp 
write: eax esi rflags rsp 
--------------------------------------------------------------------------------
000f7850: CLP; sub rsp, 0x18 ; mov r9d, edi ; mov esi, 1 ; xor eax, eax ; cmp dword ptr [rip + 0x276f0b], 0 ; je 0xf7873
read: eax edi rflags rsp 
write: eax esi r9d rflags rsp 
--------------------------------------------------------------------------------
000f7930: CLP; cmp qword ptr [rip + 0x275b6c], 0 ; je 0xf7a06
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000f7a10: CLP; push rbx ; mov r10, rsi ; mov r9, rdi ; mov rbx, rcx ; mov esi, 1 ; xor eax, eax ; sub rsp, 0x40 ; cmp dword ptr [rip + 0x276d44], 0 ; je 0xf7a3a
read: eax rbx rcx rdi rflags rsi rsp 
write: eax esi r10 r9 rbx rflags rsp 
--------------------------------------------------------------------------------
000f7b20: CLP; push r13 ; mov esi, 1 ; xor eax, eax ; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 0x18 ; cmp dword ptr [rip + 0x276c35], 0 ; je 0xf7b49
read: eax r12 r13 rbp rbx rdi rflags rsp 
write: eax esi rbp rflags rsp 
--------------------------------------------------------------------------------
000f7cc0: CLP; push r15 ; push r14 ; push r13 ; mov r13, rcx ; push r12 ; mov r12, rdx ; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rsi ; sub rsp, 0x38 ; cmp byte ptr [rip + 0x275813], 0 ; mov qword ptr [rsp + 0x18], r8 ; je 0xf7e54
read: r12 r13 r14 r15 r8 rbp rbx rcx rdi rdx rflags rsi rsp 
write: r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000f7ef0: CLP; push r14 ; xor eax, eax ; push r13 ; push r12 ; mov r12, rsi ; mov esi, 1 ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 0x10 ; cmp dword ptr [rip + 0x276860], 0 ; je 0xf7f1e
read: eax r12 r13 r14 rbp rbx rdi rflags rsi rsp 
write: eax esi r12 rbp rflags rsp 
--------------------------------------------------------------------------------
000f80a0: CLP; push r15 ; push r14 ; mov r14, r8 ; push r13 ; mov r13, rcx ; push r12 ; mov r12, rsi ; push rbp ; push rbx ; mov rbx, rdx ; sub rsp, 0x48 ; mov eax, dword ptr [rip + 0x2768ec] ; mov qword ptr [rsp + 8], rdi ; mov qword ptr [rsp + 0x28], r9 ; cmp eax, 0
read: eax r12 r13 r14 r15 r8 r9 rbp rbx rcx rdi rdx rsi rsp 
write: eax r12 r13 r14 rbx rflags rsp 
--------------------------------------------------------------------------------
000f8360: CLP; push r14 ; xor eax, eax ; push r13 ; push r12 ; mov r12, rsi ; mov esi, 1 ; push rbp ; mov ebp, edi ; push rbx ; sub rsp, 0x10 ; cmp dword ptr [rip + 0x2763f1], 0 ; je 0xf838d
read: eax edi r12 r13 r14 rbp rbx rflags rsi rsp 
write: eax ebp esi r12 rflags rsp 
--------------------------------------------------------------------------------
000f8500: CLP; push r15 ; push r14 ; mov r14, r8 ; push r13 ; mov r13, rcx ; push r12 ; mov r12, rsi ; push rbp ; push rbx ; mov rbx, rdx ; sub rsp, 0x48 ; mov eax, dword ptr [rip + 0x27648c] ; mov dword ptr [rsp + 0xc], edi ; mov qword ptr [rsp + 0x28], r9 ; cmp eax, 0
read: eax edi r12 r13 r14 r15 r8 r9 rbp rbx rcx rdx rsi rsp 
write: eax r12 r13 r14 rbx rflags rsp 
--------------------------------------------------------------------------------
000f87c0: CLP; sub rsp, 8 ; mov esi, 1 ; xor eax, eax ; cmp dword ptr [rip + 0x275f9e], 0 ; je 0xf87e0
read: eax rflags rsp 
write: eax esi rflags rsp 
--------------------------------------------------------------------------------
000f88a0: CLP; sub rsp, 0x18 ; mov r9d, edi ; mov esi, 1 ; xor eax, eax ; cmp dword ptr [rip + 0x275ebb], 0 ; je 0xf88c3
read: eax edi rflags rsp 
write: eax esi r9d rflags rsp 
--------------------------------------------------------------------------------
000f8980: CLP; cmp qword ptr [rip + 0x274c84], 0 ; je 0xf8a56
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000f8a60: CLP; push rbx ; mov r10, rsi ; mov r9, rdi ; mov rbx, rcx ; mov esi, 1 ; xor eax, eax ; sub rsp, 0x40 ; cmp dword ptr [rip + 0x275cf4], 0 ; je 0xf8a8a
read: eax rbx rcx rdi rflags rsi rsp 
write: eax esi r10 r9 rbx rflags rsp 
--------------------------------------------------------------------------------
000f8b70: CLP; sub rsp, 8 ; mov esi, 1 ; xor eax, eax ; cmp dword ptr [rip + 0x275bee], 0 ; je 0xf8b90
read: eax rflags rsp 
write: eax esi rflags rsp 
--------------------------------------------------------------------------------
000f8c50: CLP; push r13 ; mov esi, 1 ; xor eax, eax ; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 0x18 ; cmp dword ptr [rip + 0x275b05], 0 ; je 0xf8c79
read: eax r12 r13 rbp rbx rdi rflags rsp 
write: eax esi rbp rflags rsp 
--------------------------------------------------------------------------------
000f8df0: CLP; push r13 ; mov esi, 1 ; xor eax, eax ; push r12 ; push rbp ; mov ebp, edi ; push rbx ; sub rsp, 0x18 ; cmp dword ptr [rip + 0x275966], 0 ; je 0xf8e18
read: eax edi r12 r13 rbp rbx rflags rsp 
write: eax ebp esi rflags rsp 
--------------------------------------------------------------------------------
000f8f90: CLP; sub rsp, 0x18 ; mov r9d, edi ; mov esi, 1 ; xor eax, eax ; cmp dword ptr [rip + 0x2757cb], 0 ; je 0xf8fb3
read: eax edi rflags rsp 
write: eax esi r9d rflags rsp 
--------------------------------------------------------------------------------
000f9070: CLP; cmp qword ptr [rip + 0x274644], 0 ; je 0xf9146
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000f9150: CLP; push rbx ; mov r10, rsi ; mov r9, rdi ; mov rbx, rcx ; mov esi, 1 ; xor eax, eax ; sub rsp, 0x40 ; cmp dword ptr [rip + 0x275604], 0 ; je 0xf917a
read: eax rbx rcx rdi rflags rsi rsp 
write: eax esi r10 r9 rbx rflags rsp 
--------------------------------------------------------------------------------
000f9260: CLP; push r15 ; push r14 ; push r13 ; mov r13, rcx ; push r12 ; mov r12, rdx ; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rsi ; sub rsp, 0x38 ; cmp byte ptr [rip + 0x274463], 0 ; mov qword ptr [rsp + 0x18], r8 ; je 0xf93f4
read: r12 r13 r14 r15 r8 rbp rbx rcx rdi rdx rflags rsi rsp 
write: r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000f9490: CLP; push r15 ; push r14 ; push r13 ; mov r13, rcx ; push r12 ; mov r12, rdx ; push rbp ; mov ebp, edi ; push rbx ; mov rbx, rsi ; sub rsp, 0x38 ; cmp byte ptr [rip + 0x27424c], 0 ; mov qword ptr [rsp + 0x18], r8 ; je 0xf9624
read: edi r12 r13 r14 r15 r8 rbp rbx rcx rdx rflags rsi rsp 
write: ebp r12 r13 rbx rflags rsp 
--------------------------------------------------------------------------------
000f96c0: CLP; lea rsi, [rip + 0x274036] ; sub rsp, 8 ; call 0xf96dc
read: rip rsp 
write: rflags rsi rsp 
--------------------------------------------------------------------------------
000f96e0: CLP; mov rax, qword ptr [rip + 0x26f835] ; push rbx ; xor edx, edx ; mov r10, qword ptr fs:[rax] ; mov rax, qword ptr [rip + 0x26f707] ; mov rax, qword ptr fs:[rax] ; movsx rcx, byte ptr [rdi] ; lea r9, [rdi + 1] ; mov r8d, dword ptr [r10 + rcx*4] ; lea ecx, [r8 - 0x61] ; cmp cl, 5 ; ja 0xf97a4
read: cl edx rbx rflags rsp 
write: ecx edx r10 r8d r9 rax rcx rflags rsp 
--------------------------------------------------------------------------------
000f97e0: CLP; push r15 ; push r14 ; push r13 ; push r12 ; mov r12, rdi ; push rbp ; push rbx ; sub rsp, 0x438 ; mov rdx, qword ptr [rip + 0x273f11] ; mov qword ptr [rsp + 8], rsi ; test rdx, rdx ; je 0xf98cc
read: r12 r13 r14 r15 rbp rbx rdi rdx rflags rsi rsp 
write: r12 rdx rflags rsp 
--------------------------------------------------------------------------------
000f9930: CLP; push r12 ; mov rax, qword ptr [rip + 0x26f5e3] ; xor ecx, ecx ; mov r11, qword ptr [rip + 0x26f4ba] ; push rbp ; push rbx ; mov rbx, qword ptr fs:[rax] ; movsx rax, byte ptr [rdi] ; mov rbp, qword ptr fs:[r11] ; mov r10d, dword ptr [rbx + rax*4] ; lea eax, [r10 - 0x61] ; cmp al, 5 ; ja 0xf99cf
read: al ecx r12 rbp rbx rflags rsp 
write: eax ecx r10d r11 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000f9af0: CLP; lea rsi, [rip + 0x273c25] ; sub rsp, 8 ; call 0xf9b0c
read: rip rsp 
write: rflags rsi rsp 
--------------------------------------------------------------------------------
000f9b10: CLP; push rbx ; mov rbx, rsi ; lea rsi, [rip + 0x3d48b] ; sub rsp, 0x10 ; movzx eax, byte ptr [rdi + 5] ; movzx r9d, byte ptr [rdi + 3] ; movzx r8d, byte ptr [rdi + 2] ; movzx ecx, byte ptr [rdi + 1] ; movzx edx, byte ptr [rdi] ; mov dword ptr [rsp + 8], eax ; movzx eax, byte ptr [rdi + 4] ; mov rdi, rbx ; mov dword ptr [rsp], eax ; xor eax, eax ; call 0x5231c
read: eax rbx rip rsi rsp 
write: eax ecx edx r8d r9d rbx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000f9b60: CLP; push r15 ; push r14 ; push r13 ; push r12 ; mov r12, rsi ; push rbp ; push rbx ; sub rsp, 0x438 ; mov rdx, qword ptr [rip + 0x273bc1] ; mov qword ptr [rsp + 8], rdi ; test rdx, rdx ; je 0xf9c4b
read: r12 r13 r14 r15 rbp rbx rdi rdx rflags rsi rsp 
write: r12 rdx rflags rsp 
--------------------------------------------------------------------------------
000f9cb0: CLP; push r12 ; mov r12d, esi ; mov rsi, rdi ; push rbp ; push rbx ; mov rbx, rdi ; mov edi, 1 ; sub rsp, 0x90 ; mov rdx, rsp ; call 0xd643c
read: esi r12 rbp rbx rdi rip rsp 
write: edi r12d rbx rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000f9eb0: CLP; push r15 ; push r14 ; push r13 ; mov r13, rdi ; push r12 ; push rbp ; push rbx ; sub rsp, 0xf8 ; lea rax, [rsp + 0x90] ; lea r12, [rsp + 0x80] ; lea rbp, [rsp + 0x78] ; mov qword ptr [rsp + 0x10], rsi ; mov qword ptr [rsp + 0x30], rdx ; mov qword ptr [rsp + 0x18], rax ; lea rax, [rsp + 0xc0]
read: r12 r13 r14 r15 rax rbp rbx rdi rdx rsi rsp 
write: r12 r13 rax rbp rflags rsp 
--------------------------------------------------------------------------------
000fa370: CLP; push rbp ; mov rbp, rsp ; push r15 ; mov r15, r9 ; push r14 ; mov r14, rcx ; push r13 ; mov r13d, edx ; push r12 ; push rbx ; mov rbx, r8 ; sub rsp, 0x68 ; test edx, edx ; mov qword ptr [rbp - 0x78], rdi ; mov qword ptr [rbp - 0x80], rsi
read: edx r12 r13 r14 r15 r8 r9 rbp rbx rcx rdi rsi rsp 
write: r13d r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000fa580: CLP; push r15 ; mov r15, rdi ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; mov ebx, esi ; sub rsp, 0x88 ; cmp si, 2 ; je 0xfa684
read: esi r12 r13 r14 r15 rbp rbx rdi rflags rsp si 
write: ebx r15 rflags rsp 
--------------------------------------------------------------------------------
000fa700: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; mov ebx, esi ; sub rsp, 0x1f8 ; mov r12d, dword ptr [rsp + 0x230] ; mov qword ptr [rsp + 0x20], rdi ; mov qword ptr [rsp + 0x30], rdx ; mov qword ptr [rsp + 0x38], rcx ; mov qword ptr [rsp + 0x40], r8 ; mov qword ptr [rsp + 0x28], r9 ; mov eax, r12d
read: esi r12 r12d r13 r14 r15 r8 r9 rbp rbx rcx rdi rdx rsp 
write: eax ebx r12d rflags rsp 
--------------------------------------------------------------------------------
000fb270: CLP; sub rsp, 0x18 ; movzx esi, si ; mov dword ptr [rsp], 2 ; call 0xfa6fc
read: rip rsp si 
write: esi rflags rsp 
--------------------------------------------------------------------------------
000fb290: CLP; sub rsp, 8 ; mov esi, 2 ; call 0xfa57c
read: rip rsp 
write: esi rflags rsp 
--------------------------------------------------------------------------------
000fb2b0: CLP; push r14 ; xor eax, eax ; mov r14, rcx ; mov ecx, 6 ; movzx r8d, r8w ; push r13 ; mov r13, rdx ; push r12 ; mov r12d, esi ; xor esi, esi ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 0x40 ; lea rdx, [rsp + 0x10]
read: eax esi r12 r13 r14 r8w rbp rbx rcx rdi rdx rsp 
write: eax ecx esi r12d r13 r14 r8d rbp rdx rflags rsp 
--------------------------------------------------------------------------------
000fb380: CLP; sub rsp, 8 ; mov r8d, 2 ; call 0xfb2ac
read: rip rsp 
write: r8d rflags rsp 
--------------------------------------------------------------------------------
000fb3a0: CLP; push rbx ; xor eax, eax ; mov r9, rdi ; mov rbx, rcx ; mov ecx, 0x10 ; mov r11d, esi ; add rsp, -0x80 ; cmp r8w, 2 ; mov rdi, rsp ; mov r10, rsp ; rep stosq qword ptr [rdi], rax ; je 0xfb41c
read: eax esi r8w rax rbx rcx rdi rflags rsp 
write: eax ecx r10 r11d r9 rbx rcx rdi rflags rsp 
--------------------------------------------------------------------------------
000fb440: CLP; sub rsp, 0x18 ; mov r8d, 2 ; mov dword ptr [rsp + 0xc], edi ; lea rdi, [rsp + 0xc] ; call 0xfb39c
read: edi rip rsp 
write: r8d rdi rflags rsp 
--------------------------------------------------------------------------------
000fb470: CLP; sub rsp, 0x18 ; mov r9d, 2 ; mov r8, rcx ; mov qword ptr [rsp], 0 ; mov word ptr [rsp], r9w ; lea r9, [rip + 0x3b9ac] ; mov dword ptr [rsp + 4], esi ; mov rcx, rdx ; mov rsi, rsp ; mov edx, 0x10 ; mov qword ptr [rsp + 8], 0 ; call 0xf9eac
read: esi r9w rcx rdx rip rsp 
write: edx r8 r9 r9d rcx rflags rsi rsp 
--------------------------------------------------------------------------------
000fb4c0: CLP; push r15 ; mov rax, rdx ; ror si, 8 ; push r14 ; mov r14, r9 ; push r13 ; mov r13, rdi ; push r12 ; push rbp ; push rbx ; sub rsp, 0x1d8 ; lea r12, [rsp + 0x60] ; mov qword ptr [rsp + 0x48], rdx ; lea rdx, [rip + 0x3a96f] ; mov qword ptr [rsp + 0x40], rcx
read: r12 r13 r14 r15 r9 rbp rbx rcx rdi rdx rsp si 
write: r12 r13 r14 rax rdx rflags rsp si 
--------------------------------------------------------------------------------
000fbad0: CLP; sub rsp, 0x18 ; mov dword ptr [rsp], 2 ; call 0xfb4bc
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000fbaf0: CLP; mov rdi, qword ptr [rip + 0x271ccd] ; xor eax, eax ; test byte ptr [rdi], 0x30 ; jne 0xfbc23
read: eax rflags 
write: eax rdi rflags 
--------------------------------------------------------------------------------
000fbd00: CLP; push rbp ; mov rbp, rsp ; push r15 ; push r14 ; push r13 ; mov r13, rdx ; push r12 ; push rbx ; mov rbx, rsi ; sub rsp, 0x4b8 ; mov qword ptr [rbp - 0x4c8], rdi ; lea rdi, [rip + 0x3a63f] ; call 0x3898c
read: r12 r13 r14 r15 rbp rbx rdi rdx rip rsi rsp 
write: r13 rbp rbx rdi rflags rsp 
--------------------------------------------------------------------------------
000fc200: CLP; push rbx ; mov rbx, rdi ; mov rdi, qword ptr [rdi + 0x50] ; lea rax, [rdi - 1] ; cmp rax, -3 ; jbe 0xfc21c
read: rax rbx rdi rflags rsp 
write: rax rbx rdi rflags rsp 
--------------------------------------------------------------------------------
000fc250: CLP; cmp byte ptr [rip + 0x27158d], 0 ; push rbx ; mov rbx, rsi ; je 0xfc29c
read: rbx rflags rsi rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
000fc2f0: CLP; push r15 ; push r14 ; push r13 ; mov r13, rdi ; mov rdi, rsi ; push r12 ; push rbp ; push rbx ; mov rbx, rsi ; lea r14, [rbx + 0x50] ; sub rsp, 0x28 ; lea r15, [rsp + 0x10] ; mov qword ptr [rsp + 8], rdx ; call 0xfc1fc
read: r12 r13 r14 r15 rbp rbx rdi rdx rip rsi rsp 
write: r13 r14 r15 rbx rdi rflags rsp 
--------------------------------------------------------------------------------
000fc490: CLP; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov rax, qword ptr [rbx + 0x20] ; add rax, qword ptr [rbx + 0x28] ; mov rdi, qword ptr [rdi + 0x30] ; cmp rdi, rax ; jae 0xfc524
read: rax rbp rbx rdi rflags rsp 
write: rax rbx rdi rflags rsp 
--------------------------------------------------------------------------------
000fc530: CLP; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; mov rdi, qword ptr [rdi] ; test rdi, rdi ; je 0xfc583
read: rbp rbx rdi rflags rsi rsp 
write: rbp rbx rdi rflags rsp 
--------------------------------------------------------------------------------
000fc5a0: CLP; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rsi ; lea rsi, [rsi + 0x48] ; lea rdi, [rbx + 0x40] ; sub rsp, 8 ; call 0xfc52c
read: rbp rbx rdi rip rsi rsp 
write: rbp rbx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000fc5f0: CLP; push rbx ; mov esi, 1 ; mov rbx, rdi ; xor eax, eax ; cmp dword ptr [rip + 0x27216e], 0 ; je 0xfc610
read: eax rbx rdi rflags rsp 
write: eax esi rbx rflags rsp 
--------------------------------------------------------------------------------
000fc6f0: CLP; push rbx ; mov rbx, rdi ; call 0xfc1fc
read: rbx rdi rip rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
000fc720: CLP; sub rsp, 8 ; mov esi, 1 ; xor eax, eax ; cmp dword ptr [rip + 0x27203e], 0 ; je 0xfc740
read: eax rflags rsp 
write: eax esi rflags rsp 
--------------------------------------------------------------------------------
000fc7e0: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; mov rbx, rcx ; sub rsp, 0x48 ; mov qword ptr [rsp + 0x20], rdi ; mov rdi, qword ptr [rcx + 0x50] ; mov qword ptr [rsp + 0x28], rsi ; mov qword ptr [rsp + 0x30], rdx ; mov qword ptr [rsp + 8], r8 ; mov qword ptr [rsp + 0x10], r9 ; test rdi, rdi
read: r12 r13 r14 r15 r8 r9 rbp rbx rcx rdi rdx rsi rsp 
write: rbx rdi rflags rsp 
--------------------------------------------------------------------------------
000fca10: CLP; push r12 ; xor eax, eax ; mov r12, rcx ; push rbp ; mov rbp, rsi ; mov esi, 1 ; push rbx ; mov rbx, rdi ; sub rsp, 0x10 ; cmp dword ptr [rip + 0x271d41], 0 ; je 0xfca3d
read: eax r12 rbp rbx rcx rdi rflags rsi rsp 
write: eax esi r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000fcae0: CLP; push r15 ; push r14 ; push r13 ; mov r13, rsi ; push r12 ; push rbp ; push rbx ; sub rsp, 0x4c8 ; mov eax, dword ptr [rip + 0x271eb6] ; mov qword ptr [rsp + 0x40], rdi ; mov qword ptr [rsp + 8], rdx ; mov qword ptr [rsp + 0x28], rcx ; cmp eax, 0 ; jle 0xfceaa
read: eax r12 r13 r14 r15 rbp rbx rcx rdi rdx rflags rsi rsp 
write: eax r13 rflags rsp 
--------------------------------------------------------------------------------
000fcef0: CLP; sub rsp, 8 ; mov edi, 0x400 ; call 0x1f3cc
read: rip rsp 
write: edi rflags rsp 
--------------------------------------------------------------------------------
000fcf20: CLP; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 0x18 ; mov ecx, dword ptr [rip + 0x27183a] ; test ecx, ecx ; jne 0xfcf6c
read: ecx rbp rbx rdi rflags rsi rsp 
write: ecx rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000fd000: CLP; sub rsp, 0x18 ; mov esi, 1 ; xor eax, eax ; cmp dword ptr [rip + 0x27175e], 0 ; je 0xfd020
read: eax rflags rsp 
write: eax esi rflags rsp 
--------------------------------------------------------------------------------
000fd0e0: CLP; cmp qword ptr [rip + 0x27077c], 0 ; je 0xfd1b6
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000fd1c0: CLP; push rbx ; mov r10, rsi ; mov r9, rdi ; mov rbx, rcx ; mov esi, 1 ; xor eax, eax ; sub rsp, 0x40 ; cmp dword ptr [rip + 0x271594], 0 ; je 0xfd1ea
read: eax rbx rcx rdi rflags rsi rsp 
write: eax esi r10 r9 rbx rflags rsp 
--------------------------------------------------------------------------------
000fd2d0: CLP; sub rsp, 8 ; mov esi, 1 ; xor eax, eax ; cmp dword ptr [rip + 0x27148e], 0 ; je 0xfd2f0
read: eax rflags rsp 
write: eax esi rflags rsp 
--------------------------------------------------------------------------------
000fd3b0: CLP; push r13 ; mov esi, 1 ; xor eax, eax ; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 0x18 ; cmp dword ptr [rip + 0x2713a5], 0 ; je 0xfd3d9
read: eax r12 r13 rbp rbx rdi rflags rsp 
write: eax esi rbp rflags rsp 
--------------------------------------------------------------------------------
000fd550: CLP; push r15 ; push r14 ; push r13 ; mov r13, rcx ; push r12 ; mov r12, rdx ; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rsi ; sub rsp, 0x38 ; cmp byte ptr [rip + 0x2703ab], 0 ; mov qword ptr [rsp + 0x18], r8 ; je 0xfd6e4
read: r12 r13 r14 r15 r8 rbp rbx rcx rdi rdx rflags rsi rsp 
write: r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000fd780: CLP; mov edx, dword ptr [rip + 0x27019e] ; test edx, edx ; jne 0xfd83c
read: edx rflags 
write: edx rflags 
--------------------------------------------------------------------------------
000fdb70: CLP; push rbp ; mov rbp, rsp ; push r15 ; push r14 ; push r13 ; push r12 ; push rbx ; sub rsp, 0x218 ; mov rax, qword ptr [rip + 0x26b2d9] ; mov r12d, dword ptr [rbp + 0x10] ; sub rsp, 0x410 ; mov dword ptr [rbp - 0x1f4], ecx ; mov qword ptr [rbp - 0x200], r8 ; lea rbx, [rsp + 0x1f] ; mov dword ptr [rbp - 0x1f8], r9d
read: ecx r12 r13 r14 r15 r8 r9d rbp rbx rsp 
write: r12d rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000fe550: CLP; push r12 ; mov r12, rdi ; push rbp ; push rbx ; sub rsp, 0x30 ; call 0xe48fc
read: r12 rbp rbx rdi rip rsp 
write: r12 rflags rsp 
--------------------------------------------------------------------------------
000fe5f0: CLP; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; jmp 0xfe611
read: rbp rbx rdi rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000fe640: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x38 ; lea r12, [rsp + 0x10] ; mov dword ptr [rsp + 0x10], 0 ; mov dword ptr [rsp + 0x14], 0 ; mov dword ptr [rsp + 0x18], 0 ; mov qword ptr [rsp + 0x20], 0 ; mov rdi, r12 ; mov qword ptr [rsp + 0x28], 0 ; call 0xfed9c
read: r12 r13 r14 r15 rbp rbx rip rsp 
write: r12 rdi rflags rsp 
--------------------------------------------------------------------------------
000fe940: CLP; push r12 ; mov r12, rsi ; push rbp ; mov ebp, edi ; push rbx ; sub rsp, 0x30 ; call 0xe48fc
read: edi r12 rbp rbx rip rsi rsp 
write: ebp r12 rflags rsp 
--------------------------------------------------------------------------------
000fe9d0: CLP; test ecx, ecx ; jle 0xfea09
read: ecx rflags 
write: rflags 
--------------------------------------------------------------------------------
000fea40: CLP; push r12 ; push rbp ; mov rbp, qword ptr [rip + 0x26a41a] ; push rbx ; mov rdi, qword ptr [rdi + 0x10] ; mov r12d, dword ptr fs:[rbp] ; test rdi, rdi ; jne 0xfea5f
read: r12 rbp rbx rdi rflags rsp 
write: r12d rbp rdi rflags rsp 
--------------------------------------------------------------------------------
000fea80: CLP; push rbp ; mov rbp, rsp ; push r15 ; push r14 ; push r13 ; push r12 ; push rbx ; mov rbx, rdi ; sub rsp, 0x88 ; mov eax, dword ptr [rdi + 8] ; mov qword ptr [rbp - 0x78], 0x1000 ; sub rsp, 0x1010 ; lea r14, [rsp + 0xf] ; and r14, 0xfffffffffffffff0 ; test eax, eax
read: eax r12 r13 r14 r15 rbp rbx rdi rsp 
write: eax r14 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000fed90: CLP; movsxd rdi, dword ptr [rdi] ; mov eax, 3 ; syscall ; ret
read: 
write: eax rdi 
--------------------------------------------------------------------------------
000feda0: CLP; push rbp ; xor edx, edx ; mov esi, 3 ; push rbx ; mov rbx, rdi ; mov edi, 0x10 ; sub rsp, 0x28 ; call 0xe483c
read: edx rbp rbx rdi rip rsp 
write: edi edx esi rbx rflags rsp 
--------------------------------------------------------------------------------
000fee60: CLP; push rbp ; mov rbp, rsp ; push r15 ; lea rax, [rbp - 0x50] ; push r14 ; push r13 ; push r12 ; push rbx ; mov rbx, rax ; sub rsp, 0xa8 ; mov qword ptr [rbp - 0x98], rdi ; mov qword ptr [rdi], 0 ; mov rdi, rax ; mov dword ptr [rbp - 0x50], 0 ; mov dword ptr [rbp - 0x4c], 0
read: r12 r13 r14 r15 rax rbp rbx rdi rsp 
write: rax rbp rbx rdi rflags rsp 
--------------------------------------------------------------------------------
000ffa40: CLP; push rbx ; mov rbx, rdi ; nop dword ptr [rax + rax] ; mov rdi, rbx ; call 0xfee5c
read: rbx rdi rip rsp 
write: rbx rdi rsp 
--------------------------------------------------------------------------------
000ffa70: CLP; sub rsp, 8 ; call 0x1f46c
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000ffa90: CLP; push rbp ; mov rbp, rdi ; push rbx ; movsxd rbx, esi ; sub rsp, 8 ; mov rax, qword ptr [rdi] ; cmp ebx, 1 ; lea rdx, [rax - 0x10] ; je 0xffaf4
read: ebx esi rbp rbx rdi rflags rsp 
write: rax rbp rbx rdx rflags rsp 
--------------------------------------------------------------------------------
000ffb10: CLP; push r12 ; lea eax, [rdx - 1] ; mov r12d, esi ; push rbp ; cmp eax, 1 ; push rbx ; mov rbx, rdi ; jbe 0xffb27
read: eax esi r12 rbp rbx rdi rflags rsp 
write: eax r12d rbx rflags rsp 
--------------------------------------------------------------------------------
000ffbe0: CLP; cmp rsi, rdx ; jae 0xffc1c
read: rdx rflags rsi 
write: rflags 
--------------------------------------------------------------------------------
000ffc30: CLP; lea eax, [rdi + 9] ; and eax, 0xfffffff8 ; add eax, 0x10 ; ret
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
000ffc40: CLP; cmp edx, 0x3b ; jne 0xffc5c
read: edx rflags 
write: rflags 
--------------------------------------------------------------------------------
000ffc70: CLP; push rbp ; mov ebp, 1 ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; cmp byte ptr [rsi], 0 ; je 0xffc8a
read: rbp rbx rflags rsi rsp 
write: ebp rbx rflags rsp 
--------------------------------------------------------------------------------
000ffcd0: CLP; sub rsp, 8 ; call 0xffb0c
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000ffcf0: CLP; cmp dword ptr [rdi + 8], 0x29 ; jne 0xffdac
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000ffdc0: CLP; cmp dword ptr [rdi + 8], 0x29 ; jne 0xffe8c
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000ffeb0: CLP; push rbp ; mov r10d, edi ; mov rbp, rsp ; push r15 ; mov r15, r9 ; push r14 ; mov r14, rcx ; push r13 ; push r12 ; mov r12, r8 ; push rbx ; sub rsp, 0x28 ; mov eax, dword ptr [r8] ; lea ebx, [rax*4 + 0x10] ; cmp rbx, 0x1000
read: edi r12 r13 r14 r15 r8 r9 rbp rbx rcx rsp 
write: eax ebx r10d r12 r14 r15 rbp rflags rsp 
--------------------------------------------------------------------------------
00100010: CLP; push rbp ; mov eax, r8d ; mov rbp, rsp ; push r14 ; mov r14d, esi ; mov rsi, r9 ; push r13 ; mov r13d, edi ; push r12 ; lea r12, [rax*4 + 0x10] ; push rbx ; sub rsp, 0x20 ; cmp r12, 0x1000 ; ja 0x10009a
read: edi esi r12 r13 r14 r8d r9 rbp rbx rflags rsp 
write: eax r12 r13d r14d rbp rflags rsi rsp 
--------------------------------------------------------------------------------
00100160: CLP; lea rdx, [rip + 0x32a95] ; lea r8, [rip + 0x32ae2] ; mov eax, 0xffffffff ; jmp 0x100185
read: 
write: eax r8 rdx 
--------------------------------------------------------------------------------
001001e0: CLP; push rbp ; mov rbp, rsp ; push r15 ; mov r15, rdx ; push r14 ; mov r14d, edi ; push r13 ; push r12 ; mov r12, r9 ; push rbx ; sub rsp, 0x28 ; mov eax, dword ptr [r9] ; mov qword ptr [rbp - 0x50], r8 ; shl eax, 7 ; add eax, 0x90
read: eax edi r12 r13 r14 r15 r8 r9 rbp rbx rdx rsp 
write: eax r12 r14d r15 rbp rflags rsp 
--------------------------------------------------------------------------------
001003a0: CLP; push rbp ; mov rbp, rsp ; push r15 ; mov r15, rdx ; push r14 ; push r13 ; push r12 ; mov r12d, r9d ; shl r12, 7 ; push rbx ; lea r13, [r12 + 0x90] ; sub rsp, 0x28 ; cmp r13, 0x1000 ; mov dword ptr [rbp - 0x40], edi ; ja 0x1004b8
read: edi r12 r13 r14 r15 r9d rbp rbx rdx rflags rsp 
write: r12 r12d r13 r15 rbp rflags rsp 
--------------------------------------------------------------------------------
00100530: CLP; cmp edx, 1 ; je 0x10056c
read: edx rflags 
write: rflags 
--------------------------------------------------------------------------------
00100580: CLP; test rdi, rdi ; mov eax, 2 ; je 0x1005b4
read: rdi rflags 
write: eax rflags 
--------------------------------------------------------------------------------
001005c0: CLP; push r14 ; cmp edx, 1 ; push r13 ; push r12 ; mov r12d, edx ; push rbp ; push rbx ; jbe 0x100674
read: edx r12 r13 r14 rbp rbx rflags rsp 
write: r12d rflags rsp 
--------------------------------------------------------------------------------
001006a0: CLP; cmp edx, 1 ; push rbx ; mov ecx, edx ; jbe 0x1006cc
read: edx rbx rflags rsp 
write: ecx rflags rsp 
--------------------------------------------------------------------------------
001006e0: CLP; push rbp ; mov ebp, ecx ; push rbx ; mov ebx, esi ; mov rsi, rdx ; movsxd rax, ebx ; mov edx, ecx ; sub rsp, 8 ; add rdi, rax ; call 0x8e3dc
read: ebx ecx esi rax rbp rbx rdi rdx rip rsp 
write: ebp ebx edx rax rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00100710: CLP; test edx, edx ; jne 0x100754
read: edx rflags 
write: rflags 
--------------------------------------------------------------------------------
00100780: CLP; test edx, edx ; jne 0x1007dc
read: edx rflags 
write: rflags 
--------------------------------------------------------------------------------
00100810: CLP; push rbp ; mov rax, rdx ; mov edx, ecx ; mov ebp, ecx ; push rbx ; mov ebx, esi ; movsxd rsi, esi ; add rsi, rdi ; mov rdi, rax ; sub rsp, 8 ; call 0x8e3dc
read: ecx esi rax rbp rbx rdi rdx rip rsi rsp 
write: ebp ebx edx rax rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00100840: CLP; xor eax, eax ; test edi, edi ; jne 0x10085c
read: eax edi rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00100870: CLP; test edx, edx ; jne 0x1008bc
read: edx rflags 
write: rflags 
--------------------------------------------------------------------------------
001008d0: CLP; cmp byte ptr [rdi + 2], 0 ; jne 0x100914
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
00100920: CLP; push r12 ; mov eax, 0xffffffff ; push rbp ; push rbx ; cmp byte ptr [rdi + 2], 0 ; mov rbx, rdi ; jne 0x1009e4
read: r12 rbp rbx rdi rflags rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
001009f0: CLP; cmp byte ptr [rdi + 2], 0 ; jne 0x100a0c
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
00100a20: CLP; cmp byte ptr [rdi + 2], 0 ; jne 0x100a4c
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
00100a60: CLP; push rbp ; mov r9d, 0x16 ; mov r10d, 0x301 ; mov rbp, rsp ; push r15 ; push r14 ; mov r14d, esi ; push r13 ; mov r13d, 0x10 ; push r12 ; mov r12d, edi ; xor edi, edi ; push rbx ; lea rbx, [rbp - 0x90] ; sub rsp, 0xd8
read: edi esi r12 r13 r14 r15 rbp rbx rsp 
write: edi r10d r12d r13d r14d r9d rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00101080: CLP; push r15 ; xor eax, eax ; push r14 ; push r13 ; mov r13, rsi ; mov esi, 1 ; push r12 ; mov r12, rdi ; push rbp ; mov rbp, rcx ; push rbx ; mov rbx, rdx ; sub rsp, 0x28 ; mov qword ptr [rdx], 0 ; mov qword ptr [rcx], 0
read: eax r12 r13 r14 r15 rbp rbx rcx rdi rdx rsi rsp 
write: eax esi r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
001012e0: CLP; test rdi, rdi ; mov rdx, rdi ; je 0x10138c
read: rdi rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
001013b0: CLP; push rbp ; mov rbp, rsp ; push r15 ; mov r15d, edx ; xor edx, edx ; push r14 ; lea r14, [rbp - 0xb0] ; push r13 ; push r12 ; push rbx ; sub rsp, 0xc8 ; mov dword ptr [rbp - 0xc4], edi ; mov qword ptr [rbp - 0xd0], rsi ; mov edi, 0x10 ; mov esi, 3
read: edi edx r12 r13 r14 r15 rbp rbx rsi rsp 
write: edi edx esi r14 r15d rbp rflags rsp 
--------------------------------------------------------------------------------
00101720: CLP; push r14 ; push r13 ; mov r13, rsi ; push r12 ; mov r12, rdi ; push rbp ; mov ebp, edx ; push rbx ; mov ebx, edx ; sub rsp, 0x10 ; test edx, edx ; js 0x10185c
read: edx r12 r13 r14 rbp rbx rdi rflags rsi rsp 
write: ebp ebx r12 r13 rflags rsp 
--------------------------------------------------------------------------------
00101880: CLP; sub rsp, 8 ; test edi, edi ; js 0x1018dc
read: edi rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00101900: CLP; push rbp ; push rbx ; sub rsp, 0x48 ; test rdi, rdi ; je 0x1019ac
read: rbp rbx rdi rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
001019c0: CLP; push r15 ; mov r15, rdi ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x28 ; mov rax, qword ptr [rip + 0x26748c] ; mov qword ptr [rsp + 8], rsi ; mov dword ptr [rsp + 0x10], 0 ; mov eax, dword ptr fs:[rax] ; mov dword ptr [rsp + 4], eax ; mov rax, qword ptr [rip + 0x267471] ; mov dword ptr fs:[rax], 0
read: eax r12 r13 r14 r15 rbp rbx rdi rsi rsp 
write: eax r15 rax rflags rsp 
--------------------------------------------------------------------------------
00101af0: CLP; sub rsp, 0x18 ; mov rsi, rsp ; call 0x1019bc
read: rip rsp 
write: rflags rsi rsp 
--------------------------------------------------------------------------------
00101b20: CLP; push r12 ; mov r12, rsi ; lea rsi, [rip + 0x357ab] ; xor eax, eax ; push rbp ; mov ebp, edx ; push rbx ; sub rsp, 0x10 ; movzx ecx, byte ptr [rdi + 1] ; movzx edx, byte ptr [rdi] ; movzx r9d, byte ptr [rdi + 3] ; movzx r8d, byte ptr [rdi + 2] ; mov rdi, rsp ; call 0x5231c
read: eax edx r12 rbp rbx rip rsi rsp 
write: eax ebp ecx edx r12 r8d r9d rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00101ba0: CLP; push r15 ; push r14 ; push r13 ; push r12 ; mov r12, rsi ; push rbp ; push rbx ; sub rsp, 0x78 ; cmp edi, 2 ; mov qword ptr [rsp + 8], rdx ; mov dword ptr [rsp + 0x10], ecx ; je 0x101dac
read: ecx edi r12 r13 r14 r15 rbp rbx rdx rflags rsi rsp 
write: r12 rflags rsp 
--------------------------------------------------------------------------------
00101ea0: CLP; lea r8, [rsp - 0x18] ; mov byte ptr [rsp - 0x18], 0 ; xor r9d, r9d ; xor ecx, ecx ; nop dword ptr [rax + rax] ; add rdi, 1 ; movsx eax, byte ptr [rdi - 1] ; test eax, eax ; je 0x101f05
read: eax ecx r9d rdi rflags 
write: eax ecx r8 r9d rdi rflags 
--------------------------------------------------------------------------------
00101f60: CLP; push r15 ; mov r15, rdx ; push r14 ; push r13 ; push r12 ; push rbp ; mov rbp, rsi ; push rbx ; sub rsp, 0x48 ; cmp edi, 2 ; je 0x102114
read: edi r12 r13 r14 r15 rbp rbx rdx rflags rsi rsp 
write: r15 rbp rflags rsp 
--------------------------------------------------------------------------------
00102210: CLP; push rbx ; xor eax, eax ; nop word ptr [rax + rax] ; movzx ecx, byte ptr [rdi] ; test cl, cl ; je 0x1022ec
read: cl eax rbx rflags rsp 
write: eax ecx rflags rsp 
--------------------------------------------------------------------------------
00102310: CLP; test rdx, rdx ; mov rax, rdx ; lea rdx, [rip + 0x26b61f] ; push rbx ; mov ebx, 0xff ; cmove rax, rdx ; cmp edi, 0xff ; cmovle ebx, edi ; test ebx, ebx ; jle 0x1023ab
read: ebx edi rax rbx rdx rflags rsp 
write: ebx rax rdx rflags rsp 
--------------------------------------------------------------------------------
001023c0: CLP; push r14 ; push r13 ; lea r13, [rip + 0x308a1] ; push r12 ; mov r12, rdi ; push rbp ; push rbx ; movzx eax, byte ptr [rsi] ; mov rbx, rsi ; nop dword ptr [rax] ; test al, al ; je 0x10257a
read: al r12 r13 r14 rbp rbx rdi rflags rsi rsp 
write: eax r12 r13 rbx rflags rsp 
--------------------------------------------------------------------------------
001025b0: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 0x2078 ; mov rax, qword ptr [rip + 0x26c1b9] ; test esi, esi ; mov qword ptr [rdi + 0x230], rax ; je 0x102eb8
read: esi r12 r13 r14 r15 rax rbp rbx rdi rflags rsp 
write: rax rbx rflags rsp 
--------------------------------------------------------------------------------
00103070: CLP; sub rsp, 8 ; xor esi, esi ; call 0x1025ac
read: esi rip rsp 
write: esi rflags rsp 
--------------------------------------------------------------------------------
00103090: CLP; sub rsp, 8 ; call 0xb3d6c
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
001030b0: CLP; push r13 ; push r12 ; mov r12d, esi ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 8 ; movsxd rdi, dword ptr [rdi + 0x1f4] ; test edi, edi ; js 0x1030e3
read: edi esi r12 r13 rbp rbx rdi rflags rsp 
write: r12d rbp rdi rflags rsp 
--------------------------------------------------------------------------------
00103160: CLP; sub rsp, 8 ; mov esi, 1 ; call 0x1030ac
read: rip rsp 
write: esi rflags rsp 
--------------------------------------------------------------------------------
00103180: CLP; movzx edx, byte ptr [rdi] ; mov rax, rdi ; test dl, dl ; je 0x1031bc
read: dl rdi rflags 
write: edx rax rflags 
--------------------------------------------------------------------------------
001031d0: CLP; push r15 ; push r14 ; mov r14d, esi ; push r13 ; push r12 ; mov r12d, 1 ; push rbp ; push rbx ; mov rbx, rdx ; sub rsp, 0x28 ; mov rbp, qword ptr [rip + 0x265c3b] ; mov qword ptr [rsp + 8], rdi ; nop word ptr [rax + rax] ; mov rdi, rbx ; call 0x10317c
read: esi r12 r13 r14 r15 rbp rbx rdi rdx rip rsp 
write: r12d r14d rbp rbx rdi rflags rsp 
--------------------------------------------------------------------------------
001033a0: CLP; push r13 ; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 8 ; call 0x10317c
read: r12 r13 rbp rbx rdi rip rsp 
write: rbp rflags rsp 
--------------------------------------------------------------------------------
00103470: CLP; push r13 ; mov r13d, esi ; lea rsi, [rip + 0x31386] ; push r12 ; mov r12, rdi ; push rbp ; mov ebp, ecx ; push rbx ; mov rbx, rdx ; mov edx, 2 ; mov rdi, rbx ; sub rsp, 0x18 ; call 0x8bd2c
read: ecx esi r12 r13 rbp rbx rdi rdx rip rsp 
write: ebp edx r12 r13d rbx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00103570: CLP; push r15 ; xor eax, eax ; mov ecx, 9 ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x138 ; mov rdi, qword ptr [rip + 0x26589d] ; rep stosq qword ptr [rdi], rax ; lea rdi, [rip + 0x33dcc] ; call 0x3819c
read: eax r12 r13 r14 r15 rax rbp rbx rcx rdi rflags rip rsp 
write: eax ecx rcx rdi rflags rsp 
--------------------------------------------------------------------------------
00103980: CLP; sub rsp, 8 ; mov edx, dword ptr [rip + 0x26ade2] ; test edx, edx ; jne 0x1039bc
read: edx rflags rsp 
write: edx rflags rsp 
--------------------------------------------------------------------------------
001039f0: CLP; mov rax, qword ptr [rip + 0x265435] ; test byte ptr [rax + 0x40], 8 ; je 0x103a22
read: rflags 
write: rax rflags 
--------------------------------------------------------------------------------
00103d60: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x18 ; mov qword ptr [rsp + 8], rdi ; call 0x856dc
read: r12 r13 r14 r15 rbp rbx rdi rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00103e10: CLP; mov rax, qword ptr [rip + 0x265015] ; mov r8d, dword ptr [rax + 0x18] ; test r8d, r8d ; jne 0x103e24
read: r8d rflags 
write: r8d rax rflags 
--------------------------------------------------------------------------------
00103e80: CLP; push rbx ; mov rax, qword ptr fs:[0] ; add rax, qword ptr [rip + 0x26515b] ; nop dword ptr [rax - 0x34] ; mov rdi, qword ptr [rax] ; mov ecx, dword ptr [rdi] ; test ecx, ecx ; jne 0x103ea4
read: ecx rax rbx rflags rsp 
write: ecx rax rdi rflags rsp 
--------------------------------------------------------------------------------
00103f50: CLP; push rbx ; test byte ptr [rdi + 8], 1 ; mov rbx, rdi ; je 0x103f9c
read: rbx rdi rflags rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
00104000: CLP; mov rax, qword ptr [rip + 0x264fe5] ; mov rax, qword ptr fs:[rax] ; ret
read: 
write: rax 
--------------------------------------------------------------------------------
00104010: CLP; push r12 ; xor eax, eax ; mov ecx, 0x10 ; mov r12, rsi ; push rbp ; mov ebp, edi ; push rbx ; add rsp, -0x80 ; mov rdi, rsp ; rep stosq qword ptr [rdi], rax ; mov dword ptr [rsp + 0x10], edx ; mov dword ptr [rsp], ebp ; mov dword ptr [rsp + 8], 0xffffffc4 ; call 0xb3dbc
read: eax ebp edi edx r12 rax rbp rbx rcx rdi rflags rip rsi rsp 
write: eax ebp ecx r12 rcx rdi rflags rsp 
--------------------------------------------------------------------------------
00104090: CLP; cmp rdi, rsi ; je 0x1040b4
read: rdi rflags rsi 
write: rflags 
--------------------------------------------------------------------------------
001040c0: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 0x28 ; mov rax, qword ptr [rip + 0x264d24] ; mov qword ptr [rsp + 0x18], 0 ; mov r12, qword ptr fs:[rax] ; lea rax, [rsp + 0x18] ; mov qword ptr [rsp + 8], rax ; nop dword ptr [rax + rax] ; movzx eax, byte ptr [rbp]
read: r12 r13 r14 r15 rax rbp rbx rdi rsp 
write: eax r12 rax rbp rflags rsp 
--------------------------------------------------------------------------------
001044f0: CLP; push r12 ; test rdi, rdi ; mov r12, rdi ; push rbp ; push rbx ; je 0x104556
read: r12 rbp rbx rdi rflags rsp 
write: r12 rflags rsp 
--------------------------------------------------------------------------------
00104560: CLP; push rbp ; mov rbp, rsp ; push r15 ; push r14 ; push r13 ; push r12 ; push rbx ; mov rbx, rdi ; sub rsp, 0x18 ; mov r12, qword ptr [rdi + 0x20] ; test r12, r12 ; je 0x10459c
read: r12 r13 r14 r15 rbp rbx rdi rflags rsp 
write: r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
001047c0: CLP; push r15 ; xor eax, eax ; push r14 ; push r13 ; push r12 ; mov r12, rsi ; mov esi, 1 ; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rcx ; sub rsp, 0x58 ; cmp dword ptr [rip + 0x269f8b], 0 ; je 0x1047f3
read: eax r12 r13 r14 r15 rbp rbx rcx rdi rflags rsi rsp 
write: eax esi r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00104bf0: CLP; sub rsp, 0x18 ; mov rdx, rsi ; xor esi, esi ; lea rcx, [rsp + 8] ; mov qword ptr [rsp + 8], 0 ; call 0x1047bc
read: esi rip rsi rsp 
write: esi rcx rdx rflags rsp 
--------------------------------------------------------------------------------
00104c50: CLP; push r13 ; mov r13, rsi ; push r12 ; mov r12, rdi ; push rbp ; lea rbp, [rip + 0x263d7a] ; push rbx ; xor ebx, ebx ; sub rsp, 8 ; nop dword ptr [rax] ; mov rsi, rbp ; mov rdi, r12 ; call 0x83c8c
read: ebx r12 r13 rbp rbx rdi rip rsi rsp 
write: ebx r12 r13 rbp rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00104d90: CLP; push rbp ; xor eax, eax ; mov rbp, rsp ; push r15 ; push r14 ; push r13 ; push r12 ; mov r12, rdi ; push rbx ; sub rsp, 0x18 ; mov qword ptr [rbp - 0x38], rsi ; mov esi, 1 ; cmp dword ptr [rip + 0x2699ba], 0 ; je 0x104dc4
read: eax r12 r13 r14 r15 rbp rbx rdi rflags rsi rsp 
write: eax esi r12 rbp rflags rsp 
--------------------------------------------------------------------------------
00104fa0: CLP; push r13 ; mov r13, rdx ; push r12 ; mov r12, rsi ; push rbp ; mov rbp, rcx ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov rdi, qword ptr [rdi] ; call 0x104d8c
read: r12 r13 rbp rbx rcx rdi rdx rip rsi rsp 
write: r12 r13 rbp rbx rdi rflags rsp 
--------------------------------------------------------------------------------
00105070: CLP; push r13 ; mov r13, rdx ; push r12 ; mov r12, rsi ; push rbp ; mov rbp, rcx ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; test r9d, r9d ; je 0x10511c
read: r12 r13 r9d rbp rbx rcx rdi rdx rflags rsi rsp 
write: r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00105170: CLP; sub rsp, 8 ; lea rsi, [rip + 0x37161] ; mov byte ptr [rip + 0x268cb2], 1 ; xor rdi, qword ptr fs:[0x30] ; rol rdi, 0x11 ; mov qword ptr [rip + 0x268c96], rdi ; lea rdi, [rip + 0x322de] ; call 0x104bec
read: rdi rip rsp 
write: rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00105230: CLP; push r15 ; push r14 ; mov r14, rsi ; push r13 ; mov r13, rdi ; push r12 ; mov r12, rdx ; push rbp ; mov rbp, r8 ; push rbx ; mov rbx, r9 ; sub rsp, 0x28 ; mov rsi, qword ptr [rdx] ; test rsi, rsi ; je 0x105307
read: r12 r13 r14 r15 r8 r9 rbp rbx rdi rdx rflags rsi rsp 
write: r12 r13 r14 rbp rbx rflags rsi rsp 
--------------------------------------------------------------------------------
00105340: CLP; push rbx ; mov rbx, rcx ; sub rsp, 0x10 ; mov rax, qword ptr [r8] ; test rax, rax ; je 0x10539c
read: rax rbx rcx rflags rsp 
write: rax rbx rflags rsp 
--------------------------------------------------------------------------------
001053e0: CLP; push r15 ; mov r15, rdi ; push r14 ; mov r14, r8 ; push r13 ; mov r13, rcx ; push r12 ; mov r12, rsi ; push rbp ; push rbx ; mov rbx, rdx ; sub rsp, 0x28 ; mov eax, dword ptr [rsp + 0x68] ; mov dword ptr [rsp + 0xc], r9d ; mov rbp, qword ptr [rsp + 0x60]
read: r12 r13 r14 r15 r8 r9d rbp rbx rcx rdi rdx rsi rsp 
write: eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00105510: CLP; push r15 ; mov r15, rcx ; push r14 ; mov r14, rsi ; push r13 ; push r12 ; mov r12, rdi ; push rbp ; mov rbp, r8 ; push rbx ; mov rbx, rdx ; sub rsp, 0x18 ; test r9d, r9d ; je 0x105551
read: r12 r13 r14 r15 r8 r9d rbp rbx rcx rdi rdx rflags rsi rsp 
write: r12 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00105600: CLP; push r15 ; push r14 ; mov r14, rdi ; push r13 ; push r12 ; push rbp ; mov rbp, rcx ; push rbx ; mov rbx, rdx ; sub rsp, 0x58 ; mov edx, dword ptr [rsp + 0x98] ; mov qword ptr [rsp + 8], rsi ; mov qword ptr [rsp + 0x18], r9 ; test edx, edx ; je 0x105655
read: edx r12 r13 r14 r15 r9 rbp rbx rcx rdi rdx rflags rsi rsp 
write: edx r14 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
001058e0: CLP; push r15 ; mov r15, r9 ; push r14 ; push r13 ; mov r13, rdx ; push r12 ; push rbp ; mov rbp, rcx ; push rbx ; mov rbx, rdi ; sub rsp, 0x38 ; mov r12, qword ptr [rip + 0x2636eb] ; mov qword ptr [rsp + 8], rsi ; xor esi, esi ; mov qword ptr [rsp + 0x10], r8
read: esi r12 r13 r14 r15 r8 r9 rbp rbx rcx rdi rdx rsi rsp 
write: esi r12 r13 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00105e50: CLP; push r13 ; mov r13, rcx ; push r12 ; mov r12, rdx ; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov rax, qword ptr [rip + 0x268987] ; test rax, rax ; je 0x105e9c
read: r12 r13 rax rbp rbx rcx rdi rdx rflags rsi rsp 
write: r12 r13 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00105ed0: CLP; push r13 ; mov r13, rcx ; push r12 ; mov r12, rdx ; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov rax, qword ptr [rip + 0x26890f] ; test rax, rax ; je 0x105f1c
read: r12 r13 rax rbp rbx rcx rdi rdx rflags rsi rsp 
write: r12 r13 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00105f50: CLP; push r13 ; mov r13, rcx ; push r12 ; mov r12, rdx ; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov rax, qword ptr [rip + 0x268897] ; test rax, rax ; je 0x105f9c
read: r12 r13 rax rbp rbx rcx rdi rdx rflags rsi rsp 
write: r12 r13 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00105fe0: CLP; push r13 ; mov r13, rcx ; push r12 ; mov r12, rdx ; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov rax, qword ptr [rip + 0x26880f] ; test rax, rax ; je 0x10602c
read: r12 r13 rax rbp rbx rcx rdi rdx rflags rsi rsp 
write: r12 r13 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00106070: CLP; push r13 ; mov r13, rcx ; push r12 ; mov r12, rdx ; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov rax, qword ptr [rip + 0x268787] ; test rax, rax ; je 0x1060bc
read: r12 r13 rax rbp rbx rcx rdi rdx rflags rsi rsp 
write: r12 r13 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00106100: CLP; push r13 ; mov r13, rcx ; push r12 ; mov r12, rdx ; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov rax, qword ptr [rip + 0x2686ff] ; test rax, rax ; je 0x10614c
read: r12 r13 rax rbp rbx rcx rdi rdx rflags rsi rsp 
write: r12 r13 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00106190: CLP; push r13 ; mov r13, rcx ; push r12 ; mov r12, rdx ; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov rax, qword ptr [rip + 0x268677] ; test rax, rax ; je 0x1061dc
read: r12 r13 rax rbp rbx rcx rdi rdx rflags rsi rsp 
write: r12 r13 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00106210: CLP; push r13 ; mov r13, rcx ; push r12 ; mov r12, rdx ; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov rax, qword ptr [rip + 0x2685ff] ; test rax, rax ; je 0x10625c
read: r12 r13 rax rbp rbx rcx rdi rdx rflags rsi rsp 
write: r12 r13 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00106290: CLP; push r13 ; mov r13, rcx ; push r12 ; mov r12, rdx ; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov rax, qword ptr [rip + 0x268587] ; test rax, rax ; je 0x1062dc
read: r12 r13 rax rbp rbx rcx rdi rdx rflags rsi rsp 
write: r12 r13 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00106320: CLP; push r13 ; mov r13, rcx ; push r12 ; mov r12, rdx ; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov rax, qword ptr [rip + 0x2684ff] ; test rax, rax ; je 0x10636c
read: r12 r13 rax rbp rbx rcx rdi rdx rflags rsi rsp 
write: r12 r13 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
001063a0: CLP; push r13 ; mov r13, rcx ; push r12 ; mov r12, rdx ; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov rax, qword ptr [rip + 0x268487] ; test rax, rax ; je 0x1063ec
read: r12 r13 rax rbp rbx rcx rdi rdx rflags rsi rsp 
write: r12 r13 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00106430: CLP; push r13 ; mov r13, rcx ; push r12 ; mov r12, rdx ; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov rax, qword ptr [rip + 0x2683ff] ; test rax, rax ; je 0x10647c
read: r12 r13 rax rbp rbx rcx rdi rdx rflags rsi rsp 
write: r12 r13 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
001064b0: CLP; push r13 ; mov r13, rcx ; push r12 ; mov r12, rdx ; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov rax, qword ptr [rip + 0x268387] ; test rax, rax ; je 0x1064fc
read: r12 r13 rax rbp rbx rcx rdi rdx rflags rsi rsp 
write: r12 r13 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00106540: CLP; xor eax, eax ; test rdi, rdi ; je 0x106567
read: eax rdi rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00106570: CLP; ret
read: 
write: 
--------------------------------------------------------------------------------
00106580: CLP; mov eax, 1 ; ret
read: 
write: eax 
--------------------------------------------------------------------------------
00106590: CLP; xor eax, eax ; ret
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
001065a0: CLP; ret
read: 
write: 
--------------------------------------------------------------------------------
001065b0: CLP; push rbx ; lea rsi, [rip + 0x26790c] ; sub rsp, 0x30 ; mov rax, qword ptr [rip + 0x267939] ; mov rcx, qword ptr [rip + 0x267922] ; mov rdx, qword ptr [rip + 0x267923] ; mov rdi, rsp ; mov qword ptr [rip + 0x2678c9], rax ; mov qword ptr [rip + 0x2678aa], rax ; lea rax, [rip + 0x260053] ; mov qword ptr [rip + 0x2678a4], rcx ; mov qword ptr [rip + 0x2678a5], rdx ; mov qword ptr [rip + 0x26787e], rcx ; mov qword ptr [rip + 0x26787f], rdx ; xor ecx, ecx
read: ecx rax rbx rcx rdx rsp 
write: ecx rax rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00106680: CLP; sub rsp, 8 ; mov edx, dword ptr [rip + 0x2680e2] ; test edx, edx ; jne 0x1066cc
read: edx rflags rsp 
write: edx rflags rsp 
--------------------------------------------------------------------------------
00106710: CLP; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; call 0x113a7c
read: rbp rbx rdi rip rsi rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
001067c0: CLP; push r14 ; push r13 ; mov r13d, edi ; push r12 ; push rbp ; push rbx ; mov rbx, rsi ; sub rsp, 0x10 ; test rsi, rsi ; je 0x1069cc
read: edi r12 r13 r14 rbp rbx rflags rsi rsp 
write: r13d rbx rflags rsp 
--------------------------------------------------------------------------------
00106a00: CLP; ret
read: 
write: 
--------------------------------------------------------------------------------
00106a10: CLP; ret
read: 
write: 
--------------------------------------------------------------------------------
00106a20: CLP; xor eax, eax ; ret
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
00106a30: CLP; ret
read: 
write: 
--------------------------------------------------------------------------------
00106a40: CLP; push rbp ; mov rbp, rdx ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; call 0x1113bc
read: rbp rbx rdx rip rsi rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00106a90: CLP; push r15 ; push r14 ; mov r14, rdx ; push r13 ; mov r13d, 0x10 ; push r12 ; mov r12, rdi ; push rbp ; push rbx ; sub rsp, 0xc8 ; mov qword ptr [rsp + 0x38], rsi ; mov qword ptr [rsp + 0x10], rcx ; mov qword ptr [rsp + 0x20], r8 ; mov qword ptr [rsp + 0x28], r9 ; call 0x1113bc
read: r12 r13 r14 r15 r8 r9 rbp rbx rcx rdi rdx rip rsi rsp 
write: r12 r13d r14 rflags rsp 
--------------------------------------------------------------------------------
00106cf0: CLP; push r13 ; mov r13, rdi ; push r12 ; mov r12, rsi ; push rbp ; push rbx ; sub rsp, 0x68 ; call 0x1113bc
read: r12 r13 rbp rbx rdi rip rsi rsp 
write: r12 r13 rflags rsp 
--------------------------------------------------------------------------------
00106e40: CLP; push rbp ; mov rbp, rsp ; push r15 ; push r14 ; push r13 ; push r12 ; push rbx ; mov rbx, rdi ; sub rsp, 0x88 ; mov qword ptr [rbp - 0x80], rsi ; mov qword ptr [rbp - 0x88], rdx ; mov qword ptr [rbp - 0x90], rcx ; mov qword ptr [rbp - 0x98], r8 ; mov qword ptr [rbp - 0xa0], r9 ; call 0x1113bc
read: r12 r13 r14 r15 r8 r9 rbp rbx rcx rdi rdx rip rsi rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00107140: CLP; push rbx ; call 0x1113bc
read: rbx rip rsp 
write: rsp 
--------------------------------------------------------------------------------
00107180: CLP; mov eax, dword ptr [rip + 0x266d5e] ; test eax, eax ; je 0x10718c
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
001071b0: CLP; push rbp ; mov rbp, rsp ; push r15 ; mov r15, rdi ; push r14 ; lea r14, [rbp - 0x6c] ; push r13 ; lea r13, [rbp - 0x68] ; push r12 ; lea r12, [rbp - 0x50] ; push rbx ; mov ebx, 0x400 ; sub rsp, 0x68 ; mov qword ptr [rbp - 0x80], rdx ; mov qword ptr [rbp - 0x78], rsi
read: r12 r13 r14 r15 rbp rbx rdi rdx rsi rsp 
write: ebx r12 r13 r14 r15 rbp rflags rsp 
--------------------------------------------------------------------------------
001072d0: CLP; push rbx ; mov rbx, rdi ; sub rsp, 0x10 ; lea rdi, [rsp + 8] ; call 0xffa3c
read: rbx rdi rip rsp 
write: rbx rdi rflags rsp 
--------------------------------------------------------------------------------
001073a0: CLP; push r14 ; mov r14, rdi ; push r13 ; mov r13, rsi ; push r12 ; movsxd r12, edx ; push rbp ; movzx ebp, cx ; push rbx ; sub rsp, 0x50 ; lea rbx, [rsp + 0x20] ; mov dword ptr [rsp + 0x18], 0xffffffff ; mov rdi, rbx ; call 0x1072cc
read: cx edx r12 r13 r14 rbp rbx rdi rip rsi rsp 
write: ebp r12 r13 r14 rbx rdi rflags rsp 
--------------------------------------------------------------------------------
001074f0: CLP; push r12 ; mov r12, rdi ; push rbp ; mov rbp, rsi ; push rbx ; sub rsp, 0x50 ; lea rbx, [rsp + 0x20] ; mov dword ptr [rsp + 0x18], 0xffffffff ; mov rdi, rbx ; call 0x1072cc
read: r12 rbp rbx rdi rip rsi rsp 
write: r12 rbp rbx rdi rflags rsp 
--------------------------------------------------------------------------------
001075f0: CLP; push r12 ; mov edx, 0x6f00 ; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 0x20 ; mov word ptr [rdi + 2], dx ; mov qword ptr [rsp + 0x18], 0 ; call 0x11111c
read: dx r12 rbp rbx rdi rip rsp 
write: edx rbx rflags rsp 
--------------------------------------------------------------------------------
00107700: CLP; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; call 0x113a7c
read: rbp rbx rdi rip rsi rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00107770: CLP; push r13 ; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rsi ; sub rsp, 0x18 ; mov r13d, dword ptr [rdi] ; lea r12, [rsp + 4] ; mov qword ptr [rsp + 8], 0 ; nop dword ptr [rax] ; xor eax, eax ; cmp qword ptr [rbx], 0 ; mov rsi, r12 ; mov rdi, rbp
read: eax r12 r13 rbp rbx rdi rsi rsp 
write: eax r12 r13d rbp rbx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00107850: CLP; push rbp ; lea rcx, [rip + 0xc224] ; mov edx, 8 ; mov rbp, rdi ; push rbx ; mov rbx, rsi ; sub rsp, 0x18 ; mov rax, qword ptr [rsi] ; lea rsi, [rsp + 8] ; mov qword ptr [rsp + 8], rax ; call 0x11495c
read: rax rbp rbx rdi rip rsi rsp 
write: edx rax rbp rbx rcx rflags rsi rsp 
--------------------------------------------------------------------------------
001078d0: CLP; push r14 ; push r13 ; push r12 ; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 0x10 ; call 0x113a7c
read: r12 r13 r14 rbp rbx rdi rip rsi rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
001079f0: CLP; push r15 ; mov r15, rsi ; mov esi, 0x186a0 ; push r14 ; mov r14, rdx ; mov edx, 2 ; push r13 ; mov r13, rcx ; mov ecx, 0x6f00 ; push r12 ; mov r12, r9 ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 0x88
read: r12 r13 r14 r15 r9 rbp rbx rcx rdi rdx rsi rsp 
write: ecx edx esi r12 r13 r14 r15 rbp rflags rsp 
--------------------------------------------------------------------------------
00107b20: CLP; push r15 ; push r14 ; mov r14, rsi ; push r13 ; mov r13, rdx ; push r12 ; mov r12, rcx ; push rbp ; mov rbp, r8 ; push rbx ; sub rsp, 0x29c8 ; mov qword ptr [rsp + 0x10], rdi ; mov qword ptr [rsp + 8], r9 ; call 0x10e1dc
read: r12 r13 r14 r15 r8 r9 rbp rbx rcx rdi rdx rip rsi rsp 
write: r12 r13 r14 rbp rflags rsp 
--------------------------------------------------------------------------------
001081f0: CLP; push r12 ; xor r12d, r12d ; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rsi ; call 0x113eec
read: r12 r12d rbp rbx rdi rip rsi rsp 
write: r12d rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00108270: CLP; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; call 0x113eec
read: rbp rbx rdi rip rsi rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
001082c0: CLP; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; call 0x10826c
read: rbp rbx rdi rip rsi rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00108360: CLP; sub rsp, 8 ; mov edx, 8 ; call 0x113f6c
read: rip rsp 
write: edx rflags rsp 
--------------------------------------------------------------------------------
00108380: CLP; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; call 0x113a7c
read: rbp rbx rdi rip rsi rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
001083f0: CLP; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; mov qword ptr [rsi + 0x10], 2 ; mov eax, dword ptr [rdi] ; mov dword ptr [rsi + 8], 0 ; test eax, eax ; je 0x10841c
read: eax rbp rbx rdi rflags rsi rsp 
write: eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00108480: CLP; mov eax, dword ptr [rdi + 0x10] ; test eax, eax ; je 0x1084bc
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
001085a0: CLP; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; mov eax, dword ptr [rdi] ; mov rbx, rsi ; test eax, eax ; jne 0x1085e4
read: eax r12 rbp rbx rdi rflags rsi rsp 
write: eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
001089a0: CLP; xor eax, eax ; ret
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
001089b0: CLP; mov rax, qword ptr [rsi + 0x30] ; mov edx, dword ptr [rip + 0x265532] ; mov qword ptr [rdi + 0x18], rax ; mov rax, qword ptr [rsi + 0x38] ; mov qword ptr [rdi + 0x20], rax ; mov rax, qword ptr [rsi + 0x40] ; mov qword ptr [rdi + 0x28], rax ; mov rax, qword ptr [rdi + 0x38] ; mov dword ptr [rax + 0x28], edx ; movsxd rdx, dword ptr [rdi + 0x18] ; mov dword ptr [rax + 0x38], 0 ; mov eax, 2 ; cmp edx, 3 ; jbe 0x1089ec
read: edx rax rflags 
write: eax edx rax rdx rflags 
--------------------------------------------------------------------------------
00108a10: CLP; push r15 ; mov r15, rsi ; mov ecx, 1 ; push r14 ; push r13 ; mov r13, rdi ; push r12 ; push rbp ; push rbx ; sub rsp, 0x48 ; mov rbx, qword ptr [rdi + 0x30] ; lea rbp, [rsp + 0x10] ; lea rax, [rbx + 0x28] ; mov rdi, rbp ; mov qword ptr [rbx + 8], rax
read: r12 r13 r14 r15 rax rbp rbx rdi rsi rsp 
write: ecx r13 r15 rax rbp rbx rdi rflags rsp 
--------------------------------------------------------------------------------
00108be0: CLP; mov eax, 2 ; ret
read: 
write: eax 
--------------------------------------------------------------------------------
00108bf0: CLP; mov eax, 2 ; ret
read: 
write: eax 
--------------------------------------------------------------------------------
00108c00: CLP; ret
read: 
write: 
--------------------------------------------------------------------------------
00108c10: CLP; push rbp ; mov rbp, rdx ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; call 0x1113bc
read: rbp rbx rdx rip rsi rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00108c60: CLP; push rbp ; mov rbp, rdx ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; call 0x1113bc
read: rbp rbx rdx rip rsi rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00108ca0: CLP; push r12 ; mov r12, rsi ; push rbp ; push rbx ; call 0x1113bc
read: r12 rbp rbx rip rsi rsp 
write: r12 rsp 
--------------------------------------------------------------------------------
00108d20: CLP; push rbp ; mov rbp, rsi ; push rbx ; sub rsp, 8 ; call 0x1113bc
read: rbp rbx rip rsi rsp 
write: rbp rflags rsp 
--------------------------------------------------------------------------------
00108d90: CLP; push rbx ; call 0x1113bc
read: rbx rip rsp 
write: rsp 
--------------------------------------------------------------------------------
00108e20: CLP; push r14 ; push r13 ; mov r13, rsi ; push r12 ; push rbp ; push rbx ; sub rsp, 0x2270 ; mov r12, qword ptr [rdi + 0x10] ; mov qword ptr [rsp + 8], 0 ; test r12, r12 ; je 0x108f84
read: r12 r13 r14 rbp rbx rflags rsi rsp 
write: r12 r13 rflags rsp 
--------------------------------------------------------------------------------
00109020: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; mov rbp, rdx ; push rbx ; sub rsp, 0x28 ; test rdx, rdx ; mov qword ptr [rsp + 8], r9 ; je 0x109164
read: r12 r13 r14 r15 r9 rbp rbx rdx rflags rsp 
write: rbp rflags rsp 
--------------------------------------------------------------------------------
00109220: CLP; push rbx ; mov rbx, rsi ; sub rsp, 0x10 ; mov eax, dword ptr [rdi] ; cmp eax, 1 ; je 0x109244
read: eax rbx rflags rsi rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
00109290: CLP; push r12 ; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 0x10 ; mov eax, dword ptr [rdi] ; cmp eax, 1 ; je 0x1092bc
read: eax r12 rbp rbx rdi rflags rsi rsp 
write: eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00109360: CLP; mov eax, dword ptr [rdi] ; mov rdx, qword ptr [rdi + 0x18] ; test eax, eax ; je 0x1093a4
read: eax rflags 
write: eax rdx rflags 
--------------------------------------------------------------------------------
001093c0: CLP; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov rdx, qword ptr [rdi + 0x60] ; mov eax, dword ptr [rdi + 0x48] ; and edx, 3 ; mov rbp, rdx ; add rbp, qword ptr [rdi + 0x50] ; sub eax, edx ; mov edx, eax ; mov rdi, qword ptr [rdi] ; mov rsi, rbp ; call qword ptr [rbx + 0x40]
read: eax edx rbp rbx rdi rdx rsp 
write: eax edx rbp rbx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00109420: CLP; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; test rbx, rbx ; jle 0x109458
read: rbp rbx rdi rflags rsi rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00109490: CLP; push rbx ; mov rbx, qword ptr [rdi + 0x18] ; mov rdi, qword ptr [rbx + 8] ; call 0x1f46c
read: rbx rip rsp 
write: rbx rdi rsp 
--------------------------------------------------------------------------------
001094c0: CLP; push rbp ; mov rbp, rdi ; mov edx, 1 ; xor esi, esi ; push rbx ; sub rsp, 8 ; mov rbx, qword ptr [rdi + 0x18] ; mov edi, dword ptr [rbx] ; call 0xe35bc
read: esi rbp rbx rdi rip rsp 
write: edi edx esi rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00109530: CLP; push r12 ; mov r12d, esi ; push rbp ; mov rbp, qword ptr [rdi + 0x18] ; push rbx ; mov rbx, rdi ; call 0x1094bc
read: esi r12 rbp rbx rdi rip rsp 
write: r12d rbp rbx rsp 
--------------------------------------------------------------------------------
001095c0: CLP; push r14 ; push r13 ; mov r13, rsi ; push r12 ; push rbp ; mov ebp, edx ; push rbx ; mov rbx, rdi ; test ebp, ebp ; jle 0x10962d
read: ebp edx r12 r13 r14 rbp rbx rdi rflags rsi rsp 
write: ebp r13 rbx rflags rsp 
--------------------------------------------------------------------------------
00109640: CLP; push rbx ; mov edx, 4 ; mov rbx, rdi ; sub rsp, 0x10 ; lea rsi, [rsp + 0xc] ; call 0x1095bc
read: rbx rdi rip rsp 
write: edx rbx rflags rsi rsp 
--------------------------------------------------------------------------------
001096a0: CLP; push r13 ; push r12 ; mov r12, rsi ; push rbp ; mov ebp, edx ; push rbx ; sub rsp, 8 ; mov rbx, qword ptr [rdi + 0x18] ; test ebp, ebp ; je 0x10971c
read: ebp edx r12 r13 rbp rbx rflags rsi rsp 
write: ebp r12 rbx rflags rsp 
--------------------------------------------------------------------------------
00109730: CLP; push rbx ; mov rbx, rsi ; sub rsp, 0x10 ; mov rax, qword ptr [rdi + 0x18] ; mov rcx, qword ptr [rax + 0x68] ; mov r8, qword ptr [rax + 0x58] ; cmp rcx, 3 ; jle 0x109757
read: rbx rcx rflags rsi rsp 
write: r8 rax rbx rcx rflags rsp 
--------------------------------------------------------------------------------
001097c0: CLP; push rbx ; mov rbx, rsi ; sub rsp, 0x10 ; mov rax, qword ptr [rdi + 0x18] ; cmp qword ptr [rax + 0x68], 3 ; mov rcx, qword ptr [rax + 0x58] ; jle 0x1097e4
read: rbx rflags rsi rsp 
write: rax rbx rcx rflags rsp 
--------------------------------------------------------------------------------
00109850: CLP; push rbp ; mov edx, 0 ; mov eax, 0x80000000 ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; cmp esi, 1 ; mov rbp, qword ptr [rdi + 0x20] ; cmovne eax, edx ; mov rdx, qword ptr [rdi + 0x30] ; mov rsi, qword ptr [rdi + 0x18] ; mov rdi, qword ptr [rdi] ; mov rcx, rbp ; sub rcx, rdx ; sub rbp, rsi
read: eax edx esi rbp rbx rcx rdi rdx rflags rsi rsp 
write: eax edx rbp rbx rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
001098c0: CLP; push rbp ; mov rbp, rsi ; push rbx ; sub rsp, 8 ; mov rbx, qword ptr [rdi + 0x18] ; mov rdx, qword ptr [rbx + 0x20] ; lea rax, [rdx + 4] ; cmp rax, qword ptr [rbx + 0x28] ; mov qword ptr [rbx + 0x20], rax ; ja 0x1098fc
read: rax rbp rbx rflags rsi rsp 
write: rax rbp rbx rdx rflags rsp 
--------------------------------------------------------------------------------
00109930: CLP; push rbp ; mov rbp, rsi ; push rbx ; sub rsp, 8 ; mov rbx, qword ptr [rdi + 0x18] ; mov rax, qword ptr [rbx + 0x20] ; lea rdx, [rax + 4] ; cmp rdx, qword ptr [rbx + 0x28] ; mov qword ptr [rbx + 0x20], rdx ; ja 0x10996c
read: rbp rbx rdx rflags rsi rsp 
write: rax rbp rbx rdx rflags rsp 
--------------------------------------------------------------------------------
001099a0: CLP; push r14 ; test edx, edx ; push r13 ; mov r13, rsi ; push r12 ; push rbp ; push rbx ; mov ebx, edx ; mov r12, qword ptr [rdi + 0x18] ; je 0x109a05
read: edx r12 r13 r14 rbp rbx rflags rsi rsp 
write: ebx r12 r13 rflags rsp 
--------------------------------------------------------------------------------
00109a50: CLP; push r15 ; mov r15, rcx ; push r14 ; push r13 ; push r12 ; mov r12, rdi ; mov edi, 0x80 ; push rbp ; mov ebp, esi ; push rbx ; sub rsp, 0x28 ; mov dword ptr [rsp + 0xc], edx ; mov qword ptr [rsp + 0x10], r8 ; mov qword ptr [rsp + 0x18], r9 ; call 0x1f3cc
read: edx esi r12 r13 r14 r15 r8 r9 rbp rbx rcx rdi rip rsp 
write: ebp edi r12 r15 rflags rsp 
--------------------------------------------------------------------------------
00109be0: CLP; push rbx ; mov rbx, qword ptr [rdi + 0x18] ; mov rsi, qword ptr [rbx + 0x68] ; test rsi, rsi ; jg 0x109c0c
read: rbx rflags rsi rsp 
write: rbx rflags rsi rsp 
--------------------------------------------------------------------------------
00109c50: CLP; push rbx ; mov rbx, qword ptr [rdi + 0x18] ; mov rsi, qword ptr [rbx + 0x68] ; test rsi, rsi ; jg 0x109c7e
read: rbx rflags rsi rsp 
write: rbx rflags rsi rsp 
--------------------------------------------------------------------------------
00109cd0: CLP; sub rsp, 8 ; test esi, esi ; mov rdi, qword ptr [rdi + 0x18] ; jne 0x109d24
read: esi rflags rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
00109d50: CLP; push r15 ; push r14 ; push r13 ; mov r13, rsi ; push r12 ; mov r12, rdi ; push rbp ; push rbx ; sub rsp, 0x18 ; mov rdx, qword ptr [rip + 0x2641b1] ; test rdx, rdx ; je 0x109dfa
read: r12 r13 r14 r15 rbp rbx rdi rdx rflags rsi rsp 
write: r12 r13 rdx rflags rsp 
--------------------------------------------------------------------------------
00109e50: CLP; push r15 ; push r14 ; mov r14, rdx ; push r13 ; mov r13, rsi ; push r12 ; mov r12, rdi ; push rbp ; push rbx ; sub rsp, 0x28 ; mov rdx, qword ptr [rip + 0x26409e] ; test rdx, rdx ; je 0x109f10
read: r12 r13 r14 r15 rbp rbx rdi rdx rflags rsi rsp 
write: r12 r13 r14 rdx rflags rsp 
--------------------------------------------------------------------------------
00109f70: CLP; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; call 0x113eec
read: rbp rbx rdi rip rsi rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010a010: CLP; push rbp ; mov edx, 8 ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; call 0x113f6c
read: rbp rbx rdi rip rsi rsp 
write: edx rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010a060: CLP; push r14 ; mov r14, rsi ; mov esi, edx ; mov eax, 3 ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x40 ; movzx edx, byte ptr [r8] ; movzx r13d, byte ptr [r8 + 1] ; movzx r12d, byte ptr [r8 + 2] ; movzx ebp, byte ptr [r8 + 3] ; test sil, 7 ; movzx ebx, byte ptr [r8 + 4]
read: edx r12 r13 r14 rbp rbx rsi rsp sil 
write: eax ebp ebx edx esi r12d r13d r14 rflags rsp 
--------------------------------------------------------------------------------
0010a1d0: CLP; sub rsp, 0x48 ; test dl, 7 ; mov r9, rsi ; mov dword ptr [rsp + 0x1c], 1 ; mov esi, edx ; mov eax, 3 ; je 0x10a1f4
read: dl edx rflags rsi rsp 
write: eax esi r9 rflags rsp 
--------------------------------------------------------------------------------
0010a280: CLP; mov rcx, qword ptr [rdi + 8] ; mov r9, qword ptr [rdi] ; push rbx ; mov rax, rcx ; shr rax, 4 ; xor rax, r9 ; and eax, 0xf0f0f0f ; xor r9, rax ; shl rax, 4 ; xor rax, rcx ; mov rcx, r9 ; shr rcx, 0x10 ; xor rcx, rax ; movzx ecx, cx ; xor rax, rcx
read: cx eax r9 rax rbx rcx rsp 
write: eax ecx r9 rax rcx rflags rsp 
--------------------------------------------------------------------------------
0010a6d0: CLP; push r15 ; push r14 ; push r13 ; lea r13, [rip + 0x32e7f] ; push r12 ; xor r12d, r12d ; push rbp ; mov rbp, rdx ; push rbx ; sub rsp, 0x138 ; mov edx, dword ptr [rdx + 0xc] ; movzx eax, byte ptr [rbp + 2] ; movzx ecx, byte ptr [rbp] ; movzx r9d, byte ptr [rbp + 4] ; lea rbx, [rsp + 0x30]
read: r12 r12d r13 r14 r15 rbp rbx rdx rsp 
write: eax ecx edx r12d r13 r9d rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010ad80: CLP; lea rcx, [rdi + 8] ; lea rdx, [rip + 0x290f1] ; nop ; movzx eax, byte ptr [rdi] ; add rdi, 1 ; and eax, 0x7f ; movzx eax, byte ptr [rdx + rax] ; mov byte ptr [rdi - 1], al ; cmp rdi, rcx ; jne 0x10ad8c
read: al eax rcx rdi rflags 
write: eax rcx rdi rdx rflags 
--------------------------------------------------------------------------------
0010adb0: CLP; sub rsp, 8 ; call 0x113eec
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0010add0: CLP; sub rsp, 8 ; mov edx, 0x30 ; call 0x113f6c
read: rip rsp 
write: edx rflags rsp 
--------------------------------------------------------------------------------
0010ae00: CLP; sub rsp, 8 ; mov edx, 0xff ; call 0x11418c
read: rip rsp 
write: edx rflags rsp 
--------------------------------------------------------------------------------
0010ae30: CLP; push rbp ; mov edx, 0xff ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; call 0x11418c
read: rbp rbx rdi rip rsi rsp 
write: edx rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010ae80: CLP; push rbp ; mov edx, 0xff ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; call 0x11418c
read: rbp rbx rdi rip rsi rsp 
write: edx rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010aee0: CLP; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; call 0x113eec
read: rbp rbx rdi rip rsi rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010af40: CLP; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; call 0x11399c
read: rbp rbx rdi rip rsi rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010afc0: CLP; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; call 0x113eec
read: rbp rbx rdi rip rsi rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010b020: CLP; push rbp ; mov edx, 0x30 ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; call 0x113f6c
read: rbp rbx rdi rip rsi rsp 
write: edx rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010b090: CLP; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; call 0x113eec
read: rbp rbx rdi rip rsi rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010b0f0: CLP; push r13 ; mov r13, rsi ; push r12 ; mov r12, rdx ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 0x28 ; mov rdi, rsp ; call 0xd721c
read: r12 r13 rbp rbx rdi rdx rip rsi rsp 
write: r12 r13 rbp rdi rflags rsp 
--------------------------------------------------------------------------------
0010b2a0: CLP; push r15 ; push r14 ; mov r14, rsi ; push r13 ; mov r13, rdx ; push r12 ; mov r12, rdi ; mov edi, 2 ; push rbp ; push rbx ; sub rsp, 0x38 ; cmp rdx, 1 ; sbb ebx, ebx ; xor edx, edx ; add ebx, 2
read: ebx edx r12 r13 r14 r15 rbp rbx rdi rdx rflags rsi rsp 
write: ebx edi edx r12 r13 r14 rflags rsp 
--------------------------------------------------------------------------------
0010b4b0: CLP; push r15 ; push r14 ; push r13 ; mov r13, rdi ; push r12 ; push rbp ; push rbx ; mov rbx, rsi ; sub rsp, 0x458 ; call 0x1113bc
read: r12 r13 r14 r15 rbp rbx rdi rip rsi rsp 
write: r13 rbx rflags rsp 
--------------------------------------------------------------------------------
0010bb60: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 0x28 ; mov ebx, dword ptr [rdi + 0x20] ; cmp ebx, 0x3f ; ja 0x10bc64
read: ebx r12 r13 r14 r15 rbp rbx rdi rflags rsp 
write: ebx rbp rflags rsp 
--------------------------------------------------------------------------------
0010bdc0: CLP; mov rax, qword ptr [rdi + 0x10] ; mov rdx, qword ptr [rax + 0x90] ; mov qword ptr [rsi], rdx ; mov rdx, qword ptr [rax + 0x98] ; mov qword ptr [rsi + 8], rdx ; mov rax, qword ptr [rax + 0xa0] ; mov qword ptr [rsi + 0x10], rax ; ret
read: rax rdx 
write: rax rdx 
--------------------------------------------------------------------------------
0010bdf0: CLP; sub rsp, 8 ; mov rdi, qword ptr [rdi + 0x10] ; mov rcx, rsi ; xor eax, eax ; mov rsi, rdx ; mov dword ptr [rdi + 0xc8], 2 ; add rdi, 0xc8 ; call rcx
read: eax rcx rdi rdx rsi rsp 
write: eax rcx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
0010be20: CLP; ret
read: 
write: 
--------------------------------------------------------------------------------
0010be30: CLP; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 8 ; mov rbx, qword ptr [rdi + 0x10] ; mov eax, dword ptr [rbx + 4] ; test eax, eax ; jne 0x10be84
read: eax rbp rbx rdi rflags rsp 
write: eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010bea0: CLP; cmp esi, 0xf ; mov r8, rdx ; mov rcx, qword ptr [rdi + 0x10] ; ja 0x10c07c
read: esi rdx rflags 
write: r8 rcx rflags 
--------------------------------------------------------------------------------
0010c090: CLP; push r15 ; push r14 ; push r13 ; mov r13, rdi ; push r12 ; push rbp ; push rbx ; sub rsp, 0xb8 ; mov rbx, qword ptr [rdi + 0x10] ; mov qword ptr [rsp + 0x28], rcx ; mov qword ptr [rsp + 0x48], rsi ; mov qword ptr [rsp + 0x20], rdx ; mov qword ptr [rsp + 0x18], r8 ; mov ecx, dword ptr [rbx + 0x18] ; mov qword ptr [rsp + 0x40], r9
read: r12 r13 r14 r15 r8 r9 rbp rbx rcx rdi rdx rsi rsp 
write: ecx r13 rbx rflags rsp 
--------------------------------------------------------------------------------
0010c400: CLP; push rbp ; mov rbp, rsp ; push r15 ; push r14 ; mov r14, rdx ; push r13 ; mov r13, rsi ; push r12 ; mov r12d, edi ; push rbx ; sub rsp, 0x68 ; sub rsp, 0x30 ; lea rbx, [rsp + 0xf] ; call 0xb3d6c
read: edi r12 r13 r14 r15 rbp rbx rdx rip rsi rsp 
write: r12d r13 r14 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010c510: CLP; push r13 ; mov r13d, edx ; push r12 ; mov r12, rdi ; push rbp ; mov rbp, rsi ; push rbx ; mov ebx, edx ; sub rsp, 8 ; test edx, edx ; jg 0x10c53b
read: edx r12 r13 rbp rbx rdi rflags rsi rsp 
write: ebx r12 r13d rbp rflags rsp 
--------------------------------------------------------------------------------
0010c5a0: CLP; push r14 ; xor eax, eax ; push r13 ; mov r13, rsi ; push r12 ; movsxd r12, edx ; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 0x70 ; test r12d, r12d ; mov rdi, qword ptr [rdi + 8] ; mov rsi, qword ptr [rbx + 0x10] ; je 0x10c6fb
read: eax edx r12 r12d r13 r14 rbp rbx rdi rflags rsi rsp 
write: eax r12 r13 rbx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
0010c780: CLP; push r15 ; mov r15, rdi ; mov edi, 0xf8 ; push r14 ; push r13 ; mov r13, rsi ; push r12 ; mov r12, rdx ; push rbp ; mov rbp, rcx ; push rbx ; sub rsp, 0x78 ; mov dword ptr [rsp + 4], r8d ; mov dword ptr [rsp + 8], r9d ; call 0x1f3cc
read: r12 r13 r14 r15 r8d r9d rbp rbx rcx rdi rdx rip rsi rsp 
write: edi r12 r13 r15 rbp rflags rsp 
--------------------------------------------------------------------------------
0010cab0: CLP; mov eax, 2 ; ret
read: 
write: eax 
--------------------------------------------------------------------------------
0010cac0: CLP; sub rsp, 8 ; mov rdi, qword ptr [rdi + 0x40] ; mov rcx, rsi ; xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; call rcx
read: eax rcx rdi rdx rsi rsp 
write: eax rcx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
0010caf0: CLP; sub rsp, 8 ; mov rdi, qword ptr [rdi + 0x40] ; mov rcx, rsi ; xor eax, eax ; mov rsi, rdx ; mov dword ptr [rdi + 0x10], 2 ; add rdi, 0x10 ; call rcx
read: eax rcx rdi rdx rsi rsp 
write: eax rcx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
0010cb20: CLP; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov rbp, qword ptr [rdi + 0x40] ; call 0x11173c
read: rbp rbx rdi rip rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010cb90: CLP; sub rsp, 8 ; call 0x372fc
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0010cba0: CLP; push r14 ; mov r14d, edx ; push r13 ; mov r13d, esi ; push r12 ; mov r12d, edi ; mov edi, 0x150 ; push rbp ; push rbx ; call 0x1f3cc
read: edi edx esi r12 r13 r14 rbp rbx rip rsp 
write: edi r12d r13d r14d rsp 
--------------------------------------------------------------------------------
0010ccc0: CLP; push r13 ; push r12 ; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 0x98 ; mov r13, qword ptr [rdi + 0x40] ; lea r12, [rsp + 0x20] ; lea rbp, [rsp + 0xc] ; jmp 0x10ccf1
read: r12 r13 rbp rbx rdi rsp 
write: r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010cd90: CLP; push rbp ; push rbx ; sub rsp, 8 ; mov rax, qword ptr [rdi + 0x40] ; lea rbx, [rax + 0x10] ; mov dword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rax + 8] ; mov rdi, rbx ; mov qword ptr [rsi], rax ; call 0x10837c
read: rax rbp rbx rip rsp 
write: rax rbx rdi rflags rsp 
--------------------------------------------------------------------------------
0010cde0: CLP; mov rdi, qword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x10cdec
read: eax rflags 
write: eax rdi rflags 
--------------------------------------------------------------------------------
0010ce10: CLP; push r12 ; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, qword ptr [rdi + 0x40] ; lea r12, [rbx + 0x10] ; mov dword ptr [rbx + 0x10], 1 ; mov rdi, r12 ; call 0x109bdc
read: r12 rbp rbx rip rsi rsp 
write: r12 rbp rbx rdi rsp 
--------------------------------------------------------------------------------
0010ce90: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x78 ; test edx, edx ; mov qword ptr [rsp + 8], rdi ; mov dword ptr [rsp + 0x1c], edx ; jle 0x10cfaf
read: edx r12 r13 r14 r15 rbp rbx rdi rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0010d000: CLP; push r14 ; mov r14, rsi ; push r13 ; movsxd r13, edx ; push r12 ; mov r12, rdi ; push rbp ; push rbx ; sub rsp, 0x70 ; mov ebx, dword ptr [rdi] ; lea rbp, [rsp + 0x10] ; mov esi, 1 ; mov edx, 0x88b8 ; mov rdi, rbp ; mov word ptr [rsp + 0x14], si
read: edx r12 r13 r14 rbp rbx rdi rsi rsp si 
write: ebx edx esi r12 r13 r14 rbp rdi rflags rsp 
--------------------------------------------------------------------------------
0010d150: CLP; push r15 ; mov r15d, esi ; push r14 ; push r13 ; xor r13d, r13d ; push r12 ; mov r12, rcx ; push rbp ; mov ebp, edi ; push rbx ; sub rsp, 0x98 ; cmp edi, -1 ; mov dword ptr [rsp + 0xc], edx ; mov dword ptr [rsp + 0x1c], 0x10 ; je 0x10d30c
read: edi edx esi r12 r13 r13d r14 r15 rbp rbx rcx rflags rsp 
write: ebp r12 r13d r15d rflags rsp 
--------------------------------------------------------------------------------
0010d3d0: CLP; sub rsp, 8 ; call 0x10cb9c
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0010d3f0: CLP; push rbp ; mov esi, 1 ; xor eax, eax ; push rbx ; sub rsp, 0x18 ; cmp dword ptr [rip + 0x26136c], 0 ; je 0x10d412
read: eax rbp rbx rflags rsp 
write: eax esi rflags rsp 
--------------------------------------------------------------------------------
0010d4e0: CLP; ret
read: 
write: 
--------------------------------------------------------------------------------
0010d4f0: CLP; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 8 ; mov rbx, qword ptr [rdi + 0x40] ; mov rdi, qword ptr [rbx] ; call 0x1f46c
read: rbp rbx rdi rip rsp 
write: rbp rbx rdi rflags rsp 
--------------------------------------------------------------------------------
0010d540: CLP; push rbp ; push rbx ; sub rsp, 0x18 ; cmp dword ptr [rsi + 0x10], 0xc ; mov rbx, qword ptr [rdi + 0x40] ; je 0x10d55c
read: rbp rbx rflags rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
0010d5e0: CLP; push r12 ; mov r12, rsi ; xor esi, esi ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 0x40 ; mov rbx, qword ptr [rdi + 0x40] ; lea rdi, [rsp + 0x30] ; call 0x1f38c
read: esi r12 rbp rbx rdi rip rsi rsp 
write: esi r12 rbp rbx rdi rflags rsp 
--------------------------------------------------------------------------------
0010d820: CLP; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 0x20 ; mov rbx, qword ptr [rdi + 0x40] ; lea r12, [rsp + 0x10] ; mov ecx, dword ptr [rbx + 0x20] ; test ecx, ecx ; jne 0x10d8a4
read: ecx r12 rbp rbx rdi rflags rsp 
write: ecx r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010d940: CLP; push r15 ; mov r15, rsi ; push r14 ; push r13 ; mov r13, rdi ; mov edi, 0x48 ; push r12 ; mov r12, r8 ; push rbp ; mov rbp, rcx ; push rbx ; sub rsp, 0x128 ; mov dword ptr [rsp + 4], edx ; call 0x1f3cc
read: edx r12 r13 r14 r15 r8 rbp rbx rcx rdi rip rsi rsp 
write: edi r12 r13 r15 rbp rflags rsp 
--------------------------------------------------------------------------------
0010dbb0: CLP; push r14 ; mov r14, rdi ; push r13 ; mov r13, rcx ; push r12 ; mov r12, rdx ; push rbp ; mov ebp, esi ; push rbx ; sub rsp, 0x410 ; lea rbx, [rsp + 0x10] ; mov rsi, rbx ; call 0x109d4c
read: esi r12 r13 r14 rbp rbx rcx rdi rdx rip rsp 
write: ebp r12 r13 r14 rbx rflags rsi rsp 
--------------------------------------------------------------------------------
0010dc60: CLP; ret
read: 
write: 
--------------------------------------------------------------------------------
0010dc70: CLP; mov rax, rsi ; sub rsp, 8 ; mov rsi, qword ptr [rdi + 0x40] ; mov rcx, qword ptr [rax + 8] ; mov rdi, rax ; mov edx, dword ptr [rsi + 0x1c8] ; add rsi, 0x38 ; call qword ptr [rcx + 0x18]
read: rax rsi rsp 
write: edx rax rcx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
0010dca0: CLP; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov rbp, qword ptr [rdi + 0x40] ; mov rdi, qword ptr [rbp + 8] ; call 0x1f46c
read: rbp rbx rdi rip rsp 
write: rbp rbx rdi rflags rsp 
--------------------------------------------------------------------------------
0010dd10: CLP; push r12 ; xor ecx, ecx ; mov edx, 0x190 ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 0x30 ; mov r12, qword ptr [rdi + 0x40] ; mov rdi, rsp ; mov rbx, rsp ; lea rsi, [r12 + 0x38] ; call 0x11493c
read: ecx r12 rbp rbx rdi rip rsp 
write: ecx edx r12 rbp rbx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
0010dde0: CLP; push r14 ; push r13 ; xor r13d, r13d ; push r12 ; mov r12, rdi ; push rbp ; push rbx ; sub rsp, 0x70 ; mov rbx, qword ptr [rdi + 0x40] ; mov rsi, qword ptr [rbx + 8] ; cmp qword ptr [rdi + 8], rsi ; je 0x10de79
read: r12 r13 r13d r14 rbp rbx rdi rflags rsi rsp 
write: r12 r13d rbx rflags rsi rsp 
--------------------------------------------------------------------------------
0010df10: CLP; cmp dword ptr [rsi], 2 ; je 0x10df1c
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
0010dff0: CLP; push r15 ; mov r15, rdi ; mov edi, 0x48 ; push r14 ; mov r14d, esi ; push r13 ; push r12 ; mov r12d, ecx ; push rbp ; mov rbp, r8 ; push rbx ; sub rsp, 0x218 ; mov dword ptr [rsp + 0xc], edx ; call 0x1f3cc
read: ecx edx esi r12 r13 r14 r15 r8 rbp rbx rdi rip rsp 
write: edi r12d r14d r15 rbp rflags rsp 
--------------------------------------------------------------------------------
0010e1e0: CLP; push rbp ; mov esi, 0xff ; mov rbp, rsp ; push r15 ; push r14 ; push r13 ; lea r13, [rbp - 0x130] ; push r12 ; mov rdi, r13 ; push rbx ; sub rsp, 0x118 ; call 0xdcb9c
read: r12 r13 r14 r15 rbp rbx rip rsp 
write: esi r13 rbp rdi rflags rsp 
--------------------------------------------------------------------------------
0010e380: CLP; push rbp ; mov rbp, rsp ; push r15 ; push r14 ; push r13 ; push r12 ; mov r12, rdi ; lea rdi, [rip + 0x2928c] ; push rbx ; sub rsp, 0xe8 ; mov qword ptr [rbp - 0x100], rsi ; mov qword ptr [rbp - 0xf8], rcx ; mov rsi, rcx ; mov qword ptr [rbp - 0x108], rdx ; mov ecx, 5
read: r12 r13 r14 r15 rbp rbx rcx rdi rdx rsi rsp 
write: ecx r12 rbp rdi rflags rsi rsp 
--------------------------------------------------------------------------------
0010e690: CLP; lea rdx, [rip + 0x25a25] ; sub rsp, 8 ; xor eax, eax ; nop dword ptr [rax] ; cmp dword ptr [rdx + rax*8], edi ; je 0x10e6dc
read: eax edi rflags rsp 
write: eax rdx rflags rsp 
--------------------------------------------------------------------------------
0010e710: CLP; push r13 ; push r12 ; push rbp ; push rbx ; mov rbx, rsi ; sub rsp, 0x438 ; mov rax, qword ptr [rdi + 8] ; lea rsi, [rsp + 0x10] ; call qword ptr [rax + 0x10]
read: r12 r13 rbp rbx rsi rsp 
write: rax rbx rflags rsi rsp 
--------------------------------------------------------------------------------
0010e990: CLP; sub rsp, 8 ; call 0x10e70c
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0010e9c0: CLP; sub rsp, 8 ; call 0x10e68c
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0010e9f0: CLP; push r12 ; mov r12, rdi ; push rbp ; push rbx ; sub rsp, 0x410 ; call 0x1114ac
read: r12 rbp rbx rdi rip rsp 
write: r12 rflags rsp 
--------------------------------------------------------------------------------
0010eaf0: CLP; sub rsp, 8 ; call 0x10e9ec
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0010eb20: CLP; mov rax, qword ptr [rdi + 0x10] ; mov rdx, qword ptr [rax + 0x30] ; mov qword ptr [rsi], rdx ; mov rdx, qword ptr [rax + 0x38] ; mov qword ptr [rsi + 8], rdx ; mov rax, qword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
read: rax rdx 
write: rax rdx 
--------------------------------------------------------------------------------
0010eb40: CLP; sub rsp, 8 ; mov rdi, qword ptr [rdi + 0x10] ; mov rcx, rsi ; xor eax, eax ; mov rsi, rdx ; mov dword ptr [rdi + 0x68], 2 ; add rdi, 0x68 ; call rcx
read: eax rcx rdi rdx rsi rsp 
write: eax rcx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
0010eb70: CLP; ret
read: 
write: 
--------------------------------------------------------------------------------
0010eb80: CLP; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 8 ; mov rbx, qword ptr [rdi + 0x10] ; mov eax, dword ptr [rbx + 4] ; test eax, eax ; jne 0x10ebcc
read: eax rbp rbx rdi rflags rsp 
write: eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010ebe0: CLP; cmp esi, 0xf ; mov rcx, qword ptr [rdi + 0x10] ; ja 0x10ed34
read: esi rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
0010ed40: CLP; push r15 ; push r14 ; push r13 ; mov r13, rdi ; push r12 ; push rbp ; push rbx ; sub rsp, 0xb8 ; mov rbx, qword ptr [rdi + 0x10] ; mov qword ptr [rsp + 0x28], rcx ; mov qword ptr [rsp + 0x48], rsi ; mov qword ptr [rsp + 0x20], rdx ; mov qword ptr [rsp + 0x18], r8 ; mov ecx, dword ptr [rbx + 0x18] ; mov qword ptr [rsp + 0x40], r9
read: r12 r13 r14 r15 r8 r9 rbp rbx rcx rdi rdx rsi rsp 
write: ecx r13 rbx rflags rsp 
--------------------------------------------------------------------------------
0010f060: CLP; push r13 ; mov r13d, edx ; push r12 ; mov r12, rdi ; push rbp ; mov rbp, rsi ; push rbx ; mov ebx, edx ; sub rsp, 8 ; test edx, edx ; jg 0x10f087
read: edx r12 r13 rbp rbx rdi rflags rsi rsp 
write: ebx r12 r13d rbp rflags rsp 
--------------------------------------------------------------------------------
0010f0e0: CLP; push r14 ; xor eax, eax ; push r13 ; push r12 ; mov r12, rsi ; push rbp ; mov ebp, edx ; push rbx ; mov rbx, rdi ; sub rsp, 0x10 ; test edx, edx ; mov rsi, qword ptr [rdi + 8] ; mov rdi, qword ptr [rdi + 0x10] ; je 0x10f164
read: eax edx r12 r13 r14 rbp rbx rdi rflags rsi rsp 
write: eax ebp r12 rbx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
0010f200: CLP; push r15 ; mov r15, rdi ; mov edi, 0x18 ; push r14 ; push r13 ; mov r13, rsi ; push r12 ; mov r12, rdx ; push rbp ; mov rbp, rcx ; push rbx ; sub rsp, 0x78 ; mov dword ptr [rsp + 8], r8d ; mov dword ptr [rsp + 0xc], r9d ; call 0x1f3cc
read: r12 r13 r14 r15 r8d r9d rbp rbx rcx rdi rdx rip rsi rsp 
write: edi r12 r13 r15 rbp rflags rsp 
--------------------------------------------------------------------------------
0010f4e0: CLP; mov rax, qword ptr [rdi + 0x10] ; mov rdx, qword ptr [rax + 0x40] ; mov qword ptr [rsi], rdx ; mov rdx, qword ptr [rax + 0x48] ; mov qword ptr [rsi + 8], rdx ; mov rax, qword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
read: rax rdx 
write: rax rdx 
--------------------------------------------------------------------------------
0010f500: CLP; sub rsp, 8 ; mov rdi, qword ptr [rdi + 0x10] ; mov rcx, rsi ; xor eax, eax ; mov rsi, rdx ; mov dword ptr [rdi + 0x58], 2 ; add rdi, 0x58 ; call rcx
read: eax rcx rdi rdx rsi rsp 
write: eax rcx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
0010f530: CLP; ret
read: 
write: 
--------------------------------------------------------------------------------
0010f540: CLP; cmp esi, 0xf ; mov rdi, qword ptr [rdi + 0x10] ; ja 0x10f70c
read: esi rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
0010f720: CLP; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 8 ; mov rbx, qword ptr [rdi + 0x10] ; mov eax, dword ptr [rbx + 4] ; test eax, eax ; jne 0x10f76c
read: eax rbp rbx rdi rflags rsp 
write: eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010f780: CLP; push rbp ; mov rbp, rsp ; push r15 ; push r14 ; mov r14, rdi ; push r13 ; push r12 ; push rbx ; sub rsp, 0x1b8 ; mov r15, qword ptr [r14 + 0x10] ; mov qword ptr [rbp - 0x188], rcx ; mov qword ptr [rbp - 0x168], rdx ; movabs rdx, 0x20c49ba5e353f7cf ; mov qword ptr [rbp - 0x158], rsi ; mov qword ptr [rbp - 0x1a0], r8
read: r12 r13 r14 r15 r8 rbp rbx rcx rdi rdx rsi rsp 
write: r14 r15 rbp rdx rflags rsp 
--------------------------------------------------------------------------------
0010ff50: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; mov rbp, rdi ; mov edi, 0x18 ; push rbx ; sub rsp, 0xa8 ; mov qword ptr [rsp + 8], rsi ; mov qword ptr [rsp + 0x10], rdx ; mov qword ptr [rsp + 0x18], rcx ; mov qword ptr [rsp + 0x20], r8 ; mov qword ptr [rsp + 0x28], r9 ; call 0x1f3cc
read: r12 r13 r14 r15 r8 r9 rbp rbx rcx rdi rdx rip rsi rsp 
write: edi rbp rflags rsp 
--------------------------------------------------------------------------------
00110260: CLP; sub rsp, 0x28 ; mov eax, dword ptr [rsp + 0x38] ; mov dword ptr [rsp + 0x10], 0 ; mov dword ptr [rsp + 8], eax ; mov eax, dword ptr [rsp + 0x30] ; mov dword ptr [rsp], eax ; call 0x10ff4c
read: eax rip rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
00110290: CLP; sub rsp, 0x28 ; mov dword ptr [rsp + 0x10], 0 ; mov dword ptr [rsp + 8], 0x2260 ; mov dword ptr [rsp], 0x2260 ; call 0x10ff4c
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
001102c0: CLP; push rbx ; mov rbx, rdi ; sub rsp, 0x10 ; lea rdi, [rsp + 8] ; call 0xffa3c
read: rbx rdi rip rsp 
write: rbx rdi rflags rsp 
--------------------------------------------------------------------------------
00110370: CLP; push rbp ; push rbx ; sub rsp, 0xa8 ; mov dword ptr [rsp + 0xc], edi ; call 0x1113bc
read: edi rbp rbx rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
001105e0: CLP; push r14 ; xor eax, eax ; mov r14, r8 ; push r13 ; mov r13, rdx ; push r12 ; mov r12, rcx ; push rbp ; mov rbp, rsi ; mov esi, 1 ; push rbx ; mov rbx, rdi ; sub rsp, 0x10 ; cmp dword ptr [rip + 0x25e167], 0 ; je 0x110617
read: eax r12 r13 r14 r8 rbp rbx rcx rdi rdx rflags rsi rsp 
write: eax esi r12 r13 r14 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00110700: CLP; sub rsp, 0x18 ; lea rcx, [rip - 0x595f] ; lea rsi, [rip - 0x5946] ; lea r8, [rsp + 0xc] ; mov rdx, rdi ; mov edi, 1 ; call 0x1105dc
read: rdi rip rsp 
write: edi r8 rcx rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00110750: CLP; sub rsp, 0x78 ; xor eax, eax ; mov ecx, 0xe ; mov rdi, rsp ; lea rsi, [rip + 0x31a7] ; xor edx, edx ; rep stosq qword ptr [rdi], rax ; lea rcx, [rip - 0x56e5] ; mov r8, rsp ; mov edi, 9 ; call 0x1105dc
read: eax edx rax rcx rdi rflags rip rsp 
write: eax ecx edi edx r8 rcx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
001107b0: CLP; push rbx ; lea rcx, [rip - 0x58dc] ; mov rbx, rsi ; sub rsp, 0x20 ; mov rax, qword ptr [rsi] ; lea rsi, [rip - 0x599d] ; lea rdx, [rsp + 0x10] ; mov qword ptr [rsp + 0x10], rdi ; mov r8, rsp ; mov edi, 2 ; mov qword ptr [rsp + 0x18], rax ; call 0x1105dc
read: rax rbx rdi rip rsi rsp 
write: edi r8 rax rbx rcx rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00110820: CLP; push rbx ; lea rcx, [rip - 0x594c] ; mov rbx, rsi ; sub rsp, 0x20 ; mov rax, qword ptr [rsi] ; lea rsi, [rip - 0x5a0d] ; lea rdx, [rsp + 0x10] ; mov qword ptr [rsp + 0x10], rdi ; mov r8, rsp ; mov edi, 3 ; mov qword ptr [rsp + 0x18], rax ; call 0x1105dc
read: rax rbx rdi rip rsi rsp 
write: edi r8 rax rbx rcx rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00110890: CLP; push rbp ; push rbx ; mov rbx, rdx ; sub rsp, 0x38 ; mov rax, qword ptr [rsi] ; mov rdx, qword ptr [rsi + 8] ; mov qword ptr [rsp + 0x10], rdi ; mov qword ptr [rsp + 0x18], rax ; mov rax, qword ptr [rbx] ; mov qword ptr [rsp + 0x20], rdx ; mov qword ptr [rsp + 0x28], rax ; mov rax, qword ptr [rip + 0x258506] ; mov rbp, qword ptr [rax] ; test rbp, rbp ; je 0x11090c
read: rax rbp rbx rdi rdx rflags rsp 
write: rax rbp rbx rdx rflags rsp 
--------------------------------------------------------------------------------
00110940: CLP; push rbp ; push rbx ; mov rbx, rdx ; sub rsp, 0x38 ; mov rax, qword ptr [rsi] ; mov rdx, qword ptr [rsi + 8] ; mov qword ptr [rsp + 0x10], rdi ; mov qword ptr [rsp + 0x18], rax ; mov rax, qword ptr [rbx] ; mov qword ptr [rsp + 0x20], rdx ; mov qword ptr [rsp + 0x28], rax ; mov rax, qword ptr [rip + 0x25859e] ; mov rbp, qword ptr [rax] ; test rbp, rbp ; je 0x1109bc
read: rax rbp rbx rdi rdx rflags rsp 
write: rax rbp rbx rdx rflags rsp 
--------------------------------------------------------------------------------
001109f0: CLP; push rbp ; mov rbp, rdi ; xor r11d, r11d ; mov r10d, 2 ; mov edx, 1 ; mov esi, 0x186bd ; push rbx ; sub rsp, 0x38 ; mov rcx, qword ptr [rip + 0x2cb29] ; mov r8, qword ptr [rip + 0x2cb2a] ; lea rdi, [rsp + 0x20] ; lea r9, [rsp + 0x1c] ; mov dword ptr [rsp + 8], 0x190 ; mov dword ptr [rsp], 0x190 ; mov word ptr [rsp + 0x20], r10w
read: r10w r11d rbp rbx rdi rsp 
write: edx esi r10d r11d r8 r9 rbp rcx rdi rflags rsp 
--------------------------------------------------------------------------------
00110af0: CLP; sub rsp, 0x18 ; lea rcx, [rip - 0x5d4f] ; lea rsi, [rip - 0x5ae6] ; lea r8, [rsp + 0xc] ; mov rdx, rdi ; mov edi, 8 ; call 0x1105dc
read: rdi rip rsp 
write: edi r8 rcx rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00110b40: CLP; push rbx ; lea rcx, [rip - 0x5c6c] ; mov rbx, rsi ; lea rsi, [rip - 0x5d86] ; mov rdx, rdi ; mov edi, 0xa ; sub rsp, 0x10 ; mov r8, rsp ; call 0x1105dc
read: rbx rdi rip rsi rsp 
write: edi r8 rbx rcx rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00110ba0: CLP; push rbx ; call 0x1113bc
read: rbx rip rsp 
write: rsp 
--------------------------------------------------------------------------------
00110c00: CLP; push r12 ; mov r12d, esi ; mov rsi, rdx ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 0x100 ; test rdx, rdx ; mov rbx, rsp ; je 0x110ce4
read: esi r12 rbp rbx rdi rdx rflags rsp 
write: r12d rbp rbx rflags rsi rsp 
--------------------------------------------------------------------------------
00110d10: CLP; push r14 ; push r13 ; mov r13, rdx ; push r12 ; mov r12, rdi ; push rbp ; push rbx ; sub rsp, 0xa0 ; test rsi, rsi ; mov byte ptr [rdi], 0 ; mov rbp, rsp ; je 0x110ef4
read: r12 r13 r14 rbp rbx rdi rdx rflags rsi rsp 
write: r12 r13 rbp rflags rsp 
--------------------------------------------------------------------------------
00110f30: CLP; push rbx ; mov rbx, rdi ; call 0xb3dcc
read: rbx rdi rip rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
00110f80: CLP; push r15 ; mov r15, r8 ; push r14 ; mov r14, rcx ; push r13 ; mov r13, rdx ; push r12 ; mov r12, rsi ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 0x28 ; mov rdx, qword ptr [rip + 0x25d018] ; test rdx, rdx ; je 0x11103c
read: r12 r13 r14 r15 r8 rbp rbx rcx rdi rdx rflags rsi rsp 
write: r12 r13 r14 r15 rbp rdx rflags rsp 
--------------------------------------------------------------------------------
001110a0: CLP; push r12 ; mov r12, rsi ; mov esi, 0x2e ; push rbp ; push rbx ; movsxd rbx, edx ; call 0x83a5c
read: edx r12 rbp rbx rip rsi rsp 
write: esi r12 rbx rsp 
--------------------------------------------------------------------------------
00111120: CLP; push rbp ; mov edx, 6 ; mov rbp, rdi ; mov esi, 1 ; mov edi, 2 ; push rbx ; sub rsp, 0x18 ; call 0xe483c
read: rbp rbx rdi rip rsp 
write: edi edx esi rbp rflags rsp 
--------------------------------------------------------------------------------
001111c0: CLP; push r15 ; mov r15, rsi ; xor esi, esi ; push r14 ; mov r14, rdx ; push r13 ; push r12 ; push rbp ; mov ebp, ecx ; push rbx ; mov rbx, rdi ; mov edi, 0x6f00 ; sub rsp, 0x58 ; cmp ecx, 6 ; mov word ptr [rbx + 2], di
read: di ecx esi r12 r13 r14 r15 rbp rbx rdi rdx rsi rsp 
write: ebp edi esi r14 r15 rbx rflags rsp 
--------------------------------------------------------------------------------
00111370: CLP; sub rsp, 8 ; mov r9d, 0x3c ; mov r8d, 5 ; call 0x1111bc
read: rip rsp 
write: r8d r9d rflags rsp 
--------------------------------------------------------------------------------
001113a0: CLP; mov rax, qword ptr [rip + 0x257bd5] ; lea rdx, [rip + 0x25cc4e] ; mov qword ptr fs:[rax], rdx ; ret
read: rdx 
write: rax rdx 
--------------------------------------------------------------------------------
001113c0: CLP; push rbx ; mov rbx, qword ptr [rip + 0x257bb4] ; mov rax, qword ptr fs:[rbx] ; test rax, rax ; je 0x1113dc
read: rax rbx rflags rsp 
write: rax rbx rflags rsp 
--------------------------------------------------------------------------------
00111470: CLP; sub rsp, 8 ; call 0x1113bc
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
001114b0: CLP; sub rsp, 8 ; call 0x1113bc
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
001114f0: CLP; sub rsp, 8 ; call 0x1113bc
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00111530: CLP; sub rsp, 8 ; call 0x1113bc
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00111570: CLP; push r12 ; mov r12, rdx ; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; call 0x1113bc
read: r12 rbp rbx rdi rdx rip rsi rsp 
write: r12 rbp rbx rsp 
--------------------------------------------------------------------------------
001115d0: CLP; push r13 ; push r12 ; mov r12, rdi ; push rbp ; push rbx ; sub rsp, 8 ; mov ebp, dword ptr [rdi] ; call 0x1113bc
read: r12 r13 rbp rbx rdi rip rsp 
write: ebp r12 rflags rsp 
--------------------------------------------------------------------------------
00111740: CLP; push r13 ; push r12 ; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov ebp, dword ptr [rdi] ; call 0x10717c
read: r12 r13 rbp rbx rdi rip rsp 
write: ebp rbx rflags rsp 
--------------------------------------------------------------------------------
00111820: CLP; push r15 ; mov r15, r8 ; push r14 ; mov r14, rdi ; push r13 ; mov r13, rcx ; push r12 ; mov r12, rdx ; push rbp ; mov rbp, rsi ; mov rsi, r12 ; mov rdi, rbp ; push rbx ; sub rsp, 0x18 ; lea rdx, [rsp + 8]
read: r12 r13 r14 r15 r8 rbp rbx rcx rdi rdx rsi rsp 
write: r12 r13 r14 r15 rbp rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00111900: CLP; push r12 ; mov r12, rsi ; push rbp ; mov rbp, rdi ; sub rsp, 0x28 ; lea rdx, [rsp + 0x10] ; call 0x11156c
read: r12 rbp rdi rip rsi rsp 
write: r12 rbp rdx rflags rsp 
--------------------------------------------------------------------------------
001119a0: CLP; sub rsp, 0x68 ; mov rax, qword ptr [rdi + 0x28] ; mov qword ptr [rsp + 0x40], rsi ; mov dword ptr [rsp + 8], 1 ; mov rsi, rsp ; mov dword ptr [rsp + 0x10], 0 ; mov dword ptr [rsp + 0x30], 0 ; mov qword ptr [rsp + 0x18], rax ; mov rax, qword ptr [rdi + 0x30] ; mov qword ptr [rsp + 0x38], rdx ; mov qword ptr [rsp + 0x20], rax ; mov rax, qword ptr [rdi + 0x38] ; mov qword ptr [rsp + 0x28], rax ; mov rax, qword ptr [rdi + 8] ; call qword ptr [rax + 0x18]
read: rax rdx rsi rsp 
write: rax rflags rsi rsp 
--------------------------------------------------------------------------------
00111a00: CLP; sub rsp, 0x68 ; mov rax, qword ptr [rdi + 0x28] ; mov dword ptr [rsp + 8], 1 ; mov dword ptr [rsp + 0x10], 0 ; mov rsi, rsp ; mov dword ptr [rsp + 0x30], 3 ; mov qword ptr [rsp + 0x18], rax ; mov rax, qword ptr [rdi + 0x30] ; mov qword ptr [rsp + 0x20], rax ; mov rax, qword ptr [rdi + 0x38] ; mov qword ptr [rsp + 0x28], rax ; mov rax, qword ptr [rdi + 8] ; call qword ptr [rax + 0x18]
read: rax rsp 
write: rax rflags rsi rsp 
--------------------------------------------------------------------------------
00111a50: CLP; sub rsp, 0x68 ; mov rax, qword ptr [rdi + 0x28] ; mov dword ptr [rsp + 8], 1 ; mov dword ptr [rsp + 0x10], 0 ; mov rsi, rsp ; mov dword ptr [rsp + 0x30], 4 ; mov qword ptr [rsp + 0x18], rax ; mov rax, qword ptr [rdi + 0x30] ; mov qword ptr [rsp + 0x20], rax ; mov rax, qword ptr [rdi + 0x38] ; mov qword ptr [rsp + 0x28], rax ; mov rax, qword ptr [rdi + 8] ; call qword ptr [rax + 0x18]
read: rax rsp 
write: rax rflags rsi rsp 
--------------------------------------------------------------------------------
00111aa0: CLP; sub rsp, 0x68 ; mov rax, qword ptr [rdi + 0x28] ; mov dword ptr [rsp + 8], 1 ; mov dword ptr [rsp + 0x10], 0 ; mov rsi, rsp ; mov dword ptr [rsp + 0x30], 5 ; mov qword ptr [rsp + 0x18], rax ; mov rax, qword ptr [rdi + 0x30] ; mov qword ptr [rsp + 0x20], rax ; mov rax, qword ptr [rdi + 0x38] ; mov qword ptr [rsp + 0x28], rax ; mov rax, qword ptr [rdi + 8] ; call qword ptr [rax + 0x18]
read: rax rsp 
write: rax rflags rsi rsp 
--------------------------------------------------------------------------------
00111af0: CLP; sub rsp, 0x68 ; mov rax, qword ptr [rdi + 8] ; mov dword ptr [rsp + 0x20], esi ; mov dword ptr [rsp + 8], 1 ; mov rsi, rsp ; mov dword ptr [rsp + 0x10], 1 ; mov dword ptr [rsp + 0x18], 1 ; call qword ptr [rax + 0x18]
read: esi rsp 
write: rax rflags rsi rsp 
--------------------------------------------------------------------------------
00111b30: CLP; sub rsp, 0x68 ; mov rax, qword ptr [rdi + 8] ; mov dword ptr [rsp + 8], 1 ; mov dword ptr [rsp + 0x10], 1 ; mov rsi, rsp ; mov dword ptr [rsp + 0x18], 1 ; mov dword ptr [rsp + 0x20], 5 ; call qword ptr [rax + 0x18]
read: rsp 
write: rax rflags rsi rsp 
--------------------------------------------------------------------------------
00111b70: CLP; sub rsp, 0x68 ; mov rax, qword ptr [rdi + 0x28] ; mov dword ptr [rsp + 8], 1 ; mov dword ptr [rsp + 0x10], 0 ; mov rsi, rsp ; mov dword ptr [rsp + 0x30], 1 ; mov qword ptr [rsp + 0x18], rax ; mov rax, qword ptr [rdi + 0x30] ; mov qword ptr [rsp + 0x20], rax ; mov rax, qword ptr [rdi + 0x38] ; mov qword ptr [rsp + 0x28], rax ; mov rax, qword ptr [rdi + 8] ; call qword ptr [rax + 0x18]
read: rax rsp 
write: rax rflags rsi rsp 
--------------------------------------------------------------------------------
00111bc0: CLP; sub rsp, 0x68 ; mov rax, qword ptr [rdi + 0x28] ; mov qword ptr [rsp + 0x38], rsi ; mov dword ptr [rsp + 8], 1 ; mov rsi, rsp ; mov dword ptr [rsp + 0x10], 0 ; mov dword ptr [rsp + 0x30], 2 ; mov qword ptr [rsp + 0x18], rax ; mov rax, qword ptr [rdi + 0x30] ; mov qword ptr [rsp + 0x40], rdx ; mov qword ptr [rsp + 0x20], rax ; mov rax, qword ptr [rdi + 0x38] ; mov qword ptr [rsp + 0x28], rax ; mov rax, qword ptr [rdi + 8] ; call qword ptr [rax + 0x18]
read: rax rdx rsi rsp 
write: rax rflags rsi rsp 
--------------------------------------------------------------------------------
00111c20: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; movsxd rbx, edi ; sub rsp, 0x5b8 ; lea rax, [rsp + 0x290] ; lea r12, [rsp + 0x100] ; mov qword ptr [rsp + 0x90], rax ; mov qword ptr [rsp + 0x78], r12 ; call 0x1113bc
read: edi r12 r13 r14 r15 rax rbp rbx rip rsp 
write: r12 rax rbx rflags rsp 
--------------------------------------------------------------------------------
00111e60: CLP; push r15 ; mov r15d, 0x400 ; push r14 ; mov r14, rdi ; push r13 ; mov r13, -1 ; push r12 ; push rbp ; push rbx ; sub rsp, 8 ; call 0x10717c
read: r12 r13 r14 r15 rbp rbx rdi rip rsp 
write: r13 r14 r15d rflags rsp 
--------------------------------------------------------------------------------
00111f00: CLP; sub rsp, 0x88 ; movsxd rsi, edi ; mov ecx, 0x10 ; mov rdi, rsp ; xor eax, eax ; cld ; rep stosq qword ptr [rdi], rax ; mov rdi, rsp ; mov qword ptr [rsp], rsi ; call 0x111e5c
read: eax edi rax rcx rdi rflags rip rsi rsp 
write: eax ecx rcx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00111f40: CLP; push r15 ; push r14 ; push r13 ; mov r13d, esi ; push r12 ; push rbp ; push rbx ; sub rsp, 8 ; test esi, esi ; je 0x111fdc
read: esi r12 r13 r14 r15 rbp rbx rflags rsp 
write: r13d rflags rsp 
--------------------------------------------------------------------------------
00111ff0: CLP; mov rax, qword ptr [rip + 0x256e6d] ; cmp dword ptr fs:[rax], 0x18 ; je 0x112004
read: rflags 
write: rax rflags 
--------------------------------------------------------------------------------
00112030: CLP; push rbx ; call 0x1113bc
read: rbx rip rsp 
write: rsp 
--------------------------------------------------------------------------------
00112070: CLP; mov eax, 2 ; ret
read: 
write: eax 
--------------------------------------------------------------------------------
00112080: CLP; sub rsp, 8 ; mov rdi, qword ptr [rdi + 0x40] ; mov rcx, rsi ; xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; call rcx
read: eax rcx rdi rdx rsi rsp 
write: eax rcx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
001120b0: CLP; sub rsp, 8 ; mov rdi, qword ptr [rdi + 0x40] ; mov rcx, rsi ; xor eax, eax ; mov rsi, rdx ; mov dword ptr [rdi + 0x10], 2 ; add rdi, 0x10 ; call rcx
read: eax rcx rdi rdx rsi rsp 
write: eax rcx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
001120e0: CLP; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov rbp, qword ptr [rdi + 0x40] ; call 0x11173c
read: rbp rbx rdi rip rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00112150: CLP; sub rsp, 8 ; call 0x372fc
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00112160: CLP; push r14 ; mov r14d, edx ; push r13 ; mov r13d, esi ; push r12 ; mov r12d, edi ; mov edi, 0x150 ; push rbp ; push rbx ; call 0x1f3cc
read: edi edx esi r12 r13 r14 rbp rbx rip rsp 
write: edi r12d r13d r14d rsp 
--------------------------------------------------------------------------------
00112280: CLP; push r13 ; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 0x28 ; mov r13, qword ptr [rdi + 0x40] ; lea rbx, [rsp + 0x10] ; lea r12, [rsp + 0xc] ; jmp 0x1122b1
read: r12 r13 rbp rbx rdi rsp 
write: r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00112330: CLP; push rbp ; push rbx ; sub rsp, 8 ; mov rax, qword ptr [rdi + 0x40] ; lea rbx, [rax + 0x10] ; mov dword ptr [rax + 0x10], 0 ; mov rax, qword ptr [rax + 8] ; mov rdi, rbx ; mov qword ptr [rsi], rax ; call 0x10837c
read: rax rbp rbx rip rsp 
write: rax rbx rdi rflags rsp 
--------------------------------------------------------------------------------
00112380: CLP; mov rdi, qword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x11238c
read: eax rflags 
write: eax rdi rflags 
--------------------------------------------------------------------------------
001123b0: CLP; push r12 ; mov r12, rsi ; push rbp ; push rbx ; mov rbx, qword ptr [rdi + 0x40] ; lea rbp, [rbx + 0x10] ; mov dword ptr [rbx + 0x10], 1 ; mov rdi, rbp ; call 0x109bdc
read: r12 rbp rbx rip rsi rsp 
write: r12 rbp rbx rdi rsp 
--------------------------------------------------------------------------------
00112420: CLP; push r13 ; mov r13d, edx ; push r12 ; mov r12, rdi ; push rbp ; mov rbp, rsi ; push rbx ; mov ebx, edx ; sub rsp, 8 ; test edx, edx ; jg 0x112447
read: edx r12 r13 rbp rbx rdi rflags rsi rsp 
write: ebx r12 r13d rbp rflags rsp 
--------------------------------------------------------------------------------
00112490: CLP; push r14 ; mov r14d, edx ; push r13 ; mov r13, rsi ; push r12 ; mov r12, rdi ; push rbp ; push rbx ; sub rsp, 0x10 ; mov ebx, dword ptr [rdi] ; mov rbp, rsp ; mov ecx, 1 ; mov edx, 0x88b8 ; mov esi, 1 ; mov rdi, rbp
read: edx r12 r13 r14 rbp rbx rdi rsi rsp 
write: ebx ecx edx esi r12 r13 r14d rbp rdi rflags rsp 
--------------------------------------------------------------------------------
00112540: CLP; push r14 ; mov r14d, esi ; push r13 ; mov r13d, edx ; push r12 ; xor r12d, r12d ; push rbp ; push rbx ; mov ebx, edi ; sub rsp, 0x20 ; cmp edi, -1 ; mov dword ptr [rsp + 0xc], 0x10 ; je 0x1126ec
read: edi edx esi r12 r12d r13 r14 rbp rbx rflags rsp 
write: ebx r12d r13d r14d rflags rsp 
--------------------------------------------------------------------------------
001127b0: CLP; sub rsp, 8 ; call 0x11215c
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
001127d0: CLP; mov eax, 2 ; ret
read: 
write: eax 
--------------------------------------------------------------------------------
001127e0: CLP; sub rsp, 8 ; mov rdi, qword ptr [rdi + 0x48] ; mov rcx, rsi ; xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; call rcx
read: eax rcx rdi rdx rsi rsp 
write: eax rcx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00112810: CLP; sub rsp, 8 ; mov rdi, qword ptr [rdi + 0x48] ; mov rcx, rsi ; xor eax, eax ; mov rsi, rdx ; mov dword ptr [rdi + 0x10], 2 ; add rdi, 0x10 ; call rcx
read: eax rcx rdi rdx rsi rsp 
write: eax rcx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00112840: CLP; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov rbp, qword ptr [rdi + 0x48] ; call 0x11173c
read: rbp rbx rdi rip rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
001128b0: CLP; push r15 ; lea rax, [rdi + 0x60] ; lea r15, [rdi + 0x50] ; push r14 ; push r13 ; lea r13, [rdi + 0x98] ; push r12 ; mov r12, rdi ; push rbp ; lea rbp, [rdi + 0x14] ; push rbx ; sub rsp, 0x28 ; mov rbx, qword ptr [rdi + 0x48] ; lea r14, [rsp + 0x1c] ; mov qword ptr [rsp + 8], rsi
read: r12 r13 r14 r15 rbp rbx rdi rsi rsp 
write: r12 r13 r14 r15 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00112c10: CLP; push r15 ; push r14 ; push r13 ; mov r13, rsi ; xor esi, esi ; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 0x18 ; mov rbx, qword ptr [rdi + 0x48] ; mov rax, qword ptr [rbx + 0x18] ; lea r12, [rbx + 0x10] ; mov dword ptr [rbx + 0x10], 0 ; mov rdi, r12
read: esi r12 r13 r14 r15 rbp rbx rdi rsi rsp 
write: esi r12 r13 rax rbp rbx rdi rflags rsp 
--------------------------------------------------------------------------------
00112ef0: CLP; push r15 ; push r14 ; mov r14d, edx ; push r13 ; mov r13d, esi ; push r12 ; xor r12d, r12d ; push rbp ; push rbx ; mov ebx, edi ; sub rsp, 0x28 ; cmp edi, -1 ; mov dword ptr [rsp + 8], 0x10 ; je 0x1130fc
read: edi edx esi r12 r12d r13 r14 r15 rbp rbx rflags rsp 
write: ebx r12d r13d r14d rflags rsp 
--------------------------------------------------------------------------------
001131e0: CLP; sub rsp, 8 ; mov edx, 0x2260 ; mov esi, 0x2260 ; call 0x112eec
read: rip rsp 
write: edx esi rflags rsp 
--------------------------------------------------------------------------------
00113200: CLP; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 8 ; mov rbx, qword ptr [rdi + 0x48] ; cmp qword ptr [rbx + 0x1d0], 0 ; je 0x11325c
read: r12 r13 rbp rbx rflags rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
00113340: CLP; xor eax, eax ; test edi, edi ; jg 0x113393
read: eax edi rflags 
write: eax rflags 
--------------------------------------------------------------------------------
001133e0: CLP; xor eax, eax ; test edi, edi ; lea r9, [rip + 0x2a181] ; jle 0x113420
read: eax edi rflags 
write: eax r9 rflags 
--------------------------------------------------------------------------------
00113430: CLP; sub rsp, 8 ; mov qword ptr [rsi], 0 ; movzx edx, byte ptr [rdi] ; xor eax, eax ; test dl, dl ; je 0x113464
read: dl eax rflags rsp 
write: eax edx rflags rsp 
--------------------------------------------------------------------------------
00113480: CLP; push r14 ; mov r14, rsi ; push r13 ; push r12 ; mov r12, rdi ; push rbp ; push rbx ; sub rsp, 0x20 ; call 0x856dc
read: r12 r13 r14 rbp rbx rdi rip rsi rsp 
write: r12 r14 rflags rsp 
--------------------------------------------------------------------------------
00113550: CLP; push r14 ; mov r14, rsi ; push r13 ; push r12 ; mov r12, rdi ; push rbp ; push rbx ; sub rsp, 0x20 ; call 0x856dc
read: r12 r13 r14 rbp rbx rdi rip rsi rsp 
write: r12 r14 rflags rsp 
--------------------------------------------------------------------------------
00113620: CLP; push r15 ; mov r15d, ecx ; push r14 ; mov r14d, r8d ; push r13 ; mov r13, r9 ; push r12 ; mov r12, rdx ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 0x18 ; mov rbx, qword ptr [rsi] ; mov qword ptr [rsp], rsi ; mov rsi, rdx
read: ecx r12 r13 r14 r15 r8d r9 rbp rbx rdi rdx rsi rsp 
write: r12 r13 r14d r15d rbp rbx rflags rsi rsp 
--------------------------------------------------------------------------------
00113790: CLP; push r15 ; mov r15d, ecx ; push r14 ; mov r14, rdi ; push r13 ; mov r13, r8 ; push r12 ; mov r12d, edx ; push rbp ; xor ebp, ebp ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; test edx, edx ; jne 0x1137c7
read: ebp ecx edx r12 r13 r14 r15 r8 rbp rbx rdi rflags rsi rsp 
write: ebp r12d r13 r14 r15d rbx rflags rsp 
--------------------------------------------------------------------------------
00113810: CLP; push rbp ; mov ebp, edx ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; and ebp, 3 ; je 0x113829
read: ebp edx rbp rbx rdi rflags rsp 
write: ebp rbx rflags rsp 
--------------------------------------------------------------------------------
001138e0: CLP; sub rsp, 0x38 ; mov rdx, rdi ; xor eax, eax ; mov dword ptr [rsp], 2 ; mov rdi, rsp ; call rdx
read: eax rdi rdx rsp 
write: eax rdi rdx rflags rsp 
--------------------------------------------------------------------------------
00113910: CLP; mov eax, 1 ; ret
read: 
write: eax 
--------------------------------------------------------------------------------
00113920: CLP; push rbx ; mov rbx, rsi ; sub rsp, 0x10 ; mov eax, dword ptr [rdi] ; cmp eax, 1 ; je 0x113944
read: eax rbx rflags rsi rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
001139a0: CLP; push rbx ; mov rbx, rsi ; sub rsp, 0x10 ; mov eax, dword ptr [rdi] ; cmp eax, 1 ; je 0x1139c4
read: eax rbx rflags rsi rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
00113a20: CLP; sub rsp, 8 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x113a4c
read: eax rflags rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
00113a80: CLP; push rbx ; mov rbx, rsi ; sub rsp, 0x10 ; mov eax, dword ptr [rdi] ; cmp eax, 1 ; je 0x113aa4
read: eax rbx rflags rsi rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
00113b00: CLP; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 0x18 ; mov edx, dword ptr [rdi] ; test edx, edx ; je 0x113b2c
read: edx rbp rbx rdi rflags rsi rsp 
write: edx rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00113bd0: CLP; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 0x18 ; mov edx, dword ptr [rdi] ; test edx, edx ; je 0x113bfc
read: edx rbp rbx rdi rflags rsi rsp 
write: edx rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00113ca0: CLP; sub rsp, 8 ; call 0x113afc
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00113cc0: CLP; sub rsp, 8 ; call 0x113bcc
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00113ce0: CLP; push rbx ; mov rbx, rsi ; sub rsp, 0x10 ; mov eax, dword ptr [rdi] ; cmp eax, 1 ; je 0x113d04
read: eax rbx rflags rsi rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
00113d60: CLP; push rbx ; mov rbx, rsi ; sub rsp, 0x10 ; mov eax, dword ptr [rdi] ; cmp eax, 1 ; je 0x113d84
read: eax rbx rflags rsi rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
00113de0: CLP; push rbx ; mov rbx, rsi ; sub rsp, 0x10 ; movsx eax, byte ptr [rsi] ; lea rsi, [rsp + 0xc] ; mov dword ptr [rsp + 0xc], eax ; call 0x11391c
read: eax rbx rip rsi rsp 
write: eax rbx rflags rsi rsp 
--------------------------------------------------------------------------------
00113e20: CLP; push rbx ; mov rbx, rsi ; sub rsp, 0x10 ; movzx eax, byte ptr [rsi] ; lea rsi, [rsp + 0xc] ; mov dword ptr [rsp + 0xc], eax ; call 0x11399c
read: eax rbx rip rsi rsp 
write: eax rbx rflags rsi rsp 
--------------------------------------------------------------------------------
00113e60: CLP; push rbx ; mov rbx, rsi ; sub rsp, 0x10 ; mov eax, dword ptr [rdi] ; cmp eax, 1 ; je 0x113e84
read: eax rbx rflags rsi rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
00113ef0: CLP; push rbx ; mov rbx, rsi ; sub rsp, 0x10 ; mov eax, dword ptr [rdi] ; cmp eax, 1 ; je 0x113f14
read: eax rbx rflags rsi rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
00113f70: CLP; test edx, edx ; mov eax, 1 ; je 0x113f8a
read: edx rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00113f90: CLP; push r15 ; mov r15d, ecx ; push r14 ; push r13 ; mov r13, rsi ; push r12 ; xor r12d, r12d ; push rbp ; mov rbp, rdx ; push rbx ; mov rbx, rdi ; sub rsp, 0x18 ; mov r14, qword ptr [rsi] ; mov rsi, rdx ; call 0x11399c
read: ecx r12 r12d r13 r14 r15 rbp rbx rdi rdx rip rsi rsp 
write: r12d r13 r14 r15d rbp rbx rflags rsi rsp 
--------------------------------------------------------------------------------
001140c0: CLP; mov rdx, rsi ; lea rsi, [rsi + 8] ; sub rsp, 8 ; mov ecx, 0x400 ; call 0x113f8c
read: rip rsi rsp 
write: ecx rdx rflags rsi rsp 
--------------------------------------------------------------------------------
001140f0: CLP; push r14 ; mov r14, rdi ; push r13 ; mov r13, r8 ; push r12 ; mov r12, rdx ; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rcx ; call 0x113eec
read: r12 r13 r14 r8 rbp rbx rcx rdi rdx rip rsi rsp 
write: r12 r13 r14 rbp rbx rsp 
--------------------------------------------------------------------------------
00114190: CLP; push r14 ; mov r14d, edx ; push r13 ; push r12 ; mov r12, rsi ; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 0x10 ; mov ecx, dword ptr [rdi] ; mov rbp, qword ptr [rsi] ; mov dword ptr [rsp + 0xc], 0 ; test ecx, ecx ; je 0x114234
read: ecx edx r12 r13 r14 rbp rbx rdi rflags rsi rsp 
write: ecx r12 r14d rbp rbx rflags rsp 
--------------------------------------------------------------------------------
001142e0: CLP; sub rsp, 8 ; mov edx, 0xffffffff ; call 0x11418c
read: rip rsp 
write: edx rflags rsp 
--------------------------------------------------------------------------------
00114310: CLP; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 0x18 ; mov eax, dword ptr [rdi] ; cmp eax, 1 ; je 0x11433c
read: eax rbp rbx rdi rflags rsi rsp 
write: eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
001143e0: CLP; sub rsp, 8 ; call 0x11430c
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00114400: CLP; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 0x18 ; mov eax, dword ptr [rdi] ; cmp eax, 1 ; je 0x11442c
read: eax rbp rbx rdi rflags rsi rsp 
write: eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
001144d0: CLP; sub rsp, 8 ; call 0x1143fc
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
001144f0: CLP; sub rsp, 8 ; mov eax, dword ptr [rdi] ; cmp eax, 1 ; je 0x11450c
read: eax rflags rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
00114530: CLP; sub rsp, 8 ; mov eax, dword ptr [rdi] ; cmp eax, 1 ; je 0x11454c
read: eax rflags rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
00114570: CLP; push rbx ; mov rbx, rsi ; sub rsp, 0x10 ; mov eax, dword ptr [rdi] ; cmp eax, 1 ; je 0x114594
read: eax rbx rflags rsi rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
001145f0: CLP; push rbx ; mov rbx, rsi ; sub rsp, 0x10 ; mov eax, dword ptr [rdi] ; cmp eax, 1 ; je 0x114614
read: eax rbx rflags rsi rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
00114670: CLP; push rbx ; mov rbx, rsi ; sub rsp, 0x10 ; mov eax, dword ptr [rdi] ; cmp eax, 1 ; je 0x114694
read: eax rbx rflags rsi rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
001146f0: CLP; push rbx ; mov rbx, rsi ; sub rsp, 0x10 ; mov eax, dword ptr [rdi] ; cmp eax, 1 ; je 0x114714
read: eax rbx rflags rsi rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
00114770: CLP; ret
read: 
write: 
--------------------------------------------------------------------------------
00114780: CLP; mov rax, qword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
read: rax 
write: rax rflags 
--------------------------------------------------------------------------------
00114790: CLP; mov edx, dword ptr [rdi + 0x28] ; mov rcx, qword ptr [rdi + 0x20] ; mov esi, esi ; add rdx, qword ptr [rdi + 0x18] ; xor eax, eax ; add rsi, rcx ; cmp rsi, rdx ; ja 0x1147b6
read: eax esi rcx rdx rflags rsi 
write: eax edx esi rcx rdx rflags rsi 
--------------------------------------------------------------------------------
001147d0: CLP; mov eax, dword ptr [rdi + 0x28] ; cmp eax, esi ; jb 0x1147ec
read: eax esi rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00114800: CLP; mov edx, dword ptr [rdi + 0x28] ; xor eax, eax ; cmp edx, 3 ; jbe 0x114827
read: eax edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
00114830: CLP; mov edx, dword ptr [rdi + 0x28] ; xor eax, eax ; cmp edx, 3 ; jbe 0x114857
read: eax edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
00114860: CLP; mov edx, dword ptr [rdi + 0x28] ; xor eax, eax ; cmp edx, 3 ; jbe 0x114889
read: eax edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
00114890: CLP; mov edx, dword ptr [rdi + 0x28] ; xor eax, eax ; cmp edx, 3 ; jbe 0x1148ba
read: eax edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
001148c0: CLP; push rbp ; xor eax, eax ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov ecx, dword ptr [rdi + 0x28] ; cmp ecx, edx ; jb 0x1148f2
read: eax ecx edx rbp rbx rdi rflags rsp 
write: eax ecx rbx rflags rsp 
--------------------------------------------------------------------------------
00114900: CLP; push rbp ; xor eax, eax ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov ecx, dword ptr [rdi + 0x28] ; cmp ecx, edx ; jb 0x114935
read: eax ecx edx rbp rbx rdi rflags rsp 
write: eax ecx rbx rflags rsp 
--------------------------------------------------------------------------------
00114940: CLP; lea rax, [rip + 0x252095] ; mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 0x20], rsi ; mov qword ptr [rdi + 0x18], rsi ; mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
read: ecx edx rax rsi 
write: rax 
--------------------------------------------------------------------------------
00114960: CLP; push r12 ; mov r12, rsi ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 0x10 ; mov rbx, qword ptr [rsi] ; test rbx, rbx ; je 0x11499c
read: r12 rbp rbx rdi rflags rsi rsp 
write: r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00114a60: CLP; push r13 ; xor eax, eax ; mov r13, rcx ; push r12 ; mov r12d, edx ; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rsi ; sub rsp, 0x18 ; cmp qword ptr [rsi], 0 ; lea rsi, [rsp + 0xc] ; setne al ; mov dword ptr [rsp + 0xc], eax ; call 0x113e5c
read: eax edx r12 r13 rbp rbx rcx rdi rflags rip rsi rsp 
write: al eax r12d r13 rbp rbx rflags rsi rsp 
--------------------------------------------------------------------------------
00114af0: CLP; add dword ptr [rdi + 0x28], 4 ; mov eax, 1 ; ret
read: 
write: eax rflags 
--------------------------------------------------------------------------------
00114b00: CLP; add dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
read: edx 
write: eax rflags 
--------------------------------------------------------------------------------
00114b10: CLP; mov eax, dword ptr [rdi + 0x28] ; ret
read: 
write: eax 
--------------------------------------------------------------------------------
00114b20: CLP; xor eax, eax ; ret
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
00114b30: CLP; xor eax, eax ; ret
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
00114b40: CLP; add dword ptr [rdi + 0x28], 4 ; mov eax, 1 ; ret
read: 
write: eax rflags 
--------------------------------------------------------------------------------
00114b50: CLP; push rbx ; mov rbx, rdi ; mov dword ptr [rdi + 0x28], 0 ; mov qword ptr [rdi + 0x20], 0 ; mov rdi, qword ptr [rdi + 0x18] ; test rdi, rdi ; je 0x114b7d
read: rbx rdi rflags rsp 
write: rbx rdi rflags rsp 
--------------------------------------------------------------------------------
00114b90: CLP; push r12 ; test esi, esi ; push rbp ; mov ebp, esi ; push rbx ; je 0x114bf4
read: esi r12 rbp rbx rflags rsp 
write: ebp rflags rsp 
--------------------------------------------------------------------------------
00114c10: CLP; push rbx ; lea rax, [rip - 0x12c] ; mov rdx, rdi ; add rsp, -0x80 ; mov qword ptr [rsp + 0x38], rax ; lea rax, [rip - 0x12f] ; mov rdi, rsp ; mov dword ptr [rsp], 0 ; mov dword ptr [rsp + 0x28], 0 ; mov qword ptr [rsp + 0x48], rax ; lea rax, [rip - 0xbd] ; mov qword ptr [rsp + 0x18], 0 ; mov qword ptr [rsp + 0x20], 0 ; mov qword ptr [rsp + 0x60], rax ; lea rax, [rip - 0x15b]
read: rax rbx rdi rsp 
write: rax rdi rdx rflags rsp 
--------------------------------------------------------------------------------
00114cf0: CLP; xor eax, eax ; ret
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
00114d00: CLP; sub rsp, 0x18 ; mov eax, dword ptr [rsi] ; mov rcx, qword ptr [rdi + 0x18] ; lea rdi, [rsp + 0xc] ; mov edx, 1 ; mov esi, 4 ; bswap eax ; mov dword ptr [rsp + 0xc], eax ; call 0x6d45c
read: eax rip rsp 
write: eax edx esi rcx rdi rflags rsp 
--------------------------------------------------------------------------------
00114d40: CLP; sub rsp, 0x18 ; mov rax, qword ptr [rsi] ; mov rcx, qword ptr [rdi + 0x18] ; lea rdi, [rsp + 0xc] ; mov edx, 1 ; mov esi, 4 ; bswap eax ; mov dword ptr [rsp + 0xc], eax ; call 0x6d45c
read: eax rip rsp 
write: eax edx esi rax rcx rdi rflags rsp 
--------------------------------------------------------------------------------
00114d80: CLP; push rbx ; mov edx, 1 ; mov rbx, rsi ; mov esi, 4 ; sub rsp, 0x10 ; mov rcx, qword ptr [rdi + 0x18] ; lea rdi, [rsp + 0xc] ; call 0x6ceec
read: rbx rip rsi rsp 
write: edx esi rbx rcx rdi rflags rsp 
--------------------------------------------------------------------------------
00114dd0: CLP; push rbx ; mov edx, 1 ; mov rbx, rsi ; mov esi, 4 ; sub rsp, 0x10 ; mov rcx, qword ptr [rdi + 0x18] ; lea rdi, [rsp + 0xc] ; call 0x6ceec
read: rbx rip rsi rsp 
write: edx esi rbx rcx rdi rflags rsp 
--------------------------------------------------------------------------------
00114e20: CLP; sub rsp, 8 ; mov rdi, qword ptr [rdi + 0x18] ; call 0x6c45c
read: rip rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
00114e40: CLP; sub rsp, 8 ; mov rdi, qword ptr [rdi + 0x18] ; mov esi, esi ; xor edx, edx ; call 0x7487c
read: edx esi rip rsp 
write: edx esi rdi rflags rsp 
--------------------------------------------------------------------------------
00114e70: CLP; sub rsp, 8 ; mov rdi, qword ptr [rdi + 0x18] ; call 0x6d20c
read: rip rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
00114e90: CLP; test edx, edx ; mov eax, 1 ; jne 0x114e9c
read: edx rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00114ed0: CLP; test edx, edx ; mov eax, 1 ; jne 0x114edc
read: edx rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00114f10: CLP; lea rax, [rip + 0x251b25] ; mov dword ptr [rdi], edx ; mov qword ptr [rdi + 0x18], rsi ; mov dword ptr [rdi + 0x28], 0 ; mov qword ptr [rdi + 0x20], 0 ; mov qword ptr [rdi + 8], rax ; ret
read: edx rax rsi 
write: rax 
--------------------------------------------------------------------------------
00114f40: CLP; push rbx ; call 0x1114ec
read: rbx rip rsp 
write: rsp 
--------------------------------------------------------------------------------
00114f80: CLP; push r14 ; push r13 ; push r12 ; xor r12d, r12d ; push rbp ; push rbx ; xor ebx, ebx ; call 0x11152c
read: ebx r12 r12d r13 r14 rbp rbx rip rsp 
write: ebx r12d rflags rsp 
--------------------------------------------------------------------------------
001150f0: CLP; xor eax, eax ; test rsi, rsi ; je 0x11511c
read: eax rflags rsi 
write: eax rflags 
--------------------------------------------------------------------------------
00115230: CLP; push r15 ; mov r15, r8 ; push r14 ; mov r14d, edx ; lea rdx, [rip + 0x258ecb] ; push r13 ; xor r13d, r13d ; push r12 ; mov r12, rcx ; push rbp ; push rbx ; sub rsp, 0x98 ; mov qword ptr [rsp + 8], rsi ; lea rcx, [rsp + 0x5c] ; lea rsi, [rip + 0x22216]
read: edx r12 r13 r13d r14 r15 r8 rbp rbx rcx rsi rsp 
write: r12 r13d r14d r15 rcx rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00115620: CLP; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 0x10 ; test rdi, rdi ; je 0x11567c
read: r12 r13 r14 rbp rbx rdi rflags rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
00115690: CLP; push r14 ; mov edi, edi ; mov r14, r8 ; push r13 ; mov r13, rcx ; xor ecx, ecx ; push r12 ; mov r12, rdx ; mov edx, 0xa ; push rbp ; mov rbp, rsi ; push rbx ; sub rsp, 0x20 ; lea rbx, [rsp + 0x10] ; lea rsi, [rsp + 0x1b]
read: ecx edi r12 r13 r14 r8 rbp rbx rcx rdx rsi rsp 
write: ecx edi edx r12 r13 r14 rbp rbx rflags rsi rsp 
--------------------------------------------------------------------------------
00115700: CLP; push rbp ; mov rbp, rsp ; push r15 ; push r14 ; mov r14, rcx ; lea rcx, [rbp - 0x74] ; push r13 ; xor r13d, r13d ; push r12 ; mov r12, r8 ; push rbx ; sub rsp, 0xb8 ; mov qword ptr [rbp - 0xa0], rsi ; mov dword ptr [rbp - 0x88], edx ; lea rsi, [rip + 0x21153]
read: edx r12 r13 r13d r14 r15 r8 rbp rbx rcx rsi rsp 
write: r12 r13d r14 rbp rcx rflags rsi rsp 
--------------------------------------------------------------------------------
00115de0: CLP; push r14 ; mov r14, r8 ; push r13 ; mov r13, rcx ; push r12 ; mov r12, rdx ; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 0x10 ; call 0x856dc
read: r12 r13 r14 r8 rbp rbx rcx rdi rdx rip rsi rsp 
write: r12 r13 r14 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00115e40: CLP; push r14 ; mov edi, edi ; mov r14, r8 ; push r13 ; mov r13, rcx ; xor ecx, ecx ; push r12 ; mov r12, rdx ; mov edx, 0xa ; push rbp ; mov rbp, rsi ; push rbx ; sub rsp, 0x20 ; lea rbx, [rsp + 0x10] ; lea rsi, [rsp + 0x1b]
read: ecx edi r12 r13 r14 r8 rbp rbx rcx rdx rsi rsp 
write: ecx edi edx r12 r13 r14 rbp rbx rflags rsi rsp 
--------------------------------------------------------------------------------
00115eb0: CLP; push rbp ; mov rbp, rsp ; push r15 ; mov r15, rcx ; push r14 ; push r13 ; push r12 ; push rbx ; sub rsp, 0xe8 ; mov eax, dword ptr [rip + 0x258ab3] ; mov qword ptr [rbp - 0xb0], rdi ; mov qword ptr [rbp - 0xb8], rsi ; mov dword ptr [rbp - 0xa4], edx ; mov qword ptr [rbp - 0xd8], r8 ; mov qword ptr [rbp - 0xe8], r9
read: edx r12 r13 r14 r15 r8 r9 rbp rbx rcx rdi rsi rsp 
write: eax r15 rbp rflags rsp 
--------------------------------------------------------------------------------
001166f0: CLP; push r15 ; mov r15, r8 ; push r14 ; mov r14, rcx ; push r13 ; mov r13, rdx ; push r12 ; mov r12, rsi ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 0x28 ; mov rax, qword ptr [rip + 0x2528d8] ; mov qword ptr [rsp + 0x18], r9 ; mov rax, qword ptr fs:[rax]
read: r12 r13 r14 r15 r8 r9 rbp rbx rcx rdi rdx rsi rsp 
write: r12 r13 r14 r15 rax rbp rflags rsp 
--------------------------------------------------------------------------------
00116780: CLP; push r15 ; mov r15, r9 ; push r14 ; mov r14, r8 ; push r13 ; mov r13, rcx ; push r12 ; mov r12, rdx ; push rbp ; mov rbp, rdi ; push rbx ; xor ebx, ebx ; sub rsp, 0x18 ; cmp esi, 0xa ; sete bl
read: ebx esi r12 r13 r14 r15 r8 r9 rbp rbx rcx rdi rdx rflags rsp 
write: bl ebx r12 r13 r14 r15 rbp rflags rsp 
--------------------------------------------------------------------------------
001167f0: CLP; sub rsp, 0x18 ; cmp esi, 4 ; jne 0x11682c
read: esi rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00116850: CLP; mov edx, dword ptr [rip + 0x258126] ; test edx, edx ; je 0x116864
read: edx rflags 
write: edx rflags 
--------------------------------------------------------------------------------
00116930: CLP; push r15 ; push r14 ; push r13 ; mov r13, rsi ; push r12 ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 0x68 ; mov eax, dword ptr [rip + 0x258036] ; mov qword ptr [rsp], rdx ; test eax, eax ; jns 0x116d55
read: eax r12 r13 r14 r15 rbp rbx rdi rdx rflags rsi rsp 
write: eax r13 rbp rflags rsp 
--------------------------------------------------------------------------------
00116db0: CLP; push r15 ; push r14 ; mov r14, rdx ; push r13 ; push r12 ; mov r12d, esi ; push rbp ; mov rbp, rcx ; push rbx ; xor ebx, ebx ; sub rsp, 0x58 ; mov qword ptr [rsp + 0x10], rdi ; call 0x856dc
read: ebx esi r12 r13 r14 r15 rbp rbx rcx rdi rdx rip rsp 
write: ebx r12d r14 rbp rflags rsp 
--------------------------------------------------------------------------------
00117140: CLP; push rbp ; mov rbp, rsp ; push r15 ; mov r15, r8 ; push r14 ; push r13 ; mov r13, rdx ; lea rdx, [rip + 0x257845] ; push r12 ; mov r12, rsi ; lea rsi, [rip + 0x2031f] ; push rbx ; sub rsp, 0xc8 ; mov dword ptr [rbp - 0x9c], ecx ; lea rcx, [rbp - 0x74]
read: ecx r12 r13 r14 r15 r8 rbp rbx rdx rsi rsp 
write: r12 r13 r15 rbp rcx rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00117a20: CLP; push r15 ; mov r15, r9 ; push r14 ; mov r14, r8 ; push r13 ; mov r13, rcx ; push r12 ; mov r12, rdx ; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 0x18 ; call 0x856dc
read: r12 r13 r14 r15 r8 r9 rbp rbx rcx rdi rdx rip rsi rsp 
write: r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00117a90: CLP; push r15 ; movsxd rdi, edi ; mov r15, r9 ; push r14 ; mov r14, r8 ; push r13 ; mov r13, rcx ; xor ecx, ecx ; push r12 ; mov r12, rdx ; mov edx, 0xa ; push rbp ; mov rbp, rsi ; push rbx ; sub rsp, 0x28
read: ecx edi r12 r13 r14 r15 r8 r9 rbp rbx rcx rdx rsi rsp 
write: ecx edx r12 r13 r14 r15 rbp rdi rflags rsp 
--------------------------------------------------------------------------------
00117b10: CLP; cmp rdi, -1 ; je 0x117b27
read: rdi rflags 
write: rflags 
--------------------------------------------------------------------------------
00117b50: CLP; push r15 ; push r14 ; push r13 ; push r12 ; mov r12, rdi ; push rbp ; mov rbp, rsi ; push rbx ; xor ebx, ebx ; sub rsp, 0x58 ; lea r14, [rsp + 0x3c] ; call 0x856dc
read: ebx r12 r13 r14 r15 rbp rbx rdi rip rsi rsp 
write: ebx r12 r14 rbp rflags rsp 
--------------------------------------------------------------------------------
00117de0: CLP; push rbp ; mov rbp, rsp ; push r15 ; mov r15, rdi ; push r14 ; mov r14, rcx ; push r13 ; push r12 ; mov r12, rdx ; push rbx ; mov rbx, rsi ; sub rsp, 0x48 ; call 0x856dc
read: r12 r13 r14 r15 rbp rbx rcx rdi rdx rip rsi rsp 
write: r12 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00118180: CLP; push r15 ; mov ecx, 0x19 ; mov edx, esi ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; mov rbx, rsi ; mov esi, 1 ; sub rsp, 0x28 ; mov dword ptr [rsp], edi ; mov rdi, rsp ; mov word ptr [rsp + 4], cx ; call 0xdae7c
read: cx edi esi r12 r13 r14 r15 rbp rbx rip rsi rsp 
write: ecx edx esi rbx rdi rflags rsp 
--------------------------------------------------------------------------------
00118290: CLP; push rbp ; mov rbp, rsp ; push r15 ; mov r15d, edi ; mov edi, 1 ; push r14 ; mov r14, rdx ; xor edx, edx ; push r13 ; push r12 ; push rbx ; sub rsp, 0xb8 ; mov qword ptr [rbp - 0xe0], rsi ; mov esi, 0x80801 ; call 0xe483c
read: edi edx r12 r13 r14 r15 rbp rbx rdx rip rsi rsp 
write: edi edx esi r14 r15d rbp rflags rsp 
--------------------------------------------------------------------------------
001184d0: CLP; push r14 ; mov r14, rdx ; push r13 ; mov r13d, edi ; push r12 ; mov r12, rsi ; push rbp ; mov rbp, rdx ; push rbx ; mov rdx, rbp ; mov rsi, r12 ; mov edi, r13d ; call 0xd6a5c
read: edi r12 r13 r13d r14 rbp rbx rdx rip rsi rsp 
write: edi r12 r13d r14 rbp rdx rsi rsp 
--------------------------------------------------------------------------------
00118570: CLP; push rbp ; mov rbp, rsp ; push r15 ; push r14 ; mov r14d, edi ; push r13 ; mov r13, rsi ; push r12 ; mov r12d, edx ; push rbx ; sub rsp, 0x18 ; jmp 0x11859f
read: edi edx r12 r13 r14 r15 rbp rbx rsi rsp 
write: r12d r13 r14d rbp rflags rsp 
--------------------------------------------------------------------------------
00118710: CLP; push rbx ; mov rbx, rdi ; mov edi, dword ptr [rdi + 0x18] ; test edi, edi ; jne 0x118739
read: edi rbx rdi rflags rsp 
write: edi rbx rflags rsp 
--------------------------------------------------------------------------------
00118760: CLP; push rbp ; mov rbp, rsp ; push r15 ; mov r15, rdx ; push r14 ; push r13 ; mov r13, rsi ; push r12 ; push rbx ; mov ebx, edi ; mov rdi, rsi ; sub rsp, 0x158 ; mov qword ptr [rbp - 0x170], rsi ; call 0x856dc
read: edi r12 r13 r14 r15 rbp rbx rdx rip rsi rsp 
write: ebx r13 r15 rbp rdi rflags rsp 
--------------------------------------------------------------------------------
00118b50: CLP; push r14 ; push r13 ; push r12 ; push rbp ; mov rbp, rdx ; push rbx ; sub rsp, 0x10 ; mov rax, qword ptr [rdx + 8] ; cmp rax, -1 ; je 0x118c0c
read: r12 r13 r14 rax rbp rbx rdx rflags rsp 
write: rax rbp rflags rsp 
--------------------------------------------------------------------------------
00118c70: CLP; push r15 ; mov r15d, edi ; mov rdi, rsi ; push r14 ; mov r14, r8 ; push r13 ; mov r13, rdx ; push r12 ; push rbp ; mov rbp, rcx ; push rbx ; sub rsp, 0x38 ; mov qword ptr [rsp + 8], rsi ; mov rsi, rdx ; call 0x1150ec
read: edi r12 r13 r14 r15 r8 rbp rbx rcx rdx rip rsi rsp 
write: r13 r14 r15d rbp rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00118e10: CLP; push r14 ; cmp rsi, 0x400 ; push r13 ; mov r13, rcx ; mov ecx, 0xffffffff ; push r12 ; push rbp ; push rbx ; ja 0x118e92
read: r12 r13 r14 rbp rbx rcx rflags rsi rsp 
write: ecx r13 rflags rsp 
--------------------------------------------------------------------------------
00118ec0: CLP; sub rsp, 8 ; mov esi, 1 ; xor eax, eax ; call 0xd6f3c
read: eax rip rsp 
write: eax esi rflags rsp 
--------------------------------------------------------------------------------
00118ee0: CLP; mov rax, qword ptr [rip + 0x24ff7d] ; mov dword ptr fs:[rax], 0x26 ; mov eax, 0xffffffff ; ret
read: 
write: eax rax 
--------------------------------------------------------------------------------
00118f00: CLP; mov r10, rcx ; mov eax, 0xb5 ; syscall ; cmp rax, -0xfff ; jae 0x118f13
read: rax rcx rflags 
write: eax r10 rflags 
--------------------------------------------------------------------------------
00118f30: CLP; mov rax, qword ptr [rip + 0x24ff2d] ; mov dword ptr fs:[rax], 0x26 ; mov eax, 0xffffffff ; ret
read: 
write: eax rax 
--------------------------------------------------------------------------------
00118f50: CLP; mov r10, rcx ; mov eax, 0xb6 ; syscall ; cmp rax, -0xfff ; jae 0x118f63
read: rax rcx rflags 
write: eax r10 rflags 
--------------------------------------------------------------------------------
00118f80: CLP; mov rax, qword ptr [rip + 0x24fedd] ; mov dword ptr fs:[rax], 0x26 ; mov eax, 0xffffffff ; ret
read: 
write: eax rax 
--------------------------------------------------------------------------------
00118fa0: CLP; mov rax, qword ptr [rip + 0x24febd] ; mov dword ptr fs:[rax], 0x26 ; mov eax, 0xffffffff ; ret
read: 
write: eax rax 
--------------------------------------------------------------------------------
00118fc0: CLP; push rbp ; xor edi, edi ; mov edx, 0x200 ; push rbx ; sub rsp, 0x518 ; lea rbx, [rsp + 0x310] ; mov rsi, rbx ; call 0xd7f3c
read: edi rbp rbx rip rsp 
write: edi edx rbx rflags rsi rsp 
--------------------------------------------------------------------------------
001190b0: CLP; lea rdi, [rip + 0x255085] ; sub rsp, 8 ; mov esi, 0x21 ; call 0x1192ac
read: rip rsp 
write: esi rdi rflags rsp 
--------------------------------------------------------------------------------
00119100: CLP; push r14 ; mov edx, 0x200 ; mov r14, rdi ; xor edi, edi ; push r13 ; mov r13, rsi ; push r12 ; push rbp ; push rbx ; sub rsp, 0x510 ; lea r12, [rsp + 0x310] ; mov rsi, r12 ; call 0xd7f3c
read: edi r12 r13 r14 rbp rbx rdi rip rsi rsp 
write: edi edx r12 r13 r14 rflags rsi rsp 
--------------------------------------------------------------------------------
001192b0: CLP; push rbp ; xor eax, eax ; mov rbp, rsp ; push r15 ; push r14 ; push r13 ; push r12 ; push rbx ; sub rsp, 0x78 ; mov qword ptr [rbp - 0x98], rdi ; lea rdi, [rip + 0x1e59a] ; mov qword ptr [rbp - 0x90], rsi ; xor esi, esi ; call 0xd6819
read: eax esi r12 r13 r14 r15 rbp rbx rdi rip rsi rsp 
write: eax esi rbp rdi rflags rsp 
--------------------------------------------------------------------------------
00119540: CLP; push rbp ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; call 0x1192ac
read: rbp rbx rdi rip rsi rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00119580: CLP; mov rax, qword ptr [rip + 0x24f8dd] ; mov dword ptr fs:[rax], 0x26 ; mov eax, 0xffffffff ; ret
read: 
write: eax rax 
--------------------------------------------------------------------------------
001195a0: CLP; sub rsp, 8 ; cmp rsi, rdx ; ja 0x1195b7
read: rdx rflags rsi rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
001195d0: CLP; sub rsp, 0x18 ; mov rdi, qword ptr [rip + 0x2512e1] ; test rdi, rdi ; je 0x1195fc
read: rdi rflags rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
00119630: CLP; sub rsp, 8 ; call qword ptr [rip + 0x24d4a2]
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00119660: CLP; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rsi ; sub rsp, 8 ; call qword ptr [rip + 0x24d46a]
read: rbp rbx rdi rsi rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
001196c0: CLP; push r12 ; mov r12, rsi ; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rdx ; call qword ptr [rip + 0x24d409]
read: r12 rbp rbx rdi rdx rsi rsp 
write: r12 rbp rbx rsp 
--------------------------------------------------------------------------------
00119720: CLP; push r12 ; mov r12, rsi ; push rbp ; mov rbp, rdi ; push rbx ; mov rbx, rdx ; call qword ptr [rip + 0x24d3a9]
read: r12 rbp rbx rdi rdx rsi rsp 
write: r12 rbp rbx rsp 
--------------------------------------------------------------------------------
00119780: CLP; push rbx ; mov rbx, rdi ; call qword ptr [rip + 0x24d352]
read: rbx rdi rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
001197c0: CLP; ret
read: 
write: 
--------------------------------------------------------------------------------
001197d0: CLP; sub rsp, 8 ; mov esi, 1 ; xor eax, eax ; cmp dword ptr [rip + 0x254f8e], 0 ; je 0x1197f0
read: eax rflags rsp 
write: eax esi rflags rsp 
--------------------------------------------------------------------------------
00119870: CLP; mov r9, rsi ; sub rsp, 8 ; mov r8, rdi ; mov esi, 1 ; xor eax, eax ; cmp dword ptr [rip + 0x254ee8], 0 ; je 0x119896
read: eax rdi rflags rsi rsp 
write: eax esi r8 r9 rflags rsp 
--------------------------------------------------------------------------------
00119920: CLP; sub rsp, 8 ; mov rdx, rdi ; mov esi, 1 ; xor eax, eax ; cmp dword ptr [rip + 0x254e3b], 0 ; je 0x119943
read: eax rdi rflags rsp 
write: eax esi rdx rflags rsp 
--------------------------------------------------------------------------------
001199d0: CLP; sub rsp, 8 ; mov esi, 1 ; xor eax, eax ; cmp dword ptr [rip + 0x254d8e], 0 ; je 0x1199f0
read: eax rflags rsp 
write: eax esi rflags rsp 
--------------------------------------------------------------------------------
00119a80: CLP; push rbx ; mov rbx, rdi ; sub rsp, 0x10 ; mov rsi, qword ptr [rip + 0x250e35] ; test rsi, rsi ; je 0x119abc
read: rbx rdi rflags rsi rsp 
write: rbx rflags rsi rsp 
--------------------------------------------------------------------------------
00119af0: CLP; push rbx ; mov rbx, rdi ; sub rsp, 0x10 ; mov rsi, qword ptr [rip + 0x250dcd] ; test rsi, rsi ; je 0x119b2c
read: rbx rdi rflags rsi rsp 
write: rbx rflags rsi rsp 
--------------------------------------------------------------------------------
00119b60: CLP; movzx eax, word ptr [rdi] ; mov r9, rdi ; sub eax, 1 ; cmp ax, 7 ; jbe 0x119b8c
read: ax eax rdi rflags 
write: eax r9 rflags 
--------------------------------------------------------------------------------
00119c40: CLP; mov r10, rsi ; sub rsp, 8 ; mov r9, rdi ; mov esi, 1 ; xor eax, eax ; cmp dword ptr [rip + 0x254b18], 0 ; je 0x119c66
read: eax rdi rflags rsi rsp 
write: eax esi r10 r9 rflags rsp 
--------------------------------------------------------------------------------
00119cf0: CLP; ret
read: 
write: 
--------------------------------------------------------------------------------
00119d00: CLP; push r15 ; xor eax, eax ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x178 ; mov qword ptr [rsp + 8], rsi ; mov esi, 1 ; call 0xd6819
read: eax r12 r13 r14 r15 rbp rbx rip rsi rsp 
write: eax esi rflags rsp 
--------------------------------------------------------------------------------
00119f20: CLP; sub rsp, 8 ; mov edi, dword ptr [rip + 0x24f3c2] ; test edi, edi ; js 0x119f5c
read: edi rflags rsp 
write: edi rflags rsp 
--------------------------------------------------------------------------------
0011a0d0: CLP; push rbx ; movzx eax, word ptr [rdi] ; xor ebx, ebx ; sub eax, 5 ; cmp ax, 3 ; ja 0x11a114
read: ax eax ebx rbx rflags rsp 
write: eax ebx rflags rsp 
--------------------------------------------------------------------------------
0011a150: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x168 ; mov r8d, dword ptr [rip + 0x24f184] ; test r8d, r8d ; js 0x11a3ff
read: r12 r13 r14 r15 r8d rbp rbx rflags rsp 
write: r8d rflags rsp 
--------------------------------------------------------------------------------
0011a430: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x168 ; mov r10d, dword ptr [rip + 0x24eea4] ; test r10d, r10d ; js 0x11a6c2
read: r10d r12 r13 r14 r15 rbp rbx rflags rsp 
write: r10d rflags rsp 
--------------------------------------------------------------------------------
0011a6f0: CLP; movsxd rdi, dword ptr [rip + 0x24ebf5] ; test edi, edi ; js 0x11a70d
read: edi rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
0011a740: CLP; push r15 ; mov r15, rdx ; push r14 ; push r13 ; push r12 ; push rbp ; mov rbp, rdi ; xor edi, edi ; push rbx ; mov rbx, rsi ; sub rsp, 0x168 ; call 0xb2b3c
read: edi r12 r13 r14 r15 rbp rbx rdi rdx rip rsi rsp 
write: edi r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0011a940: CLP; push rbp ; push rbx ; sub rsp, 0x18 ; mov eax, dword ptr [rip + 0x24e9a0] ; test eax, eax ; js 0x11aa7e
read: eax rbp rbx rflags rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
0011aab0: CLP; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x2e0 ; mov eax, dword ptr [rip + 0x24e827] ; test eax, eax ; js 0x11b013
read: eax r12 r13 r14 rbp rbx rflags rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
0011b050: CLP; push r13 ; mov esi, 1 ; xor eax, eax ; push r12 ; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; cmp dword ptr [rip + 0x253705], 0 ; je 0x11b079
read: eax r12 r13 rbp rbx rdi rflags rsp 
write: eax esi rbx rflags rsp 
--------------------------------------------------------------------------------
0011b190: CLP; push rbp ; mov ecx, 0xe ; mov rbp, rsi ; push rbx ; mov rbx, rdi ; lea rdi, [rip + 0x1c6f9] ; mov rsi, rbx ; sub rsp, 8 ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; je 0x11b20c
read: rbp rbx rcx rdi rflags rsi rsp 
write: ecx rbp rbx rcx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
0011b290: CLP; mov edx, dword ptr [rip + 0x253076] ; test edx, edx ; jne 0x11b394
read: edx rflags 
write: edx rflags 
--------------------------------------------------------------------------------
0011b3b0: CLP; push r13 ; movabs rax, 0x7974702f7665642f ; lea r13, [rip + 0x21a59] ; mov edx, 0x70 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x18 ; lea rbp, [rsp + 8] ; mov qword ptr [rsp], rax ; mov r12, rsp ; mov byte ptr [rbp + 2], 0 ; mov byte ptr [rbp], dl ; lea rbx, [rip + 0x21962] ; mov edx, 0x30
read: dl r12 r13 rax rbp rbx rsp 
write: edx r12 r13 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0011b460: CLP; sub rsp, 8 ; mov edi, 2 ; call 0x11b28c
read: rip rsp 
write: edi rflags rsp 
--------------------------------------------------------------------------------
0011b490: CLP; push rbp ; mov rbp, rsp ; push r15 ; lea r15, [rbp - 0x10c0] ; push r14 ; mov r14d, edi ; push r13 ; lea r13, [rbp - 0x1030] ; push r12 ; mov r12, r13 ; push rbx ; mov ebx, 0x1000 ; sub rsp, 0x10d8 ; jmp 0x11b4e5
read: edi r12 r13 r14 r15 rbp rbx rsp 
write: ebx r12 r13 r14d r15 rbp rflags rsp 
--------------------------------------------------------------------------------
0011b720: CLP; push rbp ; xor eax, eax ; mov esi, 0x40045431 ; push rbx ; sub rsp, 0x18 ; mov rbx, qword ptr [rip + 0x24d730] ; lea rdx, [rsp + 0xc] ; mov dword ptr [rsp + 0xc], 0 ; mov ebp, dword ptr fs:[rbx] ; call 0xdc63c
read: eax rbp rbx rip rsp 
write: eax ebp esi rbx rdx rflags rsp 
--------------------------------------------------------------------------------
0011b770: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; mov rbp, rsi ; push rbx ; sub rsp, 0x38 ; mov rbx, qword ptr [rip + 0x24d6dc] ; test rsi, rsi ; mov r14d, dword ptr fs:[rbx] ; je 0x11b7c4
read: r12 r13 r14 r15 rbp rbx rflags rsi rsp 
write: r14d rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0011ba20: CLP; sub rsp, 0x98 ; mov rcx, rsp ; call 0x11b76c
read: rip rsp 
write: rcx rflags rsp 
--------------------------------------------------------------------------------
0011ba40: CLP; lea rsi, [rip + 0x2528d5] ; sub rsp, 8 ; mov edx, 0x1e ; call 0x11ba1c
read: rip rsp 
write: edx rflags rsi rsp 
--------------------------------------------------------------------------------
0011ba80: CLP; sub rsp, 8 ; cmp rdx, rcx ; ja 0x11ba97
read: rcx rdx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011bab0: CLP; sub rsp, 8 ; call 0x1197cc
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011bad0: CLP; sub rsp, 8 ; call 0x1195cc
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011baf0: CLP; sub rsp, 8 ; call 0x1199cc
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011bb10: CLP; sub rsp, 8 ; call 0x119a7c
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011bb30: CLP; sub rsp, 8 ; call 0x119aec
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011bb50: CLP; sub rsp, 8 ; call 0x11991c
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011bb70: CLP; sub rsp, 8 ; call 0x11b04c
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011bb90: CLP; sub rsp, 8 ; call 0x11b18c
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011bbb0: CLP; mov rax, rsi ; mov edx, 0x180 ; mov rsi, rdi ; test al, 1 ; jne 0x11bc0c
read: al rdi rflags rsi 
write: al edx rax rflags rsi 
--------------------------------------------------------------------------------
0011bc70: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 0x68 ; mov r12, qword ptr [rip + 0x24d15f] ; mov qword ptr [rsp + 0x10], rdi ; mov qword ptr [rsp + 0x18], rsi ; lea rdi, [r12 + 0x930] ; call qword ptr [r12 + 0xf08]
read: r12 r13 r14 r15 rbp rbx rdi rsi rsp 
write: r12 rdi rflags rsp 
--------------------------------------------------------------------------------
0011be60: CLP; push r15 ; push r14 ; push r13 ; push r12 ; mov r12, rsi ; push rbp ; mov rbp, rdi ; push rbx ; sub rsp, 0x28 ; mov rax, qword ptr [rip + 0x24cf69] ; mov qword ptr [rsp + 8], rdx ; mov qword ptr [rsp + 0x10], rcx ; lea rdi, [rax + 0x908] ; call qword ptr [rax + 0xf08]
read: r12 r13 r14 r15 rbp rbx rcx rdi rdx rsi rsp 
write: r12 rax rbp rdi rflags rsp 
--------------------------------------------------------------------------------
0011c150: CLP; movzx eax, word ptr [rdi + 0x2b0] ; sub rsi, qword ptr [rdi] ; lea rdx, [rax*8] ; shl rax, 6 ; sub rax, rdx ; sub rax, 0x38 ; jmp 0x11c178
read: rax rdx rsi 
write: eax rax rdx rflags rsi 
--------------------------------------------------------------------------------
0011c1b0: CLP; sub rsp, 8 ; mov rax, qword ptr [rip + 0x24cca1] ; mov rsi, rdi ; mov rdi, qword ptr [rsp + 8] ; call qword ptr [rax + 0xe0]
read: rdi rsp 
write: rax rdi rflags rsi rsp 
--------------------------------------------------------------------------------
0011c1e0: CLP; mov rax, qword ptr [rip + 0x24cbfd] ; cmp qword ptr [rax + 0x970], 0 ; je 0x11c212
read: rflags 
write: rax rflags 
--------------------------------------------------------------------------------
0011c220: CLP; push rbx ; mov rbx, rdi ; mov rcx, -2 ; sub rsp, 0x10 ; mov rax, qword ptr [rip + 0x24cc6e] ; mov rdx, qword ptr [rdi + 0x10] ; mov esi, dword ptr [rdi + 8] ; mov r9, qword ptr [rip + 0x252108] ; mov r8d, dword ptr [rip + 0x252109] ; mov rax, qword ptr [rax] ; mov qword ptr [rsp], rax ; mov rax, qword ptr [rip + 0x24cc03] ; mov rdi, qword ptr [rdi] ; call qword ptr [rax + 0xf8]
read: rax rbx rdi rsp 
write: esi r8d r9 rax rbx rcx rdi rdx rflags rsp 
--------------------------------------------------------------------------------
0011c280: CLP; push rbx ; mov rbx, rdi ; lea rdx, [rdi + 0x18] ; xor r9d, r9d ; xor r8d, r8d ; sub rsp, 0x10 ; mov rsi, qword ptr [rdi] ; mov rax, qword ptr [rip + 0x24cbc0] ; mov qword ptr [rdi + 0x18], 0 ; mov rdi, qword ptr [rdi + 8] ; mov qword ptr [rsp + 8], 0 ; mov dword ptr [rsp], 2 ; lea rcx, [rsi + 0x388] ; call qword ptr [rax + 0xe8]
read: r8d r9d rbx rdi rsp 
write: r8d r9d rax rbx rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0011c2e0: CLP; sub rsp, 8 ; mov rax, qword ptr [rip + 0x24cb71] ; call qword ptr [rax + 0x100]
read: rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
0011c300: CLP; sub rsp, 0x38 ; mov rax, qword ptr [rip + 0x24cb51] ; mov rcx, rdi ; mov r8, rsi ; mov qword ptr [rsp + 0x28], 0 ; lea rdx, [rsp + 0x1f] ; lea rsi, [rsp + 0x28] ; lea rdi, [rsp + 0x20] ; call qword ptr [rax + 0xd0]
read: rdi rsi rsp 
write: r8 rax rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0011c380: CLP; sub rsp, 0x28 ; mov rax, qword ptr [rsp + 0x28] ; mov qword ptr [rsp], rdi ; mov dword ptr [rsp + 8], esi ; mov qword ptr [rsp + 0x10], rax ; mov rax, qword ptr [rip + 0x251f9f] ; test rax, rax ; jne 0x11c3c7
read: esi rax rdi rflags rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
0011c3e0: CLP; sub rsp, 0x28 ; mov rax, qword ptr [rip + 0x251f51] ; mov qword ptr [rsp], rdi ; mov qword ptr [rsp + 8], rsi ; test rax, rax ; jne 0x11c438
read: rax rdi rflags rsi rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
0011c450: CLP; sub rsp, 8 ; mov rax, qword ptr [rip + 0x251ee1] ; test rax, rax ; jne 0x11c478
read: rax rflags rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
0011c490: CLP; push rbx ; mov rbx, rdi ; xor r9d, r9d ; sub rsp, 0x10 ; mov rsi, qword ptr [rdi] ; mov eax, dword ptr [rbx + 0x18] ; mov rdx, qword ptr [rdi + 0x28] ; mov rdi, qword ptr [rdi + 8] ; mov r8, qword ptr [rbx + 0x10] ; mov rcx, qword ptr [rsi + 0x380] ; mov dword ptr [rsp], eax ; mov rax, qword ptr [rip + 0x24c99e] ; mov qword ptr [rsp + 8], 0 ; call qword ptr [rax + 0xe8]
read: eax r9d rbx rdi rsp 
write: eax r8 r9d rax rbx rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0011c4e0: CLP; push rbp ; mov rbp, rsp ; push r15 ; mov r15, rdi ; mov rdi, rdx ; push r14 ; mov r14, rcx ; push r13 ; mov r13, rsi ; push r12 ; mov r12, rdx ; push rbx ; sub rsp, 0x88 ; mov dword ptr [rbp - 0x88], r8d ; mov qword ptr [rbp - 0x78], 0
read: r12 r13 r14 r15 r8d rbp rbx rcx rdi rdx rsi rsp 
write: r12 r13 r14 r15 rbp rdi rflags rsp 
--------------------------------------------------------------------------------
0011c9a0: CLP; mov r8, rdx ; sub rsp, 0x28 ; xor eax, eax ; movzx r10d, byte ptr [r8] ; mov rdx, rcx ; mov qword ptr [rsp], r8 ; mov dword ptr [rsp + 0xc], 1 ; movzx r9d, r10b ; test r9, r9 ; je 0x11ca4c
read: eax r10b r8 r9 rcx rdx rflags rsp 
write: eax r10d r8 r9d rdx rflags rsp 
--------------------------------------------------------------------------------
0011ca80: CLP; sub rsp, 8 ; mov r8d, 2 ; xor ecx, ecx ; call 0x11c4dc
read: ecx rip rsp 
write: ecx r8d rflags rsp 
--------------------------------------------------------------------------------
0011caa0: CLP; mov rax, qword ptr [rip + 0x24c2dd] ; add rax, qword ptr fs:[0] ; ret
read: rax 
write: rax rflags 
--------------------------------------------------------------------------------
0011cac0: CLP; mov rax, qword ptr [rip + 0x24c395] ; mov r8, rsi ; mov rsi, qword ptr [rax + 0xb8] ; test rsi, rsi ; je 0x11cb64
read: rflags rsi 
write: r8 rax rflags rsi 
--------------------------------------------------------------------------------
0011cb70: CLP; test rsi, rsi ; je 0x11cb8c
read: rflags rsi 
write: rflags 
--------------------------------------------------------------------------------
0011cbb0: CLP; sub rsp, 8 ; and r8d, 3 ; call 0xca1dc
read: r8d rip rsp 
write: r8d rflags rsp 
--------------------------------------------------------------------------------
0011cbd0: CLP; sub rsp, 8 ; mov rdx, rsi ; mov esi, 0x80 ; call 0xcc26c
read: rip rsi rsp 
write: esi rdx rflags rsp 
--------------------------------------------------------------------------------
0011cbf0: CLP; sub rsp, 8 ; mov rdx, rsi ; mov esi, 0x80 ; call 0xcc2dc
read: rip rsi rsp 
write: esi rdx rflags rsp 
--------------------------------------------------------------------------------
0011cc10: CLP; sub rsp, 0x18 ; mov dword ptr [rsp], 2 ; call 0xd590c
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011cc30: CLP; sub rsp, 0x18 ; mov dword ptr [rsp], 3 ; call 0xd590c
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011cc50: CLP; push r15 ; push r14 ; push r13 ; push r12 ; mov r12, r8 ; push rbp ; mov rbp, rdx ; push rbx ; mov rbx, rdi ; sub rsp, 0xc8 ; mov qword ptr [rsp + 8], rdi ; mov qword ptr [rsp + 0x28], rsi ; mov dword ptr [rsp + 0x24], ecx ; call 0x856dc
read: ecx r12 r13 r14 r15 r8 rbp rbx rdi rdx rip rsi rsp 
write: r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0011cea0: CLP; push r15 ; mov r15, rdi ; push r14 ; push r13 ; push r12 ; mov r12, r9 ; push rbp ; mov rbp, rcx ; push rbx ; sub rsp, 0xc8 ; mov qword ptr [rsp + 8], rsi ; mov qword ptr [rsp + 0x28], rdx ; mov dword ptr [rsp + 0x24], r8d ; call 0x856dc
read: r12 r13 r14 r15 r8d r9 rbp rbx rcx rdi rdx rip rsi rsp 
write: r12 r15 rbp rflags rsp 
--------------------------------------------------------------------------------
0011d080: CLP; and ecx, 0xf ; sub rsp, 8 ; mov r8d, ecx ; mov ecx, edx ; mov rdx, rsi ; mov esi, 1 ; call 0xd8eac
read: ecx edx rip rsi rsp 
write: ecx esi r8d rdx rflags rsp 
--------------------------------------------------------------------------------
0011d0b0: CLP; mov esi, dword ptr [rip + 0x2516b6] ; xor eax, eax ; test esi, esi ; jne 0x11d0c4
read: eax esi rflags 
write: eax esi rflags 
--------------------------------------------------------------------------------
0011d0f0: CLP; mov r9d, dword ptr [rip + 0x251675] ; xor eax, eax ; test r9d, r9d ; jne 0x11d104
read: eax r9d rflags 
write: eax r9d rflags 
--------------------------------------------------------------------------------
0011d130: CLP; mov r11d, dword ptr [rip + 0x251635] ; xor eax, eax ; test r11d, r11d ; jne 0x11d144
read: eax r11d rflags 
write: eax r11d rflags 
--------------------------------------------------------------------------------
0011d170: CLP; mov ecx, dword ptr [rip + 0x2515f6] ; xor eax, eax ; test ecx, ecx ; jne 0x11d184
read: eax ecx rflags 
write: eax ecx rflags 
--------------------------------------------------------------------------------
0011d1b0: CLP; mov r8d, dword ptr [rip + 0x2515b5] ; xor eax, eax ; test r8d, r8d ; jne 0x11d1c4
read: eax r8d rflags 
write: eax r8d rflags 
--------------------------------------------------------------------------------
0011d1f0: CLP; mov r10d, dword ptr [rip + 0x251575] ; xor eax, eax ; test r10d, r10d ; jne 0x11d204
read: eax r10d rflags 
write: eax r10d rflags 
--------------------------------------------------------------------------------
0011d230: CLP; sub rsp, 8 ; mov r10d, dword ptr [rip + 0x251531] ; mov rdx, rdi ; test r10d, r10d ; jne 0x11d259
read: r10d rdi rflags rsp 
write: r10d rdx rflags rsp 
--------------------------------------------------------------------------------
0011d280: CLP; sub rsp, 8 ; mov r9d, r8d ; mov r8d, ecx ; mov rcx, rdx ; xor edx, edx ; call 0x10506c
read: ecx edx r8d rdx rip rsp 
write: edx r8d r9d rcx rflags rsp 
--------------------------------------------------------------------------------
0011d2b0: CLP; sub rsp, 8 ; mov rcx, rdx ; xor edx, edx ; call 0x105e4c
read: edx rdx rip rsp 
write: edx rcx rflags rsp 
--------------------------------------------------------------------------------
0011d2d0: CLP; sub rsp, 8 ; mov rcx, rdx ; xor edx, edx ; call 0x105f4c
read: edx rdx rip rsp 
write: edx rcx rflags rsp 
--------------------------------------------------------------------------------
0011d2f0: CLP; sub rsp, 8 ; mov rcx, rdx ; xor edx, edx ; call 0x105fdc
read: edx rdx rip rsp 
write: edx rcx rflags rsp 
--------------------------------------------------------------------------------
0011d310: CLP; sub rsp, 8 ; mov rcx, rdx ; xor edx, edx ; call 0x10606c
read: edx rdx rip rsp 
write: edx rcx rflags rsp 
--------------------------------------------------------------------------------
0011d330: CLP; sub rsp, 8 ; mov rcx, rdx ; xor edx, edx ; call 0x1060fc
read: edx rdx rip rsp 
write: edx rcx rflags rsp 
--------------------------------------------------------------------------------
0011d350: CLP; sub rsp, 8 ; mov rcx, rdx ; xor edx, edx ; call 0x10618c
read: edx rdx rip rsp 
write: edx rcx rflags rsp 
--------------------------------------------------------------------------------
0011d370: CLP; sub rsp, 8 ; mov rcx, rdx ; xor edx, edx ; call 0x10620c
read: edx rdx rip rsp 
write: edx rcx rflags rsp 
--------------------------------------------------------------------------------
0011d390: CLP; sub rsp, 8 ; mov rcx, rdx ; xor edx, edx ; call 0x10628c
read: edx rdx rip rsp 
write: edx rcx rflags rsp 
--------------------------------------------------------------------------------
0011d3b0: CLP; sub rsp, 8 ; mov rcx, rdx ; xor edx, edx ; call 0x10631c
read: edx rdx rip rsp 
write: edx rcx rflags rsp 
--------------------------------------------------------------------------------
0011d3d0: CLP; sub rsp, 8 ; mov rcx, rdx ; xor edx, edx ; call 0x10639c
read: edx rdx rip rsp 
write: edx rcx rflags rsp 
--------------------------------------------------------------------------------
0011d3f0: CLP; sub rsp, 8 ; mov rcx, rdx ; xor edx, edx ; call 0x10642c
read: edx rdx rip rsp 
write: edx rcx rflags rsp 
--------------------------------------------------------------------------------
0011d410: CLP; sub rsp, 8 ; mov rcx, rdx ; xor edx, edx ; call 0x1064ac
read: edx rdx rip rsp 
write: edx rcx rflags rsp 
--------------------------------------------------------------------------------
0011d430: CLP; push r13 ; mov r13, rdi ; push r12 ; xor r12d, r12d ; push rbp ; push rbx ; xor ebx, ebx ; sub rsp, 8 ; cmp qword ptr [rdi + 0x18], 0 ; mov rdx, qword ptr [rdi + 0x10] ; je 0x11d4aa
read: ebx r12 r12d r13 rbp rbx rdi rflags rsp 
write: ebx r12d r13 rdx rflags rsp 
--------------------------------------------------------------------------------
0011d530: CLP; push rbp ; push rbx ; mov rbx, rdi ; sub rsp, 8 ; mov rdi, qword ptr [rdi + 0x20] ; test rdi, rdi ; je 0x11d54b
read: rbp rbx rdi rflags rsp 
write: rbx rdi rflags rsp 
--------------------------------------------------------------------------------
0011d5a0: CLP; sub rsp, 8 ; call 0x11d6ec
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011d610: CLP; mov rdi, qword ptr [rip + 0x250d6d] ; test rdi, rdi ; je 0x11d639
read: rdi rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
0011d640: CLP; sub rsp, 8 ; mov eax, dword ptr [rip + 0x24d2c2] ; mov rdi, qword ptr [rip + 0x24d2cb] ; test eax, eax ; jne 0x11d674
read: eax rflags rsp 
write: eax rdi rflags rsp 
--------------------------------------------------------------------------------
0011d690: CLP; push rbx ; mov rbx, rdi ; mov rdi, qword ptr [rdi + 0x10] ; test rdi, rdi ; je 0x11d6a6
read: rbx rdi rflags rsp 
write: rbx rdi rflags rsp 
--------------------------------------------------------------------------------
0011d6c0: CLP; sub rsp, 8 ; mov rdi, qword ptr [rip + 0x24d261] ; lea rsi, [rip - 0x46] ; call 0xe1a4c
read: rip rsp 
write: rdi rflags rsi rsp 
--------------------------------------------------------------------------------
0011d6f0: CLP; push r15 ; push r14 ; push r13 ; mov r13d, 1 ; push r12 ; lea r12, [rip + 0x24c897] ; push rbp ; xor ebp, ebp ; push rbx ; sub rsp, 8 ; nop dword ptr [rax] ; cmp ebp, 6 ; je 0x11d7da
read: ebp r12 r13 r14 r15 rbp rbx rflags rsp 
write: ebp r12 r13d rflags rsp 
--------------------------------------------------------------------------------
0011d840: CLP; push r14 ; push r13 ; mov r13, qword ptr [rip + 0x24d131] ; push r12 ; test r13, r13 ; push rbp ; push rbx ; je 0x11d8cc
read: r12 r13 r14 rbp rbx rflags rsp 
write: r13 rflags rsp 
--------------------------------------------------------------------------------
0011d970: CLP; push r12 ; lea r12, [rip + 0x1eff3] ; push rbp ; mov rbp, qword ptr [rip + 0x24b573] ; push rbx ; mov rbx, qword ptr [rbp] ; test rbx, rbx ; je 0x11d9c7
read: r12 rbp rbx rflags rsp 
write: r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0011da40: CLP; push rbp ; push rbx ; sub rsp, 8 ; mov rbx, qword ptr [rip + 0x24d167] ; test rbx, rbx ; jne 0x11da5f
read: rbp rbx rflags rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
0011daa0: CLP; push r13 ; mov r13, rdi ; lea rax, [rip + 0x247e70] ; push r12 ; push rbp ; push rbx ; sub rsp, 8 ; mov rdi, qword ptr [rdi + 0xb8] ; cmp rdi, rax ; je 0x11dac9
read: r12 r13 rax rbp rbx rdi rflags rsp 
write: r13 rax rdi rflags rsp 
--------------------------------------------------------------------------------
0011dba0: CLP; sub rsp, 8 ; call 0x388cc
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011dbe0: CLP; mov rdi, qword ptr [rip + 0x24ba05] ; test rdi, rdi ; je 0x11dc18
read: rdi rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
0011dc20: CLP; mov rax, qword ptr [rip + 0x2508a5] ; test rax, rax ; je 0x11dc86
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
0011dc90: CLP; mov rax, qword ptr [rip + 0x24dac5] ; mov byte ptr [rip + 0x24dac6], 1 ; test rax, rax ; je 0x11dcef
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
0011dd00: CLP; cmp qword ptr [rip + 0x24dbcc], 0 ; je 0x11dd1b
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
0011dd30: CLP; mov edx, 1 ; xor eax, eax ; lock cmpxchg qword ptr [rip + 0x24dba4], rdx ; jne 0x11ddaf
read: eax rdx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
0011ddc0: CLP; mov rdi, qword ptr [rip + 0x24dd0d] ; push rbx ; test rdi, rdi ; jne 0x11ddd7
read: rbx rdi rflags rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
0011de10: CLP; lea rdi, [rip + 0x24e0c5] ; sub rsp, 8 ; call 0xca02c
read: rip rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
0011de30: CLP; sub rsp, 8 ; mov rdi, qword ptr [rip + 0x24e151] ; lea rax, [rip + 0x144fa] ; cmp rdi, rax ; je 0x11de57
read: rax rdi rflags rsp 
write: rax rdi rflags rsp 
--------------------------------------------------------------------------------
0011deb0: CLP; sub rsp, 8 ; mov rdi, qword ptr [rip + 0x24e129] ; call 0x1f46c
read: rip rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
0011ded0: CLP; mov eax, dword ptr [rip + 0x250896] ; test eax, eax ; jne 0x11dedc
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0011df10: CLP; mov esi, 1 ; xor eax, eax ; cmp dword ptr [rip + 0x250852], 0 ; je 0x11df2c
read: eax rflags 
write: eax esi rflags 
--------------------------------------------------------------------------------
0011dfe0: CLP; mov rdi, qword ptr [rip + 0x24f1ad] ; mov qword ptr [rip + 0x24f1ba], 0 ; test rdi, rdi ; je 0x11e010
read: rdi rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
0011e020: CLP; mov rdi, qword ptr [rip + 0x24f1a5] ; cmp rdi, 1 ; ja 0x11e034
read: rdi rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
0011e060: CLP; mov rdi, qword ptr [rip + 0x24f8cd] ; test rdi, rdi ; je 0x11e081
read: rdi rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
0011e090: CLP; mov rdi, qword ptr [rip + 0x24fda5] ; test rdi, rdi ; je 0x11e0b8
read: rdi rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
0011e0c0: CLP; push r12 ; mov r12, qword ptr [rip + 0x24fd7b] ; push rbp ; test r12, r12 ; push rbx ; je 0x11e140
read: r12 rbp rbx rflags rsp 
write: r12 rflags rsp 
--------------------------------------------------------------------------------
0011e150: CLP; sub rsp, 8 ; call 0x1113bc
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011e180: CLP; mov rdi, qword ptr [rip + 0x24ff8d] ; cmp rdi, -1 ; je 0x11e1a9
read: rdi rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
0011e1b0: CLP; mov rdi, qword ptr [rip + 0x2507ad] ; cmp rdi, -1 ; je 0x11e1d9
read: rdi rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
0011e1e0: CLP; mov rdi, qword ptr [rip + 0x2507ad] ; cmp rdi, -1 ; je 0x11e209
read: rdi rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
0011e210: CLP; mov rdi, qword ptr [rip + 0x25078d] ; cmp rdi, -1 ; je 0x11e239
read: rdi rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
0011e240: CLP; mov rdi, qword ptr [rip + 0x24fedd] ; cmp rdi, -1 ; je 0x11e269
read: rdi rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
0011e270: CLP; push rbx ; mov eax, 1 ; mov rbx, rdi ; sub rsp, 0x10 ; mov rdx, qword ptr [rdi] ; test rdx, rdx ; je 0x11e2e0
read: rbx rdi rdx rflags rsp 
write: eax rbx rdx rflags rsp 
--------------------------------------------------------------------------------
0011e300: CLP; push r15 ; push r14 ; push r13 ; push r12 ; push rbp ; push rbx ; sub rsp, 8 ; mov r13, qword ptr [rip + 0x24aacf] ; mov r14, qword ptr [rip + 0x24ab40] ; mov rdi, qword ptr [r13 + 0x988] ; mov rbp, qword ptr [r14 + 0xa8] ; cmp rdi, rbp ; jne 0x11e337
read: r12 r13 r14 r15 rbp rbx rdi rflags rsp 
write: r13 r14 rbp rdi rflags rsp 
--------------------------------------------------------------------------------
0011e4a0: CLP; mov rax, qword ptr [rip + 0x24a8d5] ; mov rdx, qword ptr fs:[rax] ; mov qword ptr fs:[rax], 0 ; test rdx, rdx ; je 0x11e54e
read: rdx rflags 
write: rax rdx rflags 
--------------------------------------------------------------------------------
0011e560: CLP; push rbp ; lea rbp, [rip + 0x2472fc] ; push rbx ; lea rbx, [rip + 0x2472d4] ; sub rsp, 8 ; cmp rbx, rbp ; jae 0x11e58b
read: rbp rbx rflags rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0011e5a0: CLP; sub rsp, 8 ; lea rdi, [rip + 0x24a7e1] ; call 0x1f3ec
read: rip rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
0011e5d0: CLP; push rbx ; mov rbx, qword ptr [rip + 0x24aa14] ; mov rdi, qword ptr fs:[rbx] ; mov eax, dword ptr [rdi + 0x10] ; test eax, eax ; jne 0x11e5ec
read: eax rbx rflags rsp 
write: eax rbx rdi rflags rsp 
--------------------------------------------------------------------------------
0011e610: CLP; push rbp ; push rbx ; sub rsp, 8 ; mov rbp, qword ptr [rip + 0x24a95f] ; mov rbx, qword ptr fs:[rbp] ; test rbx, rbx ; je 0x11e6d7
read: rbp rbx rflags rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0001f39a: JLP; push 8 ; jmp 0x1f36c
read: rsp 
write: rsp 
--------------------------------------------------------------------------------
0001f3ba: JLP; push 0 ; jmp 0x1f36c
read: rsp 
write: rsp 
--------------------------------------------------------------------------------
0001f3da: JLP; push 1 ; jmp 0x1f36c
read: rsp 
write: rsp 
--------------------------------------------------------------------------------
0001f3fa: JLP; push 2 ; jmp 0x1f36c
read: rsp 
write: rsp 
--------------------------------------------------------------------------------
0001f41a: JLP; push 3 ; jmp 0x1f36c
read: rsp 
write: rsp 
--------------------------------------------------------------------------------
0001f43a: JLP; push 4 ; jmp 0x1f36c
read: rsp 
write: rsp 
--------------------------------------------------------------------------------
0001f45a: JLP; push 5 ; jmp 0x1f36c
read: rsp 
write: rsp 
--------------------------------------------------------------------------------
0001f47a: JLP; push 6 ; jmp 0x1f36c
read: rsp 
write: rsp 
--------------------------------------------------------------------------------
0001f49a: JLP; push 7 ; jmp 0x1f36c
read: rsp 
write: rsp 
--------------------------------------------------------------------------------
00020db9: JLP; lea rdx, [rbp - 0x90] ; mov ecx, 8 ; or eax, 0xffffffff ; mov rdi, rdx ; rep stosd dword ptr [rdi], eax ; jmp 0x20df2
read: eax rcx rdi rdx rflags 
write: eax ecx rcx rdi rdx rflags 
--------------------------------------------------------------------------------
000219cb: JLP; mov rax, r8 ; cqo ; idiv rcx ; mov r8, rax ; add r12, r8 ; cmp esi, 0x80000000 ; jbe 0x218d3
read: esi r12 r8 rax rcx rdx rflags 
write: r12 r8 rax rdx rflags 
--------------------------------------------------------------------------------
00022480: JLP; mov rax, qword ptr [rip + 0x3469dd] ; mov dword ptr fs:[rax], 9 ; add rsp, 0x18 ; mov rax, -1 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: r12 r13 r14 r15 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000224b0: JLP; mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: r12 r13 r14 r15 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000224d0: JLP; mov rax, qword ptr [rip + 0x34698d] ; mov dword ptr fs:[rax], 7 ; add rsp, 0x18 ; mov rax, -1 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: r12 r13 r14 r15 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00022500: JLP; mov rax, qword ptr [rip + 0x34695d] ; mov dword ptr fs:[rax], 0x54 ; add rsp, 0x18 ; mov rax, -1 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: r12 r13 r14 r15 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00022530: JLP; mov rax, qword ptr [rip + 0x34692d] ; mov dword ptr fs:[rax], 0x16 ; add rsp, 0x18 ; mov rax, -1 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: r12 r13 r14 r15 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00022560: JLP; lea rcx, [rip + 0x111f15] ; lea rsi, [rip + 0x111f06] ; lea rdi, [rip + 0x115447] ; mov edx, 0x5b ; call 0x2eaac
read: rip rsp 
write: edx rcx rdi rsi rsp 
--------------------------------------------------------------------------------
0002cef0: JLP; cmp rcx, 0xf ; ja 0x2d154
read: rcx rflags 
write: rflags 
--------------------------------------------------------------------------------
0002cf58: JLP; cmp rcx, 1 ; jbe 0x2cefc
read: rcx rflags 
write: rflags 
--------------------------------------------------------------------------------
0002cf88: JLP; cmp rcx, 4 ; jbe 0x2cefc
read: rcx rflags 
write: rflags 
--------------------------------------------------------------------------------
0002cfb8: JLP; cmp rcx, 0xc ; jbe 0x2cefc
read: rcx rflags 
write: rflags 
--------------------------------------------------------------------------------
0002cfe8: JLP; cmp rcx, 6 ; jbe 0x2cefc
read: rcx rflags 
write: rflags 
--------------------------------------------------------------------------------
0002d018: JLP; cmp rcx, 2 ; jbe 0x2cefc
read: rcx rflags 
write: rflags 
--------------------------------------------------------------------------------
0002d048: JLP; cmp rcx, 4 ; jbe 0x2cefc
read: rcx rflags 
write: rflags 
--------------------------------------------------------------------------------
0002d078: JLP; cmp rcx, 0x2d ; jbe 0x2cefc
read: rcx rflags 
write: rflags 
--------------------------------------------------------------------------------
0002d0a8: JLP; cmp rcx, 0x12 ; jbe 0x2cefc
read: rcx rflags 
write: rflags 
--------------------------------------------------------------------------------
0002d0d8: JLP; cmp rcx, 0x6e ; jbe 0x2cefc
read: rcx rflags 
write: rflags 
--------------------------------------------------------------------------------
0002d108: JLP; cmp rcx, 5 ; jbe 0x2cefc
read: rcx rflags 
write: rflags 
--------------------------------------------------------------------------------
0002d138: JLP; test ebx, ebx ; jne 0x2d18a
read: ebx rflags 
write: rflags 
--------------------------------------------------------------------------------
0002f68d: JLP; xor ecx, ecx ; cmp r13, rsi ; sete cl ; jmp 0x2f580
read: ecx r13 rflags rsi 
write: cl ecx rflags 
--------------------------------------------------------------------------------
0002f69e: JLP; xor ecx, ecx ; cmp r13, rsi ; setae cl ; jmp 0x2f580
read: ecx r13 rflags rsi 
write: cl ecx rflags 
--------------------------------------------------------------------------------
0002f6af: JLP; xor ecx, ecx ; cmp r13, rsi ; setbe cl ; jmp 0x2f580
read: ecx r13 rflags rsi 
write: cl ecx rflags 
--------------------------------------------------------------------------------
0002f6c0: JLP; xor ecx, ecx ; cmp r13, rsi ; seta cl ; jmp 0x2f580
read: ecx r13 rflags rsi 
write: cl ecx rflags 
--------------------------------------------------------------------------------
0002f6d1: JLP; xor ecx, ecx ; cmp r13, rsi ; setb cl ; jmp 0x2f580
read: ecx r13 rflags rsi 
write: cl ecx rflags 
--------------------------------------------------------------------------------
0002f6e2: JLP; mov rcx, r13 ; sub rcx, rsi ; jmp 0x2f580
read: r13 rcx rsi 
write: rcx rflags 
--------------------------------------------------------------------------------
0002f6f1: JLP; lea rcx, [rsi + r13] ; jmp 0x2f580
read: 
write: rcx 
--------------------------------------------------------------------------------
0002f6fe: JLP; mov rax, r13 ; xor edx, edx ; div rsi ; mov rcx, rdx ; jmp 0x2f580
read: edx r13 rax rdx rsi 
write: edx rax rcx rdx rflags 
--------------------------------------------------------------------------------
0002f712: JLP; mov rax, r13 ; xor edx, edx ; div rsi ; mov rcx, rax ; jmp 0x2f580
read: edx r13 rax rdx rsi 
write: edx rax rcx rdx rflags 
--------------------------------------------------------------------------------
0002f726: JLP; imul rsi, r13 ; mov rcx, rsi ; jmp 0x2f580
read: r13 rsi 
write: rcx rflags rsi 
--------------------------------------------------------------------------------
0002f736: JLP; xor ecx, ecx ; cmp r13, rsi ; setne cl ; jmp 0x2f580
read: ecx r13 rflags rsi 
write: cl ecx rflags 
--------------------------------------------------------------------------------
0002f9c7: JLP; test r12d, r12d ; je 0x2fa5c
read: r12d rflags 
write: rflags 
--------------------------------------------------------------------------------
00033dfe: JLP; mov rdx, qword ptr [r12] ; test rdx, rdx ; je 0x33f0c
read: rdx rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
00033f40: JLP; mov rdx, qword ptr [r12 - 0x10] ; mov rax, qword ptr [r12] ; mov edi, 2 ; mov esi, dword ptr [r12 - 8] ; mov qword ptr [rsp + 0x40], rdx ; mov rdx, qword ptr [rsp + 0x28] ; mov qword ptr [rsp + 0x48], rax ; call 0x33adc
read: rax rdx rip rsp 
write: edi esi rax rdx rsp 
--------------------------------------------------------------------------------
00034042: JLP; xor edx, edx ; xor esi, esi ; xor edi, edi ; call 0x33adc
read: edi edx esi rip rsp 
write: edi edx esi rflags rsp 
--------------------------------------------------------------------------------
0003405a: JLP; mov rdx, qword ptr [r12 - 0x10] ; mov rsi, qword ptr [r12 - 0x20] ; mov edi, 3 ; mov rax, qword ptr [r12] ; mov qword ptr [rsp + 0x48], rdx ; mov rdx, qword ptr [rsp + 0x28] ; mov qword ptr [rsp + 0x40], rsi ; mov esi, 0x10 ; mov qword ptr [rsp + 0x50], rax ; call 0x33adc
read: rax rdx rip rsi rsp 
write: edi esi rax rdx rsi rsp 
--------------------------------------------------------------------------------
00034098: JLP; mov rdx, qword ptr [r12 - 0x10] ; mov rax, qword ptr [r12] ; mov esi, 0xf ; mov edi, 2 ; mov qword ptr [rsp + 0x40], rdx ; mov rdx, qword ptr [rsp + 0x28] ; mov qword ptr [rsp + 0x48], rax ; call 0x33adc
read: rax rdx rip rsp 
write: edi esi rax rdx rsp 
--------------------------------------------------------------------------------
000340cc: JLP; mov rdx, qword ptr [r12 - 0x10] ; mov rax, qword ptr [r12] ; mov esi, 0xe ; mov edi, 2 ; mov qword ptr [rsp + 0x40], rdx ; mov rdx, qword ptr [rsp + 0x28] ; mov qword ptr [rsp + 0x48], rax ; call 0x33adc
read: rax rdx rip rsp 
write: edi esi rax rdx rsp 
--------------------------------------------------------------------------------
00034100: JLP; mov rax, qword ptr [r12 - 8] ; jmp 0x33e1c
read: 
write: rax 
--------------------------------------------------------------------------------
0003410e: JLP; xor edx, edx ; xor edi, edi ; mov esi, 1 ; call 0x33adc
read: edi edx rip rsp 
write: edi edx esi rflags rsp 
--------------------------------------------------------------------------------
0003413a: JLP; mov rax, qword ptr [r12] ; mov rdx, qword ptr [rsp + 0x28] ; mov esi, 2 ; mov edi, 1 ; mov qword ptr [rsp + 0x40], rax ; call 0x33adc
read: rax rip rsp 
write: edi esi rax rdx rsp 
--------------------------------------------------------------------------------
00034174: JLP; cmp byte ptr [rsi + 1], 0x3d ; mov dword ptr [rsp + 0x18], 0x100 ; jne 0x341a3
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000341a7: JLP; mov rax, qword ptr [rsp + 0x30] ; mov qword ptr [rax], r9 ; jmp 0x33d6a
read: r9 
write: rax 
--------------------------------------------------------------------------------
000341b8: JLP; cmp byte ptr [rsi + 1], 0x3d ; je 0x343aa
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000341e5: JLP; cmp byte ptr [rsi + 1], 0x3d ; je 0x343d0
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
00034212: JLP; movzx esi, byte ptr [rsi + 1] ; mov eax, dword ptr [rsp + 0x18] ; sub eax, 0x30 ; lea r10d, [rsi - 0x30] ; cdqe ; cmp r10b, 9 ; ja 0x3424c
read: eax r10b rflags 
write: eax esi r10d rax rflags 
--------------------------------------------------------------------------------
00034262: JLP; movabs rax, 0xffffffff00000000 ; and qword ptr [rsp + 0x38], rax ; mov dword ptr [rsp + 0x18], 0x105 ; or qword ptr [rsp + 0x38], 4 ; jmp 0x341a3
read: rax 
write: rax rflags 
--------------------------------------------------------------------------------
00034288: JLP; movabs rax, 0xffffffff00000000 ; and qword ptr [rsp + 0x38], rax ; mov dword ptr [rsp + 0x18], 0x104 ; or qword ptr [rsp + 0x38], 6 ; jmp 0x341a3
read: rax 
write: rax rflags 
--------------------------------------------------------------------------------
000342ae: JLP; movabs rax, 0xffffffff00000000 ; and qword ptr [rsp + 0x38], rax ; mov dword ptr [rsp + 0x18], 0x105 ; or qword ptr [rsp + 0x38], 3 ; jmp 0x341a3
read: rax 
write: rax rflags 
--------------------------------------------------------------------------------
000342d4: JLP; movabs rax, 0xffffffff00000000 ; and qword ptr [rsp + 0x38], rax ; mov dword ptr [rsp + 0x18], 0x104 ; or qword ptr [rsp + 0x38], 7 ; jmp 0x341a3
read: rax 
write: rax rflags 
--------------------------------------------------------------------------------
000342fa: JLP; movsx eax, byte ptr [rsi + 1] ; cmp dword ptr [rsp + 0x18], eax ; je 0x343a1
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00034319: JLP; movabs rax, 0xffffffff00000000 ; and qword ptr [rsp + 0x38], rax ; mov dword ptr [rsp + 0x18], 0x105 ; or qword ptr [rsp + 0x38], 5 ; jmp 0x341a3
read: rax 
write: rax rflags 
--------------------------------------------------------------------------------
0003433f: JLP; cmp byte ptr [rsi + 1], 0x3d ; jne 0x341a3
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
00034373: JLP; mov r9, rsi ; mov dword ptr [rsp + 0x18], 0 ; jmp 0x341a3
read: rsi 
write: r9 
--------------------------------------------------------------------------------
000451c8: JLP; ja 0x452dc
read: rflags 
write: 
--------------------------------------------------------------------------------
000451f8: JLP; ja 0x452fc
read: rflags 
write: 
--------------------------------------------------------------------------------
00045220: JLP; ja 0x4530c
read: rflags 
write: 
--------------------------------------------------------------------------------
00045240: JLP; ja 0x452bc
read: rflags 
write: 
--------------------------------------------------------------------------------
00045260: JLP; ja 0x452cc
read: rflags 
write: 
--------------------------------------------------------------------------------
00045280: JLP; ja 0x452ec
read: rflags 
write: 
--------------------------------------------------------------------------------
00047e02: JLP; mov rax, qword ptr [rip + 0x320fb3] ; mov qword ptr [rbp - 0x560], rsp ; mov rax, qword ptr fs:[rax] ; mov rax, qword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; mov qword ptr [rbp - 0x470], 0 ; add rax, 0xf ; shr rax, 4 ; shl rax, 4 ; sub rsp, rax ; movsxd rax, dword ptr [rbp - 0x4e4] ; mov qword ptr [rbp - 0x568], rsp ; imul rax, rax, 0x48 ; add rax, qword ptr [rbp - 0x4d0] ; je 0x486e7
read: rax rflags rsp 
write: eax rax rflags rsp 
--------------------------------------------------------------------------------
00047f7c: JLP; mov rax, qword ptr [rip + 0x320e39] ; mov edx, dword ptr [r15] ; mov qword ptr [rbp - 0x4c8], rsp ; mov rax, qword ptr fs:[rax] ; mov rax, qword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; mov qword ptr [rbp - 0x470], 0 ; add rax, 0xf ; shr rax, 4 ; shl rax, 4 ; sub rsp, rax ; cmp edx, 0x30 ; mov qword ptr [rbp - 0x508], rsp ; jae 0x4853a
read: edx rax rflags rsp 
write: eax edx rax rflags rsp 
--------------------------------------------------------------------------------
0004823f: JLP; cmp dword ptr [rbp - 0x510], 0 ; mov edx, dword ptr [r15] ; je 0x4baa1
read: rflags 
write: edx rflags 
--------------------------------------------------------------------------------
0004854f: JLP; cmp dword ptr [rbp - 0x510], 0 ; jne 0x47f78
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
0004870a: JLP; cmp dword ptr [rbp - 0x568], 0 ; jne 0x47dfe
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
00048dba: JLP; mov dword ptr [rbp - 0x578], 0xa ; movsxd rax, dword ptr [rbp - 0x4e4] ; imul rax, rax, 0x48 ; add rax, qword ptr [rbp - 0x4d0] ; je 0x4b120
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
00049480: JLP; test byte ptr [rbx + 0x74], 4 ; je 0x49493
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000494d0: JLP; mov edi, dword ptr [rbp - 0x4b0] ; lea rsi, [rbp - 0x420] ; mov edx, 0x3e8 ; call 0x8552c
read: rip rsp 
write: edi edx rsi rsp 
--------------------------------------------------------------------------------
0004988d: JLP; mov rax, qword ptr [rbp - 0x4a0] ; lea rdx, [rax + 1] ; mov qword ptr [rbp - 0x4a0], rdx ; movzx eax, byte ptr [rax + 1] ; lea edx, [rax - 0x20] ; mov byte ptr [rbp - 0x4c8], al ; xor eax, eax ; cmp dl, 0x5a ; ja 0x498d5
read: al dl eax rdx rflags 
write: eax edx rax rdx rflags 
--------------------------------------------------------------------------------
00049e4d: JLP; movsxd rax, dword ptr [rbp - 0x4e4] ; imul rax, rax, 0x48 ; add rax, qword ptr [rbp - 0x4d0] ; je 0x4a1a5
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
0004a1c9: JLP; movsxd rax, dword ptr [rbp - 0x4e4] ; mov rcx, qword ptr [rbp - 0x4d0] ; imul rax, rax, 0x48 ; lea r12, [rcx + rax] ; mov rsi, qword ptr [r12 + 0x38] ; lea rax, [rsi*8 + 0x1e] ; and rax, 0xfffffffffffffff0 ; sub rsp, rax ; xor eax, eax ; lea rdx, [rsp + 0xf] ; and rdx, 0xfffffffffffffff0 ; jmp 0x4a219
read: eax rax rdx rsp 
write: eax r12 rax rcx rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0004a91d: JLP; movsxd rsi, dword ptr [rbp - 0x4e4] ; imul rsi, rsi, 0x48 ; add rsi, qword ptr [rbp - 0x4d0] ; je 0x4a9fe
read: rflags rsi 
write: rflags rsi 
--------------------------------------------------------------------------------
0004a996: JLP; movsxd rax, dword ptr [rbp - 0x4e4] ; imul rax, rax, 0x48 ; add rax, qword ptr [rbp - 0x4d0] ; je 0x4ae29
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
0004ab33: JLP; mov dword ptr [rbp - 0x578], 0x10 ; jmp 0x48dc4
read: 
write: 
--------------------------------------------------------------------------------
0004ab46: JLP; movsxd rsi, dword ptr [rbp - 0x4e4] ; imul rsi, rsi, 0x48 ; add rsi, qword ptr [rbp - 0x4d0] ; je 0x4abac
read: rflags rsi 
write: rflags rsi 
--------------------------------------------------------------------------------
0004ab8c: JLP; mov dword ptr [rbp - 0x578], 8 ; jmp 0x48dc4
read: 
write: 
--------------------------------------------------------------------------------
0004accb: JLP; test byte ptr [rbx + 0x74], 4 ; je 0x4acda
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
0004ae8f: JLP; mov edi, dword ptr [rbp - 0x4b0] ; lea rsi, [rbp - 0x420] ; mov edx, 0x3e8 ; call 0x8552c
read: rip rsp 
write: edi edx rsi rsp 
--------------------------------------------------------------------------------
0004b331: JLP; mov rax, qword ptr [rbp - 0x4a0] ; lea rdx, [rax + 1] ; mov qword ptr [rbp - 0x4a0], rdx ; movzx eax, byte ptr [rax + 1] ; lea edx, [rax - 0x20] ; mov byte ptr [rbp - 0x4c8], al ; xor eax, eax ; cmp dl, 0x5a ; ja 0x4b379
read: al dl eax rdx rflags 
write: eax edx rax rdx rflags 
--------------------------------------------------------------------------------
0004b38c: JLP; mov rax, qword ptr [rbp - 0x4a0] ; lea rdx, [rax + 1] ; mov qword ptr [rbp - 0x4a0], rdx ; movzx eax, byte ptr [rax + 1] ; lea edx, [rax - 0x20] ; mov byte ptr [rbp - 0x4c8], al ; xor eax, eax ; cmp dl, 0x5a ; ja 0x4b3d4
read: al dl eax rdx rflags 
write: eax edx rax rdx rflags 
--------------------------------------------------------------------------------
0004b3ee: JLP; mov rax, qword ptr [rbx + 0x28] ; cmp rax, qword ptr [rbx + 0x30] ; jae 0x4bac4
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
0004bb1f: JLP; mov dword ptr [rbp - 0x53c], 0xa ; cmp dword ptr [rbp - 0x510], 0 ; mov edx, dword ptr [r15] ; je 0x4bb70
read: rflags 
write: edx rflags 
--------------------------------------------------------------------------------
0004bbbc: JLP; mov rax, qword ptr [rbp - 0x4a0] ; mov rdx, rax ; lea rax, [rax + 1] ; mov qword ptr [rbp - 0x4a0], rax ; movzx ecx, byte ptr [rdx + 1] ; cmp cl, 0x2a ; je 0x4bcc3
read: cl rax rflags 
write: ecx rax rdx rflags 
--------------------------------------------------------------------------------
0004bd14: JLP; mov rax, qword ptr [rbp - 0x4a0] ; lea rdx, [rax + 1] ; mov qword ptr [rbp - 0x4a0], rdx ; movzx eax, byte ptr [rax + 1] ; lea edx, [rax - 0x20] ; mov byte ptr [rbp - 0x4c8], al ; xor eax, eax ; cmp dl, 0x5a ; ja 0x4bd5c
read: al dl eax rdx rflags 
write: eax edx rax rdx rflags 
--------------------------------------------------------------------------------
0004bdf6: JLP; mov edx, dword ptr [r15] ; cmp edx, 0x30 ; jae 0x4be36
read: edx rflags 
write: edx rflags 
--------------------------------------------------------------------------------
0004be16: JLP; cmp byte ptr [rbp - 0x4c8], 0 ; jne 0x49924
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
0004be48: JLP; mov rax, qword ptr [rbx + 0x28] ; cmp rax, qword ptr [rbx + 0x30] ; jae 0x4bed9
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
0004be81: JLP; movsxd rax, dword ptr [rbp - 0x4e4] ; imul rax, rax, 0x48 ; add rax, qword ptr [rbp - 0x4d0] ; je 0x4bf21
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
0004c26b: JLP; mov dword ptr [rbp - 0x53c], 0x10 ; jmp 0x4bb29
read: 
write: 
--------------------------------------------------------------------------------
0004c2a9: JLP; mov dword ptr [rbp - 0x53c], 8 ; jmp 0x4bb29
read: 
write: 
--------------------------------------------------------------------------------
0004c2db: JLP; lea r10, [rbp - 0x470] ; xor eax, eax ; mov ecx, 5 ; mov esi, dword ptr [rbp - 0x53c] ; movzx edx, byte ptr [rbp - 0x510] ; mov rdi, r10 ; rep stosd dword ptr [rdi], eax ; mov eax, dword ptr [rbp - 0x508] ; movzx ecx, byte ptr [rbp - 0x538] ; and edx, 1 ; shl edx, 2 ; mov dword ptr [rbp - 0x470], eax ; mov eax, dword ptr [rbp - 0x500] ; and ecx, 1 ; add ecx, ecx
read: eax ecx edx r10 rcx rdi rflags 
write: eax ecx edx esi r10 rcx rdi rflags 
--------------------------------------------------------------------------------
0004c412: JLP; mov edx, dword ptr [r15] ; cmp edx, 0x30 ; jae 0x4c618
read: edx rflags 
write: edx rflags 
--------------------------------------------------------------------------------
0004c4c1: JLP; lea r10, [rbp - 0x470] ; xor eax, eax ; mov ecx, 5 ; mov esi, dword ptr [rbp - 0x53c] ; movzx edx, byte ptr [rbp - 0x510] ; mov rdi, r10 ; rep stosd dword ptr [rdi], eax ; mov eax, dword ptr [rbp - 0x508] ; movzx ecx, byte ptr [rbp - 0x538] ; and edx, 1 ; shl edx, 2 ; mov dword ptr [rbp - 0x470], eax ; mov eax, dword ptr [rbp - 0x500] ; and ecx, 1 ; add ecx, ecx
read: eax ecx edx r10 rcx rdi rflags 
write: eax ecx edx esi r10 rcx rdi rflags 
--------------------------------------------------------------------------------
0004c64c: JLP; cmp qword ptr [rbp - 0x4e0], -1 ; je 0x4c6ad
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
0004c6fd: JLP; mov rax, qword ptr [rbp - 0x4a0] ; lea rdx, [rax + 1] ; mov qword ptr [rbp - 0x4a0], rdx ; movzx eax, byte ptr [rax + 1] ; lea edx, [rax - 0x20] ; mov byte ptr [rbp - 0x4c8], al ; xor eax, eax ; cmp dl, 0x5a ; ja 0x4c745
read: al dl eax rdx rflags 
write: eax edx rax rdx rflags 
--------------------------------------------------------------------------------
0004c768: JLP; mov rax, qword ptr [rbp - 0x4a0] ; lea rdx, [rax + 1] ; mov qword ptr [rbp - 0x4a0], rdx ; mov qword ptr [rbp - 0x470], rdx ; movzx eax, byte ptr [rax + 1] ; sub eax, 0x30 ; cmp eax, 9 ; jbe 0x4c9c0
read: eax rdx rflags 
write: eax rax rdx rflags 
--------------------------------------------------------------------------------
0004c847: JLP; mov rax, qword ptr [rbp - 0x4a0] ; lea rdx, [rax + 1] ; mov qword ptr [rbp - 0x4a0], rdx ; movzx eax, byte ptr [rax + 1] ; lea edx, [rax - 0x20] ; mov byte ptr [rbp - 0x4c8], al ; xor eax, eax ; cmp dl, 0x5a ; ja 0x4c88f
read: al dl eax rdx rflags 
write: eax edx rax rdx rflags 
--------------------------------------------------------------------------------
0004c8ac: JLP; mov rax, qword ptr [rbp - 0x4a0] ; lea rdx, [rax + 1] ; mov qword ptr [rbp - 0x4a0], rdx ; movzx eax, byte ptr [rax + 1] ; lea edx, [rax - 0x20] ; mov byte ptr [rbp - 0x4c8], al ; xor eax, eax ; cmp dl, 0x5a ; ja 0x4c8f4
read: al dl eax rdx rflags 
write: eax edx rax rdx rflags 
--------------------------------------------------------------------------------
0004c907: JLP; cmp dword ptr [rbp - 0x514], 0 ; movzx ecx, byte ptr [rbp - 0x521] ; mov eax, 0x30 ; cmove ecx, eax ; mov rax, qword ptr [rbp - 0x4a0] ; mov byte ptr [rbp - 0x521], cl ; lea rdx, [rax + 1] ; mov qword ptr [rbp - 0x4a0], rdx ; movzx eax, byte ptr [rax + 1] ; lea edx, [rax - 0x20] ; mov byte ptr [rbp - 0x4c8], al ; xor eax, eax ; cmp dl, 0x5a ; ja 0x4bc28
read: al cl dl eax ecx rdx rflags 
write: eax ecx edx rax rdx rflags 
--------------------------------------------------------------------------------
0004ca47: JLP; mov rdi, qword ptr [rbp - 0x578] ; call 0x1f597
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0004cb47: JLP; mov rax, qword ptr [rbp - 0x4a0] ; lea rdx, [rax + 1] ; mov qword ptr [rbp - 0x4a0], rdx ; movzx eax, byte ptr [rax + 1] ; lea edx, [rax - 0x20] ; mov byte ptr [rbp - 0x4c8], al ; xor eax, eax ; cmp dl, 0x5a ; ja 0x4cb8f
read: al dl eax rdx rflags 
write: eax edx rax rdx rflags 
--------------------------------------------------------------------------------
0004cbac: JLP; mov rax, qword ptr [rbp - 0x4a0] ; lea rdx, [rax + 1] ; mov qword ptr [rbp - 0x4a0], rdx ; movzx eax, byte ptr [rax + 1] ; lea edx, [rax - 0x20] ; mov byte ptr [rbp - 0x4c8], al ; xor eax, eax ; cmp dl, 0x5a ; ja 0x4cbf4
read: al dl eax rdx rflags 
write: eax edx rax rdx rflags 
--------------------------------------------------------------------------------
0004cc5f: JLP; nop dword ptr [rax - 0x45] ; mov rax, qword ptr [rbp - 0x4a0] ; lea rdx, [rax + 1] ; mov qword ptr [rbp - 0x4a0], rdx ; movzx eax, byte ptr [rax + 1] ; lea edx, [rax - 0x20] ; mov byte ptr [rbp - 0x4c8], al ; xor eax, eax ; cmp dl, 0x5a ; ja 0x4ccab
read: al dl eax rdx rflags 
write: eax edx rax rdx rflags 
--------------------------------------------------------------------------------
0004cc63: JLP; mov rax, qword ptr [rbp - 0x4a0] ; lea rdx, [rax + 1] ; mov qword ptr [rbp - 0x4a0], rdx ; movzx eax, byte ptr [rax + 1] ; lea edx, [rax - 0x20] ; mov byte ptr [rbp - 0x4c8], al ; xor eax, eax ; cmp dl, 0x5a ; ja 0x4ccab
read: al dl eax rdx rflags 
write: eax edx rax rdx rflags 
--------------------------------------------------------------------------------
0004ccc8: JLP; jmp 0x4cc5f
read: 
write: 
--------------------------------------------------------------------------------
00052a26: JLP; nop dword ptr [rax - 0x45] ; mov rax, qword ptr [rbp - 0x1070] ; lea rdx, [rax + 4] ; mov eax, dword ptr [rax + 4] ; mov qword ptr [rbp - 0x1070], rdx ; lea edx, [rax - 0x20] ; mov dword ptr [rbp - 0x10c0], eax ; xor eax, eax ; cmp edx, 0x5a ; ja 0x52a65
read: eax edx rdx rflags 
write: eax edx rax rdx rflags 
--------------------------------------------------------------------------------
00052a2a: JLP; mov rax, qword ptr [rbp - 0x1070] ; lea rdx, [rax + 4] ; mov eax, dword ptr [rax + 4] ; mov qword ptr [rbp - 0x1070], rdx ; lea edx, [rax - 0x20] ; mov dword ptr [rbp - 0x10c0], eax ; xor eax, eax ; cmp edx, 0x5a ; ja 0x52a65
read: eax edx rdx rflags 
write: eax edx rax rdx rflags 
--------------------------------------------------------------------------------
00052a82: JLP; mov rax, qword ptr [rbp - 0x1070] ; lea rdx, [rax + 4] ; mov eax, dword ptr [rax + 4] ; mov qword ptr [rbp - 0x1070], rdx ; lea edx, [rax - 0x20] ; mov dword ptr [rbp - 0x10c0], eax ; xor eax, eax ; cmp edx, 0x5a ; ja 0x52abd
read: eax edx rdx rflags 
write: eax edx rax rdx rflags 
--------------------------------------------------------------------------------
00052ad0: JLP; mov rax, qword ptr [rbp - 0x1070] ; lea rdx, [rax + 4] ; mov eax, dword ptr [rax + 4] ; mov qword ptr [rbp - 0x1070], rdx ; lea edx, [rax - 0x20] ; mov dword ptr [rbp - 0x10c0], eax ; xor eax, eax ; cmp edx, 0x5a ; ja 0x52b0b
read: eax edx rdx rflags 
write: eax edx rax rdx rflags 
--------------------------------------------------------------------------------
00052b28: JLP; jmp 0x52a26
read: 
write: 
--------------------------------------------------------------------------------
00052b31: JLP; mov rax, qword ptr [rbp - 0x1070] ; mov rdx, rax ; lea rax, [rax + 4] ; mov ecx, dword ptr [rdx + 4] ; mov qword ptr [rbp - 0x1070], rax ; cmp ecx, 0x2a ; je 0x574ab
read: ecx rax rflags 
write: ecx rax rdx rflags 
--------------------------------------------------------------------------------
00052b99: JLP; mov rax, qword ptr [rbp - 0x1070] ; lea rdx, [rax + 4] ; mov eax, dword ptr [rax + 4] ; mov qword ptr [rbp - 0x1070], rdx ; lea edx, [rax - 0x20] ; mov dword ptr [rbp - 0x10c0], eax ; xor eax, eax ; cmp edx, 0x5a ; ja 0x52bd4
read: eax edx rdx rflags 
write: eax edx rax rdx rflags 
--------------------------------------------------------------------------------
00052be7: JLP; mov rax, qword ptr [rbp - 0x1070] ; lea rdx, [rax + 4] ; mov eax, dword ptr [rax + 4] ; mov qword ptr [rbp - 0x1070], rdx ; lea edx, [rax - 0x20] ; mov dword ptr [rbp - 0x10c0], eax ; xor eax, eax ; cmp edx, 0x5a ; ja 0x52c22
read: eax edx rdx rflags 
write: eax edx rax rdx rflags 
--------------------------------------------------------------------------------
00052c3f: JLP; mov rax, qword ptr [rbp - 0x1070] ; lea rdx, [rax + 4] ; mov eax, dword ptr [rax + 4] ; mov qword ptr [rbp - 0x1070], rdx ; lea edx, [rax - 0x20] ; mov dword ptr [rbp - 0x10c0], eax ; xor eax, eax ; cmp edx, 0x5a ; ja 0x52c7a
read: eax edx rdx rflags 
write: eax edx rax rdx rflags 
--------------------------------------------------------------------------------
00052c8d: JLP; mov rax, qword ptr [rbp - 0x1070] ; lea rdx, [rax + 4] ; mov eax, dword ptr [rax + 4] ; mov qword ptr [rbp - 0x1070], rdx ; lea edx, [rax - 0x20] ; mov dword ptr [rbp - 0x10c0], eax ; xor eax, eax ; cmp edx, 0x5a ; ja 0x52cc8
read: eax edx rdx rflags 
write: eax edx rax rdx rflags 
--------------------------------------------------------------------------------
00052cdb: JLP; mov rax, qword ptr [rbp - 0x1070] ; lea rdx, [rax + 4] ; mov eax, dword ptr [rax + 4] ; mov qword ptr [rbp - 0x1070], rdx ; lea edx, [rax - 0x20] ; mov dword ptr [rbp - 0x10c0], eax ; xor eax, eax ; cmp edx, 0x5a ; ja 0x52d16
read: eax edx rdx rflags 
write: eax edx rax rdx rflags 
--------------------------------------------------------------------------------
00052d33: JLP; mov rax, qword ptr [rbp - 0x1070] ; lea rdx, [rax + 4] ; mov eax, dword ptr [rax + 4] ; mov qword ptr [rbp - 0x1070], rdx ; lea edx, [rax - 0x20] ; mov dword ptr [rbp - 0x10c0], eax ; xor eax, eax ; cmp edx, 0x5a ; ja 0x52d6e
read: eax edx rdx rflags 
write: eax edx rax rdx rflags 
--------------------------------------------------------------------------------
00052d81: JLP; cmp dword ptr [rbp - 0x10c8], 0 ; mov eax, 0x30 ; cmovne eax, dword ptr [rbp - 0x10f4] ; mov dword ptr [rbp - 0x10f4], eax ; mov rax, qword ptr [rbp - 0x1070] ; lea rdx, [rax + 4] ; mov eax, dword ptr [rax + 4] ; mov qword ptr [rbp - 0x1070], rdx ; lea edx, [rax - 0x20] ; mov dword ptr [rbp - 0x10c0], eax ; xor eax, eax ; cmp edx, 0x5a ; ja 0x52b90
read: eax edx rdx rflags 
write: eax edx rax rdx rflags 
--------------------------------------------------------------------------------
00052de2: JLP; cmp qword ptr [rbp - 0x10a8], -1 ; je 0x57426
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
00052e3e: JLP; mov rax, qword ptr [rbp - 0x1070] ; lea rdx, [rax + 4] ; mov eax, dword ptr [rax + 4] ; mov qword ptr [rbp - 0x1070], rdx ; lea edx, [rax - 0x20] ; mov dword ptr [rbp - 0x10c0], eax ; xor eax, eax ; cmp edx, 0x5a ; ja 0x52e79
read: eax edx rdx rflags 
write: eax edx rax rdx rflags 
--------------------------------------------------------------------------------
00052e8c: JLP; mov rax, qword ptr [rbp - 0x1070] ; lea rdx, [rax + 4] ; mov eax, dword ptr [rax + 4] ; mov qword ptr [rbp - 0x1070], rdx ; mov qword ptr [rbp - 0x1000], rdx ; sub eax, 0x30 ; cmp eax, 9 ; jbe 0x5729b
read: eax rdx rflags 
write: eax rax rdx rflags 
--------------------------------------------------------------------------------
00052f6e: JLP; mov rdi, qword ptr [rbp - 0x1178] ; mov qword ptr [rbp - 0x1188], r10 ; call 0x1fb69
read: r10 rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000531b7: JLP; mov rax, qword ptr [r14 + 0xa0] ; test rax, rax ; je 0x57587
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000532bd: JLP; cmp dword ptr [rbp - 0x10e0], 0 ; mov edx, dword ptr [rbx] ; je 0x57565
read: rflags 
write: edx rflags 
--------------------------------------------------------------------------------
000535e7: JLP; mov dword ptr [rbp - 0x1104], 0xa ; cmp dword ptr [rbp - 0x10e0], 0 ; mov edx, dword ptr [rbx] ; je 0x55f21
read: rflags 
write: edx rflags 
--------------------------------------------------------------------------------
0005363e: JLP; mov dword ptr [rbp - 0x1104], 8 ; jmp 0x535f1
read: 
write: 
--------------------------------------------------------------------------------
0005364e: JLP; mov dword ptr [rbp - 0x1104], 0x10 ; jmp 0x535f1
read: 
write: 
--------------------------------------------------------------------------------
0005365e: JLP; lea rsi, [rbp - 0x1000] ; xor eax, eax ; mov ecx, 5 ; movzx edx, byte ptr [rbp - 0x10e0] ; mov rdi, rsi ; rep stosd dword ptr [rdi], eax ; mov eax, dword ptr [rbp - 0x10d8] ; movzx ecx, byte ptr [rbp - 0x1100] ; mov edi, dword ptr [rbp - 0x1104] ; and edx, 1 ; shl edx, 2 ; mov dword ptr [rbp - 0x1000], eax ; mov eax, dword ptr [rbp - 0x10d0] ; and ecx, 1 ; add ecx, ecx
read: eax ecx edx rcx rdi rflags rsi 
write: eax ecx edi edx rcx rdi rflags rsi 
--------------------------------------------------------------------------------
000537a6: JLP; lea rsi, [rbp - 0x1000] ; xor eax, eax ; mov ecx, 5 ; movzx edx, byte ptr [rbp - 0x10e0] ; mov rdi, rsi ; rep stosd dword ptr [rdi], eax ; mov eax, dword ptr [rbp - 0x10d8] ; movzx ecx, byte ptr [rbp - 0x1100] ; mov edi, dword ptr [rbp - 0x1104] ; and edx, 1 ; mov byte ptr [rbp - 0xff3], 4 ; shl edx, 2 ; mov dword ptr [rbp - 0x1000], eax ; mov eax, dword ptr [rbp - 0x10d0] ; and ecx, 1
read: eax ecx edx rcx rdi rflags rsi 
write: eax ecx edi edx rcx rdi rflags rsi 
--------------------------------------------------------------------------------
000538bc: JLP; mov edx, dword ptr [rbx] ; cmp edx, 0x30 ; jae 0x56632
read: edx rflags 
write: edx rflags 
--------------------------------------------------------------------------------
00053919: JLP; test byte ptr [r14 + 0x74], 4 ; je 0x5392d
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
00053968: JLP; mov edi, dword ptr [rbp - 0x1080] ; lea rsi, [rbp - 0xfd0] ; mov edx, 0xfa0 ; call 0x8552c
read: rip rsp 
write: edi edx rsi rsp 
--------------------------------------------------------------------------------
00053c57: JLP; mov dword ptr [rbp - 0x1148], 0xa ; movsxd rax, dword ptr [rbp - 0x10ac] ; imul rax, rax, 0x48 ; add rax, qword ptr [rbp - 0x1098] ; je 0x568a1
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
00054285: JLP; mov dword ptr [rbp - 0x1148], 8 ; jmp 0x53c61
read: 
write: 
--------------------------------------------------------------------------------
00054298: JLP; mov dword ptr [rbp - 0x1148], 0x10 ; jmp 0x53c61
read: 
write: 
--------------------------------------------------------------------------------
000542ab: JLP; movsxd rsi, dword ptr [rbp - 0x10ac] ; imul rsi, rsi, 0x48 ; add rsi, qword ptr [rbp - 0x1098] ; je 0x5789a
read: rflags rsi 
write: rflags rsi 
--------------------------------------------------------------------------------
00054324: JLP; movsxd rsi, dword ptr [rbp - 0x10ac] ; imul rsi, rsi, 0x48 ; add rsi, qword ptr [rbp - 0x1098] ; je 0x56404
read: rflags rsi 
write: rflags rsi 
--------------------------------------------------------------------------------
0005436b: JLP; mov edx, dword ptr [rbx] ; cmp edx, 0x30 ; jae 0x56860
read: edx rflags 
write: edx rflags 
--------------------------------------------------------------------------------
0005438d: JLP; cmp dword ptr [rbp - 0x1140], 0 ; jne 0x54f97
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000544fe: JLP; cmp dword ptr [rbp - 0x10e0], 0 ; jne 0x54671
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
00054675: JLP; mov r8d, dword ptr [rbp - 0x10d0] ; sub r8d, 1 ; cmp dword ptr [rbp - 0x10c8], 0 ; jne 0x546f3
read: r8d rflags 
write: r8d rflags 
--------------------------------------------------------------------------------
000547df: JLP; test byte ptr [r14 + 0x74], 4 ; je 0x547f3
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
0005483e: JLP; mov edi, dword ptr [rbp - 0x1080] ; lea rsi, [rbp - 0xfd0] ; mov edx, 0xfa0 ; call 0x8552c
read: rip rsp 
write: edi edx rsi rsp 
--------------------------------------------------------------------------------
00054acd: JLP; mov rax, qword ptr [r14 + 0xa0] ; test rax, rax ; je 0x567c8
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
00054b19: JLP; movsxd rax, dword ptr [rbp - 0x10ac] ; imul rax, rax, 0x48 ; add rax, qword ptr [rbp - 0x1098] ; je 0x56555
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
00054b76: JLP; cmp dword ptr [rbp - 0x10c0], 0 ; jne 0x5305a
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
00054b9a: JLP; movsxd rax, dword ptr [rbp - 0x10ac] ; imul rax, rax, 0x48 ; add rax, qword ptr [rbp - 0x1098] ; je 0x567e7
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
00054bce: JLP; movsxd r13, dword ptr [rbp - 0x10ac] ; imul r13, r13, 0x48 ; add r13, qword ptr [rbp - 0x1098] ; mov rsi, qword ptr [r13 + 0x38] ; mov qword ptr [rbp - 0x1120], r13 ; lea rax, [rsi*8 + 0x1e] ; and rax, 0xfffffffffffffff0 ; sub rsp, rax ; xor eax, eax ; lea rdx, [rsp + 0xf] ; and rdx, 0xfffffffffffffff0 ; jmp 0x54c26
read: eax r13 rax rdx rsp 
write: eax r13 rax rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00054f33: JLP; movsxd rax, dword ptr [rbp - 0x10ac] ; imul rax, rax, 0x48 ; add rax, qword ptr [rbp - 0x1098] ; je 0x5682a
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
00054f9b: JLP; mov r13d, dword ptr [rbp - 0x1120] ; sub r13d, 1 ; cmp dword ptr [rbp - 0x1150], 0 ; jne 0x5500b
read: r13d rflags 
write: r13d rflags 
--------------------------------------------------------------------------------
0005832b: JLP; or dword ptr [rbp - 0x218], 1 ; movzx ebx, byte ptr [rdx + 1] ; test bl, bl ; je 0x5d3ce
read: bl rflags 
write: ebx rflags 
--------------------------------------------------------------------------------
0005840e: JLP; movzx ebx, byte ptr [rdx + 1] ; mov eax, ebx ; and eax, 0xfffffff7 ; cmp al, 0x53 ; je 0x5885b
read: al eax ebx rflags 
write: eax ebx rflags 
--------------------------------------------------------------------------------
00058691: JLP; mov ebx, dword ptr [rbp - 0x218] ; and ebx, 1 ; je 0x59ec4
read: ebx rflags 
write: ebx rflags 
--------------------------------------------------------------------------------
000587f1: JLP; movzx ebx, byte ptr [rdx + 1] ; cmp bl, 0x6c ; je 0x5accb
read: bl rflags 
write: ebx rflags 
--------------------------------------------------------------------------------
00058811: JLP; movzx ebx, byte ptr [rdx + 1] ; cmp bl, 0x6c ; je 0x5acb7
read: bl rflags 
write: ebx rflags 
--------------------------------------------------------------------------------
0005882e: JLP; movzx ebx, byte ptr [rdx + 1] ; cmp bl, 0x68 ; je 0x5ace2
read: bl rflags 
write: ebx rflags 
--------------------------------------------------------------------------------
0005884b: JLP; or dword ptr [rbp - 0x218], 3 ; movzx ebx, byte ptr [rdx + 1] ; jmp 0x58336
read: 
write: ebx rflags 
--------------------------------------------------------------------------------
00058879: JLP; and dword ptr [rbp - 0x218], 0xfffffff9 ; or dword ptr [rbp - 0x218], 0x1001 ; mov r11d, 0x10 ; cmp r14d, -1 ; je 0x58b63
read: r14d rflags 
write: r11d rflags 
--------------------------------------------------------------------------------
00058b4c: JLP; or dword ptr [rbp - 0x218], 0x40 ; cmp r14d, -1 ; mov r11d, 0xa ; jne 0x5889a
read: r14d rflags 
write: r11d rflags 
--------------------------------------------------------------------------------
00058bcc: JLP; test byte ptr [rbp - 0x218], 1 ; je 0x59c7c
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
00058bdd: JLP; mov r13d, dword ptr [rbp - 0x218] ; and r13d, 8 ; je 0x599a1
read: r13d rflags 
write: r13d rflags 
--------------------------------------------------------------------------------
00058cde: JLP; test byte ptr [rbp - 0x218], 1 ; je 0x59a62
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
00058cef: JLP; mov esi, dword ptr [rbp - 0x1e8] ; mov ebx, dword ptr [rbp - 0x218] ; mov eax, 1 ; cmp esi, -1 ; cmovne eax, esi ; and ebx, 8 ; mov dword ptr [rbp - 0x1e8], eax ; je 0x597a1
read: eax ebx esi rflags 
write: eax ebx esi rflags 
--------------------------------------------------------------------------------
00058e29: JLP; xor r8d, r8d ; test byte ptr [rbp - 0x218], 8 ; jne 0x58122
read: r8d rflags 
write: r8d rflags 
--------------------------------------------------------------------------------
00058e87: JLP; or dword ptr [rbp - 0x218], 0x40 ; xor r11d, r11d ; jmp 0x58890
read: r11d 
write: r11d rflags 
--------------------------------------------------------------------------------
00058e9a: JLP; cmp r14d, -1 ; je 0x5a06e
read: r14d rflags 
write: rflags 
--------------------------------------------------------------------------------
0005915c: JLP; cmp r14d, -1 ; je 0x5a083
read: r14d rflags 
write: rflags 
--------------------------------------------------------------------------------
00059788: JLP; mov r13, rdx ; jmp 0x58336
read: rdx 
write: r13 
--------------------------------------------------------------------------------
00059794: JLP; mov r11d, 8 ; nop ; jmp 0x58890
read: 
write: r11d 
--------------------------------------------------------------------------------
0005a064: JLP; mov ebx, 2 ; jmp 0x583a4
read: 
write: ebx 
--------------------------------------------------------------------------------
00061448: JLP; or dword ptr [rbp - 0x148], 1 ; mov r12d, dword ptr [rcx + 4] ; test r12d, r12d ; je 0x673cb
read: r12d rflags 
write: r12d rflags 
--------------------------------------------------------------------------------
000614ab: JLP; mov r12d, dword ptr [rcx + 4] ; mov eax, r12d ; and eax, 0xfffffff7 ; cmp eax, 0x53 ; je 0x624f6
read: eax r12d rflags 
write: eax r12d rflags 
--------------------------------------------------------------------------------
000615f2: JLP; or dword ptr [rbp - 0x148], 0x40 ; mov r8d, 0xa ; cmp r13d, -1 ; je 0x618ed
read: r13d rflags 
write: r8d rflags 
--------------------------------------------------------------------------------
000618cc: JLP; and dword ptr [rbp - 0x148], 0xfffffff9 ; or dword ptr [rbp - 0x148], 0x1001 ; cmp r13d, -1 ; mov r8d, 0x10 ; jne 0x61609
read: r13d rflags 
write: r8d rflags 
--------------------------------------------------------------------------------
00061a30: JLP; mov eax, dword ptr [rbp - 0x148] ; mov r12, qword ptr [rbp - 0x170] ; and eax, 1 ; mov dword ptr [rbp - 0x160], eax ; mov eax, dword ptr [rbp - 0x148] ; je 0x629ac
read: eax rflags 
write: eax r12 rflags 
--------------------------------------------------------------------------------
00061c97: JLP; mov r12d, dword ptr [rcx + 4] ; cmp r12d, 0x6c ; je 0x63732
read: r12d rflags 
write: r12d rflags 
--------------------------------------------------------------------------------
00061cb8: JLP; mov r12d, dword ptr [rcx + 4] ; cmp r12d, 0x6c ; je 0x63717
read: r12d rflags 
write: r12d rflags 
--------------------------------------------------------------------------------
00061cd6: JLP; mov r12d, dword ptr [rcx + 4] ; cmp r12d, 0x68 ; je 0x636f9
read: r12d rflags 
write: r12d rflags 
--------------------------------------------------------------------------------
00061cf4: JLP; or dword ptr [rbp - 0x148], 3 ; mov r12d, dword ptr [rcx + 4] ; jmp 0x61453
read: 
write: r12d rflags 
--------------------------------------------------------------------------------
00061d43: JLP; mov qword ptr [rbp - 0x168], rcx ; jmp 0x61453
read: rcx 
write: 
--------------------------------------------------------------------------------
00061d53: JLP; test byte ptr [rbp - 0x148], 1 ; je 0x62a8e
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
00061d64: JLP; mov r12d, dword ptr [rbp - 0x148] ; and r12d, 8 ; jne 0x61e38
read: r12d rflags 
write: r12d rflags 
--------------------------------------------------------------------------------
00061ff3: JLP; test byte ptr [rbp - 0x148], 1 ; je 0x62d08
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
00062004: JLP; mov r12d, dword ptr [rbp - 0x148] ; cmp ebx, -1 ; mov eax, 1 ; cmove ebx, eax ; and r12d, 8 ; jne 0x620f0
read: eax ebx r12d rflags 
write: eax ebx r12d rflags 
--------------------------------------------------------------------------------
000621f7: JLP; or dword ptr [rbp - 0x148], 0x40 ; xor r8d, r8d ; jmp 0x615ff
read: r8d 
write: r8d rflags 
--------------------------------------------------------------------------------
0006220a: JLP; xor esi, esi ; test byte ptr [rbp - 0x148], 8 ; jne 0x611d9
read: esi rflags 
write: esi rflags 
--------------------------------------------------------------------------------
00062268: JLP; cmp r13d, -1 ; je 0x63050
read: r13d rflags 
write: rflags 
--------------------------------------------------------------------------------
000622d0: JLP; cmp r13d, -1 ; je 0x63034
read: r13d rflags 
write: rflags 
--------------------------------------------------------------------------------
000624eb: JLP; mov r8d, 8 ; jmp 0x615ff
read: 
write: r8d 
--------------------------------------------------------------------------------
00062f68: JLP; mov ebx, 2 ; jmp 0x6127c
read: 
write: ebx 
--------------------------------------------------------------------------------
0006a228: JLP; and dword ptr [rbx + 0x74], 0xffffffeb ; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0x6a281
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
0006a38d: JLP; and dword ptr [rbx + 0x74], 0xffffffeb ; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0x6a3e6
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
0006a561: JLP; and dword ptr [rbx + 0x74], 0xffffffeb ; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0x6a5ba
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
0006a6b5: JLP; and dword ptr [rbx + 0x74], 0xffffffeb ; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0x6a70e
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
0006a9f8: JLP; lea rdi, [rip + 0xc5900] ; lea rsi, [rip + 0xc5916] ; mov ecx, 8 ; nop ; mov edx, dword ptr [rbp + 8] ; test edx, edx ; jle 0x6ab8c
read: edx rflags 
write: ecx edx rdi rflags rsi 
--------------------------------------------------------------------------------
0006aac0: JLP; mov ecx, 2 ; lea rdi, [rip + 0xc57e6] ; lea rsi, [rip + 0xc57e9] ; jmp 0x6aa0c
read: 
write: ecx rdi rsi 
--------------------------------------------------------------------------------
0006aae0: JLP; mov ecx, 6 ; lea rdi, [rip + 0xc5632] ; lea rsi, [rip + 0xc5649] ; jmp 0x6aa0c
read: 
write: ecx rdi rsi 
--------------------------------------------------------------------------------
0006ab00: JLP; mov ecx, 6 ; lea rdi, [rip + 0xc5578] ; lea rsi, [rip + 0xc5589] ; jmp 0x6aa0c
read: 
write: ecx rdi rsi 
--------------------------------------------------------------------------------
0006ab20: JLP; mov ecx, 8 ; lea rdi, [rip + 0xc58bd] ; lea rsi, [rip + 0xc58c9] ; jmp 0x6aa0c
read: 
write: ecx rdi rsi 
--------------------------------------------------------------------------------
0006ab40: JLP; mov ecx, 2 ; lea rdi, [rip + 0xc56bf] ; lea rsi, [rip + 0xc56c9] ; jmp 0x6aa0c
read: 
write: ecx rdi rsi 
--------------------------------------------------------------------------------
0006ab60: JLP; mov ecx, 3 ; lea rdi, [rip + 0xc56d6] ; lea rsi, [rip + 0xc56e9] ; jmp 0x6aa0c
read: 
write: ecx rdi rsi 
--------------------------------------------------------------------------------
0006ab80: JLP; mov edx, dword ptr [rbp + 8] ; nop word ptr [rax + rax] ; cmp edx, -3 ; je 0x6ace4
read: edx rflags 
write: edx rflags 
--------------------------------------------------------------------------------
0006af38: JLP; or byte ptr [rbx + 0xd], 8 ; lea rdi, [rdx + 1] ; mov qword ptr [rsp + 8], rdi ; movzx eax, byte ptr [rdx + 1] ; mov rdx, rdi ; test al, al ; jne 0x6af1c
read: al rdi rflags 
write: eax rdi rdx rflags 
--------------------------------------------------------------------------------
0006af54: JLP; test byte ptr [rbx + 0xc], 0x20 ; je 0x6af61
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
0006aff0: JLP; mov dword ptr [rbx + 0x10], 0x30 ; jmp 0x6af3c
read: 
write: 
--------------------------------------------------------------------------------
0006b000: JLP; or byte ptr [rbx + 0xc], 0x20 ; jmp 0x6af3c
read: 
write: rflags 
--------------------------------------------------------------------------------
0006b010: JLP; or byte ptr [rbx + 0xc], 0x40 ; jmp 0x6af3c
read: 
write: rflags 
--------------------------------------------------------------------------------
0006b020: JLP; or byte ptr [rbx + 0xc], 0x80 ; jmp 0x6af3c
read: 
write: rflags 
--------------------------------------------------------------------------------
0006b030: JLP; or byte ptr [rbx + 0xc], 8 ; jmp 0x6af3c
read: 
write: rflags 
--------------------------------------------------------------------------------
0006b040: JLP; or byte ptr [rbx + 0xc], 0x10 ; jmp 0x6af3c
read: 
write: rflags 
--------------------------------------------------------------------------------
0006b050: JLP; or byte ptr [rbx + 0xc], 4 ; lea rax, [rdx + 2] ; mov rdx, rcx ; mov qword ptr [rsp + 8], rax ; movzx eax, byte ptr [rdx] ; cmp qword ptr [rip + 0x303459], 0 ; mov dword ptr [rbx + 0x40], 0xffffffff ; movzx edx, al ; mov dword ptr [rbx + 8], edx ; jne 0x6b4b1
read: al edx rax rcx rflags 
write: eax edx rax rdx rflags 
--------------------------------------------------------------------------------
0006b1e0: JLP; mov rdx, rcx ; or byte ptr [rbx + 0xc], 1 ; lea rax, [rdx + 1] ; jmp 0x6b05b
read: rcx 
write: rax rdx rflags 
--------------------------------------------------------------------------------
0006b1f8: JLP; or byte ptr [rbx + 0xc], 4 ; cmp byte ptr [rdx + 1], 0x6c ; jne 0x6b054
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
0006b210: JLP; cmp byte ptr [rdx + 1], 0x68 ; je 0x6b328
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
0006b280: JLP; mov rax, rcx ; jmp 0x6b05b
read: rcx 
write: rax 
--------------------------------------------------------------------------------
0006b690: JLP; or byte ptr [rbx + 0xd], 8 ; nop dword ptr [rax + rax] ; mov eax, dword ptr [rdx + 4] ; lea rcx, [rdx + 4] ; test eax, eax ; je 0x6b77c
read: eax rflags 
write: eax rcx rflags 
--------------------------------------------------------------------------------
0006b6bd: JLP; mov qword ptr [rsp + 8], rdi ; test byte ptr [rbx + 0xc], 0x20 ; je 0x6b6cf
read: rdi rflags 
write: rflags 
--------------------------------------------------------------------------------
0006b760: JLP; mov dword ptr [rbx + 0x10], 0x30 ; mov eax, dword ptr [rdx + 4] ; lea rcx, [rdx + 4] ; test eax, eax ; jne 0x6b6ab
read: eax rflags 
write: eax rcx rflags 
--------------------------------------------------------------------------------
0006b790: JLP; or byte ptr [rbx + 0xc], 0x20 ; jmp 0x6b69c
read: 
write: rflags 
--------------------------------------------------------------------------------
0006b7a0: JLP; or byte ptr [rbx + 0xc], 0x40 ; jmp 0x6b69c
read: 
write: rflags 
--------------------------------------------------------------------------------
0006b7b0: JLP; or byte ptr [rbx + 0xc], 0x80 ; jmp 0x6b69c
read: 
write: rflags 
--------------------------------------------------------------------------------
0006b7c0: JLP; or byte ptr [rbx + 0xc], 8 ; jmp 0x6b69c
read: 
write: rflags 
--------------------------------------------------------------------------------
0006b7d0: JLP; or byte ptr [rbx + 0xc], 0x10 ; jmp 0x6b69c
read: 
write: rflags 
--------------------------------------------------------------------------------
0006b7e0: JLP; or byte ptr [rbx + 0xc], 4 ; lea rax, [rdx + 8] ; mov edx, dword ptr [rdx + 4] ; cmp qword ptr [rip + 0x302cd1], 0 ; mov qword ptr [rsp + 8], rax ; mov dword ptr [rbx + 8], edx ; mov dword ptr [rbx + 0x40], 0xffffffff ; jne 0x6bc14
read: edx rax rflags 
write: edx rax rflags 
--------------------------------------------------------------------------------
0006b910: JLP; cmp dword ptr [rdx + 4], 0x68 ; je 0x6bb9a
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
0006b930: JLP; or byte ptr [rbx + 0xc], 4 ; mov ecx, dword ptr [rdx + 4] ; cmp ecx, 0x6c ; je 0x6b8f4
read: ecx rflags 
write: ecx rflags 
--------------------------------------------------------------------------------
0006b950: JLP; mov dword ptr [rbx + 0x34], 3 ; nop dword ptr [rax + rax] ; cmp dword ptr [rbx + 0x30], -1 ; je 0x6b9ac
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
0006b998: JLP; cmp dword ptr [rbx + 0x30], -1 ; mov dword ptr [rbx + 0x34], 5 ; jne 0x6b962
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
0006b9f0: JLP; mov dword ptr [rbx + 0x34], 0x800 ; jmp 0x6b95c
read: 
write: 
--------------------------------------------------------------------------------
0006ba00: JLP; mov dword ptr [rbx + 0x34], 1 ; jmp 0x6b95c
read: 
write: 
--------------------------------------------------------------------------------
0006ba10: JLP; movzx eax, byte ptr [rbx + 0xc] ; test al, 4 ; je 0x6bb49
read: al rflags 
write: al eax rflags 
--------------------------------------------------------------------------------
0006ba30: JLP; mov dword ptr [rbx + 0x34], 4 ; jmp 0x6b95c
read: 
write: 
--------------------------------------------------------------------------------
0006ba40: JLP; mov dword ptr [rbx + 0x34], 2 ; jmp 0x6b95c
read: 
write: 
--------------------------------------------------------------------------------
0006ba50: JLP; movzx eax, byte ptr [rbx + 0xc] ; and eax, 1 ; cmp al, 1 ; sbb eax, eax ; xor al, al ; add eax, 0x107 ; mov dword ptr [rbx + 0x34], eax ; jmp 0x6b95c
read: al eax rflags 
write: al eax rflags 
--------------------------------------------------------------------------------
0006bac0: JLP; mov edx, edi ; mov rax, rsi ; jmp 0x6b7eb
read: edi rsi 
write: edx rax 
--------------------------------------------------------------------------------
0006baf0: JLP; mov qword ptr [rbx + 0x38], 0 ; jmp 0x6b95c
read: 
write: 
--------------------------------------------------------------------------------
0006c193: JLP; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0x6c1e8
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
0006c555: JLP; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0x6c5aa
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
0006c74e: JLP; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0x6c7a3
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
0006c90b: JLP; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0x6c960
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
0006ce8c: JLP; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0x6cee1
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
0006d00d: JLP; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0x6d062
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
0006d1ac: JLP; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0x6d201
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
0006d340: JLP; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0x6d395
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
0006d5cd: JLP; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0x6d622
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
0006d903: JLP; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0x6d958
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
0006dcd7: JLP; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0x6dd2c
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
0006e640: JLP; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0x6e695
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
0006e86d: JLP; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0x6e8c2
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
0006ea1d: JLP; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0x6ea72
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
0006eb9a: JLP; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0x6ebef
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
0006eda2: JLP; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0x6edf7
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
0006f159: JLP; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0x6f1ae
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
0006f318: JLP; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0x6f36d
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
0006f4c2: JLP; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0x6f517
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
0006f6ce: JLP; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0x6f723
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
0006f8d7: JLP; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0x6f92c
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
0006fe74: JLP; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0x6fec9
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
00070040: JLP; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0x70095
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
00070206: JLP; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0x7025b
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
00072750: JLP; test dword ptr [rbp], 0x8000 ; mov rsi, rax ; jne 0x727a6
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
0007451a: JLP; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0x7456f
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
00074819: JLP; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0x7486e
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
00074969: JLP; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0x749be
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
00074aaf: JLP; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0x74b04
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
00074c0a: JLP; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0x74c5f
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
00074f3a: JLP; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0x74f8f
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
00075073: JLP; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0x750c8
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
00075a09: JLP; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0x75a5e
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
00075ba0: JLP; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0x75bf5
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
00075ea9: JLP; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0x75efe
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
0007696e: JLP; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0x769c3
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
000789cd: JLP; test dword ptr [rbp], 0x8000 ; mov rsi, rax ; jne 0x78a23
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
00080750: JLP; xor edx, edx ; cmp ebx, 0xa0 ; ja 0x8079c
read: ebx edx rflags 
write: edx rflags 
--------------------------------------------------------------------------------
00080780: JLP; test ebx, ebx ; jle 0x808bc
read: ebx rflags 
write: rflags 
--------------------------------------------------------------------------------
000807e8: JLP; test ebx, ebx ; mov edx, 1 ; jle 0x8079c
read: ebx rflags 
write: edx rflags 
--------------------------------------------------------------------------------
00080800: JLP; mov dword ptr [rip + 0x2e8962], ebx ; mov dword ptr [rip + 0x2e8960], 1 ; mov edx, 1 ; jmp 0x8079c
read: ebx 
write: edx 
--------------------------------------------------------------------------------
00080820: JLP; xor edx, edx ; cmp ebx, 0x2000000 ; ja 0x8079c
read: ebx edx rflags 
write: edx rflags 
--------------------------------------------------------------------------------
00080850: JLP; mov qword ptr [rip + 0x2e88ed], rbx ; mov dword ptr [rip + 0x2e890f], 1 ; mov edx, 1 ; jmp 0x8079c
read: rbx 
write: edx 
--------------------------------------------------------------------------------
00080870: JLP; mov qword ptr [rip + 0x2e88c5], rbx ; mov dword ptr [rip + 0x2e88ef], 1 ; mov edx, 1 ; jmp 0x8079c
read: rbx 
write: edx 
--------------------------------------------------------------------------------
00080890: JLP; mov dword ptr [rip + 0x2eafc2], ebx ; mov edx, 1 ; jmp 0x8079c
read: ebx 
write: edx 
--------------------------------------------------------------------------------
000808a8: JLP; mov dword ptr [rip + 0x2e887e], ebx ; mov edx, 1 ; jmp 0x8079c
read: ebx 
write: edx 
--------------------------------------------------------------------------------
00080ae3: JLP; lea rsi, [rip + 0xb50e5] ; mov edx, 6 ; mov rdi, r14 ; add rbp, 0xe ; call 0x88bbc
read: r14 rbp rip rsp 
write: edx rbp rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00080b0e: JLP; mov rax, qword ptr [rip + 0x2e830f] ; mov r9d, dword ptr [rax] ; test r9d, r9d ; jne 0x809aa
read: r9d rflags 
write: r9d rax rflags 
--------------------------------------------------------------------------------
00080b8e: JLP; mov rax, qword ptr [rip + 0x2e828f] ; mov r10d, dword ptr [rax] ; test r10d, r10d ; jne 0x809aa
read: r10d rflags 
write: r10d rax rflags 
--------------------------------------------------------------------------------
00080c17: JLP; mov rax, qword ptr [rip + 0x2e8206] ; mov r11d, dword ptr [rax] ; test r11d, r11d ; jne 0x809aa
read: r11d rflags 
write: r11d rax rflags 
--------------------------------------------------------------------------------
00080c97: JLP; mov rax, qword ptr [rip + 0x2e8186] ; mov eax, dword ptr [rax] ; test eax, eax ; jne 0x809aa
read: eax rflags 
write: eax rax rflags 
--------------------------------------------------------------------------------
000817ba: JLP; mov r12, r14 ; shr r12, 0xf ; cmp r12, 4 ; ja 0x817e3
read: r12 r14 rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
000817e7: JLP; mov rax, r14 ; mov ecx, 0x7e ; shr rax, 0x12 ; lea edx, [rax + 0x7c] ; cmp rax, 2 ; cmova edx, ecx ; mov dword ptr [rsp + 0x10], edx ; jmp 0x815c1
read: ecx edx r14 rax rflags 
write: ecx edx rax rflags 
--------------------------------------------------------------------------------
00081bb8: JLP; test rcx, rcx ; je 0x81bab
read: rcx rflags 
write: rflags 
--------------------------------------------------------------------------------
0008e870: JLP; mov rax, qword ptr [rsi] ; sub rdi, 0x18 ; sub rsi, 0x10 ; mov rcx, qword ptr [rsi + 0x18] ; add rdx, 2 ; mov qword ptr [rdi + 0x18], rax ; nop dword ptr [rax + rax] ; mov rax, qword ptr [rsi + 0x20] ; mov qword ptr [rdi + 0x20], rcx ; mov rcx, qword ptr [rsi + 0x28] ; mov qword ptr [rdi + 0x28], rax ; mov rax, qword ptr [rsi + 0x30] ; mov qword ptr [rdi + 0x30], rcx ; mov rcx, qword ptr [rsi + 0x38] ; add rdi, 0x40
read: rax rcx rdi rdx rsi 
write: rax rcx rdi rdx rflags rsi 
--------------------------------------------------------------------------------
0008e8e8: JLP; test rdx, rdx ; je 0x8e9bf
read: rdx rflags 
write: rflags 
--------------------------------------------------------------------------------
0008e900: JLP; sub rdx, 1 ; mov rcx, qword ptr [rsi] ; je 0x8e9bc
read: rdx rflags 
write: rcx rdx rflags 
--------------------------------------------------------------------------------
0008e920: JLP; mov rax, qword ptr [rsi] ; add rdx, 6 ; sub rsi, 0x30 ; sub rdi, 0x38 ; jmp 0x8e8a4
read: rdi rdx rsi 
write: rax rdi rdx rflags rsi 
--------------------------------------------------------------------------------
0008e940: JLP; mov rcx, qword ptr [rsi] ; add rdx, 5 ; sub rsi, 0x28 ; sub rdi, 0x30 ; jmp 0x8e89c
read: rdi rdx rsi 
write: rcx rdi rdx rflags rsi 
--------------------------------------------------------------------------------
0008e960: JLP; mov rax, qword ptr [rsi] ; add rdx, 4 ; sub rsi, 0x20 ; sub rdi, 0x28 ; jmp 0x8e894
read: rdi rdx rsi 
write: rax rdi rdx rflags rsi 
--------------------------------------------------------------------------------
0008e980: JLP; mov rcx, qword ptr [rsi] ; add rdx, 3 ; sub rsi, 0x18 ; sub rdi, 0x20 ; jmp 0x8e88c
read: rdi rdx rsi 
write: rcx rdi rdx rflags rsi 
--------------------------------------------------------------------------------
0008e9a0: JLP; mov rcx, qword ptr [rsi] ; add rdx, 1 ; sub rsi, 8 ; sub rdi, 0x10 ; jmp 0x8e8cc
read: rdi rdx rsi 
write: rcx rdi rdx rflags rsi 
--------------------------------------------------------------------------------
0008eb30: JLP; lea r8, [rsi - 0x30] ; mov rsi, qword ptr [rsi - 8] ; sub rdi, 0x28 ; mov rcx, rdi ; add rdx, 2 ; mov rax, r8 ; mov r9, qword ptr [rax + 0x20] ; mov qword ptr [rcx + 0x20], rsi ; nop word ptr [rax + rax] ; mov rsi, qword ptr [rax + 0x18] ; mov qword ptr [rcx + 0x18], r9 ; mov r9, qword ptr [rax + 0x10] ; mov qword ptr [rcx + 0x10], rsi ; mov rsi, qword ptr [rax + 8] ; sub rdx, 8
read: r8 r9 rdi rdx rsi 
write: r8 r9 rax rcx rdi rdx rflags rsi 
--------------------------------------------------------------------------------
0008ebb0: JLP; test rdx, rdx ; je 0x8ec20
read: rdx rflags 
write: rflags 
--------------------------------------------------------------------------------
0008ebd0: JLP; sub rdi, 0x40 ; sub rdx, 1 ; mov r9, qword ptr [rsi - 8] ; je 0x8ec1c
read: rdi rdx rflags 
write: r9 rdi rdx rflags 
--------------------------------------------------------------------------------
0008ebf0: JLP; lea rax, [rsi - 0x10] ; lea rcx, [rdi - 8] ; mov rsi, qword ptr [rsi - 8] ; add rdx, 6 ; mov rdi, rcx ; mov r8, rax ; sub rdx, 8 ; mov r9, qword ptr [r8] ; mov qword ptr [rdi], rsi ; lea rdi, [rcx - 0x40] ; jne 0x8eb80
read: rax rcx rdx rflags rsi 
write: r8 r9 rax rcx rdi rdx rflags rsi 
--------------------------------------------------------------------------------
0008ec30: JLP; lea r8, [rsi - 0x18] ; sub rdi, 0x10 ; mov r9, qword ptr [rsi - 8] ; add rdx, 5 ; mov rcx, rdi ; mov rax, r8 ; jmp 0x8eb64
read: r8 rdi rdx 
write: r8 r9 rax rcx rdi rdx rflags 
--------------------------------------------------------------------------------
0008ec50: JLP; lea r8, [rsi - 0x20] ; sub rdi, 0x18 ; mov rsi, qword ptr [rsi - 8] ; add rdx, 4 ; mov rcx, rdi ; mov rax, r8 ; jmp 0x8eb5c
read: r8 rdi rdx 
write: r8 rax rcx rdi rdx rflags rsi 
--------------------------------------------------------------------------------
0008ec70: JLP; lea r8, [rsi - 0x28] ; sub rdi, 0x20 ; mov r9, qword ptr [rsi - 8] ; add rdx, 3 ; mov rcx, rdi ; mov rax, r8 ; jmp 0x8eb54
read: r8 rdi rdx 
write: r8 r9 rax rcx rdi rdx rflags 
--------------------------------------------------------------------------------
0008ec90: JLP; lea r8, [rsi - 0x38] ; sub rdi, 0x30 ; mov r9, qword ptr [rsi - 8] ; add rdx, 1 ; mov rcx, rdi ; mov rax, r8 ; jmp 0x8eb9a
read: r8 rdi rdx 
write: r8 r9 rax rcx rdi rdx rflags 
--------------------------------------------------------------------------------
0008eda4: JLP; mov ecx, eax ; mov rsi, rbx ; mov r13, qword ptr [r10 + 0x18] ; shl r11, cl ; mov ecx, r8d ; mov r12, rdi ; shr rsi, cl ; mov rbp, r10 ; or r11, rsi ; mov qword ptr [rdi + 0x18], r11 ; nop dword ptr [rax - 0x45] ; mov ecx, eax ; mov r11, r13 ; mov rsi, qword ptr [rbp + 0x10] ; shl rbx, cl
read: cl eax r10 r11 r13 r8d rbx rdi rsi 
write: ecx r11 r12 r13 rbp rbx rflags rsi 
--------------------------------------------------------------------------------
0008edc7: JLP; mov ecx, eax ; mov r11, r13 ; mov rsi, qword ptr [rbp + 0x10] ; shl rbx, cl ; mov ecx, r8d ; shr r11, cl ; or rbx, r11 ; mov qword ptr [r12 + 0x10], rbx ; jmp 0x8ed5d
read: cl eax r11 r13 r8d rbx 
write: ecx r11 rbx rflags rsi 
--------------------------------------------------------------------------------
0008edf0: JLP; lea rbp, [rsi - 0x10] ; lea r12, [rdi - 8] ; mov rsi, qword ptr [rsi] ; mov r11, qword ptr [r9 - 8] ; add rdx, 2 ; mov r10, rbp ; mov rdi, r12 ; jmp 0x8ed7a
read: r12 rbp rdx 
write: r10 r11 r12 rbp rdi rdx rflags rsi 
--------------------------------------------------------------------------------
000934c0: JLP; mov byte ptr [rdi], sil ; add rdi, 1 ; nop dword ptr [rax - 0x45] ; mov rax, rdi ; ret
read: rdi sil 
write: rax rdi rflags 
--------------------------------------------------------------------------------
000934cb: JLP; mov rax, rdi ; ret
read: rdi 
write: rax 
--------------------------------------------------------------------------------
000934d8: JLP; mov eax, dword ptr [rsp + 0x10] ; add rdi, 8 ; mov dword ptr [rdi - 8], eax ; mov eax, dword ptr [rsp + 0x18] ; mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
read: eax rdi 
write: eax rax rdi rflags 
--------------------------------------------------------------------------------
000934f8: JLP; mov word ptr [rdi], r9w ; add rdi, 2 ; mov rax, rdi ; ret
read: r9w rdi 
write: rax rdi rflags 
--------------------------------------------------------------------------------
00093510: JLP; mov word ptr [rdi], r9w ; mov byte ptr [rdi + 2], dl ; add rdi, 3 ; mov rax, rdi ; ret
read: dl r9w rdi 
write: rax rdi rflags 
--------------------------------------------------------------------------------
00093528: JLP; mov eax, dword ptr [rsp + 0x10] ; add rdi, 4 ; mov dword ptr [rdi - 4], eax ; mov rax, rdi ; ret
read: eax rdi 
write: eax rax rdi rflags 
--------------------------------------------------------------------------------
00093540: JLP; mov eax, dword ptr [rsp + 0x10] ; mov byte ptr [rdi + 4], cl ; add rdi, 5 ; mov dword ptr [rdi - 5], eax ; mov rax, rdi ; ret
read: cl eax rdi 
write: eax rax rdi rflags 
--------------------------------------------------------------------------------
00093560: JLP; mov eax, dword ptr [rsp + 0x10] ; mov word ptr [rdi + 4], r11w ; add rdi, 6 ; mov dword ptr [rdi - 6], eax ; mov rax, rdi ; ret
read: eax r11w rdi 
write: eax rax rdi rflags 
--------------------------------------------------------------------------------
00093580: JLP; mov eax, dword ptr [rsp + 0x10] ; mov word ptr [rdi + 4], r11w ; add rdi, 7 ; mov byte ptr [rdi - 1], r8b ; mov dword ptr [rdi - 7], eax ; mov rax, rdi ; ret
read: eax r11w r8b rdi 
write: eax rax rdi rflags 
--------------------------------------------------------------------------------
000935c0: JLP; mov byte ptr [rdi], 0 ; nop dword ptr [rax - 0x45] ; mov rax, rdi ; ret
read: rdi 
write: rax 
--------------------------------------------------------------------------------
000935c7: JLP; mov rax, rdi ; ret
read: rdi 
write: rax 
--------------------------------------------------------------------------------
000935d0: JLP; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 4], r8d ; mov rax, rdi ; ret
read: ecx r8d rdi 
write: rax 
--------------------------------------------------------------------------------
000935e0: JLP; mov word ptr [rdi], si ; mov rax, rdi ; ret
read: rdi si 
write: rax 
--------------------------------------------------------------------------------
000935f0: JLP; mov word ptr [rdi], si ; mov byte ptr [rdi + 2], 0 ; mov rax, rdi ; ret
read: rdi si 
write: rax 
--------------------------------------------------------------------------------
00093600: JLP; mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
read: ecx rdi 
write: rax 
--------------------------------------------------------------------------------
00093610: JLP; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], 0 ; mov rax, rdi ; ret
read: ecx rdi 
write: rax 
--------------------------------------------------------------------------------
00093620: JLP; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
read: dx ecx rdi 
write: rax 
--------------------------------------------------------------------------------
00093630: JLP; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; mov rax, rdi ; mov byte ptr [rdi + 6], 0 ; ret
read: dx ecx rdi 
write: rax 
--------------------------------------------------------------------------------
00093670: JLP; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
read: rdi 
write: rax 
--------------------------------------------------------------------------------
00093680: JLP; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 4], r8d ; lea rax, [rdi + 7] ; ret
read: ecx r8d 
write: rax 
--------------------------------------------------------------------------------
00093690: JLP; mov word ptr [rdi], si ; lea rax, [rdi + 1] ; ret
read: si 
write: rax 
--------------------------------------------------------------------------------
000936a0: JLP; mov word ptr [rdi], si ; mov byte ptr [rdi + 2], 0 ; lea rax, [rdi + 2] ; ret
read: si 
write: rax 
--------------------------------------------------------------------------------
000936b0: JLP; mov dword ptr [rdi], ecx ; lea rax, [rdi + 3] ; ret
read: ecx 
write: rax 
--------------------------------------------------------------------------------
000936c0: JLP; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], 0 ; lea rax, [rdi + 4] ; ret
read: ecx 
write: rax 
--------------------------------------------------------------------------------
000936d0: JLP; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; lea rax, [rdi + 5] ; ret
read: dx ecx 
write: rax 
--------------------------------------------------------------------------------
000936e0: JLP; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; lea rax, [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
read: dx ecx 
write: rax 
--------------------------------------------------------------------------------
0009373a: JLP; xor eax, eax ; ret
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
00093784: JLP; ret
read: 
write: 
--------------------------------------------------------------------------------
000938a0: JLP; xor eax, eax ; ret
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
000938ec: JLP; xor eax, eax ; ret
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
00093920: JLP; add rax, 1 ; movzx ecx, byte ptr [rax] ; cmp cl, dil ; je 0x9391c
read: cl dil rax rflags 
write: ecx rax rflags 
--------------------------------------------------------------------------------
00093930: JLP; test cl, cl ; je 0x93971
read: cl rflags 
write: rflags 
--------------------------------------------------------------------------------
00093a10: JLP; cmp dl, r8b ; je 0x93a3c
read: dl r8b rflags 
write: rflags 
--------------------------------------------------------------------------------
00093a2e: JLP; ret
read: 
write: 
--------------------------------------------------------------------------------
000945d0: JLP; xor eax, eax ; test ch, 0xf0 ; je 0x945b6
read: ch eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000945e0: JLP; xor eax, eax ; test ch, 0xf0 ; je 0x945b6
read: ch eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00094600: JLP; xor eax, eax ; test dh, 0xf0 ; je 0x945b6
read: dh eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00094610: JLP; mov eax, ecx ; shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
read: eax ecx rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
00094620: JLP; shr ecx, 0x10 ; movzx edx, cl ; cmp edx, 0xff ; mov eax, edx ; jne 0x945b6
read: cl ecx edx rflags 
write: eax ecx edx rflags 
--------------------------------------------------------------------------------
00094648: JLP; mov eax, ecx ; lea rdx, [rip + 0x9c4cf] ; shr eax, 0xc ; and eax, 0xf ; movsxd rsi, dword ptr [rdx + rax*4] ; add rdx, rsi ; jmp rdx
read: eax ecx rdx rsi 
write: eax rdx rflags rsi 
--------------------------------------------------------------------------------
00094668: JLP; xor eax, eax ; test dh, 0xf0 ; je 0x945b6
read: dh eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00094688: JLP; mov eax, edx ; lea rcx, [rip + 0x9c4cf] ; shr eax, 0xc ; and eax, 0xf ; movsxd rsi, dword ptr [rcx + rax*4] ; add rcx, rsi ; jmp rcx
read: eax edx rcx rsi 
write: eax rcx rflags rsi 
--------------------------------------------------------------------------------
000946a4: JLP; mov eax, 0x10 ; pop rbx ; ret
read: rsp 
write: eax rbx rsp 
--------------------------------------------------------------------------------
000946af: JLP; mov eax, 0x80 ; pop rbx ; ret
read: rsp 
write: eax rbx rsp 
--------------------------------------------------------------------------------
000946ba: JLP; mov eax, 0x60 ; pop rbx ; ret
read: rsp 
write: eax rbx rsp 
--------------------------------------------------------------------------------
000946c5: JLP; mov eax, 0x40 ; pop rbx ; ret
read: rsp 
write: eax rbx rsp 
--------------------------------------------------------------------------------
000946d0: JLP; mov eax, 0x30 ; pop rbx ; ret
read: rsp 
write: eax rbx rsp 
--------------------------------------------------------------------------------
000946db: JLP; mov eax, 0x20 ; pop rbx ; ret
read: rsp 
write: eax rbx rsp 
--------------------------------------------------------------------------------
000946e6: JLP; mov eax, 8 ; pop rbx ; ret
read: rsp 
write: eax rbx rsp 
--------------------------------------------------------------------------------
000946f1: JLP; mov eax, edx ; movzx ecx, dl ; xor edx, edx ; and eax, 0x3ffc0000 ; add eax, eax ; div ecx ; pop rbx ; mov eax, eax ; ret
read: dl eax ecx edx rsp 
write: eax ecx edx rbx rflags rsp 
--------------------------------------------------------------------------------
00094709: JLP; mov eax, ecx ; xor edx, edx ; movzx ecx, cl ; shr eax, 6 ; and eax, 0x3fffc00 ; div ecx ; pop rbx ; mov eax, eax ; ret
read: cl eax ecx edx rsp 
write: eax ecx edx rbx rflags rsp 
--------------------------------------------------------------------------------
000a1cb8: JLP; and dword ptr [rbx + 0x74], 0xffffffeb ; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0xa1d11
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
000a1e1d: JLP; and dword ptr [rbx + 0x74], 0xffffffeb ; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0xa1e76
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
000a1ff1: JLP; and dword ptr [rbx + 0x74], 0xffffffeb ; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0xa204a
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
000a2145: JLP; and dword ptr [rbx + 0x74], 0xffffffeb ; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0xa219e
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
000a6b9e: JLP; xor eax, eax ; add rsp, 0xc8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: eax rsp 
write: eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000a6c38: JLP; movzx eax, byte ptr [rsp + 0x71] ; and eax, 0x18 ; cmp al, 0x10 ; je 0xa6c74
read: al eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000a6c78: JLP; mov rsi, qword ptr [rip + 0x2c080d] ; cmp byte ptr [rsi], 0 ; je 0xa6b9a
read: rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
000a6cc0: JLP; movzx eax, byte ptr [rsp + 0x71] ; and eax, 0x18 ; cmp al, 0x10 ; je 0xa6cfc
read: al eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000a6d00: JLP; mov rsi, qword ptr [rip + 0x2c077d] ; cmp byte ptr [rsi], 0 ; je 0xa6b9a
read: rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
000a7017: JLP; movzx esi, byte ptr [r15] ; mov rdx, r15 ; movsx rax, sil ; test byte ptr [rcx + rax*2 + 1], 0x20 ; jne 0xa7037
read: r15 rflags sil 
write: esi rax rdx rflags 
--------------------------------------------------------------------------------
000a7135: JLP; movzx edx, byte ptr [r15] ; lea rax, [r15 + 1] ; movsx rsi, dl ; test byte ptr [rcx + rsi*2 + 1], 0x20 ; je 0xa7162
read: dl rflags 
write: edx rax rflags rsi 
--------------------------------------------------------------------------------
000a71c8: JLP; movzx eax, byte ptr [r15] ; sub eax, 0x30 ; cmp al, 9 ; ja 0xa6b9a
read: al eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000a71fa: JLP; mov rcx, qword ptr [rsp + 8] ; lea rsi, [rip + 0x8ef0d] ; mov r8, rbp ; mov rdx, r13 ; mov rdi, r15 ; call 0xa69fc
read: r13 r15 rbp rip rsp 
write: r8 rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000a7230: JLP; movzx edx, byte ptr [r15] ; lea rax, [r15 + 1] ; mov rdi, r15 ; movsx rsi, dl ; test byte ptr [rcx + rsi*2 + 1], 0x20 ; je 0xa7260
read: dl r15 rflags 
write: edx rax rdi rflags rsi 
--------------------------------------------------------------------------------
000a72cc: JLP; mov qword ptr [rsp + 0x78], 0 ; movzx eax, byte ptr [r15] ; sub eax, 0x30 ; cmp al, 9 ; ja 0xa6b9a
read: al eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000a7348: JLP; movzx eax, byte ptr [rsp + 0x71] ; and eax, 0x18 ; cmp al, 0x10 ; je 0xa7384
read: al eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000a73c8: JLP; movzx eax, byte ptr [rsp + 0x71] ; xor r8d, r8d ; mov esi, 0xffffffff ; mov qword ptr [rsp + 0x40], r13 ; mov qword ptr [rsp + 0x48], r12 ; mov r12, r15 ; mov qword ptr [rsp + 0x50], rbx ; mov qword ptr [rsp + 0x58], r14 ; mov ebx, esi ; mov r14, r8 ; mov edx, eax ; shr dl, 3 ; mov edi, edx ; and edi, 3 ; mov dword ptr [rsp + 0x20], edi
read: dl eax edi edx esi r12 r13 r14 r15 r8 r8d rbx 
write: dl eax ebx edi edx esi r12 r14 r8d rflags 
--------------------------------------------------------------------------------
000a75f0: JLP; movzx edx, byte ptr [r15] ; movsx rax, dl ; test byte ptr [rcx + rax*2 + 1], 0x20 ; jne 0xa7607
read: dl rflags 
write: edx rax rflags 
--------------------------------------------------------------------------------
000a76a7: JLP; movzx esi, byte ptr [r15] ; mov rdx, r15 ; movsx rax, sil ; test byte ptr [rcx + rax*2 + 1], 0x20 ; jne 0xa76c7
read: r15 rflags sil 
write: esi rax rdx rflags 
--------------------------------------------------------------------------------
000a7748: JLP; movzx edx, byte ptr [r15] ; lea rax, [r15 + 1] ; movsx rsi, dl ; test byte ptr [rcx + rsi*2 + 1], 0x20 ; je 0xa7775
read: dl rflags 
write: edx rax rflags rsi 
--------------------------------------------------------------------------------
000a77e8: JLP; movzx eax, byte ptr [rsp + 0x71] ; and eax, 0x18 ; cmp al, 0x10 ; je 0xa7824
read: al eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000a7840: JLP; movzx esi, byte ptr [r15] ; mov rdx, r15 ; movsx rax, sil ; test byte ptr [rcx + rax*2 + 1], 0x20 ; jne 0xa785f
read: r15 rflags sil 
write: esi rax rdx rflags 
--------------------------------------------------------------------------------
000a78ae: JLP; movzx eax, byte ptr [r15] ; add r15, 1 ; movsx rdx, al ; test byte ptr [rcx + rdx*2 + 1], 0x20 ; je 0xa78d9
read: al r15 rflags 
write: eax r15 rdx rflags 
--------------------------------------------------------------------------------
000a7969: JLP; lea r12, [rax + 2] ; movzx eax, byte ptr [rax + 1] ; sub eax, 0x43 ; cmp al, 0x36 ; ja 0xa6b9a
read: al eax rflags 
write: eax r12 rflags 
--------------------------------------------------------------------------------
000a7993: JLP; movsx rax, byte ptr [r15] ; test byte ptr [rcx + rax*2 + 1], 0x20 ; jne 0xa79af
read: rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000a79cd: JLP; movzx edx, byte ptr [r15] ; lea rax, [r15 + 1] ; movsx rsi, dl ; test byte ptr [rcx + rsi*2 + 1], 0x20 ; je 0xa79fa
read: dl rflags 
write: edx rax rflags rsi 
--------------------------------------------------------------------------------
000a7a70: JLP; lea r12, [rax + 2] ; movzx eax, byte ptr [rax + 1] ; sub eax, 0x48 ; cmp al, 0x31 ; ja 0xa6b9a
read: al eax rflags 
write: eax r12 rflags 
--------------------------------------------------------------------------------
000a7a9a: JLP; movzx edx, byte ptr [r15] ; lea rax, [r15 + 1] ; movsx rsi, dl ; test byte ptr [rcx + rsi*2 + 1], 0x20 ; je 0xa7ac7
read: dl rflags 
write: edx rax rflags rsi 
--------------------------------------------------------------------------------
000a7b2c: JLP; movzx esi, byte ptr [r15] ; mov rdx, r15 ; movsx rax, sil ; test byte ptr [rcx + rax*2 + 1], 0x20 ; jne 0xa7b4f
read: r15 rflags sil 
write: esi rax rdx rflags 
--------------------------------------------------------------------------------
000a7bf5: JLP; movzx edx, byte ptr [r15] ; lea rax, [r15 + 1] ; movsx rsi, dl ; test byte ptr [rcx + rsi*2 + 1], 0x20 ; je 0xa7c22
read: dl rflags 
write: edx rax rflags rsi 
--------------------------------------------------------------------------------
000a7c8c: JLP; movzx edx, byte ptr [r15] ; lea rax, [r15 + 1] ; movsx rsi, dl ; test byte ptr [rcx + rsi*2 + 1], 0x20 ; je 0xa7cb9
read: dl rflags 
write: edx rax rflags rsi 
--------------------------------------------------------------------------------
000a7d1e: JLP; mov rcx, qword ptr [rsp + 8] ; lea rsi, [rip + 0x8e3f2] ; mov r8, rbp ; mov rdx, r13 ; mov rdi, r15 ; call 0xa69fc
read: r13 r15 rbp rip rsp 
write: r8 rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000a7d58: JLP; lea rax, [r15 + 1] ; mov qword ptr [rsp + 0x68], rax ; cmp byte ptr [r15], 0x25 ; je 0xa6ab7
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000a7d78: JLP; movzx edx, byte ptr [r15] ; lea rax, [r15 + 1] ; movsx rsi, dl ; test byte ptr [rcx + rsi*2 + 1], 0x20 ; je 0xa7da5
read: dl rflags 
write: edx rax rflags rsi 
--------------------------------------------------------------------------------
000a7e0f: JLP; movzx esi, byte ptr [r15] ; mov rdx, r15 ; movsx rax, sil ; test byte ptr [rcx + rax*2 + 1], 0x20 ; jne 0xa7e2f
read: r15 rflags sil 
write: esi rax rdx rflags 
--------------------------------------------------------------------------------
000a7e82: JLP; movzx eax, byte ptr [rsp + 0x71] ; xor r9d, r9d ; mov qword ptr [rsp + 0x50], r12 ; mov qword ptr [rsp + 0x58], rbx ; mov qword ptr [rsp + 0x60], r14 ; mov rbx, r15 ; mov dword ptr [rsp + 0x20], 0xffffffff ; mov qword ptr [rsp + 0x48], r13 ; mov r14, r9 ; mov edx, eax ; shr dl, 3 ; mov edi, edx ; and edi, 3 ; mov dword ptr [rsp + 0x40], edi ; xor edi, edi
read: dl eax edi edx r12 r13 r14 r15 r9 r9d rbx 
write: dl eax edi edx r14 r9d rbx rflags 
--------------------------------------------------------------------------------
000a80c0: JLP; movzx esi, byte ptr [r15] ; mov rdx, r15 ; movsx rax, sil ; test byte ptr [rcx + rax*2 + 1], 0x20 ; jne 0xa80df
read: r15 rflags sil 
write: esi rax rdx rflags 
--------------------------------------------------------------------------------
000a8162: JLP; movzx eax, byte ptr [rsp + 0x71] ; and eax, 0x18 ; cmp al, 0x10 ; je 0xa91e9
read: al eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000a81fb: JLP; movzx eax, byte ptr [rsp + 0x71] ; and eax, 0x18 ; cmp al, 0x10 ; je 0xa6f71
read: al eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000a8320: JLP; movzx eax, byte ptr [rsp + 0x71] ; and eax, 0x18 ; cmp al, 0x10 ; je 0xa836e
read: al eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000a83b0: JLP; movzx eax, byte ptr [rsp + 0x71] ; and eax, 0x18 ; cmp al, 0x10 ; je 0xa7824
read: al eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000a8450: JLP; movzx eax, byte ptr [rsp + 0x71] ; and eax, 0x18 ; cmp al, 0x10 ; je 0xa9355
read: al eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000a84fe: JLP; movzx eax, byte ptr [rsp + 0x71] ; and eax, 0x18 ; cmp al, 0x10 ; je 0xa9900
read: al eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000a854d: JLP; movzx eax, byte ptr [rsp + 0x71] ; and eax, 0x18 ; cmp al, 0x10 ; je 0xa859b
read: al eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000a85e0: JLP; movzx eax, byte ptr [rsp + 0x71] ; and eax, 0x18 ; cmp al, 0x10 ; je 0xa6e24
read: al eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000a8670: JLP; movzx eax, byte ptr [rsp + 0x71] ; and eax, 0x18 ; cmp al, 0x10 ; je 0xa947f
read: al eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000a86b8: JLP; movzx eax, byte ptr [rsp + 0x71] ; and eax, 0x18 ; cmp al, 0x10 ; je 0xa9a72
read: al eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000a8700: JLP; movzx eax, byte ptr [rsp + 0x71] ; and eax, 0x18 ; cmp al, 0x10 ; je 0xa9a8a
read: al eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000a87e8: JLP; movzx eax, byte ptr [rsp + 0x71] ; and eax, 0x18 ; cmp al, 0x10 ; je 0xa99ba
read: al eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000a88d0: JLP; movzx eax, byte ptr [rsp + 0x71] ; and eax, 0x18 ; cmp al, 0x10 ; je 0xa9bb1
read: al eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000a891a: JLP; movzx eax, byte ptr [rsp + 0x71] ; and eax, 0x18 ; cmp al, 0x10 ; je 0xa9a9a
read: al eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000a89c0: JLP; movzx eax, byte ptr [rsp + 0x71] ; and eax, 0x18 ; cmp al, 0x10 ; je 0xa9a92
read: al eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000a8aa0: JLP; movzx eax, byte ptr [rsp + 0x71] ; and eax, 0x18 ; cmp al, 0x10 ; je 0xa993e
read: al eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000a8b80: JLP; movzx eax, byte ptr [rsp + 0x71] ; and eax, 0x18 ; cmp al, 0x10 ; je 0xa9aa2
read: al eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000a8c60: JLP; movzx eax, byte ptr [rsp + 0x71] ; and eax, 0x18 ; cmp al, 0x10 ; je 0xa9946
read: al eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000a9e47: JLP; movzx esi, byte ptr [rbx - 1] ; sub rbx, 1 ; nop dword ptr [rax - 0x45] ; cmp sil, 0x25 ; jne 0xa9f44
read: rbx rflags sil 
write: esi rbx rflags 
--------------------------------------------------------------------------------
000a9e53: JLP; cmp sil, 0x25 ; jne 0xa9f44
read: rflags sil 
write: rflags 
--------------------------------------------------------------------------------
000a9f35: JLP; test ecx, ecx ; lea r14, [rip + 0x8a9b1] ; je 0xa9f9c
read: ecx rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
000a9f94: JLP; lea r14, [rip + 0x8a95d] ; nop ; mov r8, qword ptr [rsp + 0x38] ; mov rcx, qword ptr [rsp + 0x20] ; xor edi, edi ; mov rdx, r14 ; mov r9, r12 ; mov rsi, -1 ; mov qword ptr [rsp + 0x50], r11 ; mov dword ptr [rsp + 0x60], r10d ; call 0xa9c3c
read: edi r10d r11 r12 r14 rip rsp 
write: edi r14 r8 r9 rcx rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000aa0b8: JLP; mov r14d, 1 ; mov eax, dword ptr [rsp + 0x10] ; xor esi, esi ; test edx, edx ; mov rdi, qword ptr [rsp + 0x30] ; mov qword ptr [rsp + 0x58], r11 ; mov dword ptr [rsp + 0x50], esi ; mov dword ptr [rsp + 0x68], r10d ; cmovne eax, esi ; mov dword ptr [rsp + 0x10], eax ; mov eax, 1 ; cmovne r14d, eax ; mov rax, qword ptr [rsp + 0x20] ; mov edx, dword ptr [rax + 8] ; cmp edx, 0xb
read: eax edx esi r10d r11 r14d rflags 
write: eax edx esi r14d rax rdi rflags 
--------------------------------------------------------------------------------
000aa1e7: JLP; cmp ecx, 0x4f ; je 0xa9f44
read: ecx rflags 
write: rflags 
--------------------------------------------------------------------------------
000aa20e: JLP; cmp ecx, 0x45 ; je 0xa9f44
read: ecx rflags 
write: rflags 
--------------------------------------------------------------------------------
000aa3dc: JLP; mov rax, qword ptr [rsp + 0x20] ; test r15d, r15d ; mov r14d, 1 ; mov edx, 0x92492493 ; cmovg r14d, r15d ; mov eax, dword ptr [rax + 0x18] ; lea r13d, [rax + 6] ; mov dword ptr [rsp + 0x50], eax ; mov eax, r13d ; imul edx ; mov eax, r13d ; sar eax, 0x1f ; add edx, r13d ; sar edx, 2 ; sub edx, eax
read: eax edx r13d r14d r15d rflags 
write: eax edx r13d r14d rax rflags 
--------------------------------------------------------------------------------
000aa42a: JLP; xor eax, eax ; sub r15d, 1 ; cmovns eax, r15d ; add eax, 1 ; movsxd r13, eax ; mov rax, qword ptr [rsp + 8] ; sub rax, r11 ; cmp r13, rax ; jae 0xa9e04
read: eax r11 r13 r15d rax rflags 
write: eax r13 r15d rax rflags 
--------------------------------------------------------------------------------
000aa49b: JLP; mov rdi, qword ptr [rsp + 0x20] ; mov qword ptr [rsp + 0x58], r11 ; mov dword ptr [rsp + 0x50], r10d ; mov rax, qword ptr [rdi] ; mov qword ptr [rsp + 0x90], rax ; mov rax, qword ptr [rdi + 8] ; mov qword ptr [rsp + 0x98], rax ; mov rax, qword ptr [rdi + 0x10] ; mov qword ptr [rsp + 0xa0], rax ; mov rax, qword ptr [rdi + 0x18] ; mov qword ptr [rsp + 0xa8], rax ; mov rax, qword ptr [rdi + 0x20] ; mov qword ptr [rsp + 0xb0], rax ; mov rax, qword ptr [rdi + 0x28] ; mov qword ptr [rsp + 0xb8], rax
read: r10d r11 rax 
write: rax rdi 
--------------------------------------------------------------------------------
000aa57f: JLP; mov rax, qword ptr [rsp + 0x30] ; mov r14, qword ptr [rax + 0x198] ; lea rax, [rip + 0x8a36f] ; cmp byte ptr [r14], 0 ; cmove r14, rax ; jmp 0xa9f9c
read: r14 rax rflags 
write: r14 rax rflags 
--------------------------------------------------------------------------------
000aa5a3: JLP; cmp ecx, 0x45 ; je 0xa9f44
read: ecx rflags 
write: rflags 
--------------------------------------------------------------------------------
000aa5e8: JLP; cmp ecx, 0x4f ; je 0xa9f44
read: ecx rflags 
write: rflags 
--------------------------------------------------------------------------------
000aa60f: JLP; cmp ecx, 0x45 ; je 0xa9f44
read: ecx rflags 
write: rflags 
--------------------------------------------------------------------------------
000aa679: JLP; cmp ecx, 0x45 ; je 0xa9f44
read: ecx rflags 
write: rflags 
--------------------------------------------------------------------------------
000aa6a1: JLP; test ecx, ecx ; jne 0xa9f44
read: ecx rflags 
write: rflags 
--------------------------------------------------------------------------------
000aa7b6: JLP; cmp edx, 1 ; mov eax, 0 ; sbb r13d, r13d ; add r13d, 1 ; test edx, edx ; cmove eax, dword ptr [rsp + 0x10] ; mov dword ptr [rsp + 0x10], eax ; mov rax, qword ptr [rsp + 0x40] ; test rax, rax ; je 0xaa7df
read: eax edx r13d rax rflags 
write: eax r13d rax rflags 
--------------------------------------------------------------------------------
000aa8e8: JLP; cmp ecx, 0x45 ; je 0xab965
read: ecx rflags 
write: rflags 
--------------------------------------------------------------------------------
000aa923: JLP; mov rax, qword ptr [rsp + 0x20] ; mov esi, dword ptr [rax + 0x20] ; test esi, esi ; js 0xaa0ac
read: esi rflags 
write: esi rax rflags 
--------------------------------------------------------------------------------
000aaa12: JLP; xor r14d, r14d ; jmp 0xaa0be
read: r14d 
write: r14d rflags 
--------------------------------------------------------------------------------
000aaa1e: JLP; xor eax, eax ; sub r15d, 1 ; cmovns eax, r15d ; add eax, 1 ; movsxd r13, eax ; mov rax, qword ptr [rsp + 8] ; sub rax, r11 ; cmp r13, rax ; jae 0xa9e04
read: eax r11 r13 r15d rax rflags 
write: eax r13 r15d rax rflags 
--------------------------------------------------------------------------------
000aaa8c: JLP; cmp ecx, 0x45 ; je 0xa9f44
read: ecx rflags 
write: rflags 
--------------------------------------------------------------------------------
000aaabc: JLP; cmp ecx, 0x45 ; je 0xa9f44
read: ecx rflags 
write: rflags 
--------------------------------------------------------------------------------
000aaaf8: JLP; cmp ecx, 0x45 ; je 0xa9f44
read: ecx rflags 
write: rflags 
--------------------------------------------------------------------------------
000aab1e: JLP; cmp ecx, 0x45 ; je 0xa9f44
read: ecx rflags 
write: rflags 
--------------------------------------------------------------------------------
000aab4e: JLP; cmp ecx, 0x45 ; je 0xa9f44
read: ecx rflags 
write: rflags 
--------------------------------------------------------------------------------
000aab77: JLP; cmp ecx, 0x45 ; je 0xa9f44
read: ecx rflags 
write: rflags 
--------------------------------------------------------------------------------
000aaba0: JLP; cmp ecx, 0x4f ; je 0xa9f44
read: ecx rflags 
write: rflags 
--------------------------------------------------------------------------------
000aabc7: JLP; test edx, edx ; mov eax, 1 ; cmove eax, dword ptr [rsp + 0x10] ; test ecx, ecx ; mov dword ptr [rsp + 0x10], eax ; jne 0xa9f44
read: eax ecx edx rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000aacf0: JLP; test ecx, ecx ; jne 0xa9f44
read: ecx rflags 
write: rflags 
--------------------------------------------------------------------------------
000aae20: JLP; test ecx, ecx ; jne 0xa9f44
read: ecx rflags 
write: rflags 
--------------------------------------------------------------------------------
000aaf48: JLP; test ecx, ecx ; jne 0xa9e5d
read: ecx rflags 
write: rflags 
--------------------------------------------------------------------------------
000aafc1: JLP; cmp ecx, 0x45 ; je 0xab7e8
read: ecx rflags 
write: rflags 
--------------------------------------------------------------------------------
000ab019: JLP; cmp ecx, 0x45 ; je 0xa9f44
read: ecx rflags 
write: rflags 
--------------------------------------------------------------------------------
000ab17e: JLP; cmp ecx, 0x45 ; je 0xa9f44
read: ecx rflags 
write: rflags 
--------------------------------------------------------------------------------
000ab1a3: JLP; cmp ecx, 0x45 ; je 0xab907
read: ecx rflags 
write: rflags 
--------------------------------------------------------------------------------
000ab213: JLP; lea r14, [rip + 0x8af02] ; jmp 0xa9f9c
read: 
write: r14 
--------------------------------------------------------------------------------
000ab223: JLP; cmp ecx, 0x45 ; je 0xa9f44
read: ecx rflags 
write: rflags 
--------------------------------------------------------------------------------
000ab24c: JLP; test ecx, ecx ; lea r14, [rip + 0x8aebe] ; je 0xa9f9c
read: ecx rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
000ab264: JLP; cmp ecx, 0x45 ; je 0xa9f44
read: ecx rflags 
write: rflags 
--------------------------------------------------------------------------------
000abe93: JLP; mov ecx, dword ptr [rbx - 4] ; sub rbx, 4 ; nop dword ptr [rax - 0x45] ; cmp ecx, 0x25 ; jne 0xac0dc
read: ecx rbx rflags 
write: ecx rbx rflags 
--------------------------------------------------------------------------------
000abe9e: JLP; cmp ecx, 0x25 ; jne 0xac0dc
read: ecx rflags 
write: rflags 
--------------------------------------------------------------------------------
000ac135: JLP; lea rax, [rip + 0x91968] ; mov qword ptr [rbp - 0x120], rax ; nop word ptr [rax + rax] ; mov rdx, qword ptr [rbp - 0x120] ; mov r9, qword ptr [rbp - 0xf0] ; xor edi, edi ; mov r8, qword ptr [rbp - 0x108] ; mov rcx, qword ptr [rbp - 0xe8] ; mov rsi, -1 ; mov dword ptr [rbp - 0x138], r11d ; mov dword ptr [rbp - 0x140], r10d ; call 0xabc5c
read: edi r10d r11d rax rip rsp 
write: edi r8 r9 rax rcx rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000ac2a0: JLP; mov ecx, 1 ; xor esi, esi ; mov eax, 1 ; test edx, edx ; cmovne ecx, eax ; mov rax, qword ptr [rbp - 0xe8] ; cmovne r11d, esi ; mov dword ptr [rbp - 0x120], esi ; mov rsi, qword ptr [rbp - 0x100] ; mov dword ptr [rbp - 0x140], r10d ; mov dword ptr [rbp - 0x138], r11d ; mov edx, dword ptr [rax + 8] ; mov dword ptr [rbp - 0x130], ecx ; cmp edx, 0xb ; mov dword ptr [rbp - 0x128], edx
read: eax ecx edx esi r10d r11d rflags 
write: eax ecx edx esi r11d rax rflags rsi 
--------------------------------------------------------------------------------
000ac436: JLP; cmp r8d, 0x45 ; je 0xac0dc
read: r8d rflags 
write: rflags 
--------------------------------------------------------------------------------
000ac622: JLP; cmp r8d, 0x45 ; je 0xac0dc
read: r8d rflags 
write: rflags 
--------------------------------------------------------------------------------
000ac795: JLP; test r8d, r8d ; jne 0xac0dc
read: r8d rflags 
write: rflags 
--------------------------------------------------------------------------------
000ac7b5: JLP; cmp r8d, 0x45 ; je 0xac0dc
read: r8d rflags 
write: rflags 
--------------------------------------------------------------------------------
000ac7df: JLP; lea rax, [rip + 0x9107a] ; mov qword ptr [rbp - 0x120], rax ; jmp 0xac14c
read: rax 
write: rax 
--------------------------------------------------------------------------------
000ac7f6: JLP; cmp r8d, 0x45 ; je 0xac0dc
read: r8d rflags 
write: rflags 
--------------------------------------------------------------------------------
000ac821: JLP; cmp r8d, 0x45 ; je 0xac0dc
read: r8d rflags 
write: rflags 
--------------------------------------------------------------------------------
000ac84c: JLP; cmp r8d, 0x4f ; je 0xac0dc
read: r8d rflags 
write: rflags 
--------------------------------------------------------------------------------
000ac87e: JLP; cmp r8d, 0x45 ; je 0xac0dc
read: r8d rflags 
write: rflags 
--------------------------------------------------------------------------------
000ac8a8: JLP; mov rax, qword ptr [rbp - 0xe8] ; test r15d, r15d ; mov ecx, 1 ; mov edx, 0x92492493 ; cmovg ecx, r15d ; mov eax, dword ptr [rax + 0x18] ; lea r12d, [rax + 6] ; mov dword ptr [rbp - 0x120], eax ; mov eax, r12d ; imul edx ; mov eax, r12d ; sar eax, 0x1f ; add edx, r12d ; sar edx, 2 ; sub edx, eax
read: eax ecx edx r12d r15d rflags 
write: eax ecx edx r12d rax rflags 
--------------------------------------------------------------------------------
000ac8f9: JLP; xor eax, eax ; sub r15d, 1 ; cmovns eax, r15d ; add eax, 1 ; movsxd r12, eax ; mov rax, qword ptr [rbp - 0xd8] ; sub rax, r14 ; cmp r12, rax ; jae 0xabe4c
read: eax r12 r14 r15d rax rflags 
write: eax r12 r15d rax rflags 
--------------------------------------------------------------------------------
000ac965: JLP; mov rdi, qword ptr [rbp - 0xe8] ; mov dword ptr [rbp - 0x128], r11d ; mov dword ptr [rbp - 0x120], r10d ; mov rax, qword ptr [rdi] ; mov qword ptr [rbp - 0xd0], rax ; mov rax, qword ptr [rdi + 8] ; mov qword ptr [rbp - 0xc8], rax ; mov rax, qword ptr [rdi + 0x10] ; mov qword ptr [rbp - 0xc0], rax ; mov rax, qword ptr [rdi + 0x18] ; mov qword ptr [rbp - 0xb8], rax ; mov rax, qword ptr [rdi + 0x20] ; mov qword ptr [rbp - 0xb0], rax ; mov rax, qword ptr [rdi + 0x28] ; mov qword ptr [rbp - 0xa8], rax
read: r10d r11d rax 
write: rax rdi 
--------------------------------------------------------------------------------
000aca55: JLP; mov rax, qword ptr [rbp - 0x100] ; mov rax, qword ptr [rax + 0x338] ; mov edx, dword ptr [rax] ; mov rsi, rax ; lea rax, [rip + 0x9105d] ; test edx, edx ; cmovne rax, rsi ; mov qword ptr [rbp - 0x120], rax ; jmp 0xac14c
read: edx rax rflags rsi 
write: edx rax rflags rsi 
--------------------------------------------------------------------------------
000aca85: JLP; mov rax, qword ptr [rbp - 0xe8] ; mov ecx, dword ptr [rax + 0x20] ; test ecx, ecx ; js 0xacf99
read: ecx rflags 
write: ecx rax rflags 
--------------------------------------------------------------------------------
000acb99: JLP; cmp r8d, 0x45 ; je 0xadc71
read: r8d rflags 
write: rflags 
--------------------------------------------------------------------------------
000acbd9: JLP; cmp r8d, 0x4f ; je 0xac0dc
read: r8d rflags 
write: rflags 
--------------------------------------------------------------------------------
000acc0b: JLP; cmp r8d, 0x45 ; je 0xac0dc
read: r8d rflags 
write: rflags 
--------------------------------------------------------------------------------
000acc79: JLP; test r8d, r8d ; jne 0xac0dc
read: r8d rflags 
write: rflags 
--------------------------------------------------------------------------------
000acdb2: JLP; cmp edx, 1 ; sbb eax, eax ; mov dword ptr [rbp - 0x120], eax ; mov eax, 0 ; add dword ptr [rbp - 0x120], 1 ; test edx, edx ; cmovne r11d, eax ; mov rax, qword ptr [rbp - 0x118] ; test rax, rax ; je 0xacde0
read: eax edx r11d rax rflags 
write: eax r11d rax rflags 
--------------------------------------------------------------------------------
000acfa5: JLP; cmp r8d, 0x45 ; je 0xac0dc
read: r8d rflags 
write: rflags 
--------------------------------------------------------------------------------
000acfec: JLP; cmp r8d, 0x45 ; je 0xadabd
read: r8d rflags 
write: rflags 
--------------------------------------------------------------------------------
000ad05c: JLP; xor ecx, ecx ; jmp 0xac2a5
read: ecx 
write: ecx rflags 
--------------------------------------------------------------------------------
000ad067: JLP; cmp r8d, 0x4f ; je 0xac0dc
read: r8d rflags 
write: rflags 
--------------------------------------------------------------------------------
000ad099: JLP; test edx, edx ; mov eax, 1 ; cmovne r11d, eax ; test r8d, r8d ; jne 0xac0dc
read: eax edx r11d r8d rflags 
write: eax r11d rflags 
--------------------------------------------------------------------------------
000ad197: JLP; test r8d, r8d ; jne 0xac0dc
read: r8d rflags 
write: rflags 
--------------------------------------------------------------------------------
000ad1b7: JLP; cmp r8d, 0x45 ; je 0xac0dc
read: r8d rflags 
write: rflags 
--------------------------------------------------------------------------------
000ad1f9: JLP; cmp r8d, 0x45 ; je 0xac0dc
read: r8d rflags 
write: rflags 
--------------------------------------------------------------------------------
000ad22d: JLP; cmp r8d, 0x45 ; je 0xac0dc
read: r8d rflags 
write: rflags 
--------------------------------------------------------------------------------
000ad255: JLP; cmp r8d, 0x45 ; je 0xac0dc
read: r8d rflags 
write: rflags 
--------------------------------------------------------------------------------
000ad280: JLP; cmp r8d, 0x45 ; je 0xac0dc
read: r8d rflags 
write: rflags 
--------------------------------------------------------------------------------
000ad2b4: JLP; cmp r8d, 0x45 ; je 0xac0dc
read: r8d rflags 
write: rflags 
--------------------------------------------------------------------------------
000ad2db: JLP; xor eax, eax ; sub r15d, 1 ; cmovns eax, r15d ; add eax, 1 ; movsxd r12, eax ; mov rax, qword ptr [rbp - 0xd8] ; sub rax, r14 ; cmp r12, rax ; jae 0xabe4c
read: eax r12 r14 r15d rax rflags 
write: eax r12 r15d rax rflags 
--------------------------------------------------------------------------------
000ad347: JLP; test r8d, r8d ; jne 0xac0dc
read: r8d rflags 
write: rflags 
--------------------------------------------------------------------------------
000ad445: JLP; test r8d, r8d ; jne 0xac0dc
read: r8d rflags 
write: rflags 
--------------------------------------------------------------------------------
000ad543: JLP; cmp r8d, 0x45 ; je 0xadb2d
read: r8d rflags 
write: rflags 
--------------------------------------------------------------------------------
000ad59f: JLP; test r8d, r8d ; jne 0xad751
read: r8d rflags 
write: rflags 
--------------------------------------------------------------------------------
000b4990: JLP; mov rdx, rsp ; mov rsi, rbx ; mov edi, 1 ; call 0xd639c
read: rbx rip rsp 
write: edi rdx rsi rsp 
--------------------------------------------------------------------------------
000b49d0: JLP; mov eax, 1 ; jmp 0xb48c1
read: 
write: eax 
--------------------------------------------------------------------------------
000b49e0: JLP; mov eax, 0xff ; jmp 0xb48c1
read: 
write: eax 
--------------------------------------------------------------------------------
000b49f0: JLP; mov eax, 0x1000 ; jmp 0xb48c1
read: 
write: eax 
--------------------------------------------------------------------------------
000b4a00: JLP; mov rsi, rsp ; mov rdi, rbx ; call 0xd660c
read: rbx rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
000b4a30: JLP; xor eax, eax ; jmp 0xb48c1
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
000b4a60: JLP; mov eax, 0x20 ; jmp 0xb48c1
read: 
write: eax 
--------------------------------------------------------------------------------
000b4a70: JLP; mov rsi, rsp ; mov rdi, rbx ; call 0xd660c
read: rbx rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
000b4aa0: JLP; mov rbp, qword ptr [rip + 0x2b43bd] ; mov rsi, rsp ; mov rdi, rbx ; mov r12d, dword ptr fs:[rbp] ; call 0xd660c
read: rbx rip rsp 
write: r12d rbp rdi rsi rsp 
--------------------------------------------------------------------------------
000b4de4: JLP; call 0xdcb2c
read: rip rsp 
write: rsp 
--------------------------------------------------------------------------------
000b4df8: JLP; mov eax, 0x20 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b4e06: JLP; lea rdi, [rip + 0x81514] ; call 0xb4b0c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000b4e1f: JLP; mov eax, 0x7fffffff ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b4e2d: JLP; lea rdi, [rip + 0x814e1] ; call 0xb4b0c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000b4e46: JLP; mov eax, 0x31069 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b4e54: JLP; mov eax, 0x63 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b4e62: JLP; mov eax, 0x800 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b4e70: JLP; mov eax, 0x63 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b4e7e: JLP; mov eax, 0x3e8 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b4e8c: JLP; mov eax, 0xff ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b4e9a: JLP; mov eax, 0x20 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b4ea8: JLP; mov eax, 0x800 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b4eb6: JLP; mov eax, 0x7fff ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b4ec4: JLP; mov eax, 0x800 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b4ed2: JLP; mov eax, 0x31069 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b4ee0: JLP; mov eax, 0x31069 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b4eee: JLP; mov eax, 0x31069 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b4efc: JLP; mov eax, 0x31069 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b4f0a: JLP; mov eax, 0x31069 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b4f18: JLP; mov eax, 0x31069 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b4f26: JLP; mov eax, 0x31069 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b4f34: JLP; mov eax, 0x31069 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b4f42: JLP; mov eax, 0x7fffffff ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b4f50: JLP; lea rdi, [rip + 0x813ca] ; call 0xb4b0c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000b4f69: JLP; mov eax, 1 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b4f77: JLP; mov eax, 1 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b4f85: JLP; mov eax, 1 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b4f93: JLP; mov eax, 0x40 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b4fa1: JLP; mov eax, 0x400 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b4faf: JLP; mov eax, 0x31069 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b4fbd: JLP; mov eax, 1 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b4fcb: JLP; mov eax, 0x31069 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b4fd9: JLP; mov eax, 0x31069 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b4fe7: JLP; mov eax, 0x31069 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b4ff5: JLP; mov eax, 0x31069 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b5003: JLP; mov eax, 0x31069 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b5011: JLP; mov eax, 0x31069 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b501f: JLP; mov eax, 0x31069 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b502d: JLP; mov eax, 0x31069 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b503b: JLP; mov eax, 0x31069 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b5049: JLP; lea rdi, [rip + 0x812c5] ; call 0xb4b0c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000b5062: JLP; mov eax, 0x31069 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b5070: JLP; mov eax, 0x14 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b507e: JLP; mov eax, 0x7fffffff ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b508c: JLP; mov eax, 1 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b509a: JLP; mov eax, 0x8000 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b50a8: JLP; mov eax, 0x31069 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b50b6: JLP; call 0xa457c
read: rip rsp 
write: rsp 
--------------------------------------------------------------------------------
000b50e3: JLP; mov eax, 1 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b50f1: JLP; mov eax, 1 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b50ff: JLP; mov eax, 0x31069 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b510d: JLP; mov eax, 0x31069 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b511b: JLP; mov eax, 0x31069 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b5129: JLP; mov eax, 0x31069 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b5137: JLP; mov eax, 0x31069 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b5145: JLP; call 0xe310c
read: rip rsp 
write: rsp 
--------------------------------------------------------------------------------
000b5159: JLP; mov eax, 0x10000 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b5167: JLP; call 0xdcb6c
read: rip rsp 
write: rsp 
--------------------------------------------------------------------------------
000b517b: JLP; mov eax, 0x10 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b5189: JLP; mov rax, -1 ; jmp 0xb4d4c
read: 
write: rax 
--------------------------------------------------------------------------------
000b5199: JLP; call 0xd615c
read: rip rsp 
write: rsp 
--------------------------------------------------------------------------------
000b51ab: JLP; mov eax, 0x7fffffff ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b51b9: JLP; lea rdi, [rip + 0x81161] ; call 0xb4b0c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000b51d2: JLP; lea rdi, [rip + 0x8113c] ; call 0xb4b0c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000b51eb: JLP; mov eax, 0x31069 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b51f9: JLP; mov eax, 1 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b5207: JLP; mov eax, 0x31069 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b5215: JLP; mov eax, 0x31069 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b5223: JLP; mov eax, 0x400 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b5231: JLP; mov eax, 0x400 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b523f: JLP; mov eax, 0x100 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b524d: JLP; mov eax, 0x20 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b525b: JLP; mov eax, 4 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b5269: JLP; mov eax, 0x400 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b5277: JLP; mov eax, 0x4000 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b5285: JLP; mov eax, 1 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b5293: JLP; mov eax, 0x31069 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b52a1: JLP; mov eax, 0x31069 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b52af: JLP; mov eax, 0x31069 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b52bd: JLP; mov eax, 0x31069 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b52cb: JLP; mov eax, 0x31069 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b52d9: JLP; mov eax, 0x31069 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b52e7: JLP; call 0xe2d5c
read: rip rsp 
write: rsp 
--------------------------------------------------------------------------------
000b52fb: JLP; nop ; call 0xe2a7c
read: rip rsp 
write: rsp 
--------------------------------------------------------------------------------
000b5310: JLP; call 0xe2e2c
read: rip rsp 
write: rsp 
--------------------------------------------------------------------------------
000b5325: JLP; nop dword ptr [rax] ; call 0xe2e4c
read: rip rsp 
write: rsp 
--------------------------------------------------------------------------------
000b5345: JLP; mov eax, 0x7fffffff ; nop ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b5355: JLP; mov eax, 0x2000 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b5363: JLP; mov eax, 0x2bc ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b5371: JLP; mov eax, 4 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b537f: JLP; mov eax, 1 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b538d: JLP; mov eax, 1 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b539b: JLP; mov eax, 1 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b53a9: JLP; mov eax, 1 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b53b7: JLP; mov eax, 0x31069 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b53c5: JLP; mov eax, 1 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b53d3: JLP; mov eax, 0x31069 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b53e1: JLP; mov eax, 1 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b53ef: JLP; mov eax, 1 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b53fd: JLP; mov eax, 1 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b540b: JLP; mov eax, 8 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b5419: JLP; mov eax, 0x7f ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b5427: JLP; mov rax, -0x80 ; jmp 0xb4d4c
read: 
write: rax 
--------------------------------------------------------------------------------
000b5437: JLP; mov eax, 0x7fffffff ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b5445: JLP; mov rax, -0x80000000 ; jmp 0xb4d4c
read: 
write: rax 
--------------------------------------------------------------------------------
000b5455: JLP; mov eax, 0x40 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b5463: JLP; mov eax, 0x20 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b5471: JLP; mov eax, 0x10 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b547f: JLP; mov eax, 0x14 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b548d: JLP; mov eax, 0x7fff ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b549b: JLP; mov eax, 0x7f ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b54a9: JLP; mov rax, -0x80 ; jmp 0xb4d4c
read: 
write: rax 
--------------------------------------------------------------------------------
000b54b9: JLP; mov eax, 0x7fff ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b54c7: JLP; mov rax, -0x8000 ; jmp 0xb4d4c
read: 
write: rax 
--------------------------------------------------------------------------------
000b54d7: JLP; mov eax, 0xff ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b54e5: JLP; mov eax, 0xffffffff ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b54f3: JLP; mov eax, 0x31069 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b5501: JLP; mov eax, 0xffff ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b550f: JLP; mov eax, 0x1000 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b551d: JLP; mov eax, 0x800 ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b552b: JLP; mov eax, 0x7fffffff ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b5539: JLP; mov eax, 0x7fffffff ; jmp 0xb4d4c
read: 
write: eax 
--------------------------------------------------------------------------------
000b5547: JLP; mov rax, qword ptr [rip + 0x2b3916] ; mov dword ptr fs:[rax], 0x16 ; mov rax, -1 ; jmp 0xb4d4c
read: 
write: rax 
--------------------------------------------------------------------------------
000b5670: JLP; mov rdx, rsp ; mov esi, ebx ; mov edi, 1 ; call 0xd63ec
read: ebx rip rsp 
write: edi esi rdx rsp 
--------------------------------------------------------------------------------
000b56b0: JLP; mov eax, 1 ; jmp 0xb55b0
read: 
write: eax 
--------------------------------------------------------------------------------
000b56c0: JLP; mov eax, 0xff ; jmp 0xb55b0
read: 
write: eax 
--------------------------------------------------------------------------------
000b56d0: JLP; mov eax, 0x1000 ; jmp 0xb55b0
read: 
write: eax 
--------------------------------------------------------------------------------
000b56e0: JLP; mov rsi, rsp ; mov edi, ebx ; call 0xd665c
read: ebx rip rsp 
write: edi rsi rsp 
--------------------------------------------------------------------------------
000b5710: JLP; xor eax, eax ; jmp 0xb55b0
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
000b5740: JLP; mov eax, 0x20 ; jmp 0xb55b0
read: 
write: eax 
--------------------------------------------------------------------------------
000b5750: JLP; mov rsi, rsp ; mov edi, ebx ; call 0xd665c
read: ebx rip rsp 
write: edi rsi rsp 
--------------------------------------------------------------------------------
000b5780: JLP; mov rbp, qword ptr [rip + 0x2b36dd] ; mov rsi, rsp ; mov edi, ebx ; mov r12d, dword ptr fs:[rbp] ; call 0xd65dc
read: ebx rip rsp 
write: edi r12d rbp rsi rsp 
--------------------------------------------------------------------------------
000b8530: JLP; test byte ptr [rbp - 0x2864], 2 ; jne 0xb872a
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000b85a0: JLP; mov eax, dword ptr [rip + 0x2b3922] ; test eax, eax ; je 0xb8e8c
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000b86d0: JLP; mov r11d, dword ptr [rbp - 0x287c] ; test r11d, r11d ; jne 0xb9b08
read: r11d rflags 
write: r11d rflags 
--------------------------------------------------------------------------------
000b8718: JLP; mov eax, dword ptr [rbp - 0x2864] ; and eax, 5 ; cmp eax, 5 ; je 0xb8eb4
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000b872e: JLP; cmp r15, qword ptr [rbp - 0x2860] ; je 0xb857c
read: r15 rflags 
write: rflags 
--------------------------------------------------------------------------------
000b8780: JLP; mov r9d, dword ptr [rbp - 0x287c] ; test r9d, r9d ; je 0xb872a
read: r9d rflags 
write: r9d rflags 
--------------------------------------------------------------------------------
000b87e0: JLP; cmp qword ptr [rbp - 0x28a8], 0 ; jne 0xb9b88
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000b9d10: JLP; test byte ptr [rsp + 0x14], 2 ; jne 0xba204
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000b9d60: JLP; mov edi, dword ptr [rip + 0x2b2162] ; test edi, edi ; je 0xba53c
read: edi rflags 
write: edi rflags 
--------------------------------------------------------------------------------
000b9ed0: JLP; mov ebp, dword ptr [rsp + 0x24] ; test ebp, ebp ; jne 0xbb20b
read: ebp rflags 
write: ebp rflags 
--------------------------------------------------------------------------------
000b9f00: JLP; mov eax, dword ptr [rsp + 0x14] ; and eax, 5 ; cmp eax, 5 ; je 0xba59c
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000b9f14: JLP; cmp r11, qword ptr [rsp + 8] ; je 0xb9ea4
read: r11 rflags 
write: rflags 
--------------------------------------------------------------------------------
000b9f90: JLP; mov ebp, dword ptr [rsp + 0x24] ; test ebp, ebp ; je 0xb9f10
read: ebp rflags 
write: ebp rflags 
--------------------------------------------------------------------------------
000ba000: JLP; cmp qword ptr [rsp + 0x30], 0 ; jne 0xbb25f
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000bc220: JLP; cmp qword ptr [rsi + 0x20], 0 ; jne 0xbc369
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000bc22f: JLP; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
read: eax rsp 
write: eax r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000bc240: JLP; mov rax, qword ptr [rsi + 8] ; or byte ptr [rdi + 0xa0], 1 ; test rax, rax ; je 0xbc3ac
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000bc2d8: JLP; mov rax, qword ptr [rsi + 0x20] ; mov rdx, qword ptr [rdi + 0x18] ; mov eax, dword ptr [rax + 0x38] ; mov dword ptr [rdx + r8*4], eax ; cmp byte ptr [rsi + 0x30], 4 ; jne 0xbc22b
read: eax rflags 
write: eax rax rdx rflags 
--------------------------------------------------------------------------------
000bc310: JLP; mov rax, qword ptr [rsi + 0x20] ; shl r8, 4 ; add r8, qword ptr [rdi + 0x28] ; mov esi, dword ptr [rax + 0x38] ; mov rdi, r8 ; call 0xbbf1c
read: r8 rip rsp 
write: esi r8 rax rdi rflags rsp 
--------------------------------------------------------------------------------
000bc338: JLP; test al, 8 ; jne 0xbc3d7
read: al rflags 
write: al rflags 
--------------------------------------------------------------------------------
000bd148: JLP; mov rdi, qword ptr [rdi] ; call 0xbd09c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000bd6db: JLP; lea eax, [rdx + rsi] ; mov edi, eax ; shr edi, 0x1f ; add eax, edi ; sar eax, 1 ; movsxd rdi, eax ; mov r14d, eax ; mov edi, dword ptr [rcx + rdi*4] ; cmp ebp, edi ; jge 0xbd6c6
read: eax ebp edi rflags 
write: eax edi r14d rdi rflags 
--------------------------------------------------------------------------------
000bdd29: JLP; ret
read: 
write: 
--------------------------------------------------------------------------------
000be327: JLP; lea edi, [rax + 1] ; shl rax, 6 ; mov dword ptr [rsi], edi ; lea rsi, [r9 + rax] ; lea rax, [rsi + 8] ; mov qword ptr [rsi + 8], 0 ; mov qword ptr [rax + 8], rdx ; mov qword ptr [rax + 0x10], rcx ; mov rdi, qword ptr [r8 + 8] ; mov rsi, qword ptr [r8] ; mov qword ptr [rax + 0x18], 0 ; mov qword ptr [rax + 0x20], 0 ; mov dword ptr [rax + 0x38], 0xffffffff ; mov qword ptr [rax + 0x30], rdi ; and byte ptr [rax + 0x32], 0xf3
read: edi rax rcx rdi rdx 
write: edi rax rdi rflags rsi 
--------------------------------------------------------------------------------
000bf823: JLP; mov eax, ebp ; and eax, dword ptr [r12 + 0x84] ; shl rax, 4 ; add rax, qword ptr [r12 + 0x40] ; mov edx, dword ptr [rax] ; test edx, edx ; jle 0xbf88c
read: eax ebp edx rax rflags 
write: eax edx rax rflags 
--------------------------------------------------------------------------------
000bfae1: JLP; xor eax, eax ; ret
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
000c4310: JLP; cmp dword ptr [rsp + 0x40], ebx ; jle 0xc436d
read: ebx rflags 
write: rflags 
--------------------------------------------------------------------------------
000c43c0: JLP; mov edx, dword ptr [rsp + 0x220] ; mov esi, ebx ; mov rdi, r12 ; call 0xbd59c
read: ebx r12 rip rsp 
write: edx esi rdi rsp 
--------------------------------------------------------------------------------
000c45ea: JLP; cmp dword ptr [rsp + 0x40], ebx ; jle 0xc436d
read: ebx rflags 
write: rflags 
--------------------------------------------------------------------------------
000c465c: JLP; cmp ebx, dword ptr [rsp + 0x54] ; jl 0xc49d4
read: ebx rflags 
write: rflags 
--------------------------------------------------------------------------------
000c5ae0: JLP; mov rax, qword ptr [rbx + 8] ; mov rdi, rbp ; movsxd rsi, dword ptr [rax + r13] ; shl rsi, 4 ; add rsi, qword ptr [r15 + 0x38] ; call 0xbec4c
read: rbp rip rsi rsp 
write: rax rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000c5f90: JLP; and dh, 8 ; mov eax, 1 ; je 0xc5e62
read: dh rflags 
write: dh eax rflags 
--------------------------------------------------------------------------------
000c5fb0: JLP; test dl, 8 ; jne 0xc5ff4
read: dl rflags 
write: rflags 
--------------------------------------------------------------------------------
000c6010: JLP; and dh, 0x20 ; mov eax, 1 ; je 0xc5e62
read: dh rflags 
write: dh eax rflags 
--------------------------------------------------------------------------------
000c6030: JLP; and dh, 0x20 ; mov eax, 1 ; je 0xc5e62
read: dh rflags 
write: dh eax rflags 
--------------------------------------------------------------------------------
000c6050: JLP; mov byte ptr [rbp + 8], 0xb ; mov eax, 1 ; jmp 0xc5e62
read: 
write: eax 
--------------------------------------------------------------------------------
000c6068: JLP; test edx, 0x402 ; mov eax, 1 ; jne 0xc5e62
read: edx rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000c6090: JLP; mov byte ptr [rbp + 8], 5 ; mov eax, 1 ; jmp 0xc5e62
read: 
write: eax 
--------------------------------------------------------------------------------
000c60a8: JLP; test edx, 0x402 ; mov eax, 1 ; jne 0xc5e62
read: edx rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000c60d0: JLP; mov byte ptr [rbp + 8], 0x14 ; mov eax, 1 ; jmp 0xc5e62
read: 
write: eax 
--------------------------------------------------------------------------------
000c60e8: JLP; test edx, 0x800008 ; jne 0xc6118
read: edx rflags 
write: rflags 
--------------------------------------------------------------------------------
000c6138: JLP; and edx, 0x1200 ; mov eax, 1 ; cmp rdx, 0x1200 ; jne 0xc5e62
read: edx rdx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
000c6160: JLP; and edx, 0x8400 ; cmp rdx, 0x8000 ; je 0xc5f9e
read: edx rdx rflags 
write: edx rflags 
--------------------------------------------------------------------------------
000c6177: JLP; mov eax, 1 ; jmp 0xc5e62
read: 
write: eax 
--------------------------------------------------------------------------------
000c6188: JLP; and edx, 0x1200 ; mov eax, 1 ; cmp rdx, 0x1200 ; jne 0xc5e62
read: edx rdx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
000c61ad: JLP; and edx, 0x1200 ; mov eax, 2 ; cmp rdx, 0x200 ; jne 0xc5e62
read: edx rdx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
000c61cb: JLP; and dh, 0x84 ; mov eax, 2 ; jne 0xc5e62
read: dh rflags 
write: dh eax rflags 
--------------------------------------------------------------------------------
000c61e6: JLP; and edx, 0x1200 ; mov eax, 2 ; cmp rdx, 0x200 ; jne 0xc5e62
read: edx rdx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
000c6207: JLP; test edx, 0x80000 ; mov eax, 2 ; jne 0xc5e62
read: edx rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000c6225: JLP; test edx, 0x80000 ; mov eax, 2 ; jne 0xc5e62
read: edx rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000c6243: JLP; test edx, 0x80000 ; mov eax, 2 ; jne 0xc5e62
read: edx rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000c6268: JLP; test edx, 0x80000 ; mov eax, 2 ; jne 0xc5e62
read: edx rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000c628d: JLP; test edx, 0x80000 ; mov eax, 2 ; jne 0xc5e62
read: edx rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000c62ab: JLP; test edx, 0x80000 ; mov eax, 2 ; jne 0xc5e62
read: edx rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000c62c9: JLP; test edx, 0x80000 ; mov eax, 2 ; jne 0xc5e62
read: edx rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000c62ee: JLP; and edx, 0x402 ; mov eax, 2 ; cmp rdx, 2 ; jne 0xc5e62
read: edx rdx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
000c630c: JLP; test edx, 0x80000 ; mov eax, 2 ; jne 0xc5e62
read: edx rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000c6331: JLP; test edx, 0x80000 ; mov eax, 2 ; jne 0xc5e62
read: edx rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000c6356: JLP; and dh, 0x40 ; mov eax, 2 ; jne 0xc5e62
read: dh rflags 
write: dh eax rflags 
--------------------------------------------------------------------------------
000c637b: JLP; and edx, 0x402 ; mov eax, 2 ; cmp rdx, 2 ; jne 0xc5e62
read: edx rdx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
000c6399: JLP; and dh, 0x20 ; mov eax, 2 ; jne 0xc5e62
read: dh rflags 
write: dh eax rflags 
--------------------------------------------------------------------------------
000c63b0: JLP; and dh, 0x20 ; mov eax, 2 ; jne 0xc5e62
read: dh rflags 
write: dh eax rflags 
--------------------------------------------------------------------------------
000c63c7: JLP; test edx, 0x80000 ; mov eax, 2 ; jne 0xc5e62
read: edx rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000c63ec: JLP; mov eax, 2 ; jmp 0xc5e62
read: 
write: eax 
--------------------------------------------------------------------------------
000c65b3: JLP; test qword ptr [rsp + 0x50], 0x1000000 ; jne 0xc6b26
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000c65c6: JLP; mov rdx, qword ptr [rsp + 0x50] ; test dl, 0x20 ; jne 0xc6b26
read: dl rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
000c65e9: JLP; mov rdx, qword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x28] ; xor ecx, ecx ; lea rsi, [rdx + 0x80] ; lea rdi, [rdx + 0x70] ; mov byte ptr [rax + 8], 1 ; xor edx, edx ; mov r8, rax ; call 0xbe30c
read: ecx edx rax rip rsp 
write: ecx edx r8 rax rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000c6b3c: JLP; mov rax, qword ptr [rsp + 0x58] ; mov dword ptr [rax], 5 ; xor eax, eax ; jmp 0xc6965
read: eax 
write: eax rax rflags 
--------------------------------------------------------------------------------
000c6b52: JLP; mov rbx, qword ptr [rsp + 0x48] ; mov r14, qword ptr [rsp + 0x58] ; cmp al, 0x21 ; sete r8b ; lea rcx, [rip + 0x6f07d] ; lea rdx, [rip + 0x6f935] ; movzx r8d, r8b ; mov rsi, qword ptr [rbx + 0x50] ; mov r9, r14 ; mov rdi, qword ptr [rsp + 0x20] ; call 0xc0b5c
read: al r14 r8b rflags rip rsp 
write: r14 r8b r8d r9 rbx rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000c6ba6: JLP; mov rbx, qword ptr [rsp + 0x48] ; mov r14, qword ptr [rsp + 0x58] ; cmp al, 0x23 ; sete r8b ; lea rcx, [rip + 0x6dd55] ; lea rdx, [rip + 0x6f8ed] ; movzx r8d, r8b ; mov rsi, qword ptr [rbx + 0x50] ; mov r9, r14 ; jmp 0xc6b7b
read: al r14 r8b rflags 
write: r14 r8b r8d r9 rbx rcx rdx rflags rsi 
--------------------------------------------------------------------------------
000c6bd5: JLP; mov rbx, qword ptr [rsi + 0x30] ; mov r15, qword ptr [rsp + 0x50] ; lea r13d, [r8 + 1] ; mov r14, qword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x28] ; lea rax, [rbx + 1] ; mov rdx, r15 ; or rdx, 0x800000 ; mov ebp, dword ptr [r14 + 0x38] ; mov qword ptr [rsi + 0x30], rax ; mov rsi, r14 ; call 0xc5d8c
read: r14 r15 rax rdx rip rsp 
write: ebp r13d r14 r15 rax rbx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000c6c9c: JLP; test qword ptr [rsp + 0x50], 0x20000 ; jne 0xc65e5
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000c6cc8: JLP; mov rax, qword ptr [rsp + 0x28] ; mov rdx, qword ptr [rsp + 0x20] ; mov ecx, dword ptr [rax] ; mov eax, 1 ; shl eax, cl ; cdqe ; test qword ptr [rdx + 0x98], rax ; je 0xc83d6
read: cl eax rax rflags 
write: eax ecx rax rdx rflags 
--------------------------------------------------------------------------------
000c6d46: JLP; mov rbx, qword ptr [rsp + 0x20] ; mov r8, qword ptr [rsp + 0x28] ; xor ecx, ecx ; xor edx, edx ; lea rsi, [rbx + 0x80] ; lea rdi, [rbx + 0x70] ; call 0xbe30c
read: ecx edx rip rsp 
write: ecx edx r8 rbx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000c6d98: JLP; mov rax, qword ptr [rsp + 0x28] ; mov eax, dword ptr [rax] ; test eax, 0x30f ; je 0xc6dbb
read: eax rflags 
write: eax rax rflags 
--------------------------------------------------------------------------------
000c6ea1: JLP; mov rax, qword ptr [rsp + 0x20] ; mov r8, qword ptr [rsp + 0x28] ; xor ecx, ecx ; xor edx, edx ; lea rbx, [rax + 0x70] ; lea rbp, [rax + 0x80] ; mov rdi, rbx ; mov rsi, rbp ; call 0xbe30c
read: ecx edx rbp rbx rip rsp 
write: ecx edx r8 rax rbp rbx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000c6fa8: JLP; mov rax, qword ptr [rip + 0x2a1e0d] ; mov dword ptr [rsp + 0xdc], 0 ; mov rax, qword ptr fs:[rax] ; mov rax, qword ptr [rax + 0x18] ; mov rdx, qword ptr [rax + 0xc0] ; mov qword ptr [rsp + 0x10], rdx ; mov edx, dword ptr [rax + 0x40] ; test edx, edx ; mov r14d, edx ; je 0xc7009
read: edx rdx rflags 
write: edx r14d rax rdx rflags 
--------------------------------------------------------------------------------
000c71c7: JLP; mov r14, qword ptr [rsp + 0xe8] ; mov rdi, r14 ; call 0x856dc
read: r14 rip rsp 
write: r14 rdi rsp 
--------------------------------------------------------------------------------
000c723b: JLP; mov rax, qword ptr [rip + 0x2a1b7a] ; mov r14, qword ptr [rsp + 0xe8] ; mov rax, qword ptr fs:[rax] ; mov rax, qword ptr [rax + 0x18] ; mov esi, dword ptr [rax + 0x40] ; test esi, esi ; je 0xc78df
read: esi rflags 
write: esi r14 rax rflags 
--------------------------------------------------------------------------------
000c7386: JLP; movsxd rdx, dword ptr [r13 + 0x34] ; cmp edx, dword ptr [rsp + 0x7c] ; je 0xc779e
read: edx rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
000c73b2: JLP; mov rax, qword ptr [rsp + 0x48] ; mov r9, qword ptr [rsp + 0xe8] ; lea rdx, [r13 + 0x28] ; mov r8, qword ptr [rsp + 0xb8] ; lea rcx, [r13 + 0x44] ; mov rsi, r15 ; mov rdi, qword ptr [rax + 0x50] ; mov rax, qword ptr [rsp + 0x50] ; mov qword ptr [rsp], rax ; call 0xc033c
read: r15 rax rip rsp 
write: r8 r9 rax rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000c7400: JLP; movzx eax, byte ptr [rsp + 0xe8] ; mov edx, eax ; and eax, 0x3f ; shr dl, 6 ; mov ecx, eax ; mov eax, 1 ; movzx edx, dl ; shl rax, cl ; or qword ptr [r15 + rdx*8], rax ; jmp 0xc7216
read: cl dl eax rax 
write: dl eax ecx edx rax rflags 
--------------------------------------------------------------------------------
000c85a0: JLP; test rbp, rbp ; jne 0xc84f2
read: rbp rflags 
write: rflags 
--------------------------------------------------------------------------------
000c87d7: JLP; test dil, 4 ; jne 0xc934b
read: dil rflags 
write: rflags 
--------------------------------------------------------------------------------
000c8f70: JLP; mov rax, qword ptr [r12 + 0x68] ; mov rdi, qword ptr [rsp + 0x18] ; mov rax, qword ptr [rax + 0x18] ; movsxd rsi, dword ptr [rax + 0x38] ; mov dword ptr [r12 + 0x88], esi ; shl rsi, 4 ; add rsi, qword ptr [r12 + 0x30] ; call 0xbf22c
read: esi rip rsi rsp 
write: rax rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000c92b0: JLP; lea edi, [rbx + r14] ; call 0x965ec
read: rip rsp 
write: edi rsp 
--------------------------------------------------------------------------------
000c939e: JLP; mov edx, 1 ; nop dword ptr [rax - 0x45] ; lea r11, [r8 + 1] ; cmp r11, r10 ; je 0xc952b
read: r10 r11 rflags 
write: edx r11 rflags 
--------------------------------------------------------------------------------
000c93a7: JLP; lea r11, [r8 + 1] ; cmp r11, r10 ; je 0xc952b
read: r10 r11 rflags 
write: r11 rflags 
--------------------------------------------------------------------------------
000c93c3: JLP; mov rcx, qword ptr [rcx] ; cmp qword ptr [rcx + 0x10], 0 ; jne 0xc8f6c
read: rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
000c93e8: JLP; cmp byte ptr [rcx], 0 ; mov ecx, 1 ; cmovs edi, ecx ; jmp 0xc93a3
read: ecx edi rflags 
write: ecx edi rflags 
--------------------------------------------------------------------------------
000c93f9: JLP; mov ecx, dword ptr [rcx] ; cmp ecx, 0x20 ; je 0xc93a3
read: ecx rflags 
write: ecx rflags 
--------------------------------------------------------------------------------
000c94d8: JLP; nop dword ptr [rax] ; call 0x372fc
read: rip rsp 
write: rsp 
--------------------------------------------------------------------------------
000c9546: JLP; cmp qword ptr [r12 + 0x10], rcx ; lea rdi, [rcx + 1] ; jbe 0xc94e3
read: rcx rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
000c9963: JLP; mov dword ptr [rsp + 0x3c], r9d ; mov dword ptr [rsp + 0x38], r8d ; mov dword ptr [rsp + 0x34], edx ; mov qword ptr [rsp + 0x28], rsi ; mov dword ptr [rsp + 0x20], ecx ; call 0x1f3cc
read: ecx edx r8d r9d rip rsi rsp 
write: rsp 
--------------------------------------------------------------------------------
000c9bf6: JLP; xor eax, eax ; xor ebx, ebx ; jmp 0xc9a3c
read: eax ebx 
write: eax ebx rflags 
--------------------------------------------------------------------------------
000c9f48: JLP; and rbp, 0xffffffffffffffbf ; or byte ptr [rbx + 0x38], 0x80 ; or rbp, 0x100 ; jmp 0xc9eda
read: rbp 
write: rbp rflags 
--------------------------------------------------------------------------------
000ca190: JLP; mov edi, 0x100 ; call 0x1f3cc
read: rip rsp 
write: edi rsp 
--------------------------------------------------------------------------------
000ca218: JLP; test r8b, 4 ; mov r12, rsi ; mov r13, rcx ; jne 0xca324
read: r8b rcx rflags rsi 
write: r12 r13 rflags 
--------------------------------------------------------------------------------
000d30fb: JLP; test rbp, rbp ; je 0xd3de6
read: rbp rflags 
write: rflags 
--------------------------------------------------------------------------------
000d31b0: JLP; test rbp, rbp ; je 0xd3579
read: rbp rflags 
write: rflags 
--------------------------------------------------------------------------------
000d31fc: JLP; test rbp, rbp ; je 0xd320b
read: rbp rflags 
write: rflags 
--------------------------------------------------------------------------------
000d322d: JLP; test rbp, rbp ; je 0xd31d1
read: rbp rflags 
write: rflags 
--------------------------------------------------------------------------------
000d32cb: JLP; test r15, r15 ; je 0xd35e3
read: r15 rflags 
write: rflags 
--------------------------------------------------------------------------------
000d33c0: JLP; lea rcx, [rip + 0x633c7] ; lea rsi, [rip + 0x632f8] ; lea rdi, [rip + 0x63335] ; mov edx, 0x77b ; call 0x2eaac
read: rip rsp 
write: edx rcx rdi rsi rsp 
--------------------------------------------------------------------------------
000df293: JLP; test r13, r13 ; mov rbx, rax ; je 0xdf2a7
read: r13 rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000dfbab: JLP; lea rdi, [rsp + 0x40] ; mov rbx, rax ; call 0xdf3bc
read: rax rip rsp 
write: rbx rdi rsp 
--------------------------------------------------------------------------------
000dfbc8: JLP; mov rbp, rax ; mov rdi, rbx ; call 0x1f46c
read: rax rbx rip rsp 
write: rbp rdi rsp 
--------------------------------------------------------------------------------
000dfdca: JLP; mov rbx, rax ; xor edi, edi ; call 0xdf3bc
read: edi rax rip rsp 
write: edi rbx rflags rsp 
--------------------------------------------------------------------------------
000dfe6d: JLP; mov rbx, rax ; xor edi, edi ; call 0xdf3bc
read: edi rax rip rsp 
write: edi rbx rflags rsp 
--------------------------------------------------------------------------------
000f21d7: JLP; and dword ptr [rbx + 0x74], 0xffffffeb ; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0xf2230
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
000f23b4: JLP; and dword ptr [rbx + 0x74], 0xffffffeb ; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0xf240d
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
000f2538: JLP; and dword ptr [rbx + 0x74], 0xffffffeb ; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0xf2591
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
000f2697: JLP; and dword ptr [rbx + 0x74], 0xffffffeb ; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0xf26f0
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
000f28ac: JLP; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0xf2901
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
000f2cb0: JLP; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0xf2d05
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
000f313c: JLP; test dword ptr [r13], 0x8000 ; mov rsi, rax ; jne 0xf3193
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
000f38f7: JLP; and dword ptr [rbx + 0x74], 0xffffffeb ; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0xf3950
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
000f3ad4: JLP; and dword ptr [rbx + 0x74], 0xffffffeb ; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0xf3b2d
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
000f3c58: JLP; and dword ptr [rbx + 0x74], 0xffffffeb ; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0xf3cb1
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
000f3db7: JLP; and dword ptr [rbx + 0x74], 0xffffffeb ; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0xf3e10
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
000f3f88: JLP; test dword ptr [rbx], 0x8000 ; mov rsi, rax ; jne 0xf3fdd
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
00108520: JLP; mov dword ptr [rsi], 0xb ; ret
read: 
write: 
--------------------------------------------------------------------------------
00108530: JLP; mov dword ptr [rsi], 0xa ; ret
read: 
write: 
--------------------------------------------------------------------------------
00108540: JLP; mov dword ptr [rsi], 9 ; mov rax, qword ptr [rdi + 0x38] ; mov qword ptr [rsi + 8], rax ; mov rax, qword ptr [rdi + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
read: rax 
write: rax 
--------------------------------------------------------------------------------
00108560: JLP; mov dword ptr [rsi], 8 ; ret
read: 
write: 
--------------------------------------------------------------------------------
00108570: JLP; mov dword ptr [rsi], 0xc ; ret
read: 
write: 
--------------------------------------------------------------------------------
00108580: JLP; mov dword ptr [rsi], 0x10 ; mov qword ptr [rsi + 8], 0 ; mov qword ptr [rsi + 0x10], rax ; ret
read: rax 
write: 
--------------------------------------------------------------------------------
0010bed0: JLP; mov rax, qword ptr [r8] ; bswap eax ; mov dword ptr [rcx + 0xb4], eax ; mov eax, 1 ; ret
read: eax 
write: eax rax 
--------------------------------------------------------------------------------
0010bee8: JLP; mov rax, qword ptr [r8] ; mov rdx, qword ptr [r8 + 8] ; mov qword ptr [rcx + 8], rax ; mov qword ptr [rcx + 0x10], rdx ; mov eax, 1 ; ret
read: rax rdx 
write: eax rax rdx 
--------------------------------------------------------------------------------
0010bf08: JLP; mov rax, qword ptr [rcx + 8] ; mov rdx, qword ptr [rcx + 0x10] ; mov qword ptr [r8], rax ; mov qword ptr [r8 + 8], rdx ; mov eax, 1 ; ret
read: rax rdx 
write: eax rax rdx 
--------------------------------------------------------------------------------
0010bf28: JLP; mov rax, qword ptr [rcx + 0x1c] ; mov qword ptr [r8], rax ; mov rax, qword ptr [rcx + 0x24] ; mov qword ptr [r8 + 8], rax ; mov rax, qword ptr [rcx + 0x2c] ; mov qword ptr [r8 + 0x10], rax ; mov rax, qword ptr [rcx + 0x34] ; mov qword ptr [r8 + 0x18], rax ; mov rax, qword ptr [rcx + 0x3c] ; mov qword ptr [r8 + 0x20], rax ; mov rax, qword ptr [rcx + 0x44] ; mov qword ptr [r8 + 0x28], rax ; mov rax, qword ptr [rcx + 0x4c] ; mov qword ptr [r8 + 0x30], rax ; mov rax, qword ptr [rcx + 0x54]
read: rax 
write: rax 
--------------------------------------------------------------------------------
0010bfb0: JLP; mov eax, dword ptr [rcx] ; mov dword ptr [r8], eax ; mov eax, 1 ; ret
read: eax 
write: eax 
--------------------------------------------------------------------------------
0010bfc0: JLP; mov dword ptr [rcx + 4], 1 ; mov eax, 1 ; ret
read: 
write: eax 
--------------------------------------------------------------------------------
0010bfd8: JLP; mov dword ptr [rcx + 4], 0 ; mov eax, 1 ; ret
read: 
write: eax 
--------------------------------------------------------------------------------
0010bff0: JLP; mov eax, dword ptr [rcx + 0xa8] ; bswap eax ; mov eax, eax ; mov qword ptr [r8], rax ; mov eax, 1 ; ret
read: eax rax 
write: eax 
--------------------------------------------------------------------------------
0010c010: JLP; mov rax, qword ptr [r8] ; sub eax, 1 ; bswap eax ; mov dword ptr [rcx + 0xa8], eax ; mov eax, 1 ; ret
read: eax 
write: eax rax rflags 
--------------------------------------------------------------------------------
0010c030: JLP; mov eax, dword ptr [rcx + 0xb8] ; bswap eax ; mov eax, eax ; mov qword ptr [r8], rax ; mov eax, 1 ; ret
read: eax rax 
write: eax 
--------------------------------------------------------------------------------
0010c050: JLP; mov rax, qword ptr [r8] ; bswap eax ; mov dword ptr [rcx + 0xb8], eax ; mov eax, 1 ; ret
read: eax 
write: eax rax 
--------------------------------------------------------------------------------
0010c068: JLP; mov eax, dword ptr [rcx + 0xb4] ; bswap eax ; mov eax, eax ; mov qword ptr [r8], rax ; mov eax, 1 ; ret
read: eax rax 
write: eax 
--------------------------------------------------------------------------------
0010c080: JLP; xor eax, eax ; ret
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
0010c530: JLP; sub ebx, eax ; cdqe ; add rbp, rax ; test ebx, ebx ; jle 0x10c57c
read: eax ebx rax rbp rflags 
write: ebx rax rbp rflags 
--------------------------------------------------------------------------------
0010c580: JLP; add rsp, 8 ; mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: r13d rsp 
write: eax r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010e768: JLP; mov r13, qword ptr [rsp + 0x20] ; mov r12, qword ptr [rsp + 0x18] ; lea rsi, [rip + 0x2dd23] ; lea rdi, [rip + 0x2622d] ; mov edx, 5 ; call 0x2f4bc
read: rip rsp 
write: edx r12 r13 rdi rsi rsp 
--------------------------------------------------------------------------------
0010e7f8: JLP; mov r12d, dword ptr [rsp + 0x18] ; lea rax, [rip + 0x25798] ; xor edi, edi ; nop word ptr [rax + rax] ; cmp r12d, dword ptr [rax + rdi*8] ; je 0x10e90c
read: edi r12d rflags 
write: edi r12d rax rflags 
--------------------------------------------------------------------------------
0010e868: JLP; lea rdi, [rsp + 8] ; lea rsi, [rip + 0x27ecc] ; mov rcx, rbp ; mov rdx, rbx ; xor eax, eax ; call 0x523bc
read: eax rbp rbx rip rsp 
write: eax rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0010e890: JLP; mov edi, dword ptr [rsp + 0x18] ; lea rsi, [rsp + 0x30] ; mov edx, 0x400 ; call 0x8552c
read: rip rsp 
write: edi edx rsi rsp 
--------------------------------------------------------------------------------
0010ec08: JLP; mov rax, qword ptr [rdx] ; bswap eax ; mov dword ptr [rcx + 0x54], eax ; mov eax, 1 ; ret
read: eax 
write: eax rax 
--------------------------------------------------------------------------------
0010ec20: JLP; mov rax, qword ptr [rdx] ; mov rdx, qword ptr [rdx + 8] ; mov dword ptr [rcx + 0x18], 1 ; mov qword ptr [rcx + 8], rax ; mov qword ptr [rcx + 0x10], rdx ; mov eax, 1 ; ret
read: rax rdx 
write: eax rax rdx 
--------------------------------------------------------------------------------
0010ec40: JLP; mov rsi, qword ptr [rcx + 8] ; mov rdi, qword ptr [rcx + 0x10] ; mov eax, 1 ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
read: rdi rsi 
write: eax rdi rsi 
--------------------------------------------------------------------------------
0010ec60: JLP; mov rsi, qword ptr [rcx + 0x1c] ; mov rdi, qword ptr [rcx + 0x24] ; mov eax, 1 ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
read: rdi rsi 
write: eax rdi rsi 
--------------------------------------------------------------------------------
0010ec80: JLP; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
read: eax 
write: eax 
--------------------------------------------------------------------------------
0010ec90: JLP; mov dword ptr [rcx + 4], 1 ; mov eax, 1 ; ret
read: 
write: eax 
--------------------------------------------------------------------------------
0010eca8: JLP; mov dword ptr [rcx + 4], 0 ; mov eax, 1 ; ret
read: 
write: eax 
--------------------------------------------------------------------------------
0010ecc0: JLP; mov eax, dword ptr [rcx + 0x48] ; bswap eax ; mov eax, eax ; mov qword ptr [rdx], rax ; mov eax, 1 ; ret
read: eax rax 
write: eax 
--------------------------------------------------------------------------------
0010ecd8: JLP; mov rax, qword ptr [rdx] ; sub eax, 1 ; bswap eax ; mov dword ptr [rcx + 0x48], eax ; mov eax, 1 ; ret
read: eax 
write: eax rax rflags 
--------------------------------------------------------------------------------
0010ecf0: JLP; mov eax, dword ptr [rcx + 0x58] ; bswap eax ; mov eax, eax ; mov qword ptr [rdx], rax ; mov eax, 1 ; ret
read: eax rax 
write: eax 
--------------------------------------------------------------------------------
0010ed08: JLP; mov rax, qword ptr [rdx] ; bswap eax ; mov dword ptr [rcx + 0x58], eax ; mov eax, 1 ; ret
read: eax 
write: eax rax 
--------------------------------------------------------------------------------
0010ed20: JLP; mov eax, dword ptr [rcx + 0x54] ; bswap eax ; mov eax, eax ; mov qword ptr [rdx], rax ; mov eax, 1 ; ret
read: eax rax 
write: eax 
--------------------------------------------------------------------------------
0010ed38: JLP; xor eax, eax ; ret
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
0010f568: JLP; mov rdx, qword ptr [rdx] ; mov rax, qword ptr [rdi + 0x90] ; bswap edx ; mov dword ptr [rax + 0xc], edx ; mov eax, 1 ; ret
read: edx 
write: eax edx rax rdx 
--------------------------------------------------------------------------------
0010f588: JLP; mov rax, qword ptr [rdx] ; mov rdx, qword ptr [rdx + 8] ; mov qword ptr [rdi + 0x30], rax ; mov qword ptr [rdi + 0x38], rdx ; mov eax, 1 ; ret
read: rax rdx 
write: eax rax rdx 
--------------------------------------------------------------------------------
0010f5a8: JLP; mov rsi, qword ptr [rdi + 0x30] ; mov rdi, qword ptr [rdi + 0x38] ; mov eax, 1 ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
read: rdi rsi 
write: eax rdi rsi 
--------------------------------------------------------------------------------
0010f5c8: JLP; mov rsi, qword ptr [rdi + 8] ; mov rdi, qword ptr [rdi + 0x10] ; mov eax, 1 ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
read: rdi rsi 
write: eax rdi rsi 
--------------------------------------------------------------------------------
0010f5e8: JLP; mov rax, qword ptr [rdx] ; mov rdx, qword ptr [rdx + 8] ; mov qword ptr [rdi + 0x20], rax ; mov qword ptr [rdi + 0x28], rdx ; mov eax, 1 ; ret
read: rax rdx 
write: eax rax rdx 
--------------------------------------------------------------------------------
0010f608: JLP; mov rsi, qword ptr [rdi + 0x20] ; mov rdi, qword ptr [rdi + 0x28] ; mov eax, 1 ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
read: rdi rsi 
write: eax rdi rsi 
--------------------------------------------------------------------------------
0010f628: JLP; mov eax, dword ptr [rdi] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
read: eax 
write: eax 
--------------------------------------------------------------------------------
0010f640: JLP; mov dword ptr [rdi + 4], 1 ; mov eax, 1 ; ret
read: 
write: eax 
--------------------------------------------------------------------------------
0010f658: JLP; mov dword ptr [rdi + 4], 0 ; mov eax, 1 ; ret
read: 
write: eax 
--------------------------------------------------------------------------------
0010f670: JLP; mov rax, qword ptr [rdi + 0x90] ; mov eax, dword ptr [rax] ; bswap eax ; mov eax, eax ; mov qword ptr [rdx], rax ; mov eax, 1 ; ret
read: eax rax 
write: eax rax 
--------------------------------------------------------------------------------
0010f690: JLP; mov rax, qword ptr [rdx] ; mov rdx, qword ptr [rdi + 0x90] ; sub eax, 1 ; bswap eax ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
read: eax 
write: eax rax rdx rflags 
--------------------------------------------------------------------------------
0010f6b0: JLP; mov rax, qword ptr [rdi + 0x90] ; mov eax, dword ptr [rax + 0x10] ; bswap eax ; mov eax, eax ; mov qword ptr [rdx], rax ; mov eax, 1 ; ret
read: eax rax 
write: eax rax 
--------------------------------------------------------------------------------
0010f6d0: JLP; mov rdx, qword ptr [rdx] ; mov rax, qword ptr [rdi + 0x90] ; bswap edx ; mov dword ptr [rax + 0x10], edx ; mov eax, 1 ; ret
read: edx 
write: eax edx rax rdx 
--------------------------------------------------------------------------------
0010f6f0: JLP; mov rax, qword ptr [rdi + 0x90] ; mov eax, dword ptr [rax + 0xc] ; bswap eax ; mov eax, eax ; mov qword ptr [rdx], rax ; mov eax, 1 ; ret
read: eax rax 
write: eax rax 
--------------------------------------------------------------------------------
0010f710: JLP; xor eax, eax ; ret
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
00110058: JLP; lea rax, [rip + 0x25687d] ; mov qword ptr [rbx + 0x10], r15 ; mov qword ptr [rbx + 8], rax ; mov rax, qword ptr [rbp] ; mov rdx, qword ptr [rbp + 8] ; mov dword ptr [r15 + 0x18], 0x10 ; lea rbp, [r15 + 0x58] ; mov qword ptr [r15 + 0x30], -1 ; mov qword ptr [r15 + 0x38], -1 ; mov qword ptr [r15 + 8], rax ; mov rax, qword ptr [rsp + 0x18] ; mov qword ptr [r15 + 0x10], rdx ; mov dword ptr [r15 + 0x8c], r13d ; mov dword ptr [r15 + 0x98], r14d ; mov qword ptr [r15 + 0x20], rax
read: r13d r14d r15 rax rdx 
write: rax rbp rdx 
--------------------------------------------------------------------------------
00115128: JLP; movzx esi, byte ptr [rdi] ; xor ecx, ecx ; lea rax, [rdi + 1] ; add ecx, esi ; imul ecx, ecx, 0x1003f ; lea rdi, [rax + 1] ; movzx eax, byte ptr [rax] ; add ecx, eax ; imul ecx, ecx, 0x1003f ; movzx esi, byte ptr [rdi] ; lea rax, [rdi + 1] ; add ecx, esi ; imul ecx, ecx, 0x1003f ; lea rdi, [rax + 1] ; movzx eax, byte ptr [rax]
read: eax ecx esi 
write: eax ecx esi rax rdi rflags 
--------------------------------------------------------------------------------
001151c0: JLP; xor eax, eax ; jmp 0x11518a
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
001151d0: JLP; mov rcx, rdi ; xor eax, eax ; jmp 0x115175
read: eax rdi 
write: eax rcx rflags 
--------------------------------------------------------------------------------
001151e0: JLP; xor eax, eax ; jmp 0x115166
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
001151f0: JLP; mov rax, rdi ; xor ecx, ecx ; jmp 0x115157
read: ecx rdi 
write: ecx rax rflags 
--------------------------------------------------------------------------------
00115200: JLP; xor ecx, ecx ; jmp 0x115148
read: ecx 
write: ecx rflags 
--------------------------------------------------------------------------------
00115210: JLP; mov rax, rdi ; xor ecx, ecx ; jmp 0x115139
read: ecx rdi 
write: ecx rax rflags 
--------------------------------------------------------------------------------
00115220: JLP; xor ecx, ecx ; jmp 0x115199
read: ecx 
write: ecx rflags 
--------------------------------------------------------------------------------
0001f4c8: RLP; test rax, rax ; mov rbx, rax ; jne 0x1f4dc
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
0001f4ef: RLP; test rax, rax ; mov rbp, rax ; je 0x1f4d0
read: rax rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
0001f50a: RLP; test rax, rax ; je 0x1f4d0
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0001f658: RLP; mov r9, qword ptr [rbp - 0x38] ; movsxd rdi, r12d ; mov rsi, r14 ; add rdi, r9 ; cmp rax, r13 ; jbe 0x1f6ca
read: r12d r13 r14 r9 rax rdi rflags 
write: r9 rdi rflags rsi 
--------------------------------------------------------------------------------
0001f70f: RLP; mov edi, 0x2e ; mov r13, rax ; mov rsi, rax ; call 0xe6ecc
read: rax rip rsp 
write: edi r13 rsi rsp 
--------------------------------------------------------------------------------
0001f723: RLP; mov rsi, r13 ; mov edi, 0x2c ; mov r12d, eax ; call 0xe6ecc
read: eax r13 rip rsp 
write: edi r12d rsi rsp 
--------------------------------------------------------------------------------
0001f737: RLP; test r13, r13 ; je 0x1f7b5
read: r13 rflags 
write: rflags 
--------------------------------------------------------------------------------
0001f768: RLP; cmp rax, -1 ; mov r8, qword ptr [rbp - 0x88] ; mov ecx, dword ptr [rbp - 0x8c] ; jne 0x1f783
read: rax rflags 
write: ecx r8 rflags 
--------------------------------------------------------------------------------
0001f7a2: RLP; cmp rax, -1 ; jne 0x1f7b0
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0001f7de: RLP; mov rdx, qword ptr [rbp - 0x88] ; test eax, eax ; setne bl ; and bl, 1 ; je 0x1f805
read: bl eax rflags 
write: bl rdx rflags 
--------------------------------------------------------------------------------
0001f818: RLP; test rax, rax ; mov r12, rax ; mov rdx, qword ptr [rbp - 0x88] ; je 0x1f913
read: rax rflags 
write: r12 rdx rflags 
--------------------------------------------------------------------------------
0001f83e: RLP; mov rdx, r14 ; lea r14, [rbp - 0x70] ; mov r10, rax ; or rsi, 0xffffffffffffffff ; xor eax, eax ; dec r10 ; cmp r10, r12 ; jb 0x1f8f0
read: eax r10 r12 r14 rax rflags rsi 
write: eax r10 r14 rdx rflags rsi 
--------------------------------------------------------------------------------
0001f90a: RLP; mov rax, qword ptr [rbp - 0x88] ; jmp 0x1f916
read: 
write: rax 
--------------------------------------------------------------------------------
0001f953: RLP; mov edi, 0x2e ; mov r13, rax ; mov rsi, rax ; call 0xe6ecc
read: rax rip rsp 
write: edi r13 rsi rsp 
--------------------------------------------------------------------------------
0001f967: RLP; mov rsi, r13 ; mov edi, 0x2c ; mov r12d, eax ; call 0xe6ecc
read: eax r13 rip rsp 
write: edi r12d rsi rsp 
--------------------------------------------------------------------------------
0001f97b: RLP; test r13, r13 ; je 0x1f9f9
read: r13 rflags 
write: rflags 
--------------------------------------------------------------------------------
0001f9ac: RLP; cmp rax, -1 ; mov r8, qword ptr [rbp - 0x88] ; mov ecx, dword ptr [rbp - 0x8c] ; jne 0x1f9c7
read: rax rflags 
write: ecx r8 rflags 
--------------------------------------------------------------------------------
0001f9e6: RLP; cmp rax, -1 ; jne 0x1f9f4
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0001fa22: RLP; mov rdx, qword ptr [rbp - 0x88] ; test eax, eax ; setne bl ; and bl, 1 ; je 0x1fa49
read: bl eax rflags 
write: bl rdx rflags 
--------------------------------------------------------------------------------
0001fa5c: RLP; test rax, rax ; mov r12, rax ; mov rdx, qword ptr [rbp - 0x88] ; je 0x1fb57
read: rax rflags 
write: r12 rdx rflags 
--------------------------------------------------------------------------------
0001fa82: RLP; mov rdx, r14 ; lea r14, [rbp - 0x70] ; mov r10, rax ; or rsi, 0xffffffffffffffff ; xor eax, eax ; dec r10 ; cmp r10, r12 ; jb 0x1fb34
read: eax r10 r12 r14 rax rflags rsi 
write: eax r10 r14 rdx rflags rsi 
--------------------------------------------------------------------------------
0001fb4e: RLP; mov rax, qword ptr [rbp - 0x88] ; jmp 0x1fb5a
read: 
write: rax 
--------------------------------------------------------------------------------
0001fc12: RLP; mov rsi, r15 ; cmp rax, r12 ; jbe 0x1fc6f
read: r12 r15 rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
0001fcc1: RLP; mov edi, 0x2e ; mov r14, rax ; mov rsi, rax ; call 0xe6ecc
read: rax rip rsp 
write: edi r14 rsi rsp 
--------------------------------------------------------------------------------
0001fcd5: RLP; mov rsi, r14 ; mov edi, 0x2c ; mov dword ptr [rbp - 0x3c], eax ; call 0xe6ecc
read: eax r14 rip rsp 
write: edi rsi rsp 
--------------------------------------------------------------------------------
0001fce9: RLP; cmp r13, 0x1000 ; mov dword ptr [rbp - 0x40], eax ; jbe 0x1fd08
read: eax r13 rflags 
write: rflags 
--------------------------------------------------------------------------------
0001fd03: RLP; test eax, eax ; setne bl ; and bl, 1 ; je 0x1fd23
read: bl eax rflags 
write: bl rflags 
--------------------------------------------------------------------------------
0001fd2f: RLP; test rax, rax ; mov r15, rax ; je 0x1fdd2
read: rax rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
0001fd4d: RLP; mov rcx, rax ; mov rax, qword ptr [rip + 0x349065] ; mov rdx, qword ptr [rbp - 0x38] ; mov rsi, qword ptr fs:[rax] ; sub rdx, 4 ; sub rcx, 4 ; lea rax, [rdx + 4] ; cmp rcx, r15 ; jb 0x1fdb8
read: r15 rax rcx rdx rflags 
write: rax rcx rdx rflags rsi 
--------------------------------------------------------------------------------
0001fdcc: RLP; mov rax, qword ptr [rbp - 0x38] ; jmp 0x1fdd5
read: 
write: rax 
--------------------------------------------------------------------------------
0001fe1a: RLP; cmp eax, 2 ; mov ebp, eax ; jle 0x1fec8
read: eax rflags 
write: ebp rflags 
--------------------------------------------------------------------------------
0001fe3d: RLP; lea esi, [rbp - 1] ; lea rdi, [rsp + 8] ; mov edx, r12d ; lea rbp, [rsp + 0x200] ; call 0xf14fc
read: r12d rip rsp 
write: edx esi rbp rdi rsp 
--------------------------------------------------------------------------------
0001fe59: RLP; lea rsi, [rip + 0x115b3b] ; mov edx, 0x1d ; mov edi, r12d ; call 0xd6ad9
read: r12d rip rsp 
write: edi edx rsi rsp 
--------------------------------------------------------------------------------
0001fe71: RLP; lea rdi, [rip + 0x115b41] ; xor esi, esi ; xor eax, eax ; call 0xd6819
read: eax esi rip rsp 
write: eax esi rdi rflags rsp 
--------------------------------------------------------------------------------
0001fe85: RLP; mov r13d, eax ; mov edx, 0x400 ; mov rsi, rbp ; mov edi, r13d ; call 0xd6a69
read: eax r13d rbp rip rsp 
write: edi edx r13d rsi rsp 
--------------------------------------------------------------------------------
0001fe9c: RLP; movsxd rbx, eax ; test rbx, rbx ; jle 0x1febe
read: eax rbx rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
0001feb6: RLP; movsxd rdx, eax ; cmp rdx, rbx ; je 0x1fe88
read: eax rbx rdx rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
0001ff2d: RLP; mov byte ptr [rax], 0x2f ; inc rax ; mov rsi, r13 ; mov rdi, rax ; mov rcx, rbx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; lea rsi, [rbp - 0xb0] ; mov rdi, r12 ; call qword ptr [r14]
read: r12 r13 rax rbx rcx rdi rflags rsi rsp 
write: rax rcx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
0001ff4f: RLP; test eax, eax ; sete al ; lea rsp, [rbp - 0x20] ; movzx eax, al ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
read: al eax rflags rsp 
write: al eax r12 r13 r14 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0001ffa8: RLP; mov qword ptr [rbp - 0x68], rax ; lea rax, [rbp - 0x38] ; mov r12, qword ptr [rbp + 0x10] ; xor r8d, r8d ; mov qword ptr [rbp - 0x78], r14 ; mov dword ptr [rbp - 0x48], 0 ; mov qword ptr [rbp - 0x58], rax ; mov eax, ebx ; mov rbx, r13 ; sub eax, 0x3f ; mov r14, r12 ; mov r12d, r8d ; mov dword ptr [rbp - 0x60], eax ; mov eax, dword ptr [r13] ; test eax, eax
read: eax ebx r12 r13 r14 r8d rax 
write: eax r12 r12d r14 r8d rax rbx rflags 
--------------------------------------------------------------------------------
00020001: RLP; cmp rax, 1 ; sbb eax, eax ; or eax, 1 ; mov dword ptr [rip + 0x34beb8], eax ; mov edx, dword ptr [r13 + 4] ; lea rax, [r13 + 4] ; cmp edx, 0x21 ; je 0x2002b
read: eax edx rax rflags 
write: eax edx rax rflags 
--------------------------------------------------------------------------------
000200ca: RLP; test eax, eax ; setne al ; movzx eax, al ; xor eax, 1 ; mov esi, eax ; je 0x20100
read: al eax rflags 
write: al eax esi rflags 
--------------------------------------------------------------------------------
000200e8: RLP; test rax, rax ; mov r12, rax ; je 0x2056b
read: rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
00020146: RLP; mov dword ptr [rax], 0 ; mov rax, qword ptr [rbp - 0x58] ; mov qword ptr [rbp - 0x58], r12 ; mov qword ptr [rax], r12 ; or r12d, 0xffffffff ; jmp 0x2024b
read: r12 r12d 
write: r12d rax rflags 
--------------------------------------------------------------------------------
000201b2: RLP; mov rdx, qword ptr [rbp - 0x80] ; test eax, eax ; setne al ; movzx eax, al ; xor eax, 1 ; mov esi, eax ; je 0x201ec
read: al eax rflags 
write: al eax esi rdx rflags 
--------------------------------------------------------------------------------
000201d4: RLP; test rax, rax ; mov r8, rax ; je 0x2056b
read: rax rflags 
write: r8 rflags 
--------------------------------------------------------------------------------
00020236: RLP; mov r8, qword ptr [rbp - 0x80] ; mov dword ptr [rax], 0 ; mov rax, qword ptr [rbp - 0x58] ; mov qword ptr [rbp - 0x58], r8 ; mov qword ptr [rax], r8 ; test r12d, r12d ; lea rax, [r13 + 4] ; js 0x2025c
read: r12d r8 rflags 
write: r8 rax rflags 
--------------------------------------------------------------------------------
0002033b: RLP; mov edx, eax ; xor eax, eax ; test edx, edx ; je 0x2057b
read: eax edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
0002038b: RLP; test eax, eax ; je 0x203a2
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000203dc: RLP; test eax, eax ; je 0x20572
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00020419: RLP; test eax, eax ; jne 0x2038f
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00020462: RLP; mov edx, eax ; xor eax, eax ; test edx, edx ; je 0x2057b
read: eax edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
00020492: RLP; mov ecx, dword ptr [rbp - 0x44] ; mov rdx, qword ptr [rbp - 0x50] ; xor r9d, r9d ; mov qword ptr [rsp], r12 ; mov r8d, r13d ; mov rsi, r15 ; mov rdi, rax ; call 0xb841c
read: r12 r13d r15 r9d rax rip rsp 
write: ecx r8d r9d rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000204b2: RLP; test eax, eax ; je 0x20572
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000204f3: RLP; test eax, eax ; jne 0x204cb
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00020541: RLP; test eax, eax ; jne 0x204f7
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000205a7: RLP; jmp 0x20583
read: 
write: 
--------------------------------------------------------------------------------
00020659: RLP; cmp rax, 1 ; sbb eax, eax ; or eax, 1 ; mov dword ptr [rip + 0x34b860], eax ; mov dl, byte ptr [r13 + 1] ; lea rax, [r13 + 1] ; cmp dl, 0x21 ; je 0x20683
read: dl eax rax rflags 
write: dl eax rax rflags 
--------------------------------------------------------------------------------
00020718: RLP; test eax, eax ; setne al ; movzx eax, al ; xor eax, 1 ; mov esi, eax ; je 0x2074e
read: al eax rflags 
write: al eax esi rflags 
--------------------------------------------------------------------------------
00020736: RLP; test rax, rax ; mov r12, rax ; je 0x20b9f
read: rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
00020790: RLP; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 0x58] ; mov qword ptr [rbp - 0x58], r12 ; mov qword ptr [rax], r12 ; or r12d, 0xffffffff ; jmp 0x20882
read: r12 r12d 
write: r12d rax rflags 
--------------------------------------------------------------------------------
000207f0: RLP; mov rdx, qword ptr [rbp - 0x80] ; test eax, eax ; setne al ; movzx eax, al ; xor eax, 1 ; mov esi, eax ; je 0x2082a
read: al eax rflags 
write: al eax esi rdx rflags 
--------------------------------------------------------------------------------
00020812: RLP; test rax, rax ; mov r8, rax ; je 0x20b9f
read: rax rflags 
write: r8 rflags 
--------------------------------------------------------------------------------
00020870: RLP; mov r8, qword ptr [rbp - 0x80] ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 0x58] ; mov qword ptr [rbp - 0x58], r8 ; mov qword ptr [rax], r8 ; test r12d, r12d ; lea rax, [r13 + 1] ; js 0x20893
read: r12d r8 rflags 
write: r8 rax rflags 
--------------------------------------------------------------------------------
00020972: RLP; mov edx, eax ; xor eax, eax ; test edx, edx ; je 0x20baf
read: eax edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
000209c1: RLP; test eax, eax ; je 0x209d7
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00020a11: RLP; test eax, eax ; je 0x20ba6
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00020a4e: RLP; test eax, eax ; jne 0x209c5
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00020a97: RLP; mov edx, eax ; xor eax, eax ; test edx, edx ; je 0x20baf
read: eax edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
00020ac7: RLP; mov ecx, dword ptr [rbp - 0x44] ; mov rdx, qword ptr [rbp - 0x50] ; xor r9d, r9d ; mov qword ptr [rsp], r12 ; mov r8d, r13d ; mov rsi, r15 ; mov rdi, rax ; call 0xb9c2c
read: r12 r13d r15 r9d rax rip rsp 
write: ecx r8d r9d rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00020ae7: RLP; test eax, eax ; je 0x20ba6
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00020b28: RLP; test eax, eax ; jne 0x20b00
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00020b75: RLP; test eax, eax ; jne 0x20b2c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00020bdb: RLP; jmp 0x20bb7
read: 
write: 
--------------------------------------------------------------------------------
00020c1e: RLP; test eax, eax ; je 0x2140b
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000210e3: RLP; test eax, eax ; jne 0x2111d
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002110e: RLP; test eax, eax ; js 0x2111d
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002118b: RLP; test eax, eax ; lea rdx, [rbp - 0x90] ; jne 0x211ca
read: eax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
000211f0: RLP; jmp 0x211cc
read: 
write: 
--------------------------------------------------------------------------------
0002120e: RLP; test ebx, ebx ; jne 0x21404
read: ebx rflags 
write: rflags 
--------------------------------------------------------------------------------
0002122b: RLP; mov rcx, qword ptr [rbp - 0xb0] ; test rax, rax ; setne bl ; mov qword ptr [rcx + 0x40], rax ; jmp 0x217cc
read: rax rflags 
write: bl rcx rflags 
--------------------------------------------------------------------------------
00021262: RLP; cmp rax, 1 ; mov qword ptr [rbp - 0x68], rax ; sbb eax, eax ; and eax, 0xc ; test eax, eax ; mov dword ptr [rbp - 0x90], eax ; jne 0x213b8
read: eax rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000212a4: RLP; test eax, eax ; je 0x217a4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002138a: RLP; test eax, eax ; mov dword ptr [rbp - 0x90], eax ; je 0x21431
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000213b8: RLP; mov rdi, qword ptr [rbp - 0x68] ; xor ebx, ebx ; call 0x1f46c
read: ebx rip rsp 
write: ebx rdi rflags rsp 
--------------------------------------------------------------------------------
000213c7: RLP; mov rcx, qword ptr [rbp - 0xc0] ; mov rax, rbx ; inc rbx ; shl rax, 4 ; mov rdi, qword ptr [rcx + rax + 8] ; call 0x1f46c
read: rax rbx rip rsp 
write: rax rbx rcx rdi rflags rsp 
--------------------------------------------------------------------------------
000213e6: RLP; cmp r15d, ebx ; jg 0x213c7
read: ebx r15d rflags 
write: rflags 
--------------------------------------------------------------------------------
00021404: RLP; xor ebx, ebx ; jmp 0x217cc
read: ebx 
write: ebx rflags 
--------------------------------------------------------------------------------
00021419: RLP; test rax, rax ; mov qword ptr [rbp - 0xc0], rax ; je 0x21404
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00021451: RLP; mov rdi, qword ptr [rbp - 0xa0] ; mov rcx, qword ptr [rbp - 0x98] ; test rax, rax ; mov qword ptr [rdi + rcx*8], rax ; jne 0x21475
read: rax rflags 
write: rcx rdi rflags 
--------------------------------------------------------------------------------
0002149a: RLP; mov rcx, qword ptr [rbp - 0xd0] ; mov rdi, qword ptr [rbp - 0x98] ; test rax, rax ; mov qword ptr [rcx + rdi*8], rax ; jne 0x214be
read: rax rflags 
write: rcx rdi rflags 
--------------------------------------------------------------------------------
00021507: RLP; mov rcx, qword ptr [rbp - 0xd8] ; mov rdi, qword ptr [rbp - 0x98] ; test rax, rax ; mov qword ptr [rcx + rdi*8], rax ; jne 0x21554
read: rax rflags 
write: rcx rdi rflags 
--------------------------------------------------------------------------------
000215b2: RLP; mov rcx, qword ptr [rbp - 0xb0] ; test rax, rax ; mov qword ptr [rcx + 0x40], rax ; je 0x2139f
read: rax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
00021660: RLP; mov rcx, qword ptr [rbp - 0xb0] ; test rax, rax ; mov qword ptr [rcx + 0x48], rax ; je 0x2139f
read: rax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
00021751: RLP; mov rdi, qword ptr [rbp - 0x68] ; xor ebx, ebx ; call 0x1f46c
read: ebx rip rsp 
write: ebx rdi rflags rsp 
--------------------------------------------------------------------------------
00021760: RLP; mov r12, qword ptr [rbp - 0xc0] ; mov rax, rbx ; inc rbx ; shl rax, 4 ; mov rdi, qword ptr [r12 + rax + 8] ; call 0x1f46c
read: rax rbx rip rsp 
write: r12 rax rbx rdi rflags rsp 
--------------------------------------------------------------------------------
0002177f: RLP; cmp r15d, ebx ; jg 0x21767
read: ebx r15d rflags 
write: rflags 
--------------------------------------------------------------------------------
000217a2: RLP; jmp 0x217cc
read: 
write: 
--------------------------------------------------------------------------------
000217b0: RLP; test rax, rax ; mov qword ptr [rbp - 0xa0], rax ; je 0x213b8
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00021851: RLP; mov esi, ebp ; mov edi, 0xc2 ; mov r13, rax ; call 0x9441c
read: ebp rax rip rsp 
write: edi esi r13 rsp 
--------------------------------------------------------------------------------
00021864: RLP; test rax, rax ; mov r12, rax ; mov r8d, 3 ; jle 0x21a7e
read: rax rflags 
write: r12 r8d rflags 
--------------------------------------------------------------------------------
00021952: RLP; mov edi, 0xbf ; mov r13, rax ; call 0x9455c
read: rax rip rsp 
write: edi r13 rsp 
--------------------------------------------------------------------------------
00021963: RLP; mov edi, 0xc2 ; mov r12, rax ; call 0x9455c
read: rax rip rsp 
write: edi r12 rsp 
--------------------------------------------------------------------------------
00021974: RLP; mov r9d, 1 ; mov r8, rax ; mov esi, 0x80000000 ; mov eax, r9d ; cpuid ; shl ecx, 0x16 ; mov r10d, edx ; mov r11d, ebx ; sar ecx, 0x1f ; mov edi, eax ; mov eax, esi ; and ecx, 3 ; mov dword ptr [rip + 0x34cb3c], ecx ; cpuid ; test r8, r8
read: eax ebx ecx edx esi r8 r9d rax 
write: eax ebx ecx edi edx esi r10d r11d r8 r9d rflags 
--------------------------------------------------------------------------------
00021a8e: RLP; mov r8d, 2 ; mov r12, rax ; jmp 0x21876
read: rax 
write: r12 r8d 
--------------------------------------------------------------------------------
00021bbb: RLP; test rax, rax ; je 0x21c74
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00021beb: RLP; mov rdx, rbx ; test rax, rax ; mov rsi, rbp ; mov edi, r12d ; mov rcx, -0x9ff800 ; cmovne rcx, rax ; xor rcx, qword ptr fs:[0x30] ; rol rcx, 0x11 ; mov qword ptr [rip + 0x34c72e], rcx ; call 0xe33ec
read: r12d rax rbp rbx rcx rflags rip rsp 
write: edi rcx rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00021c1f: RLP; call 0x2effc
read: rip rsp 
write: rsp 
--------------------------------------------------------------------------------
00021c28: RLP; call 0x21acc
read: rip rsp 
write: rsp 
--------------------------------------------------------------------------------
00021c31: RLP; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rsp 
write: r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00021c6a: RLP; jmp 0x21b27
read: 
write: 
--------------------------------------------------------------------------------
00021d17: RLP; mov rdx, qword ptr [rip + 0x34713e] ; mov eax, dword ptr [rdx] ; and eax, 2 ; movsxd rbx, eax ; test rbx, rbx ; jne 0x21e8f
read: eax rbx rflags 
write: eax rbx rdx rflags 
--------------------------------------------------------------------------------
00021d4d: RLP; mov rax, qword ptr [rip + 0x347108] ; mov ebp, dword ptr [rax + 0x120] ; test ebp, ebp ; jne 0x21e4b
read: ebp rflags 
write: ebp rax rflags 
--------------------------------------------------------------------------------
00021d79: RLP; test eax, eax ; jne 0x21dd3
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00021dc5: RLP; mov edi, eax ; call 0x38aec
read: eax rip rsp 
write: edi rsp 
--------------------------------------------------------------------------------
00021ded: RLP; mov rax, qword ptr [rip + 0x34c948] ; ror rax, 0x11 ; xor rax, qword ptr fs:[0x30] ; lock dec dword ptr [rax] ; sete dl ; test dl, dl ; jne 0x21eaf
read: dl rax rflags 
write: dl rax rflags 
--------------------------------------------------------------------------------
00021e46: RLP; jmp 0x21d6b
read: 
write: 
--------------------------------------------------------------------------------
00021e7d: RLP; add r12d, 1 ; mov r13, qword ptr [r13 + 0x40] ; cmp ebp, r12d ; jne 0x21e5f
read: ebp r12d rflags 
write: r12d r13 rflags 
--------------------------------------------------------------------------------
00021eaa: RLP; jmp 0x21d2f
read: 
write: 
--------------------------------------------------------------------------------
00021ede: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00021f1d: RLP; xor edi, edi ; call 0xb319c
read: edi rip rsp 
write: edi rflags rsp 
--------------------------------------------------------------------------------
00021f4f: RLP; cmp eax, -1 ; je 0x21f60
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00021f9d: RLP; cmp ebx, eax ; lea r12, [r12*4 + 0x103] ; jne 0x21fdc
read: eax ebx rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
00021fbc: RLP; test eax, eax ; jne 0x21fdc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00022004: RLP; mov esi, 0x20000 ; mov edi, 1 ; call 0x21f2c
read: rip rsp 
write: edi esi rsp 
--------------------------------------------------------------------------------
00022017: RLP; mov esi, 0x20000 ; mov edi, 2 ; call 0x21f2c
read: rip rsp 
write: edi esi rsp 
--------------------------------------------------------------------------------
0002202a: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00022060: RLP; mov rax, qword ptr [rip + 0x348885] ; mov rdi, qword ptr [rsp + 8] ; call rax
read: rax rsp 
write: rax rdi rsp 
--------------------------------------------------------------------------------
00022096: RLP; add rsp, 0x28 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000220ba: RLP; mov rax, qword ptr [rip + 0x348823] ; mov edi, dword ptr [rsp] ; mov esi, dword ptr [rsp + 4] ; mov rdx, qword ptr [rsp + 8] ; mov rcx, qword ptr [rsp + 0x10] ; mov r8, qword ptr [rsp + 0x18] ; jmp 0x22090
read: 
write: edi esi r8 rax rcx rdx 
--------------------------------------------------------------------------------
000221e0: RLP; lea r13, [rax + 3] ; cmp r13, 0x1000 ; ja 0x22341
read: r13 rflags 
write: r13 rflags 
--------------------------------------------------------------------------------
0002221a: RLP; cmp byte ptr [r13 + 2], 0 ; jne 0x22252
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
0002225e: RLP; lea rbx, [rax + 3] ; cmp rbx, 0x1000 ; ja 0x22391
read: rbx rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
00022297: RLP; cmp byte ptr [r15 + 2], 0 ; je 0x222dc
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000222b3: RLP; test bl, bl ; mov r12d, eax ; je 0x2232c
read: bl eax rflags 
write: r12d rflags 
--------------------------------------------------------------------------------
00022320: RLP; jmp 0x222bf
read: 
write: 
--------------------------------------------------------------------------------
00022338: RLP; nop dword ptr [rax] ; jmp 0x222ba
read: 
write: 
--------------------------------------------------------------------------------
0002234d: RLP; test eax, eax ; jne 0x221f1
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00022361: RLP; test rax, rax ; mov r13, rax ; je 0x22385
read: rax rflags 
write: r13 rflags 
--------------------------------------------------------------------------------
00022385: RLP; mov rax, -1 ; jmp 0x222cc
read: 
write: rax 
--------------------------------------------------------------------------------
0002239d: RLP; test eax, eax ; jne 0x2226f
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000223b1: RLP; test rax, rax ; mov r15, rax ; je 0x22374
read: rax rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
0002244d: RLP; sub r13, qword ptr [rbp] ; add qword ptr [r12], r13 ; test r15, r15 ; je 0x22460
read: r13 r15 rflags 
write: r13 rflags 
--------------------------------------------------------------------------------
000225b2: RLP; jmp 0x22455
read: 
write: 
--------------------------------------------------------------------------------
000225c9: RLP; jmp 0x22455
read: 
write: 
--------------------------------------------------------------------------------
000225f3: RLP; test eax, eax ; setne al ; add rsp, 8 ; movzx eax, al ; neg eax ; ret
read: al eax rflags rsp 
write: al eax rflags rsp 
--------------------------------------------------------------------------------
00022651: RLP; test rax, rax ; je 0x22b72
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002266f: RLP; test rax, rax ; mov dword ptr [rbp - 0x64], 0 ; je 0x22685
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00022697: RLP; test rax, rax ; je 0x226bd
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000226ae: RLP; test rax, rax ; je 0x226bd
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000226f3: RLP; lea rcx, [rax + 0x21] ; mov rsi, rbx ; mov rdx, rax ; and rcx, 0xfffffffffffffff0 ; sub rsp, rcx ; lea rcx, [rsp + 0xf] ; mov qword ptr [rbp - 0x60], rcx ; and qword ptr [rbp - 0x60], 0xfffffffffffffff0 ; mov rdi, qword ptr [rbp - 0x60] ; call 0x892cc
read: rax rbx rcx rip rsp 
write: rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0002271f: RLP; mov esi, 0x2f2f ; mov byte ptr [rax + 2], 0 ; mov word ptr [rax], si ; mov rax, qword ptr [rbp - 0x58] ; cmp byte ptr [rax], 0x2f ; jne 0x2273e
read: rflags si 
write: esi rax rflags 
--------------------------------------------------------------------------------
0002275b: RLP; test eax, eax ; mov dword ptr [rbp - 0x68], eax ; mov qword ptr [rbp - 0x60], 0 ; jne 0x22990
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002279c: RLP; test eax, eax ; jne 0x22e13
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000227d0: RLP; test rax, rax ; mov rcx, rax ; mov qword ptr [rbp - 0x60], rax ; je 0x22a18
read: rax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
00022800: RLP; cmp qword ptr [rbp - 0x40], 0 ; je 0x22990
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
0002287b: RLP; test eax, eax ; jne 0x2284c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000228a2: RLP; test eax, eax ; jne 0x2290f
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000228b4: RLP; test rax, rax ; je 0x22a55
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002295b: RLP; test rax, rax ; mov qword ptr [r12 - 0x30], rax ; je 0x22a55
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000229db: RLP; lea rcx, [rax + 0x21] ; mov rdx, rax ; mov rsi, rbx ; and rcx, 0xfffffffffffffff0 ; sub rsp, rcx ; lea rcx, [rsp + 0xf] ; mov qword ptr [rbp - 0x58], rcx ; and qword ptr [rbp - 0x58], 0xfffffffffffffff0 ; mov rdi, qword ptr [rbp - 0x58] ; call 0x892cc
read: rax rbx rcx rip rsp 
write: rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00022a07: RLP; mov ecx, 0x2f2f ; mov byte ptr [rax + 2], 0 ; mov word ptr [rax], cx ; jmp 0x2273e
read: cx 
write: ecx 
--------------------------------------------------------------------------------
00022a34: RLP; mov dword ptr fs:[r12], r15d ; mov dword ptr [rbp - 0x68], 3 ; mov qword ptr [rbp - 0x60], 0 ; jmp 0x22990
read: r15d 
write: 
--------------------------------------------------------------------------------
00022abc: RLP; test r13, r13 ; jne 0x22a9c
read: r13 rflags 
write: rflags 
--------------------------------------------------------------------------------
00022ad2: RLP; sub r14, 1 ; jne 0x22a8c
read: r14 rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
00022ae5: RLP; mov rsi, qword ptr [rbp - 0x40] ; jmp 0x22a27
read: 
write: rsi 
--------------------------------------------------------------------------------
00022b1d: RLP; mov rdi, rbx ; mov qword ptr [rbp - 0x60], rax ; call 0x856dc
read: rax rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
00022b2d: RLP; lea rdx, [rax + 1] ; add rax, 0x1f ; mov rsi, rbx ; and rax, 0xfffffffffffffff0 ; sub rsp, rax ; lea rdi, [rsp + 0xf] ; and rdi, 0xfffffffffffffff0 ; call 0x8e3dc
read: rax rbx rdi rip rsp 
write: rax rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00022b51: RLP; mov r12, rax ; movzx eax, byte ptr [rax] ; cmp al, 0x2c ; jne 0x22b69
read: al rax rflags 
write: eax r12 rflags 
--------------------------------------------------------------------------------
00022bcb: RLP; test eax, eax ; jne 0x22cc4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00022cbb: RLP; mov qword ptr [rbp - 0x58], rax ; jmp 0x226bd
read: rax 
write: 
--------------------------------------------------------------------------------
00022cde: RLP; test eax, eax ; je 0x22d53
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00022d13: RLP; test eax, eax ; je 0x22c48
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00022de4: RLP; mov rax, qword ptr [rbp - 0x58] ; jmp 0x22ab0
read: 
write: rax 
--------------------------------------------------------------------------------
00022f34: RLP; xor r8d, r8d ; mov rdi, qword ptr [r15 + 8] ; mov dword ptr [rsp + 8], 0 ; mov dword ptr [rsp], 0 ; mov r9, r14 ; mov rcx, r12 ; mov rdx, rbp ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
read: r12 r14 r8d rbp rbx rsp 
write: r8d r9 rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00022f5e: RLP; cmp eax, 4 ; je 0x22f0c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00022fc8: RLP; mov rax, qword ptr [rsp + 0x28] ; lea rsi, [r15 + 0x10] ; mov rdi, qword ptr [r15 + 8] ; mov r9, r14 ; lea rdx, [rax*8] ; shl rax, 6 ; sub rax, rdx ; add rax, r15 ; cmp qword ptr [rax + 0x10], 1 ; mov dword ptr [rsp + 8], 0 ; sbb eax, eax ; xor r8d, r8d ; xor ecx, ecx ; not eax ; xor edx, edx
read: eax ecx edx r14 r15 r8d rax rdx rflags 
write: eax ecx edx r8d r9 rax rdi rdx rflags rsi 
--------------------------------------------------------------------------------
0002300e: RLP; test eax, eax ; jne 0x23032
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000230f8: RLP; test rbp, rbp ; jne 0x230dc
read: rbp rflags 
write: rflags 
--------------------------------------------------------------------------------
00023118: RLP; test byte ptr [r12 - 0x28], 1 ; jne 0x2312c
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
00023138: RLP; mov rsi, r15 ; mov rdi, r14 ; call 0x241ac
read: r14 r15 rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
00023147: RLP; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00023160: RLP; jmp 0x230ec
read: 
write: 
--------------------------------------------------------------------------------
00023183: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000231b2: RLP; test rax, rax ; je 0x231cc
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000231fb: RLP; test eax, eax ; jne 0x23210
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00023210: RLP; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00023279: RLP; mov rdi, rbx ; call rbp
read: rbp rbx rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
00023282: RLP; mov rdi, qword ptr [rbx] ; call 0x2bb9c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0002328e: RLP; mov qword ptr [rbx], 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00023355: RLP; test rax, rax ; je 0x23440
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002338e: RLP; test rax, rax ; mov qword ptr [rbx], rax ; je 0x23d5c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000233d8: RLP; mov rdi, rbx ; call r15
read: r15 rbx rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000233e2: RLP; mov rax, qword ptr [rbx + 0x30] ; test rax, rax ; je 0x233fc
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
00023483: RLP; sub rsp, 0x40 ; mov qword ptr [r15 + 8], rax ; mov rax, qword ptr [rbp - 0x98] ; lea rbx, [rsp + 0xf] ; mov dword ptr [r15 + 0x14], 0 ; mov dword ptr [r15 + 0x10], 0 ; mov qword ptr [r15 + 0x18], 0 ; mov qword ptr [r15 + 0x20], 0 ; and rbx, 0xfffffffffffffff0 ; mov qword ptr [r15 + 0x28], 0 ; mov rdi, rax ; mov qword ptr [rbx], rax ; call 0x856dc
read: rax rbx rip rsp 
write: rax rbx rdi rflags rsp 
--------------------------------------------------------------------------------
000234d2: RLP; mov qword ptr [rbx + 8], rax ; lea rax, [rbx + 0x28] ; mov dword ptr [rbx + 0x14], 0 ; mov dword ptr [rbx + 0x10], 0 ; mov qword ptr [rbx + 0x18], 0 ; mov qword ptr [rbx + 0x20], 0 ; mov qword ptr [rbx + 0x28], 0 ; mov qword ptr [r15 + 0x28], rbx ; mov qword ptr [rbp - 0x90], rax ; mov r14, qword ptr [rbp - 0x88] ; xor r13d, r13d ; xor r15d, r15d ; mov dword ptr [rbp - 0x6c], 0x7fffffff ; mov dword ptr [rbp - 0x60], 0x7fffffff ; mov qword ptr [rbp - 0x68], r13
read: r13 r13d r15d rax rbx 
write: r13d r14 r15d rax rflags 
--------------------------------------------------------------------------------
00023564: RLP; test eax, eax ; je 0x2358f
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00023610: RLP; test eax, eax ; jne 0x235f4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000236ee: RLP; test rax, rax ; mov rbx, rax ; je 0x23bfa
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
00023787: RLP; sub r14, 0x68 ; test r12, r12 ; mov r15, qword ptr [r15 + 0x20] ; lea rax, [r12 - 1] ; je 0x23afd
read: r12 r14 rflags 
write: r14 r15 rax rflags 
--------------------------------------------------------------------------------
000237b5: RLP; cmp qword ptr [r13], rbx ; mov qword ptr [r14 + 0x18], rax ; jne 0x23745
read: rax rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
000237cb: RLP; jmp 0x23756
read: 
write: 
--------------------------------------------------------------------------------
000237f4: RLP; test eax, eax ; je 0x235dc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00023811: RLP; test eax, eax ; je 0x235dc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002384b: RLP; test eax, eax ; je 0x2394c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00023878: RLP; mov qword ptr [r14 + 8], rax ; mov rax, qword ptr [rbp - 0x58] ; mov dword ptr [r14 + 0x14], r15d ; mov dword ptr [r14 + 0x10], r13d ; mov qword ptr [r14 + 0x18], rbx ; mov qword ptr [r14 + 0x28], 0 ; mov qword ptr [r14 + 0x20], rax ; mov rax, qword ptr [rbp - 0x90] ; mov qword ptr [rax], r14 ; lea rax, [r14 + 0x28] ; mov qword ptr [rbp - 0x90], rax ; nop dword ptr [rax] ; mov rbx, qword ptr [rbx + 0x28] ; test rbx, rbx ; je 0x23662
read: r13d r14 r15d rax rbx rflags 
write: rax rbx rflags 
--------------------------------------------------------------------------------
00023920: RLP; mov qword ptr [r14 + 8], rax ; mov rax, qword ptr [rbp - 0x58] ; mov dword ptr [r14 + 0x14], r15d ; mov dword ptr [r14 + 0x10], r13d ; mov qword ptr [r14 + 0x18], rbx ; mov qword ptr [r14 + 0x20], rax ; mov rax, qword ptr [rbp - 0x68] ; mov qword ptr [rbp - 0x68], r14 ; mov qword ptr [r14 + 0x28], rax ; jmp 0x2362a
read: r13d r14 r15d rax rbx 
write: rax 
--------------------------------------------------------------------------------
00023a65: RLP; test rax, rax ; nop dword ptr [rax] ; je 0x23cc2
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00023ac5: RLP; mov rdi, r14 ; mov rax, qword ptr [rbp - 0x60] ; call rax
read: r14 rax rsp 
write: rax rdi rsp 
--------------------------------------------------------------------------------
00023ad2: RLP; test eax, eax ; jne 0x23da7
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00023b4b: RLP; mov rdi, r14 ; lea r15, [rax + 1] ; mov qword ptr [rbp - 0x58], r14 ; call 0x856dc
read: r14 rip rsp 
write: r15 rdi rsp 
--------------------------------------------------------------------------------
00023b5f: RLP; add rax, 1 ; lea rdi, [r15 + rax + 0x20] ; mov qword ptr [rbp - 0x60], rax ; call 0x1f3cc
read: rax rip rsp 
write: rax rdi rflags rsp 
--------------------------------------------------------------------------------
00023b75: RLP; mov ecx, dword ptr [rbp - 0x6c] ; test rax, rax ; mov r14, rax ; mov r13d, ecx ; je 0x2342e
read: ecx rax rflags 
write: ecx r13d r14 rflags 
--------------------------------------------------------------------------------
00023b9e: RLP; mov rdx, qword ptr [rbp - 0x60] ; mov rsi, qword ptr [rbp - 0x58] ; mov rdi, rax ; call 0x8e3dc
read: rax rip rsp 
write: rdi rdx rsi rsp 
--------------------------------------------------------------------------------
00023bb2: RLP; lea rdx, [rip - 0x9dd] ; lea rsi, [rip + 0x346d3c] ; mov qword ptr [r14 + 8], rax ; mov qword ptr [r14 + 0x10], rbx ; mov qword ptr [r14 + 0x18], r12 ; mov rdi, r14 ; call 0xe13dc
read: r12 r14 rax rbx rip rsp 
write: rdi rdx rsi rsp 
--------------------------------------------------------------------------------
00023bd8: RLP; test rax, rax ; jne 0x2342e
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00023bed: RLP; jmp 0x2342e
read: 
write: 
--------------------------------------------------------------------------------
00023c5a: RLP; mov qword ptr [rbx + 8], rax ; mov rax, rbx ; mov dword ptr [rbx + 0x14], 0 ; add rax, 0x28 ; mov dword ptr [rbx + 0x10], 0 ; mov qword ptr [rbx + 0x18], 0 ; mov qword ptr [rbx + 0x20], 0 ; mov qword ptr [rbx + 0x28], 0 ; mov qword ptr [rbp - 0x90], rax ; jmp 0x2350b
read: rax rbx 
write: rax rflags 
--------------------------------------------------------------------------------
00023cfb: RLP; mov rax, qword ptr [rbp - 0xa8] ; cmp r12, qword ptr [rax] ; jb 0x23ce7
read: r12 rflags 
write: rax rflags 
--------------------------------------------------------------------------------
00023d1b: RLP; mov rax, qword ptr [rbp - 0xa8] ; mov ecx, dword ptr [rbp - 0x58] ; xor r12d, r12d ; mov qword ptr [rax], 0 ; mov rax, qword ptr [rbp - 0xb0] ; test ecx, ecx ; mov qword ptr [rax], 0 ; je 0x23cb8
read: ecx r12d rflags 
write: ecx r12d rax rflags 
--------------------------------------------------------------------------------
00023d86: RLP; cmp r14, r12 ; ja 0x23d72
read: r12 r14 rflags 
write: rflags 
--------------------------------------------------------------------------------
00023e08: RLP; test eax, eax ; jne 0x23e1c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00023e28: RLP; mov rdi, rbx ; test rax, rax ; cmovne rbp, rax ; call 0x2318c
read: rax rbp rbx rflags rip rsp 
write: rbp rdi rflags rsp 
--------------------------------------------------------------------------------
00023e3b: RLP; test rax, rax ; mov rsi, rbp ; cmove rax, rbx ; mov rdi, rax ; call 0x83c8c
read: rax rbp rbx rflags rip rsp 
write: rax rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00023e51: RLP; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00023e84: RLP; jmp 0x23df4
read: 
write: 
--------------------------------------------------------------------------------
00023e95: RLP; or dword ptr [rip + 0x346a58], 2 ; jmp 0x23df4
read: 
write: rflags 
--------------------------------------------------------------------------------
00023f29: RLP; add rsp, 0x80 ; mov rdx, r12 ; mov r8d, r14d ; mov rcx, r13 ; mov rsi, rbp ; mov rdi, rbx ; call 0x2b60c
read: r12 r13 r14d rbp rbx rip rsp 
write: r8d rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00023f48: RLP; cmp eax, 2 ; mov edx, eax ; je 0x23f9c
read: eax rflags 
write: edx rflags 
--------------------------------------------------------------------------------
00023f82: RLP; add rsp, 0x80 ; mov eax, edx ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: edx rsp 
write: eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00023fb6: RLP; mov rdi, rbx ; mov qword ptr [rsp + 8], rax ; call 0x2318c
read: rax rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
00023fc7: RLP; and r14d, 1 ; mov r15, rax ; mov rcx, qword ptr [rsp + 8] ; jne 0x240e0
read: r14d rax rflags 
write: r14d r15 rcx rflags 
--------------------------------------------------------------------------------
00023ff1: RLP; mov edx, eax ; cmp dword ptr [rip + 0x34a776], 0 ; je 0x24007
read: eax rflags 
write: edx rflags 
--------------------------------------------------------------------------------
00024026: RLP; add rsp, 0x80 ; test edx, edx ; mov eax, edx ; jne 0x23f8b
read: edx rflags rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
0002407c: RLP; jmp 0x23eed
read: 
write: 
--------------------------------------------------------------------------------
0002408d: RLP; or dword ptr [rip + 0x346860], 2 ; jmp 0x23eed
read: 
write: rflags 
--------------------------------------------------------------------------------
000240cf: RLP; add rsp, 0x80 ; mov eax, 1 ; jmp 0x23f8b
read: rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
000240ef: RLP; test eax, eax ; je 0x24160
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002410c: RLP; test eax, eax ; mov rcx, qword ptr [rsp + 8] ; je 0x24160
read: eax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
00024132: RLP; test eax, eax ; je 0x24160
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00024153: RLP; test eax, eax ; mov rcx, qword ptr [rsp + 8] ; jne 0x23fd9
read: eax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
00024193: RLP; add rsp, 0x80 ; or eax, 0xffffffff ; jmp 0x23f8b
read: eax rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
000241fc: RLP; add rsp, 0x80 ; test r12, r12 ; je 0x24232
read: r12 rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0002422c: RLP; sub rbx, 1 ; jne 0x2421c
read: rbx rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
00024241: RLP; cmp dword ptr [rip + 0x34a528], 0 ; je 0x24255
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
00024274: RLP; add rsp, 0x80 ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: eax rsp 
write: eax r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000242bf: RLP; test eax, eax ; je 0x242fb
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000242fb: RLP; test eax, eax ; jne 0x24314
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00024310: RLP; test eax, eax ; je 0x2432c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00024348: RLP; jmp 0x242de
read: 
write: 
--------------------------------------------------------------------------------
0002437b: RLP; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: rsp 
write: r12 r13 r14 rbp rbx rsp 
--------------------------------------------------------------------------------
000243b4: RLP; test eax, eax ; je 0x243dc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000245ae: RLP; cmp eax, 1 ; mov ecx, dword ptr [rbp - 0x58] ; mov r9, qword ptr [rbp - 0x50] ; sbb r15d, r15d ; not r15d ; and r15d, 3 ; mov rax, r14 ; mov rdi, rbx ; mov qword ptr [rbp - 0x50], r9 ; sub rax, rbx ; mov dword ptr [rbp - 0x58], ecx ; mov rsi, rax ; mov qword ptr [rbp - 0x70], rax ; call 0x858ac
read: eax ecx r14 r15d r9 rax rbx rflags rip rsp 
write: ecx r15d r9 rax rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000245e2: RLP; lea rdx, [rax + 0x1f] ; mov rsi, rbx ; and rdx, 0xfffffffffffffff0 ; sub rsp, rdx ; mov rdx, rax ; lea rdi, [rsp + 0xf] ; and rdi, 0xfffffffffffffff0 ; mov byte ptr [rdi + rax], 0 ; call 0x8e3dc
read: rax rbx rdi rdx rip rsp 
write: rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00024609: RLP; lea rdi, [rbp - 0x40] ; lea rdx, [rip - 0x14a8] ; lea rsi, [rip + 0x349d41] ; mov qword ptr [rbp - 0x40], rax ; call 0xe152c
read: rax rip rsp 
write: rdi rdx rsi rsp 
--------------------------------------------------------------------------------
00024628: RLP; test rax, rax ; mov r9, qword ptr [rbp - 0x50] ; jne 0x2446f
read: rax rflags 
write: r9 rflags 
--------------------------------------------------------------------------------
00024651: RLP; test rax, rax ; mov r13, rax ; je 0x2446f
read: rax rflags 
write: r13 rflags 
--------------------------------------------------------------------------------
00024674: RLP; mov rdx, qword ptr [rbp - 0x48] ; mov qword ptr [r13 + 8], rax ; mov rsi, r14 ; mov rdi, rax ; sub rdx, r14 ; call 0x892cc
read: r14 rax rdx rip rsp 
write: rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0002468e: RLP; mov ecx, dword ptr [rbp - 0x5c] ; mov r9, qword ptr [rbp - 0x50] ; mov qword ptr [r13 + 0x18], rax ; mov dword ptr [r13 + 0x10], ecx ; mov ecx, dword ptr [rbp - 0x58] ; test r9, r9 ; mov dword ptr [r13 + 0x14], ecx ; je 0x246bb
read: ecx r9 rax rflags 
write: ecx r9 rflags 
--------------------------------------------------------------------------------
000246bb: RLP; mov rdx, qword ptr [rbp - 0x68] ; mov rsi, qword ptr [rbp - 0x48] ; mov rdi, rax ; call 0x892cc
read: rax rip rsp 
write: rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000246cf: RLP; test r15d, r15d ; je 0x246db
read: r15d rflags 
write: rflags 
--------------------------------------------------------------------------------
000246ec: RLP; jmp 0x2446f
read: 
write: 
--------------------------------------------------------------------------------
00024718: RLP; cmp qword ptr [rbp - 0x40], r13 ; mov r11, qword ptr [rbp - 0x50] ; mov r9, qword ptr [rbp - 0x58] ; mov ecx, dword ptr [rbp - 0x5c] ; je 0x2473f
read: r13 rflags 
write: ecx r11 r9 rflags 
--------------------------------------------------------------------------------
00024773: RLP; test rax, rax ; mov rbx, rax ; je 0x247cb
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
00024791: RLP; lea rdx, [rip - 0x162c] ; lea rsi, [rip + 0x349bbd] ; mov qword ptr [rbx], rax ; mov rdi, rbx ; add rax, r13 ; mov qword ptr [rbx + 8], rax ; call 0xe13dc
read: r13 rax rbx rip rsp 
write: rax rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000247b5: RLP; test rax, rax ; je 0x247bf
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000247cb: RLP; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rsp 
write: r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0002482d: RLP; add rsp, 0x80 ; cmp qword ptr [rip + 0x349b48], 0 ; je 0x24887
read: rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00024871: RLP; add rsp, 0x80 ; lea rsp, [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000248a3: RLP; lea rdx, [rax + 0x30] ; lea rcx, [rax + 0x12] ; mov rsi, rbx ; and rdx, 0xfffffffffffffff0 ; mov qword ptr [rbp - 0x40], rcx ; sub rsp, rdx ; mov rdx, rax ; lea r13, [rsp + 0xf] ; and r13, 0xfffffffffffffff0 ; mov rdi, r13 ; call 0x892cc
read: r13 rax rbx rcx rdx rip rsp 
write: r13 rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000248d1: RLP; movabs rcx, 0x62696c2f7273752f ; lea rdx, [rax + 1] ; mov byte ptr [rax], 0x3a ; mov qword ptr [rax + 1], rcx ; movabs rax, 0x766e6f63672f3436 ; xor esi, esi ; mov qword ptr [rdx + 8], rax ; mov byte ptr [rdx + 0x10], 0 ; xor edi, edi ; call 0xd734c
read: edi esi rax rcx rip rsp 
write: edi esi rax rcx rdx rflags rsp 
--------------------------------------------------------------------------------
00024905: RLP; mov rdi, rax ; mov rbx, rax ; call 0x856dc
read: rax rip rsp 
write: rbx rdi rsp 
--------------------------------------------------------------------------------
00024914: RLP; lea r15, [rax + 1] ; mov qword ptr [rbp - 0x38], rax ; mov esi, 0x3a ; mov rdi, r13 ; call 0x83a5c
read: r13 rax rip rsp 
write: esi r15 rdi rsp 
--------------------------------------------------------------------------------
0002492d: RLP; test rax, rax ; mov r14, rax ; je 0x24ba1
read: rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
00024973: RLP; test rax, rax ; jne 0x2494c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000249ac: RLP; test rax, rax ; mov qword ptr [rbp - 0x40], rax ; je 0x24b43
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00024a5f: RLP; lea rdi, [rax + 1] ; mov byte ptr [rax], 0x2f ; mov rsi, r13 ; call 0x898ec
read: r13 rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
00024a72: RLP; cmp byte ptr [rax - 1], 0x2f ; mov rdx, rax ; je 0x24a82
read: rax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
00024b3e: RLP; jmp 0x2483e
read: 
write: 
--------------------------------------------------------------------------------
00024c0a: RLP; test eax, eax ; je 0x24e80
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00024c8b: RLP; movabs rcx, 0x6f6d2d766e6f6367 ; mov edx, 0x73 ; lea rsi, [rip + 0x10f853] ; mov rdi, rbx ; mov qword ptr [rax], rcx ; mov dword ptr [rax + 8], 0x656c7564 ; mov word ptr [rax + 0xc], dx ; call 0x6ca9c
read: dx rbx rcx rip rsp 
write: edx rcx rdi rsi rsp 
--------------------------------------------------------------------------------
00024cbb: RLP; test rax, rax ; mov rbx, rax ; mov qword ptr [rbp - 0x48], 0 ; mov qword ptr [rbp - 0x40], 0 ; je 0x24dbd
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
00024d04: RLP; test rax, rax ; mov r14, rax ; js 0x24da4
read: rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
00024d25: RLP; test rax, rax ; mov rsi, rax ; je 0x24f6c
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
00024db1: RLP; mov rdi, rbx ; call 0x6bf5c
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
00024dbd: RLP; mov rax, qword ptr [rbp - 0x68] ; add rax, qword ptr [rip + 0x3495bc] ; add qword ptr [rbp - 0x68], 0x10 ; mov rdi, qword ptr [rax] ; test rdi, rdi ; mov qword ptr [rbp - 0x60], rdi ; jne 0x24c5c
read: rax rdi rflags 
write: rax rdi rflags 
--------------------------------------------------------------------------------
00024e0d: RLP; test rax, rax ; je 0x25033
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00024e3d: RLP; lea r13, [rax + 1] ; xor esi, esi ; mov rdi, r13 ; call 0x9023c
read: esi r13 rip rsp 
write: esi r13 rdi rflags rsp 
--------------------------------------------------------------------------------
00024e4f: RLP; mov rdi, rbx ; mov r12, rax ; lea r14, [rax + 1] ; call 0x2438c
read: rax rbx rip rsp 
write: r12 r14 rdi rsp 
--------------------------------------------------------------------------------
00024e62: RLP; test eax, eax ; jne 0x24e78
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00024e78: RLP; cmp byte ptr [r12 + 1], 0 ; jne 0x24e2c
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
00024ebc: RLP; test eax, eax ; jne 0x24d9a
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00024ee7: RLP; mov eax, dword ptr [rbx] ; jmp 0x24d9c
read: 
write: eax 
--------------------------------------------------------------------------------
00024f0c: RLP; test eax, eax ; je 0x24f20
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00025010: RLP; test eax, eax ; mov rsi, qword ptr [rbp - 0x80] ; jne 0x24d9a
read: eax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
0002502c: RLP; mov eax, dword ptr [rbx] ; jmp 0x24d9c
read: 
write: eax 
--------------------------------------------------------------------------------
00025041: RLP; jmp 0x24e16
read: 
write: 
--------------------------------------------------------------------------------
0002504f: RLP; mov rax, qword ptr [rip + 0x34932e] ; jmp 0x24c22
read: 
write: rax 
--------------------------------------------------------------------------------
0002508b: RLP; test eax, eax ; je 0x250bc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002532e: RLP; mov rdi, qword ptr [r15 + 0x18] ; mov r8, r12 ; mov rcx, rbx ; mov rdx, qword ptr [r13] ; mov rsi, rbp ; call qword ptr [r15 + 8]
read: r12 rbp rbx rsp 
write: r8 rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
00025347: RLP; mov r15, qword ptr [r15 + 0x20] ; test r15, r15 ; jne 0x2531c
read: r15 rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
0002537e: RLP; mov eax, dword ptr [rsp + 0xb8] ; xor r8d, r8d ; mov dword ptr [rsp], 0 ; mov r9, qword ptr [rsp + 0x50] ; mov rcx, r12 ; mov rdx, qword ptr [rsp + 0x58] ; mov rsi, qword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; mov dword ptr [rsp + 8], eax ; call rbx
read: eax r12 r8d rbx rsp 
write: eax r8d r9 rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000253b0: RLP; cmp eax, 4 ; je 0x253dc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00025480: RLP; mov eax, dword ptr [rsp + 0xb8] ; mov dword ptr [rsp], ebx ; xor r8d, r8d ; mov r9, qword ptr [rsp + 0x50] ; xor ecx, ecx ; xor edx, edx ; mov rsi, qword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; mov dword ptr [rsp + 8], eax ; call r14
read: eax ebx ecx edx r14 r8d rsp 
write: eax ecx edx r8d r9 rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000254ab: RLP; jmp 0x253f6
read: 
write: 
--------------------------------------------------------------------------------
0002571e: RLP; mov rdi, qword ptr [r14 + 0x18] ; mov r8, r15 ; mov rcx, rbx ; mov rdx, qword ptr [r12] ; mov rsi, rbp ; call qword ptr [r14 + 8]
read: r15 rbp rbx rsp 
write: r8 rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
00025737: RLP; mov r14, qword ptr [r14 + 0x20] ; test r14, r14 ; jne 0x2570c
read: r14 rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
0002576f: RLP; mov eax, dword ptr [rsp + 0xb8] ; xor r8d, r8d ; mov dword ptr [rsp], 0 ; mov r9, qword ptr [rsp + 0x38] ; mov rcx, r15 ; mov rdx, qword ptr [rsp + 0x50] ; mov rsi, qword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; mov dword ptr [rsp + 8], eax ; call rbx
read: eax r15 r8d rbx rsp 
write: eax r8d r9 rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000257a1: RLP; cmp eax, 4 ; je 0x257cd
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00025a0c: RLP; mov eax, dword ptr [rsp + 0xb8] ; mov dword ptr [rsp], ebx ; xor r8d, r8d ; mov r9, qword ptr [rsp + 0x38] ; mov rsi, qword ptr [rsp + 0x48] ; xor ecx, ecx ; mov rdi, qword ptr [rsp + 0x40] ; xor edx, edx ; mov dword ptr [rsp + 8], eax ; call r14
read: eax ebx ecx edx r14 r8d rsp 
write: eax ecx edx r8d r9 rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00025a37: RLP; add rsp, 0x78 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00025bc0: RLP; cmp r15, qword ptr [r13] ; mov rbx, rax ; je 0x25cec
read: r15 rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
00025c0e: RLP; mov rdi, qword ptr [r15 + 0x18] ; mov r8, rbx ; mov rcx, rbp ; mov rdx, qword ptr [r13] ; mov rsi, r12 ; call qword ptr [r15 + 8]
read: r12 rbp rbx rsp 
write: r8 rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
00025c27: RLP; mov r15, qword ptr [r15 + 0x20] ; test r15, r15 ; jne 0x25bfc
read: r15 rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
00025c5e: RLP; mov eax, dword ptr [rsp + 0xb8] ; xor r8d, r8d ; mov dword ptr [rsp], 0 ; mov r9, qword ptr [rsp + 0x50] ; mov rcx, rbx ; mov rdx, qword ptr [rsp + 0x58] ; mov rsi, qword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; mov dword ptr [rsp + 8], eax ; call r15
read: eax r15 r8d rbx rsp 
write: eax r8d r9 rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00025c91: RLP; cmp eax, 4 ; je 0x25cbc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00025dda: RLP; mov eax, dword ptr [rsp + 0xb8] ; mov dword ptr [rsp], ebx ; xor r8d, r8d ; mov r9, qword ptr [rsp + 0x50] ; xor ecx, ecx ; xor edx, edx ; mov rsi, qword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; mov dword ptr [rsp + 8], eax ; call r14
read: eax ebx ecx edx r14 r8d rsp 
write: eax ecx edx r8d r9 rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00025e05: RLP; jmp 0x25cd8
read: 
write: 
--------------------------------------------------------------------------------
0002608e: RLP; mov rdi, qword ptr [r14 + 0x18] ; mov r8, r15 ; mov rcx, rbx ; mov rdx, qword ptr [r12] ; mov rsi, rbp ; call qword ptr [r14 + 8]
read: r15 rbp rbx rsp 
write: r8 rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000260a7: RLP; mov r14, qword ptr [r14 + 0x20] ; test r14, r14 ; jne 0x2607c
read: r14 rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
000260e3: RLP; mov eax, dword ptr [rsp + 0xb8] ; xor r8d, r8d ; mov dword ptr [rsp], 0 ; mov r9, qword ptr [rsp + 0x38] ; mov rcx, r15 ; mov rdx, qword ptr [rsp + 0x50] ; mov rsi, qword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; mov dword ptr [rsp + 8], eax ; call rbx
read: eax r15 r8d rbx rsp 
write: eax r8d r9 rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00026115: RLP; cmp eax, 4 ; je 0x2617c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002637d: RLP; mov eax, dword ptr [rsp + 0xb8] ; mov dword ptr [rsp], ebx ; xor r8d, r8d ; mov r9, qword ptr [rsp + 0x38] ; mov rsi, qword ptr [rsp + 0x48] ; xor ecx, ecx ; mov rdi, qword ptr [rsp + 0x40] ; xor edx, edx ; mov dword ptr [rsp + 8], eax ; call r14
read: eax ebx ecx edx r14 r8d rsp 
write: eax ecx edx r8d r9 rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000263a8: RLP; add rsp, 0x78 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000265b7: RLP; mov rdi, qword ptr [r12 + 0x18] ; mov r8, rbx ; mov rcx, rbp ; mov rdx, qword ptr [r13] ; mov rsi, r14 ; call qword ptr [r12 + 8]
read: r14 rbp rbx rsp 
write: r8 rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000265d2: RLP; mov r12, qword ptr [r12 + 0x20] ; test r12, r12 ; jne 0x265a4
read: r12 rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
0002661b: RLP; mov eax, dword ptr [rsp + 0xb8] ; xor r8d, r8d ; mov dword ptr [rsp], 0 ; mov r9, qword ptr [rsp + 0x38] ; mov rcx, rbx ; mov rdx, qword ptr [rsp + 0x50] ; mov rsi, qword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; mov dword ptr [rsp + 8], eax ; call r14
read: eax r14 r8d rbx rsp 
write: eax r8d r9 rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0002664e: RLP; cmp eax, 4 ; je 0x266ac
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002674c: RLP; mov eax, dword ptr [rsp + 0xb8] ; mov dword ptr [rsp], ebx ; xor r8d, r8d ; mov r9, qword ptr [rsp + 0x38] ; xor ecx, ecx ; xor edx, edx ; mov rsi, qword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; mov dword ptr [rsp + 8], eax ; call r14
read: eax ebx ecx edx r14 r8d rsp 
write: eax ecx edx r8d r9 rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00026777: RLP; mov dword ptr [rsp + 0x24], eax ; jmp 0x266b3
read: eax 
write: 
--------------------------------------------------------------------------------
000269de: RLP; mov rdi, qword ptr [rbx + 0x18] ; mov r8, r12 ; mov rcx, rbp ; mov rdx, qword ptr [r14] ; mov rsi, r13 ; call qword ptr [rbx + 8]
read: r12 r13 rbp rsp 
write: r8 rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000269f5: RLP; mov rbx, qword ptr [rbx + 0x20] ; test rbx, rbx ; jne 0x269cc
read: rbx rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
00026a40: RLP; mov eax, dword ptr [rsp + 0xe8] ; xor r8d, r8d ; mov dword ptr [rsp], 0 ; mov r9, qword ptr [rsp + 0x48] ; mov rcx, r12 ; mov rdx, qword ptr [rsp + 0x50] ; mov rsi, qword ptr [rsp + 0x60] ; mov rdi, qword ptr [rsp + 0x58] ; mov dword ptr [rsp + 8], eax ; call rbp
read: eax r12 r8d rbp rsp 
write: eax r8d r9 rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00026a72: RLP; cmp eax, 4 ; je 0x26aa4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00026b24: RLP; mov rax, qword ptr [rsp + 0x68] ; mov rdx, qword ptr [rbp + 0x18] ; mov r9, rbx ; mov r8, qword ptr [rsp + 0x78] ; mov rcx, qword ptr [r14] ; mov rsi, qword ptr [rsp + 0x18] ; mov rdi, qword ptr [rsp + 0x70] ; mov qword ptr [rsp + 8], rax ; mov rax, qword ptr [rsp + 0x50] ; mov qword ptr [rsp], rax ; call qword ptr [rbp]
read: rax rbx rsp 
write: r8 r9 rax rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
00026b57: RLP; cmp eax, 6 ; je 0x26b0a
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00026e52: RLP; mov eax, dword ptr [rsp + 0xe8] ; mov dword ptr [rsp], ebp ; xor r8d, r8d ; mov r9, qword ptr [rsp + 0x48] ; xor ecx, ecx ; xor edx, edx ; mov rsi, qword ptr [rsp + 0x60] ; mov rdi, qword ptr [rsp + 0x58] ; mov dword ptr [rsp + 8], eax ; call rbx
read: eax ebp ecx edx r8d rbx rsp 
write: eax ecx edx r8d r9 rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00026e7c: RLP; jmp 0x26ac0
read: 
write: 
--------------------------------------------------------------------------------
00026f14: RLP; mov rax, qword ptr [rsp + 0x68] ; mov rdx, qword ptr [r13 + 0x18] ; mov r9, rbx ; mov r8, qword ptr [rsp + 0x30] ; mov rcx, qword ptr [r14] ; mov rsi, qword ptr [rsp + 0x18] ; mov rdi, qword ptr [rsp + 0x70] ; mov qword ptr [rsp + 8], rax ; mov rax, qword ptr [rsp + 0x50] ; mov qword ptr [rsp], rax ; call qword ptr [r13]
read: rax rbx rsp 
write: r8 r9 rax rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
00026f48: RLP; cmp eax, 6 ; jne 0x26f74
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002737e: RLP; mov rdi, qword ptr [rbx + 0x18] ; mov r8, r12 ; mov rcx, rbp ; mov rdx, qword ptr [r14] ; mov rsi, r13 ; call qword ptr [rbx + 8]
read: r12 r13 rbp rsp 
write: r8 rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
00027395: RLP; mov rbx, qword ptr [rbx + 0x20] ; test rbx, rbx ; jne 0x2736c
read: rbx rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000273e2: RLP; mov edi, dword ptr [rsp + 0xf8] ; xor r8d, r8d ; mov dword ptr [rsp], 0 ; mov r9, qword ptr [rsp + 0x40] ; mov rcx, r12 ; mov rdx, qword ptr [rsp + 0x58] ; mov rsi, qword ptr [rsp + 0x50] ; mov rax, qword ptr [rsp + 0x20] ; mov dword ptr [rsp + 8], edi ; mov rdi, qword ptr [rsp + 0x48] ; call rax
read: edi r12 r8d rax rsp 
write: edi r8d r9 rax rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00027419: RLP; cmp eax, 4 ; mov r11d, eax ; je 0x2744b
read: eax rflags 
write: r11d rflags 
--------------------------------------------------------------------------------
000277f6: RLP; mov rax, qword ptr [rsp + 0x60] ; mov rdx, qword ptr [r13 + 0x18] ; mov r9, rbx ; mov r8, qword ptr [rsp + 0x30] ; mov rcx, qword ptr [r14] ; mov rsi, qword ptr [rsp + 0x10] ; mov rdi, qword ptr [rsp + 0x68] ; mov qword ptr [rsp + 8], rax ; mov rax, qword ptr [rsp + 0x58] ; mov qword ptr [rsp], rax ; call qword ptr [r13]
read: rax rbx rsp 
write: r8 r9 rax rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
0002782a: RLP; cmp eax, 6 ; mov r10, qword ptr [rsp + 0x70] ; jne 0x2785c
read: eax rflags 
write: r10 rflags 
--------------------------------------------------------------------------------
000279f3: RLP; mov eax, dword ptr [rsp + 0xf8] ; mov dword ptr [rsp], ebp ; xor r8d, r8d ; mov r9, qword ptr [rsp + 0x40] ; xor ecx, ecx ; xor edx, edx ; mov rsi, qword ptr [rsp + 0x50] ; mov rdi, qword ptr [rsp + 0x48] ; mov dword ptr [rsp + 8], eax ; call rbx
read: eax ebp ecx edx r8d rbx rsp 
write: eax ecx edx r8d r9 rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00027a1d: RLP; jmp 0x27470
read: 
write: 
--------------------------------------------------------------------------------
00027b0c: RLP; mov rax, qword ptr [rsp + 0x60] ; mov rdx, qword ptr [rbx + 0x18] ; mov r9, rbp ; mov r8, qword ptr [rsp + 0x70] ; mov rcx, qword ptr [r14] ; mov rsi, qword ptr [rsp + 0x10] ; mov rdi, qword ptr [rsp + 0x68] ; mov qword ptr [rsp + 8], rax ; mov rax, qword ptr [rsp + 0x78] ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
read: rax rbp rsp 
write: r8 r9 rax rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
00027b3e: RLP; cmp eax, 6 ; jne 0x27e36
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00027d47: RLP; mov rax, qword ptr [rsp + 0x78] ; mov rdx, qword ptr [r13 + 0x18] ; mov r9, rbx ; mov qword ptr [rsp + 8], r12 ; mov r8, qword ptr [rsp + 0x70] ; mov rcx, qword ptr [r14] ; mov rsi, qword ptr [rsp + 0x10] ; mov qword ptr [rsp], rax ; mov rdi, qword ptr [rsp + 0x68] ; call qword ptr [r13]
read: r12 rax rbx rsp 
write: r8 r9 rax rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
00027d76: RLP; cmp eax, 6 ; mov r11d, dword ptr [rsp + 0x28] ; mov r10, qword ptr [rsp + 0x30] ; jne 0x27e68
read: eax rflags 
write: r10 r11d rflags 
--------------------------------------------------------------------------------
000280ee: RLP; mov rdi, qword ptr [r14 + 0x18] ; mov r8, rbx ; mov rcx, rbp ; mov rdx, qword ptr [r13] ; mov rsi, r12 ; call qword ptr [r14 + 8]
read: r12 rbp rbx rsp 
write: r8 rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
00028107: RLP; mov r14, qword ptr [r14 + 0x20] ; test r14, r14 ; jne 0x280dc
read: r14 rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
00028152: RLP; mov eax, dword ptr [rsp + 0xd8] ; xor r8d, r8d ; mov dword ptr [rsp], 0 ; mov r9, qword ptr [rsp + 0x48] ; mov rcx, rbx ; mov rdx, qword ptr [rsp + 0x60] ; mov rsi, qword ptr [rsp + 0x58] ; mov rdi, qword ptr [rsp + 0x50] ; mov dword ptr [rsp + 8], eax ; call r12
read: eax r12 r8d rbx rsp 
write: eax r8d r9 rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00028185: RLP; cmp eax, 4 ; je 0x281fc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00028929: RLP; mov eax, dword ptr [rsp + 0xd8] ; mov dword ptr [rsp], ebx ; xor r8d, r8d ; mov r9, qword ptr [rsp + 0x48] ; xor ecx, ecx ; xor edx, edx ; mov rsi, qword ptr [rsp + 0x58] ; mov rdi, qword ptr [rsp + 0x50] ; mov dword ptr [rsp + 8], eax ; call r15
read: eax ebx ecx edx r15 r8d rsp 
write: eax ecx edx r8d r9 rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00028954: RLP; jmp 0x28216
read: 
write: 
--------------------------------------------------------------------------------
00028e2e: RLP; mov rdi, qword ptr [r14 + 0x18] ; mov r8, rbx ; mov rcx, rbp ; mov rdx, qword ptr [r13] ; mov rsi, r12 ; call qword ptr [r14 + 8]
read: r12 rbp rbx rsp 
write: r8 rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
00028e47: RLP; mov r14, qword ptr [r14 + 0x20] ; test r14, r14 ; jne 0x28e1c
read: r14 rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
00028e8f: RLP; mov eax, dword ptr [rsp + 0xc8] ; xor r8d, r8d ; mov dword ptr [rsp], 0 ; mov r9, qword ptr [rsp + 0x38] ; mov rcx, rbx ; mov rdx, qword ptr [rsp + 0x50] ; mov rsi, qword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; mov dword ptr [rsp + 8], eax ; call rbp
read: eax r8d rbp rbx rsp 
write: eax r8d r9 rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00028ec1: RLP; cmp eax, 4 ; je 0x28f2c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00029178: RLP; mov eax, dword ptr [rsp + 0xc8] ; mov dword ptr [rsp], ebx ; xor r8d, r8d ; mov r9, qword ptr [rsp + 0x38] ; xor ecx, ecx ; xor edx, edx ; mov rsi, qword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; mov dword ptr [rsp + 8], eax ; call r14
read: eax ebx ecx edx r14 r8d rsp 
write: eax ecx edx r8d r9 rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000291a3: RLP; jmp 0x28f49
read: 
write: 
--------------------------------------------------------------------------------
0002948e: RLP; mov rdi, qword ptr [rbx + 0x18] ; mov r8, r12 ; mov rcx, rbp ; mov rdx, qword ptr [r14] ; mov rsi, r15 ; call qword ptr [rbx + 8]
read: r12 r15 rbp rsp 
write: r8 rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000294a5: RLP; mov rbx, qword ptr [rbx + 0x20] ; test rbx, rbx ; jne 0x2947c
read: rbx rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000294f0: RLP; mov eax, dword ptr [rsp + 0xe8] ; xor r8d, r8d ; mov dword ptr [rsp], 0 ; mov r9, qword ptr [rsp + 0x48] ; mov rcx, r12 ; mov rdx, qword ptr [rsp + 0x50] ; mov rsi, qword ptr [rsp + 0x60] ; mov rdi, qword ptr [rsp + 0x58] ; mov dword ptr [rsp + 8], eax ; call r15
read: eax r12 r15 r8d rsp 
write: eax r8d r9 rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00029523: RLP; cmp eax, 4 ; je 0x29555
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00029612: RLP; mov rax, qword ptr [rsp + 0x68] ; mov rdx, qword ptr [rbp + 0x18] ; mov r9, rbx ; mov r8, qword ptr [rsp + 0x78] ; mov rcx, qword ptr [r14] ; mov rsi, qword ptr [rsp + 0x18] ; mov rdi, qword ptr [rsp + 0x70] ; mov qword ptr [rsp + 8], rax ; mov rax, qword ptr [rsp + 0x50] ; mov qword ptr [rsp], rax ; call qword ptr [rbp]
read: rax rbx rsp 
write: r8 r9 rax rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
00029645: RLP; cmp eax, 6 ; je 0x295f8
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002991e: RLP; mov eax, dword ptr [rsp + 0xe8] ; mov dword ptr [rsp], ebp ; xor r8d, r8d ; mov r9, qword ptr [rsp + 0x48] ; xor ecx, ecx ; xor edx, edx ; mov rsi, qword ptr [rsp + 0x60] ; mov rdi, qword ptr [rsp + 0x58] ; mov dword ptr [rsp + 8], eax ; call rbx
read: eax ebp ecx edx r8d rbx rsp 
write: eax ecx edx r8d r9 rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00029948: RLP; jmp 0x29576
read: 
write: 
--------------------------------------------------------------------------------
00029a6b: RLP; mov rax, qword ptr [rsp + 0x68] ; mov rdx, qword ptr [rbx + 0x18] ; mov rsi, r15 ; mov r9, qword ptr [rsp + 0x20] ; mov r8, qword ptr [rsp + 0x30] ; mov rcx, qword ptr [r14] ; mov rdi, qword ptr [rsp + 0x70] ; mov qword ptr [rsp + 8], rax ; mov rax, qword ptr [rsp + 0x50] ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
read: r15 rax rsp 
write: r8 r9 rax rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
00029a9d: RLP; cmp eax, 6 ; jne 0x29aee
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00029e46: RLP; mov rdi, qword ptr [r14 + 0x18] ; mov r8, rbx ; mov rcx, rbp ; mov rdx, qword ptr [r13] ; mov rsi, r12 ; call qword ptr [r14 + 8]
read: r12 rbp rbx rsp 
write: r8 rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
00029e5f: RLP; mov r14, qword ptr [r14 + 0x20] ; test r14, r14 ; jne 0x29e34
read: r14 rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
00029ea7: RLP; mov eax, dword ptr [rsp + 0xc8] ; xor r8d, r8d ; mov dword ptr [rsp], 0 ; mov r9, qword ptr [rsp + 0x38] ; mov rcx, rbx ; mov rdx, qword ptr [rsp + 0x50] ; mov rsi, qword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; mov dword ptr [rsp + 8], eax ; call rbp
read: eax r8d rbp rbx rsp 
write: eax r8d r9 rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00029ed9: RLP; cmp eax, 4 ; je 0x29f1d
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002a18b: RLP; mov eax, dword ptr [rsp + 0xc8] ; mov dword ptr [rsp], ebx ; xor r8d, r8d ; mov r9, qword ptr [rsp + 0x38] ; xor ecx, ecx ; xor edx, edx ; mov rsi, qword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; mov dword ptr [rsp + 8], eax ; call r14
read: eax ebx ecx edx r14 r8d rsp 
write: eax ecx edx r8d r9 rdi rflags rsi rsp 
--------------------------------------------------------------------------------
0002a1b6: RLP; jmp 0x29f3a
read: 
write: 
--------------------------------------------------------------------------------
0002a4b6: RLP; mov rdi, qword ptr [rbx + 0x18] ; mov r8, r12 ; mov rcx, rbp ; mov rdx, qword ptr [r14] ; mov rsi, r15 ; call qword ptr [rbx + 8]
read: r12 r15 rbp rsp 
write: r8 rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
0002a4cd: RLP; mov rbx, qword ptr [rbx + 0x20] ; test rbx, rbx ; jne 0x2a4a4
read: rbx rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
0002a518: RLP; mov eax, dword ptr [rsp + 0xe8] ; xor r8d, r8d ; mov dword ptr [rsp], 0 ; mov r9, qword ptr [rsp + 0x48] ; mov rcx, r12 ; mov rdx, qword ptr [rsp + 0x50] ; mov rsi, qword ptr [rsp + 0x60] ; mov rdi, qword ptr [rsp + 0x58] ; mov dword ptr [rsp + 8], eax ; call r15
read: eax r12 r15 r8d rsp 
write: eax r8d r9 rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0002a54b: RLP; cmp eax, 4 ; je 0x2a57d
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002a63a: RLP; mov rax, qword ptr [rsp + 0x68] ; mov rdx, qword ptr [rbp + 0x18] ; mov r9, rbx ; mov r8, qword ptr [rsp + 0x78] ; mov rcx, qword ptr [r14] ; mov rsi, qword ptr [rsp + 0x18] ; mov rdi, qword ptr [rsp + 0x70] ; mov qword ptr [rsp + 8], rax ; mov rax, qword ptr [rsp + 0x50] ; mov qword ptr [rsp], rax ; call qword ptr [rbp]
read: rax rbx rsp 
write: r8 r9 rax rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
0002a66d: RLP; cmp eax, 6 ; je 0x2a620
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002a940: RLP; mov eax, dword ptr [rsp + 0xe8] ; mov dword ptr [rsp], ebp ; xor r8d, r8d ; mov r9, qword ptr [rsp + 0x48] ; xor ecx, ecx ; xor edx, edx ; mov rsi, qword ptr [rsp + 0x60] ; mov rdi, qword ptr [rsp + 0x58] ; mov dword ptr [rsp + 8], eax ; call rbx
read: eax ebp ecx edx r8d rbx rsp 
write: eax ecx edx r8d r9 rdi rflags rsi rsp 
--------------------------------------------------------------------------------
0002a96a: RLP; jmp 0x2a5a0
read: 
write: 
--------------------------------------------------------------------------------
0002aa8d: RLP; mov rax, qword ptr [rsp + 0x68] ; mov rdx, qword ptr [rbx + 0x18] ; mov rsi, r15 ; mov r9, qword ptr [rsp + 0x20] ; mov r8, qword ptr [rsp + 0x30] ; mov rcx, qword ptr [r14] ; mov rdi, qword ptr [rsp + 0x70] ; mov qword ptr [rsp + 8], rax ; mov rax, qword ptr [rsp + 0x50] ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
read: r15 rax rsp 
write: r8 r9 rax rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
0002aabf: RLP; cmp eax, 6 ; jne 0x2ab10
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002afc5: RLP; xor r9d, r9d ; mov dword ptr [rsp + 8], 0 ; mov dword ptr [rsp], 0 ; mov r8, qword ptr [rsp + 0x28] ; mov rcx, r15 ; mov rdx, qword ptr [rsp + 0x30] ; mov rsi, qword ptr [rsp + 0x20] ; mov rdi, qword ptr [rsp + 0x18] ; call rbp
read: r15 r9d rbp rsp 
write: r8 r9d rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0002aff4: RLP; cmp eax, 6 ; jne 0x2b048
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002b0b1: RLP; xor r9d, r9d ; lea rcx, [r13 + rbp*4] ; lea rdx, [rsp + 0x90] ; mov dword ptr [rsp + 8], 0 ; mov dword ptr [rsp], 0 ; lea r8, [rsp + 0x98] ; mov rsi, qword ptr [rsp + 0x20] ; mov rdi, qword ptr [rsp + 0x18] ; call r15
read: r15 r9d rsp 
write: r8 r9d rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0002b0e9: RLP; cmp eax, 6 ; je 0x2ae3c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002b18e: RLP; movzx r14d, word ptr [rbp + 8] ; xor edx, edx ; mov r12d, eax ; div r14d ; lea esi, [r14 - 2] ; mov eax, r12d ; mov r13d, edx ; xor edx, edx ; div esi ; movzx eax, word ptr [rbp + 4] ; mov ebp, dword ptr [rip + 0x33f761] ; sub ebp, eax ; lea r12d, [rdx + 1] ; jmp 0x2b1ea
read: eax ebp edx esi r12d r14d 
write: eax ebp edx esi r12d r13d r14d rflags 
--------------------------------------------------------------------------------
0002b1d6: RLP; test eax, eax ; je 0x2b214
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002b263: RLP; mov rdi, r12 ; mov r15, rax ; call 0x856dc
read: r12 rax rip rsp 
write: r15 rdi rsp 
--------------------------------------------------------------------------------
0002b272: RLP; lea r13, [rax + 1] ; mov rdx, r15 ; mov rsi, r14 ; lea rcx, [r13 + r15 + 0xf] ; and rcx, 0xfffffffffffffff0 ; sub rsp, rcx ; mov rdi, rsp ; call 0x892cc
read: r14 r15 rcx rip rsp 
write: r13 rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0002b294: RLP; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rax ; call 0x8e3dc
read: r12 r13 rax rip rsp 
write: rdi rdx rsi rsp 
--------------------------------------------------------------------------------
0002b2a6: RLP; mov rdi, rsp ; call 0x2bbcc
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0002b2b2: RLP; test rax, rax ; mov qword ptr [rbx], rax ; je 0x2b344
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002b30e: RLP; mov rdi, rbx ; call r12
read: r12 rbx rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0002b318: RLP; mov rdx, qword ptr [rbx + 0x30] ; test rdx, rdx ; je 0x2b332
read: rdx rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
0002b38b: RLP; test rax, rax ; mov qword ptr [rip + 0x342fe7], rax ; jne 0x2b4b4
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002b3b1: RLP; movsxd rbp, eax ; mov ebx, eax ; cmp rbp, -1 ; je 0x2b4b4
read: eax rbp rflags 
write: ebx rbp rflags 
--------------------------------------------------------------------------------
0002b3d3: RLP; test eax, eax ; js 0x2b4a4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002b40c: RLP; cmp rax, -1 ; mov qword ptr [rip + 0x33f505], rax ; je 0x2b506
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002b495: RLP; mov qword ptr [rip + 0x33f47c], 0 ; nop dword ptr [rax] ; mov rdi, rbp ; mov eax, 3 ; syscall ; nop word ptr [rax + rax] ; add rsp, 0x90 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
read: rbp rsp 
write: eax r12 rbp rbx rdi rflags rsp 
--------------------------------------------------------------------------------
0002b4d8: RLP; mov dword ptr [rip + 0x33f42a], 0 ; mov qword ptr [rip + 0x33f42f], 0 ; mov eax, 0xffffffff ; jmp 0x2b479
read: 
write: eax 
--------------------------------------------------------------------------------
0002b504: RLP; jmp 0x2b4e2
read: 
write: 
--------------------------------------------------------------------------------
0002b519: RLP; test rax, rax ; mov qword ptr [rip + 0x33f3f9], rax ; je 0x2b4a4
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002b54a: RLP; cmp rax, -1 ; je 0x2b485
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002b5a7: RLP; test eax, eax ; je 0x2b5cc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002b5ba: RLP; mov dword ptr [r12], eax ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
read: eax rsp 
write: eax r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0002b5dd: RLP; test eax, eax ; jne 0x2b5ab
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002b65f: RLP; test eax, eax ; jne 0x2b682
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002b6b2: RLP; test eax, eax ; mov ebx, eax ; jne 0x2b682
read: eax rflags 
write: ebx rflags 
--------------------------------------------------------------------------------
0002b769: RLP; test rax, rax ; mov r13, rax ; mov rcx, qword ptr [rsp + 8] ; mov rdx, qword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 0x18] ; je 0x2b89c
read: rax rflags 
write: r13 rcx rdx rflags rsi 
--------------------------------------------------------------------------------
0002b7e9: RLP; test eax, eax ; mov rcx, qword ptr [rsp + 8] ; jne 0x2b8f2
read: eax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
0002b862: RLP; test eax, eax ; jne 0x2b8db
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002b8ba: RLP; jmp 0x2b866
read: 
write: 
--------------------------------------------------------------------------------
0002b8d1: RLP; mov rcx, qword ptr [rsp + 8] ; jmp 0x2b7f6
read: 
write: rcx 
--------------------------------------------------------------------------------
0002b8ef: RLP; mov eax, dword ptr [rsp] ; mov rdi, r13 ; mov dword ptr [rsp], eax ; call 0x1f46c
read: eax r13 rip rsp 
write: eax rdi rsp 
--------------------------------------------------------------------------------
0002b901: RLP; mov eax, dword ptr [rsp] ; mov ebx, eax ; jmp 0x2b687
read: eax 
write: eax ebx 
--------------------------------------------------------------------------------
0002b97a: RLP; test rax, rax ; mov r10, rax ; mov qword ptr [r12], rax ; mov r8, qword ptr [rsp + 8] ; mov rcx, qword ptr [rsp + 0x10] ; je 0x2b89c
read: rax rflags 
write: r10 r8 rcx rflags 
--------------------------------------------------------------------------------
0002ba18: RLP; test eax, eax ; mov r9, qword ptr [rsp + 8] ; mov r8, qword ptr [rsp + 0x10] ; mov r11d, dword ptr [rsp + 0x18] ; mov rcx, qword ptr [rsp + 0x20] ; mov r10, qword ptr [rsp + 0x28] ; jne 0x2ba83
read: eax rflags 
write: r10 r11d r8 r9 rcx rflags 
--------------------------------------------------------------------------------
0002ba68: RLP; mov r10, qword ptr [rsp + 0x28] ; mov rcx, qword ptr [rsp + 0x20] ; mov r11d, dword ptr [rsp + 0x18] ; mov r8, qword ptr [rsp + 0x10] ; mov r9, qword ptr [rsp + 8] ; jmp 0x2ba35
read: 
write: r10 r11d r8 r9 rcx 
--------------------------------------------------------------------------------
0002ba94: RLP; mov rsi, qword ptr [rsp + 0x30] ; mov rcx, qword ptr [rsp + 8] ; test rsi, rsi ; jne 0x2b725
read: rflags rsi 
write: rcx rflags rsi 
--------------------------------------------------------------------------------
0002bad7: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0002bb03: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0002bb4a: RLP; mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
0002bbc2: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0002bbfb: RLP; test rax, rax ; je 0x2bd24
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002bc38: RLP; test rax, rax ; mov qword ptr [rbx + 0x10], rax ; je 0x2bdac
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002bc58: RLP; test rax, rax ; mov qword ptr [rbx + 0x18], rax ; je 0x2bdbc
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002bc79: RLP; mov rdi, qword ptr [rbx + 0x10] ; lea rsi, [rip + 0x108adc] ; mov qword ptr [rbx + 0x20], rax ; call 0x11c3dc
read: rax rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
0002bc91: RLP; mov qword ptr [rbx + 0x28], rax ; mov rax, qword ptr [rbx + 0x18] ; xor rax, qword ptr fs:[0x30] ; rol rax, 0x11 ; mov qword ptr [rbx + 0x18], rax ; mov rax, qword ptr [rbx + 0x20] ; test rax, rax ; je 0x2bcc4
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
0002bd35: RLP; lea rdi, [rax + 0x31] ; mov r13, rax ; call 0x1f3cc
read: rax rip rsp 
write: r13 rdi rsp 
--------------------------------------------------------------------------------
0002bd45: RLP; test rax, rax ; mov rbp, rax ; mov rbx, rax ; je 0x2bdac
read: rax rflags 
write: rbp rbx rflags 
--------------------------------------------------------------------------------
0002bd64: RLP; lea rdx, [rip - 0x27f] ; lea rsi, [rip + 0x33ebba] ; mov rdi, rbp ; mov qword ptr [rbp], rax ; mov dword ptr [rbp + 8], 0xfffffffd ; mov qword ptr [rbp + 0x10], 0 ; call 0xe13dc
read: rax rbp rip rsp 
write: rdi rdx rsi rsp 
--------------------------------------------------------------------------------
0002bd91: RLP; test rax, rax ; jne 0x2bc10
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002bda6: RLP; nop word ptr [rax + rax] ; add rsp, 0x18 ; xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: ebx rbx rsp 
write: ebx r12 r13 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0002bdca: RLP; jmp 0x2bd13
read: 
write: 
--------------------------------------------------------------------------------
0002be4c: RLP; mov r15, rax ; lea rax, [rip + 0xf2ce6] ; mov edx, dword ptr [rsp + 4] ; movzx eax, byte ptr [rax + r14] ; lea r12, [r12 + rax + 2] ; add r12, r15 ; test edx, edx ; je 0x2be94
read: edx r12 r15 rax rflags 
write: eax edx r12 r15 rax rflags 
--------------------------------------------------------------------------------
0002be88: RLP; test eax, eax ; sete al ; movzx eax, al ; mov dword ptr [rsp + 4], eax ; cmp ebx, 0xd ; je 0x2bebc
read: al eax ebx rflags 
write: al eax rflags 
--------------------------------------------------------------------------------
0002bee6: RLP; test eax, eax ; je 0x2bf05
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002befd: RLP; test eax, eax ; jne 0x2bfdc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002bf38: RLP; test rax, rax ; mov r15, rax ; je 0x2c00b
read: rax rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
0002bf89: RLP; lea rdi, [rax + 1] ; mov byte ptr [rax], 0x3d ; mov rsi, rbx ; call 0x898ec
read: rbx rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
0002bf9c: RLP; cmp r12d, 0xd ; lea rdi, [rax + 1] ; mov byte ptr [rax], 0x3b ; je 0x2bfcc
read: r12d rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
0002bfec: RLP; test rax, rax ; je 0x2c00b
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002c003: RLP; mov r14, rax ; jmp 0x2bf05
read: rax 
write: r14 
--------------------------------------------------------------------------------
0002c09c: RLP; test eax, eax ; jne 0x2c0ec
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002c0e5: RLP; mov r15, qword ptr [r13 + r12*8] ; jmp 0x2c0ac
read: 
write: r15 
--------------------------------------------------------------------------------
0002c10e: RLP; test rax, rax ; je 0x2c11c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002c14f: RLP; test rax, rax ; mov r15, rax ; je 0x2c4c4
read: rax rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
0002c185: RLP; test rax, rax ; mov qword ptr [rsp + 0xb0], rax ; je 0x2c4c4
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002c1a5: RLP; test rax, rax ; mov r12, rax ; je 0x2c4ae
read: rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
0002c1cc: RLP; mov r14, qword ptr [rsp + 0xb0] ; mov rdi, qword ptr [r13 + rbx*8 + 0x80] ; cmp r14, rdi ; je 0x2c1f7
read: r14 rdi rflags 
write: r14 rdi rflags 
--------------------------------------------------------------------------------
0002c1ef: RLP; mov qword ptr [r13 + rbx*8 + 0x80], r14 ; mov rdi, qword ptr [rip + 0x33ddce] ; cmp r12, rdi ; je 0x2c218
read: r12 r14 rdi rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
0002c211: RLP; mov qword ptr [rip + 0x33ddb4], r12 ; mov rax, qword ptr [rip + 0x33ccdd] ; add dword ptr [rax], 1 ; mov ecx, dword ptr [rip + 0x342544] ; test ecx, ecx ; jne 0x2c4dc
read: ecx r12 rflags 
write: ecx rax rflags 
--------------------------------------------------------------------------------
0002c23e: RLP; mov r15, qword ptr [rsp + 0xb0] ; jmp 0x2c0ac
read: 
write: r15 
--------------------------------------------------------------------------------
0002c26d: RLP; jmp 0x2c07d
read: 
write: 
--------------------------------------------------------------------------------
0002c2b2: RLP; test rax, rax ; jne 0x2c657
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002c308: RLP; test rax, rax ; mov qword ptr [rsp + r15*8 + 0xb0], rax ; je 0x2c374
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002c34f: RLP; test eax, eax ; je 0x2c2cc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002c363: RLP; test rax, rax ; mov qword ptr [rsp + r15*8 + 0x40], rax ; jne 0x2c2d6
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002c3b8: RLP; mov rdi, qword ptr [rsp + 0x10] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0002c3c6: RLP; mov r15, qword ptr [rsp + 8] ; jmp 0x2c0ac
read: 
write: r15 
--------------------------------------------------------------------------------
0002c3f5: RLP; test eax, eax ; je 0x2c460
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002c441: RLP; cmp ebx, 0xd ; jne 0x2c414
read: ebx rflags 
write: rflags 
--------------------------------------------------------------------------------
0002c47b: RLP; test eax, eax ; jne 0x2c3f9
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002c4a9: RLP; jmp 0x2c407
read: 
write: 
--------------------------------------------------------------------------------
0002c4c4: RLP; mov qword ptr [rsp + 0xb0], 0 ; jmp 0x2c222
read: 
write: 
--------------------------------------------------------------------------------
0002c4fd: RLP; jmp 0x2c230
read: 
write: 
--------------------------------------------------------------------------------
0002c52d: RLP; jmp 0x2c3aa
read: 
write: 
--------------------------------------------------------------------------------
0002c543: RLP; test rax, rax ; mov qword ptr [rsp + 8], rax ; je 0x2c37c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002c59b: RLP; mov r13, qword ptr [rbx + r15*8] ; mov rdi, qword ptr [r14] ; cmp r13, rdi ; je 0x2c5bf
read: r13 rdi rflags 
write: r13 rdi rflags 
--------------------------------------------------------------------------------
0002c5bc: RLP; mov qword ptr [r14], r13 ; cmp ebp, 0xd ; jne 0x2c56c
read: ebp r13 rflags 
write: rflags 
--------------------------------------------------------------------------------
0002c5e7: RLP; mov rax, qword ptr [rsp + 8] ; mov qword ptr [rip + 0x33d9d9], rax ; mov rax, qword ptr [rip + 0x33c902] ; add dword ptr [rax], 1 ; jmp 0x2c39c
read: rax 
write: rax rflags 
--------------------------------------------------------------------------------
0002c641: RLP; mov rax, qword ptr [rip + 0x33c81c] ; xor r15d, r15d ; mov dword ptr fs:[rax], 0x16 ; jmp 0x2c0ac
read: r15d 
write: r15d rax rflags 
--------------------------------------------------------------------------------
0002c663: RLP; test rax, rax ; mov r15, rax ; mov qword ptr [rsp + 0x10], rax ; je 0x2c74b
read: rax rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
0002c685: RLP; test rax, rax ; mov r9, rax ; je 0x2c602
read: rax rflags 
write: r9 rflags 
--------------------------------------------------------------------------------
0002c707: RLP; test eax, eax ; mov rcx, qword ptr [rsp + 8] ; mov r9, qword ptr [rsp + 0x18] ; movsxd r8, dword ptr [rsp + 0x24] ; mov r10, qword ptr [rsp + 0x28] ; jne 0x2c6ac
read: eax rflags 
write: r10 r8 r9 rcx rflags 
--------------------------------------------------------------------------------
0002c736: RLP; test rax, rax ; je 0x2c602
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002c77c: RLP; jmp 0x2c0ac
read: 
write: 
--------------------------------------------------------------------------------
0002c7a2: RLP; jmp 0x2c633
read: 
write: 
--------------------------------------------------------------------------------
0002c7ee: RLP; test eax, eax ; je 0x2cc17
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002c809: RLP; test eax, eax ; je 0x2cc17
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002c81d: RLP; cmp rax, 0xff ; mov r15, rax ; ja 0x2c99b
read: rax rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
0002c847: RLP; test rax, rax ; jne 0x2c99b
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002c888: RLP; test rax, rax ; jne 0x2cc1f
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002c8ac: RLP; test rax, rax ; je 0x2c9b0
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002c8dc: RLP; test rax, rax ; mov r14, rax ; je 0x2c8ed
read: rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
0002c90f: RLP; test rax, rax ; mov r14, rax ; je 0x2c920
read: rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
0002c930: RLP; test rax, rax ; mov r14, rax ; je 0x2c941
read: rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
0002c9cb: RLP; test rax, rax ; mov rsi, rax ; je 0x2ccd6
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
0002ca05: RLP; lea rcx, [rbp - 0x48] ; lea rdx, [rbp - 0x50] ; lea rsi, [rbp - 0x58] ; lea r9, [rbp - 0x38] ; lea r8, [rbp - 0x40] ; mov rdi, rax ; call 0x337bc
read: rax rip rsp 
write: r8 r9 rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
0002ca25: RLP; cmp eax, -1 ; mov ebx, eax ; je 0x2c9a9
read: eax rflags 
write: ebx rflags 
--------------------------------------------------------------------------------
0002caa0: RLP; test rax, rax ; mov r14, rax ; mov r10, qword ptr [rbp - 0x70] ; mov r11, qword ptr [rbp - 0x78] ; je 0x2cd1f
read: rax rflags 
write: r10 r11 r14 rflags 
--------------------------------------------------------------------------------
0002cac6: RLP; cmp dword ptr [r14 + 8], 0 ; jne 0x2cadc
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
0002cadc: RLP; cmp qword ptr [r14 + 0x10], 0 ; je 0x2cc8e
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
0002cb44: RLP; mov rsi, qword ptr [rbp - 0x40] ; mov eax, r13d ; mov rcx, r12 ; mov rdi, rsi ; repne scasb al, byte ptr [rdi] ; not rcx ; add rcx, 0x20 ; and rcx, 0xfffffffffffffff0 ; sub rsp, rcx ; lea r12, [rsp + 0x37] ; and r12, 0xfffffffffffffff0 ; mov rdi, r12 ; call 0x1f521
read: al r12 r13d rcx rdi rflags rip rsi rsp 
write: eax r12 rcx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
0002cb76: RLP; mov rcx, qword ptr [rip + 0x33afd7] ; mov rax, rbx ; add rax, 1 ; movsx rdx, byte ptr [rax - 1] ; mov edx, dword ptr [rcx + rdx*4] ; test dl, dl ; mov byte ptr [rax - 1], dl ; jne 0x2cb80
read: dl rax rbx rflags 
write: edx rax rcx rdx rflags 
--------------------------------------------------------------------------------
0002cbb8: RLP; test eax, eax ; jne 0x2c9a9
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002cbee: RLP; test eax, eax ; mov rbx, qword ptr [r14 + 0x10] ; jne 0x2cbfd
read: eax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
0002cc63: RLP; cmp byte ptr [rax - 2], 0x2f ; lea rdi, [rax - 1] ; je 0x2cc77
read: rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
0002cc86: RLP; mov qword ptr [rbx], rax ; jmp 0x2cbce
read: rax 
write: 
--------------------------------------------------------------------------------
0002ccd4: RLP; jmp 0x2cca4
read: 
write: 
--------------------------------------------------------------------------------
0002cd63: RLP; test rax, rax ; mov r14, rax ; jne 0x2cab4
read: rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
0002cdd1: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0002ce64: RLP; mov rdi, rax ; xor eax, eax ; test rdi, rdi ; jne 0x2ce84
read: eax rax rdi rflags 
write: eax rdi rflags 
--------------------------------------------------------------------------------
0002cf3c: RLP; mov rax, qword ptr [rip + 0x33bf21] ; mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; jmp 0x2ce6e
read: eax 
write: eax rax rflags 
--------------------------------------------------------------------------------
0002d1ec: RLP; movsxd r13, eax ; mov r12d, eax ; test r13, r13 ; js 0x2d2b1
read: eax r13 rflags 
write: r12d r13 rflags 
--------------------------------------------------------------------------------
0002d215: RLP; test eax, eax ; js 0x2d2ed
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002d265: RLP; cmp rax, -1 ; mov r15, rax ; je 0x2d314
read: rax rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
0002d29d: RLP; test rax, rax ; je 0x2d2f9
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002d2d3: RLP; mov rax, qword ptr [rbp - 0xc8] ; test rax, rax ; jne 0x2d2ed
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
0002d312: RLP; jmp 0x2d2b1
read: 
write: 
--------------------------------------------------------------------------------
0002d33f: RLP; test rax, rax ; mov r15, rax ; je 0x2d48b
read: rax rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
0002d37a: RLP; cdqe ; mov r9, qword ptr [rbp - 0xd0] ; mov rcx, qword ptr [rbp - 0xd8] ; test rax, rax ; jle 0x2d2c0
read: eax rax rflags 
write: r9 rax rcx rflags 
--------------------------------------------------------------------------------
0002d425: RLP; mov r8, qword ptr [rbp - 0xc8] ; lea rdi, [rax + 5] ; mov rsi, r13 ; mov dword ptr [rax], 0x5359532f ; mov byte ptr [rax + 4], 0x5f ; lea rdx, [r8 + 1] ; call 0x8e3dc
read: r13 rip rsp 
write: r8 rdi rdx rsi rsp 
--------------------------------------------------------------------------------
0002d44a: RLP; mov rdi, r12 ; xor eax, eax ; mov esi, 0x80000 ; call 0xd6819
read: eax r12 rip rsp 
write: eax esi rdi rflags rsp 
--------------------------------------------------------------------------------
0002d45d: RLP; test eax, eax ; mov r12d, eax ; js 0x2d2b1
read: eax rflags 
write: r12d rflags 
--------------------------------------------------------------------------------
0002d47b: RLP; test eax, eax ; js 0x2d2ed
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002d4c3: RLP; mov eax, dword ptr [rbx + 0x18] ; test eax, eax ; je 0x2d50c
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0002d4e0: RLP; mov rdi, rbx ; call 0x1f46c
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0002d4ec: RLP; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
0002d505: RLP; mov eax, dword ptr [rbx + 0x18] ; jmp 0x2d4cf
read: 
write: eax 
--------------------------------------------------------------------------------
0002d519: RLP; mov eax, dword ptr [rbx + 0x18] ; jmp 0x2d4cf
read: 
write: eax 
--------------------------------------------------------------------------------
0002d562: RLP; mov r14, qword ptr [rip + 0x33d413] ; test r14, r14 ; jne 0x2d58f
read: r14 rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
0002d583: RLP; test eax, eax ; je 0x2d598
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002d5d5: RLP; test rax, rax ; je 0x2d5e4
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002d615: RLP; test rax, rax ; mov ecx, eax ; je 0x2d63d
read: eax rax rflags 
write: ecx rflags 
--------------------------------------------------------------------------------
0002d6f4: RLP; test eax, eax ; mov r10, qword ptr [rbp - 0x108] ; mov rdx, qword ptr [rbp - 0x110] ; jne 0x2d6ac
read: eax rflags 
write: r10 rdx rflags 
--------------------------------------------------------------------------------
0002d796: RLP; test rax, rax ; mov qword ptr [rbp - 0x108], rax ; je 0x2d87c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002d7b9: RLP; mov rcx, qword ptr [rbp - 0x108] ; test rax, rax ; mov qword ptr [rcx + 8], rax ; je 0x2da70
read: rax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
0002d816: RLP; mov rcx, qword ptr [rbp - 0x108] ; test rax, rax ; mov qword ptr [rcx + rbx*8 + 0x10], rax ; je 0x2d83c
read: rax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
0002d870: RLP; movsxd rdi, r15d ; mov eax, 3 ; syscall ; nop ; lea rsp, [rbp - 0x28] ; xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: eax r15d rsp 
write: eax r12 r13 r14 r15 rbp rbx rdi rflags rsp 
--------------------------------------------------------------------------------
0002d8b4: RLP; mov r15, rax ; mov rdi, r14 ; mov r13, rax ; sub r15, r14 ; mov rsi, r15 ; call 0x3368c
read: r14 r15 rax rip rsp 
write: r13 r15 rdi rflags rsi rsp 
--------------------------------------------------------------------------------
0002d8cc: RLP; test rax, rax ; mov r12, rax ; je 0x2d87c
read: rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
0002d8e6: RLP; test eax, eax ; jne 0x2d8f5
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002d901: RLP; mov rdi, r13 ; mov r15, rax ; call 0x856dc
read: r13 rax rip rsp 
write: r15 rdi rsp 
--------------------------------------------------------------------------------
0002d910: RLP; mov rdx, r14 ; lea r8, [rax + 1] ; mov rsi, rbx ; sub rdx, rbx ; lea rax, [r15 + rdx] ; mov qword ptr [rbp - 0x108], r8 ; lea rax, [r8 + rax + 0x1e] ; and rax, 0xfffffffffffffff0 ; sub rsp, rax ; lea r14, [rsp + 0xf] ; and r14, 0xfffffffffffffff0 ; mov rdi, r14 ; mov rbx, r14 ; call 0x892cc
read: r14 r8 rax rbx rdx rip rsp 
write: r14 r8 rax rbx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0002d94c: RLP; mov rdx, r15 ; mov rsi, r12 ; mov rdi, rax ; call 0x892cc
read: r12 r15 rax rip rsp 
write: rdi rdx rsi rsp 
--------------------------------------------------------------------------------
0002d95e: RLP; mov r8, qword ptr [rbp - 0x108] ; mov rsi, r13 ; mov rdi, rax ; mov rdx, r8 ; call 0x8e3dc
read: r13 r8 rax rip rsp 
write: r8 rdi rdx rsi rsp 
--------------------------------------------------------------------------------
0002d977: RLP; mov rdi, r12 ; call 0x1f46c
read: r12 rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0002d983: RLP; jmp 0x2d5e4
read: 
write: 
--------------------------------------------------------------------------------
0002d9ad: RLP; test eax, eax ; mov r15d, eax ; js 0x2d87c
read: eax rflags 
write: r15d rflags 
--------------------------------------------------------------------------------
0002d9cf: RLP; cmp eax, -1 ; je 0x2d870
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002d9fd: RLP; cmp rax, -1 ; mov r14, rax ; je 0x2d870
read: rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
0002da7c: RLP; xor eax, eax ; jmp 0x2d5ae
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
0002dcc8: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0002de0c: RLP; test rax, rax ; mov r15, rax ; je 0x2de92
read: rax rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
0002df14: RLP; test rax, rax ; je 0x2df22
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002df62: RLP; test rax, rax ; je 0x2e088
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002df77: RLP; lea rdx, [rax + 1] ; add rax, 0x1f ; mov rsi, r12 ; and rax, 0xfffffffffffffff0 ; sub rsp, rax ; lea rdi, [rsp + 0xf] ; and rdi, 0xfffffffffffffff0 ; call 0x8e3dc
read: r12 rax rdi rip rsp 
write: rax rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0002df9b: RLP; mov dword ptr [rbp - 0x1b0], 0 ; mov qword ptr [rbp - 0x1a8], rax ; mov rbx, qword ptr [rbp - 0x1a8] ; mov esi, 0x3d ; mov rdi, rbx ; call 0x83a5c
read: rax rbx rip rsp 
write: esi rbx rdi rsp 
--------------------------------------------------------------------------------
0002dfc4: RLP; test rax, rax ; mov r13, rax ; mov qword ptr [rbp - 0x1c8], rax ; je 0x2de67
read: rax rflags 
write: r13 rflags 
--------------------------------------------------------------------------------
0002e035: RLP; test eax, eax ; jne 0x2dfec
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002e06c: RLP; test rax, rax ; je 0x2de67
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002e0d6: RLP; lea rbx, [rbx + rax + 1] ; cmp r12d, 0xd ; je 0x2e222
read: r12d rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
0002e11d: RLP; mov rdx, qword ptr [rbp - 0x1c0] ; test rax, rax ; mov qword ptr [rdx + r15*8], rax ; je 0x2e14b
read: rax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
0002e14b: RLP; sub r14d, 1 ; lea eax, [r14 + 1] ; test eax, eax ; jle 0x2e367
read: eax r14d rflags 
write: eax r14d rflags 
--------------------------------------------------------------------------------
0002e1cb: RLP; test eax, eax ; jne 0x2de92
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002e1ee: RLP; test eax, eax ; je 0x2df22
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002e21d: RLP; jmp 0x2e096
read: 
write: 
--------------------------------------------------------------------------------
0002e232: RLP; test rax, rax ; mov r15, rax ; je 0x2e39d
read: rax rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
0002e289: RLP; mov rsi, qword ptr [rbx + r12*8] ; mov rax, qword ptr [rbp - 0x1d0] ; mov qword ptr [r13], rsi ; mov rsi, qword ptr [rax + r12*8] ; cmp rsi, r14 ; je 0x2e2ed
read: r14 rflags rsi 
write: rax rflags rsi 
--------------------------------------------------------------------------------
0002e2b4: RLP; cmp r12d, 0xc ; lea r15, [rax + 1] ; je 0x2e2fa
read: r12d rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
0002e311: RLP; mov eax, dword ptr [rip + 0x340455] ; test eax, eax ; je 0x2de26
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0002e340: RLP; jmp 0x2de26
read: 
write: 
--------------------------------------------------------------------------------
0002e396: RLP; xor eax, eax ; jmp 0x2de94
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
0002e3eb: RLP; lea rdi, [rax + 1] ; add r12, 1 ; cmp r12, 0xd ; jne 0x2e3c4
read: r12 rflags 
write: r12 rdi rflags 
--------------------------------------------------------------------------------
0002e487: RLP; lea rbp, [rbp + rax + 1] ; cmp ebx, 0xd ; jne 0x2e464
read: ebx rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
0002e4a1: RLP; test rax, rax ; mov r15, rax ; je 0x2e5d4
read: rax rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
0002e4ef: RLP; cmp ebp, 0xd ; lea r8, [rax + 1] ; je 0x2e53a
read: ebp rflags 
write: r8 rflags 
--------------------------------------------------------------------------------
0002e59a: RLP; mov r8, qword ptr [rsp + 8] ; jmp 0x2e4c2
read: 
write: r8 
--------------------------------------------------------------------------------
0002e5cd: RLP; jmp 0x2e55c
read: 
write: 
--------------------------------------------------------------------------------
0002e63d: RLP; cmp ebp, 0xd ; jne 0x2e61c
read: ebp rflags 
write: rflags 
--------------------------------------------------------------------------------
0002e658: RLP; pop rbx ; pop rbp ; pop r12 ; ret
read: rsp 
write: r12 rbp rbx rsp 
--------------------------------------------------------------------------------
0002e685: RLP; jmp 0x2e60d
read: 
write: 
--------------------------------------------------------------------------------
0002e6ad: RLP; jmp 0x2e64c
read: 
write: 
--------------------------------------------------------------------------------
0002e976: RLP; test eax, eax ; js 0x2ea75
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002e997: RLP; mov rax, qword ptr [rip + 0x33a3fe] ; mov rdi, qword ptr [rax] ; call 0x6c45c
read: rip rsp 
write: rax rdi rsp 
--------------------------------------------------------------------------------
0002e9aa: RLP; mov rax, qword ptr [rip + 0x33a4ab] ; xor r9d, r9d ; xor edi, edi ; mov r8d, 0xffffffff ; mov ecx, 0x22 ; mov edx, 3 ; mov rax, qword ptr [rax + 0x18] ; mov esi, eax ; add eax, dword ptr [rsp + 0x44] ; neg esi ; and esi, eax ; mov dword ptr [rsp + 0x44], esi ; movsxd rsi, esi ; call 0xe004c
read: eax edi esi r9d rip rsp 
write: eax ecx edi edx esi r8d r9d rax rflags rsi rsp 
--------------------------------------------------------------------------------
0002e9e4: RLP; cmp rax, -1 ; mov rbx, rax ; je 0x2ea1f
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
0002ea05: RLP; mov rdi, rbx ; xchg qword ptr [rip + 0x33c1ed], rdi ; test rdi, rdi ; je 0x2ea1f
read: rbx rdi rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
0002ea1f: RLP; mov rdi, qword ptr [rsp + 0x48] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0002ea2d: RLP; call 0x372fc
read: rip rsp 
write: rsp 
--------------------------------------------------------------------------------
0002ea61: RLP; mov r8, qword ptr [rsp + 0x38] ; mov r9d, dword ptr [rsp + 0x34] ; mov rdx, qword ptr [rsp + 0x28] ; jmp 0x2e90f
read: 
write: r8 r9d rdx 
--------------------------------------------------------------------------------
0002ea8f: RLP; jmp 0x2ea2d
read: 
write: 
--------------------------------------------------------------------------------
0002eae2: RLP; mov r8, r13 ; mov ecx, r12d ; mov rdx, rbp ; mov rsi, rbx ; mov rdi, rax ; call 0x2e8ec
read: r12d r13 rax rbp rbx rip rsp 
write: ecx r8 rdi rdx rsi rsp 
--------------------------------------------------------------------------------
0002eb27: RLP; lea rsi, [rip + 0x109516] ; lea rdi, [rip + 0x105e78] ; mov rbx, rax ; mov edx, 5 ; call 0x2f4bc
read: rax rip rsp 
write: edx rbx rdi rsi rsp 
--------------------------------------------------------------------------------
0002eb46: RLP; mov r8, r13 ; mov ecx, r12d ; mov rdx, rbp ; mov rsi, rbx ; mov rdi, rax ; call 0x2e8ec
read: r12d r13 rax rbp rbx rip rsp 
write: ecx r8 rdi rdx rsi rsp 
--------------------------------------------------------------------------------
0002f0c2: RLP; test eax, eax ; jne 0x2f09c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002f0f1: RLP; test eax, eax ; je 0x2f135
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002f108: RLP; test eax, eax ; jne 0x2f33f
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002f12b: RLP; mov qword ptr [rbx + 8], rbp ; mov r14d, 1 ; mov qword ptr [r12], rbp ; test r13, r13 ; je 0x2f196
read: r13 rbp rflags 
write: r14d rflags 
--------------------------------------------------------------------------------
0002f163: RLP; test eax, eax ; je 0x2f192
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002f173: RLP; test rax, rax ; mov rbp, rax ; je 0x2f192
read: rax rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
0002f18e: RLP; mov qword ptr [rbx + 0x10], rbp ; mov qword ptr [r13], rbp ; test r14d, r14d ; jne 0x2f2ec
read: r14d rbp rflags 
write: rflags 
--------------------------------------------------------------------------------
0002f1ca: RLP; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0002f1fc: RLP; lea rdi, [rax + 0x19] ; lea rbx, [rax + 1] ; call 0x1f3cc
read: rip rsp 
write: rbx rdi rsp 
--------------------------------------------------------------------------------
0002f20d: RLP; test rax, rax ; mov r15, rax ; je 0x2f3d6
read: rax rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
0002f22c: RLP; test r12, r12 ; je 0x2f3f9
read: r12 rflags 
write: rflags 
--------------------------------------------------------------------------------
0002f255: RLP; test eax, eax ; lea rdx, [rip + 0x10d70e] ; jne 0x2f3b2
read: eax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
0002f28a: RLP; test rax, rax ; je 0x2f415
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002f2b8: RLP; test eax, eax ; jns 0x2f2db
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002f2d4: RLP; test eax, eax ; jle 0x2f2e4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002f31d: RLP; jmp 0x2f085
read: 
write: 
--------------------------------------------------------------------------------
0002f34b: RLP; test rax, rax ; mov rbp, rax ; je 0x2f135
read: rax rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
0002f3be: RLP; test rax, rax ; mov rdx, rax ; jne 0x2f264
read: rax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
0002f3d6: RLP; test r12, r12 ; je 0x2f39c
read: r12 rflags 
write: rflags 
--------------------------------------------------------------------------------
0002f42e: RLP; jmp 0x2f3ca
read: 
write: 
--------------------------------------------------------------------------------
0002f46c: RLP; mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
read: rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
0002f4ac: RLP; mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
read: rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
0002f4d7: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0002f4f2: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0002f517: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0002f55f: RLP; cmp rax, 1 ; mov rsi, rbp ; sbb eax, eax ; not eax ; add eax, 2 ; cdqe ; mov rdi, qword ptr [rbx + rax*8 + 8] ; call 0x2f51c
read: eax rax rbp rflags rip rsp 
write: eax rax rdi rflags rsi rsp 
--------------------------------------------------------------------------------
0002f57d: RLP; mov rcx, rax ; add rsp, 8 ; mov rax, rcx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rax rcx rsp 
write: r12 r13 rax rbp rbx rcx rflags rsp 
--------------------------------------------------------------------------------
0002f5a1: RLP; mov r12d, dword ptr [rbx + 4] ; mov r13, rax ; cmp r12d, 0xf ; je 0x2f644
read: r12d rax rflags 
write: r12d r13 rflags 
--------------------------------------------------------------------------------
0002f5d3: RLP; xor ecx, ecx ; test rax, rax ; setne cl ; jmp 0x2f580
read: ecx rax rflags 
write: cl ecx rflags 
--------------------------------------------------------------------------------
0002f629: RLP; xor ecx, ecx ; test rax, rax ; sete cl ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; mov rax, rcx ; pop r13 ; ret
read: ecx rax rcx rflags rsp 
write: cl ecx r12 r13 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0002f670: RLP; cmp r12d, 0xa ; mov rsi, rax ; ja 0x2f604
read: r12d rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
0002f77b: RLP; test eax, eax ; jne 0x2f7ae
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002f78f: RLP; test eax, eax ; jne 0x2f7ae
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002f7a4: RLP; test eax, eax ; jne 0x2f7ae
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002f805: RLP; cmp rax, qword ptr [r13 + 0xc0] ; mov rdi, r12 ; cmovb rbx, rax ; add rbp, r12 ; jmp 0x2f834
read: r12 rax rbp rbx rflags 
write: rbp rbx rdi rflags 
--------------------------------------------------------------------------------
0002f82b: RLP; lea rdi, [rax + 1] ; cmp rdi, rbp ; jae 0x2f84c
read: rbp rdi rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
0002f8e3: RLP; mov rdi, rbx ; mov r12, rax ; mov dword ptr [rbp - 0x68], eax ; call 0x344fc
read: eax rax rbx rip rsp 
write: r12 rdi rsp 
--------------------------------------------------------------------------------
0002f8f5: RLP; mov ecx, dword ptr [r13 + 0x58] ; xor edx, edx ; mov r14d, eax ; mov r15, qword ptr [r13 + 0x60] ; div ecx ; lea esi, [rcx - 2] ; mov eax, r14d ; mov r9d, ecx ; mov ebx, edx ; xor edx, edx ; div esi ; mov eax, r12d ; mov qword ptr [rbp - 0x70], rax ; lea r14d, [rdx + 1] ; mov edx, dword ptr [r13 + 0x68]
read: eax ecx edx esi r12d r14d rax 
write: eax ebx ecx edx esi r14d r15 r9d rflags 
--------------------------------------------------------------------------------
0002f98b: RLP; mov r8d, dword ptr [rbp - 0x84] ; mov r9, qword ptr [rbp - 0x80] ; test eax, eax ; mov edx, dword ptr [rbp - 0x78] ; sete cl ; test cl, cl ; jne 0x2fa74
read: cl eax rflags 
write: cl edx r8d r9 rflags 
--------------------------------------------------------------------------------
0002fa51: RLP; add rsp, 0x80 ; nop dword ptr [rax] ; xor eax, eax ; lea rsp, [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: eax rsp 
write: eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0002fb3c: RLP; test eax, eax ; jne 0x2fb1c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002fbce: RLP; test eax, eax ; js 0x2fc14
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002fcad: RLP; jmp 0x2f8ad
read: 
write: 
--------------------------------------------------------------------------------
0002fcdf: RLP; mov qword ptr [rip + 0x33ae22], 0 ; mov qword ptr [rip + 0x33ae0f], 0 ; cmp dword ptr [rip + 0x33ea74], 0 ; je 0x2fd09
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
0002fd28: RLP; add rsp, 0x80 ; mov rax, -1 ; jmp 0x2fa5e
read: rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
0002fd9b: RLP; jmp 0x2fb4b
read: 
write: 
--------------------------------------------------------------------------------
0002fdc1: RLP; mov eax, dword ptr [rip + 0x33e9a5] ; mov dword ptr [rbp - 0x70], eax ; jmp 0x2faf7
read: eax 
write: eax 
--------------------------------------------------------------------------------
0002fe3c: RLP; test eax, eax ; jne 0x2fe1c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002fe73: RLP; jmp 0x2fb54
read: 
write: 
--------------------------------------------------------------------------------
0002feb2: RLP; add rsp, 0x80 ; mov rax, qword ptr [rbp - 0x60] ; xor r14d, r14d ; mov qword ptr [rbp - 0x80], r15 ; mov rdx, qword ptr [rip + 0x33ac39] ; mov r13, qword ptr [rbp - 0x68] ; mov r15d, r14d ; mov qword ptr [rbp - 0x48], rax ; mov rax, qword ptr [rip + 0x33ac2f] ; add rax, 8 ; mov qword ptr [rbp - 0x40], rax ; lea rax, [rbp - 0x38] ; mov qword ptr [rbp - 0x58], rax ; lea rax, [rbp - 0x40] ; mov qword ptr [rbp - 0x70], rax
read: r14d r15 rax rsp 
write: r13 r14d r15d rax rdx rflags rsp 
--------------------------------------------------------------------------------
0002ff38: RLP; test rax, rax ; je 0x2fcc8
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0002ff98: RLP; test eax, 0xfffffffb ; je 0x3026a
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0002ffd6: RLP; test rax, rax ; je 0x2fcdf
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00030010: RLP; test rax, rax ; mov rbx, rax ; je 0x30021
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
00030058: RLP; test rax, rax ; mov r14, rax ; je 0x304d3
read: rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
00030074: RLP; test rax, rax ; mov r12, rax ; je 0x304d3
read: rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
000300b4: RLP; cmp rax, -1 ; je 0x2fa5e
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000300da: RLP; test rax, rax ; je 0x30258
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0003014a: RLP; xor esi, esi ; mov byte ptr [rax], 0 ; mov r9, qword ptr [rbp - 0x70] ; mov rax, r12 ; jmp 0x3016c
read: esi r12 
write: esi r9 rax rflags 
--------------------------------------------------------------------------------
00030250: RLP; test eax, eax ; jne 0x30455
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000302e7: RLP; add rsp, 0x80 ; mov rax, qword ptr [rbx + 0x10] ; mov rax, qword ptr [rax + r15*8] ; jmp 0x2fb83
read: rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
0003031c: RLP; jmp 0x2fddd
read: 
write: 
--------------------------------------------------------------------------------
0003032d: RLP; lea r14, [rax + 1] ; mov rdi, r14 ; call 0x1f3cc
read: r14 rip rsp 
write: r14 rdi rsp 
--------------------------------------------------------------------------------
0003033d: RLP; test rax, rax ; mov r12, rax ; je 0x30357
read: rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
00030357: RLP; mov qword ptr [rip + 0x33a796], r12 ; jmp 0x30028
read: r12 
write: 
--------------------------------------------------------------------------------
00030400: RLP; add rsp, 0x80 ; cmp qword ptr [rbx + 0x10], 0 ; je 0x304a4
read: rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00030445: RLP; add rsp, 0x80 ; mov rax, qword ptr [rbx + 0x10] ; jmp 0x2fb6c
read: rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
00030484: RLP; mov rdi, r12 ; call 0x1f46c
read: r12 rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
00030490: RLP; xor eax, eax ; jmp 0x2fa5e
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
000304b9: RLP; test rax, rax ; mov qword ptr [rbx + 0x10], rax ; jne 0x2feb9
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00030501: RLP; or rax, 0xffffffffffffffff ; jmp 0x2fa5e
read: rax 
write: rax rflags 
--------------------------------------------------------------------------------
000305ce: RLP; mov rdi, rax ; mov rbx, rax ; call 0x856dc
read: rax rip rsp 
write: rbx rdi rsp 
--------------------------------------------------------------------------------
000305dd: RLP; lea rcx, [rax + 0x1f] ; lea rdx, [rax + 1] ; mov rsi, rbx ; and rcx, 0xfffffffffffffff0 ; sub rsp, rcx ; lea rdi, [rsp + 0xf] ; and rdi, 0xfffffffffffffff0 ; call 0x8e3dc
read: rbx rcx rdi rip rsp 
write: rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00030601: RLP; mov r9d, dword ptr [rip + 0x33e164] ; mov qword ptr [rbp - 0xe8], rax ; mov qword ptr [rbp - 0x60], rax ; test r9d, r9d ; jne 0x30b63
read: r9d rax rflags 
write: r9d rflags 
--------------------------------------------------------------------------------
00030637: RLP; mov r8d, dword ptr [rip + 0x33e12e] ; mov qword ptr [rbp - 0xc8], rax ; test r8d, r8d ; jne 0x30be0
read: r8d rax rflags 
write: r8d rflags 
--------------------------------------------------------------------------------
000306be: RLP; test eax, eax ; jne 0x3069c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000306f2: RLP; lea r13, [rax + 1] ; jmp 0x30718
read: 
write: r13 
--------------------------------------------------------------------------------
0003074f: RLP; test rax, rax ; je 0x306fc
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0003076d: RLP; lea rdi, [rax + 1] ; mov byte ptr [rax], 0x2f ; mov rsi, r12 ; call 0x8510c
read: r12 rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
00030780: RLP; movsxd rax, dword ptr [rbp - 0xac] ; lea rdx, [rip + 0xee3bb] ; lea rdi, [rip + 0x10424a] ; movzx r12d, byte ptr [rdx + rax] ; lea rax, [rip + 0xee3bb] ; add r12, rax ; call 0x3819c
read: r12 rax rip rsp 
write: r12 r12d rax rdi rdx rflags rsp 
--------------------------------------------------------------------------------
000307ad: RLP; test rax, rax ; mov r13, rax ; je 0x30b4c
read: rax rflags 
write: r13 rflags 
--------------------------------------------------------------------------------
000307d1: RLP; cmp byte ptr [rax], 0x43 ; mov r15, rax ; je 0x30c19
read: rax rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
000307f7: RLP; mov rdi, r12 ; mov r14, rax ; mov qword ptr [rbp - 0xf0], rax ; call 0x856dc
read: r12 rax rip rsp 
write: r14 rdi rsp 
--------------------------------------------------------------------------------
0003080d: RLP; lea rax, [r14 + rax + 0x23] ; mov rsi, r12 ; and rax, 0xfffffffffffffff0 ; sub rsp, rax ; lea rax, [rsp + 0xf] ; mov qword ptr [rbp - 0x90], rax ; and qword ptr [rbp - 0x90], 0xfffffffffffffff0 ; mov rdi, qword ptr [rbp - 0x90] ; call 0x898ec
read: r12 rax rip rsp 
write: rax rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00030840: RLP; mov edx, 0x2f ; lea rdi, [rax + 1] ; mov rsi, r13 ; mov word ptr [rax], dx ; mov rdx, r14 ; call 0x892cc
read: dx r13 r14 rip rsp 
write: edx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
0003085b: RLP; mov rdi, r15 ; mov dword ptr [rax], 0x6f6d2e ; call 0x856dc
read: r15 rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0003086d: RLP; add rax, 0x1f ; and rax, 0xfffffffffffffff0 ; sub rsp, rax ; lea rax, [rbp - 0x78] ; lea r12, [rsp + 0xf] ; mov qword ptr [rbp - 0xa0], rax ; and r12, 0xfffffffffffffff0 ; movzx eax, byte ptr [r15] ; cmp al, 0x3a ; je 0x30aac
read: al r12 rax rflags rsp 
write: eax r12 rax rflags rsp 
--------------------------------------------------------------------------------
000308ee: RLP; test rax, rax ; mov r14, rax ; je 0x3088c
read: rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
00030918: RLP; test rax, rax ; je 0x30abc
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000309bd: RLP; mov r11d, dword ptr [rip + 0x33dda8] ; test r11d, r11d ; je 0x30a25
read: r11d rflags 
write: r11d rflags 
--------------------------------------------------------------------------------
000309ea: RLP; jmp 0x30a25
read: 
write: 
--------------------------------------------------------------------------------
00030a84: RLP; test rax, rax ; jne 0x3088c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00030b14: RLP; cmp rax, -1 ; je 0x309ec
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00030b5b: RLP; mov r15, rax ; jmp 0x307e4
read: rax 
write: r15 
--------------------------------------------------------------------------------
00030b84: RLP; jmp 0x3061c
read: 
write: 
--------------------------------------------------------------------------------
00030baa: RLP; mov r10d, dword ptr [rip + 0x33dbbb] ; test r10d, r10d ; je 0x3058a
read: r10d rflags 
write: r10d rflags 
--------------------------------------------------------------------------------
00030bdb: RLP; jmp 0x3058a
read: 
write: 
--------------------------------------------------------------------------------
00030c01: RLP; jmp 0x3064e
read: 
write: 
--------------------------------------------------------------------------------
00030c81: RLP; mov eax, dword ptr [rip + 0x33dae5] ; test eax, eax ; je 0x309fa
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00030cb0: RLP; jmp 0x309fa
read: 
write: 
--------------------------------------------------------------------------------
00030cd5: RLP; jmp 0x30c4a
read: 
write: 
--------------------------------------------------------------------------------
00030cf5: RLP; mov r8, rax ; jmp 0x3098b
read: rax 
write: r8 
--------------------------------------------------------------------------------
00030d1c: RLP; mov r15, qword ptr [rbp - 0xe8] ; mov r8, qword ptr [rbp - 0x90] ; lea rbx, [rax + 1] ; mov edx, dword ptr [r15] ; add r15, 4 ; lea eax, [rdx - 0x1010101] ; not edx ; and eax, edx ; and eax, 0x80808080 ; je 0x30d2e
read: eax edx r15 rflags 
write: eax edx r15 r8 rbx rflags 
--------------------------------------------------------------------------------
00030d87: RLP; test rax, rax ; mov r12, rax ; mov r8, qword ptr [rbp - 0x90] ; je 0x3096b
read: rax rflags 
write: r12 r8 rflags 
--------------------------------------------------------------------------------
00030db1: RLP; mov rsi, qword ptr [rbp - 0xa8] ; mov rbx, rax ; mov rax, r14 ; add rax, 1 ; mov rdi, rbx ; mov r14, rax ; mov rdx, rax ; call 0x8e3dc
read: r14 rax rbx rip rsp 
write: r14 rax rbx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00030dd4: RLP; lea rcx, [rbx + r14] ; mov rsi, qword ptr [rbp - 0xe8] ; lea rdx, [r15 + 1] ; mov rdi, rcx ; call 0x8e3dc
read: rcx rip rsp 
write: rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
00030def: RLP; mov rcx, rax ; mov eax, dword ptr [rbp - 0xac] ; mov r15d, dword ptr [rip + 0x33d96d] ; mov r8, qword ptr [rbp - 0x90] ; mov qword ptr [r12], rbx ; mov qword ptr [r12 + 0x10], rcx ; mov qword ptr [r12 + 0x20], r13 ; mov dword ptr [r12 + 8], eax ; mov rax, qword ptr [rip + 0x3380dc] ; test r15d, r15d ; mov qword ptr [r12 + 0x28], r8 ; mov eax, dword ptr [rax] ; mov dword ptr [r12 + 0x18], eax ; mov rax, qword ptr [rbp - 0x78] ; mov qword ptr [r12 + 0x30], rax
read: eax r13 r15d r8 rax rbx rcx 
write: eax r15d r8 rax rcx rflags 
--------------------------------------------------------------------------------
00030e5f: RLP; mov r14d, dword ptr [rip + 0x33d906] ; mov rbx, rax ; mov r8, qword ptr [rbp - 0x88] ; test r14d, r14d ; jne 0x30ea2
read: r14d rax rflags 
write: r14d r8 rbx rflags 
--------------------------------------------------------------------------------
00030e96: RLP; mov r8, qword ptr [rbp - 0x88] ; jmp 0x3096b
read: 
write: r8 
--------------------------------------------------------------------------------
00030ec3: RLP; mov r8, qword ptr [rbp - 0x88] ; jmp 0x30e75
read: 
write: r8 
--------------------------------------------------------------------------------
00030ef4: RLP; mov r8, qword ptr [rbp - 0x88] ; jmp 0x30e3e
read: 
write: r8 
--------------------------------------------------------------------------------
00030f28: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00030f53: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00030f7e: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00030fc9: RLP; lea rdi, [rip + 0x339be4] ; lea rdx, [rax + 1] ; xor r9d, r9d ; xor ecx, ecx ; mov dword ptr [rsp + 0x20], 0 ; mov qword ptr [rsp + 0x18], r15 ; mov qword ptr [rsp + 0x10], 0 ; mov qword ptr [rsp + 8], 0 ; mov r8, r13 ; mov qword ptr [rsp], 0 ; mov rsi, r12 ; call 0x331cc
read: ecx r12 r13 r15 r9d rip rsp 
write: ecx r8 r9d rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0003100f: RLP; mov r10d, dword ptr [rip + 0x33d756] ; mov rbx, rax ; test r10d, r10d ; jne 0x3107c
read: r10d rax rflags 
write: r10d rbx rflags 
--------------------------------------------------------------------------------
00031075: RLP; jmp 0x30fbd
read: 
write: 
--------------------------------------------------------------------------------
0003109d: RLP; jmp 0x3101e
read: 
write: 
--------------------------------------------------------------------------------
000310fe: RLP; jmp 0x310c4
read: 
write: 
--------------------------------------------------------------------------------
00031110: RLP; test rax, rax ; mov rbx, rax ; je 0x3114b
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
00031124: RLP; lea rdx, [rax + 1] ; add rax, 0x1f ; mov rsi, rbx ; and rax, 0xfffffffffffffff0 ; sub rsp, rax ; lea rdi, [rsp + 0x37] ; and rdi, 0xfffffffffffffff0 ; call 0x8e3dc
read: rax rbx rdi rip rsp 
write: rax rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00031148: RLP; mov r13, rax ; lea rcx, [rbp - 0x48] ; lea rdx, [rbp - 0x50] ; lea rsi, [rbp - 0x58] ; lea r9, [rbp - 0x38] ; lea r8, [rbp - 0x40] ; mov rdi, r13 ; call 0x337bc
read: r13 rax rip rsp 
write: r13 r8 r9 rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
0003116b: RLP; cmp eax, -1 ; mov r13d, eax ; je 0x312d6
read: eax rflags 
write: r13d rflags 
--------------------------------------------------------------------------------
000311a2: RLP; mov rdi, r12 ; call 0x856dc
read: r12 rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000311ae: RLP; lea rdx, [rax + 1] ; mov rax, qword ptr [rbp - 0x50] ; mov r9, qword ptr [rbp - 0x48] ; mov r8, qword ptr [rbp - 0x58] ; lea rdi, [rip + 0x3399ef] ; mov ecx, r13d ; mov dword ptr [rsp + 0x20], 1 ; mov qword ptr [rsp + 0x18], r15 ; mov rsi, r12 ; mov qword ptr [rsp + 0x10], rax ; mov rax, qword ptr [rbp - 0x38] ; mov qword ptr [rsp + 8], rax ; mov rax, qword ptr [rbp - 0x40] ; mov qword ptr [rsp], rax ; call 0x331cc
read: r12 r13d r15 rax rip rsp 
write: ecx r8 r9 rax rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000311f7: RLP; mov ecx, dword ptr [rip + 0x33d56f] ; mov rbx, rax ; test ecx, ecx ; je 0x31225
read: ecx rax rflags 
write: ecx rbx rflags 
--------------------------------------------------------------------------------
00031225: RLP; test rbx, rbx ; je 0x3124b
read: rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
00031240: RLP; nop dword ptr [rax] ; cmp qword ptr [rbx + 0x10], 0 ; je 0x31290
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
0003125e: RLP; nop word ptr [rax + rax] ; lea rsp, [rbp - 0x28] ; mov rax, rbx ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: rbx rsp 
write: r12 r13 r14 r15 rax rbp rbx rsp 
--------------------------------------------------------------------------------
0003128b: RLP; jmp 0x31034
read: 
write: 
--------------------------------------------------------------------------------
000312d4: RLP; jmp 0x312a4
read: 
write: 
--------------------------------------------------------------------------------
0003135c: RLP; add rsp, 0x80 ; mov qword ptr [rip + 0x33985a], rdx ; mov eax, dword ptr [rip + 0x339850] ; mov r12d, dword ptr [rbx + 8] ; add eax, 1 ; test r12d, r12d ; mov dword ptr [rip + 0x339840], eax ; jne 0x3162b
read: eax r12d rdx rflags rsp 
write: eax r12d rflags rsp 
--------------------------------------------------------------------------------
000313ae: RLP; cmp eax, -1 ; mov r13d, eax ; je 0x3161e
read: eax rflags 
write: r13d rflags 
--------------------------------------------------------------------------------
000313d1: RLP; test eax, eax ; jne 0x316a3
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0003140f: RLP; cmp rax, -1 ; mov r15, rax ; je 0x320c5
read: rax rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
00031450: RLP; test rax, rax ; mov r13, rax ; je 0x3161e
read: rax rflags 
write: r13 rflags 
--------------------------------------------------------------------------------
000315e9: RLP; mov eax, dword ptr [rbp - 0xdc] ; test eax, eax ; je 0x3183c
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0003160a: RLP; mov rdi, r13 ; call 0x1f46c
read: r13 rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
00031616: RLP; mov qword ptr [rbx + 0x10], 0 ; mov eax, dword ptr [rip + 0x33959c] ; mov dword ptr [rbx + 8], 1 ; sub eax, 1 ; test eax, eax ; mov dword ptr [rip + 0x33958a], eax ; jne 0x3167d
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00031676: RLP; add rsp, 0x80 ; lea rsp, [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00031719: RLP; cmp rax, -1 ; je 0x315dc
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0003173d: RLP; jmp 0x3161e
read: 
write: 
--------------------------------------------------------------------------------
00031848: RLP; jmp 0x3160a
read: 
write: 
--------------------------------------------------------------------------------
0003197f: RLP; add r15, 8 ; add rbx, rax ; test r14d, r14d ; jne 0x3194c
read: r14d r15 rax rbx rflags 
write: r15 rbx rflags 
--------------------------------------------------------------------------------
00031a4b: RLP; test rax, rax ; mov qword ptr [rbp - 0x128], rax ; mov r9, qword ptr [rbp - 0xf0] ; je 0x315dc
read: rax rflags 
write: r9 rflags 
--------------------------------------------------------------------------------
00031d82: RLP; mov r8d, dword ptr [rbx + 0x58] ; xor edx, edx ; mov edi, eax ; div r8d ; lea r9d, [r8 - 2] ; mov eax, edi ; mov ecx, edx ; xor edx, edx ; div r9d ; lea edi, [rdx + 1] ; mov edx, r8d ; mov eax, edi ; sub edx, edi ; sub eax, r8d ; mov r8d, eax
read: eax edi edx r8d r9d 
write: eax ecx edi edx r8d r9d rflags 
--------------------------------------------------------------------------------
00031e8f: RLP; mov rbx, rax ; mov rdi, r12 ; mov rdx, rax ; mov rsi, r15 ; add r12, rbx ; call 0x8e3dc
read: r12 r15 rax rbx rip rsp 
write: r12 rbx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00031ea7: RLP; test r13d, r13d ; mov eax, dword ptr [r14] ; jne 0x31e61
read: r13d rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00031ed1: RLP; add qword ptr [rbp - 0x110], r15 ; jmp 0x31e6d
read: r15 
write: rflags 
--------------------------------------------------------------------------------
000320c0: RLP; jmp 0x3161e
read: 
write: 
--------------------------------------------------------------------------------
000320d8: RLP; test rax, rax ; mov r15, rax ; je 0x316a3
read: rax rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
000320fe: RLP; movsxd rcx, eax ; test rcx, rcx ; jle 0x3168c
read: eax rcx rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
00032646: RLP; jmp 0x3161e
read: 
write: 
--------------------------------------------------------------------------------
000329ba: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00032a0a: RLP; movabs rdi, 0x2e656c61636f6c2f ; mov edx, 0x73 ; lea rsi, [rip + 0x101ad4] ; mov qword ptr [rax], rdi ; mov dword ptr [rax + 8], 0x61696c61 ; mov rdi, rbx ; mov word ptr [rax + 0xc], dx ; call 0x6ca9c
read: dx rbx rdi rip rsp 
write: edx rdi rsi rsp 
--------------------------------------------------------------------------------
00032a3a: RLP; test rax, rax ; mov r15, rax ; je 0x32e4a
read: rax rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
00032a80: RLP; test rax, rax ; je 0x32c9b
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00032a9a: RLP; mov r12, rax ; mov rax, qword ptr [rip + 0x336358] ; movzx edx, byte ptr [rbp - 0x1c0] ; mov rax, qword ptr fs:[rax] ; movzx ecx, dl ; test byte ptr [rax + rcx*2 + 1], 0x20 ; mov rcx, r13 ; je 0x32acd
read: dl r13 rax rflags 
write: ecx edx r12 rax rcx rflags 
--------------------------------------------------------------------------------
00032ba1: RLP; lea rdx, [rax + 1] ; mov rdi, rbx ; mov qword ptr [rbp - 0x1d0], rdx ; call 0x856dc
read: rbx rdx rip rsp 
write: rdi rdx rsp 
--------------------------------------------------------------------------------
00032bb8: RLP; mov rdx, qword ptr [rbp - 0x1d0] ; mov r11, qword ptr [rip + 0x33801e] ; lea r9, [rax + 1] ; mov rcx, qword ptr [rbp - 0x1e0] ; lea rax, [rdx + r11] ; mov qword ptr [rbp - 0x1d0], rax ; add rax, r9 ; mov rdi, rax ; mov qword ptr [rbp - 0x1d8], rax ; mov rax, qword ptr [rip + 0x337fec] ; cmp rdi, rax ; ja 0x32d0c
read: r9 rax rdi rflags 
write: r11 r9 rax rcx rdi rdx rflags 
--------------------------------------------------------------------------------
00032c33: RLP; mov rdi, qword ptr [rbp - 0x1d0] ; mov r10, qword ptr [rbp - 0x1e0] ; mov rsi, rbx ; mov r9, qword ptr [rbp - 0x1e8] ; mov qword ptr [r14], rax ; add rdi, r10 ; mov rdx, r9 ; call 0x8e3dc
read: r10 r9 rax rbx rdi rip rsp 
write: r10 r9 rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00032c5d: RLP; mov qword ptr [r14 + 8], rax ; mov rax, qword ptr [rbp - 0x1c8] ; mov rdi, qword ptr [rbp - 0x1d8] ; add qword ptr [rbp - 0x1f0], 1 ; add rax, 1 ; mov qword ptr [rip + 0x337f62], rdi ; mov qword ptr [rip + 0x337f4b], rax ; nop dword ptr [rax] ; test r12, r12 ; je 0x32ce2
read: r12 rax rdi rflags 
write: rax rdi rflags 
--------------------------------------------------------------------------------
00032ca7: RLP; xor eax, eax ; cmp qword ptr [rbp - 0x1f0], 0 ; jne 0x32e05
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00032cdd: RLP; test rax, rax ; jne 0x32c91
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00032cf6: RLP; test rax, rax ; jne 0x32ccc
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00032d5c: RLP; test rax, rax ; je 0x32c9b
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00032dd5: RLP; test rax, rax ; je 0x32c9b
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00032e28: RLP; mov rax, qword ptr [rbp - 0x1f0] ; lea rsp, [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: rsp 
write: r12 r13 r14 r15 rax rbp rbx rsp 
--------------------------------------------------------------------------------
00032e4a: RLP; lea rsp, [rbp - 0x28] ; xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: eax rsp 
write: eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00032eef: RLP; add rsp, 0x80 ; lea rbx, [rsp + 0x10] ; mov rbp, qword ptr [rip + 0x337cd2] ; mov rax, qword ptr [rsp + 8] ; test rbp, rbp ; mov qword ptr [rsp + 0x10], rax ; je 0x32f61
read: rax rbp rflags rsp 
write: rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00032f55: RLP; test eax, eax ; jns 0x32f24
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0003300a: RLP; add rsp, 0x80 ; add rsp, 0x28 ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rdx rsp 
write: r12 r13 r14 r15 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00033043: RLP; test rax, rax ; je 0x32f61
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000330d4: RLP; mov eax, dword ptr [rip + 0x33b692] ; test eax, eax ; jne 0x3315c
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000330ff: RLP; test eax, eax ; je 0x3309c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00033112: RLP; test eax, eax ; jne 0x3318c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0003314d: RLP; jmp 0x33090
read: 
write: 
--------------------------------------------------------------------------------
0003317d: RLP; add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
read: rbx rsp 
write: rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00033198: RLP; test rax, rax ; mov rbx, rax ; je 0x330d4
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
00033210: RLP; mov r15, rax ; mov eax, r12d ; and eax, 4 ; mov dword ptr [rsp + 0x60], eax ; je 0x33231
read: eax r12d rax rflags 
write: eax r15 rflags 
--------------------------------------------------------------------------------
0003322d: RLP; lea rbx, [rax + 1] ; mov eax, r12d ; xor r13d, r13d ; and eax, 2 ; mov dword ptr [rsp + 0x64], eax ; je 0x33255
read: eax r12d r13d rflags 
write: eax r13d rbx rflags 
--------------------------------------------------------------------------------
00033251: RLP; lea r13, [rax + 1] ; mov eax, r12d ; xor ebp, ebp ; and eax, 1 ; mov dword ptr [rsp + 0x68], eax ; je 0x33278
read: eax ebp r12d rflags 
write: eax ebp r13 rflags 
--------------------------------------------------------------------------------
00033274: RLP; lea rbp, [rax + 1] ; mov eax, r12d ; xor edx, edx ; and eax, 8 ; mov dword ptr [rsp + 0x6c], eax ; je 0x3329b
read: eax edx r12d rflags 
write: eax edx rbp rflags 
--------------------------------------------------------------------------------
00033297: RLP; lea rdx, [rax + 1] ; mov rdi, r14 ; mov qword ptr [rsp + 0x58], rdx ; call 0x856dc
read: r14 rdx rip rsp 
write: rdi rdx rsp 
--------------------------------------------------------------------------------
000332ac: RLP; mov rcx, qword ptr [rsp + 0x48] ; mov rdx, qword ptr [rsp + 0x58] ; lea rcx, [rcx + r15 + 2] ; add rbx, rcx ; add rbx, r13 ; add rbp, rbx ; add rdx, rbp ; lea rdi, [rdx + rax] ; call 0x1f3cc
read: r13 rbp rbx rcx rdx rip rsp 
write: rbp rbx rcx rdi rdx rflags rsp 
--------------------------------------------------------------------------------
000332d4: RLP; test rax, rax ; mov rbx, rax ; je 0x33665
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000332f9: RLP; mov edx, 0x3a ; mov rsi, r15 ; mov rdi, rbx ; call 0x90b9c
read: r15 rbx rip rsp 
write: edx rdi rsi rsp 
--------------------------------------------------------------------------------
0003330d: RLP; lea rax, [rbx + r15 - 1] ; mov rsi, qword ptr [rsp + 0x38] ; lea rdi, [rax + 1] ; mov byte ptr [rax], 0x2f ; call 0x898ec
read: rip rsp 
write: rax rdi rsi rsp 
--------------------------------------------------------------------------------
00033327: RLP; mov edi, dword ptr [rsp + 0x60] ; test edi, edi ; jne 0x3361d
read: edi rflags 
write: edi rflags 
--------------------------------------------------------------------------------
0003336c: RLP; mov rax, qword ptr [rsp + 0x30] ; mov r13, qword ptr [rax] ; test r13, r13 ; je 0x333aa
read: r13 rflags 
write: r13 rax rflags 
--------------------------------------------------------------------------------
00033391: RLP; test eax, eax ; je 0x335a8
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000333cc: RLP; mov edx, r12d ; mov ecx, r12d ; mov esi, 1 ; and edx, 0xffffaaaa ; and ecx, 0x5555 ; sar edx, 1 ; add ecx, edx ; mov edx, ecx ; and ecx, 0x3333 ; and edx, 0xffffcccc ; sar edx, 2 ; add edx, ecx ; mov ecx, edx ; sar ecx, 4 ; add edx, ecx
read: ecx edx r12d 
write: ecx edx esi rflags 
--------------------------------------------------------------------------------
00033428: RLP; test rax, rax ; mov r13, rax ; je 0x3366c
read: rax rflags 
write: r13 rflags 
--------------------------------------------------------------------------------
0003344a: RLP; cmp rax, 1 ; mov edx, 1 ; je 0x33637
read: rax rflags 
write: edx rflags 
--------------------------------------------------------------------------------
00033493: RLP; cmp rax, 1 ; sete al ; movzx eax, al ; sub ebp, eax ; js 0x3365e
read: al eax ebp rax rflags 
write: al eax ebp rflags 
--------------------------------------------------------------------------------
0003350f: RLP; lea r15, [rax + 1] ; cmp r12, r15 ; jbe 0x334bc
read: r12 r15 rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
0003352d: RLP; lea rdx, [rax + 1] ; mov rax, qword ptr [rsp + 0xc0] ; mov r9, qword ptr [rsp + 0x40] ; mov r8, qword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; mov ecx, ebp ; mov dword ptr [rsp + 0x20], 1 ; mov qword ptr [rsp + 0x18], r14 ; mov rsi, r15 ; mov qword ptr [rsp + 0x10], rax ; mov rax, qword ptr [rsp + 0xb8] ; mov qword ptr [rsp + 8], rax ; mov rax, qword ptr [rsp + 0xb0] ; mov qword ptr [rsp], rax ; call 0x331cc
read: ebp r14 r15 rax rip rsp 
write: ecx r8 r9 rax rdi rdx rsi rsp 
--------------------------------------------------------------------------------
00033581: RLP; mov qword ptr [r13 + rbx*8 + 0x18], rax ; test r15, r15 ; jne 0x334fc
read: r15 rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000335b4: RLP; add rsp, 0x78 ; mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: r13 rsp 
write: r12 r13 r14 r15 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000335de: RLP; jmp 0x33357
read: 
write: 
--------------------------------------------------------------------------------
000335fb: RLP; jmp 0x3334b
read: 
write: 
--------------------------------------------------------------------------------
00033618: RLP; jmp 0x3333f
read: 
write: 
--------------------------------------------------------------------------------
00033632: RLP; jmp 0x33333
read: 
write: 
--------------------------------------------------------------------------------
00033678: RLP; xor eax, eax ; jmp 0x334e5
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
000336fd: RLP; test rax, rax ; mov r8, rax ; je 0x3375c
read: rax rflags 
write: r8 rflags 
--------------------------------------------------------------------------------
00033781: RLP; test rax, rax ; mov rsi, qword ptr [rsp + 8] ; je 0x3375c
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
00033992: RLP; mov r9, qword ptr [rsp] ; test rax, rax ; mov r14, rax ; mov qword ptr [r9], rax ; je 0x33a6f
read: rax rflags 
write: r14 r9 rflags 
--------------------------------------------------------------------------------
000339bd: RLP; test eax, eax ; mov r8, qword ptr [rsp] ; mov rdx, qword ptr [rsp + 8] ; mov rcx, qword ptr [rsp + 0x10] ; je 0x33a31
read: eax rflags 
write: r8 rcx rdx rflags 
--------------------------------------------------------------------------------
000339ff: RLP; mov rdx, qword ptr [rsp] ; mov rbx, rax ; movzx esi, byte ptr [rax] ; mov rcx, qword ptr [rsp + 8] ; mov r8, qword ptr [rsp + 0x10] ; jmp 0x3385a
read: rax 
write: esi r8 rbx rcx rdx 
--------------------------------------------------------------------------------
00033a4e: RLP; movzx esi, byte ptr [r12 + 1] ; mov rdx, qword ptr [rsp] ; mov rcx, qword ptr [rsp + 8] ; mov r8, qword ptr [rsp + 0x10] ; jmp 0x3385a
read: 
write: esi r8 rcx rdx 
--------------------------------------------------------------------------------
00033aa6: RLP; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
00033ab9: RLP; mov rdi, qword ptr [rbx + 0x10] ; call 0x33a7c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
00033ac6: RLP; mov rdi, qword ptr [rbx + 8] ; call 0x33a7c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
00033ad3: RLP; jmp 0x33a9a
read: 
write: 
--------------------------------------------------------------------------------
00033b46: RLP; test rax, rax ; mov rcx, rax ; mov esi, dword ptr [rsp + 4] ; mov rdx, qword ptr [rsp + 8] ; je 0x33b84
read: rax rflags 
write: esi rcx rdx rflags 
--------------------------------------------------------------------------------
00033bad: RLP; sub ebx, 1 ; jns 0x33b9c
read: ebx rflags 
write: ebx rflags 
--------------------------------------------------------------------------------
00033beb: RLP; test rax, rax ; mov rcx, rax ; mov esi, dword ptr [rsp + 4] ; mov rdx, qword ptr [rsp + 8] ; jne 0x33b57
read: rax rflags 
write: esi rcx rdx rflags 
--------------------------------------------------------------------------------
00033cb7: RLP; test rax, rax ; mov rbx, rax ; je 0x34383
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
00033cdd: RLP; lea r10, [rbx + r15*2] ; mov rsi, qword ptr [rsp + 8] ; lea rax, [r15 + r15] ; mov rdx, r12 ; mov rdi, r10 ; mov qword ptr [rsp + 0x20], rax ; call 0x8e3dc
read: r10 r12 rax rip rsp 
write: r10 rax rdi rdx rsi rsp 
--------------------------------------------------------------------------------
00033cfe: RLP; cmp r14, qword ptr [rsp + 0x10] ; mov r10, rax ; je 0x33d1e
read: r14 rax rflags 
write: r10 rflags 
--------------------------------------------------------------------------------
00033d19: RLP; mov r10, qword ptr [rsp + 8] ; mov rax, qword ptr [rsp + 0x20] ; lea r13, [rbx + r13 - 2] ; lea r12, [r10 + r12 - 8] ; lea rax, [rbx + rax - 2] ; cmp r13, rax ; jae 0x34394
read: r13 rax rflags 
write: r10 r12 r13 rax rflags 
--------------------------------------------------------------------------------
00033f24: RLP; add rsp, 0x838 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: ebx rsp 
write: eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00033f6b: RLP; jmp 0x33e1c
read: 
write: 
--------------------------------------------------------------------------------
00034051: RLP; jmp 0x33e1c
read: 
write: 
--------------------------------------------------------------------------------
0003408f: RLP; jmp 0x33e1c
read: 
write: 
--------------------------------------------------------------------------------
000340c3: RLP; jmp 0x33e1c
read: 
write: 
--------------------------------------------------------------------------------
000340f7: RLP; jmp 0x33e1c
read: 
write: 
--------------------------------------------------------------------------------
00034120: RLP; test rax, rax ; je 0x33e1c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0003415b: RLP; jmp 0x33e1c
read: 
write: 
--------------------------------------------------------------------------------
00034428: RLP; lea rsi, [rip + 0x1005e8] ; mov rdi, rbx ; mov r13, rax ; call 0x8817c
read: rax rbx rip rsp 
write: r13 rdi rsi rsp 
--------------------------------------------------------------------------------
0003443e: RLP; test rax, rax ; je 0x34484
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000344ca: RLP; cmp rbx, qword ptr [rsp + 8] ; je 0x34484
read: rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
000344ec: RLP; test eax, eax ; jne 0x34484
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00034564: RLP; test rax, rax ; je 0x345dc
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00034577: RLP; test rax, rax ; mov rbx, rax ; mov rdi, -1 ; je 0x345a2
read: rax rflags 
write: rbx rdi rflags 
--------------------------------------------------------------------------------
0003459b: RLP; test eax, eax ; mov rdi, rbx ; jne 0x345bc
read: eax rbx rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
000345c5: RLP; lea rsp, [rbp - 0x20] ; mov rdi, -1 ; mov rax, rdi ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
read: rdi rsp 
write: r12 r13 r14 rax rbp rbx rdi rsp 
--------------------------------------------------------------------------------
000345f5: RLP; mov r13, rax ; test r13, r13 ; je 0x3475c
read: r13 rax rflags 
write: r13 rflags 
--------------------------------------------------------------------------------
00034634: RLP; test rax, rax ; mov rbx, rax ; je 0x34569
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
00034655: RLP; add rax, 0x98 ; mov rsi, rbx ; and rax, 0xfffffffffffffff0 ; sub rsp, rax ; lea r14, [rsp + 0xf] ; and r14, 0xfffffffffffffff0 ; mov rdi, r14 ; call 0x898ec
read: r14 rax rbx rip rsp 
write: r14 rax rdi rflags rsi rsp 
--------------------------------------------------------------------------------
0003467a: RLP; movabs rcx, 0x6168732f7273752f ; lea rdx, [rax + 1] ; mov byte ptr [rax], 0x3a ; mov qword ptr [rax + 1], rcx ; movabs rax, 0x6c61636f6c2f6572 ; mov qword ptr [rdx + 8], rax ; movabs rax, 0x3a4e252f4c252f65 ; mov qword ptr [rdx + 0x18], rcx ; mov qword ptr [rdx + 0x10], rax ; movabs rax, 0x6c61636f6c2f6572 ; mov byte ptr [rdx + 0x78], 0 ; mov qword ptr [rdx + 0x20], rax ; movabs rax, 0x5f434c2f4c252f65 ; mov qword ptr [rdx + 0x28], rax ; movabs rax, 0x534547415353454d
read: rax rcx 
write: rax rcx rdx 
--------------------------------------------------------------------------------
0003477d: RLP; test rax, rax ; lea rax, [rip + 0x101929] ; cmovne r13, rax ; jmp 0x3461d
read: r13 rax rflags 
write: r13 rax rflags 
--------------------------------------------------------------------------------
000347a4: RLP; mov r13, rax ; jmp 0x345f8
read: rax 
write: r13 
--------------------------------------------------------------------------------
00034862: RLP; mov rdi, rbx ; call 0x1f46c
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0003486e: RLP; xor eax, eax ; pop rbx ; ret
read: eax rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
0003488d: RLP; jmp 0x34862
read: 
write: 
--------------------------------------------------------------------------------
000348ea: RLP; test rax, rax ; je 0x3498d
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00034907: RLP; mov dword ptr [rbp - 0xd4], eax ; mov esi, dword ptr [rbp - 0xd4] ; movsxd rbx, esi ; test rbx, rbx ; js 0x34e43
read: eax esi rbx rflags 
write: esi rbx rflags 
--------------------------------------------------------------------------------
00034934: RLP; test eax, eax ; js 0x34e18
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00034a3a: RLP; cmp rax, r14 ; mov rcx, rax ; mov rbx, rax ; jae 0x34eef
read: r14 rax rflags 
write: rbx rcx rflags 
--------------------------------------------------------------------------------
00034a62: RLP; jmp 0x349f8
read: 
write: 
--------------------------------------------------------------------------------
00034af8: RLP; lea r10, [rax + rbx] ; mov rcx, rax ; cmp r14, r10 ; jbe 0x35015
read: r10 r14 rax rflags 
write: r10 rcx rflags 
--------------------------------------------------------------------------------
00034b26: RLP; mov r10, qword ptr [rbp - 0xe0] ; movzx eax, byte ptr [r12 + 2] ; mov r12, r13 ; mov rbx, r10 ; jmp 0x349c6
read: r10 r13 
write: eax r10 r12 rbx 
--------------------------------------------------------------------------------
00034c74: RLP; lea r10, [rax + rbx] ; mov rcx, rax ; cmp r14, r10 ; jbe 0x35151
read: r10 r14 rax rflags 
write: r10 rcx rflags 
--------------------------------------------------------------------------------
00034cb4: RLP; test eax, eax ; mov dword ptr [rbp - 0xd4], eax ; js 0x34a13
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00034d38: RLP; cmp rax, -1 ; mov qword ptr [r14 + 0x28], rax ; je 0x34f75
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00034e18: RLP; mov edx, 0xffffffff ; jmp 0x34972
read: 
write: edx 
--------------------------------------------------------------------------------
00034e2f: RLP; mov edx, 0xffffffff ; jmp 0x34972
read: 
write: edx 
--------------------------------------------------------------------------------
00034e84: RLP; mov r10, rax ; movzx eax, byte ptr [r12] ; mov r15, r10 ; jmp 0x349e3
read: r10 rax 
write: eax r10 r15 
--------------------------------------------------------------------------------
00034ed9: RLP; mov r10, qword ptr [rbp - 0xf0] ; mov r15, rax ; mov rcx, qword ptr [rbp - 0xe0] ; jmp 0x34b6c
read: rax 
write: r10 r15 rcx 
--------------------------------------------------------------------------------
00034f5f: RLP; mov r10, qword ptr [rbp - 0xf0] ; mov r15, rax ; mov rcx, qword ptr [rbp - 0xe0] ; jmp 0x34cec
read: rax 
write: r10 r15 rcx 
--------------------------------------------------------------------------------
00034f88: RLP; mov rdx, qword ptr [rbp - 0xe8] ; test rax, rax ; mov qword ptr [rdx + 0x28], rax ; je 0x34e18
read: rax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
00034fb8: RLP; cdqe ; lea rdx, [rax - 1] ; cmp rdx, -3 ; jbe 0x34ff5
read: eax rdx rflags 
write: rax rdx rflags 
--------------------------------------------------------------------------------
00034feb: RLP; mov edx, 0xffffffff ; jmp 0x34972
read: 
write: edx 
--------------------------------------------------------------------------------
0003505b: RLP; mov r10, qword ptr [rbp - 0xf0] ; mov r15, rax ; mov rcx, qword ptr [rbp - 0xe0] ; jmp 0x34b08
read: rax 
write: r10 r15 rcx 
--------------------------------------------------------------------------------
000350af: RLP; mov rcx, qword ptr [rbp - 0xe0] ; mov r15, rax ; jmp 0x34ba1
read: rax 
write: r15 rcx 
--------------------------------------------------------------------------------
0003513b: RLP; mov r10, qword ptr [rbp - 0xf0] ; mov r15, rax ; mov rcx, qword ptr [rbp - 0xe0] ; jmp 0x34c3c
read: rax 
write: r10 r15 rcx 
--------------------------------------------------------------------------------
00035197: RLP; mov r10, qword ptr [rbp - 0xf0] ; mov r15, rax ; mov rcx, qword ptr [rbp - 0xe0] ; jmp 0x34c84
read: rax 
write: r10 r15 rcx 
--------------------------------------------------------------------------------
000351e4: RLP; mov r15, rax ; jmp 0x34a05
read: rax 
write: r15 
--------------------------------------------------------------------------------
00035571: RLP; movabs rdx, 0x7fffffffffffffff ; movq rax, xmm0 ; and rax, rdx ; movabs rdx, 0x7fefffffffffffff ; cmp rax, rdx ; ja 0x3559e
read: rax rdx rflags xmm0 
write: rax rdx rflags 
--------------------------------------------------------------------------------
00035858: RLP; movd eax, xmm0 ; and eax, 0x7fffffff ; cmp eax, 0x7f7fffff ; ja 0x35872
read: eax rflags xmm0 
write: eax rflags 
--------------------------------------------------------------------------------
00035b6d: RLP; test eax, eax ; fld xword ptr [rsp + 0x10] ; fld st(0) ; je 0x35b8c
read: eax rflags st0 
write: fpsw rflags 
--------------------------------------------------------------------------------
00035bac: RLP; fld st(0) ; fstp xword ptr [rsp] ; fstp xword ptr [rsp + 0x10] ; call 0x3592c
read: rip rsp st0 
write: fpsw rsp 
--------------------------------------------------------------------------------
00035bbe: RLP; test eax, eax ; fld xword ptr [rsp + 0x10] ; je 0x35bd2
read: eax rflags 
write: fpsw rflags 
--------------------------------------------------------------------------------
00035cbb: RLP; test eax, eax ; sete al ; movzx eax, al ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
read: al eax rflags rsp 
write: al eax rbx rflags rsp 
--------------------------------------------------------------------------------
00035d04: RLP; mov eax, dword ptr [rbx + 0x40] ; test eax, eax ; jne 0x35d1d
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00035d31: RLP; jmp 0x35d0b
read: 
write: 
--------------------------------------------------------------------------------
00035dcd: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00035e4e: RLP; mov edx, eax ; mov rax, -1 ; test edx, edx ; cmovns rax, qword ptr [rsp + 0xa0] ; add rsp, 0x148 ; ret
read: eax edx rax rflags rsp 
write: edx rax rflags rsp 
--------------------------------------------------------------------------------
00035f23: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00036195: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00036282: RLP; mov esi, 8 ; mov r8d, eax ; mov rdi, qword ptr [rsp + 8] ; mov eax, 0x82 ; syscall ; cmp rax, -0x1000 ; ja 0x362b7
read: eax rax rflags 
write: eax esi r8d rdi rflags 
--------------------------------------------------------------------------------
000362ae: RLP; mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
read: rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
000363b9: RLP; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000363d2: RLP; mov rsi, qword ptr [rsp + 8] ; mov rdi, qword ptr [rsp] ; mov ebx, eax ; call 0x362fc
read: eax rip rsp 
write: ebx rdi rsi rsp 
--------------------------------------------------------------------------------
000363e6: RLP; mov edi, ebx ; mov ebp, eax ; call 0xf081c
read: eax ebx rip rsp 
write: ebp edi rsp 
--------------------------------------------------------------------------------
000363f3: RLP; mov eax, ebp ; jmp 0x363b9
read: ebp 
write: eax 
--------------------------------------------------------------------------------
00036448: RLP; test eax, eax ; js 0x3645b
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000364bb: RLP; test eax, eax ; js 0x364ce
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00036529: RLP; add rsp, 0x88 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0003654c: RLP; test eax, eax ; mov rbx, rsp ; js 0x36565
read: eax rflags rsp 
write: rbx rflags 
--------------------------------------------------------------------------------
00036561: RLP; test eax, eax ; jns 0x3651d
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00036589: RLP; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000365a1: RLP; mov esi, dword ptr [rsp + 0xc] ; mov edi, dword ptr [rsp + 8] ; mov ebx, eax ; call 0x364dc
read: eax rip rsp 
write: ebx edi esi rsp 
--------------------------------------------------------------------------------
000365b4: RLP; mov edi, ebx ; mov ebp, eax ; call 0xf081c
read: eax ebx rip rsp 
write: ebp edi rsp 
--------------------------------------------------------------------------------
000365c1: RLP; mov eax, ebp ; jmp 0x36589
read: ebp 
write: eax 
--------------------------------------------------------------------------------
000365df: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00036602: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000366a9: RLP; test eax, eax ; js 0x36700
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00036751: RLP; test eax, eax ; jne 0x3676c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000367e1: RLP; test eax, eax ; js 0x3686c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00036829: RLP; sar eax, 0x1f ; add rsp, 0xa0 ; pop rbx ; pop rbp ; pop r12 ; ret
read: eax rsp 
write: eax r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00036b5f: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00036bc0: RLP; mov edx, eax ; mov rax, -1 ; test edx, edx ; cmovns rax, qword ptr [rsp + 0xa0] ; add rsp, 0x148 ; ret
read: eax edx rax rflags rsp 
write: edx rax rflags rsp 
--------------------------------------------------------------------------------
00036e19: RLP; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00036e38: RLP; mov rdx, qword ptr [rsp + 0x18] ; mov rsi, qword ptr [rsp + 0x10] ; mov ebx, eax ; mov rdi, qword ptr [rsp + 8] ; call 0x36d5c
read: eax rip rsp 
write: ebx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
00036e52: RLP; mov edi, ebx ; mov ebp, eax ; call 0xf081c
read: eax ebx rip rsp 
write: ebp edi rsp 
--------------------------------------------------------------------------------
00036e5f: RLP; mov eax, ebp ; jmp 0x36e19
read: ebp 
write: eax 
--------------------------------------------------------------------------------
00036f29: RLP; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00036f42: RLP; mov rsi, qword ptr [rsp + 8] ; mov rdi, qword ptr [rsp] ; mov ebx, eax ; call 0x36e6c
read: eax rip rsp 
write: ebx rdi rsi rsp 
--------------------------------------------------------------------------------
00036f56: RLP; mov edi, ebx ; mov ebp, eax ; call 0xf081c
read: eax ebx rip rsp 
write: ebp edi rsp 
--------------------------------------------------------------------------------
00036f63: RLP; mov eax, ebp ; jmp 0x36f29
read: ebp 
write: eax 
--------------------------------------------------------------------------------
00036fa6: RLP; mov dword ptr [rsp + 0x10], eax ; call 0xb3dbc
read: eax rip rsp 
write: rsp 
--------------------------------------------------------------------------------
00036fb3: RLP; mov qword ptr [rsp + 0x18], r13 ; mov dword ptr [rsp + 0x14], eax ; mov rdx, rsp ; movsxd rsi, ebp ; movsxd rdi, r12d ; mov eax, 0x81 ; syscall ; cmp rax, -0x1000 ; ja 0x36fe2
read: eax ebp r12d r13 rax rflags rsp 
write: eax rdi rdx rflags rsi 
--------------------------------------------------------------------------------
0003701e: RLP; test eax, eax ; js 0x37054
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00037030: RLP; test eax, eax ; js 0x37054
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00037047: RLP; add rsp, 0x88 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0003707e: RLP; test eax, eax ; js 0x370b4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00037090: RLP; test eax, eax ; js 0x370b4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000370a7: RLP; add rsp, 0x88 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00037100: RLP; add rsp, 0xa8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00037180: RLP; test eax, eax ; js 0x371e2
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000371b9: RLP; test eax, eax ; js 0x371e2
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00037235: RLP; test eax, eax ; js 0x371e2
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00037261: RLP; test eax, eax ; jns 0x371c7
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0003728f: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000372b4: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000372d4: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000372f4: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00037355: RLP; add rsp, 0x80 ; mov qword ptr [rip + 0x3338b1], rdx ; mov eax, dword ptr [rip + 0x3338b3] ; add dword ptr [rip + 0x3338a0], 1 ; test eax, eax ; je 0x373b7
read: eax rdx rflags rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
000373e9: RLP; mov eax, dword ptr [rip + 0x33382d] ; cmp eax, 1 ; jne 0x37379
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00037409: RLP; mov eax, dword ptr [rip + 0x33380d] ; cmp eax, 2 ; jne 0x37382
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00037469: RLP; add rsp, 0x80 ; mov edi, 6 ; call 0x35e8c
read: rip rsp 
write: edi rflags rsp 
--------------------------------------------------------------------------------
0003747e: RLP; mov rdx, qword ptr fs:[0x10] ; cmp rdx, qword ptr [rip + 0x333786] ; je 0x374da
read: rdx rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
000374cc: RLP; add rsp, 0x80 ; mov qword ptr [rip + 0x33373a], rdx ; add dword ptr [rip + 0x33372f], 1 ; lea rdx, [rsp + 0x80] ; mov ecx, 0x13 ; xor eax, eax ; mov dword ptr [rip + 0x333722], 4 ; mov rdi, rdx ; lea rsi, [rdx + 0x80] ; rep stosq qword ptr [rdi], rax ; mov qword ptr [rsi], -1 ; sub rsi, 8 ; cmp rsi, rdx ; jne 0x37507
read: eax rax rcx rdi rdx rflags rsi rsp 
write: eax ecx rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00037527: RLP; mov eax, dword ptr [rip + 0x3336ef] ; cmp eax, 4 ; jne 0x37394
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00037549: RLP; mov eax, dword ptr [rip + 0x3336cd] ; cmp eax, 5 ; jne 0x3739d
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00037570: RLP; mov eax, dword ptr [rip + 0x3336a6] ; cmp eax, 6 ; jne 0x373a6
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000375f8: RLP; test eax, eax ; jns 0x375cc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000376fa: RLP; test eax, eax ; js 0x37a6e
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00037713: RLP; test eax, eax ; js 0x379fe
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00037743: RLP; test eax, eax ; jns 0x3774f
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0003775e: RLP; test eax, eax ; js 0x3774c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0003787b: RLP; test eax, eax ; cmovs r14, r13 ; add r13, rbx ; cmp r15, r13 ; jae 0x3786c
read: eax r13 r14 r15 rbx rflags 
write: r13 r14 rflags 
--------------------------------------------------------------------------------
000378fe: RLP; test eax, eax ; js 0x378ec
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00037a3f: RLP; test eax, eax ; jns 0x3771b
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00037b16: RLP; cmp rbx, 1 ; jbe 0x37b30
read: rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
00037b30: RLP; mov rax, qword ptr [rsp + 0x18] ; mov rcx, qword ptr [rax] ; mov r15, qword ptr [rax + 0x20] ; mov r13, qword ptr [rax + 0x10] ; mov qword ptr [rsp + 8], rcx ; mov rcx, qword ptr [rax + 0x18] ; mov rax, qword ptr [rax + 8] ; mov qword ptr [rsp], rcx ; cmp rax, 1 ; je 0x37da6
read: rax rcx rflags 
write: r13 r15 rax rcx rflags 
--------------------------------------------------------------------------------
00037bc3: RLP; test eax, eax ; jg 0x37b94
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00037c12: RLP; add rsp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00037c55: RLP; test eax, eax ; mov r9, qword ptr [rsp + 0x10] ; jle 0x37c9c
read: eax rflags 
write: r9 rflags 
--------------------------------------------------------------------------------
00037ccc: RLP; jmp 0x37bed
read: 
write: 
--------------------------------------------------------------------------------
00037cf9: RLP; test eax, eax ; mov rdx, qword ptr [rsp + 8] ; jle 0x37d2c
read: eax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
00037d15: RLP; add r14, qword ptr [rsp + 8] ; test rbx, rbx ; mov r15, rax ; jne 0x37cdf
read: r14 rax rbx rflags 
write: r14 r15 rflags 
--------------------------------------------------------------------------------
00037d3f: RLP; add r12, qword ptr [rsp + 8] ; mov r15, rax ; jmp 0x37cd6
read: r12 rax 
write: r12 r15 rflags 
--------------------------------------------------------------------------------
00037d91: RLP; test eax, eax ; jg 0x37d5c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00037df1: RLP; test eax, eax ; jg 0x37dbc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00037e9d: RLP; mov rcx, qword ptr [rip + 0x330fc0] ; test rax, rax ; mov qword ptr [rbp - 0x88], rax ; mov r8, qword ptr [rbp - 0x68] ; mov dword ptr fs:[rcx], r12d ; je 0x3805c
read: r12d rax rflags 
write: r8 rcx rflags 
--------------------------------------------------------------------------------
00037f4f: RLP; mov qword ptr [rbp - 0x68], r14 ; mov qword ptr [rbp - 0x70], 0 ; nop ; mov rax, qword ptr [rbp - 0x70] ; mov r13, qword ptr [rbp - 0x68] ; mov r15, qword ptr [r12 + rax*8] ; cmp r15, r13 ; je 0x37fd9
read: r13 r14 r15 rflags 
write: r13 r15 rax rflags 
--------------------------------------------------------------------------------
00037f80: RLP; mov rdi, r13 ; mov rsi, qword ptr [rbp - 0x70] ; jmp 0x37f95
read: r13 
write: rdi rsi 
--------------------------------------------------------------------------------
00037fb6: RLP; lea rdx, [r12 + r13*8] ; mov rax, qword ptr [rdx] ; cmp rax, qword ptr [rbp - 0x68] ; jne 0x37f8c
read: rax rflags 
write: rax rdx rflags 
--------------------------------------------------------------------------------
00037fd9: RLP; add qword ptr [rbp - 0x70], 1 ; add qword ptr [rbp - 0x68], rbx ; mov rax, qword ptr [rbp - 0x80] ; cmp qword ptr [rbp - 0x70], rax ; jne 0x37f5c
read: rax rbx rflags 
write: rax rflags 
--------------------------------------------------------------------------------
00038000: RLP; lea rsp, [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rsp 
--------------------------------------------------------------------------------
00038072: RLP; lea rsp, [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rsp 
--------------------------------------------------------------------------------
000380cc: RLP; mov rdi, qword ptr [rbp - 0x88] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000380dc: RLP; jmp 0x38000
read: 
write: 
--------------------------------------------------------------------------------
000380f3: RLP; cmp rax, -1 ; movabs rdx, 0x1fffffffffffffff ; mov r8, qword ptr [rbp - 0x68] ; je 0x38116
read: rax rflags 
write: r8 rdx rflags 
--------------------------------------------------------------------------------
0003812f: RLP; mov r8, qword ptr [rbp - 0x68] ; mov dword ptr [rip + 0x332af3], eax ; jmp 0x37e6a
read: eax 
write: r8 
--------------------------------------------------------------------------------
00038190: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000381ba: RLP; mov r14, rax ; mov rax, qword ptr [rip + 0x330ce0] ; mov rbp, qword ptr [rax] ; test rbp, rbp ; je 0x3827c
read: rax rbp rflags 
write: r14 rax rbp rflags 
--------------------------------------------------------------------------------
00038262: RLP; test eax, eax ; jne 0x3823c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000382ac: RLP; test rax, rax ; je 0x3831c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000382d0: RLP; lea rdx, [rax + 0x1f] ; mov rsi, rbx ; and rdx, 0xfffffffffffffff0 ; sub rsp, rdx ; mov rdx, rax ; lea rdi, [rsp + 0xf] ; and rdi, 0xfffffffffffffff0 ; mov byte ptr [rdi + rax], 0 ; call 0x8e3dc
read: rax rbx rdi rdx rip rsp 
write: rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000382f7: RLP; mov ecx, 1 ; mov rdx, rbx ; xor esi, esi ; mov rdi, rax ; call 0x3838c
read: esi rax rbx rip rsp 
write: ecx esi rdi rdx rflags rsp 
--------------------------------------------------------------------------------
0003830d: RLP; lea rsp, [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
read: rsp 
write: r12 rbp rbx rsp 
--------------------------------------------------------------------------------
00038328: RLP; xor eax, eax ; jmp 0x3830d
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
00038339: RLP; test eax, eax ; mov rsi, qword ptr [rbp - 0x18] ; jne 0x382c4
read: eax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
0003834d: RLP; test rax, rax ; mov r12, rax ; je 0x3837d
read: rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
0003836b: RLP; mov rdi, r12 ; mov ebx, eax ; call 0x1f46c
read: eax r12 rip rsp 
write: ebx rdi rsp 
--------------------------------------------------------------------------------
00038379: RLP; mov eax, ebx ; jmp 0x3830d
read: ebx 
write: eax 
--------------------------------------------------------------------------------
000383bb: RLP; test rbx, rbx ; mov r12, rax ; je 0x38664
read: rax rbx rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
000383d3: RLP; add rax, 1 ; mov qword ptr [rbp - 0x48], rax ; mov esi, 1 ; xor eax, eax ; cmp dword ptr [rip + 0x336387], 0 ; je 0x383f7
read: eax rax rflags 
write: eax esi rax rflags 
--------------------------------------------------------------------------------
00038417: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x330a7f] ; mov r15, qword ptr [rax] ; test r15, r15 ; je 0x38654
read: r15 rflags rsp 
write: r15 rax rflags rsp 
--------------------------------------------------------------------------------
00038456: RLP; test eax, eax ; jne 0x38465
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00038490: RLP; test rax, rax ; mov rcx, rax ; je 0x38671
read: rax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
000384c2: RLP; mov rcx, rax ; mov rax, qword ptr [rip + 0x3309d8] ; add r15, rcx ; mov qword ptr [rip + 0x33275e], rcx ; mov qword ptr [r15], 0 ; mov qword ptr [rcx + rbx*8 + 8], 0 ; mov qword ptr [rax], rcx ; cmp qword ptr [r15], 0 ; je 0x38544
read: r15 rax rcx rflags 
write: r15 rax rcx rflags 
--------------------------------------------------------------------------------
00038529: RLP; add rsp, 0x80 ; xor eax, eax ; lea rsp, [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: eax rsp 
write: eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000385b5: RLP; mov rdx, qword ptr [rbp - 0x48] ; mov rsi, qword ptr [rbp - 0x50] ; lea rdi, [rax + 1] ; mov byte ptr [rax], 0x3d ; call 0x8e3dc
read: rip rsp 
write: rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000385cd: RLP; lea rdx, [rip + 0x4b6b8] ; lea rsi, [rip + 0x332661] ; mov rdi, rbx ; call 0xe152c
read: rbx rip rsp 
write: rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000385e7: RLP; test rax, rax ; mov ecx, dword ptr [rbp - 0x38] ; je 0x385ff
read: rax rflags 
write: ecx rflags 
--------------------------------------------------------------------------------
00038613: RLP; test rax, rax ; mov qword ptr [rbp - 0x38], rax ; je 0x38671
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0003862f: RLP; mov rdi, qword ptr [rbp - 0x38] ; lea rdx, [rip + 0x4b652] ; lea rsi, [rip + 0x3325fb] ; call 0xe13dc
read: rip rsp 
write: rdi rdx rsi rsp 
--------------------------------------------------------------------------------
0003864a: RLP; jmp 0x3854b
read: 
write: 
--------------------------------------------------------------------------------
000386a4: RLP; add rsp, 0x80 ; mov eax, 0xffffffff ; jmp 0x38532
read: rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
000386ca: RLP; test eax, eax ; jne 0x38584
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000386de: RLP; test rax, rax ; mov rbx, rax ; je 0x38671
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
00038725: RLP; test rax, rax ; jne 0x3874c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0003873e: RLP; pop rbx ; pop rbp ; pop r12 ; ret
read: rsp 
write: r12 rbp rbx rsp 
--------------------------------------------------------------------------------
0003879d: RLP; test rax, rax ; jne 0x388ac
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000387b2: RLP; mov esi, 1 ; mov r13, rax ; xor eax, eax ; cmp dword ptr [rip + 0x335fad], 0 ; je 0x387d1
read: eax rax rflags 
write: eax esi r13 rflags 
--------------------------------------------------------------------------------
000387f1: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x3306a5] ; mov rbp, qword ptr [rax] ; test rbp, rbp ; je 0x3883a
read: rbp rflags rsp 
write: rax rbp rflags rsp 
--------------------------------------------------------------------------------
00038822: RLP; test eax, eax ; jne 0x3882d
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0003886d: RLP; add rsp, 0x80 ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: eax rsp 
write: eax r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0003890d: RLP; add rsp, 0x80 ; mov rbx, qword ptr [rip + 0x330589] ; mov rdi, qword ptr [rbx] ; cmp rdi, qword ptr [rip + 0x33230f] ; je 0x3896c
read: rdi rflags rsp 
write: rbx rdi rflags rsp 
--------------------------------------------------------------------------------
00038961: RLP; add rsp, 0x80 ; xor eax, eax ; pop rbx ; ret
read: eax rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
0003897a: RLP; mov qword ptr [rip + 0x3322af], 0 ; jmp 0x38927
read: 
write: 
--------------------------------------------------------------------------------
000389ac: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000389db: RLP; mov r13, qword ptr [rbp] ; test r13, r13 ; je 0x38a3c
read: r13 rflags 
write: r13 rflags 
--------------------------------------------------------------------------------
00038a5b: RLP; add rbp, 8 ; cmp rbp, r12 ; jb 0x38a54
read: r12 rbp rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
00038a89: RLP; jmp 0x389ec
read: 
write: 
--------------------------------------------------------------------------------
00038ab1: RLP; jmp 0x389ec
read: 
write: 
--------------------------------------------------------------------------------
00038ad3: RLP; jmp 0x389ec
read: 
write: 
--------------------------------------------------------------------------------
00038ae4: RLP; jmp 0x389db
read: 
write: 
--------------------------------------------------------------------------------
00038b2c: RLP; test rax, rax ; je 0x38b59
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00038bb5: RLP; add rsp, 0x80 ; mov rbp, qword ptr [rbx] ; test rbp, rbp ; je 0x38cdc
read: rbp rflags rsp 
write: rbp rflags rsp 
--------------------------------------------------------------------------------
00038c98: RLP; add rsp, 0x80 ; add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
read: rsi rsp 
write: rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00038ccf: RLP; test rax, rax ; je 0x38cfb
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00038d29: RLP; test rax, rax ; je 0x38d58
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00038d8d: RLP; test rax, rax ; je 0x38dbc
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00038e6f: RLP; cmp r15, qword ptr [rip + 0x335626] ; jne 0x38de4
read: r15 rflags 
write: rflags 
--------------------------------------------------------------------------------
00038f09: RLP; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00038f59: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00038f96: RLP; mov qword ptr [rax], r12 ; mov qword ptr [rax + 8], rbp ; mov rbx, rax ; lea rdi, [rip + 0x32fde5] ; call 0x1f3ec
read: r12 rax rbp rip rsp 
write: rbx rdi rsp 
--------------------------------------------------------------------------------
00038fb0: RLP; mov rbp, qword ptr [rip + 0x32fe2d] ; mov r12, rax ; mov rax, qword ptr [rax + 0x40] ; mov qword ptr [r12 + 0x40], rbx ; lea rdi, [rbp + 0x908] ; mov qword ptr [rbx + 0x18], rax ; call qword ptr [rbp + 0xf08]
read: rax rbx rsp 
write: r12 rax rbp rdi rsp 
--------------------------------------------------------------------------------
00038fde: RLP; cmp qword ptr [r12 + 0x38], r13 ; jne 0x3905a
read: r13 rflags 
write: rflags 
--------------------------------------------------------------------------------
00038ff8: RLP; mov rax, qword ptr [rax + 0x30] ; movzx edx, byte ptr [rax + 0x314] ; and edx, 3 ; cmp dl, 2 ; mov rdx, qword ptr [rax + 0x450] ; je 0x3904c
read: dl edx rflags 
write: edx rax rdx rflags 
--------------------------------------------------------------------------------
00039035: RLP; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: eax rsp 
write: eax r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00039066: RLP; test rax, rax ; mov r12, rax ; je 0x3908a
read: rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
0003907e: RLP; mov qword ptr [rax + 0x30], r12 ; jmp 0x38fe8
read: r12 
write: 
--------------------------------------------------------------------------------
000390b4: RLP; mov rbx, qword ptr [rax + 0x40] ; test rbx, rbx ; je 0x39184
read: rbx rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000390e9: RLP; mov rdi, rbx ; call 0x1f46c
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000390f5: RLP; lea rdi, [rip + 0x32fc90] ; call 0x1f3ec
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
00039105: RLP; mov rbx, qword ptr [rax + 0x40] ; test rbx, rbx ; je 0x39184
read: rbx rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
00039121: RLP; mov rdx, qword ptr [rbx + 0x18] ; mov rdi, qword ptr [rbx + 8] ; mov qword ptr [rax + 0x40], rdx ; call qword ptr [rbx]
read: rdx rsp 
write: rdi rdx rsp 
--------------------------------------------------------------------------------
00039136: RLP; mov rdi, r12 ; call qword ptr [rbp + 0xf08]
read: r12 rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
00039143: RLP; mov rax, qword ptr [rbx + 0x10] ; mov rcx, qword ptr [rax + 0x450] ; lea rdx, [rcx - 1] ; test rdx, rdx ; mov qword ptr [rax + 0x450], rdx ; jne 0x390dc
read: rdx rflags 
write: rax rcx rdx rflags 
--------------------------------------------------------------------------------
00039257: RLP; mov rdx, rax ; mov eax, 0xffffffff ; test edx, edx ; cmovns eax, edx ; pop rbx ; ret
read: eax edx rax rflags rsp 
write: eax rbx rdx rflags rsp 
--------------------------------------------------------------------------------
000392ae: RLP; mov rax, qword ptr [rbx + 0x28] ; jmp 0x39283
read: 
write: rax 
--------------------------------------------------------------------------------
000392f5: RLP; add rsp, 0x28 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0003932c: RLP; mov rdx, rax ; mov eax, 0xffffffff ; test edx, edx ; cmovns eax, edx ; pop rbx ; ret
read: eax edx rax rflags rsp 
write: eax rbx rdx rflags rsp 
--------------------------------------------------------------------------------
00039386: RLP; mov rax, qword ptr [rbx + 0x28] ; jmp 0x3935b
read: 
write: rax 
--------------------------------------------------------------------------------
000393c5: RLP; add rsp, 0x28 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000393e6: RLP; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
0003942f: RLP; mov rax, qword ptr [rbx + 0x28] ; jmp 0x39403
read: 
write: rax 
--------------------------------------------------------------------------------
00039492: RLP; add rsp, 0x80 ; lea rsi, [rip + 0x33011c] ; mov edi, edx ; call 0x398ac
read: edx rip rsp 
write: edi rflags rsi rsp 
--------------------------------------------------------------------------------
000394ab: RLP; cmp dword ptr [rip + 0x3352be], 0 ; je 0x394bf
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000394de: RLP; add rsp, 0x80 ; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00039533: RLP; add rsp, 0x80 ; lea rcx, [rip + 0x33007b] ; mov rsi, r10 ; mov edi, r9d ; mov rbx, qword ptr [rip + 0x33007e] ; call 0x3999c
read: r10 r9d rip rsp 
write: edi rbx rcx rflags rsi rsp 
--------------------------------------------------------------------------------
00039557: RLP; mov esi, eax ; cmp dword ptr [rip + 0x335210], 0 ; je 0x3956d
read: eax rflags 
write: esi rflags 
--------------------------------------------------------------------------------
0003958c: RLP; add rsp, 0x80 ; xor eax, eax ; sub rbx, 4 ; cmp esi, -1 ; cmovne rax, rbx ; pop rbx ; ret
read: eax esi rax rbx rflags rsp 
write: eax rax rbx rflags rsp 
--------------------------------------------------------------------------------
000395f0: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x32ffce] ; lea rsi, [rip + 0x32ffb7] ; mov rdi, rdx ; lea rbx, [rax - 4] ; call 0x3971c
read: rdx rip rsp 
write: rax rbx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00039615: RLP; test eax, eax ; mov eax, 0 ; cmovs rbx, rax ; cmp dword ptr [rip + 0x335149], 0 ; je 0x39634
read: eax rax rbx rflags 
write: eax rbx rflags 
--------------------------------------------------------------------------------
00039653: RLP; add rsp, 0x80 ; mov rax, rbx ; pop rbx ; ret
read: rbx rsp 
write: rax rbx rflags rsp 
--------------------------------------------------------------------------------
000396b0: RLP; add rsp, 0x80 ; lea rdi, [rip + 0x32fefe] ; lea rsi, [rsp + 0xc] ; call 0x3980c
read: rip rsp 
write: rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000396cc: RLP; cmp dword ptr [rip + 0x33509d], 0 ; je 0x396e0
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000396ff: RLP; add rsp, 0x80 ; movsxd rax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
read: rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
0003997e: RLP; cmp ebx, -1 ; jne 0x3996c
read: ebx rflags 
write: rflags 
--------------------------------------------------------------------------------
00039a1b: RLP; mov dword ptr [r13], 0 ; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: eax rsp 
write: eax r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00039a79: RLP; mov rax, qword ptr [rbx + 8] ; sub rax, r12 ; sar rax, 2 ; lea eax, [rax + rax*4] ; add ebp, eax ; xor eax, eax ; mov dword ptr [r13], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: eax ebp r12 rax rsp 
write: eax ebp r12 r13 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00039b0d: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00039b9c: RLP; movsd xmm0, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
read: rsp 
write: rflags rsp xmm0 
--------------------------------------------------------------------------------
00039bc9: RLP; movsd xmm0, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
read: rsp 
write: rflags rsp xmm0 
--------------------------------------------------------------------------------
00039bfc: RLP; mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
read: rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
00039c29: RLP; mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
read: rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
00039c5c: RLP; mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
read: rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
00039c89: RLP; mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
read: rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
00039cb4: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00039cd4: RLP; lea rax, [rip + 0x3347d7] ; add rsp, 8 ; ret
read: rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
00039d04: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00039d23: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00039d45: RLP; test eax, eax ; js 0x39dac
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00039dd8: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00039e05: RLP; test eax, eax ; js 0x39e2c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00039e58: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00039e85: RLP; test eax, eax ; js 0x39eac
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0003a028: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0003a05a: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0003a088: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0003a0ba: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0003a499: RLP; test rax, rax ; mov rbx, rax ; mov r8, qword ptr [rsp + 0x18] ; je 0x3a3e4
read: rax rflags 
write: r8 rbx rflags 
--------------------------------------------------------------------------------
0003a555: RLP; movzx r10d, byte ptr [r12] ; mov ecx, 8 ; mov edx, 0xa ; mov r8, qword ptr [rsp + 8] ; jmp 0x3a183
read: 
write: ecx edx r10d r8 
--------------------------------------------------------------------------------
0003a5a2: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0003a906: RLP; test rax, rax ; mov rbx, rax ; mov r8, qword ptr [rsp + 0x10] ; je 0x3a870
read: rax rflags 
write: r8 rbx rflags 
--------------------------------------------------------------------------------
0003a9c5: RLP; movzx r10d, byte ptr [r12] ; mov rdi, rax ; mov edx, 0xa ; mov eax, 8 ; mov r8, qword ptr [rsp + 8] ; jmp 0x3a663
read: rax 
write: eax edx r10d r8 rdi 
--------------------------------------------------------------------------------
0003aa12: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0003aa38: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0003aa6a: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0003aa98: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0003aaca: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0003aaf8: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0003ab2a: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0003ad2c: RLP; mov r14, qword ptr [r12] ; mov r9d, dword ptr [rsp + 8] ; mov rdi, -0x7f ; sub edi, ebx ; mov esi, r14d ; and esi, 1 ; mov rdx, r13 ; mov ecx, edi ; shr rdx, cl ; and edx, 1 ; jne 0x3ad6c
read: cl ebx edi edx esi r13 r14d rdx rflags 
write: ecx edi edx esi r14 r9d rdi rdx rflags 
--------------------------------------------------------------------------------
0003ae2d: RLP; test al, al ; je 0x3ae4c
read: al rflags 
write: rflags 
--------------------------------------------------------------------------------
0003ae5c: RLP; jmp 0x3ac83
read: 
write: 
--------------------------------------------------------------------------------
0003aebd: RLP; test al, al ; mov r9d, dword ptr [rsp + 0xc] ; je 0x3af8c
read: al rflags 
write: r9d rflags 
--------------------------------------------------------------------------------
0003aeea: RLP; lea rax, [r13 + 1] ; sub r14, rbx ; mov r10d, dword ptr [rsp + 8] ; mov r9d, dword ptr [rsp + 0xc] ; test eax, 0x1000000 ; je 0x3afb9
read: eax r14 rbx rflags 
write: eax r10d r14 r9d rax rflags 
--------------------------------------------------------------------------------
0003af69: RLP; or qword ptr [r12], 0x800000 ; cmp rbx, 0x81 ; je 0x3ac65
read: rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
0003afb1: RLP; mov r9d, dword ptr [rsp + 8] ; sub r14, rbx ; mov edi, r14d ; mov r14, qword ptr [r12] ; mov esi, r14d ; and esi, 1 ; jmp 0x3ad44
read: esi r14 r14d rbx 
write: edi esi r14 r9d rflags 
--------------------------------------------------------------------------------
0003b0d9: RLP; mov rdx, qword ptr [r15] ; mov rcx, qword ptr [r14] ; mov r8, qword ptr [rsp] ; add rbp, rdx ; cmp rdx, rbp ; mov qword ptr [r15], rbp ; jbe 0x3b134
read: rbp rdx rflags 
write: r8 rbp rcx rdx rflags 
--------------------------------------------------------------------------------
0003b1df: RLP; mov rdx, qword ptr [r15] ; mov rcx, qword ptr [r14] ; add rbp, rdx ; cmp rdx, rbp ; mov qword ptr [r15], rbp ; ja 0x3b20d
read: rbp rdx rflags 
write: rbp rcx rdx rflags 
--------------------------------------------------------------------------------
0003b2fa: RLP; test rax, rax ; mov qword ptr [rsp + 0x28], rax ; je 0x3d2ee
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0003b8b3: RLP; add r15d, r15d ; add r14, 0x18 ; test r13d, r13d ; je 0x3b920
read: r13d r14 r15d rflags 
write: r14 r15d rflags 
--------------------------------------------------------------------------------
0003b8f5: RLP; mov rdx, qword ptr [r14 + 8] ; test rax, rax ; lea rbp, [rbp + rdx - 1] ; jne 0x3beec
read: rax rflags 
write: rbp rdx rflags 
--------------------------------------------------------------------------------
0003b965: RLP; lea rax, [rbp - 1] ; bsr rbx, qword ptr [rsp + rax*8 + 0xc0] ; mov qword ptr [rsp + 0x18], rax ; xor rbx, 0x3f ; test ebx, ebx ; jle 0x3b9b6
read: ebx rax rbx rflags 
write: rax rbx rflags 
--------------------------------------------------------------------------------
0003b995: RLP; mov rdi, qword ptr [rsp + 0x10] ; mov rdx, qword ptr [rsp + 0x60] ; mov ecx, ebx ; mov rsi, rdi ; call 0x45cac
read: ebx rdi rip rsp 
write: ecx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
0003b9ad: RLP; test rax, rax ; jne 0x3c35d
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0003ba34: RLP; mov r8, qword ptr [rsp + 0x70] ; mov r10d, dword ptr [rsp + 0x10] ; add r13d, 0x40 ; mov r15, r8 ; xor r8d, r8d ; cmp r13d, 0x18 ; jg 0x3ccff
read: r13d r8 r8d rflags 
write: r10d r13d r15 r8 r8d rflags 
--------------------------------------------------------------------------------
0003bb4a: RLP; jmp 0x3b656
read: 
write: 
--------------------------------------------------------------------------------
0003bc72: RLP; cmp qword ptr [rsp + 0x10], 0 ; je 0x3bc94
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
0003bf91: RLP; test eax, eax ; jne 0x3b643
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0003bfca: RLP; test eax, eax ; cmove rbp, rbx ; mov qword ptr [r15], rbp ; mov eax, dword ptr [rsp + 0x48] ; movss xmm0, dword ptr [rip + 0x101c99] ; test eax, eax ; je 0x3b656
read: eax rbp rbx rflags 
write: eax rbp rflags xmm0 
--------------------------------------------------------------------------------
0003c013: RLP; test eax, eax ; jne 0x3b643
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0003c085: RLP; test eax, eax ; mov rcx, qword ptr [rsp + 0x60] ; mov r8, qword ptr [rsp + 0x20] ; jle 0x3c0aa
read: eax rflags 
write: r8 rcx rflags 
--------------------------------------------------------------------------------
0003c20d: RLP; cmp qword ptr [rsp + rbp*8 + 0x70], rax ; je 0x3c23a
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0003c22d: RLP; test rax, rax ; je 0x3cedf
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0003c41b: RLP; mov ecx, 0x40 ; mov rax, rbx ; sub ecx, r15d ; shr rax, cl ; or qword ptr [rsp + 0x50], rax ; jmp 0x3c3dc
read: cl ecx r15d rax rbx 
write: ecx rax rflags 
--------------------------------------------------------------------------------
0003c4c8: RLP; mov r10d, dword ptr [rsp + 0x10] ; mov ecx, 0x40 ; mov rax, rbx ; mov r8, qword ptr [rsp + 0x18] ; sub ecx, r10d ; shr rax, cl ; or qword ptr [rsp + 0x50], rax ; jmp 0x3c488
read: cl ecx r10d rax rbx 
write: ecx r10d r8 rax rflags 
--------------------------------------------------------------------------------
0003c53f: RLP; mov rbx, rax ; mov rax, qword ptr [rsp + 0x68] ; mov r15, qword ptr [rsp + 0x60] ; test rax, rax ; jle 0x3c658
read: rax rflags 
write: r15 rax rbx rflags 
--------------------------------------------------------------------------------
0003c5a0: RLP; add r15, qword ptr [rsp + 0x60] ; test rax, rax ; mov qword ptr [rsp + 0x60], r15 ; je 0x3c60f
read: r15 rax rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
0003c60d: RLP; jmp 0x3c5a0
read: 
write: 
--------------------------------------------------------------------------------
0003c658: RLP; lea rdx, [r15 - 1] ; mov esi, r15d ; shl esi, 6 ; bsr rax, qword ptr [rsp + rdx*8 + 0x70] ; xor rax, 0x3f ; sub esi, eax ; cmp esi, 0x80 ; mov r13d, esi ; jg 0x3d1ef
read: eax esi r15d rax rflags 
write: esi r13d rax rdx rflags 
--------------------------------------------------------------------------------
0003c70f: RLP; jmp 0x3b656
read: 
write: 
--------------------------------------------------------------------------------
0003c8a4: RLP; mov ecx, 0x40 ; mov rax, rbx ; sub ecx, r12d ; shr rax, cl ; or qword ptr [rsp + 0x50], rax ; jmp 0x3c866
read: cl ecx r12d rax rbx 
write: ecx rax rflags 
--------------------------------------------------------------------------------
0003c94e: RLP; jmp 0x3b656
read: 
write: 
--------------------------------------------------------------------------------
0003c9ba: RLP; jmp 0x3b656
read: 
write: 
--------------------------------------------------------------------------------
0003ca34: RLP; mov rdx, qword ptr [rsp + 0x60] ; neg rdx ; test rdx, rdx ; mov qword ptr [rsp + rdx*8 + 0x50], rax ; jle 0x3ca4f
read: rax rdx rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
0003ca6a: RLP; jmp 0x3b656
read: 
write: 
--------------------------------------------------------------------------------
0003cbbc: RLP; jmp 0x3b7d0
read: 
write: 
--------------------------------------------------------------------------------
0003cbee: RLP; jmp 0x3b938
read: 
write: 
--------------------------------------------------------------------------------
0003cc54: RLP; cmp r12, qword ptr [rsp + 0xc0] ; movss xmm0, dword ptr [rsp + 0x18] ; je 0x3ce7d
read: r12 rflags 
write: rflags xmm0 
--------------------------------------------------------------------------------
0003cca3: RLP; mov rcx, qword ptr [rsp + 0x60] ; mov r8, qword ptr [rsp + 0x20] ; jmp 0x3c0f1
read: 
write: r8 rcx 
--------------------------------------------------------------------------------
0003cd50: RLP; sub rbp, qword ptr [rsp + 0x60] ; test rbp, rbp ; jle 0x3ca4f
read: rbp rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
0003cd91: RLP; test rbp, rbp ; jle 0x3ca4f
read: rbp rflags 
write: rflags 
--------------------------------------------------------------------------------
0003d055: RLP; cmp r13, rax ; mov rsi, rax ; mov r11, qword ptr [rsp + 0x18] ; mov r8, qword ptr [rsp + 0x30] ; mov r9d, dword ptr [rsp + 0x38] ; je 0x3d13e
read: r13 rax rflags 
write: r11 r8 r9d rflags rsi 
--------------------------------------------------------------------------------
0003d3d2: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0003d5cc: RLP; mov r14, qword ptr [r12] ; mov r9d, dword ptr [rsp + 8] ; mov rdi, -0x3ff ; sub edi, ebx ; mov esi, r14d ; and esi, 1 ; mov rdx, r13 ; mov ecx, edi ; shr rdx, cl ; and edx, 1 ; jne 0x3d60c
read: cl ebx edi edx esi r13 r14d rdx rflags 
write: ecx edi edx esi r14 r9d rdi rdx rflags 
--------------------------------------------------------------------------------
0003d6cd: RLP; test al, al ; je 0x3d6f5
read: al rflags 
write: rflags 
--------------------------------------------------------------------------------
0003d705: RLP; jmp 0x3d526
read: 
write: 
--------------------------------------------------------------------------------
0003d76d: RLP; test al, al ; mov r9d, dword ptr [rsp + 0xc] ; je 0x3d83c
read: al rflags 
write: r9d rflags 
--------------------------------------------------------------------------------
0003d79a: RLP; lea rdx, [r13 + 1] ; movabs rax, 0x20000000000000 ; sub r14, rbx ; mov r10d, dword ptr [rsp + 8] ; mov r9d, dword ptr [rsp + 0xc] ; test rax, rdx ; je 0x3d869
read: r14 rax rbx rdx rflags 
write: r10d r14 r9d rax rdx rflags 
--------------------------------------------------------------------------------
0003d819: RLP; movabs rax, 0x10000000000000 ; or qword ptr [r12], rax ; cmp rbx, 0x401 ; je 0x3d508
read: rax rbx rflags 
write: rax rflags 
--------------------------------------------------------------------------------
0003d861: RLP; mov r9d, dword ptr [rsp + 8] ; sub r14, rbx ; mov edi, r14d ; mov r14, qword ptr [r12] ; mov esi, r14d ; and esi, 1 ; jmp 0x3d5e4
read: esi r14 r14d rbx 
write: edi esi r14 r9d rflags 
--------------------------------------------------------------------------------
0003d989: RLP; mov rdx, qword ptr [r15] ; mov rcx, qword ptr [r14] ; mov r8, qword ptr [rsp] ; add rbp, rdx ; cmp rdx, rbp ; mov qword ptr [r15], rbp ; jbe 0x3d9e4
read: rbp rdx rflags 
write: r8 rbp rcx rdx rflags 
--------------------------------------------------------------------------------
0003da8f: RLP; mov rdx, qword ptr [r15] ; mov rcx, qword ptr [r14] ; add rbp, rdx ; cmp rdx, rbp ; mov qword ptr [r15], rbp ; ja 0x3dabd
read: rbp rdx rflags 
write: rbp rcx rdx rflags 
--------------------------------------------------------------------------------
0003dba8: RLP; test rax, rax ; mov qword ptr [rsp + 0x20], rax ; mov rcx, qword ptr [rsp + 0x18] ; je 0x3f994
read: rax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
0003e17c: RLP; add r15d, r15d ; add r13, 0x18 ; test r12d, r12d ; je 0x3e1ea
read: r12d r13 r15d rflags 
write: r13 r15d rflags 
--------------------------------------------------------------------------------
0003e1bf: RLP; mov rdx, qword ptr [r13 + 8] ; test rax, rax ; lea rbp, [rbp + rdx - 1] ; jne 0x3e77b
read: rax rflags 
write: rbp rdx rflags 
--------------------------------------------------------------------------------
0003e22f: RLP; lea rax, [rbp - 1] ; bsr rbx, qword ptr [rsp + rax*8 + 0x250] ; mov qword ptr [rsp + 0x10], rax ; xor rbx, 0x3f ; test ebx, ebx ; jle 0x3e280
read: ebx rax rbx rflags 
write: rax rbx rflags 
--------------------------------------------------------------------------------
0003e25f: RLP; mov rdi, qword ptr [rsp + 8] ; mov rdx, qword ptr [rsp + 0x60] ; mov ecx, ebx ; mov rsi, rdi ; call 0x45cac
read: ebx rdi rip rsp 
write: ecx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
0003e277: RLP; test rax, rax ; jne 0x3ee4f
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0003e2fe: RLP; mov r8, qword ptr [rsp + 0x70] ; mov r10d, dword ptr [rsp + 8] ; add r12d, 0x40 ; mov r14, r8 ; xor r8d, r8d ; cmp r12d, 0x35 ; jg 0x3f43f
read: r12d r8 r8d rflags 
write: r10d r12d r14 r8 r8d rflags 
--------------------------------------------------------------------------------
0003e40d: RLP; jmp 0x3df15
read: 
write: 
--------------------------------------------------------------------------------
0003e526: RLP; cmp qword ptr [rsp + 8], 0 ; je 0x3e544
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
0003e823: RLP; test eax, eax ; jne 0x3df01
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0003e85c: RLP; test eax, eax ; cmove rbp, rbx ; mov qword ptr [r14], rbp ; mov eax, dword ptr [rsp + 0x18] ; movsd xmm0, qword ptr [rip + 0xff3ab] ; test eax, eax ; je 0x3df15
read: eax rbp rbx rflags 
write: eax rbp rflags xmm0 
--------------------------------------------------------------------------------
0003e8a5: RLP; test eax, eax ; jne 0x3df01
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0003e969: RLP; mov rbx, rax ; mov rax, qword ptr [rsp + 0x68] ; mov r13, qword ptr [rsp + 0x60] ; test rax, rax ; jle 0x3ea70
read: rax rflags 
write: r13 rax rbx rflags 
--------------------------------------------------------------------------------
0003e9ca: RLP; mov r9, r13 ; add r9, qword ptr [rsp + 0x60] ; test rax, rax ; mov qword ptr [rsp + 0x60], r9 ; je 0x3f057
read: r13 r9 rax rflags 
write: r9 rflags 
--------------------------------------------------------------------------------
0003ea3e: RLP; jmp 0x3e9ca
read: 
write: 
--------------------------------------------------------------------------------
0003ea70: RLP; lea rcx, [r13 - 1] ; mov edx, r13d ; shl edx, 6 ; bsr rax, qword ptr [rsp + rcx*8 + 0x70] ; xor rax, 0x3f ; sub edx, eax ; cmp edx, 0x400 ; mov r12d, edx ; jg 0x3f7ee
read: eax edx r13d rax rflags 
write: edx r12d rax rcx rflags 
--------------------------------------------------------------------------------
0003eaff: RLP; mov rdx, qword ptr [rsp + 0x60] ; neg rdx ; test rdx, rdx ; mov qword ptr [rsp + rdx*8 + 0x50], rax ; jle 0x3eb1a
read: rax rdx rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
0003eb35: RLP; jmp 0x3df15
read: 
write: 
--------------------------------------------------------------------------------
0003eb75: RLP; test eax, eax ; mov rcx, qword ptr [rsp + 0x60] ; mov r9, qword ptr [rsp + 0x20] ; jle 0x3eb9a
read: eax rflags 
write: r9 rcx rflags 
--------------------------------------------------------------------------------
0003ecfc: RLP; cmp qword ptr [rsp + r13*8 + 0x70], rax ; je 0x3ed29
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0003ed1c: RLP; test rax, rax ; je 0x3f746
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0003ef16: RLP; jmp 0x3df15
read: 
write: 
--------------------------------------------------------------------------------
0003ef8e: RLP; mov ecx, 0x40 ; mov rax, rbx ; sub ecx, r14d ; shr rax, cl ; or qword ptr [rsp + 0x50], rax ; jmp 0x3ef50
read: cl ecx r14d rax rbx 
write: ecx rax rflags 
--------------------------------------------------------------------------------
0003f038: RLP; mov r10d, dword ptr [rsp + 8] ; mov ecx, 0x40 ; mov rax, rbx ; mov r8, qword ptr [rsp + 0x10] ; sub ecx, r10d ; shr rax, cl ; or qword ptr [rsp + 0x50], rax ; jmp 0x3eff8
read: cl ecx r10d rax rbx 
write: ecx r10d r8 rax rflags 
--------------------------------------------------------------------------------
0003f1a4: RLP; mov ecx, 0x40 ; mov rax, rbx ; sub ecx, r13d ; shr rax, cl ; or qword ptr [rsp + 0x50], rax ; jmp 0x3f16a
read: cl ecx r13d rax rbx 
write: ecx rax rflags 
--------------------------------------------------------------------------------
0003f1e5: RLP; jmp 0x3df15
read: 
write: 
--------------------------------------------------------------------------------
0003f250: RLP; jmp 0x3df15
read: 
write: 
--------------------------------------------------------------------------------
0003f3d8: RLP; jmp 0x3e202
read: 
write: 
--------------------------------------------------------------------------------
0003f41f: RLP; jmp 0x3e093
read: 
write: 
--------------------------------------------------------------------------------
0003f477: RLP; sub rbp, qword ptr [rsp + 0x60] ; test rbp, rbp ; jle 0x3eb1a
read: rbp rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
0003f4e8: RLP; mov rcx, qword ptr [rsp + 0x60] ; mov r9, qword ptr [rsp + 0x20] ; jmp 0x3ebe1
read: 
write: r9 rcx 
--------------------------------------------------------------------------------
0003f5ac: RLP; cmp r12, qword ptr [rsp + 0x250] ; movsd xmm0, qword ptr [rsp + 0x10] ; je 0x3f605
read: r12 rflags 
write: rflags xmm0 
--------------------------------------------------------------------------------
0003f9df: RLP; cmp r12, rax ; mov rdi, rax ; mov r11, qword ptr [rsp + 0x28] ; mov r10, qword ptr [rsp + 0x30] ; mov r8d, dword ptr [rsp + 0x38] ; je 0x3fa81
read: r12 rax rflags 
write: r10 r11 r8d rdi rflags 
--------------------------------------------------------------------------------
0003fb69: RLP; test rbp, rbp ; jle 0x3eb1a
read: rbp rflags 
write: rflags 
--------------------------------------------------------------------------------
0003fc52: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0003fe23: RLP; mov r15, qword ptr [rbp] ; mov r9d, dword ptr [rsp] ; mov rdi, -0x3fff ; sub edi, ebx ; mov esi, r15d ; and esi, 1 ; mov rdx, r13 ; mov ecx, edi ; shr rdx, cl ; and edx, 1 ; jne 0x3fe64
read: cl ebx edi edx esi r13 r15d rdx rflags 
write: ecx edi edx esi r15 r9d rdi rdx rflags 
--------------------------------------------------------------------------------
0003ff1e: RLP; test al, al ; je 0x3ff6c
read: al rflags 
write: rflags 
--------------------------------------------------------------------------------
0003ff4c: RLP; movabs rax, 0x8000000000000000 ; or qword ptr [rbp], rax ; cmp rbx, 0x4001 ; je 0x3fd80
read: rax rbx rflags 
write: rax rflags 
--------------------------------------------------------------------------------
0003ff7d: RLP; jmp 0x3fd52
read: 
write: 
--------------------------------------------------------------------------------
0003ffed: RLP; test al, al ; mov r10d, dword ptr [rsp] ; mov r9d, dword ptr [rsp + 8] ; je 0x4007f
read: al rflags 
write: r10d r9d rflags 
--------------------------------------------------------------------------------
0004002f: RLP; cmp r13, -1 ; mov r8, qword ptr [rsp] ; mov r10d, dword ptr [rsp + 8] ; mov r9d, dword ptr [rsp + 0xc] ; jb 0x400b4
read: r13 rflags 
write: r10d r8 r9d rflags 
--------------------------------------------------------------------------------
000400ab: RLP; mov r8, qword ptr [rsp] ; mov r9d, dword ptr [rsp + 8] ; mov r15, qword ptr [rbp] ; mov edi, r8d ; mov esi, r15d ; and esi, 1 ; jmp 0x3fe3a
read: esi r15d r8d 
write: edi esi r15 r8 r9d rflags 
--------------------------------------------------------------------------------
000401d9: RLP; mov rdx, qword ptr [r15] ; mov rcx, qword ptr [r14] ; mov r8, qword ptr [rsp] ; add rbp, rdx ; cmp rdx, rbp ; mov qword ptr [r15], rbp ; jbe 0x40234
read: rbp rdx rflags 
write: r8 rbp rcx rdx rflags 
--------------------------------------------------------------------------------
000402e7: RLP; mov rdx, qword ptr [r15] ; mov rcx, qword ptr [r14] ; add rbp, rdx ; cmp rdx, rbp ; mov qword ptr [r15], rbp ; ja 0x40318
read: rbp rdx rflags 
write: rbp rcx rdx rflags 
--------------------------------------------------------------------------------
00040408: RLP; test rax, rax ; mov qword ptr [rsp + 0x28], rax ; mov rcx, qword ptr [rsp + 0x10] ; je 0x41fb1
read: rax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
000409ec: RLP; add r14d, r14d ; add r15, 0x18 ; test ebx, ebx ; je 0x40a57
read: ebx r14d r15 rflags 
write: r14d r15 rflags 
--------------------------------------------------------------------------------
00040a2d: RLP; mov rdx, qword ptr [r15 + 8] ; test rax, rax ; lea r12, [r12 + rdx - 1] ; jne 0x40f83
read: rax rflags 
write: r12 rdx rflags 
--------------------------------------------------------------------------------
00040a9e: RLP; lea rax, [r13 - 1] ; bsr r14, qword ptr [rsp + rax*8 + 0x1b50] ; mov qword ptr [rsp + 0x18], rax ; xor r14, 0x3f ; test r14d, r14d ; jle 0x40af2
read: r14 r14d rax rflags 
write: r14 rax rflags 
--------------------------------------------------------------------------------
00040ad0: RLP; mov rdi, qword ptr [rsp + 8] ; mov rdx, qword ptr [rsp + 0x60] ; mov ecx, r14d ; mov rsi, rdi ; call 0x45cac
read: r14d rdi rip rsp 
write: ecx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
00040ae9: RLP; test rax, rax ; jne 0x41601
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00040d30: RLP; cmp qword ptr [rsp + 8], 0 ; je 0x40d4e
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
0004102b: RLP; test eax, eax ; jne 0x40771
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0004107c: RLP; test eax, eax ; jne 0x40771
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000410b5: RLP; test eax, eax ; cmove rbp, rbx ; mov qword ptr [r15], rbp ; mov eax, dword ptr [rsp + 0x10] ; test eax, eax ; jne 0x41bd4
read: eax rbp rbx rflags 
write: eax rbp rflags 
--------------------------------------------------------------------------------
00041175: RLP; mov rbx, rax ; mov rax, qword ptr [rsp + 0x68] ; mov r12, qword ptr [rsp + 0x60] ; test rax, rax ; jle 0x41282
read: rax rflags 
write: r12 rax rbx rflags 
--------------------------------------------------------------------------------
000411d9: RLP; mov rdx, r13 ; add rdx, qword ptr [rsp + 0x60] ; test rax, rax ; mov qword ptr [rsp + 0x60], rdx ; jne 0x411f4
read: r13 rax rdx rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
00041250: RLP; jmp 0x411d9
read: 
write: 
--------------------------------------------------------------------------------
00041282: RLP; lea rcx, [r12 - 1] ; mov edx, r12d ; shl edx, 6 ; bsr rax, qword ptr [rsp + rcx*8 + 0x70] ; xor rax, 0x3f ; sub edx, eax ; cmp edx, 0x4000 ; mov ebp, edx ; jg 0x41f88
read: eax edx r12d rax rflags 
write: ebp edx rax rcx rflags 
--------------------------------------------------------------------------------
0004133f: RLP; jmp 0x40783
read: 
write: 
--------------------------------------------------------------------------------
0004137f: RLP; test eax, eax ; mov rcx, qword ptr [rsp + 0x60] ; mov r9, qword ptr [rsp + 0x28] ; jle 0x413a4
read: eax rflags 
write: r9 rcx rflags 
--------------------------------------------------------------------------------
0004153a: RLP; jmp 0x40783
read: 
write: 
--------------------------------------------------------------------------------
00041573: RLP; mov ecx, r13d ; mov rax, rbx ; sub ecx, ebp ; shr rax, cl ; or qword ptr [rsp + 0x50], rax ; mov rdi, qword ptr [rsp + 0x68] ; jmp 0x41508
read: cl ebp ecx r13d rax rbx 
write: ecx rax rdi rflags 
--------------------------------------------------------------------------------
00041692: RLP; sub rbp, qword ptr [rsp + 0x60] ; test rbp, rbp ; jle 0x416a5
read: rbp rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
000416c0: RLP; jmp 0x40783
read: 
write: 
--------------------------------------------------------------------------------
00041707: RLP; mov r8, qword ptr [rsp + 0x70] ; mov r10d, dword ptr [rsp + 8] ; add ebp, 0x40 ; mov r14, r8 ; xor r8d, r8d ; cmp ebp, 0x40 ; jle 0x40b3f
read: ebp r8 r8d rflags 
write: ebp r10d r14 r8 r8d rflags 
--------------------------------------------------------------------------------
00041814: RLP; cmp qword ptr [rsp + rbp*8 + 0x70], rax ; je 0x41841
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00041834: RLP; test rax, rax ; je 0x421fb
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00041940: RLP; jmp 0x40783
read: 
write: 
--------------------------------------------------------------------------------
00041983: RLP; mov ecx, ebx ; mov rax, r14 ; shr rax, cl ; or qword ptr [rsp + 0x50], rax ; mov rdx, qword ptr [rsp + 0x68] ; jmp 0x418dd
read: cl ebx r14 rax 
write: ecx rax rdx rflags 
--------------------------------------------------------------------------------
000419fe: RLP; mov r10d, dword ptr [rsp + 8] ; mov ecx, r12d ; mov rax, rbx ; mov r8, qword ptr [rsp + 0x18] ; sub ecx, r10d ; shr rax, cl ; or qword ptr [rsp + 0x50], rax ; mov rdx, qword ptr [rsp + 0x68] ; jmp 0x40bf8
read: cl ecx r10d r12d rax rbx 
write: ecx r10d r8 rax rdx rflags 
--------------------------------------------------------------------------------
00041b46: RLP; jmp 0x40783
read: 
write: 
--------------------------------------------------------------------------------
00041bae: RLP; jmp 0x40783
read: 
write: 
--------------------------------------------------------------------------------
00041c9d: RLP; jmp 0x40902
read: 
write: 
--------------------------------------------------------------------------------
00041d23: RLP; cmp r12, qword ptr [rsp + 0x70] ; je 0x423b4
read: r12 rflags 
write: rflags 
--------------------------------------------------------------------------------
00041d5f: RLP; jmp 0x40a71
read: 
write: 
--------------------------------------------------------------------------------
00041db0: RLP; mov rcx, qword ptr [rsp + 0x60] ; mov r9, qword ptr [rsp + 0x28] ; jmp 0x413ea
read: 
write: r9 rcx 
--------------------------------------------------------------------------------
00041f1d: RLP; test rbp, rbp ; jle 0x416a5
read: rbp rflags 
write: rflags 
--------------------------------------------------------------------------------
00042104: RLP; cmp r12, rax ; mov rdi, rax ; mov r11, qword ptr [rsp + 0x20] ; mov r10, qword ptr [rsp + 0x30] ; mov r8d, dword ptr [rsp + 0x38] ; je 0x421a6
read: r12 rax rflags 
write: r10 r11 r8d rdi rflags 
--------------------------------------------------------------------------------
00042422: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000424a8: RLP; add rsp, 0x80 ; mov eax, dword ptr [rip + 0x32900b] ; lea edx, [rax + 1] ; test eax, eax ; mov dword ptr [rip + 0x329000], edx ; jne 0x42502
read: eax edx rflags rsp 
write: eax edx rflags rsp 
--------------------------------------------------------------------------------
000424da: RLP; test eax, eax ; js 0x42762
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000424fa: RLP; test eax, eax ; js 0x427ad
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00042535: RLP; add rsp, 0x80 ; lea r12, [rsp + 0x50] ; lea rsi, [rbp + 8] ; xor edi, edi ; or qword ptr [rsp + 0xd8], 0x10000 ; mov rdx, r12 ; call 0x361ac
read: edi r12 rip rsp 
write: edi r12 rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0004255f: RLP; test eax, eax ; js 0x427da
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000425e3: RLP; cdqe ; cmp rax, -1 ; je 0x425c4
read: eax rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
00042641: RLP; add rsp, 0x80 ; sub dword ptr [rip + 0x328e71], 1 ; jne 0x426dc
read: rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0004266c: RLP; lea rsi, [rip + 0x328e69] ; mov ebx, eax ; xor edx, edx ; mov edi, 3 ; call 0x3617c
read: eax edx rip rsp 
write: ebx edi edx rflags rsi rsp 
--------------------------------------------------------------------------------
00042685: RLP; or eax, ebx ; je 0x426dc
read: eax ebx rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000426c4: RLP; add rsp, 0x80 ; mov eax, dword ptr [rsp + 0x30] ; add rsp, 0x170 ; pop rbx ; pop rbp ; pop r12 ; ret
read: rsp 
write: eax r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000426ef: RLP; test eax, eax ; je 0x42691
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0004272f: RLP; jmp 0x4258b
read: 
write: 
--------------------------------------------------------------------------------
0004275d: RLP; jmp 0x42605
read: 
write: 
--------------------------------------------------------------------------------
0004279c: RLP; add rsp, 0x80 ; mov eax, 0xffffffff ; jmp 0x426cf
read: rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
000427d5: RLP; mov dword ptr fs:[rbx], ebp ; jmp 0x42769
read: ebp 
write: 
--------------------------------------------------------------------------------
00042816: RLP; add rsp, 0x80 ; sub dword ptr [rip + 0x328c9c], 1 ; jne 0x42769
read: rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0004284b: RLP; jmp 0x427be
read: 
write: 
--------------------------------------------------------------------------------
0004288d: RLP; lea rsi, [rip + 0x328c48] ; xor edx, edx ; mov edi, 3 ; call 0x3617c
read: edx rip rsp 
write: edi edx rflags rsi rsp 
--------------------------------------------------------------------------------
000428a4: RLP; xor edx, edx ; mov rsi, r12 ; mov edi, 2 ; call 0x361ac
read: edx r12 rip rsp 
write: edi edx rflags rsi rsp 
--------------------------------------------------------------------------------
000428b7: RLP; mov rax, qword ptr [rip + 0x3265e6] ; lea rdi, [rip + 0xf2281] ; lea rsi, [rsp + 0x30] ; mov dword ptr [rip + 0x328be8], 0 ; mov dword ptr [rip + 0x328be2], 0 ; mov rdx, qword ptr [rax] ; call 0xb31fc
read: rip rsp 
write: rax rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000428ea: RLP; mov edi, 0x7f ; call 0xb319c
read: rip rsp 
write: edi rsp 
--------------------------------------------------------------------------------
00042958: RLP; cmp eax, -1 ; je 0x4293c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00042999: RLP; add rsp, 0x80 ; sub dword ptr [rip + 0x328b19], 1 ; jne 0x429d7
read: rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000429c0: RLP; lea rsi, [rip + 0x328bb5] ; xor edx, edx ; mov edi, 2 ; call 0x3617c
read: edx rip rsp 
write: edi edx rflags rsi rsp 
--------------------------------------------------------------------------------
000429d7: RLP; cmp dword ptr [rip + 0x32bd92], 0 ; je 0x429eb
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
00042a0a: RLP; add rsp, 0x80 ; pop rbx ; ret
read: rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
00042a32: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00042a4c: RLP; test eax, eax ; sete al ; add rsp, 8 ; movzx eax, al ; ret
read: al eax rflags rsp 
write: al eax rflags rsp 
--------------------------------------------------------------------------------
00042acd: RLP; test rax, rax ; mov rcx, qword ptr [rbp - 0xc8] ; je 0x42f27
read: rax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
00042af2: RLP; mov rcx, qword ptr [rbp - 0xc8] ; mov r15, rax ; movzx esi, byte ptr [r13] ; test sil, sil ; je 0x42c7c
read: rax rflags sil 
write: esi r15 rcx rflags 
--------------------------------------------------------------------------------
00042bf4: RLP; test rax, rax ; mov rbx, rax ; mov rcx, qword ptr [rbp - 0xc8] ; je 0x42ee8
read: rax rflags 
write: rbx rcx rflags 
--------------------------------------------------------------------------------
00042c21: RLP; mov rdx, qword ptr [rbp - 0xe0] ; mov byte ptr [rax], 0 ; mov rsi, rbx ; mov edi, 1 ; mov r15, rax ; mov qword ptr [rbp - 0xc8], rax ; call 0xd643c
read: rax rbx rip rsp 
write: edi r15 rdx rsi rsp 
--------------------------------------------------------------------------------
00042c46: RLP; test eax, eax ; js 0x42e60
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00042d92: RLP; test eax, eax ; js 0x42e60
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00042dc3: RLP; lea rdx, [rax + r13] ; cmp rdx, 0xfff ; jg 0x42e52
read: rdx rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
00042def: RLP; mov r14, qword ptr [rbp - 0xd0] ; mov rdi, qword ptr [rbp - 0xe8] ; mov rdx, r13 ; mov rsi, r14 ; call 0x8e3dc
read: r13 r14 rip rsp 
write: r14 rdi rdx rsi rsp 
--------------------------------------------------------------------------------
00042e0c: RLP; cmp byte ptr [r14], 0x2f ; mov r13, rax ; mov rdx, rax ; je 0x42ea6
read: rax rflags 
write: r13 rdx rflags 
--------------------------------------------------------------------------------
00042e9a: RLP; mov qword ptr [rip + 0x328773], rax ; jmp 0x42d5e
read: rax 
write: 
--------------------------------------------------------------------------------
00042f40: RLP; test rax, rax ; mov rcx, rax ; jne 0x42aa5
read: rax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
00042f88: RLP; xor eax, eax ; jmp 0x42e7d
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
0004302f: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00043106: RLP; mov rbx, rax ; mov rax, qword ptr [rbp] ; cmp rax, rbx ; je 0x43147
read: rax rbx rflags 
write: rax rbx rflags 
--------------------------------------------------------------------------------
00043123: RLP; mov qword ptr [rbp], 0 ; mov edx, 1 ; mov rsi, rbx ; mov rdi, r12 ; call 0xc9e5c
read: r12 rbx rip rsp 
write: edx rdi rsi rsp 
--------------------------------------------------------------------------------
0004313f: RLP; test eax, eax ; jne 0x4317c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0004315d: RLP; test eax, eax ; mov eax, r13d ; cmovne eax, r14d ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: eax r13d r14d rflags rsp 
write: eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000431bf: RLP; test eax, eax ; jne 0x431e9
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000431e9: RLP; add rsp, 0x10 ; pop rbx ; ret
read: rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
00043297: RLP; add rsp, 0xd8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000433f5: RLP; cmp r15d, -2 ; mov qword ptr [rsp + 0x50], rax ; mov r11, qword ptr [rsp + 8] ; mov r9d, dword ptr [rsp + 0x28] ; mov r10, qword ptr [rsp + 0x30] ; mov r8, qword ptr [rsp + 0x38] ; je 0x4417c
read: r15d rax rflags 
write: r10 r11 r8 r9d rflags 
--------------------------------------------------------------------------------
00043747: RLP; mov rdx, qword ptr [rsp + 0x18] ; add rdx, qword ptr [rsp + 0x20] ; lea rsi, [rip + 0x325004] ; mov rdi, qword ptr [rsp + 0x38] ; mov rcx, r15 ; mov qword ptr [rsp + 0x1b8], rsi ; mov rsi, r15 ; sub rdx, r15 ; call 0x7aedc
read: r15 rdx rip rsi rsp 
write: rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00043777: RLP; lea edx, [r14 + 1] ; mov r8, qword ptr [rsp + 0x40] ; xor eax, eax ; test r14d, r14d ; mov rdi, qword ptr [rsp + 0x38] ; lea rsi, [rsp + 0xc0] ; cmovne eax, edx ; lea rdx, [rsp + 0xa8] ; add eax, r13d ; mov byte ptr [r8], 0 ; mov qword ptr [rsp + 0xc8], 0 ; mov dword ptr [rsp + 0xc4], eax ; movzx eax, byte ptr [rsp + 0x48] ; mov dword ptr [rsp + 0xc0], r14d ; mov dword ptr [rsp + 0xc8], 0x66
read: eax edx r13d r14d rflags 
write: eax edx r8 rdi rdx rflags rsi 
--------------------------------------------------------------------------------
0004380a: RLP; test eax, eax ; js 0x4393a
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00043b8a: RLP; mov rcx, qword ptr [rsp + 8] ; mov byte ptr [rsp + 0xa3], 0 ; cmp r15d, -2 ; mov r11, qword ptr [rsp + 0x28] ; mov r9d, dword ptr [rsp + 0x30] ; mov r10, qword ptr [rsp + 0x38] ; mov r8, qword ptr [rsp + 0x40] ; movzx eax, byte ptr [rcx + 3] ; mov byte ptr [rsp + 0x6f], al ; je 0x441c4
read: al r15d rflags 
write: eax r10 r11 r8 r9d rcx rflags 
--------------------------------------------------------------------------------
00043d4c: RLP; mov edx, dword ptr [rsp + 0x70] ; mov r8, qword ptr [rsp + 0x88] ; mov r11, qword ptr [rsp + 0x80] ; mov r10, qword ptr [rsp + 0x78] ; mov esi, dword ptr [rsp + 0x40] ; mov r9, qword ptr [rsp + 0x38] ; add edx, eax ; jmp 0x435c8
read: eax edx 
write: edx esi r10 r11 r8 r9 rflags 
--------------------------------------------------------------------------------
00043dd8: RLP; mov esi, dword ptr [rsp + 0x70] ; mov r8, qword ptr [rsp + 0x98] ; mov r11, qword ptr [rsp + 0x90] ; mov r10, qword ptr [rsp + 0x88] ; mov ecx, dword ptr [rsp + 0x80] ; mov edx, dword ptr [rsp + 0x78] ; add esi, eax ; mov r9, qword ptr [rsp + 0x38] ; jmp 0x435b8
read: eax esi 
write: ecx edx esi r10 r11 r8 r9 rflags 
--------------------------------------------------------------------------------
00043e3a: RLP; mov r8, qword ptr [rsp + 0x38] ; add r13d, eax ; mov r10, qword ptr [rsp + 0x30] ; mov r11, qword ptr [rsp + 8] ; jmp 0x43452
read: eax r13d 
write: r10 r11 r13d r8 rflags 
--------------------------------------------------------------------------------
0004421e: RLP; mov esi, dword ptr [rsp + 0x70] ; mov r9, qword ptr [rsp + 0x38] ; mov edx, dword ptr [rsp + 0x78] ; mov ecx, dword ptr [rsp + 0x80] ; mov r10, qword ptr [rsp + 0x88] ; mov r11, qword ptr [rsp + 0x90] ; add esi, eax ; mov r8, qword ptr [rsp + 0x98] ; jmp 0x435b8
read: eax esi 
write: ecx edx esi r10 r11 r8 r9 rflags 
--------------------------------------------------------------------------------
00044281: RLP; mov edx, dword ptr [rsp + 0x70] ; mov r9, qword ptr [rsp + 0x38] ; mov esi, dword ptr [rsp + 0x40] ; mov r10, qword ptr [rsp + 0x78] ; mov r11, qword ptr [rsp + 0x80] ; mov r8, qword ptr [rsp + 0x88] ; add edx, eax ; jmp 0x435c8
read: eax edx 
write: edx esi r10 r11 r8 r9 rflags 
--------------------------------------------------------------------------------
000443e1: RLP; add rsp, 0xd8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00044429: RLP; mov rdx, rax ; mov esi, 0x3d ; mov rdi, rbp ; sub rdx, rbp ; mov rbx, rax ; mov qword ptr [rsp], rax ; call 0x8886c
read: rax rbp rdx rip rsp 
write: esi rbx rdi rdx rflags rsp 
--------------------------------------------------------------------------------
00044447: RLP; mov r14, qword ptr [r12] ; test rax, rax ; cmove rax, rbx ; mov qword ptr [rsp + 0x18], rax ; test r14, r14 ; je 0x44499
read: r14 rax rbx rflags 
write: r14 rax rflags 
--------------------------------------------------------------------------------
0004447e: RLP; test eax, eax ; mov r13d, r15d ; jne 0x4448c
read: eax r15d rflags 
write: r13d rflags 
--------------------------------------------------------------------------------
00044563: RLP; test rax, rax ; mov rdx, rax ; je 0x445c4
read: rax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
00044664: RLP; test rax, rax ; mov rsi, qword ptr [rsp + 8] ; je 0x446be
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
000446b5: RLP; add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
read: eax rsp 
write: eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000446fe: RLP; lea rdi, [rip + 0xf0472] ; mov r14, rax ; call 0x3819c
read: rax rip rsp 
write: r14 rdi rsp 
--------------------------------------------------------------------------------
00044711: RLP; test r14, r14 ; mov r12, rax ; je 0x4472c
read: r14 rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
0004477b: RLP; add rsp, 0x80 ; cmp byte ptr [r12], 0 ; lea r13, [rsp + 8] ; je 0x447e0
read: rflags rsp 
write: r13 rflags rsp 
--------------------------------------------------------------------------------
000447a5: RLP; cmp rax, r12 ; mov rbp, rax ; jbe 0x447cb
read: r12 rax rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
00044813: RLP; add rsp, 0x80 ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00044842: RLP; mov rdx, qword ptr [rsp + 8] ; mov r12, rax ; cmp rdx, rbx ; je 0x447cb
read: rax rbx rdx rflags 
write: r12 rdx rflags 
--------------------------------------------------------------------------------
00044886: RLP; test rax, rax ; mov rbx, rax ; je 0x447cb
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000448a1: RLP; test eax, eax ; je 0x447cb
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000448b5: RLP; jmp 0x447cb
read: 
write: 
--------------------------------------------------------------------------------
000448eb: RLP; test eax, eax ; jne 0x448ff
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000449a6: RLP; test rax, rax ; je 0x44e3b
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000449cc: RLP; cmp rax, 0xe ; ja 0x44e3b
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00044a28: RLP; add rsp, 0x80 ; mov rbx, qword ptr [rip + 0x324bb6] ; mov r12d, 0xffffffff ; test rbx, rbx ; jne 0x44a59
read: rbx rflags rsp 
write: r12d rbx rflags rsp 
--------------------------------------------------------------------------------
00044bb9: RLP; mov r12d, eax ; shr r12d, 0x1f ; test r14d, 0x200 ; je 0x44cd0
read: eax r12d r14d rflags 
write: r12d rflags 
--------------------------------------------------------------------------------
00044cd0: RLP; cmp dword ptr [rip + 0x329a99], 0 ; je 0x44ce4
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
00044d03: RLP; add rsp, 0x80 ; mov eax, dword ptr [rip + 0x329a5c] ; test eax, eax ; jne 0x44d6c
read: eax rflags rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
00044d64: RLP; jmp 0x44990
read: 
write: 
--------------------------------------------------------------------------------
00044d8c: RLP; jmp 0x44d14
read: 
write: 
--------------------------------------------------------------------------------
00044db8: RLP; jmp 0x449ec
read: 
write: 
--------------------------------------------------------------------------------
00044dcd: RLP; or dword ptr [rip + 0x326910], 2 ; jmp 0x44990
read: 
write: rflags 
--------------------------------------------------------------------------------
00044ec4: RLP; add rsp, 0x80 ; mov rsi, r9 ; mov edi, r8d ; call 0x4460c
read: r8d r9 rip rsp 
write: edi rflags rsi rsp 
--------------------------------------------------------------------------------
00044eda: RLP; mov edx, eax ; cmp dword ptr [rip + 0x32988d], 0 ; je 0x44ef0
read: eax rflags 
write: edx rflags 
--------------------------------------------------------------------------------
00044f0f: RLP; add rsp, 0x80 ; add rsp, 8 ; mov eax, edx ; ret
read: edx rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
00044f3f: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00044f5f: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00044f7f: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00044f9f: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0004550e: RLP; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
read: rsp 
write: r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00045530: RLP; mov r8, qword ptr [rsp + 8] ; jmp 0x454e8
read: 
write: r8 
--------------------------------------------------------------------------------
000455ee: RLP; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
read: rsp 
write: r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00045610: RLP; mov r8, qword ptr [rsp + 8] ; jmp 0x455c8
read: 
write: r8 
--------------------------------------------------------------------------------
000459be: RLP; cmp qword ptr [rsp + 0x18], rax ; mov r11, qword ptr [rsp + 0x10] ; je 0x459eb
read: rax rflags 
write: r11 rflags 
--------------------------------------------------------------------------------
000459e6: RLP; mov r11, qword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x28] ; mov qword ptr [rax + r13*8], rbx ; sub r13, 1 ; mov rcx, qword ptr [r11] ; cmp r13, -1 ; jne 0x4592c
read: r13 rbx rflags 
write: r11 r13 rax rcx rflags 
--------------------------------------------------------------------------------
00045c64: RLP; test eax, eax ; mov rcx, qword ptr [rsp + 0x10] ; mov r11, qword ptr [rsp + 0x18] ; js 0x458f6
read: eax rflags 
write: r11 rcx rflags 
--------------------------------------------------------------------------------
00045c93: RLP; mov r11, qword ptr [rsp + 0x10] ; mov qword ptr [rsp + 0x48], 1 ; mov rcx, qword ptr [r11] ; jmp 0x458f6
read: 
write: r11 rcx 
--------------------------------------------------------------------------------
00045f85: RLP; mov rdi, qword ptr [rbp - 0x40] ; cmp rbx, 1 ; lea r15, [r12*8] ; mov qword ptr [rdi + r12*8], rax ; lea r13, [rdi + 8] ; jle 0x4608b
read: rax rbx rflags 
write: r13 r15 rdi rflags 
--------------------------------------------------------------------------------
00045fcf: RLP; mov qword ptr [r13 + r15], rax ; add r13, 8 ; add r12, 8 ; cmp r13, rbx ; je 0x4608b
read: r12 r13 rax rbx rflags 
write: r12 r13 rflags 
--------------------------------------------------------------------------------
0004600c: RLP; jmp 0x45fcf
read: 
write: 
--------------------------------------------------------------------------------
0004604e: RLP; mov rax, qword ptr [rbp - 0x40] ; lea r10, [rbx*8] ; mov r11, r12 ; sub r11, rbx ; lea r9, [rax + r10] ; mov rax, r13 ; add rax, r10 ; cmp rbx, r11 ; mov rdi, rax ; jle 0x461cc
read: r10 r11 r12 r13 rax rbx rflags 
write: r10 r11 r9 rax rdi rflags 
--------------------------------------------------------------------------------
00046124: RLP; mov r9, qword ptr [rbp - 0x38] ; mov rcx, rbx ; mov rdx, r14 ; mov rsi, r9 ; mov rdi, r9 ; call 0x4561c
read: r14 r9 rbx rip rsp 
write: r9 rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
0004613d: RLP; mov r10, qword ptr [rbp - 0x58] ; mov rcx, r14 ; mov r9, qword ptr [rbp - 0x38] ; mov r11, qword ptr [rbp - 0x50] ; add rcx, r10 ; add r10, r9 ; mov rsi, qword ptr [rcx] ; lea rdx, [rcx + 8] ; lea rcx, [r10 + 8] ; add rax, rsi ; cmp rsi, rax ; mov qword ptr [r10], rax ; jbe 0x4618f
read: r10 r14 r9 rax rcx rflags rsi 
write: r10 r11 r9 rax rcx rdx rflags rsi 
--------------------------------------------------------------------------------
00046241: RLP; mov rax, qword ptr [rbp - 0x50] ; mov rdx, qword ptr [rbp - 0x38] ; mov rcx, rbx ; mov rdi, rax ; mov rsi, rax ; call 0x4561c
read: rax rbx rip rsp 
write: rax rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
0004625b: RLP; mov rdx, qword ptr [rbp - 0x68] ; mov rdi, r13 ; mov rcx, qword ptr [rdx] ; lea rdx, [r13 + 8] ; add rax, rcx ; cmp rcx, rax ; mov qword ptr [r13], rax ; mov rcx, qword ptr [rbp - 0x60] ; mov rax, rbx ; ja 0x462ed
read: r13 rax rbx rcx rflags 
write: rax rcx rdi rdx rflags 
--------------------------------------------------------------------------------
00046453: RLP; mov qword ptr [rbp + r15*8], rax ; add rbp, 8 ; cmp r15, 1 ; lea r13, [r15*8] ; mov ebx, 1 ; jg 0x46498
read: r15 rax rbp rflags 
write: ebx r13 rbp rflags 
--------------------------------------------------------------------------------
00046486: RLP; add rbx, 1 ; mov qword ptr [rbp + r13], rax ; add rbp, 8 ; cmp rbx, r15 ; je 0x464c4
read: r15 rax rbp rbx rflags 
write: rbp rbx rflags 
--------------------------------------------------------------------------------
000464be: RLP; jmp 0x46486
read: 
write: 
--------------------------------------------------------------------------------
0004658e: RLP; mov r13, qword ptr [rsp + 0x10] ; mov r12, qword ptr [rsp + 8] ; lea r15, [rbp + r14*8] ; mov rdx, r14 ; mov rdi, r15 ; mov rcx, qword ptr [r13 + r14*8] ; mov rsi, r12 ; call 0x456cc
read: r12 r14 r15 rip rsp 
write: r12 r13 r15 rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000465b4: RLP; mov rdx, r14 ; mov rsi, r13 ; mov rdi, r15 ; shl rdx, 4 ; mov qword ptr [rbp + rdx], rax ; mov rcx, qword ptr [r12 + r14*8] ; mov rdx, rbx ; add rbx, r14 ; call 0x456cc
read: r13 r14 r15 rax rbx rdx rip rsp 
write: rbx rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000465d9: RLP; mov qword ptr [rbp + rbx*8], rax ; add rsp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rax rsp 
write: r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0004664b: RLP; mov rsi, qword ptr [rsp + 8] ; mov rdx, r12 ; mov rdi, r15 ; call 0x457bc
read: r12 r15 rip rsp 
write: rdi rdx rsi rsp 
--------------------------------------------------------------------------------
0004665f: RLP; test eax, eax ; mov rcx, r12 ; js 0x4696c
read: eax r12 rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
00046681: RLP; mov rsi, qword ptr [rsp + 0x10] ; mov rdx, r12 ; mov rdi, r14 ; call 0x457bc
read: r12 r14 rip rsp 
write: rdi rdx rsi rsp 
--------------------------------------------------------------------------------
00046695: RLP; test eax, eax ; mov rax, qword ptr [rsp + 0x18] ; mov rcx, r12 ; lea r8, [rbp + rax] ; js 0x46944
read: eax r12 rflags 
write: r8 rax rcx rflags 
--------------------------------------------------------------------------------
000466c7: RLP; mov r8, qword ptr [rsp + 0x30] ; mov r14, r8 ; cmp r12, 0x1f ; jg 0x468c4
read: r12 r8 rflags 
write: r14 r8 rflags 
--------------------------------------------------------------------------------
000466ee: RLP; test r12, r12 ; lea rdi, [r12 + rbx] ; jle 0x4671c
read: r12 rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
0004673d: RLP; test r15d, r15d ; mov qword ptr [rsp + 0x30], rax ; je 0x4691c
read: r15d rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00046760: RLP; mov r15, qword ptr [rsp + 0x30] ; sub r15, rax ; cmp r12, 0x1f ; jg 0x468ec
read: r12 r15 rax rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
0004678b: RLP; mov rcx, rbx ; mov rdx, r13 ; mov rsi, r14 ; mov rdi, r14 ; call 0x4561c
read: r13 r14 rbx rip rsp 
write: rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000467a0: RLP; add rax, r15 ; je 0x467ec
read: r15 rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
00046829: RLP; test rax, rax ; je 0x465de
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0004689e: RLP; jmp 0x4664b
read: 
write: 
--------------------------------------------------------------------------------
000468b8: RLP; nop dword ptr [rax] ; jmp 0x4658e
read: 
write: 
--------------------------------------------------------------------------------
000468e3: RLP; jmp 0x466f7
read: 
write: 
--------------------------------------------------------------------------------
0004690d: RLP; jmp 0x4678b
read: 
write: 
--------------------------------------------------------------------------------
00046931: RLP; mov r15, qword ptr [rsp + 0x30] ; add r15, rax ; jmp 0x46768
read: r15 rax 
write: r15 rflags 
--------------------------------------------------------------------------------
0004695d: RLP; mov r8, qword ptr [rsp + 0x30] ; mov r14, r8 ; jmp 0x466cf
read: r8 
write: r14 r8 
--------------------------------------------------------------------------------
00046986: RLP; jmp 0x46681
read: 
write: 
--------------------------------------------------------------------------------
000469b7: RLP; mov qword ptr [rbp + r12*8], rax ; add rbp, 8 ; cmp r12, 1 ; lea r13, [r12*8] ; mov ebx, 1 ; jg 0x46a00
read: r12 rax rbp rflags 
write: ebx r13 rbp rflags 
--------------------------------------------------------------------------------
000469ee: RLP; add rbx, 1 ; mov qword ptr [rbp + r13], rax ; add rbp, 8 ; cmp rbx, r12 ; je 0x46a2c
read: r12 rax rbp rbx rflags 
write: rbp rbx rflags 
--------------------------------------------------------------------------------
00046a26: RLP; jmp 0x469ee
read: 
write: 
--------------------------------------------------------------------------------
00046ad9: RLP; lea r14, [r13*8] ; mov rdx, r13 ; mov rsi, r12 ; lea r15, [r12 + r14] ; add r14, rbp ; mov rdi, r14 ; mov rcx, qword ptr [r15] ; call 0x456cc
read: r12 r13 r14 rbp rip rsp 
write: r14 r15 rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00046afd: RLP; mov rdx, r13 ; mov rsi, r12 ; mov rdi, r14 ; shl rdx, 4 ; mov qword ptr [rbp + rdx], rax ; mov rcx, qword ptr [r15] ; mov rdx, rbx ; add rbx, r13 ; call 0x456cc
read: r12 r13 r14 rax rbx rdx rip rsp 
write: rbx rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00046b21: RLP; mov qword ptr [rbp + rbx*8], rax ; add rsp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rax rsp 
write: r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00046b84: RLP; mov rax, qword ptr [rsp + 0x10] ; mov qword ptr [rsp + 0x18], rax ; mov rdx, r14 ; mov rsi, r12 ; mov rdi, r13 ; call 0x457bc
read: r12 r13 r14 rax rip rsp 
write: rax rdi rdx rsi rsp 
--------------------------------------------------------------------------------
00046ba0: RLP; test eax, eax ; mov rcx, r14 ; js 0x46e4c
read: eax r14 rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
00046bbd: RLP; cmp r14, 0x1f ; jg 0x46db4
read: r14 rflags 
write: rflags 
--------------------------------------------------------------------------------
00046bd9: RLP; test r14, r14 ; jle 0x46dd4
read: r14 rflags 
write: rflags 
--------------------------------------------------------------------------------
00046c2d: RLP; mov qword ptr [rsp + 0x10], rax ; mov rax, qword ptr [rsp + 8] ; mov rcx, rbx ; mov rdx, r15 ; lea r13, [rbp + rax] ; mov rsi, r13 ; mov rdi, r13 ; call 0x46f0c
read: r13 r15 rax rbx rip rsp 
write: r13 rax rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
00046c51: RLP; sub qword ptr [rsp + 0x10], rax ; cmp r14, 0x1f ; jle 0x46e2c
read: r14 rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00046c7a: RLP; mov rcx, rbx ; mov rdx, r15 ; mov rsi, r13 ; mov rdi, r13 ; call 0x4561c
read: r13 r15 rbx rip rsp 
write: rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
00046c8f: RLP; add rax, qword ptr [rsp + 0x10] ; je 0x46cdc
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
00046d18: RLP; test rax, rax ; je 0x46b26
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00046d83: RLP; mov rax, qword ptr [rsp + 0x10] ; mov qword ptr [rsp + 0x18], rax ; jmp 0x46b8e
read: rax 
write: rax 
--------------------------------------------------------------------------------
00046da8: RLP; jmp 0x46ad9
read: 
write: 
--------------------------------------------------------------------------------
00046dcf: RLP; jmp 0x46be2
read: 
write: 
--------------------------------------------------------------------------------
00046df9: RLP; mov qword ptr [rsp + 0x10], rax ; mov rax, qword ptr [rsp + 8] ; mov rcx, rbx ; mov rdx, r15 ; lea r13, [rbp + rax] ; mov rsi, r13 ; mov rdi, r13 ; call 0x46f0c
read: r13 r15 rax rbx rip rsp 
write: r13 rax rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
00046e1d: RLP; sub qword ptr [rsp + 0x10], rax ; nop word ptr cs:[rax + rax] ; mov rdx, r14 ; mov rsi, r12 ; mov rdi, r15 ; call 0x4698c
read: r12 r14 r15 rax rip rsp 
write: rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00046e3e: RLP; jmp 0x46c7a
read: 
write: 
--------------------------------------------------------------------------------
00046e5e: RLP; jmp 0x46bbd
read: 
write: 
--------------------------------------------------------------------------------
00046ea2: RLP; leave ; ret
read: rbp rsp 
write: rbp rsp 
--------------------------------------------------------------------------------
00046eb5: RLP; leave ; nop word ptr [rax + rax] ; ret
read: rbp rsp 
write: rbp rsp 
--------------------------------------------------------------------------------
00046ed6: RLP; leave ; ret
read: rbp rsp 
write: rbp rsp 
--------------------------------------------------------------------------------
00046efc: RLP; leave ; ret
read: rbp rsp 
write: rbp rsp 
--------------------------------------------------------------------------------
00047301: RLP; cmp r15, rbx ; jbe 0x473ad
read: r15 rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
000476a2: RLP; mov rdi, rax ; call 0x38aec
read: rax rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000476ae: RLP; hlt ; nop word ptr cs:[rax + rax] ; nop dword ptr [rax] ; nop dword ptr [rax - 0x56] ; lea rdx, [rip + 0x324029] ; mov rax, rdi ; test rdi, rdi ; movabs rcx, 0x7974742f7665642f ; cmove rax, rdx ; mov qword ptr [rax], rcx ; mov byte ptr [rax + 8], 0 ; ret
read: rax rcx rdi rdx rflags 
write: rax rcx rdx rflags 
--------------------------------------------------------------------------------
00047704: RLP; lea rdx, [rsp + 0x40] ; lea rsi, [rsp + 0x10] ; lea r8, [rsp + 8] ; mov ecx, 0x400 ; mov edi, eax ; call 0xb207c
read: eax rip rsp 
write: ecx edi r8 rdx rsi rsp 
--------------------------------------------------------------------------------
00047723: RLP; test eax, eax ; jne 0x47764
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00047757: RLP; add rsp, 0x440 ; pop rbx ; ret
read: rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
00047876: RLP; lea rsi, [rsp + 0x20] ; cmp rax, rsi ; jae 0x478b5
read: rax rflags rsi 
write: rflags rsi 
--------------------------------------------------------------------------------
00047930: RLP; lea rdx, [rax - 1] ; mov r12, rax ; mov eax, 0xffffffff ; cmp rdx, -3 ; ja 0x4790d
read: rax rdx rflags 
write: eax r12 rdx rflags 
--------------------------------------------------------------------------------
00047959: RLP; mov rcx, qword ptr [rbx + 0x28] ; sub rcx, r12 ; mov qword ptr [rbx + 0x28], rcx ; jmp 0x478f8
read: r12 rcx 
write: rcx rflags 
--------------------------------------------------------------------------------
00047976: RLP; jmp 0x4790d
read: 
write: 
--------------------------------------------------------------------------------
00047a16: RLP; and r12d, 0x8000 ; mov qword ptr [rbp - 0x4b8], rax ; mov qword ptr [rbp - 0x4a0], rax ; mov dword ptr [rbp - 0x4ac], 0 ; je 0x47abc
read: r12d rax rflags 
write: r12d rflags 
--------------------------------------------------------------------------------
00047a5c: RLP; cmp r12, rax ; mov dword ptr [rbp - 0x4a8], 0xffffffff ; je 0x47c24
read: r12 rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00047b2b: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rbx + 0x88] ; mov qword ptr [rdx + 8], r9 ; add dword ptr [rdx + 4], 1 ; jmp 0x47a3b
read: r9 rsp 
write: rdx rflags rsp 
--------------------------------------------------------------------------------
00047b5e: RLP; lea rsp, [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rsp 
--------------------------------------------------------------------------------
00047ba3: RLP; add rsp, 0x80 ; mov eax, dword ptr [rbp - 0x4ac] ; test eax, eax ; je 0x47a96
read: eax rflags rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
00047bdb: RLP; jmp 0x47a96
read: 
write: 
--------------------------------------------------------------------------------
00047c0f: RLP; test dword ptr [rbx], 0x8000 ; je 0x47ae5
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
00047e7f: RLP; cmp rax, -1 ; mov r13, rax ; je 0x47f28
read: rax rflags 
write: r13 rflags 
--------------------------------------------------------------------------------
00047ec2: RLP; mov rcx, qword ptr [rbp - 0x558] ; cmp rcx, rax ; jne 0x47f28
read: rax rcx rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
00047f1f: RLP; cmp r13, rax ; je 0x493d5
read: r13 rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00047f61: RLP; jmp 0x47a6f
read: 
write: 
--------------------------------------------------------------------------------
00047f76: RLP; jmp 0x47f43
read: 
write: 
--------------------------------------------------------------------------------
00047fe9: RLP; cmp rax, -1 ; mov rcx, rax ; je 0x480aa
read: rax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
00048033: RLP; mov r8, qword ptr [rbp - 0x500] ; cmp r8, rax ; jne 0x480aa
read: r8 rax rflags 
write: r8 rflags 
--------------------------------------------------------------------------------
0004809e: RLP; mov rcx, qword ptr [rbp - 0x500] ; cmp rcx, rax ; je 0x480b6
read: rax rcx rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
00048117: RLP; mov rcx, qword ptr [rbp - 0x4a8] ; cmp rcx, rax ; jne 0x480aa
read: rax rcx rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
0004818c: RLP; mov ecx, dword ptr [rbp - 0x4a8] ; mov qword ptr [rbp - 0x4a0], rax ; test ecx, ecx ; js 0x484fa
read: ecx rax rflags 
write: ecx rflags 
--------------------------------------------------------------------------------
000481c2: RLP; mov rdx, qword ptr [rbp - 0x4a0] ; mov qword ptr [rbp - 0x4c0], 0 ; mov ecx, dword ptr [rbp - 0x4a8] ; mov rsi, rdx ; sub rsi, r13 ; cmp rax, rsi ; jne 0x47f2f
read: r13 rax rdx rflags rsi 
write: ecx rdx rflags rsi 
--------------------------------------------------------------------------------
0004845c: RLP; mov rcx, qword ptr [rbp - 0x4c8] ; cmp rcx, rax ; jne 0x47f2f
read: rax rcx rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
000484c3: RLP; cmp r13, rax ; jne 0x47f2f
read: r13 rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0004852f: RLP; mov ecx, dword ptr [rbp - 0x4a8] ; jmp 0x48163
read: 
write: ecx 
--------------------------------------------------------------------------------
00048593: RLP; mov rcx, qword ptr [rbp - 0x4c8] ; cmp rcx, rax ; jne 0x47f2f
read: rax rcx rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
00048650: RLP; mov r8, qword ptr [rbp - 0x4c8] ; cmp r8, rax ; jne 0x47f2f
read: r8 rax rflags 
write: r8 rflags 
--------------------------------------------------------------------------------
000486c8: RLP; add eax, 1 ; jne 0x48602
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00048747: RLP; cmp r13, rax ; jne 0x47f2f
read: r13 rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000487fb: RLP; cmp r13, rax ; jne 0x47f2f
read: r13 rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0004887d: RLP; mov rdx, qword ptr [r12 + 0x20] ; sub rdx, qword ptr [r12 + 0x18] ; mov qword ptr [rbp - 0x4c0], 0 ; cmp rax, rdx ; jne 0x47f2f
read: rax rdx rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
00048b05: RLP; cmp eax, -2 ; je 0x48b54
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00048c9f: RLP; test eax, eax ; mov r8, qword ptr [rbp - 0x4c0] ; jne 0x48a45
read: eax rflags 
write: r8 rflags 
--------------------------------------------------------------------------------
00048cc1: RLP; test rax, rax ; mov qword ptr [rbp - 0x4c0], rax ; mov r8, qword ptr [rbp - 0x590] ; je 0x47f2f
read: rax rflags 
write: r8 rflags 
--------------------------------------------------------------------------------
00048d54: RLP; jmp 0x4883b
read: 
write: 
--------------------------------------------------------------------------------
00048d65: RLP; add eax, 1 ; jne 0x487bf
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00048da8: RLP; add eax, 1 ; jne 0x487bf
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00048fe6: RLP; mov rcx, qword ptr [rbp - 0x558] ; cmp rcx, rax ; jne 0x47f2f
read: rax rcx rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
0004904a: RLP; cmp r13, rax ; jne 0x47f2f
read: r13 rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000490d3: RLP; cmp qword ptr [rbp - 0x4e0], 0 ; mov qword ptr [rbp - 0x580], rax ; mov r9d, dword ptr [rbp - 0x598] ; jne 0x4b279
read: rax rflags 
write: r9d rflags 
--------------------------------------------------------------------------------
0004924b: RLP; cmp r12, rax ; jne 0x47f2f
read: r12 rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000492ad: RLP; cmp r13, rax ; jne 0x47f2f
read: r13 rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00049311: RLP; cmp r13, rax ; jne 0x47f2f
read: r13 rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000493c7: RLP; add eax, 1 ; jne 0x4918a
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0004941f: RLP; cmp r13, rax ; jne 0x47f28
read: r13 rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000494eb: RLP; mov dword ptr [rbp - 0x510], 0 ; mov r13, rax ; test r13, r13 ; je 0x4980b
read: r13 rax rflags 
write: r13 rflags 
--------------------------------------------------------------------------------
00049539: RLP; mov dword ptr [rbp - 0x4c8], 0 ; mov r9, rax ; mov r10d, dword ptr [rbp - 0x500] ; mov dword ptr [rbp - 0x508], r9d ; sub r10d, r9d ; js 0x496ff
read: r10d r9d rax rflags 
write: r10d r9 rflags 
--------------------------------------------------------------------------------
00049597: RLP; mov rcx, qword ptr [rbp - 0x500] ; cmp rcx, rax ; jne 0x47f2f
read: rax rcx rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
00049610: RLP; mov r9, qword ptr [rbp - 0x500] ; mov r10d, dword ptr [rbp - 0x510] ; cmp r9, rax ; jne 0x47f2f
read: r9 rax rflags 
write: r10d r9 rflags 
--------------------------------------------------------------------------------
00049693: RLP; mov rcx, qword ptr [rbp - 0x4a8] ; cmp rcx, rax ; jne 0x47f2f
read: rax rcx rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
000496f4: RLP; mov ecx, dword ptr [rbp - 0x4a8] ; jmp 0x48155
read: 
write: ecx 
--------------------------------------------------------------------------------
0004972a: RLP; mov r9, qword ptr [rbp - 0x4c8] ; cmp r9, rax ; jne 0x47f2f
read: r9 rax rflags 
write: r9 rflags 
--------------------------------------------------------------------------------
000497f9: RLP; cmp rax, -1 ; mov r9, rax ; jne 0x49546
read: rax rflags 
write: r9 rflags 
--------------------------------------------------------------------------------
00049853: RLP; test eax, eax ; mov dword ptr [rbp - 0x4e8], eax ; jns 0x49493
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000499e4: RLP; mov rcx, qword ptr [r15 + 0x20] ; add r12, rax ; mov qword ptr [rbp - 0x4a0], rcx ; cmp byte ptr [rcx], 0 ; je 0x49a7c
read: r12 rax rcx rflags 
write: r12 rcx rflags 
--------------------------------------------------------------------------------
00049a61: RLP; mov r10, qword ptr [rbp - 0x4d0] ; mov rbx, rax ; mov rcx, qword ptr [rbp - 0x4d8] ; mov r13, r10 ; jmp 0x499c4
read: r10 rax 
write: r10 r13 rbx rcx 
--------------------------------------------------------------------------------
00049b2e: RLP; xor r8d, r8d ; cmp qword ptr [rbp - 0x530], 0 ; mov r13, qword ptr [rbp - 0x4d0] ; mov r9, qword ptr [rbp - 0x558] ; je 0x49c20
read: r8d rflags 
write: r13 r8d r9 rflags 
--------------------------------------------------------------------------------
00049bfe: RLP; jmp 0x49b9b
read: 
write: 
--------------------------------------------------------------------------------
00049eb9: RLP; mov dword ptr [rbp - 0x560], 0 ; mov r12, rax ; mov ecx, dword ptr [rbp - 0x558] ; mov dword ptr [rbp - 0x568], r12d ; sub ecx, r12d ; js 0x4a033
read: ecx r12d rax rflags 
write: ecx r12 rflags 
--------------------------------------------------------------------------------
00049f0d: RLP; mov r8, qword ptr [rbp - 0x558] ; cmp r8, rax ; jne 0x47f2f
read: r8 rax rflags 
write: r8 rflags 
--------------------------------------------------------------------------------
00049f74: RLP; cmp r12, rax ; mov ecx, dword ptr [rbp - 0x558] ; jne 0x47f2f
read: r12 rax rflags 
write: ecx rflags 
--------------------------------------------------------------------------------
00049fda: RLP; cmp r12, rax ; jne 0x47f2f
read: r12 rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0004a02e: RLP; jmp 0x4882d
read: 
write: 
--------------------------------------------------------------------------------
0004a057: RLP; cmp r12, rax ; jne 0x47f2f
read: r12 rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0004a125: RLP; cmp rax, -1 ; mov r12, rax ; jne 0x49ec6
read: rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
0004a176: RLP; test eax, eax ; jne 0x4a0e9
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0004a18a: RLP; test rax, rax ; mov r13, rax ; je 0x47f2f
read: rax rflags 
write: r13 rflags 
--------------------------------------------------------------------------------
0004a377: RLP; mov rdx, rax ; jmp 0x4a3ad
read: rax 
write: rdx 
--------------------------------------------------------------------------------
0004a45d: RLP; add eax, 1 ; mov rdx, qword ptr [rbp - 0x560] ; jne 0x4a39c
read: eax rflags 
write: eax rdx rflags 
--------------------------------------------------------------------------------
0004a483: RLP; add eax, 1 ; jne 0x4a341
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0004a4a2: RLP; add eax, 1 ; jne 0x4a43e
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0004a4bd: RLP; add eax, 1 ; jne 0x4a2b4
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0004a4ef: RLP; mov rdx, rax ; jmp 0x4a50f
read: rax 
write: rdx 
--------------------------------------------------------------------------------
0004a544: RLP; add eax, 1 ; mov rdx, qword ptr [rbp - 0x560] ; jne 0x4a4fe
read: eax rflags 
write: eax rdx rflags 
--------------------------------------------------------------------------------
0004a564: RLP; add eax, 1 ; jne 0x4a3d7
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0004a583: RLP; add eax, 1 ; jne 0x4a30c
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0004a5e3: RLP; add eax, 1 ; jne 0x4a2db
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0004a602: RLP; add eax, 1 ; jne 0x4a2b4
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0004a621: RLP; add eax, 1 ; jne 0x4a260
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0004a64b: RLP; add eax, 1 ; jne 0x4a239
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0004a66a: RLP; add eax, 1 ; jne 0x4a289
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0004a69d: RLP; cmp rax, -1 ; mov r12, rax ; je 0x47f2f
read: rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
0004a706: RLP; jmp 0x49ec6
read: 
write: 
--------------------------------------------------------------------------------
0004a741: RLP; test eax, eax ; mov rdx, qword ptr [rbp - 0x560] ; mov r10, qword ptr [rbp - 0x568] ; jne 0x4a6d2
read: eax rflags 
write: r10 rdx rflags 
--------------------------------------------------------------------------------
0004a771: RLP; test rax, rax ; mov r13, rax ; je 0x47f2f
read: rax rflags 
write: r13 rflags 
--------------------------------------------------------------------------------
0004a7c9: RLP; jmp 0x49958
read: 
write: 
--------------------------------------------------------------------------------
0004a851: RLP; mov r10, qword ptr [rbp - 0x558] ; mov r8, qword ptr [rbp - 0x560] ; mov rcx, qword ptr [rbp - 0x568] ; mov r9, qword ptr [rbp - 0x570] ; jmp 0x49ce4
read: 
write: r10 r8 r9 rcx 
--------------------------------------------------------------------------------
0004a885: RLP; test eax, eax ; mov r9, qword ptr [rbp - 0x4c0] ; jne 0x49ad2
read: eax rflags 
write: r9 rflags 
--------------------------------------------------------------------------------
0004a8a7: RLP; test rax, rax ; mov qword ptr [rbp - 0x4f0], rax ; je 0x4a909
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0004a95e: RLP; test eax, eax ; js 0x47f2f
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0004ab01: RLP; jmp 0x4a95e
read: 
write: 
--------------------------------------------------------------------------------
0004ab83: RLP; jmp 0x4a95e
read: 
write: 
--------------------------------------------------------------------------------
0004acc2: RLP; jmp 0x4a95e
read: 
write: 
--------------------------------------------------------------------------------
0004ad36: RLP; test eax, eax ; mov dword ptr [rbp - 0x4e8], eax ; jns 0x4acda
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0004aeaa: RLP; mov dword ptr [rbp - 0x568], 0 ; mov r13, rax ; jmp 0x49e78
read: rax 
write: r13 
--------------------------------------------------------------------------------
0004af47: RLP; add eax, 1 ; jne 0x48f2a
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0004afa2: RLP; mov rcx, qword ptr [rbp - 0x558] ; cmp rcx, rax ; jne 0x47f2f
read: rax rcx rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
0004b022: RLP; add eax, 1 ; jne 0x4920c
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0004b041: RLP; add eax, 1 ; jne 0x491dd
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0004b060: RLP; add eax, 1 ; jne 0x4918a
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0004b0c3: RLP; mov r9d, dword ptr [rbp - 0x598] ; mov qword ptr [rbp - 0x580], rax ; jmp 0x490fc
read: rax 
write: r9d 
--------------------------------------------------------------------------------
0004b0e7: RLP; add eax, 1 ; jne 0x48f2a
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0004b1ab: RLP; add eax, 1 ; jne 0x48f2a
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0004b24c: RLP; add eax, 1 ; jne 0x48fa5
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0004b26b: RLP; add eax, 1 ; jne 0x48f76
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0004b2a3: RLP; mov r9d, dword ptr [rbp - 0x598] ; mov qword ptr [rbp - 0x580], rax ; jmp 0x490ef
read: rax 
write: r9d 
--------------------------------------------------------------------------------
0004b2c7: RLP; add eax, 1 ; jne 0x4918a
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0004b47f: RLP; cmp qword ptr [rbp - 0x4e0], 0 ; mov qword ptr [rbp - 0x510], rax ; mov r10d, dword ptr [rbp - 0x540] ; jne 0x4b7b4
read: rax rflags 
write: r10d rflags 
--------------------------------------------------------------------------------
0004b5fe: RLP; mov rcx, qword ptr [rbp - 0x4c8] ; cmp rcx, rax ; jne 0x47f2f
read: rax rcx rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
0004b667: RLP; cmp r13, rax ; jne 0x47f2f
read: r13 rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0004b6e1: RLP; cmp r13, rax ; jne 0x47f2f
read: r13 rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0004b769: RLP; add eax, 1 ; jne 0x4b536
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0004b7a1: RLP; mov r10d, dword ptr [rbp - 0x548] ; mov qword ptr [rbp - 0x510], rax ; jmp 0x4b4a8
read: rax 
write: r10d 
--------------------------------------------------------------------------------
0004b7e5: RLP; mov r10d, dword ptr [rbp - 0x548] ; mov qword ptr [rbp - 0x510], rax ; jmp 0x4b49b
read: rax 
write: r10d 
--------------------------------------------------------------------------------
0004b812: RLP; add eax, 1 ; mov r9d, dword ptr [rbp - 0x500] ; jne 0x48414
read: eax rflags 
write: eax r9d rflags 
--------------------------------------------------------------------------------
0004b83f: RLP; add eax, 1 ; mov r9d, dword ptr [rbp - 0x500] ; jne 0x483e5
read: eax rflags 
write: eax r9d rflags 
--------------------------------------------------------------------------------
0004b896: RLP; add eax, 1 ; mov r9d, dword ptr [rbp - 0x500] ; jne 0x48399
read: eax rflags 
write: eax r9d rflags 
--------------------------------------------------------------------------------
0004b8ee: RLP; add eax, 1 ; mov r9d, dword ptr [rbp - 0x500] ; jne 0x48399
read: eax rflags 
write: eax r9d rflags 
--------------------------------------------------------------------------------
0004b916: RLP; add eax, 1 ; jne 0x4b5b8
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0004b935: RLP; add eax, 1 ; jne 0x4b589
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0004b954: RLP; add eax, 1 ; jne 0x4b536
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0004b9c2: RLP; mov rcx, qword ptr [rbp - 0x500] ; cmp rcx, rax ; jne 0x47f2f
read: rax rcx rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
0004ba5e: RLP; add eax, 1 ; jne 0x4b536
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0004ba84: RLP; add eax, 1 ; mov r9d, dword ptr [rbp - 0x500] ; jne 0x48399
read: eax rflags 
write: eax r9d rflags 
--------------------------------------------------------------------------------
0004bad5: RLP; add eax, 1 ; jne 0x4b407
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0004bc3d: RLP; mov dword ptr [rbp - 0x508], eax ; add eax, 1 ; je 0x484e7
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0004bd89: RLP; cmp eax, -1 ; je 0x484e7
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0004bdbb: RLP; test eax, eax ; jne 0x4bc96
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0004bdcf: RLP; test rax, rax ; mov qword ptr [rbp - 0x4c0], rax ; je 0x47f2f
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0004beea: RLP; add eax, 1 ; jne 0x4be61
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0004c021: RLP; test eax, eax ; mov rdx, qword ptr [rbp - 0x4c8] ; jne 0x497c1
read: eax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
0004c043: RLP; test rax, rax ; mov r13, rax ; je 0x47f2f
read: rax rflags 
write: r13 rflags 
--------------------------------------------------------------------------------
0004c08a: RLP; cmp rax, -1 ; mov r9, rax ; je 0x47f2f
read: rax rflags 
write: r9 rflags 
--------------------------------------------------------------------------------
0004c0fe: RLP; mov r9, qword ptr [rbp - 0x508] ; jmp 0x49546
read: 
write: r9 
--------------------------------------------------------------------------------
0004c16b: RLP; test eax, eax ; mov rdx, qword ptr [rbp - 0x4c8] ; mov r9, qword ptr [rbp - 0x508] ; mov r10, qword ptr [rbp - 0x510] ; jne 0x4c0c3
read: eax rflags 
write: r10 r9 rdx rflags 
--------------------------------------------------------------------------------
0004c1a9: RLP; test rax, rax ; mov r13, rax ; je 0x47f2f
read: rax rflags 
write: r13 rflags 
--------------------------------------------------------------------------------
0004c3de: RLP; test eax, eax ; js 0x47f2f
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0004c5d3: RLP; test eax, eax ; jns 0x4c3e6
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0004c9d0: RLP; cmp eax, -1 ; je 0x484e7
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0004ca13: RLP; test eax, eax ; jne 0x4c800
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0004ca27: RLP; test rax, rax ; mov qword ptr [rbp - 0x4c0], rax ; je 0x47f2f
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0004ca57: RLP; cmp eax, 0x7fffffde ; mov dword ptr [rbp - 0x500], eax ; ja 0x484e7
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0004cb13: RLP; test eax, eax ; jne 0x4ca88
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0004cb27: RLP; test rax, rax ; mov qword ptr [rbp - 0x4c0], rax ; je 0x47f2f
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0004cdc5: RLP; mov r13d, dword ptr [rip + 0x3219a0] ; mov r12d, eax ; test r13d, r13d ; jne 0x4cf1c
read: eax r13d rflags 
write: r12d r13d rflags 
--------------------------------------------------------------------------------
0004ce35: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rbx + 0x88] ; mov qword ptr [rdx + 8], r8 ; add dword ptr [rdx + 4], 1 ; mov rsi, qword ptr [rsp + 0x40] ; mov rbp, qword ptr [rsp + 0x48] ; sub rbp, rsi ; test ebp, ebp ; jle 0x4ce7b
read: ebp r8 rbp rflags rsi rsp 
write: rbp rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0004ce70: RLP; cmp ebp, eax ; mov eax, 0xffffffff ; cmovne r12d, eax ; test dword ptr [rbx], 0x8000 ; je 0x4ceac
read: eax ebp r12d rflags 
write: eax r12d rflags 
--------------------------------------------------------------------------------
0004cee8: RLP; add rsp, 0x80 ; test r13d, r13d ; je 0x4ce88
read: r13d rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0004cf13: RLP; jmp 0x4ce88
read: 
write: 
--------------------------------------------------------------------------------
0004cf43: RLP; jmp 0x4cde8
read: 
write: 
--------------------------------------------------------------------------------
0004cf6d: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0004cfcc: RLP; test rax, rax ; je 0x4cfe5
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0004d00d: RLP; mov rdx, qword ptr [rbx + 0x20] ; mov rcx, qword ptr [rbx + 0x18] ; mov rsi, qword ptr [rbx + 8] ; sub rcx, rdx ; test rdx, rdx ; mov qword ptr [rsi + rcx*8], rax ; mov rbp, qword ptr [rsi] ; mov qword ptr [rbx + 0x18], rdx ; je 0x4d057
read: rax rcx rdx rflags 
write: rbp rcx rdx rflags rsi 
--------------------------------------------------------------------------------
0004d091: RLP; mov qword ptr [rbx], rax ; add rsp, 8 ; add ebp, 0x30 ; pop rbx ; mov eax, ebp ; pop rbp ; ret
read: ebp rax rsp 
write: eax ebp rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0004d2db: RLP; test eax, eax ; fld xword ptr [rbp - 0xc0] ; je 0x4d4bc
read: eax rflags 
write: fpsw rflags 
--------------------------------------------------------------------------------
0004d35d: RLP; test eax, eax ; je 0x4d484
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0004d410: RLP; cmp rax, r12 ; jne 0x4da0c
read: r12 rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0004d495: RLP; test eax, eax ; je 0x4d7ac
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0004d4d0: RLP; test eax, eax ; fld xword ptr [rbp - 0xc0] ; je 0x4d99c
read: eax rflags 
write: fpsw rflags 
--------------------------------------------------------------------------------
0004d61a: RLP; mov ecx, dword ptr [rbp - 0xa8] ; cmp rax, r12 ; jne 0x4da0c
read: r12 rax rflags 
write: ecx rflags 
--------------------------------------------------------------------------------
0004d705: RLP; mov ecx, dword ptr [rbp - 0xa8] ; jmp 0x4d620
read: 
write: ecx 
--------------------------------------------------------------------------------
0004d71d: RLP; jmp 0x4d410
read: 
write: 
--------------------------------------------------------------------------------
0004d7e2: RLP; mov r13d, eax ; mov qword ptr [rbp - 0x58], rax ; shl r13d, 6 ; sub r13d, 0x34 ; mov r8d, dword ptr [rbp - 0x48] ; mov qword ptr [rbp - 0x50], 0 ; mov edx, r8d ; sar edx, 0x1f ; mov ecx, edx ; xor ecx, r8d ; sub ecx, edx ; add ecx, 0x3f ; sar ecx, 6 ; add ecx, 4 ; movsxd rcx, ecx
read: eax ecx edx r13d r8d rax 
write: ecx edx r13d r8d rcx rflags 
--------------------------------------------------------------------------------
0004d913: RLP; cmp rbx, qword ptr [rbp - 0x58] ; jl 0x4db24
read: rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
0004d97d: RLP; mov rdx, qword ptr [r15 + 8] ; add rdx, qword ptr [rbp - 0x50] ; lea rbx, [rdx - 1] ; sub rdx, 2 ; test rax, rax ; cmove rbx, rdx ; jmp 0x4d913
read: rax rbx rdx rflags 
write: rbx rdx rflags 
--------------------------------------------------------------------------------
0004d9cd: RLP; mov r13d, eax ; mov qword ptr [rbp - 0x58], rax ; shl r13d, 6 ; sub r13d, 0x3f ; jmp 0x4d7f1
read: eax r13d rax 
write: r13d rflags 
--------------------------------------------------------------------------------
0004d9f8: RLP; mov edx, dword ptr [rbp - 0xc0] ; add eax, 1 ; sete al ; test al, al ; je 0x4d57a
read: al eax rflags 
write: al eax edx rflags 
--------------------------------------------------------------------------------
0004dac3: RLP; mov ecx, dword ptr [rbp - 0x48] ; lea esi, [rcx + r13] ; lea edx, [rsi + 0x3f] ; test esi, esi ; cmovns edx, esi ; sar edx, 6 ; movsxd rdx, edx ; add rdx, qword ptr [rbp - 0x58] ; test rax, rax ; mov qword ptr [rbp - 0x58], rdx ; je 0x4daf5
read: edx esi rax rdx rflags 
write: ecx edx esi rdx rflags 
--------------------------------------------------------------------------------
0004db18: RLP; test eax, eax ; js 0x4d923
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0004db41: RLP; mov rdx, qword ptr [rbp - 0x50] ; mov rax, qword ptr [rbp - 0x70] ; bsr rax, qword ptr [rax + rdx*8 - 8] ; mov ecx, edx ; shl ecx, 6 ; lea r13d, [rcx - 0x81] ; mov ecx, r12d ; xor rax, 0x3f ; sub r13d, eax ; mov eax, 1 ; shl eax, cl ; or dword ptr [rbp - 0xc0], eax ; jmp 0x4d927
read: cl eax ecx edx r12d r13d rax 
write: eax ecx r13d rax rdx rflags 
--------------------------------------------------------------------------------
0004dc5c: RLP; mov rdi, qword ptr [rbp - 0x60] ; mov r10, qword ptr [rbp - 0xc0] ; movsxd r13, r13d ; mov rdx, qword ptr [rbp - 0x58] ; sub qword ptr [rbp - 0x50], r13 ; lea rsi, [rdi + r10] ; sub rdx, r12 ; mov ecx, r15d ; call 0x45dcc
read: r12 r13 r13d r15d rdx rip rsp 
write: ecx r10 r13 rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0004dc85: RLP; mov rdx, qword ptr [rbp - 0x58] ; mov rcx, qword ptr [rbp - 0x60] ; mov rax, rdx ; sub rdx, r13 ; sub rax, r12 ; cmp qword ptr [rcx + rax*8 - 8], 0 ; cmove rax, rdx ; mov qword ptr [rbp - 0x58], rax ; nop dword ptr [rax + rax] ; mov rax, qword ptr [rbp - 0xa8] ; mov rdx, qword ptr [rip + 0x31b262] ; mov edi, dword ptr [rax + 4] ; mov eax, dword ptr [rax + 8] ; mov rdx, qword ptr fs:[rdx] ; movsxd rcx, eax
read: eax r12 r13 rax rdx rflags 
write: eax edi rax rcx rdx rflags 
--------------------------------------------------------------------------------
0004dd9b: RLP; mov dword ptr [rbp - 0x110], eax ; add eax, 1 ; cdqe ; add qword ptr [rbp - 0x120], rax ; mov rdi, qword ptr [rbp - 0x120] ; movabs rax, 0x3ffffffffffffffc ; cmp rdi, rax ; ja 0x4f449
read: eax rax rdi rflags 
write: eax rax rdi rflags 
--------------------------------------------------------------------------------
0004de90: RLP; mov dword ptr [r12 + rbx*4 + 8], eax ; add rbx, 1 ; cmp r15d, ebx ; jg 0x4de84
read: eax ebx r15d rbx rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
0004df4f: RLP; mov dword ptr [r15 - 4], eax ; cmp eax, 0x30 ; jne 0x4df14
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0004dfbc: RLP; cmp eax, 0x35 ; mov edx, dword ptr [rbp - 0xc8] ; je 0x4dfd2
read: eax rflags 
write: edx rflags 
--------------------------------------------------------------------------------
0004e1fc: RLP; cmp rax, r13 ; je 0x4f0c8
read: r13 rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0004e223: RLP; mov eax, 0xffffffff ; jmp 0x4d62d
read: 
write: eax 
--------------------------------------------------------------------------------
0004e251: RLP; mov rdx, qword ptr [rbp - 0x58] ; lea rcx, [rdx + 1] ; mov qword ptr [rbp - 0x58], rcx ; mov rcx, qword ptr [rbp - 0x60] ; mov qword ptr [rcx + rdx*8], rax ; mov dword ptr [rbp - 0x48], 0 ; jmp 0x4dcac
read: rax rcx 
write: rcx rdx 
--------------------------------------------------------------------------------
0004e325: RLP; mov rdi, qword ptr [rbp - 0xf8] ; mov qword ptr [rbp - 0xd0], rax ; mov r9d, dword ptr [rbp - 0xd8] ; test rdi, rdi ; je 0x4f292
read: rax rdi rflags 
write: r9d rdi rflags 
--------------------------------------------------------------------------------
0004e34c: RLP; mov rsi, rax ; mov qword ptr [rbp - 0xe0], rax ; movsxd rax, dword ptr [rbp - 0x110] ; mov r9d, dword ptr [rbp - 0xd8] ; imul rax, rsi ; imul r13, qword ptr [rbp - 0x120] ; mov rsi, qword ptr [rbp - 0xd0] ; cmp qword ptr [rbp - 0x140], 0 ; lea rdx, [rsi + r13 + 2] ; lea r14, [rdx + rax] ; jne 0x4f5f3
read: r13 rax rflags rsi 
write: r13 r14 r9d rax rdx rflags rsi 
--------------------------------------------------------------------------------
0004e426: RLP; mov rdi, rax ; jmp 0x4e3fa
read: rax 
write: rdi 
--------------------------------------------------------------------------------
0004e616: RLP; mov dword ptr [rbp - 0x110], eax ; jmp 0x4e0cf
read: eax 
write: 
--------------------------------------------------------------------------------
0004e702: RLP; mov rax, qword ptr [rbp - 0xd8] ; mov r8, qword ptr [rbp - 0xc0] ; mov r11, -4 ; mov qword ptr [rbp - 0xc0], r15 ; mov r15d, dword ptr [rbp - 0xb0] ; movsx r9d, byte ptr [rax] ; lea r8, [r12 + r8 - 4] ; mov r10, rax ; nop dword ptr [rax] ; lea edi, [r9 - 1] ; mov rsi, r11 ; mov edx, r13d ; lea rax, [rdi*4] ; sub rsi, rax ; mov rax, r8
read: r11 r13d r15 r8 rax rsi 
write: edi edx r10 r11 r15d r8 r9d rax rflags rsi 
--------------------------------------------------------------------------------
0004e90d: RLP; mov rdi, rax ; jmp 0x4e3fa
read: rax 
write: rdi 
--------------------------------------------------------------------------------
0004e9e3: RLP; mov r8, qword ptr [rbp - 0xc8] ; mov r9d, dword ptr [rbp - 0xd0] ; cmp r8, rax ; jne 0x4e205
read: r8 rax rflags 
write: r8 r9d rflags 
--------------------------------------------------------------------------------
0004ea57: RLP; mov rdx, rax ; mov eax, dword ptr [rbp - 0xc0] ; add eax, r12d ; cmp rdx, r13 ; jne 0x4e205
read: eax r12d r13 rax rdx rflags 
write: eax rdx rflags 
--------------------------------------------------------------------------------
0004ea86: RLP; mov rdx, qword ptr [rbp - 0x58] ; mov r10d, dword ptr [rbp - 0x48] ; lea r13, [rip + 0xdd17f] ; mov r15d, 0xc ; mov dword ptr [rbp - 0xc0], 0 ; mov qword ptr [rbp - 0xc8], rbx ; lea rcx, [rdx + 1] ; neg r10d ; mov qword ptr [rbp - 0x58], rcx ; mov rcx, qword ptr [rbp - 0x60] ; mov qword ptr [rcx + rdx*8], rax ; lea rax, [rbp - 0x80] ; mov dword ptr [rbp - 0x40], 1 ; mov dword ptr [rbp - 0x48], r10d ; mov qword ptr [rbp - 0xe0], rax
read: r10d rax rbx rcx 
write: r10d r13 r15d rax rcx rdx rflags 
--------------------------------------------------------------------------------
0004eb23: RLP; mov rdx, qword ptr [rbp - 0x58] ; mov r10d, dword ptr [rbp - 0x48] ; mov rcx, rdx ; add rcx, qword ptr [r13 + 8] ; lea rbx, [rcx - 1] ; sub rcx, 2 ; test rax, rax ; mov rax, qword ptr [rbp - 0x68] ; cmove rbx, rcx ; lea r9, [rbx*8] ; mov rsi, rbx ; sub rsi, rdx ; bsr rax, qword ptr [rax + r9 - 8] ; mov rdx, rsi ; add rdx, 1
read: rax rbx rcx rdx rflags rsi 
write: r10d r9 rax rbx rcx rdx rflags rsi 
--------------------------------------------------------------------------------
0004ec2a: RLP; mov r10d, dword ptr [rbp - 0x48] ; mov qword ptr [rbp - 0x58], rbx ; nop word ptr cs:[rax + rax] ; lea rax, [rip + 0xdceb1] ; sub r15d, 1 ; cmp r13, rax ; je 0x4ee9e
read: r13 r15d rax rbx rflags 
write: r10d r15d rax rflags 
--------------------------------------------------------------------------------
0004ecc8: RLP; jmp 0x4eb23
read: 
write: 
--------------------------------------------------------------------------------
0004ee4c: RLP; mov rdi, qword ptr [rbp - 0x60] ; mov rdx, qword ptr [rbp - 0x58] ; mov r8, qword ptr [rbp - 0xc0] ; sub qword ptr [rbp - 0x50], r13 ; sub rdx, r12 ; lea rsi, [rdi + r8] ; jmp 0x4dc79
read: r12 r13 rdx 
write: r8 rdi rdx rflags rsi 
--------------------------------------------------------------------------------
0004eec8: RLP; mov rsi, qword ptr [rbp - 0x68] ; mov eax, 4 ; mov r12, qword ptr [rbp - 0x58] ; tzcnt rdx, qword ptr [rsi] ; cmp dword ptr [rbp - 0x48], 4 ; cmovle eax, dword ptr [rbp - 0x48] ; cmp edx, eax ; jge 0x4f1a5
read: eax edx rflags 
write: eax r12 rdx rflags rsi 
--------------------------------------------------------------------------------
0004ef01: RLP; test rax, rax ; je 0x4ef12
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0004ef2b: RLP; jmp 0x4e1fc
read: 
write: 
--------------------------------------------------------------------------------
0004efb7: RLP; cmp eax, -1 ; mov r9d, dword ptr [rbp - 0xc8] ; mov rcx, qword ptr [rbp - 0xd0] ; jne 0x4ef76
read: eax rflags 
write: r9d rcx rflags 
--------------------------------------------------------------------------------
0004efed: RLP; mov eax, dword ptr [rbp - 0xa8] ; jmp 0x4d62d
read: 
write: eax 
--------------------------------------------------------------------------------
0004f11e: RLP; mov r10d, dword ptr [rbp - 0x48] ; mov r8d, dword ptr [rbp - 0x108] ; mov r9, qword ptr [rbp - 0x100] ; jmp 0x4eb80
read: 
write: r10d r8d r9 
--------------------------------------------------------------------------------
0004f175: RLP; mov r9d, dword ptr [rbp - 0xd0] ; cmp rax, r13 ; jne 0x4e205
read: r13 rax rflags 
write: r9d rflags 
--------------------------------------------------------------------------------
0004f1b7: RLP; jmp 0x4ef12
read: 
write: 
--------------------------------------------------------------------------------
0004f1f6: RLP; mov rdx, qword ptr [rbp - 0x60] ; mov qword ptr [rbp - 0x58], rbx ; mov r10d, dword ptr [rbp - 0x48] ; mov qword ptr [rdx + rbx*8 - 8], rax ; jmp 0x4ec3c
read: rax rbx 
write: r10d rdx 
--------------------------------------------------------------------------------
0004f259: RLP; mov rdi, qword ptr [rbp - 0x60] ; mov rdx, qword ptr [rbp - 0x58] ; mov ecx, r12d ; mov rsi, rdi ; call 0x45cac
read: r12d rdi rip rsp 
write: ecx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
0004f270: RLP; test rax, rax ; je 0x4dcac
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0004f2bd: RLP; mov rdx, rax ; jmp 0x4ea5a
read: rax 
write: rdx 
--------------------------------------------------------------------------------
0004f2ce: RLP; mov r9d, dword ptr [rbp - 0xd0] ; jmp 0x4f17c
read: 
write: r9d 
--------------------------------------------------------------------------------
0004f395: RLP; add eax, 1 ; sete al ; jmp 0x4d5c4
read: eax rflags 
write: al eax rflags 
--------------------------------------------------------------------------------
0004f3b5: RLP; add eax, 1 ; mov edx, dword ptr [rbp - 0xc0] ; jne 0x4d665
read: eax rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
0004f3e0: RLP; add eax, 1 ; mov edx, dword ptr [rbp - 0xc0] ; sete al ; jmp 0x4da04
read: eax rflags 
write: al eax edx rflags 
--------------------------------------------------------------------------------
0004f421: RLP; mov r9d, dword ptr [rbp - 0xd0] ; add eax, 1 ; sete al ; test al, al ; jne 0x4e205
read: al eax rflags 
write: al eax r9d rflags 
--------------------------------------------------------------------------------
0004f468: RLP; test eax, eax ; jne 0x4ddf3
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0004f47c: RLP; test rax, rax ; mov qword ptr [rbp - 0x118], rax ; je 0x4da0c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0004f4be: RLP; add eax, 1 ; mov r9d, dword ptr [rbp - 0xd0] ; sete al ; jmp 0x4f42e
read: eax rflags 
write: al eax r9d rflags 
--------------------------------------------------------------------------------
0004f4dc: RLP; mov rdi, qword ptr [rbp - 0x118] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0004f4ec: RLP; jmp 0x4ea0c
read: 
write: 
--------------------------------------------------------------------------------
0004f520: RLP; mov eax, dword ptr [rbp - 0xe8] ; mov dword ptr [r12 + 4], eax ; lea rax, [r12 + 8] ; cmp r15, rax ; jae 0x4f59b
read: eax r15 rax rflags 
write: eax rax rflags 
--------------------------------------------------------------------------------
0004f5bc: RLP; jmp 0x4e16b
read: 
write: 
--------------------------------------------------------------------------------
0004f606: RLP; test rax, rax ; mov r13, rax ; mov r9d, dword ptr [rbp - 0xd8] ; jne 0x4e3a2
read: rax rflags 
write: r13 r9d rflags 
--------------------------------------------------------------------------------
0004f65e: RLP; mov rdi, r14 ; mov rcx, rax ; mov r9d, dword ptr [rbp - 0xd0] ; jmp 0x4e98c
read: r14 rax 
write: r9d rcx rdi 
--------------------------------------------------------------------------------
0004f68d: RLP; add eax, 1 ; sete al ; jmp 0x4f043
read: eax rflags 
write: al eax rflags 
--------------------------------------------------------------------------------
0004f6f4: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x31edc2] ; test rax, rax ; je 0x4f764
read: rax rflags rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
0004f74c: RLP; add rsp, 0x80 ; mov eax, r8d ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
read: r8d rsp 
write: eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0004f77c: RLP; test rax, rax ; mov qword ptr [rip + 0x31afc6], rax ; mov r8d, 0xffffffff ; je 0x4f719
read: rax rflags 
write: r8d rflags 
--------------------------------------------------------------------------------
0004f7dd: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0004f81b: RLP; cmp byte ptr [rax], 0 ; mov rdi, rax ; je 0x4f907
read: rax rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
0004f865: RLP; add rbx, rax ; movsxd rax, dword ptr [rsp + 0x3c] ; cmp eax, -1 ; je 0x4f880
read: eax rax rbx rflags 
write: rax rbx rflags 
--------------------------------------------------------------------------------
0004f8d7: RLP; mov rdi, qword ptr [rsp + 0x30] ; cmp byte ptr [rdi], 0 ; jne 0x4f853
read: rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
0004f9a8: RLP; test eax, eax ; movsd xmm1, qword ptr [rsp + 0x20] ; mov r8, qword ptr [rsp + 0x30] ; je 0x4fcbc
read: eax rflags 
write: r8 rflags xmm1 
--------------------------------------------------------------------------------
0004fa57: RLP; mov r8, qword ptr [rsp + 0x30] ; mov rcx, qword ptr [rsp + 0x20] ; mov r9, qword ptr [rsp + 0x18] ; cmp rax, r9 ; mov r13d, r14d ; je 0x4fb3f
read: r14d r9 rax rflags 
write: r13d r8 r9 rcx rflags 
--------------------------------------------------------------------------------
0004fad1: RLP; test eax, eax ; mov r8, qword ptr [rsp + 0x30] ; fld xword ptr [rsp + 0x20] ; je 0x4fe34
read: eax rflags 
write: fpsw r8 rflags 
--------------------------------------------------------------------------------
0004fc16: RLP; mov r9d, dword ptr [rsp + 0x18] ; cmp rax, rbp ; jne 0x4fa7c
read: rax rbp rflags 
write: r9d rflags 
--------------------------------------------------------------------------------
0004fcd4: RLP; test eax, eax ; movsd xmm1, qword ptr [rsp + 0x20] ; mov r8, qword ptr [rsp + 0x30] ; jne 0x506ac
read: eax rflags 
write: r8 rflags xmm1 
--------------------------------------------------------------------------------
0004fd8c: RLP; mov r9, qword ptr [rsp + 0x40] ; mov r10, rax ; lea rax, [rsp + 0x12c] ; mov r8, qword ptr [rsp + 0x38] ; cmp r9, rax ; jbe 0x4fdde
read: r9 rax rflags 
write: r10 r8 r9 rax rflags 
--------------------------------------------------------------------------------
0004fe4b: RLP; test eax, eax ; mov r8, qword ptr [rsp + 0x30] ; fld xword ptr [rsp + 0x20] ; jne 0x5066c
read: eax rflags 
write: fpsw r8 rflags 
--------------------------------------------------------------------------------
0004fed3: RLP; mov r8, qword ptr [rsp + 0x40] ; lea rdx, [rip + 0xdf3fd] ; lea rsi, [rip + 0xdf496] ; mov r9, qword ptr [rsp + 0x38] ; cmp dword ptr [r8 + 8], 0x41 ; cmove rsi, rdx ; lea rdx, [rsp + 0x160] ; mov rcx, r9 ; shr r9, 4 ; sub rdx, 4 ; and ecx, 0xf ; test r9, r9 ; mov ecx, dword ptr [rsi + rcx*4] ; mov dword ptr [rdx], ecx ; jne 0x4fefc
read: ecx r9 rdx rflags rsi 
write: ecx r8 r9 rcx rdx rflags rsi 
--------------------------------------------------------------------------------
000500c8: RLP; mov r10, qword ptr [rsp + 0x40] ; mov r9, qword ptr [rsp + 0x48] ; lea rcx, [rsp + 0xb4] ; mov r8, qword ptr [rsp + 0x50] ; lea rdi, [rip + 0xdf296] ; mov r11, rax ; movabs rsi, 0xcccccccccccccccd ; nop word ptr [rax + rax] ; mov rax, r13 ; sub rcx, 4 ; mul rsi ; shr rdx, 3 ; lea rax, [rdx + rdx*4] ; add rax, rax ; sub r13, rax
read: r13 rax rcx rdx rsi 
write: r10 r11 r13 r8 r9 rax rcx rdi rdx rflags rsi 
--------------------------------------------------------------------------------
00050190: RLP; mov r8, qword ptr [rsp + 0x70] ; mov rcx, qword ptr [rsp + 0x68] ; mov r11, qword ptr [rsp + 0x50] ; mov r9, qword ptr [rsp + 0x48] ; mov r10, qword ptr [rsp + 0x30] ; sub r14d, eax ; and r13d, 0x20 ; mov dword ptr [rsp + 0x30], r14d ; jne 0x50804
read: eax r13d r14d rflags 
write: r10 r11 r13d r14d r8 r9 rcx rflags 
--------------------------------------------------------------------------------
0005020c: RLP; mov r10, qword ptr [rsp + 0x48] ; mov r9, qword ptr [rsp + 0x50] ; mov r11, qword ptr [rsp + 0x68] ; mov rcx, qword ptr [rsp + 0x70] ; mov r8, qword ptr [rsp + 0x78] ; cmp r13, rax ; jne 0x4fa7c
read: r13 rax rflags 
write: r10 r11 r8 r9 rcx rflags 
--------------------------------------------------------------------------------
00050386: RLP; test rax, rax ; mov r14, rax ; mov r10, qword ptr [rsp + 0x20] ; mov r9, qword ptr [rsp + 0x38] ; mov r11, qword ptr [rsp + 0x48] ; mov rcx, qword ptr [rsp + 0x50] ; mov r8, qword ptr [rsp + 0x68] ; je 0x503dc
read: rax rflags 
write: r10 r11 r14 r8 r9 rcx rflags 
--------------------------------------------------------------------------------
0005047c: RLP; mov r8, qword ptr [rsp + 0x38] ; mov rcx, qword ptr [rsp + 0x20] ; mov r11, qword ptr [rsp + 0x18] ; cmp rax, r12 ; jne 0x4fa7c
read: r12 rax rflags 
write: r11 r8 rcx rflags 
--------------------------------------------------------------------------------
000505ad: RLP; cmp rax, rbp ; jne 0x4fa7c
read: rax rbp rflags 
write: rflags 
--------------------------------------------------------------------------------
0005063d: RLP; mov r9d, dword ptr [rsp + 0x18] ; jmp 0x4fc1b
read: 
write: r9d 
--------------------------------------------------------------------------------
00050655: RLP; mov r9, qword ptr [rsp + 0x18] ; mov rcx, qword ptr [rsp + 0x20] ; mov r8, qword ptr [rsp + 0x30] ; jmp 0x4fa66
read: 
write: r8 r9 rcx 
--------------------------------------------------------------------------------
00050ad2: RLP; mov r8, qword ptr [rsp + 0x78] ; mov rcx, qword ptr [rsp + 0x70] ; mov r11, qword ptr [rsp + 0x68] ; mov r9, qword ptr [rsp + 0x50] ; mov r10, qword ptr [rsp + 0x48] ; jmp 0x50225
read: 
write: r10 r11 r8 r9 rcx 
--------------------------------------------------------------------------------
00050b54: RLP; mov r10, qword ptr [rsp + 0x20] ; mov r9, qword ptr [rsp + 0x48] ; mov r11, qword ptr [rsp + 0x50] ; mov rcx, qword ptr [rsp + 0x68] ; mov r8, qword ptr [rsp + 0x70] ; cmp r13, rax ; jne 0x4fa7c
read: r13 rax rflags 
write: r10 r11 r8 r9 rcx rflags 
--------------------------------------------------------------------------------
00050d1b: RLP; mov r8, qword ptr [rsp + 0x70] ; mov rcx, qword ptr [rsp + 0x68] ; mov r11, qword ptr [rsp + 0x50] ; mov r9, qword ptr [rsp + 0x48] ; mov r10, qword ptr [rsp + 0x20] ; jmp 0x50b6d
read: 
write: r10 r11 r8 r9 rcx 
--------------------------------------------------------------------------------
00050d6d: RLP; jmp 0x505ad
read: 
write: 
--------------------------------------------------------------------------------
00050df1: RLP; add eax, 1 ; mov r8, qword ptr [rsp + 0x18] ; sete al ; jmp 0x4fbc4
read: eax rflags 
write: al eax r8 rflags 
--------------------------------------------------------------------------------
00050e3c: RLP; add eax, 1 ; mov r9, qword ptr [rsp + 0x20] ; mov r11, qword ptr [rsp + 0x38] ; mov rcx, qword ptr [rsp + 0x48] ; mov r8, qword ptr [rsp + 0x50] ; jne 0x503ce
read: eax rflags 
write: eax r11 r8 r9 rcx rflags 
--------------------------------------------------------------------------------
00050e79: RLP; add eax, 1 ; mov r11, qword ptr [rsp + 0x18] ; mov rcx, qword ptr [rsp + 0x20] ; sete al ; mov r8, qword ptr [rsp + 0x38] ; jmp 0x509d8
read: eax rflags 
write: al eax r11 r8 rcx rflags 
--------------------------------------------------------------------------------
00050e9f: RLP; add eax, 1 ; sete al ; jmp 0x50ac0
read: eax rflags 
write: al eax rflags 
--------------------------------------------------------------------------------
00050ed2: RLP; add eax, 1 ; mov r10, qword ptr [rsp + 0x20] ; mov r9, qword ptr [rsp + 0x38] ; sete al ; mov r11, qword ptr [rsp + 0x48] ; mov rcx, qword ptr [rsp + 0x50] ; mov r8, qword ptr [rsp + 0x68] ; jmp 0x507ec
read: eax rflags 
write: al eax r10 r11 r8 r9 rcx rflags 
--------------------------------------------------------------------------------
00050f11: RLP; mov rcx, qword ptr [rsp + 0x18] ; mov r8, qword ptr [rsp + 0x20] ; add eax, 1 ; sete al ; test al, al ; jne 0x4fa7c
read: al eax rflags 
write: al eax r8 rcx rflags 
--------------------------------------------------------------------------------
00050f49: RLP; add eax, 1 ; mov rcx, qword ptr [rsp + 0x18] ; mov r8, qword ptr [rsp + 0x20] ; sete al ; jmp 0x50f21
read: eax rflags 
write: al eax r8 rcx rflags 
--------------------------------------------------------------------------------
00050f74: RLP; add eax, 1 ; mov rcx, qword ptr [rsp + 0x18] ; mov r8, qword ptr [rsp + 0x20] ; jne 0x4fca5
read: eax rflags 
write: eax r8 rcx rflags 
--------------------------------------------------------------------------------
00050ffe: RLP; add eax, 1 ; mov r10, qword ptr [rsp + 0x20] ; mov r9, qword ptr [rsp + 0x48] ; sete al ; mov r11, qword ptr [rsp + 0x50] ; mov rcx, qword ptr [rsp + 0x68] ; mov r8, qword ptr [rsp + 0x70] ; jmp 0x502e8
read: eax rflags 
write: al eax r10 r11 r8 r9 rcx rflags 
--------------------------------------------------------------------------------
0005104c: RLP; add eax, 1 ; mov r10, qword ptr [rsp + 0x20] ; mov r9, qword ptr [rsp + 0x48] ; sete al ; mov r11, qword ptr [rsp + 0x50] ; mov rcx, qword ptr [rsp + 0x68] ; test al, al ; mov r8, qword ptr [rsp + 0x70] ; jne 0x4fa7c
read: al eax rflags 
write: al eax r10 r11 r8 r9 rcx rflags 
--------------------------------------------------------------------------------
000510a2: RLP; jmp 0x5104c
read: 
write: 
--------------------------------------------------------------------------------
000510ce: RLP; add eax, 1 ; mov r10, qword ptr [rsp + 0x20] ; mov r9, qword ptr [rsp + 0x48] ; sete al ; mov r11, qword ptr [rsp + 0x50] ; mov rcx, qword ptr [rsp + 0x68] ; test al, al ; mov r8, qword ptr [rsp + 0x70] ; jne 0x4fa7c
read: al eax rflags 
write: al eax r10 r11 r8 r9 rcx rflags 
--------------------------------------------------------------------------------
00051124: RLP; jmp 0x510ce
read: 
write: 
--------------------------------------------------------------------------------
00051146: RLP; add eax, 1 ; mov rdx, qword ptr [rsp + 0x18] ; mov r11, qword ptr [rsp + 0x20] ; mov rcx, qword ptr [rsp + 0x38] ; mov r8, qword ptr [rsp + 0x48] ; jne 0x5043e
read: eax rflags 
write: eax r11 r8 rcx rdx rflags 
--------------------------------------------------------------------------------
00051192: RLP; jmp 0x510ce
read: 
write: 
--------------------------------------------------------------------------------
000511c6: RLP; mov r11, qword ptr [rsp + 0x18] ; mov rcx, qword ptr [rsp + 0x20] ; mov r8, qword ptr [rsp + 0x38] ; jmp 0x5048b
read: 
write: r11 r8 rcx 
--------------------------------------------------------------------------------
00051204: RLP; add eax, 1 ; mov r10, qword ptr [rsp + 0x20] ; mov r9, qword ptr [rsp + 0x48] ; sete al ; mov r11, qword ptr [rsp + 0x50] ; mov rcx, qword ptr [rsp + 0x68] ; mov r8, qword ptr [rsp + 0x70] ; jmp 0x50341
read: eax rflags 
write: al eax r10 r11 r8 r9 rcx rflags 
--------------------------------------------------------------------------------
0005125e: RLP; jmp 0x510ce
read: 
write: 
--------------------------------------------------------------------------------
0005128d: RLP; jmp 0x510ce
read: 
write: 
--------------------------------------------------------------------------------
000512bc: RLP; jmp 0x510ce
read: 
write: 
--------------------------------------------------------------------------------
000512dc: RLP; add eax, 1 ; mov r11, qword ptr [rsp + 0x18] ; mov rcx, qword ptr [rsp + 0x20] ; sete al ; mov r8, qword ptr [rsp + 0x38] ; jmp 0x504d5
read: eax rflags 
write: al eax r11 r8 rcx rflags 
--------------------------------------------------------------------------------
00051311: RLP; add eax, 1 ; mov r11, qword ptr [rsp + 0x18] ; mov rcx, qword ptr [rsp + 0x20] ; sete al ; mov r8, qword ptr [rsp + 0x38] ; test al, al ; jne 0x4fa7c
read: al eax rflags 
write: al eax r11 r8 rcx rflags 
--------------------------------------------------------------------------------
00051352: RLP; jmp 0x512dc
read: 
write: 
--------------------------------------------------------------------------------
00051363: RLP; add eax, 1 ; jne 0x5055d
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0005138c: RLP; jmp 0x51311
read: 
write: 
--------------------------------------------------------------------------------
000513b8: RLP; jmp 0x51204
read: 
write: 
--------------------------------------------------------------------------------
000513e6: RLP; jmp 0x50ffe
read: 
write: 
--------------------------------------------------------------------------------
0005146d: RLP; add rsp, 0x80 ; cmp qword ptr [rip + 0x31d050], 0 ; je 0x5155c
read: rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0005149a: RLP; test rax, rax ; mov r12, rax ; je 0x51584
read: rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
000514e9: RLP; movzx edx, byte ptr [rbp] ; mov rax, qword ptr [rip + 0x31cfd8] ; mov qword ptr [rax + rdx*8], r12 ; mov edx, dword ptr [r12 + 8] ; cmp dword ptr [rip + 0x31d26c], 0 ; je 0x51511
read: r12 rflags 
write: edx rax rflags 
--------------------------------------------------------------------------------
00051530: RLP; add rsp, 0x80 ; pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
read: edx rsp 
write: eax r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0005156f: RLP; test rax, rax ; mov qword ptr [rip + 0x31cf53], rax ; jne 0x51482
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000517a0: RLP; add rsp, 0x80 ; cmp qword ptr [rip + 0x318fa5], 0 ; je 0x5181c
read: rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0005180e: RLP; add rsp, 0x80 ; mov eax, edx ; pop rbx ; ret
read: edx rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
0005182f: RLP; test rax, rax ; mov qword ptr [rip + 0x318f1b], rax ; jne 0x517b1
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00051912: RLP; test eax, eax ; fld xword ptr [rsp + 0x10] ; je 0x51ca4
read: eax rflags 
write: fpsw rflags 
--------------------------------------------------------------------------------
00051a36: RLP; mov ecx, dword ptr [rsp + 0x20] ; cmp rax, rbx ; jne 0x51bac
read: rax rbx rflags 
write: ecx rflags 
--------------------------------------------------------------------------------
00051a79: RLP; test eax, eax ; movsd xmm1, qword ptr [rsp + 0x10] ; jne 0x51920
read: eax rflags 
write: rflags xmm1 
--------------------------------------------------------------------------------
00051a94: RLP; test eax, eax ; mov r8d, eax ; movsd xmm1, qword ptr [rsp + 0x10] ; jne 0x51d06
read: eax rflags 
write: r8d rflags xmm1 
--------------------------------------------------------------------------------
00051b58: RLP; mov ebp, eax ; test ebp, ebp ; jle 0x51a47
read: eax ebp rflags 
write: ebp rflags 
--------------------------------------------------------------------------------
00051bf7: RLP; mov r9, qword ptr [rsp + 0x30] ; mov r10, qword ptr [rsp + 0x28] ; mov r8d, dword ptr [rsp + 0x10] ; mov ecx, dword ptr [rsp + 0x20] ; cmp rax, rbx ; mov r13d, ecx ; jne 0x51bac
read: ecx rax rbx rflags 
write: ecx r10 r13d r8d r9 rflags 
--------------------------------------------------------------------------------
00051cb0: RLP; test eax, eax ; mov r8d, eax ; fld xword ptr [rsp + 0x10] ; jne 0x51d04
read: eax rflags 
write: fpsw r8d rflags 
--------------------------------------------------------------------------------
00051d7d: RLP; mov ecx, dword ptr [rsp + 0x20] ; jmp 0x51a3a
read: 
write: ecx 
--------------------------------------------------------------------------------
00051d95: RLP; mov ecx, dword ptr [rsp + 0x20] ; mov r8d, dword ptr [rsp + 0x10] ; mov r10, qword ptr [rsp + 0x28] ; mov r9, qword ptr [rsp + 0x30] ; jmp 0x51c0a
read: 
write: ecx r10 r8d r9 
--------------------------------------------------------------------------------
00051e5d: RLP; mov r13d, eax ; test r13d, r13d ; jle 0x51a47
read: eax r13d rflags 
write: r13d rflags 
--------------------------------------------------------------------------------
00051edb: RLP; mov edx, dword ptr [rbp + 4] ; mov ecx, edx ; sub ecx, r13d ; movsxd rcx, ecx ; cmp rax, rcx ; jne 0x51bac
read: ecx edx r13d rax rcx rflags 
write: ecx edx rcx rflags 
--------------------------------------------------------------------------------
00051f3b: RLP; jmp 0x51edb
read: 
write: 
--------------------------------------------------------------------------------
00051f52: RLP; add eax, 1 ; mov r10, qword ptr [rsp + 0x20] ; mov ecx, dword ptr [rsp + 0x10] ; sete al ; jmp 0x519ee
read: eax rflags 
write: al eax ecx r10 rflags 
--------------------------------------------------------------------------------
00051f83: RLP; add eax, 1 ; mov r8, qword ptr [rsp + 0x20] ; mov r9, qword ptr [rsp + 0x10] ; mov ecx, dword ptr [rsp + 0x28] ; jne 0x51d5e
read: eax rflags 
write: eax ecx r8 r9 rflags 
--------------------------------------------------------------------------------
00051fbe: RLP; add eax, 1 ; mov r10, qword ptr [rsp + 0x20] ; mov r9, qword ptr [rsp + 0x10] ; sete al ; mov ecx, dword ptr [rsp + 0x28] ; test al, al ; jne 0x51bac
read: al eax rflags 
write: al eax ecx r10 r9 rflags 
--------------------------------------------------------------------------------
00051ffe: RLP; jmp 0x51fbe
read: 
write: 
--------------------------------------------------------------------------------
0005201f: RLP; jmp 0x51fbe
read: 
write: 
--------------------------------------------------------------------------------
00052040: RLP; jmp 0x51fbe
read: 
write: 
--------------------------------------------------------------------------------
00052064: RLP; jmp 0x51fbe
read: 
write: 
--------------------------------------------------------------------------------
00052088: RLP; jmp 0x51fbe
read: 
write: 
--------------------------------------------------------------------------------
0005209c: RLP; add eax, 1 ; sete al ; jmp 0x51b9d
read: eax rflags 
write: al eax rflags 
--------------------------------------------------------------------------------
000520b6: RLP; add eax, 1 ; sete al ; jmp 0x51b9d
read: eax rflags 
write: al eax rflags 
--------------------------------------------------------------------------------
000520d0: RLP; add eax, 1 ; sete al ; jmp 0x51ea4
read: eax rflags 
write: al eax rflags 
--------------------------------------------------------------------------------
000520ea: RLP; add eax, 1 ; sete al ; jmp 0x51ea4
read: eax rflags 
write: al eax rflags 
--------------------------------------------------------------------------------
000521bb: RLP; add rsp, 0xd8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0005226d: RLP; add rsp, 0xd8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00052306: RLP; add rsp, 0xd8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000523ab: RLP; add rsp, 0xd8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0005244b: RLP; add rsp, 0xd8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000524eb: RLP; add rsp, 0xd8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00052568: RLP; mov edx, 0xffffffff ; cmp rax, rdx ; je 0x525c4
read: rax rdx rflags 
write: edx rflags 
--------------------------------------------------------------------------------
0005259d: RLP; mov rcx, qword ptr [rbx + 0xa0] ; sub qword ptr [rcx + 0x20], r13 ; test rcx, rcx ; jne 0x52530
read: r13 rcx rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
000525bb: RLP; jmp 0x52546
read: 
write: 
--------------------------------------------------------------------------------
0005261b: RLP; cmp eax, 1 ; jne 0x5288c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00052649: RLP; cmp eax, 1 ; jne 0x5288c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00052690: RLP; and r12d, 0x8000 ; mov qword ptr [rbp - 0x1088], rax ; mov qword ptr [rbp - 0x1070], rax ; mov dword ptr [rbp - 0x107c], 0 ; jne 0x5273a
read: r12d rax rflags 
write: r12d rflags 
--------------------------------------------------------------------------------
00052724: RLP; add rsp, 0x80 ; mov rdx, qword ptr [r14 + 0x88] ; mov qword ptr [rdx + 8], r9 ; add dword ptr [rdx + 4], 1 ; mov r12, qword ptr [rbp - 0x1088] ; mov rax, qword ptr [r14 + 0xd8] ; mov rsi, r15 ; mov rdi, r14 ; sub r12, r15 ; mov r13, r12 ; sar r13, 2 ; mov rdx, r13 ; call qword ptr [rax + 0x38]
read: r12 r13 r14 r15 r9 rsp 
write: r12 r13 rax rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00052762: RLP; cmp r13, rax ; mov dword ptr [rbp - 0x1078], 0xffffffff ; je 0x528a4
read: r13 rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000527be: RLP; lea rsp, [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rsp 
--------------------------------------------------------------------------------
00052803: RLP; add rsp, 0x80 ; mov edx, dword ptr [rbp - 0x107c] ; test edx, edx ; je 0x52795
read: edx rflags rsp 
write: edx rflags rsp 
--------------------------------------------------------------------------------
00052837: RLP; jmp 0x52795
read: 
write: 
--------------------------------------------------------------------------------
00052867: RLP; test dword ptr [r14], 0x8000 ; je 0x526de
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
00052f85: RLP; cmp eax, 0x1fffffde ; mov dword ptr [rbp - 0x10d0], eax ; mov r10, qword ptr [rbp - 0x1188] ; ja 0x535d0
read: eax rflags 
write: r10 rflags 
--------------------------------------------------------------------------------
0005311c: RLP; mov rcx, qword ptr [rbx + 0x20] ; add r12, rax ; mov esi, dword ptr [rcx] ; mov qword ptr [rbp - 0x1070], rcx ; test esi, esi ; je 0x5509c
read: esi r12 rax rcx rflags 
write: esi r12 rcx rflags 
--------------------------------------------------------------------------------
0005319a: RLP; mov r10, qword ptr [rbp - 0x1098] ; mov r13, rax ; mov rcx, qword ptr [rbp - 0x10a0] ; mov r14, r10 ; jmp 0x530fc
read: r10 rax 
write: r10 r13 r14 rcx 
--------------------------------------------------------------------------------
0005322a: RLP; mov ecx, dword ptr [rbp - 0x1078] ; mov qword ptr [rbp - 0x1070], rax ; test ecx, ecx ; js 0x57012
read: ecx rax rflags 
write: ecx rflags 
--------------------------------------------------------------------------------
00053264: RLP; mov rdx, qword ptr [rbp - 0x1070] ; mov ecx, dword ptr [rbp - 0x1078] ; mov rsi, rdx ; sub rsi, r12 ; xor r12d, r12d ; sar rsi, 2 ; cmp rax, rsi ; je 0x55e79
read: r12 r12d rax rdx rflags rsi 
write: ecx r12d rdx rflags rsi 
--------------------------------------------------------------------------------
000532b4: RLP; jmp 0x52775
read: 
write: 
--------------------------------------------------------------------------------
00053532: RLP; mov r10, qword ptr [rbp - 0x10c0] ; cmp r10, rax ; jne 0x53287
read: r10 rax rflags 
write: r10 rflags 
--------------------------------------------------------------------------------
000535a5: RLP; mov r10, qword ptr [rbp - 0x10c0] ; cmp r10, rax ; jne 0x53287
read: r10 rax rflags 
write: r10 rflags 
--------------------------------------------------------------------------------
00053772: RLP; test eax, eax ; js 0x53287
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000538ab: RLP; test eax, eax ; jns 0x5377a
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00053983: RLP; mov dword ptr [rbp - 0x10e0], 0 ; mov r8, rax ; test r8, r8 ; je 0x56bfa
read: r8 rax rflags 
write: r8 rflags 
--------------------------------------------------------------------------------
000539d8: RLP; mov rdx, rax ; movabs rax, 0x3fffffffffffffff ; cmp rdx, rax ; ja 0x535d0
read: rax rdx rflags 
write: rax rdx rflags 
--------------------------------------------------------------------------------
00053a4d: RLP; cmp rax, -1 ; mov r10, rax ; mov r8, qword ptr [rbp - 0x10d8] ; je 0x53287
read: rax rflags 
write: r10 r8 rflags 
--------------------------------------------------------------------------------
00053ac1: RLP; mov rcx, qword ptr [rbp - 0x10d0] ; cmp rcx, rax ; jne 0x53287
read: rax rcx rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
00053b48: RLP; mov r10, qword ptr [rbp - 0x10e0] ; mov r8, qword ptr [rbp - 0x10d0] ; mov r11d, dword ptr [rbp - 0x10e8] ; cmp r10, rax ; jne 0x53287
read: r10 rax rflags 
write: r10 r11d r8 rflags 
--------------------------------------------------------------------------------
00053bdd: RLP; mov rcx, qword ptr [rbp - 0x1078] ; cmp rcx, rax ; jne 0x53287
read: rax rcx rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
00053c48: RLP; mov ecx, dword ptr [rbp - 0x1078] ; jmp 0x531f8
read: 
write: ecx 
--------------------------------------------------------------------------------
00053ec5: RLP; mov r8, qword ptr [rbp - 0x1120] ; cmp r8, rax ; jne 0x53287
read: r8 rax rflags 
write: r8 rflags 
--------------------------------------------------------------------------------
00053f38: RLP; mov rcx, qword ptr [rbp - 0x1120] ; cmp rcx, rax ; jne 0x53287
read: rax rcx rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
00053fae: RLP; mov rdx, qword ptr [r12 + 0x20] ; sub rdx, qword ptr [r12 + 0x18] ; xor r12d, r12d ; sar rdx, 2 ; cmp rax, rdx ; jne 0x53287
read: r12d rax rdx rflags 
write: r12d rdx rflags 
--------------------------------------------------------------------------------
0005422d: RLP; cmp eax, -2 ; mov r10, qword ptr [rbp - 0x1178] ; je 0x55461
read: eax rflags 
write: r10 rflags 
--------------------------------------------------------------------------------
000542ec: RLP; test eax, eax ; js 0x53287
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00054365: RLP; jmp 0x542ec
read: 
write: 
--------------------------------------------------------------------------------
000543d1: RLP; mov rcx, qword ptr [rbp - 0x1120] ; cmp rcx, rax ; jne 0x53287
read: rax rcx rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
00054440: RLP; mov rdx, qword ptr [r14 + 0xa0] ; test rdx, rdx ; je 0x56643
read: rdx rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
000544bc: RLP; mov rcx, qword ptr [rbp - 0x1120] ; cmp rcx, rax ; jne 0x53287
read: rax rcx rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
00054545: RLP; mov rcx, qword ptr [rbp - 0x10d0] ; cmp rcx, rax ; jne 0x53287
read: rax rcx rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
000545a6: RLP; mov rdx, qword ptr [r14 + 0xa0] ; test rdx, rdx ; je 0x56eb9
read: rdx rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
0005462f: RLP; mov r10, qword ptr [rbp - 0x10d0] ; cmp r10, rax ; jne 0x53287
read: r10 rax rflags 
write: r10 rflags 
--------------------------------------------------------------------------------
000546b3: RLP; mov rcx, qword ptr [rbp - 0x10c0] ; cmp rcx, rax ; jne 0x53287
read: rax rcx rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
00054796: RLP; mov r10, qword ptr [rbp - 0x10c0] ; cmp r10, rax ; jne 0x53287
read: r10 rax rflags 
write: r10 rflags 
--------------------------------------------------------------------------------
00054859: RLP; mov dword ptr [rbp - 0x1140], 0 ; mov r13, rax ; test r13, r13 ; je 0x56b21
read: r13 rax rflags 
write: r13 rflags 
--------------------------------------------------------------------------------
000548ae: RLP; mov rdx, rax ; movabs rax, 0x3fffffffffffffff ; cmp rdx, rax ; ja 0x5426e
read: rax rdx rflags 
write: rax rdx rflags 
--------------------------------------------------------------------------------
0005491c: RLP; cmp rax, -1 ; mov rcx, rax ; je 0x53287
read: rax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
00054979: RLP; mov r10, qword ptr [rbp - 0x1120] ; cmp r10, rax ; jne 0x53287
read: r10 rax rflags 
write: r10 rflags 
--------------------------------------------------------------------------------
000549f2: RLP; mov rcx, qword ptr [rbp - 0x1120] ; mov r8d, dword ptr [rbp - 0x1138] ; cmp rcx, rax ; jne 0x53287
read: rax rcx rflags 
write: r8d rcx rflags 
--------------------------------------------------------------------------------
00054a69: RLP; mov rcx, qword ptr [rbp - 0x1120] ; cmp rcx, rax ; jne 0x53287
read: rax rcx rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
00054ac4: RLP; jmp 0x53f64
read: 
write: 
--------------------------------------------------------------------------------
00054fd2: RLP; mov rcx, qword ptr [rbp - 0x1120] ; cmp rcx, rax ; jne 0x53287
read: rax rcx rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
0005514f: RLP; xor r8d, r8d ; cmp qword ptr [rbp - 0x10a0], 0 ; mov r13, qword ptr [rbp - 0x1098] ; mov r9, qword ptr [rbp - 0x1128] ; je 0x5524b
read: r8d rflags 
write: r13 r8d r9 rflags 
--------------------------------------------------------------------------------
00055226: RLP; jmp 0x551c3
read: 
write: 
--------------------------------------------------------------------------------
00055527: RLP; jmp 0x5329f
read: 
write: 
--------------------------------------------------------------------------------
0005565b: RLP; mov rcx, qword ptr [rbp - 0x1130] ; cmp rcx, rax ; jne 0x53287
read: rax rcx rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
000556cf: RLP; mov rcx, qword ptr [rbp - 0x1130] ; cmp rcx, rax ; jne 0x53287
read: rax rcx rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
00055743: RLP; mov rcx, qword ptr [rbp - 0x1120] ; cmp rcx, rax ; jne 0x53287
read: rax rcx rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
00055983: RLP; mov rcx, qword ptr [rbp - 0x10c0] ; cmp rcx, rax ; jne 0x53287
read: rax rcx rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
000559fb: RLP; mov r10, qword ptr [rbp - 0x10c0] ; cmp r10, rax ; jne 0x53287
read: r10 rax rflags 
write: r10 rflags 
--------------------------------------------------------------------------------
00055a81: RLP; mov rcx, qword ptr [rbp - 0x1078] ; cmp rcx, rax ; jne 0x53287
read: rax rcx rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
00055c15: RLP; mov r11d, dword ptr [rbp - 0x1118] ; mov qword ptr [rbp - 0x10e0], rax ; mov r10, qword ptr [rbp - 0x1110] ; jmp 0x55b52
read: rax 
write: r10 r11d 
--------------------------------------------------------------------------------
00055c6a: RLP; mov r11d, dword ptr [rbp - 0x1118] ; mov qword ptr [rbp - 0x10e0], rax ; mov r10, qword ptr [rbp - 0x1110] ; jmp 0x55b45
read: rax 
write: r10 r11d 
--------------------------------------------------------------------------------
00055ed1: RLP; mov dword ptr [rbp - 0x10c0], 0 ; mov r10, rax ; mov r8, qword ptr [rbp - 0x10d8] ; jmp 0x53a61
read: rax 
write: r10 r8 
--------------------------------------------------------------------------------
00055f0f: RLP; mov dword ptr [rbp - 0x1128], 0 ; mov rcx, rax ; jmp 0x54929
read: rax 
write: rcx 
--------------------------------------------------------------------------------
00055f9c: RLP; mov r9, qword ptr [rbp - 0x1168] ; mov r13, rax ; mov r11d, dword ptr [rbp - 0x1160] ; mov r10, qword ptr [rbp - 0x1140] ; jmp 0x55801
read: rax 
write: r10 r11d r13 r9 
--------------------------------------------------------------------------------
00055ff7: RLP; mov r9, qword ptr [rbp - 0x1168] ; mov r13, rax ; mov r11d, dword ptr [rbp - 0x1160] ; mov r10, qword ptr [rbp - 0x1140] ; jmp 0x557f4
read: rax 
write: r10 r11d r13 r9 
--------------------------------------------------------------------------------
00056063: RLP; add eax, 1 ; jne 0x55884
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000560f9: RLP; add eax, 1 ; jne 0x54c59
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00056118: RLP; add eax, 1 ; jne 0x54d1c
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00056137: RLP; add eax, 1 ; jne 0x54da9
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00056156: RLP; add eax, 1 ; jne 0x54d5b
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00056175: RLP; add eax, 1 ; jne 0x55884
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000561a2: RLP; add eax, 1 ; mov r8d, dword ptr [rbp - 0x1120] ; mov r9, qword ptr [rbp - 0x1128] ; jne 0x53dd0
read: eax rflags 
write: eax r8d r9 rflags 
--------------------------------------------------------------------------------
00056205: RLP; add eax, 1 ; jne 0x54cd9
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00056224: RLP; add eax, 1 ; jne 0x54d1c
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00056251: RLP; add eax, 1 ; mov r8d, dword ptr [rbp - 0x1120] ; mov r9, qword ptr [rbp - 0x1128] ; jne 0x53dd0
read: eax rflags 
write: eax r8d r9 rflags 
--------------------------------------------------------------------------------
000562a0: RLP; mov r10, qword ptr [rbp - 0x10d0] ; cmp r10, rax ; jne 0x53287
read: r10 rax rflags 
write: r10 rflags 
--------------------------------------------------------------------------------
00056305: RLP; add eax, 1 ; mov ecx, dword ptr [rbp - 0x10d0] ; jne 0x534ed
read: eax rflags 
write: eax ecx rflags 
--------------------------------------------------------------------------------
00056330: RLP; add eax, 1 ; mov ecx, dword ptr [rbp - 0x10d0] ; jne 0x534a6
read: eax rflags 
write: eax ecx rflags 
--------------------------------------------------------------------------------
0005637d: RLP; test eax, eax ; mov r10, qword ptr [rbp - 0x1188] ; jne 0x52fc5
read: eax rflags 
write: r10 rflags 
--------------------------------------------------------------------------------
0005639f: RLP; test rax, rax ; mov r12, rax ; mov r10, qword ptr [rbp - 0x1188] ; je 0x53287
read: rax rflags 
write: r10 r12 rflags 
--------------------------------------------------------------------------------
000563d1: RLP; add eax, 1 ; mov ecx, dword ptr [rbp - 0x10d0] ; jne 0x5343b
read: eax rflags 
write: eax ecx rflags 
--------------------------------------------------------------------------------
00056506: RLP; jmp 0x542ec
read: 
write: 
--------------------------------------------------------------------------------
00056651: RLP; add eax, 1 ; jne 0x54471
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00056681: RLP; mov rdx, qword ptr [r14 + 0xa0] ; test rdx, rdx ; je 0x566e9
read: rdx rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
000566f7: RLP; add eax, 1 ; jne 0x566aa
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00056731: RLP; add eax, 1 ; jne 0x54c98
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0005677a: RLP; add eax, 1 ; jne 0x5593d
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00056799: RLP; add eax, 1 ; jne 0x558f6
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000567d9: RLP; add eax, 1 ; jne 0x54af9
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0005687d: RLP; jmp 0x53089
read: 
write: 
--------------------------------------------------------------------------------
000568f6: RLP; add eax, 1 ; mov r8d, dword ptr [rbp - 0x10c0] ; jne 0x5473c
read: eax rflags 
write: eax r8d rflags 
--------------------------------------------------------------------------------
0005692f: RLP; add eax, 1 ; mov rcx, qword ptr [rbp - 0x1130] ; jne 0x54e30
read: eax rflags 
write: eax rcx rflags 
--------------------------------------------------------------------------------
00056955: RLP; add eax, 1 ; jne 0x54e86
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00056a59: RLP; add eax, 1 ; mov rcx, qword ptr [rbp - 0x1130] ; jne 0x54f1c
read: eax rflags 
write: eax rcx rflags 
--------------------------------------------------------------------------------
00056a7a: RLP; add eax, 1 ; jne 0x569f4
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00056ba2: RLP; mov rcx, qword ptr [rbp - 0x1120] ; cmp rcx, rax ; jne 0x53287
read: rax rcx rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
00056c38: RLP; add eax, 1 ; jne 0x55066
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00056cb1: RLP; lea rsi, [rax*4 + 4] ; mov rdi, r15 ; call 0xf293c
read: r15 rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
00056cc5: RLP; test eax, eax ; mov dword ptr [rbp - 0x10c4], eax ; jns 0x547f3
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00056d0a: RLP; add eax, 1 ; jne 0x56c90
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00056d6b: RLP; mov rcx, qword ptr [rbp - 0x1120] ; cmp rcx, rax ; jne 0x53287
read: rax rcx rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
00056db5: RLP; test eax, eax ; mov rdx, qword ptr [rbp - 0x1128] ; jne 0x548d9
read: eax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
00056dd7: RLP; test rax, rax ; mov r13, rax ; je 0x53287
read: rax rflags 
write: r13 rflags 
--------------------------------------------------------------------------------
00056e3e: RLP; test eax, eax ; jne 0x5415b
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00056e52: RLP; test rax, rax ; mov r12, rax ; je 0x53287
read: rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
00056ec7: RLP; add eax, 1 ; jne 0x545d7
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00056fd7: RLP; add eax, 1 ; jne 0x55884
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00056ffd: RLP; add eax, 1 ; mov r9, qword ptr [rbp - 0x1130] ; jne 0x55561
read: eax rflags 
write: eax r9 rflags 
--------------------------------------------------------------------------------
00057043: RLP; mov ecx, dword ptr [rbp - 0x1078] ; jmp 0x53201
read: 
write: ecx 
--------------------------------------------------------------------------------
0005706b: RLP; mov dword ptr [rbp - 0x1128], 0 ; mov rcx, rax ; jmp 0x54929
read: rax 
write: rcx 
--------------------------------------------------------------------------------
000570a8: RLP; jmp 0x53f6d
read: 
write: 
--------------------------------------------------------------------------------
000570cc: RLP; add eax, 1 ; mov r8d, dword ptr [rbp - 0x1120] ; mov r9, qword ptr [rbp - 0x1128] ; jne 0x53dd0
read: eax rflags 
write: eax r8d r9 rflags 
--------------------------------------------------------------------------------
00057112: RLP; add eax, 1 ; mov r8d, dword ptr [rbp - 0x1120] ; jne 0x53e7d
read: eax rflags 
write: eax r8d rflags 
--------------------------------------------------------------------------------
0005713f: RLP; add eax, 1 ; mov r8d, dword ptr [rbp - 0x1120] ; jne 0x53e36
read: eax rflags 
write: eax r8d rflags 
--------------------------------------------------------------------------------
0005716c: RLP; add eax, 1 ; mov r9, qword ptr [rbp - 0x1130] ; jne 0x55561
read: eax rflags 
write: eax r9 rflags 
--------------------------------------------------------------------------------
000571d1: RLP; add eax, 1 ; jne 0x55615
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00057223: RLP; add eax, 1 ; jne 0x555ce
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00057249: RLP; add eax, 1 ; mov r9, qword ptr [rbp - 0x1130] ; jne 0x55561
read: eax rflags 
write: eax r9 rflags 
--------------------------------------------------------------------------------
000572b2: RLP; cmp eax, -1 ; mov r10, qword ptr [rbp - 0x1188] ; je 0x535d0
read: eax rflags 
write: r10 rflags 
--------------------------------------------------------------------------------
000572f2: RLP; test eax, eax ; mov r10, qword ptr [rbp - 0x10c0] ; jne 0x52f13
read: eax rflags 
write: r10 rflags 
--------------------------------------------------------------------------------
00057314: RLP; test rax, rax ; mov r12, rax ; mov r10, qword ptr [rbp - 0x10c0] ; je 0x53287
read: rax rflags 
write: r10 r12 rflags 
--------------------------------------------------------------------------------
00057346: RLP; mov dword ptr [rbp - 0x10d8], eax ; add eax, 1 ; mov r10, qword ptr [rbp - 0x10c0] ; je 0x535d0
read: eax rflags 
write: eax r10 rflags 
--------------------------------------------------------------------------------
000573e6: RLP; test eax, eax ; mov r10, qword ptr [rbp - 0x10c0] ; jne 0x573a6
read: eax rflags 
write: r10 rflags 
--------------------------------------------------------------------------------
00057404: RLP; test rax, rax ; mov r12, rax ; mov r10, qword ptr [rbp - 0x10c0] ; je 0x53287
read: rax rflags 
write: r10 r12 rflags 
--------------------------------------------------------------------------------
00057482: RLP; mov dword ptr [rbp - 0x10c0], 0 ; mov r10, rax ; mov r8, qword ptr [rbp - 0x10d8] ; jmp 0x53a61
read: rax 
write: r10 r8 
--------------------------------------------------------------------------------
00057516: RLP; cmp eax, -1 ; mov r10, qword ptr [rbp - 0x1188] ; je 0x535d0
read: eax rflags 
write: r10 rflags 
--------------------------------------------------------------------------------
00057598: RLP; add eax, 1 ; jne 0x531e3
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000575f4: RLP; add eax, 1 ; mov ecx, dword ptr [rbp - 0x10d0] ; jne 0x5343b
read: eax rflags 
write: eax ecx rflags 
--------------------------------------------------------------------------------
000576d6: RLP; add eax, 1 ; mov ecx, dword ptr [rbp - 0x10d0] ; jne 0x5343b
read: eax rflags 
write: eax ecx rflags 
--------------------------------------------------------------------------------
00057753: RLP; test eax, eax ; mov r9, qword ptr [rbp - 0x1090] ; jne 0x550f2
read: eax rflags 
write: r9 rflags 
--------------------------------------------------------------------------------
00057775: RLP; test rax, rax ; mov qword ptr [rbp - 0x10b8], rax ; je 0x57c1f
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000579ab: RLP; jmp 0x542ec
read: 
write: 
--------------------------------------------------------------------------------
000579c1: RLP; add eax, 1 ; jne 0x57891
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00057a5d: RLP; mov r10, qword ptr [rbp - 0x1128] ; mov r8, qword ptr [rbp - 0x1130] ; mov rcx, qword ptr [rbp - 0x1138] ; mov r9, qword ptr [rbp - 0x1140] ; jmp 0x55314
read: 
write: r10 r8 r9 rcx 
--------------------------------------------------------------------------------
00057b19: RLP; lea rsi, [rax*4 + 4] ; mov rdi, r15 ; call 0xf293c
read: r15 rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
00057b2d: RLP; test eax, eax ; mov dword ptr [rbp - 0x10c4], eax ; jns 0x5392d
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00057b5a: RLP; test eax, eax ; mov rcx, qword ptr [rbp - 0x10c0] ; mov rdx, qword ptr [rbp - 0x10d8] ; jne 0x53a03
read: eax rflags 
write: rcx rdx rflags 
--------------------------------------------------------------------------------
00057b83: RLP; test rax, rax ; mov r8, rax ; je 0x53287
read: rax rflags 
write: r8 rflags 
--------------------------------------------------------------------------------
00057bea: RLP; mov r10, qword ptr [rbp - 0x10c0] ; cmp r10, rax ; jne 0x53287
read: r10 rax rflags 
write: r10 rflags 
--------------------------------------------------------------------------------
00057ca4: RLP; cmp eax, 1 ; mov ecx, 0xffffffff ; jne 0x57e0d
read: eax rflags 
write: ecx rflags 
--------------------------------------------------------------------------------
00057d3d: RLP; mov r13d, dword ptr [rip + 0x316a28] ; mov r12d, eax ; test r13d, r13d ; jne 0x57e94
read: eax r13d rflags 
write: r12d r13d rflags 
--------------------------------------------------------------------------------
00057dad: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rbx + 0x88] ; mov qword ptr [rdx + 8], r8 ; add dword ptr [rdx + 4], 1 ; mov rax, qword ptr [rsp + 0xc0] ; mov rsi, qword ptr [rax + 0x18] ; mov rbp, qword ptr [rax + 0x20] ; sub rbp, rsi ; sar rbp, 2 ; test ebp, ebp ; jle 0x57dfd
read: ebp r8 rbp rflags rsi rsp 
write: rax rbp rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00057df2: RLP; cmp ebp, eax ; mov eax, 0xffffffff ; cmovne r12d, eax ; test dword ptr [rbx], 0x8000 ; je 0x57e24
read: eax ebp r12d rflags 
write: eax r12d rflags 
--------------------------------------------------------------------------------
00057e60: RLP; add rsp, 0x80 ; test r13d, r13d ; je 0x57e0a
read: r13d rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00057e8b: RLP; jmp 0x57e0a
read: 
write: 
--------------------------------------------------------------------------------
00057ebb: RLP; jmp 0x57d60
read: 
write: 
--------------------------------------------------------------------------------
000581c6: RLP; jmp 0x583a4
read: 
write: 
--------------------------------------------------------------------------------
000581df: RLP; lea rdx, [rbp - 0x1c0] ; mov rsi, rax ; mov rdi, r13 ; call 0x9691c
read: r13 rax rip rsp 
write: rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000581f5: RLP; test eax, eax ; mov r8d, dword ptr [rbp - 0x1d0] ; jle 0x5867c
read: eax rflags 
write: r8d rflags 
--------------------------------------------------------------------------------
000584d0: RLP; sub ebx, 0x25 ; cmp bl, 0x53 ; ja 0x5a060
read: bl ebx rflags 
write: ebx rflags 
--------------------------------------------------------------------------------
00058622: RLP; add rsp, 0x80 ; mov eax, dword ptr [rbp - 0x284] ; test eax, eax ; je 0x583bf
read: eax rflags rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
0005865a: RLP; cmp byte ptr [rbp - 0x1fd], 0 ; je 0x583cc
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
00058677: RLP; jmp 0x583cc
read: 
write: 
--------------------------------------------------------------------------------
00058712: RLP; mov rsi, qword ptr [rbp - 0x230] ; test rax, rax ; mov qword ptr [rbp - 0x1d8], rax ; mov qword ptr [rsi], rax ; jne 0x59f52
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
000587bd: RLP; add rsp, 0x80 ; mov rdx, qword ptr [r15 + 0x88] ; mov qword ptr [rdx + 8], r8 ; add dword ptr [rdx + 4], 1 ; jmp 0x57fc1
read: r8 rsp 
write: rdx rflags rsp 
--------------------------------------------------------------------------------
00058a7b: RLP; mov r9, qword ptr [rbp - 0x1e8] ; mov r11d, dword ptr [rbp - 0x1d0] ; cmp qword ptr [rbp - 0x208], r9 ; je 0x5dc50
read: r9 rflags 
write: r11d r9 rflags 
--------------------------------------------------------------------------------
00058ad3: RLP; mov rsi, qword ptr [rbp - 0x1f0] ; cmp rsi, qword ptr [rbp - 0x1a8] ; je 0x5dd05
read: rflags rsi 
write: rflags rsi 
--------------------------------------------------------------------------------
00058ca6: RLP; cmp rax, -2 ; jne 0x5a13c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00058df4: RLP; cmp rax, -2 ; jne 0x593e4
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000591a3: RLP; jmp 0x583a4
read: 
write: 
--------------------------------------------------------------------------------
00059303: RLP; test rax, rax ; mov r10, qword ptr [rbp - 0x1e8] ; je 0x5dac0
read: rax rflags 
write: r10 rflags 
--------------------------------------------------------------------------------
0005936b: RLP; cmp eax, -1 ; mov r14d, eax ; mov r8d, dword ptr [rbp - 0x1e8] ; mov r10, qword ptr [rbp - 0x208] ; mov r11, qword ptr [rbp - 0x260] ; mov rcx, qword ptr [rbp - 0x268] ; mov rdx, qword ptr [rbp - 0x270] ; jne 0x59295
read: eax rflags 
write: r10 r11 r14d r8d rcx rdx rflags 
--------------------------------------------------------------------------------
000594ab: RLP; mov rdx, qword ptr [rbp - 0x270] ; mov r9, qword ptr [rbp - 0x268] ; mov r11d, dword ptr [rbp - 0x260] ; mov rcx, qword ptr [rbp - 0x1d0] ; mov rax, qword ptr [rbp - 0x220] ; lea rbx, [rdx - 1] ; cmp rax, rbx ; jae 0x5953e
read: rax rbx rflags 
write: r11d r9 rax rbx rcx rdx rflags 
--------------------------------------------------------------------------------
0005950d: RLP; cmp r12, rbx ; jne 0x594f8
read: r12 rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
00059695: RLP; jmp 0x58ad3
read: 
write: 
--------------------------------------------------------------------------------
0005973e: RLP; mov eax, dword ptr [r15] ; mov r9, qword ptr [rbp - 0x1c8] ; jmp 0x57fb6
read: 
write: eax r9 
--------------------------------------------------------------------------------
00059761: RLP; jmp 0x583a4
read: 
write: 
--------------------------------------------------------------------------------
0005982a: RLP; test rax, rax ; mov qword ptr [rbp - 0x1d8], rax ; mov qword ptr [r13], rax ; je 0x5bcf4
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00059a08: RLP; test rax, rax ; mov qword ptr [rbp - 0x1d8], rax ; mov qword ptr [rbx], rax ; je 0x5badc
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00059b0a: RLP; test rax, rax ; mov qword ptr [rbp - 0x240], rax ; mov qword ptr [r13], rax ; je 0x5c3ca
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00059c57: RLP; test rax, rax ; mov r9, qword ptr [rbp - 0x228] ; je 0x60bed
read: rax rflags 
write: r9 rflags 
--------------------------------------------------------------------------------
00059cf2: RLP; test rax, rax ; mov qword ptr [rbp - 0x240], rax ; mov qword ptr [r13], rax ; je 0x5c92c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00059e52: RLP; xor r8d, r8d ; test ebx, ebx ; jne 0x58122
read: ebx r8d rflags 
write: r8d rflags 
--------------------------------------------------------------------------------
00059e9a: RLP; test rax, rax ; je 0x59ea3
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00059f38: RLP; mov rsi, qword ptr [rbp - 0x230] ; test rax, rax ; mov qword ptr [rbp - 0x240], rax ; mov qword ptr [rsi], rax ; je 0x5d3fd
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
0005a1f5: RLP; test r13d, r13d ; jne 0x5811f
read: r13d rflags 
write: rflags 
--------------------------------------------------------------------------------
0005a24a: RLP; test rax, rax ; je 0x5a253
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0005a440: RLP; mov rdx, rbx ; mov r12, rax ; jmp 0x58fdd
read: rax rbx 
write: r12 rdx 
--------------------------------------------------------------------------------
0005a597: RLP; jmp 0x583a4
read: 
write: 
--------------------------------------------------------------------------------
0005a5e3: RLP; test rax, rax ; mov rcx, qword ptr [rbp - 0x1d8] ; mov rdx, qword ptr [rbp - 0x268] ; je 0x5bb1f
read: rax rflags 
write: rcx rdx rflags 
--------------------------------------------------------------------------------
0005a707: RLP; cmp eax, -1 ; jne 0x5d7b7
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0005a83a: RLP; jmp 0x5a949
read: 
write: 
--------------------------------------------------------------------------------
0005a86e: RLP; cmp rax, -2 ; je 0x5a9df
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0005a8e2: RLP; test rax, rax ; mov rdx, qword ptr [rbp - 0x1d8] ; je 0x6086a
read: rax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
0005a9b5: RLP; test rax, rax ; je 0x5a9be
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0005ab10: RLP; cmp r12, r13 ; je 0x5d829
read: r12 r13 rflags 
write: rflags 
--------------------------------------------------------------------------------
0005ab63: RLP; test rax, rax ; je 0x5ab6c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0005ac0e: RLP; test rax, rax ; je 0x5abec
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0005ad7d: RLP; test rax, rax ; je 0x5ad85
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0005afb0: RLP; cmp eax, -1 ; mov r14d, eax ; jne 0x58e18
read: eax rflags 
write: r14d rflags 
--------------------------------------------------------------------------------
0005b1d6: RLP; and ebx, 8 ; mov rax, qword ptr [rbp - 0x1a8] ; jne 0x5b23a
read: ebx rflags 
write: ebx rax rflags 
--------------------------------------------------------------------------------
0005b279: RLP; test rax, rax ; je 0x609c4
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0005b2fb: RLP; and ebx, 8 ; mov rax, qword ptr [rbp - 0x1a8] ; jne 0x5b23a
read: ebx rflags 
write: ebx rax rflags 
--------------------------------------------------------------------------------
0005b36f: RLP; and ebx, 8 ; mov rax, qword ptr [rbp - 0x1a8] ; jne 0x5b238
read: ebx rflags 
write: ebx rax rflags 
--------------------------------------------------------------------------------
0005b778: RLP; cmp eax, -1 ; mov r14d, eax ; jne 0x58ccd
read: eax rflags 
write: r14d rflags 
--------------------------------------------------------------------------------
0005b960: RLP; mov r13d, 3 ; jmp 0x5b17e
read: 
write: r13d 
--------------------------------------------------------------------------------
0005bb45: RLP; test rax, rax ; je 0x5c9ea
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0005bff5: RLP; mov r11, rbx ; mov r10, qword ptr [rbp - 0x1e8] ; mov r8d, dword ptr [rbp - 0x208] ; mov r9, qword ptr [rbp - 0x260] ; mov rcx, qword ptr [rbp - 0x268] ; jmp 0x59259
read: rbx 
write: r10 r11 r8d r9 rcx 
--------------------------------------------------------------------------------
0005c044: RLP; cmp eax, -1 ; mov r9d, dword ptr [rbp - 0x1d0] ; mov rsi, qword ptr [rbp - 0x1e0] ; mov r8d, dword ptr [rbp - 0x1f8] ; mov rdx, qword ptr [rbp - 0x260] ; jne 0x5848e
read: eax rflags 
write: r8d r9d rdx rflags rsi 
--------------------------------------------------------------------------------
0005c167: RLP; test rax, rax ; mov rdx, qword ptr [rbp - 0x228] ; mov ecx, dword ptr [rbp - 0x240] ; je 0x5cf42
read: rax rflags 
write: ecx rdx rflags 
--------------------------------------------------------------------------------
0005c1b1: RLP; cmp eax, -1 ; jne 0x5c316
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0005c2fe: RLP; jmp 0x5b9e1
read: 
write: 
--------------------------------------------------------------------------------
0005c33b: RLP; jmp 0x583a4
read: 
write: 
--------------------------------------------------------------------------------
0005c419: RLP; cmp eax, -1 ; mov ebx, eax ; jne 0x5b0d5
read: eax rflags 
write: ebx rflags 
--------------------------------------------------------------------------------
0005c638: RLP; cmp eax, -1 ; mov r14d, eax ; jne 0x59421
read: eax rflags 
write: r14d rflags 
--------------------------------------------------------------------------------
0005c676: RLP; cmp eax, -1 ; mov r14d, eax ; mov r11d, dword ptr [rbp - 0x1d0] ; je 0x58b73
read: eax rflags 
write: r11d r14d rflags 
--------------------------------------------------------------------------------
0005c6dc: RLP; cmp eax, -1 ; mov r14d, eax ; mov r11d, dword ptr [rbp - 0x1d0] ; mov rcx, qword ptr [rbp - 0x260] ; jne 0x5890e
read: eax rflags 
write: r11d r14d rcx rflags 
--------------------------------------------------------------------------------
0005c734: RLP; test rax, rax ; mov r11d, dword ptr [rbp - 0x1d0] ; mov rcx, qword ptr [rbp - 0x208] ; je 0x5c884
read: rax rflags 
write: r11d rcx rflags 
--------------------------------------------------------------------------------
0005c7de: RLP; mov qword ptr [rbp - 0x208], rbx ; mov qword ptr [rbp - 0x1f0], rax ; mov r11d, dword ptr [rbp - 0x1d0] ; mov r9, qword ptr [rbp - 0x260] ; mov rcx, qword ptr [rbp - 0x268] ; jmp 0x5894c
read: rax rbx 
write: r11d r9 rcx 
--------------------------------------------------------------------------------
0005c82a: RLP; cmp eax, -1 ; mov r14d, eax ; je 0x5ad09
read: eax rflags 
write: r14d rflags 
--------------------------------------------------------------------------------
0005c855: RLP; cmp eax, -1 ; mov r14d, eax ; mov r11d, dword ptr [rbp - 0x1d0] ; mov rcx, qword ptr [rbp - 0x260] ; jne 0x58976
read: eax rflags 
write: r11d r14d rcx rflags 
--------------------------------------------------------------------------------
0005c896: RLP; mov qword ptr [rbp - 0x1f0], 0 ; mov dword ptr [rbp - 0x1fc], 0xffffffff ; jmp 0x583a4
read: 
write: 
--------------------------------------------------------------------------------
0005c8ed: RLP; test rax, rax ; mov r11d, dword ptr [rbp - 0x1d0] ; mov r9, qword ptr [rbp - 0x208] ; mov rcx, qword ptr [rbp - 0x260] ; je 0x5cb22
read: rax rflags 
write: r11d r9 rcx rflags 
--------------------------------------------------------------------------------
0005ca1b: RLP; cmp eax, -1 ; mov r13d, eax ; mov rsi, qword ptr [rbp - 0x218] ; jne 0x59c02
read: eax rflags 
write: r13d rflags rsi 
--------------------------------------------------------------------------------
0005cb34: RLP; mov qword ptr [rbp - 0x1f0], 0 ; mov dword ptr [rbp - 0x1fc], 0xffffffff ; jmp 0x583a4
read: 
write: 
--------------------------------------------------------------------------------
0005cc5c: RLP; mov r10, qword ptr [rbp - 0x2c0] ; mov r12, rax ; jmp 0x5a358
read: rax 
write: r10 r12 
--------------------------------------------------------------------------------
0005cc99: RLP; test eax, eax ; mov r10, qword ptr [rbp - 0x2c0] ; jne 0x5cc14
read: eax rflags 
write: r10 rflags 
--------------------------------------------------------------------------------
0005ccbd: RLP; test rax, rax ; mov r9, rax ; mov r10, qword ptr [rbp - 0x2c0] ; je 0x5cd2b
read: rax rflags 
write: r10 r9 rflags 
--------------------------------------------------------------------------------
0005cce8: RLP; mov byte ptr [rbp - 0x1fd], 1 ; mov r12, rax ; mov r10, qword ptr [rbp - 0x2c0] ; jmp 0x5a358
read: rax 
write: r10 r12 
--------------------------------------------------------------------------------
0005cd14: RLP; test rax, rax ; je 0x5cd4e
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0005cd63: RLP; mov qword ptr [rbp - 0x1f0], 0 ; mov dword ptr [rbp - 0x1fc], 0xffffffff ; jmp 0x583a4
read: 
write: 
--------------------------------------------------------------------------------
0005cdd5: RLP; cmp eax, -1 ; mov r14d, eax ; mov ecx, dword ptr [rbp - 0x1e8] ; mov r10, qword ptr [rbp - 0x228] ; jne 0x59e1f
read: eax rflags 
write: ecx r10 r14d rflags 
--------------------------------------------------------------------------------
0005ce5d: RLP; test eax, eax ; mov r8d, dword ptr [rbp - 0x1e8] ; mov r10, qword ptr [rbp - 0x208] ; mov r11, qword ptr [rbp - 0x260] ; mov r9, qword ptr [rbp - 0x268] ; mov rcx, qword ptr [rbp - 0x270] ; jne 0x5bf88
read: eax rflags 
write: r10 r11 r8d r9 rcx rflags 
--------------------------------------------------------------------------------
0005ceb9: RLP; test rax, rax ; mov qword ptr [rbp - 0x1e8], rax ; mov r8d, dword ptr [rbp - 0x208] ; mov r10, qword ptr [rbp - 0x260] ; mov r11, qword ptr [rbp - 0x268] ; mov r9, qword ptr [rbp - 0x270] ; mov rcx, qword ptr [rbp - 0x278] ; je 0x5d072
read: rax rflags 
write: r10 r11 r8d r9 rcx rflags 
--------------------------------------------------------------------------------
0005cf17: RLP; mov r11, rbx ; mov r10, qword ptr [rbp - 0x1e8] ; mov byte ptr [rbp - 0x1fd], 1 ; mov r8d, dword ptr [rbp - 0x208] ; mov r9, qword ptr [rbp - 0x260] ; mov rcx, qword ptr [rbp - 0x268] ; jmp 0x59259
read: rbx 
write: r10 r11 r8d r9 rcx 
--------------------------------------------------------------------------------
0005cf6a: RLP; test rax, rax ; mov ecx, dword ptr [rbp - 0x228] ; je 0x5d182
read: rax rflags 
write: ecx rflags 
--------------------------------------------------------------------------------
0005cfcc: RLP; cmp eax, -1 ; jne 0x5d08e
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0005d0b2: RLP; cmp eax, -1 ; mov r14d, eax ; je 0x5a093
read: eax rflags 
write: r14d rflags 
--------------------------------------------------------------------------------
0005d0d8: RLP; test rax, rax ; je 0x5d1c0
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0005d1d2: RLP; mov qword ptr [rbp - 0x1f0], 0 ; mov dword ptr [rbp - 0x1fc], 0xffffffff ; jmp 0x583a4
read: 
write: 
--------------------------------------------------------------------------------
0005d272: RLP; mov rdx, rbx ; mov r12, rax ; jmp 0x5a658
read: rax rbx 
write: r12 rdx 
--------------------------------------------------------------------------------
0005d2ab: RLP; test eax, eax ; mov rdx, qword ptr [rbp - 0x1f0] ; jne 0x5d237
read: eax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
0005d2cb: RLP; test rax, rax ; mov r9, rax ; mov rdx, qword ptr [rbp - 0x1f0] ; je 0x5d31a
read: rax rflags 
write: r9 rdx rflags 
--------------------------------------------------------------------------------
0005d2e9: RLP; mov rdx, rbx ; mov r12, rax ; mov byte ptr [rbp - 0x1fd], 1 ; jmp 0x5a658
read: rax rbx 
write: r12 rdx 
--------------------------------------------------------------------------------
0005d30a: RLP; test rax, rax ; je 0x5d336
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0005d344: RLP; mov qword ptr [rbp - 0x1f0], 0 ; mov dword ptr [rbp - 0x1fc], 0xffffffff ; jmp 0x583a4
read: 
write: 
--------------------------------------------------------------------------------
0005d378: RLP; cmp eax, -1 ; mov r14d, eax ; mov rdx, qword ptr [rbp - 0x1f0] ; mov r9d, dword ptr [rbp - 0x208] ; jne 0x5a505
read: eax rflags 
write: r14d r9d rdx rflags 
--------------------------------------------------------------------------------
0005d3bd: RLP; cmp eax, -1 ; mov r14d, eax ; je 0x5b7af
read: eax rflags 
write: r14d rflags 
--------------------------------------------------------------------------------
0005d3eb: RLP; mov qword ptr [rbx], 0 ; mov eax, dword ptr [rbp - 0x1fc] ; jmp 0x583fb
read: 
write: eax 
--------------------------------------------------------------------------------
0005d446: RLP; cmp eax, -1 ; mov r14d, eax ; mov rdx, qword ptr [rbp - 0x1f0] ; jne 0x59020
read: eax rflags 
write: r14d rdx rflags 
--------------------------------------------------------------------------------
0005d499: RLP; cmp eax, -1 ; mov r14d, eax ; je 0x5b98e
read: eax rflags 
write: r14d rflags 
--------------------------------------------------------------------------------
0005d520: RLP; mov r10, qword ptr [rbp - 0x2b8] ; mov r12, rax ; jmp 0x59108
read: rax 
write: r10 r12 
--------------------------------------------------------------------------------
0005d53b: RLP; cmp eax, -1 ; mov r14d, eax ; jne 0x5a1bb
read: eax rflags 
write: r14d rflags 
--------------------------------------------------------------------------------
0005d59e: RLP; test eax, eax ; mov r10, qword ptr [rbp - 0x2b8] ; jne 0x5d4d8
read: eax rflags 
write: r10 rflags 
--------------------------------------------------------------------------------
0005d5c2: RLP; test rax, rax ; mov r9, rax ; mov r10, qword ptr [rbp - 0x2b8] ; je 0x5d630
read: rax rflags 
write: r10 r9 rflags 
--------------------------------------------------------------------------------
0005d5ed: RLP; mov byte ptr [rbp - 0x1fd], 1 ; mov r12, rax ; mov r10, qword ptr [rbp - 0x2b8] ; jmp 0x59108
read: rax 
write: r10 r12 
--------------------------------------------------------------------------------
0005d619: RLP; test rax, rax ; je 0x5d653
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0005d668: RLP; mov qword ptr [rbp - 0x1f0], 0 ; mov dword ptr [rbp - 0x1fc], 0xffffffff ; jmp 0x583a4
read: 
write: 
--------------------------------------------------------------------------------
0005d7d9: RLP; cmp eax, -1 ; mov r14d, eax ; jne 0x58f26
read: eax rflags 
write: r14d rflags 
--------------------------------------------------------------------------------
0005d7fb: RLP; cmp eax, -1 ; mov r15d, eax ; jne 0x5a805
read: eax rflags 
write: r15d rflags 
--------------------------------------------------------------------------------
0005d83f: RLP; cmp eax, -1 ; mov r14d, eax ; je 0x5b7e3
read: eax rflags 
write: r14d rflags 
--------------------------------------------------------------------------------
0005d871: RLP; cmp eax, -1 ; mov r14d, eax ; mov rsi, qword ptr [rbp - 0x1d0] ; mov rdx, qword ptr [rbp - 0x1f0] ; mov r9d, dword ptr [rbp - 0x208] ; jne 0x5a2bd
read: eax rflags 
write: r14d r9d rdx rflags rsi 
--------------------------------------------------------------------------------
0005d9ca: RLP; cmp eax, -1 ; mov r14d, eax ; jne 0x5d8f7
read: eax rflags 
write: r14d rflags 
--------------------------------------------------------------------------------
0005da09: RLP; test eax, eax ; mov rdx, qword ptr [rbp - 0x1f0] ; jne 0x5a401
read: eax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
0005da2d: RLP; test rax, rax ; mov r9, rax ; mov rdx, qword ptr [rbp - 0x1f0] ; je 0x5da7c
read: rax rflags 
write: r9 rdx rflags 
--------------------------------------------------------------------------------
0005da4b: RLP; mov rdx, rbx ; mov r12, rax ; mov byte ptr [rbp - 0x1fd], 1 ; jmp 0x58fdd
read: rax rbx 
write: r12 rdx 
--------------------------------------------------------------------------------
0005da6c: RLP; test rax, rax ; je 0x5da98
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0005daa6: RLP; mov qword ptr [rbp - 0x1f0], 0 ; mov dword ptr [rbp - 0x1fc], 0xffffffff ; jmp 0x583a4
read: 
write: 
--------------------------------------------------------------------------------
0005dace: RLP; mov qword ptr [rbp - 0x1f0], 0 ; mov dword ptr [rbp - 0x1fc], 0xffffffff ; jmp 0x583a4
read: 
write: 
--------------------------------------------------------------------------------
0005db42: RLP; test rax, rax ; je 0x6093a
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0005db6e: RLP; cmp eax, -1 ; mov r14d, eax ; jne 0x5b934
read: eax rflags 
write: r14d rflags 
--------------------------------------------------------------------------------
0005dbc7: RLP; mov rax, qword ptr [rbx + r12*8 + 0x10] ; add r12, 1 ; cmp qword ptr [rbx], r12 ; mov qword ptr [rax], 0 ; ja 0x5dbb6
read: r12 rflags 
write: r12 rax rflags 
--------------------------------------------------------------------------------
0005dc10: RLP; cmp eax, -1 ; mov r14d, eax ; mov r8d, dword ptr [rbp - 0x1d0] ; je 0x585b8
read: eax rflags 
write: r14d r8d rflags 
--------------------------------------------------------------------------------
0005dc3b: RLP; cmp eax, -1 ; mov r8d, dword ptr [rbp - 0x1d0] ; je 0x58384
read: eax rflags 
write: r8d rflags 
--------------------------------------------------------------------------------
0005dce4: RLP; mov qword ptr [rbp - 0x208], rbx ; mov qword ptr [rbp - 0x1f0], rax ; mov r11d, dword ptr [rbp - 0x1d0] ; mov r9, qword ptr [rbp - 0x1e8] ; jmp 0x58a96
read: rax rbx 
write: r11d r9 
--------------------------------------------------------------------------------
0005dd3c: RLP; test eax, eax ; mov r11d, dword ptr [rbp - 0x1d0] ; mov r9, qword ptr [rbp - 0x1e8] ; jne 0x5dc83
read: eax rflags 
write: r11d r9 rflags 
--------------------------------------------------------------------------------
0005dd6e: RLP; test rax, rax ; mov rcx, rax ; mov r11d, dword ptr [rbp - 0x1d0] ; mov r9, qword ptr [rbp - 0x1e8] ; je 0x5de1f
read: rax rflags 
write: r11d r9 rcx rflags 
--------------------------------------------------------------------------------
0005ddb0: RLP; mov qword ptr [rbp - 0x208], rbx ; mov qword ptr [rbp - 0x1f0], rax ; mov byte ptr [rbp - 0x1fd], 1 ; mov r11d, dword ptr [rbp - 0x1d0] ; mov r9, qword ptr [rbp - 0x1e8] ; jmp 0x58a96
read: rax rbx 
write: r11d r9 
--------------------------------------------------------------------------------
0005ddf9: RLP; test rax, rax ; je 0x5de3b
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0005de4d: RLP; mov qword ptr [rbp - 0x1f0], 0 ; mov dword ptr [rbp - 0x1fc], 0xffffffff ; jmp 0x583a4
read: 
write: 
--------------------------------------------------------------------------------
0005de81: RLP; cmp eax, -1 ; mov r14d, eax ; mov r11d, dword ptr [rbp - 0x1d0] ; mov rcx, qword ptr [rbp - 0x1e8] ; jne 0x59654
read: eax rflags 
write: r11d r14d rcx rflags 
--------------------------------------------------------------------------------
0005ded6: RLP; test rax, rax ; je 0x5eb09
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0005df1b: RLP; mov rsi, qword ptr [rbp - 0x290] ; mov qword ptr [rbp - 0x2a8], rax ; mov r9, qword ptr [rbp - 0x1d0] ; mov rcx, qword ptr [rbp - 0x268] ; mov esi, dword ptr [rsi + 0xd8] ; mov dword ptr [rbp - 0x260], esi ; sub esi, 1 ; test rax, rax ; mov dword ptr [rbp - 0x278], esi ; jne 0x5e9a0
read: esi rax rflags 
write: esi r9 rcx rflags rsi 
--------------------------------------------------------------------------------
0005e014: RLP; cmp ebx, dword ptr [rbp - 0x268] ; lea rdi, [rax + 1] ; mov rax, qword ptr [rbp - 0x260] ; mov qword ptr [rax + r12*8], rdi ; jne 0x5e006
read: ebx rdi rflags 
write: rax rdi rflags 
--------------------------------------------------------------------------------
0005e0af: RLP; cmp eax, -1 ; mov r13d, eax ; mov rdx, qword ptr [rbp - 0x2a0] ; jne 0x5e05f
read: eax rflags 
write: r13d rdx rflags 
--------------------------------------------------------------------------------
0005e129: RLP; mov rcx, qword ptr [rbp - 0x2a0] ; mov rdx, qword ptr [rbp - 0x270] ; lea r14, [rcx - 1] ; cmp rdx, r14 ; jae 0x5e189
read: r14 rdx rflags 
write: r14 rcx rdx rflags 
--------------------------------------------------------------------------------
0005e166: RLP; mov rdx, qword ptr [rbp - 0x270] ; mov rcx, qword ptr [rbp - 0x2a0] ; cmp r13, rdx ; jne 0x5e143
read: r13 rdx rflags 
write: rcx rdx rflags 
--------------------------------------------------------------------------------
0005e19b: RLP; mov rsi, qword ptr [rbp - 0x260] ; add rax, 1 ; mov qword ptr [rsi + r12*8], rax ; add r12, 1 ; cmp r12, 0xa ; jne 0x5dfa8
read: r12 rax rflags 
write: r12 rax rflags rsi 
--------------------------------------------------------------------------------
0005e2a4: RLP; lea rax, [r13 - 1] ; cmp r12, rax ; mov qword ptr [rbp - 0x2b0], rax ; jae 0x5e2e4
read: r12 rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
0005e2cb: RLP; cmp r14, r12 ; jne 0x5e2b7
read: r12 r14 rflags 
write: rflags 
--------------------------------------------------------------------------------
0005e2fd: RLP; mov rcx, qword ptr [rbp - 0x270] ; add qword ptr [rbp - 0x270], 1 ; add rax, 1 ; cmp qword ptr [rbp - 0x270], 0xa ; mov rsi, qword ptr [rbp - 0x260] ; mov qword ptr [rsi + rcx*8], rax ; jne 0x5e1e7
read: rax rflags 
write: rax rcx rflags rsi 
--------------------------------------------------------------------------------
0005e4cc: RLP; jmp 0x5e3c4
read: 
write: 
--------------------------------------------------------------------------------
0005e59c: RLP; cmp eax, -1 ; mov r14d, eax ; jne 0x5e579
read: eax rflags 
write: r14d rflags 
--------------------------------------------------------------------------------
0005e64c: RLP; jmp 0x5e534
read: 
write: 
--------------------------------------------------------------------------------
0005e6a0: RLP; cmp eax, -1 ; mov r14d, eax ; jne 0x5e414
read: eax rflags 
write: r14d rflags 
--------------------------------------------------------------------------------
0005e734: RLP; mov r9, qword ptr [rbp - 0x260] ; mov rcx, qword ptr [rbp - 0x1d0] ; lea rbx, [r13 - 1] ; cmp qword ptr [rbp - 0x220], rbx ; jae 0x5e798
read: rbx rflags 
write: r9 rbx rcx rflags 
--------------------------------------------------------------------------------
0005e771: RLP; cmp r12, qword ptr [rbp - 0x220] ; mov rcx, qword ptr [rbp - 0x1d0] ; jne 0x5e755
read: r12 rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
0005e7b3: RLP; test eax, eax ; jne 0x5e5f5
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0005e7c9: RLP; test rax, rax ; mov r12, rax ; je 0x5e842
read: rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
0005e7eb: RLP; mov byte ptr [rbp - 0x1fd], 1 ; jmp 0x5e534
read: 
write: 
--------------------------------------------------------------------------------
0005e80a: RLP; test rax, rax ; mov r12, rax ; jne 0x5e534
read: rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
0005e826: RLP; mov qword ptr [rbp - 0x1f0], 0 ; xor ebx, ebx ; mov dword ptr [rbp - 0x1fc], 0xffffffff ; jmp 0x583a4
read: ebx 
write: ebx rflags 
--------------------------------------------------------------------------------
0005e8af: RLP; test eax, eax ; mov rdx, qword ptr [rbp - 0x1f0] ; jne 0x5e48c
read: eax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
0005e8cc: RLP; test rax, rax ; mov rbx, rax ; je 0x5e842
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
0005e8ee: RLP; mov byte ptr [rbp - 0x1fd], 1 ; jmp 0x5e3c4
read: 
write: 
--------------------------------------------------------------------------------
0005e909: RLP; test rax, rax ; mov rbx, rax ; jne 0x5e3c4
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
0005e921: RLP; jmp 0x5e826
read: 
write: 
--------------------------------------------------------------------------------
0005e938: RLP; cmp eax, -1 ; mov r14d, eax ; mov ecx, dword ptr [rbp - 0x2c0] ; jne 0x5e269
read: eax rflags 
write: ecx r14d rflags 
--------------------------------------------------------------------------------
0005ea16: RLP; mov rsi, qword ptr [rbp - 0x2b0] ; mov rdi, qword ptr [rbp - 0x270] ; mov qword ptr [rsi], 0 ; mov rdx, rsi ; mov esi, eax ; call 0x96b8c
read: eax rip rsi rsp 
write: esi rdi rdx rsi rsp 
--------------------------------------------------------------------------------
0005ea39: RLP; cmp rax, -1 ; mov rbx, rax ; je 0x5eed9
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
0005ea6a: RLP; mov edx, dword ptr [rbp - 0x2b8] ; lea rdi, [rax + 1] ; add edx, 1 ; cmp edx, dword ptr [rbp - 0x260] ; jne 0x5ea59
read: edx rflags 
write: edx rdi rflags 
--------------------------------------------------------------------------------
0005eabd: RLP; mov rsi, qword ptr [rbp - 0x270] ; mov rdx, rbx ; mov rdi, rax ; call 0x892cc
read: rax rbx rip rsp 
write: rdi rdx rsi rsp 
--------------------------------------------------------------------------------
0005ead3: RLP; mov r8, qword ptr [rbp - 0x2b8] ; mov byte ptr [rax], 0 ; mov rax, qword ptr [rbp - 0x1c8] ; mov qword ptr [rax + r12*8], r8 ; add r12, 1 ; cmp r12, 0xa ; jne 0x5e9e7
read: r12 r8 rflags 
write: r12 r8 rax rflags 
--------------------------------------------------------------------------------
0005eb1b: RLP; mov qword ptr [rbp - 0x1f0], 0 ; mov dword ptr [rbp - 0x1fc], 0xffffffff ; jmp 0x583a4
read: 
write: 
--------------------------------------------------------------------------------
0005ebb4: RLP; mov r11, r12 ; mov r10, rax ; mov r8d, dword ptr [rbp - 0x1e8] ; mov rcx, qword ptr [rbp - 0x208] ; jmp 0x591d1
read: r12 rax 
write: r10 r11 r8d rcx 
--------------------------------------------------------------------------------
0005ebfc: RLP; cmp eax, -1 ; mov r14d, eax ; mov r8d, dword ptr [rbp - 0x1e8] ; mov r10, qword ptr [rbp - 0x208] ; mov r11, qword ptr [rbp - 0x260] ; mov r9, qword ptr [rbp - 0x268] ; mov rcx, qword ptr [rbp - 0x270] ; jne 0x59208
read: eax rflags 
write: r10 r11 r14d r8d r9 rcx rflags 
--------------------------------------------------------------------------------
0005ec73: RLP; test eax, eax ; mov r8d, dword ptr [rbp - 0x1e8] ; mov r10, qword ptr [rbp - 0x208] ; mov r11, qword ptr [rbp - 0x260] ; mov rcx, qword ptr [rbp - 0x268] ; jne 0x5eb63
read: eax rflags 
write: r10 r11 r8d rcx rflags 
--------------------------------------------------------------------------------
0005ecc1: RLP; test rax, rax ; mov r9, rax ; mov r8d, dword ptr [rbp - 0x1e8] ; mov r10, qword ptr [rbp - 0x208] ; mov r11, qword ptr [rbp - 0x260] ; mov rcx, qword ptr [rbp - 0x268] ; je 0x5ed72
read: rax rflags 
write: r10 r11 r8d r9 rcx rflags 
--------------------------------------------------------------------------------
0005ed09: RLP; mov r11, r12 ; mov r10, rax ; mov byte ptr [rbp - 0x1fd], 1 ; mov r8d, dword ptr [rbp - 0x1e8] ; mov rcx, qword ptr [rbp - 0x208] ; jmp 0x591d1
read: r12 rax 
write: r10 r11 r8d rcx 
--------------------------------------------------------------------------------
0005ed4d: RLP; test rax, rax ; mov r10, qword ptr [rbp - 0x1e8] ; je 0x5ed8e
read: rax rflags 
write: r10 rflags 
--------------------------------------------------------------------------------
0005ed9c: RLP; mov qword ptr [rbp - 0x1f0], 0 ; mov dword ptr [rbp - 0x1fc], 0xffffffff ; jmp 0x583a4
read: 
write: 
--------------------------------------------------------------------------------
0005edd0: RLP; cmp eax, -1 ; mov r14d, eax ; mov r11d, dword ptr [rbp - 0x1d0] ; mov rcx, qword ptr [rbp - 0x1e8] ; jne 0x595d8
read: eax rflags 
write: r11d r14d rcx rflags 
--------------------------------------------------------------------------------
0005ee19: RLP; cmp eax, -1 ; mov r14d, eax ; mov r11d, dword ptr [rbp - 0x1d0] ; mov rcx, qword ptr [rbp - 0x1e8] ; jne 0x5961d
read: eax rflags 
write: r11d r14d rcx rflags 
--------------------------------------------------------------------------------
0005ee54: RLP; cmp eax, -1 ; mov r14d, eax ; je 0x5ac93
read: eax rflags 
write: r14d rflags 
--------------------------------------------------------------------------------
0005ee7f: RLP; cmp eax, -1 ; mov r14d, eax ; mov r11d, dword ptr [rbp - 0x1d0] ; mov rcx, qword ptr [rbp - 0x1e8] ; jne 0x59597
read: eax rflags 
write: r11d r14d rcx rflags 
--------------------------------------------------------------------------------
0005ef03: RLP; cmp eax, -1 ; mov r14d, eax ; jne 0x5b8c0
read: eax rflags 
write: r14d rflags 
--------------------------------------------------------------------------------
0005ef8b: RLP; test rax, rax ; je 0x5f00e
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0005efb3: RLP; cmp eax, -1 ; mov ebx, eax ; jne 0x5b855
read: eax rflags 
write: ebx rflags 
--------------------------------------------------------------------------------
0005f020: RLP; mov qword ptr [rbp - 0x1f0], 0 ; mov dword ptr [rbp - 0x1fc], 0xffffffff ; jmp 0x583a4
read: 
write: 
--------------------------------------------------------------------------------
0005f04f: RLP; test rax, rax ; je 0x5f3a2
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0005f0b0: RLP; test eax, eax ; mov rdx, qword ptr [rbp - 0x1f0] ; jne 0x5a401
read: eax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
0005f0d4: RLP; test rax, rax ; mov r9, rax ; mov rdx, qword ptr [rbp - 0x1f0] ; jne 0x5da3c
read: rax rflags 
write: r9 rdx rflags 
--------------------------------------------------------------------------------
0005f19a: RLP; test rax, rax ; jne 0x5da71
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0005f1b1: RLP; mov qword ptr [rbp - 0x1f0], 0 ; mov dword ptr [rbp - 0x1fc], 0xffffffff ; jmp 0x583a4
read: 
write: 
--------------------------------------------------------------------------------
0005f3b4: RLP; mov qword ptr [rbp - 0x1f0], 0 ; mov dword ptr [rbp - 0x1fc], 0xffffffff ; jmp 0x583a4
read: 
write: 
--------------------------------------------------------------------------------
0005f446: RLP; cmp eax, -1 ; mov r14d, eax ; jne 0x5f365
read: eax rflags 
write: r14d rflags 
--------------------------------------------------------------------------------
0005f471: RLP; test rax, rax ; je 0x5f4e4
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0005f4f6: RLP; mov qword ptr [rbp - 0x1f0], 0 ; mov dword ptr [rbp - 0x1fc], 0xffffffff ; jmp 0x583a4
read: 
write: 
--------------------------------------------------------------------------------
0005f525: RLP; test rax, rax ; je 0x5f56c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0005f557: RLP; cmp eax, -1 ; mov ebx, eax ; jne 0x5f2fa
read: eax rflags 
write: ebx rflags 
--------------------------------------------------------------------------------
0005f57e: RLP; mov qword ptr [rbp - 0x1f0], 0 ; mov dword ptr [rbp - 0x1fc], 0xffffffff ; jmp 0x583a4
read: 
write: 
--------------------------------------------------------------------------------
0005f604: RLP; cmp eax, -1 ; mov ebx, eax ; jne 0x5f28e
read: eax rflags 
write: ebx rflags 
--------------------------------------------------------------------------------
0005f62e: RLP; test rax, rax ; je 0x5f699
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0005f6ab: RLP; mov qword ptr [rbp - 0x1f0], 0 ; mov dword ptr [rbp - 0x1fc], 0xffffffff ; jmp 0x583a4
read: 
write: 
--------------------------------------------------------------------------------
0005f6da: RLP; test rax, rax ; je 0x5f721
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0005f70c: RLP; cmp eax, -1 ; mov ebx, eax ; jne 0x5f220
read: eax rflags 
write: ebx rflags 
--------------------------------------------------------------------------------
0005f733: RLP; mov qword ptr [rbp - 0x1f0], 0 ; mov dword ptr [rbp - 0x1fc], 0xffffffff ; jmp 0x583a4
read: 
write: 
--------------------------------------------------------------------------------
0005f7df: RLP; test rax, rax ; mov qword ptr [rbp - 0x2a0], rax ; je 0x5b9f1
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0005f82c: RLP; lea rsi, [rbp - 0x1a0] ; mov rdi, qword ptr [rbp - 0x298] ; mov dword ptr [rbp - 0x124], eax ; mov qword ptr [rbp - 0x1a0], 0 ; mov qword ptr [rbp - 0x270], rsi ; mov rdx, rsi ; mov esi, eax ; call 0x96b8c
read: eax rip rsi rsp 
write: esi rdi rdx rsi rsp 
--------------------------------------------------------------------------------
0005f860: RLP; cmp rax, -1 ; je 0x5fb51
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0005f882: RLP; xor edx, edx ; cmp rax, r13 ; jne 0x5f8a7
read: edx r13 rax rflags 
write: edx rflags 
--------------------------------------------------------------------------------
0005f8a0: RLP; xor edx, edx ; test eax, eax ; sete dl ; mov ecx, edx ; or ecx, ebx ; test cl, cl ; je 0x5b9f1
read: cl eax ebx ecx edx rflags 
write: dl ecx edx rflags 
--------------------------------------------------------------------------------
0005f915: RLP; mov rsi, qword ptr [rbp - 0x1d0] ; mov dword ptr [rsi + r12*4], eax ; mov esi, eax ; mov rax, qword ptr [rbp - 0x270] ; mov rdi, qword ptr [rbp - 0x2b8] ; mov qword ptr [rax], 0 ; mov rdx, rax ; call 0x96b8c
read: eax rax rip rsp 
write: esi rax rdi rdx rsi rsp 
--------------------------------------------------------------------------------
0005f943: RLP; cmp rax, -1 ; je 0x5fb9f
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0005fa9c: RLP; lea r8, [r14 - 1] ; cmp r13, r8 ; jae 0x5faed
read: r13 r8 rflags 
write: r8 rflags 
--------------------------------------------------------------------------------
0005fac6: RLP; mov r9, qword ptr [rbp - 0x208] ; mov r8, qword ptr [rbp - 0x270] ; sub r9, 1 ; cmp r9, r13 ; jne 0x5faa8
read: r13 r9 rflags 
write: r8 r9 rflags 
--------------------------------------------------------------------------------
0005fb4c: RLP; jmp 0x5b9f1
read: 
write: 
--------------------------------------------------------------------------------
0005fb61: RLP; cmp rax, 0x10 ; ja 0x5b9f1
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0005fb94: RLP; mov ecx, dword ptr [rbp - 0x1d0] ; jmp 0x5f8ab
read: 
write: ecx 
--------------------------------------------------------------------------------
0005fbcb: RLP; cmp rax, 0x10 ; ja 0x5f98a
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0005fbf7: RLP; jmp 0x5f98a
read: 
write: 
--------------------------------------------------------------------------------
0005fc11: RLP; test eax, eax ; mov dword ptr [rbp - 0x128], eax ; setne al ; and ebx, eax ; mov rax, qword ptr [rbp - 0x1d0] ; mov esi, dword ptr [rax + r12*4] ; jmp 0x5f922
read: eax ebx rflags 
write: al ebx esi rax rflags 
--------------------------------------------------------------------------------
0005fd0f: RLP; cmp eax, -1 ; mov esi, eax ; jne 0x5fa49
read: eax rflags 
write: esi rflags 
--------------------------------------------------------------------------------
0005fd3f: RLP; cmp eax, -1 ; mov r14d, eax ; jne 0x5fce3
read: eax rflags 
write: r14d rflags 
--------------------------------------------------------------------------------
0005fe3b: RLP; mov r10, rax ; jmp 0x5fc81
read: rax 
write: r10 
--------------------------------------------------------------------------------
0005fecc: RLP; test eax, eax ; jne 0x5fdf9
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0005fee2: RLP; test rax, rax ; mov r10, rax ; je 0x5ff55
read: rax rflags 
write: r10 rflags 
--------------------------------------------------------------------------------
0005fefc: RLP; mov byte ptr [rbp - 0x1fd], 1 ; mov r10, rax ; jmp 0x5fc81
read: rax 
write: r10 
--------------------------------------------------------------------------------
0005ff1a: RLP; test rax, rax ; mov r10, rax ; jne 0x5fc81
read: rax rflags 
write: r10 rflags 
--------------------------------------------------------------------------------
0005ff39: RLP; mov qword ptr [rbp - 0x1f0], 0 ; xor ebx, ebx ; mov dword ptr [rbp - 0x1fc], 0xffffffff ; jmp 0x583a4
read: ebx 
write: ebx rflags 
--------------------------------------------------------------------------------
0005ffe0: RLP; jmp 0x5fe92
read: 
write: 
--------------------------------------------------------------------------------
00060026: RLP; test eax, eax ; mov rdx, qword ptr [rbp - 0x260] ; jne 0x5ffa1
read: eax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
00060043: RLP; test rax, rax ; mov r12, rax ; je 0x5ff55
read: rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
00060061: RLP; mov byte ptr [rbp - 0x1fd], 1 ; jmp 0x5fe92
read: 
write: 
--------------------------------------------------------------------------------
0006007c: RLP; test rax, rax ; mov r12, rax ; jne 0x5fe92
read: rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
0006009b: RLP; jmp 0x5ff39
read: 
write: 
--------------------------------------------------------------------------------
0006023a: RLP; mov rcx, rax ; jmp 0x6014f
read: rax 
write: rcx 
--------------------------------------------------------------------------------
000602b3: RLP; mov rcx, rax ; jmp 0x601a1
read: rax 
write: rcx 
--------------------------------------------------------------------------------
000602c7: RLP; test eax, eax ; jne 0x601f8
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000602dd: RLP; test rax, rax ; mov rcx, rax ; je 0x5ff55
read: rax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
000602fb: RLP; mov byte ptr [rbp - 0x1fd], 1 ; mov rcx, rax ; jmp 0x6014f
read: rax 
write: rcx 
--------------------------------------------------------------------------------
00060319: RLP; test rax, rax ; mov rcx, rax ; jne 0x6014f
read: rax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
00060336: RLP; test eax, eax ; jne 0x60271
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0006034c: RLP; test rax, rax ; mov rcx, rax ; je 0x5ff55
read: rax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
0006036a: RLP; mov byte ptr [rbp - 0x1fd], 1 ; mov rcx, rax ; jmp 0x601a1
read: rax 
write: rcx 
--------------------------------------------------------------------------------
00060388: RLP; test rax, rax ; mov rcx, rax ; jne 0x601a1
read: rax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
000603a5: RLP; cmp eax, -1 ; mov r14d, eax ; jne 0x5f813
read: eax rflags 
write: r14d rflags 
--------------------------------------------------------------------------------
000603f0: RLP; test rax, rax ; je 0x6043d
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00060421: RLP; test rax, rax ; je 0x60469
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0006044f: RLP; mov qword ptr [rbp - 0x1f0], 0 ; mov dword ptr [rbp - 0x1fc], 0xffffffff ; jmp 0x583a4
read: 
write: 
--------------------------------------------------------------------------------
0006047b: RLP; mov qword ptr [rbp - 0x1f0], 0 ; mov dword ptr [rbp - 0x1fc], 0xffffffff ; jmp 0x583a4
read: 
write: 
--------------------------------------------------------------------------------
00060521: RLP; jmp 0x600e5
read: 
write: 
--------------------------------------------------------------------------------
000605d7: RLP; mov qword ptr [rbp - 0x208], rbx ; mov qword ptr [rbp - 0x1f0], rax ; jmp 0x5b18b
read: rax rbx 
write: 
--------------------------------------------------------------------------------
00060662: RLP; test rax, rax ; je 0x60b3c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0006068e: RLP; test eax, eax ; jne 0x60584
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000606a4: RLP; test rax, rax ; mov rcx, rax ; je 0x60f9c
read: rax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
000606ca: RLP; mov qword ptr [rbp - 0x208], rbx ; mov qword ptr [rbp - 0x1f0], rax ; mov byte ptr [rbp - 0x1fd], 1 ; jmp 0x5b18b
read: rax rbx 
write: 
--------------------------------------------------------------------------------
000606f0: RLP; cmp eax, -1 ; mov r14d, eax ; jne 0x5aad1
read: eax rflags 
write: r14d rflags 
--------------------------------------------------------------------------------
00060889: RLP; test rax, rax ; mov rdx, qword ptr [rbp - 0x1d8] ; je 0x60966
read: rax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
0006094c: RLP; mov qword ptr [rbp - 0x1f0], 0 ; mov dword ptr [rbp - 0x1fc], 0xffffffff ; jmp 0x583a4
read: 
write: 
--------------------------------------------------------------------------------
000609e3: RLP; test rax, rax ; je 0x60a23
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00060a0d: RLP; cmp eax, -1 ; mov r14d, eax ; jne 0x5b142
read: eax rflags 
write: r14d rflags 
--------------------------------------------------------------------------------
00060ae7: RLP; test rax, rax ; je 0x60b94
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00060b24: RLP; test rax, rax ; je 0x60b68
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00060b4e: RLP; mov qword ptr [rbp - 0x1f0], 0 ; mov dword ptr [rbp - 0x1fc], 0xffffffff ; jmp 0x583a4
read: 
write: 
--------------------------------------------------------------------------------
00060b7a: RLP; mov qword ptr [rbp - 0x1f0], 0 ; mov dword ptr [rbp - 0x1fc], 0xffffffff ; jmp 0x583a4
read: 
write: 
--------------------------------------------------------------------------------
00060ba6: RLP; mov qword ptr [rbp - 0x1f0], 0 ; mov dword ptr [rbp - 0x1fc], 0xffffffff ; jmp 0x583a4
read: 
write: 
--------------------------------------------------------------------------------
00060bcc: RLP; cmp eax, -1 ; mov r14d, eax ; jne 0x5a0e9
read: eax rflags 
write: r14d rflags 
--------------------------------------------------------------------------------
00060c07: RLP; test rax, rax ; je 0x60c8b
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00060cb1: RLP; test rax, rax ; je 0x60d78
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00060cdd: RLP; cmp eax, -1 ; mov r14d, eax ; jne 0x58ebe
read: eax rflags 
write: r14d rflags 
--------------------------------------------------------------------------------
00060d11: RLP; test eax, eax ; mov rdx, qword ptr [rbp - 0x260] ; jne 0x604e2
read: eax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
00060d2e: RLP; test rax, rax ; mov r12, rax ; je 0x5ff55
read: rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
00060d4c: RLP; mov byte ptr [rbp - 0x1fd], 1 ; jmp 0x600e5
read: 
write: 
--------------------------------------------------------------------------------
00060d67: RLP; test rax, rax ; mov r12, rax ; jne 0x600e5
read: rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
00060d8a: RLP; mov qword ptr [rbp - 0x1f0], 0 ; mov dword ptr [rbp - 0x1fc], 0xffffffff ; jmp 0x583a4
read: 
write: 
--------------------------------------------------------------------------------
00060e3c: RLP; mov rdx, rbx ; mov r12, rax ; jmp 0x5ac61
read: rax rbx 
write: r12 rdx 
--------------------------------------------------------------------------------
00060e75: RLP; test eax, eax ; mov rdx, qword ptr [rbp - 0x1f0] ; jne 0x60e01
read: eax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
00060e95: RLP; test rax, rax ; mov r9, rax ; mov rdx, qword ptr [rbp - 0x1f0] ; je 0x60ee4
read: rax rflags 
write: r9 rdx rflags 
--------------------------------------------------------------------------------
00060eb3: RLP; mov rdx, rbx ; mov r12, rax ; mov byte ptr [rbp - 0x1fd], 1 ; jmp 0x5ac61
read: rax rbx 
write: r12 rdx 
--------------------------------------------------------------------------------
00060ed4: RLP; test rax, rax ; je 0x60f00
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00060f0e: RLP; mov qword ptr [rbp - 0x1f0], 0 ; mov dword ptr [rbp - 0x1fc], 0xffffffff ; jmp 0x583a4
read: 
write: 
--------------------------------------------------------------------------------
00060f34: RLP; cmp eax, -1 ; mov r14d, eax ; je 0x5b738
read: eax rflags 
write: r14d rflags 
--------------------------------------------------------------------------------
00060f58: RLP; cmp eax, -1 ; mov r14d, eax ; mov rcx, qword ptr [rbp - 0x1d0] ; jne 0x5ade5
read: eax rflags 
write: r14d rcx rflags 
--------------------------------------------------------------------------------
00060fcf: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0006103a: RLP; cmp eax, 1 ; jne 0x6397c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00061179: RLP; test eax, eax ; mov esi, dword ptr [rbp - 0x148] ; jne 0x6138c
read: eax rflags 
write: esi rflags 
--------------------------------------------------------------------------------
00061241: RLP; test eax, eax ; je 0x61265
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00061261: RLP; test eax, eax ; jne 0x61245
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0006127c: RLP; test dword ptr [r15], 0x8000 ; je 0x61b98
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000612f8: RLP; test eax, eax ; je 0x611ce
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00061343: RLP; test eax, eax ; je 0x611ce
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0006152c: RLP; test eax, eax ; je 0x61584
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000615c2: RLP; mov qword ptr [rbp - 0x138], r12 ; mov r12d, dword ptr [rbp - 0x160] ; sub r12d, 0x25 ; cmp r12d, 0x53 ; ja 0x62f64
read: r12 r12d rflags 
write: r12d rflags 
--------------------------------------------------------------------------------
00061733: RLP; cmp eax, 0x78 ; mov r11, qword ptr [rbp - 0x160] ; mov r8d, dword ptr [rbp - 0x168] ; je 0x6391c
read: eax rflags 
write: r11 r8d rflags 
--------------------------------------------------------------------------------
000617f5: RLP; mov r8d, dword ptr [rbp - 0x160] ; sub r14, 1 ; cmp qword ptr [rbp - 0x130], r12 ; je 0x666a4
read: r12 r14 rflags 
write: r14 r8d rflags 
--------------------------------------------------------------------------------
0006184d: RLP; mov rsi, qword ptr [rbp - 0x140] ; cmp rsi, qword ptr [rbp - 0x110] ; je 0x66757
read: rflags rsi 
write: rflags rsi 
--------------------------------------------------------------------------------
00061aba: RLP; mov rsi, qword ptr [rbp - 0x178] ; test rax, rax ; mov qword ptr [rbp - 0x180], rax ; mov qword ptr [rsi], rax ; je 0x659e9
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
00061bd8: RLP; add rsp, 0x80 ; mov r15d, dword ptr [rbp - 0x1dc] ; test r15d, r15d ; je 0x6129c
read: r15d rflags rsp 
write: r15d rflags rsp 
--------------------------------------------------------------------------------
00061c12: RLP; cmp byte ptr [rbp - 0x189], 0 ; je 0x612a9
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
00061c2f: RLP; jmp 0x612a9
read: 
write: 
--------------------------------------------------------------------------------
00061c78: RLP; add rsp, 0x80 ; mov rdx, qword ptr [r15 + 0x88] ; mov qword ptr [rdx + 8], r8 ; add dword ptr [rdx + 4], 1 ; jmp 0x610b3
read: r8 rsp 
write: rdx rflags rsp 
--------------------------------------------------------------------------------
00061ddc: RLP; mov rsi, qword ptr [rbp - 0x178] ; test rax, rax ; mov qword ptr [rbp - 0x180], rax ; mov qword ptr [rsi], rax ; je 0x64c78
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
00061e9b: RLP; test eax, eax ; jne 0x61f5a
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00061f52: RLP; test eax, eax ; je 0x61eac
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00061f6c: RLP; xor esi, esi ; test r12d, r12d ; mov r13d, ebx ; jne 0x611d9
read: ebx esi r12d rflags 
write: esi r13d rflags 
--------------------------------------------------------------------------------
00061fc6: RLP; test rax, rax ; je 0x61fcf
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0006209f: RLP; mov rsi, qword ptr [rbp - 0x178] ; test rax, rax ; mov qword ptr [rbp - 0x180], rax ; mov qword ptr [rsi], rax ; je 0x64b96
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
000622c5: RLP; jmp 0x6127c
read: 
write: 
--------------------------------------------------------------------------------
0006239a: RLP; cmp eax, 0x6e ; je 0x63c02
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000625bd: RLP; test eax, eax ; mov rcx, qword ptr [rbp - 0x140] ; mov r8d, dword ptr [rbp - 0x168] ; mov r9, qword ptr [rbp - 0x170] ; jne 0x62539
read: eax rflags 
write: r8d r9 rcx rflags 
--------------------------------------------------------------------------------
00062657: RLP; cmp eax, 0x6e ; mov r11, qword ptr [rbp - 0x160] ; mov r8d, dword ptr [rbp - 0x168] ; jne 0x6294f
read: eax rflags 
write: r11 r8d rflags 
--------------------------------------------------------------------------------
000626b9: RLP; cmp eax, 0x69 ; mov r11, qword ptr [rbp - 0x160] ; mov r8d, dword ptr [rbp - 0x168] ; jne 0x6294f
read: eax rflags 
write: r11 r8d rflags 
--------------------------------------------------------------------------------
0006271b: RLP; cmp eax, 0x6c ; mov r11, qword ptr [rbp - 0x160] ; mov r8d, dword ptr [rbp - 0x168] ; jne 0x6294f
read: eax rflags 
write: r11 r8d rflags 
--------------------------------------------------------------------------------
000627c1: RLP; jmp 0x6184d
read: 
write: 
--------------------------------------------------------------------------------
0006292e: RLP; mov eax, dword ptr [r15] ; mov r9, qword ptr [rbp - 0x128] ; jmp 0x610a8
read: 
write: eax r9 
--------------------------------------------------------------------------------
00062970: RLP; jmp 0x6127c
read: 
write: 
--------------------------------------------------------------------------------
00062995: RLP; cmp eax, 0x6c ; jne 0x66918
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00062a14: RLP; mov rsi, qword ptr [rbp - 0x178] ; test rax, rax ; mov qword ptr [rbp - 0x198], rax ; mov qword ptr [rsi], rax ; jne 0x61ad4
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
00062b04: RLP; mov rsi, qword ptr [rbp - 0x178] ; test rax, rax ; mov qword ptr [rbp - 0x198], rax ; mov qword ptr [rsi], rax ; je 0x655e2
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
00062bde: RLP; test eax, eax ; jne 0x62cdc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00062c4b: RLP; cmp rax, -1 ; je 0x6804a
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00062cd4: RLP; test eax, eax ; je 0x62bec
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00062d03: RLP; jmp 0x637a7
read: 
write: 
--------------------------------------------------------------------------------
00062d89: RLP; mov rsi, qword ptr [rbp - 0x178] ; test rax, rax ; mov qword ptr [rbp - 0x198], rax ; mov qword ptr [rsi], rax ; je 0x6582c
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
00062e8b: RLP; cmp rax, -1 ; je 0x6637b
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00062f49: RLP; test rax, rax ; je 0x65917
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00063145: RLP; cmp eax, 0x78 ; je 0x65796
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0006322f: RLP; test rax, rax ; je 0x63237
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00063312: RLP; and ebx, 8 ; mov rax, qword ptr [rbp - 0x110] ; jne 0x63376
read: ebx rflags 
write: ebx rax rflags 
--------------------------------------------------------------------------------
000633bd: RLP; test eax, eax ; mov rsi, qword ptr [rbp - 0x130] ; je 0x63464
read: eax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
00063414: RLP; test eax, eax ; jne 0x6605e
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0006342e: RLP; test rax, rax ; mov r10, rax ; jne 0x6629a
read: rax rflags 
write: r10 rflags 
--------------------------------------------------------------------------------
00063484: RLP; cmp eax, dword ptr [rbp - 0x1e0] ; mov rsi, qword ptr [rbp - 0x130] ; jne 0x63191
read: eax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
0006355f: RLP; test rax, rax ; mov r10, qword ptr [rbp - 0x148] ; mov r8, qword ptr [rbp - 0x158] ; mov rdx, qword ptr [rbp - 0x160] ; mov r9, qword ptr [rbp - 0x168] ; mov rcx, qword ptr [rbp - 0x170] ; je 0x64aa9
read: rax rflags 
write: r10 r8 r9 rcx rdx rflags 
--------------------------------------------------------------------------------
000637c9: RLP; test rax, rax ; mov rbx, rax ; je 0x65aa1
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
00063827: RLP; lea rsi, [rax + 1] ; mov byte ptr [rax], 0 ; mov qword ptr [rbp - 0x198], rsi ; mov rbx, qword ptr [rbp - 0x178] ; mov rsi, qword ptr [rbp - 0x198] ; mov rdi, qword ptr [rbx] ; sub rsi, rdi ; cmp rsi, qword ptr [rbp - 0x188] ; jne 0x63900
read: rdi rflags rsi 
write: rbx rdi rflags rsi 
--------------------------------------------------------------------------------
00063880: RLP; test rax, rax ; mov rdx, qword ptr [rbp - 0x168] ; je 0x6597e
read: rax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
00063909: RLP; test rax, rax ; jne 0x63234
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00063a8f: RLP; cmp eax, 0x6e ; mov r12d, dword ptr fs:[rbx] ; jne 0x66918
read: eax rflags 
write: r12d rflags 
--------------------------------------------------------------------------------
00063aaa: RLP; cmp eax, 0x69 ; jne 0x66918
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00063adb: RLP; test rax, rax ; mov rcx, qword ptr [rbp - 0x160] ; je 0x64ccf
read: rax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
00063b21: RLP; and ebx, 8 ; mov rax, qword ptr [rbp - 0x110] ; jne 0x63376
read: ebx rflags 
write: ebx rax rflags 
--------------------------------------------------------------------------------
00063b97: RLP; and ebx, 8 ; mov rax, qword ptr [rbp - 0x110] ; jne 0x63374
read: ebx rflags 
write: ebx rax rflags 
--------------------------------------------------------------------------------
00063c5f: RLP; cmp eax, 0x61 ; jne 0x66618
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00063cd6: RLP; add r14, 2 ; cmp eax, 0x6e ; jne 0x66bc4
read: eax r14 rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
00063ed3: RLP; mov r13d, eax ; jmp 0x61561
read: eax 
write: r13d 
--------------------------------------------------------------------------------
00063f8d: RLP; cmp eax, 0x6e ; jne 0x66c66
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00064008: RLP; cmp eax, 0x66 ; jne 0x66d7e
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00064078: RLP; cmp eax, 0x69 ; je 0x677a2
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00064096: RLP; jmp 0x632b7
read: 
write: 
--------------------------------------------------------------------------------
00064133: RLP; mov r13d, eax ; jmp 0x6132d
read: eax 
write: r13d 
--------------------------------------------------------------------------------
00064ad9: RLP; test rax, rax ; mov rcx, qword ptr [rbp - 0x168] ; je 0x664c1
read: rax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
00064b48: RLP; jmp 0x6328e
read: 
write: 
--------------------------------------------------------------------------------
00064c03: RLP; lea rsi, [rax + 1] ; mov byte ptr [rax], 0 ; mov qword ptr [rbp - 0x198], rsi ; jmp 0x63237
read: rsi 
write: rsi 
--------------------------------------------------------------------------------
00064c37: RLP; mov r9, qword ptr [rbp - 0x140] ; mov r13d, eax ; mov rcx, qword ptr [rbp - 0x168] ; mov r8d, dword ptr [rbp - 0x170] ; jmp 0x6257e
read: eax 
write: r13d r8d r9 rcx 
--------------------------------------------------------------------------------
00064cee: RLP; test rax, rax ; mov rcx, qword ptr [rbp - 0x160] ; je 0x663b4
read: rax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
00064f68: RLP; cmp r14, qword ptr [rbp - 0x160] ; je 0x67798
read: r14 rflags 
write: rflags 
--------------------------------------------------------------------------------
00064fcd: RLP; test rax, rax ; je 0x64fd5
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000651e5: RLP; mov rax, qword ptr [rbp - 0x160] ; cmp r14, rax ; je 0x65fd2
read: r14 rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
0006521e: RLP; test rax, rax ; mov rbx, rax ; je 0x65f0b
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
0006527c: RLP; lea rbx, [rax + 1] ; mov byte ptr [rax], 0 ; mov r14, qword ptr [rbp - 0x178] ; mov rsi, rbx ; mov rdi, qword ptr [r14] ; sub rsi, rdi ; cmp rsi, qword ptr [rbp - 0x188] ; je 0x652ad
read: rbx rdi rflags rsi 
write: r14 rbx rdi rflags rsi 
--------------------------------------------------------------------------------
000652a5: RLP; test rax, rax ; je 0x652ad
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0006534f: RLP; cmp rax, -1 ; je 0x669d9
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000658aa: RLP; test rax, rax ; mov rcx, qword ptr [rbp - 0x130] ; mov r9, qword ptr [rbp - 0x170] ; je 0x65d1e
read: rax rflags 
write: r9 rcx rflags 
--------------------------------------------------------------------------------
00065941: RLP; test rax, rax ; je 0x68208
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000659a8: RLP; test rax, rax ; mov rdx, qword ptr [rbp - 0x168] ; je 0x690e3
read: rax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
00065c2d: RLP; mov r10, qword ptr [rbp - 0x168] ; mov r11, qword ptr [rbp - 0x140] ; mov r8d, dword ptr [rbp - 0x170] ; mov r9, qword ptr [rbp - 0x1a8] ; mov qword ptr [rbp - 0x130], r10 ; mov rcx, r11 ; jmp 0x62546
read: r10 r11 
write: r10 r11 r8d r9 rcx 
--------------------------------------------------------------------------------
00065cd6: RLP; mov qword ptr [rbp - 0x140], r12 ; mov qword ptr [rbp - 0x130], 0x100 ; jmp 0x630e8
read: r12 
write: 
--------------------------------------------------------------------------------
00065d02: RLP; test rax, rax ; je 0x65d49
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00065d2f: RLP; mov qword ptr [rbp - 0x140], 0 ; mov dword ptr [rbp - 0x150], 0xffffffff ; jmp 0x6127c
read: 
write: 
--------------------------------------------------------------------------------
00065d5b: RLP; mov qword ptr [rbp - 0x140], 0 ; mov dword ptr [rbp - 0x150], 0xffffffff ; jmp 0x6127c
read: 
write: 
--------------------------------------------------------------------------------
00065d93: RLP; mov r13d, eax ; jmp 0x65099
read: eax 
write: r13d 
--------------------------------------------------------------------------------
00065dd3: RLP; test rax, rax ; mov rdx, qword ptr [rbp - 0x180] ; je 0x65e31
read: rax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
00065e50: RLP; test rax, rax ; mov rdx, qword ptr [rbp - 0x180] ; je 0x65e89
read: rax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
00065e81: RLP; mov r13d, eax ; jmp 0x64e78
read: eax 
write: r13d 
--------------------------------------------------------------------------------
00065ee2: RLP; test rax, rax ; je 0x65fdc
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00065f4d: RLP; mov r12d, eax ; jmp 0x63f77
read: eax 
write: r12d 
--------------------------------------------------------------------------------
00065f6f: RLP; lea rbx, [rax + 1] ; mov byte ptr [rax], 0 ; jmp 0x652ad
read: 
write: rbx 
--------------------------------------------------------------------------------
00065fca: RLP; mov r13d, eax ; jmp 0x650ea
read: eax 
write: r13d 
--------------------------------------------------------------------------------
00066023: RLP; mov r13d, eax ; jmp 0x653bb
read: eax 
write: r13d 
--------------------------------------------------------------------------------
000660bd: RLP; mov r11, qword ptr [rbp - 0x140] ; mov r10, qword ptr [rbp - 0x130] ; mov r15, r11 ; mov r13, r10 ; jmp 0x62470
read: r10 r11 
write: r10 r11 r13 r15 
--------------------------------------------------------------------------------
00066164: RLP; mov r11, qword ptr [rbp - 0x140] ; mov r10, qword ptr [rbp - 0x130] ; mov r15, r11 ; mov r13, r10 ; jmp 0x63769
read: r10 r11 
write: r10 r11 r13 r15 
--------------------------------------------------------------------------------
0006619f: RLP; test eax, eax ; jne 0x66109
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000661b9: RLP; test rax, rax ; mov r10, rax ; je 0x6621a
read: rax rflags 
write: r10 rflags 
--------------------------------------------------------------------------------
000661da: RLP; mov r10, qword ptr [rbp - 0x140] ; mov r15, qword ptr [rbp - 0x130] ; mov byte ptr [rbp - 0x189], 1 ; mov r13, r10 ; jmp 0x63769
read: r10 
write: r10 r13 r15 
--------------------------------------------------------------------------------
0006620d: RLP; test rax, rax ; je 0x6623d
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00066252: RLP; mov qword ptr [rbp - 0x140], 0 ; mov dword ptr [rbp - 0x150], 0xffffffff ; jmp 0x6127c
read: 
write: 
--------------------------------------------------------------------------------
00066278: RLP; test eax, eax ; jne 0x6605e
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00066292: RLP; test rax, rax ; mov r10, rax ; je 0x662f3
read: rax rflags 
write: r10 rflags 
--------------------------------------------------------------------------------
000662b3: RLP; mov r10, qword ptr [rbp - 0x140] ; mov r15, qword ptr [rbp - 0x130] ; mov byte ptr [rbp - 0x189], 1 ; mov r13, r10 ; jmp 0x62470
read: r10 
write: r10 r13 r15 
--------------------------------------------------------------------------------
000662e6: RLP; test rax, rax ; je 0x66316
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0006632b: RLP; mov qword ptr [rbp - 0x140], 0 ; mov dword ptr [rbp - 0x150], 0xffffffff ; jmp 0x6127c
read: 
write: 
--------------------------------------------------------------------------------
00066351: RLP; mov r13d, eax ; jmp 0x62373
read: eax 
write: r13d 
--------------------------------------------------------------------------------
00066373: RLP; mov r15d, eax ; jmp 0x62edd
read: eax 
write: r15d 
--------------------------------------------------------------------------------
000663ac: RLP; mov r13d, eax ; jmp 0x63fe7
read: eax 
write: r13d 
--------------------------------------------------------------------------------
000663fe: RLP; mov r13d, eax ; jmp 0x63cb9
read: eax 
write: r13d 
--------------------------------------------------------------------------------
000664a8: RLP; mov r11, qword ptr [rbp - 0x140] ; mov r10, qword ptr [rbp - 0x130] ; mov r15, r11 ; mov r13, r10 ; jmp 0x634a0
read: r10 r11 
write: r10 r11 r13 r15 
--------------------------------------------------------------------------------
000664ec: RLP; test eax, eax ; jne 0x6644d
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00066506: RLP; test rax, rax ; mov r10, rax ; je 0x66567
read: rax rflags 
write: r10 rflags 
--------------------------------------------------------------------------------
00066527: RLP; mov r10, qword ptr [rbp - 0x140] ; mov r15, qword ptr [rbp - 0x130] ; mov byte ptr [rbp - 0x189], 1 ; mov r13, r10 ; jmp 0x634a0
read: r10 
write: r10 r13 r15 
--------------------------------------------------------------------------------
0006655a: RLP; test rax, rax ; je 0x6658a
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0006659f: RLP; mov qword ptr [rbp - 0x140], 0 ; mov dword ptr [rbp - 0x150], 0xffffffff ; jmp 0x6127c
read: 
write: 
--------------------------------------------------------------------------------
0006660c: RLP; mov qword ptr [rbp - 0x140], r13 ; jmp 0x63c7f
read: r13 
write: 
--------------------------------------------------------------------------------
00066637: RLP; test rax, rax ; je 0x66678
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0006665f: RLP; mov r12d, eax ; jmp 0x63c49
read: eax 
write: r12d 
--------------------------------------------------------------------------------
0006668a: RLP; mov qword ptr [rbp - 0x140], 0 ; mov dword ptr [rbp - 0x150], 0xffffffff ; jmp 0x6127c
read: 
write: 
--------------------------------------------------------------------------------
00066744: RLP; mov qword ptr [rbp - 0x130], rbx ; mov r8d, dword ptr [rbp - 0x160] ; jmp 0x6180d
read: rbx 
write: r8d 
--------------------------------------------------------------------------------
00066787: RLP; test eax, eax ; mov r8d, dword ptr [rbp - 0x160] ; jne 0x666d7
read: eax rflags 
write: r8d rflags 
--------------------------------------------------------------------------------
000667ab: RLP; test rax, rax ; mov rcx, rax ; mov r8d, dword ptr [rbp - 0x160] ; je 0x66835
read: rax rflags 
write: r8d rcx rflags 
--------------------------------------------------------------------------------
000667e2: RLP; mov qword ptr [rbp - 0x130], rbx ; mov byte ptr [rbp - 0x189], 1 ; mov r8d, dword ptr [rbp - 0x160] ; jmp 0x6180d
read: rbx 
write: r8d 
--------------------------------------------------------------------------------
00066816: RLP; test rax, rax ; je 0x66851
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00066863: RLP; mov qword ptr [rbp - 0x140], 0 ; mov dword ptr [rbp - 0x150], 0xffffffff ; jmp 0x6127c
read: 
write: 
--------------------------------------------------------------------------------
0006688f: RLP; mov esi, dword ptr [rbp - 0x148] ; mov r13d, eax ; jmp 0x611b8
read: eax 
write: esi r13d 
--------------------------------------------------------------------------------
000668a9: RLP; mov r13d, eax ; jmp 0x61e69
read: eax 
write: r13d 
--------------------------------------------------------------------------------
000668e2: RLP; test rax, rax ; je 0x66922
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00066911: RLP; mov ebx, eax ; jmp 0x61f3a
read: eax 
write: ebx 
--------------------------------------------------------------------------------
00066934: RLP; mov qword ptr [rbp - 0x140], 0 ; mov dword ptr [rbp - 0x150], 0xffffffff ; jmp 0x6127c
read: 
write: 
--------------------------------------------------------------------------------
00066988: RLP; mov qword ptr [rbp - 0x140], rbx ; mov qword ptr [rbp - 0x130], 0x100 ; mov r8d, dword ptr [rbp - 0x160] ; jmp 0x6277f
read: rbx 
write: r8d 
--------------------------------------------------------------------------------
000669b2: RLP; mov r14d, eax ; jmp 0x6122b
read: eax 
write: r14d 
--------------------------------------------------------------------------------
00066a42: RLP; mov r13d, eax ; jmp 0x62301
read: eax 
write: r13d 
--------------------------------------------------------------------------------
00066a7e: RLP; mov r11, qword ptr [rbp - 0x160] ; mov r13d, eax ; jmp 0x63963
read: eax 
write: r11 r13d 
--------------------------------------------------------------------------------
00066ad3: RLP; mov r13d, eax ; jmp 0x657f4
read: eax 
write: r13d 
--------------------------------------------------------------------------------
00066b48: RLP; mov qword ptr [rbp - 0x140], r12 ; jmp 0x657a4
read: r12 
write: 
--------------------------------------------------------------------------------
00066b60: RLP; mov r13d, eax ; jmp 0x62299
read: eax 
write: r13d 
--------------------------------------------------------------------------------
00066bb8: RLP; mov qword ptr [rbp - 0x140], rbx ; jmp 0x63cf1
read: rbx 
write: 
--------------------------------------------------------------------------------
00066be3: RLP; test rax, rax ; je 0x66c70
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00066c5a: RLP; mov qword ptr [rbp - 0x140], r13 ; jmp 0x63fad
read: r13 
write: 
--------------------------------------------------------------------------------
00066c82: RLP; mov qword ptr [rbp - 0x140], 0 ; mov dword ptr [rbp - 0x150], 0xffffffff ; jmp 0x6127c
read: 
write: 
--------------------------------------------------------------------------------
00066cb1: RLP; test rax, rax ; je 0x66d88
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00066d26: RLP; mov qword ptr [rbp - 0x140], r12 ; jmp 0x64028
read: r12 
write: 
--------------------------------------------------------------------------------
00066d5a: RLP; mov rcx, qword ptr [rbp - 0x148] ; mov r13d, eax ; mov rsi, qword ptr [rbp - 0x158] ; mov r9, qword ptr [rbp - 0x160] ; mov r8, qword ptr [rbp - 0x168] ; jmp 0x621d7
read: eax 
write: r13d r8 r9 rcx rsi 
--------------------------------------------------------------------------------
00066d9a: RLP; mov qword ptr [rbp - 0x140], 0 ; mov dword ptr [rbp - 0x150], 0xffffffff ; jmp 0x6127c
read: 
write: 
--------------------------------------------------------------------------------
00066dc9: RLP; test rax, rax ; je 0x66e16
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00066dfa: RLP; test rax, rax ; je 0x66e42
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00066e28: RLP; mov qword ptr [rbp - 0x140], 0 ; mov dword ptr [rbp - 0x150], 0xffffffff ; jmp 0x6127c
read: 
write: 
--------------------------------------------------------------------------------
00066e54: RLP; mov qword ptr [rbp - 0x140], 0 ; mov dword ptr [rbp - 0x150], 0xffffffff ; jmp 0x6127c
read: 
write: 
--------------------------------------------------------------------------------
00066e85: RLP; mov rsi, rax ; mov qword ptr [rbp - 0x168], rax ; mov rax, qword ptr [rip + 0x301f26] ; test rsi, rsi ; mov r11, qword ptr [rbp - 0x160] ; setne sil ; mov rax, qword ptr fs:[rax] ; movzx esi, sil ; mov qword ptr [rbp - 0x1d0], rsi ; mov rax, qword ptr [rax] ; mov r14d, dword ptr [rax + 0x130] ; lea edi, [r14 - 1] ; mov dword ptr [rbp - 0x1a8], edi ; jne 0x67162
read: edi rax rflags rsi sil 
write: edi esi r11 r14d rax rflags rsi sil 
--------------------------------------------------------------------------------
000670c0: RLP; mov r15d, eax ; jmp 0x67070
read: eax 
write: r15d 
--------------------------------------------------------------------------------
00067153: RLP; mov r8, qword ptr [rbp - 0x130] ; mov rbx, r8 ; jmp 0x6702a
read: r8 
write: r8 rbx 
--------------------------------------------------------------------------------
00067203: RLP; mov rax, qword ptr [rbp - 0x170] ; mov rsi, qword ptr [rbp - 0x168] ; lea edi, [rbx + 0x30] ; lea rdx, [r12 + rax] ; mov qword ptr [rbp - 0x1e8], rdx ; call 0xe6ecc
read: rdx rip rsp 
write: edi rax rdx rsi rsp 
--------------------------------------------------------------------------------
00067228: RLP; mov rdx, qword ptr [rbp - 0x1e8] ; mov r10, qword ptr [rbp - 0x200] ; mov r11, qword ptr [rbp - 0x1f8] ; mov dword ptr [rdx], eax ; mov rax, qword ptr [rbp - 0x1b0] ; mov dword ptr [r12 + r10], 0 ; mov qword ptr [rax + rbx*8], r12 ; add rbx, 1 ; cmp rbx, 0xa ; je 0x6727e
read: eax r12 rbx rflags 
write: r10 r11 rax rbx rdx rflags 
--------------------------------------------------------------------------------
000672b4: RLP; test eax, eax ; mov rdx, qword ptr [rbp - 0x130] ; jne 0x67105
read: eax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
000672d1: RLP; test rax, rax ; mov r8, rax ; je 0x67324
read: rax rflags 
write: r8 rflags 
--------------------------------------------------------------------------------
000672f2: RLP; mov r8, qword ptr [rbp - 0x130] ; mov byte ptr [rbp - 0x189], 1 ; mov rbx, r8 ; jmp 0x6702a
read: r8 
write: r8 rbx 
--------------------------------------------------------------------------------
00067317: RLP; test rax, rax ; je 0x67347
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0006735a: RLP; jmp 0x6732b
read: 
write: 
--------------------------------------------------------------------------------
000673a6: RLP; mov qword ptr [rbp - 0x140], r12 ; mov qword ptr [rbp - 0x130], 0x100 ; mov r11, qword ptr [rbp - 0x160] ; mov r8d, dword ptr [rbp - 0x168] ; jmp 0x61656
read: r12 
write: r11 r8d 
--------------------------------------------------------------------------------
0006740f: RLP; test rax, rax ; mov r11, qword ptr [rbp - 0x130] ; mov r8d, dword ptr [rbp - 0x160] ; je 0x674bf
read: rax rflags 
write: r11 r8d rflags 
--------------------------------------------------------------------------------
00067457: RLP; mov r11, qword ptr [rbp - 0x160] ; mov r13d, eax ; mov r8d, dword ptr [rbp - 0x168] ; jmp 0x61690
read: eax 
write: r11 r13d r8d 
--------------------------------------------------------------------------------
0006749c: RLP; mov rax, qword ptr [rbx + r12*8 + 0x10] ; add r12, 1 ; cmp qword ptr [rbx], r12 ; mov qword ptr [rax], 0 ; ja 0x6748b
read: r12 rflags 
write: r12 rax rflags 
--------------------------------------------------------------------------------
000674d1: RLP; mov qword ptr [rbp - 0x140], 0 ; mov dword ptr [rbp - 0x150], 0xffffffff ; jmp 0x6127c
read: 
write: 
--------------------------------------------------------------------------------
000674fe: RLP; mov qword ptr [rbx], 0 ; jmp 0x612d2
read: 
write: 
--------------------------------------------------------------------------------
00067528: RLP; jmp 0x6127c
read: 
write: 
--------------------------------------------------------------------------------
000675a0: RLP; mov qword ptr [rbp - 0x130], r14 ; mov qword ptr [rbp - 0x140], r13 ; mov r11, qword ptr [rbp - 0x160] ; mov r8d, dword ptr [rbp - 0x168] ; jmp 0x616cc
read: r13 r14 
write: r11 r8d 
--------------------------------------------------------------------------------
000675db: RLP; mov r11, qword ptr [rbp - 0x160] ; mov r13d, eax ; mov r8d, dword ptr [rbp - 0x168] ; jmp 0x61707
read: eax 
write: r11 r13d r8d 
--------------------------------------------------------------------------------
00067637: RLP; test rax, rax ; mov r11, qword ptr [rbp - 0x130] ; mov r8d, dword ptr [rbp - 0x160] ; je 0x6776c
read: rax rflags 
write: r11 r8d rflags 
--------------------------------------------------------------------------------
0006767f: RLP; mov r11, qword ptr [rbp - 0x160] ; mov r13d, eax ; mov r8d, dword ptr [rbp - 0x168] ; jmp 0x62759
read: eax 
write: r11 r13d r8d 
--------------------------------------------------------------------------------
000676a1: RLP; mov r13d, eax ; jmp 0x62121
read: eax 
write: r13d 
--------------------------------------------------------------------------------
000676c3: RLP; mov r11, qword ptr [rbp - 0x160] ; mov r13d, eax ; mov r8d, dword ptr [rbp - 0x168] ; jmp 0x62633
read: eax 
write: r11 r13d r8d 
--------------------------------------------------------------------------------
000676f3: RLP; mov r11, qword ptr [rbp - 0x160] ; mov r13d, eax ; mov r8d, dword ptr [rbp - 0x168] ; jmp 0x626f7
read: eax 
write: r11 r13d r8d 
--------------------------------------------------------------------------------
00067723: RLP; mov r11, qword ptr [rbp - 0x160] ; mov r13d, eax ; mov r8d, dword ptr [rbp - 0x168] ; jmp 0x62695
read: eax 
write: r11 r13d r8d 
--------------------------------------------------------------------------------
0006774c: RLP; mov r8d, dword ptr [rbp - 0x160] ; mov r13d, eax ; jmp 0x61630
read: eax 
write: r13d r8d 
--------------------------------------------------------------------------------
00067767: RLP; jmp 0x628be
read: 
write: 
--------------------------------------------------------------------------------
0006777e: RLP; mov qword ptr [rbp - 0x140], 0 ; mov dword ptr [rbp - 0x150], 0xffffffff ; jmp 0x6127c
read: 
write: 
--------------------------------------------------------------------------------
00067809: RLP; cmp eax, 0x6e ; jne 0x67e05
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00067879: RLP; cmp eax, 0x69 ; jne 0x67be4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000678e9: RLP; cmp eax, 0x74 ; jne 0x67bda
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00067960: RLP; add r14, 7 ; cmp eax, 0x79 ; jne 0x67b52
read: eax r14 rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
000679b5: RLP; test rax, rax ; mov rdx, qword ptr [rbp - 0x198] ; je 0x67a3a
read: rax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
00067a2e: RLP; mov qword ptr [rbp - 0x140], rbx ; jmp 0x67977
read: rbx 
write: 
--------------------------------------------------------------------------------
00067a6b: RLP; test rax, rax ; mov rdx, qword ptr [rbp - 0x188] ; je 0x67adf
read: rax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
00067ac3: RLP; test rax, rax ; je 0x67b15
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00067b27: RLP; mov qword ptr [rbp - 0x140], 0 ; mov dword ptr [rbp - 0x150], 0xffffffff ; jmp 0x6127c
read: 
write: 
--------------------------------------------------------------------------------
00067b68: RLP; mov r13d, eax ; jmp 0x67943
read: eax 
write: r13d 
--------------------------------------------------------------------------------
00067bce: RLP; mov qword ptr [rbp - 0x140], r13 ; jmp 0x67909
read: r13 
write: 
--------------------------------------------------------------------------------
00067bfa: RLP; mov r12d, eax ; jmp 0x67863
read: eax 
write: r12d 
--------------------------------------------------------------------------------
00067c60: RLP; mov qword ptr [rbp - 0x140], r13 ; jmp 0x67829
read: r13 
write: 
--------------------------------------------------------------------------------
00067c82: RLP; mov r12d, eax ; jmp 0x678d3
read: eax 
write: r12d 
--------------------------------------------------------------------------------
00067c9f: RLP; test rax, rax ; je 0x67d50
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00067d13: RLP; mov qword ptr [rbp - 0x140], r13 ; jmp 0x67899
read: r13 
write: 
--------------------------------------------------------------------------------
00067d34: RLP; test rax, rax ; je 0x67dad
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00067d62: RLP; mov qword ptr [rbp - 0x140], 0 ; mov dword ptr [rbp - 0x150], 0xffffffff ; jmp 0x6127c
read: 
write: 
--------------------------------------------------------------------------------
00067d91: RLP; test rax, rax ; je 0x67dd9
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00067dbf: RLP; mov qword ptr [rbp - 0x140], 0 ; mov dword ptr [rbp - 0x150], 0xffffffff ; jmp 0x6127c
read: 
write: 
--------------------------------------------------------------------------------
00067deb: RLP; mov qword ptr [rbp - 0x140], 0 ; mov dword ptr [rbp - 0x150], 0xffffffff ; jmp 0x6127c
read: 
write: 
--------------------------------------------------------------------------------
00067e1b: RLP; mov r12d, eax ; jmp 0x677f3
read: eax 
write: r12d 
--------------------------------------------------------------------------------
00067e82: RLP; mov qword ptr [rbp - 0x140], r12 ; jmp 0x677b9
read: r12 
write: 
--------------------------------------------------------------------------------
00067f46: RLP; mov qword ptr [rbp - 0x130], rbx ; jmp 0x632c4
read: rbx 
write: 
--------------------------------------------------------------------------------
00067f5e: RLP; mov r13d, eax ; jmp 0x62b91
read: eax 
write: r13d 
--------------------------------------------------------------------------------
00067f85: RLP; test eax, eax ; jne 0x67ee0
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00067f9b: RLP; test rax, rax ; mov rcx, rax ; je 0x68002
read: rax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
00067fc4: RLP; mov qword ptr [rbp - 0x130], rbx ; mov byte ptr [rbp - 0x189], 1 ; jmp 0x632c4
read: rbx 
write: 
--------------------------------------------------------------------------------
00067fea: RLP; test rax, rax ; je 0x6801e
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00068030: RLP; mov qword ptr [rbp - 0x140], 0 ; mov dword ptr [rbp - 0x150], 0xffffffff ; jmp 0x6127c
read: 
write: 
--------------------------------------------------------------------------------
0006807e: RLP; test rax, rax ; je 0x681a6
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000680d6: RLP; mov qword ptr [rbp - 0x140], r12 ; mov qword ptr [rbp - 0x130], 0x100 ; jmp 0x63c10
read: r12 
write: 
--------------------------------------------------------------------------------
00068102: RLP; test rax, rax ; je 0x6822f
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00068138: RLP; mov r13d, eax ; jmp 0x62e16
read: eax 
write: r13d 
--------------------------------------------------------------------------------
00068150: RLP; mov r15d, eax ; jmp 0x62cba
read: eax 
write: r15d 
--------------------------------------------------------------------------------
0006817a: RLP; test rax, rax ; mov rdx, qword ptr [rbp - 0x158] ; je 0x681d2
read: rax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
000681b8: RLP; mov qword ptr [rbp - 0x140], 0 ; mov dword ptr [rbp - 0x150], 0xffffffff ; jmp 0x6127c
read: 
write: 
--------------------------------------------------------------------------------
00068241: RLP; mov qword ptr [rbp - 0x140], 0 ; mov dword ptr [rbp - 0x150], 0xffffffff ; jmp 0x6127c
read: 
write: 
--------------------------------------------------------------------------------
00068282: RLP; test rax, rax ; jne 0x662eb
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000682a0: RLP; mov qword ptr [rbp - 0x140], 0 ; mov dword ptr [rbp - 0x150], 0xffffffff ; jmp 0x6127c
read: 
write: 
--------------------------------------------------------------------------------
000682ca: RLP; mov r14d, eax ; jmp 0x624c3
read: eax 
write: r14d 
--------------------------------------------------------------------------------
0006830a: RLP; mov qword ptr [rbp - 0x140], r12 ; mov qword ptr [rbp - 0x130], 0x100 ; jmp 0x63f3e
read: r12 
write: 
--------------------------------------------------------------------------------
00068336: RLP; test rax, rax ; je 0x6840a
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000683e4: RLP; mov r11, qword ptr [rbp - 0x140] ; mov r10, qword ptr [rbp - 0x130] ; mov r15, r11 ; mov r13, r10 ; jmp 0x634f8
read: r10 r11 
write: r10 r11 r13 r15 
--------------------------------------------------------------------------------
0006841c: RLP; mov qword ptr [rbp - 0x140], 0 ; mov dword ptr [rbp - 0x150], 0xffffffff ; jmp 0x6127c
read: 
write: 
--------------------------------------------------------------------------------
0006844d: RLP; test eax, eax ; jne 0x68389
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00068467: RLP; test rax, rax ; mov r10, rax ; je 0x684c8
read: rax rflags 
write: r10 rflags 
--------------------------------------------------------------------------------
00068488: RLP; mov r10, qword ptr [rbp - 0x140] ; mov r15, qword ptr [rbp - 0x130] ; mov byte ptr [rbp - 0x189], 1 ; mov r13, r10 ; jmp 0x634f8
read: r10 
write: r10 r13 r15 
--------------------------------------------------------------------------------
000684bb: RLP; test rax, rax ; je 0x684eb
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00068500: RLP; mov qword ptr [rbp - 0x140], 0 ; mov dword ptr [rbp - 0x150], 0xffffffff ; jmp 0x6127c
read: 
write: 
--------------------------------------------------------------------------------
00068575: RLP; test rax, rax ; mov qword ptr [rbp - 0x160], rax ; je 0x6329e
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000685d9: RLP; cmp byte ptr [rbp - 0x168], 0 ; mov dword ptr [rbp - 0x54], eax ; jne 0x686bd
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00068698: RLP; mov r11, qword ptr [rbp - 0x140] ; mov r10, qword ptr [rbp - 0x130] ; mov r15, r11 ; mov r13, r10 ; jmp 0x631b9
read: r10 r11 
write: r10 r11 r13 r15 
--------------------------------------------------------------------------------
000686eb: RLP; mov rdx, qword ptr [rbp - 0x170] ; mov rsi, qword ptr [rbp - 0x1b0] ; mov dword ptr [rsi + rdx*4], eax ; add rdx, 1 ; cmp rdx, 0xa ; jne 0x686d1
read: eax rdx rflags 
write: rdx rflags rsi 
--------------------------------------------------------------------------------
0006871b: RLP; test eax, eax ; mov dword ptr [rbp - 0x58], eax ; movzx eax, byte ptr [rbp - 0x168] ; setne byte ptr [rbp - 0x1f0] ; and byte ptr [rbp - 0x1f0], al ; lea rax, [r12*4] ; mov rcx, r12 ; mov qword ptr [rbp - 0x160], r15 ; mov r15, qword ptr [rbp - 0x130] ; mov qword ptr [rbp - 0x168], rax ; lea rax, [r12 + 1] ; not rcx ; mov r12, qword ptr [rbp - 0x140] ; mov qword ptr [rbp - 0x170], rax ; lea rax, [rcx + r14]
read: al eax r12 r15 rax rcx rflags 
write: eax r12 r15 rax rcx rflags 
--------------------------------------------------------------------------------
0006881e: RLP; jmp 0x685fa
read: 
write: 
--------------------------------------------------------------------------------
0006882f: RLP; test eax, eax ; jne 0x68639
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00068849: RLP; test rax, rax ; mov r10, rax ; je 0x688aa
read: rax rflags 
write: r10 rflags 
--------------------------------------------------------------------------------
0006886a: RLP; mov r10, qword ptr [rbp - 0x140] ; mov r15, qword ptr [rbp - 0x130] ; mov byte ptr [rbp - 0x189], 1 ; mov r13, r10 ; jmp 0x631b9
read: r10 
write: r10 r13 r15 
--------------------------------------------------------------------------------
0006889d: RLP; test rax, rax ; je 0x688cd
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000688e2: RLP; mov qword ptr [rbp - 0x140], 0 ; mov dword ptr [rbp - 0x150], 0xffffffff ; jmp 0x6127c
read: 
write: 
--------------------------------------------------------------------------------
00068a03: RLP; cmp eax, dword ptr [rbp - 0x1e0] ; mov rcx, qword ptr [rbp - 0x130] ; jne 0x687bc
read: eax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
00068ac9: RLP; jmp 0x689d1
read: 
write: 
--------------------------------------------------------------------------------
00068b49: RLP; jmp 0x68a25
read: 
write: 
--------------------------------------------------------------------------------
00068b5a: RLP; test eax, eax ; jne 0x68a7c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00068b70: RLP; test rax, rax ; mov rbx, rax ; je 0x68be0
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
00068b8a: RLP; mov byte ptr [rbp - 0x189], 1 ; jmp 0x689d1
read: 
write: 
--------------------------------------------------------------------------------
00068ba5: RLP; test rax, rax ; mov rbx, rax ; jne 0x689d1
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
00068bc4: RLP; mov qword ptr [rbp - 0x140], 0 ; xor ebx, ebx ; mov dword ptr [rbp - 0x150], 0xffffffff ; jmp 0x6127c
read: ebx 
write: ebx rflags 
--------------------------------------------------------------------------------
00068c31: RLP; mov r13d, eax ; jmp 0x68974
read: eax 
write: r13d 
--------------------------------------------------------------------------------
00068c45: RLP; test eax, eax ; jne 0x68afc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00068c5b: RLP; test rax, rax ; mov rbx, rax ; je 0x68be0
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
00068c79: RLP; mov byte ptr [rbp - 0x189], 1 ; jmp 0x68a25
read: 
write: 
--------------------------------------------------------------------------------
00068c94: RLP; test rax, rax ; mov rbx, rax ; jne 0x68a25
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
00068d71: RLP; jmp 0x68914
read: 
write: 
--------------------------------------------------------------------------------
00068dcd: RLP; test eax, eax ; jne 0x68d24
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00068de3: RLP; test rax, rax ; mov r14, rax ; je 0x68be0
read: rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
00068e01: RLP; mov byte ptr [rbp - 0x189], 1 ; jmp 0x68914
read: 
write: 
--------------------------------------------------------------------------------
00068e1c: RLP; test rax, rax ; mov r14, rax ; jne 0x68914
read: rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
00068ea7: RLP; jmp 0x68da4
read: 
write: 
--------------------------------------------------------------------------------
00068f06: RLP; test eax, eax ; jne 0x68e5a
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00068f1c: RLP; test rax, rax ; mov r14, rax ; je 0x68be0
read: rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
00068f3a: RLP; mov byte ptr [rbp - 0x189], 1 ; jmp 0x68da4
read: 
write: 
--------------------------------------------------------------------------------
00068f55: RLP; test rax, rax ; mov r14, rax ; jne 0x68da4
read: rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
00068fe0: RLP; jmp 0x68edd
read: 
write: 
--------------------------------------------------------------------------------
00069011: RLP; mov r13d, eax ; jmp 0x685b6
read: eax 
write: r13d 
--------------------------------------------------------------------------------
0006903a: RLP; test eax, eax ; jne 0x68f93
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00069050: RLP; test rax, rax ; mov r14, rax ; je 0x68be0
read: rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
0006906e: RLP; mov byte ptr [rbp - 0x189], 1 ; jmp 0x68edd
read: 
write: 
--------------------------------------------------------------------------------
00069089: RLP; test rax, rax ; mov r14, rax ; jne 0x68edd
read: rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
000690a6: RLP; mov r13d, eax ; jmp 0x64062
read: eax 
write: r13d 
--------------------------------------------------------------------------------
000690c4: RLP; mov r13d, eax ; jmp 0x6311c
read: eax 
write: r13d 
--------------------------------------------------------------------------------
0006915b: RLP; test eax, eax ; mov r10, qword ptr [rbp - 0x140] ; mov rcx, qword ptr [rbp - 0x168] ; mov r8d, dword ptr [rbp - 0x170] ; mov r9, qword ptr [rbp - 0x1a8] ; jne 0x65bbc
read: eax rflags 
write: r10 r8d r9 rcx rflags 
--------------------------------------------------------------------------------
000691a9: RLP; test rax, rax ; mov r11, rax ; mov r10, qword ptr [rbp - 0x140] ; mov rcx, qword ptr [rbp - 0x168] ; mov r8d, dword ptr [rbp - 0x170] ; mov r9, qword ptr [rbp - 0x1a8] ; je 0x69242
read: rax rflags 
write: r10 r11 r8d r9 rcx rflags 
--------------------------------------------------------------------------------
000691ff: RLP; mov r10, qword ptr [rbp - 0x168] ; mov r11, qword ptr [rbp - 0x140] ; mov byte ptr [rbp - 0x189], 1 ; mov r8d, dword ptr [rbp - 0x170] ; mov r9, qword ptr [rbp - 0x1a8] ; mov qword ptr [rbp - 0x130], r10 ; mov rcx, r11 ; jmp 0x62546
read: r10 r11 
write: r10 r11 r8d r9 rcx 
--------------------------------------------------------------------------------
0006927f: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0006931b: RLP; add rsp, 0xd8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000693cf: RLP; add rsp, 0xd8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0006946b: RLP; add rsp, 0xd8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000694b5: RLP; lea rsi, [rip + 0xce1ce] ; mov r8, rax ; mov rcx, rbp ; mov rdx, rbx ; mov rdi, r12 ; xor eax, eax ; call 0x6bcbc
read: eax r12 rax rbp rbx rip rsp 
write: eax r8 rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000694d3: RLP; add rsp, 0x400 ; pop rbx ; pop rbp ; pop r12 ; ret
read: rsp 
write: r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00069537: RLP; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rsp 
write: r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0006954f: RLP; cmp eax, -1 ; mov edx, dword ptr [rsp + 0xc] ; je 0x695c2
read: eax rflags 
write: edx rflags 
--------------------------------------------------------------------------------
00069567: RLP; cmp eax, -1 ; mov r13d, eax ; mov edx, dword ptr [rsp + 0xc] ; je 0x695c2
read: eax rflags 
write: edx r13d rflags 
--------------------------------------------------------------------------------
00069589: RLP; test rax, rax ; mov r12, rax ; mov edx, dword ptr [rsp + 0xc] ; je 0x695ca
read: rax rflags 
write: edx r12 rflags 
--------------------------------------------------------------------------------
000695a4: RLP; test byte ptr [r12], 0x20 ; je 0x695b1
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000695bd: RLP; jmp 0x69537
read: 
write: 
--------------------------------------------------------------------------------
000695da: RLP; mov rdi, qword ptr [rbx] ; mov edx, dword ptr [rsp + 0xc] ; jmp 0x6952b
read: 
write: edx rdi 
--------------------------------------------------------------------------------
00069642: RLP; lea rsi, [rip + 0xce041] ; mov r8, rax ; mov rcx, r12 ; mov rdx, rbx ; xor edi, edi ; xor eax, eax ; call 0x6bcbc
read: eax edi r12 rax rbx rip rsp 
write: eax edi r8 rcx rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0006965f: RLP; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
read: rsp 
write: r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00069688: RLP; lea rdi, [rsp + 8] ; mov rsi, rax ; mov r8d, ebp ; xor eax, eax ; mov rcx, r12 ; mov rdx, rbx ; call 0x523bc
read: eax ebp r12 rax rbx rip rsp 
write: eax r8d rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000696a4: RLP; test eax, eax ; js 0x696ec
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000696c1: RLP; mov rdi, qword ptr [rsp + 8] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000696cf: RLP; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
read: rsp 
write: r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00069736: RLP; test eax, eax ; jne 0x6978c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0006974c: RLP; test eax, eax ; mov ebp, eax ; js 0x6978c
read: eax rflags 
write: ebp rflags 
--------------------------------------------------------------------------------
0006975e: RLP; lea rsi, [rip + 0xcb519] ; mov edi, ebp ; call 0x6c1fc
read: ebp rip rsp 
write: edi rsi rsp 
--------------------------------------------------------------------------------
00069770: RLP; test rax, rax ; mov rbx, rax ; je 0x6979c
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000697a7: RLP; jmp 0x69778
read: 
write: 
--------------------------------------------------------------------------------
000697db: RLP; test eax, eax ; jne 0x69838
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000697f4: RLP; test eax, eax ; jne 0x69838
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0006985e: RLP; test eax, eax ; jne 0x69884
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00069877: RLP; test eax, eax ; jne 0x69884
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000698b5: RLP; test eax, eax ; jne 0x698ec
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000698ce: RLP; test eax, eax ; jne 0x698ec
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000698de: RLP; add rsp, 0x1000 ; pop rbx ; ret
read: rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
0006991b: RLP; xor edx, edx ; test eax, eax ; jne 0x69934
read: eax edx rflags 
write: edx rflags 
--------------------------------------------------------------------------------
000699a3: RLP; cmp rax, 1 ; jbe 0x69aec
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000699fc: RLP; xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: eax rsp 
write: eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00069a2b: RLP; mov r8d, dword ptr [rsp + 0xc] ; cmp rax, 5 ; cmovbe r14, rax ; test r8d, r8d ; je 0x6998e
read: r14 r8d rax rflags 
write: r14 r8d rflags 
--------------------------------------------------------------------------------
00069a51: RLP; test rax, rax ; mov r15, rax ; je 0x69a69
read: rax rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
00069a65: RLP; test eax, eax ; jne 0x69a81
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00069a7a: RLP; test eax, eax ; je 0x69aa4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00069abb: RLP; mov ecx, eax ; mov edx, 3 ; mov eax, 4 ; test ecx, ecx ; jne 0x699b1
read: eax ecx rflags 
write: eax ecx edx rflags 
--------------------------------------------------------------------------------
00069b37: RLP; lea edx, [rbp + 5] ; cmp eax, edx ; jle 0x69dcc
read: eax edx rflags 
write: edx rflags 
--------------------------------------------------------------------------------
00069b66: RLP; test eax, eax ; mov dword ptr [rsp + 0x18], eax ; jne 0x69dcc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00069bb0: RLP; movsxd rdi, eax ; lea rax, [rsp + 0x20] ; xor rdi, rbp ; add rdi, qword ptr [rip + 0x301b72] ; mov ebp, 0x3a2f8 ; mov qword ptr [rsp + 0x10], rax ; mov qword ptr [rip + 0x301b61], rdi ; mov rdx, rdi ; shr rdx, 1 ; mov rax, rdx ; mul r13 ; mov rsi, rdx ; shr rdx, 5 ; shr rsi, 4 ; mov rax, rsi
read: eax r13 rax rbp rdi rdx rsi 
write: ebp rax rdi rdx rflags rsi 
--------------------------------------------------------------------------------
00069d0f: RLP; test eax, eax ; jns 0x69de4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00069d74: RLP; jmp 0x69d0f
read: 
write: 
--------------------------------------------------------------------------------
00069d94: RLP; test eax, eax ; jns 0x69d24
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00069e08: RLP; mov rax, qword ptr [rsp + 0x28] ; shl rax, 0x10 ; xor rax, qword ptr [rsp + 0x20] ; mov qword ptr [rip + 0x301917], rax ; jmp 0x69b80
read: rax 
write: rax rflags 
--------------------------------------------------------------------------------
00069e45: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00069e6f: RLP; mov edx, 0xffffffff ; cmp rax, 1 ; cmove edx, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; mov eax, edx ; ret
read: edx rax rflags rsp 
write: eax edx rflags rsp 
--------------------------------------------------------------------------------
00069eb3: RLP; test rax, rax ; sete al ; add rsp, 0x18 ; movzx eax, al ; neg eax ; ret
read: al eax rax rflags rsp 
write: al eax rflags rsp 
--------------------------------------------------------------------------------
00069edd: RLP; test eax, eax ; je 0x69f09
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00069eff: RLP; test eax, eax ; setne al ; movzx eax, al ; neg eax ; pop rbx ; ret
read: al eax rflags rsp 
write: al eax rbx rflags rsp 
--------------------------------------------------------------------------------
00069fb9: RLP; add rsp, 0x80 ; mov rdx, qword ptr [r9 + 0x88] ; mov qword ptr [rdx + 8], r8 ; add dword ptr [rdx + 4], 1 ; ret
read: r8 rsp 
write: rdx rflags rsp 
--------------------------------------------------------------------------------
0006a08c: RLP; add rsp, 0x80 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0006a15e: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rbx + 0x88] ; mov rcx, qword ptr [r8] ; mov qword ptr [rdx + 8], rbp ; add dword ptr [rdx + 4], 1 ; lea rax, [rsp + 0xf0] ; or dword ptr [rcx + 0x74], 0x10 ; mov rdi, qword ptr [r8] ; lea rdx, [rsp + 8] ; xor ecx, ecx ; mov rsi, r10 ; mov qword ptr [rsp + 0x10], rax ; lea rax, [rsp + 0x20] ; mov dword ptr [rsp + 8], 8 ; mov dword ptr [rsp + 0xc], 0x30
read: ecx r10 rax rbp rsp 
write: ecx rax rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0006a1b8: RLP; and dword ptr [rbx + 0x74], 0xffffffeb ; test dword ptr [rbx], 0x8000 ; mov edx, eax ; jne 0x6a209
read: eax rflags 
write: edx rflags 
--------------------------------------------------------------------------------
0006a202: RLP; add rsp, 0x80 ; add rsp, 0xd8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
read: edx rsp 
write: eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0006a27a: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
0006a2fa: RLP; add rsp, 0x80 ; mov r8, qword ptr [rbx + 0x88] ; mov rdi, qword ptr [r10] ; mov qword ptr [r8 + 8], r12 ; add dword ptr [r8 + 4], 1 ; or dword ptr [rdi + 0x74], 0x10 ; xor ecx, ecx ; mov rsi, rbp ; call 0x57ecc
read: ecx r12 rbp rip rsp 
write: ecx r8 rdi rflags rsi rsp 
--------------------------------------------------------------------------------
0006a326: RLP; and dword ptr [rbx + 0x74], 0xffffffeb ; test dword ptr [rbx], 0x8000 ; mov edx, eax ; jne 0x6a377
read: eax rflags 
write: edx rflags 
--------------------------------------------------------------------------------
0006a370: RLP; add rsp, 0x80 ; pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
read: edx rsp 
write: eax r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0006a3df: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
0006a4aa: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rbx + 0x88] ; mov qword ptr [rdx + 8], r10 ; add dword ptr [rdx + 4], 1 ; lea rax, [rsp + 0xe0] ; or dword ptr [rbx + 0x74], 0x10 ; lea rdx, [rsp + 8] ; xor ecx, ecx ; mov rsi, r9 ; mov rdi, rbx ; mov qword ptr [rsp + 0x10], rax ; lea rax, [rsp + 0x20] ; mov dword ptr [rsp + 8], 0x10 ; mov dword ptr [rsp + 0xc], 0x30 ; mov qword ptr [rsp + 0x18], rax
read: ecx r10 r9 rax rbx rsp 
write: ecx rax rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0006a501: RLP; and dword ptr [rbx + 0x74], 0xffffffeb ; test dword ptr [rbx], 0x8000 ; mov edx, eax ; jne 0x6a552
read: eax rflags 
write: edx rflags 
--------------------------------------------------------------------------------
0006a54b: RLP; add rsp, 0x80 ; add rsp, 0xd0 ; mov eax, edx ; pop rbx ; ret
read: edx rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
0006a5b3: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
0006a62b: RLP; add rsp, 0x80 ; mov r8, qword ptr [rbx + 0x88] ; mov qword ptr [r8 + 8], rbp ; add dword ptr [r8 + 4], 1 ; or dword ptr [rbx + 0x74], 0x10 ; xor ecx, ecx ; mov rsi, r10 ; mov rdi, rbx ; call 0x57ecc
read: ecx r10 rbp rbx rip rsp 
write: ecx r8 rdi rflags rsi rsp 
--------------------------------------------------------------------------------
0006a657: RLP; and dword ptr [rbx + 0x74], 0xffffffeb ; test dword ptr [rbx], 0x8000 ; mov edx, eax ; jne 0x6a6a8
read: eax rflags 
write: edx rflags 
--------------------------------------------------------------------------------
0006a6a1: RLP; add rsp, 0x80 ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
read: edx rsp 
write: eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0006a707: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
0006a7ab: RLP; add rsp, 0xd8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0006a7fd: RLP; lea rax, [rip + 0x2fdf58] ; mov rsi, r13 ; mov rdi, rsp ; xor ecx, ecx ; xor edx, edx ; mov qword ptr [rsp + 0xd8], rax ; call 0x7aedc
read: ecx edx r13 rax rip rsp 
write: ecx edx rax rdi rflags rsi rsp 
--------------------------------------------------------------------------------
0006a81f: RLP; mov rdx, r12 ; mov rsi, rbp ; mov rdi, rsp ; xor ecx, ecx ; or dword ptr [rsp + 0x74], 0x10 ; call 0x57ecc
read: ecx r12 rbp rip rsp 
write: ecx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0006a838: RLP; add rsp, 0xf8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rsp 
write: r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0006a880: RLP; test rax, rax ; mov rbx, rax ; je 0x6ac44
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
0006a8d2: RLP; lea rsi, [rip + 0xca4b4] ; mov rdx, rax ; mov rdi, rbx ; xor eax, eax ; call 0x5212c
read: eax rax rbx rip rsp 
write: eax rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0006a8ea: RLP; mov eax, dword ptr [rbp] ; sub eax, 4 ; cmp eax, 0x19 ; ja 0x6ab7c
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0006a915: RLP; cmp r13d, eax ; mov r13d, dword ptr [rbp] ; jl 0x6a93c
read: eax r13d rflags 
write: r13d rflags 
--------------------------------------------------------------------------------
0006a927: RLP; cmp r13d, eax ; jl 0x6ad59
read: eax r13d rflags 
write: rflags 
--------------------------------------------------------------------------------
0006a958: RLP; mov edx, r13d ; mov rsi, rax ; mov rdi, rbx ; xor eax, eax ; call 0x5212c
read: eax r13d rax rbx rip rsp 
write: eax edx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
0006a96c: RLP; mov rdi, rbx ; call 0x6bf5c
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0006a978: RLP; mov rdx, r12 ; mov ecx, dword ptr [rdx] ; add rdx, 4 ; lea eax, [rcx - 0x1010101] ; not ecx ; and eax, ecx ; and eax, 0x80808080 ; je 0x6a97b
read: eax ecx r12 rdx rflags 
write: eax ecx rdx rflags 
--------------------------------------------------------------------------------
0006a9c1: RLP; add rsp, 0x200 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: rsp 
write: r12 r13 r14 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0006a9ec: RLP; jmp 0x6a89c
read: 
write: 
--------------------------------------------------------------------------------
0006aa46: RLP; lea rsi, [rip + 0xca31e] ; mov rdx, rax ; mov rdi, rbx ; xor eax, eax ; call 0x5212c
read: eax rax rbx rip rsp 
write: eax rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0006aa5e: RLP; mov eax, dword ptr [rbp] ; cmp eax, 4 ; je 0x6abec
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0006aaad: RLP; jmp 0x6a96c
read: 
write: 
--------------------------------------------------------------------------------
0006abe1: RLP; jmp 0x6aa5e
read: 
write: 
--------------------------------------------------------------------------------
0006ac05: RLP; jmp 0x6a96c
read: 
write: 
--------------------------------------------------------------------------------
0006ac72: RLP; add rsp, 0x200 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: rsp 
write: r12 r13 r14 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0006acb5: RLP; jmp 0x6a96c
read: 
write: 
--------------------------------------------------------------------------------
0006ad54: RLP; jmp 0x6a96c
read: 
write: 
--------------------------------------------------------------------------------
0006ad66: RLP; sub r14d, eax ; call 0x36cfc
read: eax r14d rip rsp 
write: r14d rflags rsp 
--------------------------------------------------------------------------------
0006ad72: RLP; mov r13d, dword ptr [rbp] ; sub eax, r13d ; cmp r14d, eax ; jge 0x6adb8
read: eax r13d r14d rflags 
write: eax r13d rflags 
--------------------------------------------------------------------------------
0006ad87: RLP; cmp r13d, eax ; je 0x6adf4
read: eax r13d rflags 
write: rflags 
--------------------------------------------------------------------------------
0006ad99: RLP; lea rsi, [rip + 0xc9fa4] ; mov rdi, rbx ; mov edx, r13d ; sub edx, eax ; xor eax, eax ; call 0x5212c
read: eax edx r13d rbx rip rsp 
write: eax edx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
0006adb3: RLP; jmp 0x6a8ea
read: 
write: 
--------------------------------------------------------------------------------
0006adc1: RLP; cmp r13d, eax ; je 0x6ae1c
read: eax r13d rflags 
write: rflags 
--------------------------------------------------------------------------------
0006adcf: RLP; sub eax, dword ptr [rbp] ; lea rsi, [rip + 0xc9f84] ; mov rdi, rbx ; mov edx, eax ; xor eax, eax ; call 0x5212c
read: eax rbx rip rsp 
write: eax edx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
0006ade9: RLP; jmp 0x6a8ea
read: 
write: 
--------------------------------------------------------------------------------
0006ae11: RLP; jmp 0x6a8ea
read: 
write: 
--------------------------------------------------------------------------------
0006ae39: RLP; jmp 0x6a8ea
read: 
write: 
--------------------------------------------------------------------------------
0006b0fd: RLP; mov qword ptr [rbx + 0x20], rax ; add rsp, 0x10 ; mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: r13 rax rsp 
write: r12 r13 r14 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0006b122: RLP; test eax, eax ; je 0x6b134
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0006b1ca: RLP; cmp eax, -1 ; je 0x6b1d2
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0006b23a: RLP; test eax, eax ; je 0x6b2ac
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0006b296: RLP; cmp eax, -1 ; je 0x6b29d
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0006b347: RLP; test eax, eax ; je 0x6b355
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0006b3ba: RLP; test eax, eax ; mov rdx, qword ptr [rsp + 8] ; jne 0x6afbd
read: eax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
0006b4db: RLP; movsxd rdx, eax ; test eax, eax ; mov qword ptr [rbx + 0x38], rdx ; js 0x6b07e
read: eax rdx rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
0006b83a: RLP; test eax, eax ; je 0x6b84c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0006b8e2: RLP; cmp eax, -1 ; je 0x6b8ea
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0006b97d: RLP; mov qword ptr [rbx + 0x20], rax ; add rsp, 0x10 ; mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: r13 rax rsp 
write: r12 r13 r14 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0006ba7a: RLP; test eax, eax ; je 0x6bb04
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0006bada: RLP; cmp eax, -1 ; je 0x6bae1
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0006bbb8: RLP; test eax, eax ; je 0x6bbc6
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0006bc4d: RLP; movsxd rdx, eax ; test eax, eax ; mov qword ptr [rbx + 0x38], rdx ; mov edx, dword ptr [rbx + 8] ; jns 0x6b95c
read: eax rdx rflags 
write: edx rdx rflags 
--------------------------------------------------------------------------------
0006bc8a: RLP; test eax, eax ; mov rdx, qword ptr [rsp + 8] ; jne 0x6b72b
read: eax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
0006bd6c: RLP; add rax, 1 ; lea rdx, [rax*4 + 0x12] ; and rdx, 0xfffffffffffffff0 ; sub rsp, rdx ; test rax, rax ; mov rsi, rsp ; je 0x6bdb1
read: rax rdx rflags rsp 
write: rax rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0006bdc4: RLP; mov rsp, rbx ; lea rsp, [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
read: rbx rsp 
write: r12 r13 rbp rbx rsp 
--------------------------------------------------------------------------------
0006bdf2: RLP; lea rsp, [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
read: rsp 
write: r12 r13 rbp rbx rsp 
--------------------------------------------------------------------------------
0006be59: RLP; test eax, eax ; js 0x6be8c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0006beb4: RLP; cmp rax, -1 ; je 0x6bed7
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0006bed2: RLP; mov eax, 1 ; add rsp, 0x90 ; pop rbx ; pop rbp ; pop r12 ; ret
read: rsp 
write: eax r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0006bf44: RLP; test eax, eax ; mov dword ptr fs:[rbp], r12d ; jne 0x6bf13
read: eax r12d rflags 
write: rflags 
--------------------------------------------------------------------------------
0006bfc3: RLP; add rsp, 0x80 ; mov r8, qword ptr [rbx + 0x88] ; mov edx, dword ptr [rbx] ; mov qword ptr [r8 + 8], r9 ; add dword ptr [r8 + 4], 1 ; mov ecx, edx ; mov ebp, edx ; shl ebp, 0x1a ; sar ebp, 0x1f ; and dh, 0x20 ; jne 0x6c124
read: dh ebp edx r9 rflags rsp 
write: dh ebp ecx edx r8 rflags rsp 
--------------------------------------------------------------------------------
0006c01f: RLP; mov eax, dword ptr [rbx + 0xc0] ; test eax, eax ; jle 0x6c10c
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0006c070: RLP; add rsp, 0x80 ; mov rdi, qword ptr [r12 + 0x48] ; call 0x2323c
read: rip rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
0006c085: RLP; mov rdi, qword ptr [r12 + 0x90] ; call 0x2323c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0006c096: RLP; cmp dword ptr [rip + 0x3026d3], 0 ; je 0x6c0aa
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
0006c0c9: RLP; add rsp, 0x80 ; cmp rbx, qword ptr [rip + 0x2fe63d] ; je 0x6c0fd
read: rbx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0006c0fd: RLP; pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; ret
read: ebp rsp 
write: eax r12 rbp rbx rsp 
--------------------------------------------------------------------------------
0006c11f: RLP; jmp 0x6c0d0
read: 
write: 
--------------------------------------------------------------------------------
0006c130: RLP; mov ebp, eax ; mov ecx, dword ptr [rbx] ; jmp 0x6bfef
read: eax 
write: ebp ecx 
--------------------------------------------------------------------------------
0006c145: RLP; mov edx, dword ptr [rbx] ; mov ecx, edx ; jmp 0x6bf74
read: edx 
write: ecx edx 
--------------------------------------------------------------------------------
0006c183: RLP; add rsp, 0x80 ; jmp 0x6c00c
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0006c1e1: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
0006c297: RLP; cmp eax, -1 ; je 0x6c236
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0006c2cf: RLP; test rax, rax ; mov rbx, rax ; je 0x6c236
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
0006c319: RLP; lea rax, [rip + 0x2fc37c] ; mov qword ptr [rbx + 0xd8], rax ; mov rdi, rbx ; call 0x77edc
read: rax rbx rip rsp 
write: rax rdi rsp 
--------------------------------------------------------------------------------
0006c333: RLP; mov edx, dword ptr [rbx] ; mov dword ptr [rbx + 0x70], r12d ; and edx, 0xffffefb3 ; or edx, ebp ; test r14b, r14b ; mov dword ptr [rbx], edx ; je 0x6c239
read: ebp edx r12d r14b rflags 
write: edx rflags 
--------------------------------------------------------------------------------
0006c379: RLP; cmp rax, -1 ; jne 0x6c239
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0006c415: RLP; lea rax, [rip + 0x2fc100] ; jmp 0x6c320
read: 
write: rax 
--------------------------------------------------------------------------------
0006c43c: RLP; cmp eax, -1 ; je 0x6c236
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0006c4ba: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rbx + 0x88] ; mov qword ptr [rdx + 8], r8 ; add dword ptr [rdx + 4], 1 ; mov rax, qword ptr [rbx + 0xd8] ; mov rdi, rbx ; call qword ptr [rax + 0x60]
read: r8 rbx rsp 
write: rax rdi rdx rflags rsp 
--------------------------------------------------------------------------------
0006c4e1: RLP; xor edx, edx ; test eax, eax ; setne dl ; neg edx ; test dword ptr [rbx], 0x8000 ; jne 0x6c53c
read: eax edx rflags 
write: dl edx rflags 
--------------------------------------------------------------------------------
0006c52e: RLP; add rsp, 0x80 ; nop dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
read: edx rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
0006c54d: RLP; mov edx, eax ; jmp 0x6c53c
read: eax 
write: edx 
--------------------------------------------------------------------------------
0006c5a3: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
0006c619: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rbx + 0x88] ; mov qword ptr [rdx + 8], r9 ; add dword ptr [rdx + 4], 1 ; xor ecx, ecx ; mov edx, 1 ; xor esi, esi ; mov rdi, rbx ; call 0x6e6ac
read: ecx esi r9 rbx rip rsp 
write: ecx edx esi rdi rdx rflags rsp 
--------------------------------------------------------------------------------
0006c644: RLP; mov edx, dword ptr [rbx] ; test dh, 1 ; je 0x6c6ec
read: dh rflags 
write: edx rflags 
--------------------------------------------------------------------------------
0006c678: RLP; test eax, eax ; js 0x6c734
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0006c6c5: RLP; add rsp, 0x80 ; add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
read: esi rsp 
write: eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0006c79c: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
0006c81f: RLP; add rsp, 0x80 ; mov r8, qword ptr [rbx + 0x88] ; mov ecx, dword ptr [rbx] ; mov qword ptr [r8 + 8], rdx ; add dword ptr [r8 + 4], 1 ; mov r12d, ecx ; sub r9d, 1 ; and ecx, 0xffffffdf ; mov dword ptr [rbx], ecx ; movsxd rdx, r9d ; mov r8d, 1 ; mov ecx, 0xa ; mov rsi, rbp ; mov rdi, rbx ; and r12d, 0x20
read: ecx r12d r9d rbp rbx rdx rsp 
write: ecx r12d r8 r8d r9d rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0006c865: RLP; test rax, rax ; mov edx, dword ptr [rbx] ; jne 0x6c8d4
read: rax rflags 
write: edx rflags 
--------------------------------------------------------------------------------
0006c8be: RLP; add rsp, 0x80 ; mov rax, rbp ; nop dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; ret
read: rbp rsp 
write: r12 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0006c959: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
0006c9e1: RLP; test rax, rax ; mov rbx, rax ; je 0x6ca64
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
0006ca15: RLP; lea rax, [rip + 0x2fbc80] ; mov rdi, rbx ; mov qword ptr [rbx + 0xd8], rax ; call 0x77edc
read: rax rbx rip rsp 
write: rax rdi rsp 
--------------------------------------------------------------------------------
0006ca2f: RLP; mov ecx, r13d ; mov rdx, r12 ; mov rsi, rbp ; mov rdi, rbx ; call 0x7822c
read: r12 r13d rbp rbx rip rsp 
write: ecx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
0006ca44: RLP; test rax, rax ; je 0x6ca6c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0006ca55: RLP; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rsp 
write: r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0006ca7d: RLP; mov rdi, rbx ; call 0x1f46c
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0006ca89: RLP; mov rax, qword ptr [rsp + 8] ; jmp 0x6ca55
read: 
write: rax 
--------------------------------------------------------------------------------
0006cab2: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0006cadd: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0006cb25: RLP; cmp rbp, rax ; jle 0x6cb2d
read: rax rbp rflags 
write: rflags 
--------------------------------------------------------------------------------
0006cb67: RLP; cmp eax, -1 ; je 0x6cb7c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0006cbaf: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0006cbd8: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0006cc07: RLP; lea rax, [rip + 0x2fb14e] ; mov qword ptr [rbx + 0xe0], r12 ; mov rdi, rbx ; mov qword ptr [rbx + 0xd8], rax ; mov rax, qword ptr [rsp + 0x20] ; mov qword ptr [rbx + 0xe8], rax ; mov rax, qword ptr [rsp + 0x28] ; mov qword ptr [rbx + 0xf0], rax ; mov rax, qword ptr [rsp + 0x30] ; mov qword ptr [rbx + 0xf8], rax ; mov rax, qword ptr [rsp + 0x38] ; mov qword ptr [rbx + 0x100], rax ; call 0x77edc
read: r12 rax rbx rip rsp 
write: rax rdi rsp 
--------------------------------------------------------------------------------
0006cc58: RLP; mov eax, dword ptr [rbx] ; mov esi, ebp ; mov dword ptr [rbx + 0x70], 0xfffffffe ; and esi, 0x100c ; and eax, 0xffffeff3 ; or esi, eax ; mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
read: eax ebp esi rsp 
write: eax esi r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0006ccd3: RLP; test rax, rax ; mov rbx, rax ; je 0x6cca2
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
0006cd21: RLP; add rsp, 0x20 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
read: rbx rsp 
write: r12 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0006cd83: RLP; mov r12, rax ; mov eax, dword ptr [rbx] ; and eax, 0x8000 ; jne 0x6cdec
read: eax rax rflags 
write: eax r12 rflags 
--------------------------------------------------------------------------------
0006cdd5: RLP; add rsp, 0x80 ; mov r8, qword ptr [rbx + 0x88] ; mov qword ptr [r8 + 8], rdx ; add dword ptr [r8 + 4], 1 ; mov eax, dword ptr [rbx + 0xc0] ; test eax, eax ; jne 0x6ce7c
read: eax rdx rflags rsp 
write: eax r8 rflags rsp 
--------------------------------------------------------------------------------
0006ce1b: RLP; cmp r12, rax ; jne 0x6ce81
read: r12 rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0006ce69: RLP; add rsp, 0x80 ; pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
read: edx rsp 
write: eax r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0006ceda: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
0006cf65: RLP; add rsp, 0x80 ; mov r8, qword ptr [rbx + 0x88] ; mov qword ptr [r8 + 8], rdx ; add dword ptr [r8 + 4], 1 ; mov rdx, rbp ; mov rsi, r9 ; mov rdi, rbx ; call 0x7994c
read: r9 rbp rbx rdx rip rsp 
write: r8 rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0006cf8e: RLP; test dword ptr [rbx], 0x8000 ; mov rdx, rax ; jne 0x6cfdc
read: rax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
0006cfd5: RLP; add rsp, 0x80 ; cmp rbp, rdx ; mov rax, r13 ; je 0x6cfec
read: r13 rbp rdx rflags rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
0006d05b: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
0006d0c9: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rbx + 0x88] ; mov qword ptr [rdx + 8], r9 ; add dword ptr [rdx + 4], 1 ; mov rsi, qword ptr [rbp] ; mov edx, 3 ; mov rdi, rbx ; call 0x6e8cc
read: r9 rbx rip rsp 
write: edx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0006d0f4: RLP; cmp rax, -1 ; je 0x6d174
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0006d115: RLP; test eax, eax ; js 0x6d194
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0006d15f: RLP; add rsp, 0x80 ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
read: edx rsp 
write: eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0006d1fa: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
0006d261: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rbx + 0x88] ; mov qword ptr [rdx + 8], r8 ; add dword ptr [rdx + 4], 1 ; xor ecx, ecx ; mov edx, 1 ; xor esi, esi ; mov rdi, rbx ; call 0x6e6ac
read: ecx esi r8 rbx rip rsp 
write: ecx edx esi rdi rdx rflags rsp 
--------------------------------------------------------------------------------
0006d28c: RLP; mov rdx, rax ; mov eax, dword ptr [rbx] ; test ah, 1 ; je 0x6d2aa
read: ah rax rflags 
write: eax rdx rflags 
--------------------------------------------------------------------------------
0006d31b: RLP; add rsp, 0x80 ; jmp 0x6d2bc
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0006d38e: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
0006d407: RLP; cmp rax, -1 ; je 0x6d42e
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0006d429: RLP; mov eax, 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: rsp 
write: eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0006d445: RLP; mov rdx, qword ptr [rbx + 0x38] ; jmp 0x6d3c2
read: 
write: rdx 
--------------------------------------------------------------------------------
0006d4d5: RLP; add rsp, 0x80 ; mov r8, qword ptr [rbx + 0x88] ; mov qword ptr [r8 + 8], rdx ; add dword ptr [r8 + 4], 1 ; mov eax, dword ptr [rbx + 0xc0] ; test eax, eax ; je 0x6d53c
read: eax rdx rflags rsp 
write: eax r8 rflags rsp 
--------------------------------------------------------------------------------
0006d55d: RLP; cmp rax, -1 ; mov rdx, rax ; sete sil ; jmp 0x6d4ff
read: rax rflags 
write: rdx rflags sil 
--------------------------------------------------------------------------------
0006d5bd: RLP; add rsp, 0x80 ; jmp 0x6d51c
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0006d61b: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
0006d6b3: RLP; add rsp, 0x80 ; mov r8, qword ptr [rbx + 0x88] ; mov edx, dword ptr [rbx] ; mov qword ptr [r8 + 8], r9 ; add dword ptr [r8 + 4], 1 ; mov r15d, edx ; and edx, 0x20 ; jne 0x6d81c
read: edx r9 rflags rsp 
write: edx r15d r8 rflags rsp 
--------------------------------------------------------------------------------
0006d704: RLP; test rax, rax ; mov qword ptr [r12], rax ; je 0x6d81c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0006d753: RLP; test rax, rax ; mov rdx, qword ptr [rsp + 8] ; je 0x6d8ac
read: rax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
0006d784: RLP; add qword ptr [rbx + 8], r14 ; test r13, r13 ; jne 0x6d88c
read: r13 r14 rflags 
write: rflags 
--------------------------------------------------------------------------------
0006d79d: RLP; cmp eax, -1 ; je 0x6d88c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0006d7cc: RLP; test rax, rax ; mov r13, rax ; mov r8, qword ptr [rsp + 8] ; je 0x6d7e3
read: rax rflags 
write: r13 r8 rflags 
--------------------------------------------------------------------------------
0006d872: RLP; add rsp, 0x80 ; mov rax, rbp ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rbp rsp 
write: r12 r13 r14 r15 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0006d8a5: RLP; cmp eax, -1 ; jne 0x6d8bb
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0006d951: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
0006d9df: RLP; test rax, rax ; mov r8, rax ; jne 0x6da6c
read: rax rflags 
write: r8 rflags 
--------------------------------------------------------------------------------
0006da03: RLP; add qword ptr [r14 + 8], r12 ; test r15, r15 ; je 0x6da4c
read: r12 r15 rflags 
write: rflags 
--------------------------------------------------------------------------------
0006da28: RLP; cmp eax, -1 ; je 0x6dac0
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0006daa4: RLP; mov r8, qword ptr [rsp + 8] ; lea rax, [r12 + rbp] ; mov qword ptr [r14 + 8], r8 ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: r8 rsp 
write: r12 r13 r14 r15 r8 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0006dafe: RLP; jmp 0x6da4c
read: 
write: 
--------------------------------------------------------------------------------
0006db40: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0006dbb2: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rbx + 0x88] ; mov rdi, qword ptr [rip + 0x2fcb4d] ; mov qword ptr [rdx + 8], r8 ; add dword ptr [rdx + 4], 1 ; mov rax, qword ptr [rdi + 8] ; cmp rax, qword ptr [rdi + 0x10] ; jae 0x6dcb4
read: r8 rax rflags rsp 
write: rax rdi rdx rflags rsp 
--------------------------------------------------------------------------------
0006dc2a: RLP; mov rdx, qword ptr [rip + 0x2fcae3] ; add rax, 1 ; mov ecx, dword ptr [rdx] ; test cl, 0x20 ; jne 0x6dccc
read: cl rax rflags 
write: ecx rax rdx rflags 
--------------------------------------------------------------------------------
0006dc8f: RLP; add rsp, 0x80 ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; ret
read: rbp rsp 
write: r12 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0006dcbd: RLP; cmp eax, -1 ; jne 0x6dbe8
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0006dd25: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
0006ddbe: RLP; add rbp, rax ; cmp rax, 0x10 ; je 0x6dd9c
read: rax rbp rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
0006ddf8: RLP; add rsp, 0x18 ; add rbp, rax ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
read: rax rbp rsp 
write: r12 r13 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0006de8b: RLP; add rsp, 0x80 ; mov qword ptr [rip + 0x2fd8ab], rdx ; mov ecx, dword ptr [rip + 0x2fd8a1] ; mov rdx, qword ptr [rip + 0x2fd8a6] ; mov r12d, 0xffffffff ; lea eax, [rcx + 1] ; test rdx, rdx ; mov dword ptr [rip + 0x2fd888], eax ; je 0x6deea
read: eax rdx rflags rsp 
write: eax ecx r12d rdx rflags rsp 
--------------------------------------------------------------------------------
0006df32: RLP; add rsp, 0x80 ; test ebp, ebp ; jne 0x6dfdc
read: ebp rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0006df53: RLP; test eax, eax ; js 0x6dfac
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0006dffb: RLP; jmp 0x6df41
read: 
write: 
--------------------------------------------------------------------------------
0006e02a: RLP; jmp 0x6de3d
read: 
write: 
--------------------------------------------------------------------------------
0006e0a7: RLP; add rsp, 0x80 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0006e15a: RLP; test eax, eax ; js 0x6e2ec
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0006e188: RLP; test eax, eax ; mov r14d, eax ; mov dword ptr [r12 + 0xe0], eax ; mov edi, dword ptr [rsp + 0xc] ; je 0x6e37f
read: eax rflags 
write: edi r14d rflags 
--------------------------------------------------------------------------------
0006e1a8: RLP; test r14d, r14d ; js 0x6e2de
read: r14d rflags 
write: rflags 
--------------------------------------------------------------------------------
0006e22f: RLP; add rsp, 0x80 ; mov qword ptr [rip + 0x2fd507], rdx ; mov rax, qword ptr [rip + 0x2fd508] ; mov qword ptr [rip + 0x2fd501], r12 ; mov qword ptr [r12 + 0xe8], rax ; mov eax, dword ptr [rip + 0x2fd4e7] ; test eax, eax ; jne 0x6e2a2
read: eax r12 rax rdx rflags rsp 
write: eax rax rflags rsp 
--------------------------------------------------------------------------------
0006e29b: RLP; add rsp, 0x80 ; test ebx, ebx ; jne 0x6e359
read: ebx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0006e2ea: RLP; nop ; xor eax, eax ; jmp 0x6e10e
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
0006e33a: RLP; jmp 0x6e1e1
read: 
write: 
--------------------------------------------------------------------------------
0006e354: RLP; jmp 0x6e1b9
read: 
write: 
--------------------------------------------------------------------------------
0006e37a: RLP; jmp 0x6e2aa
read: 
write: 
--------------------------------------------------------------------------------
0006e395: RLP; mov rbp, qword ptr [rip + 0x2fd3b0] ; jmp 0x6e3b5
read: 
write: rbp 
--------------------------------------------------------------------------------
0006e3ae: RLP; mov rbp, qword ptr [rbp + 0xe8] ; test rbp, rbp ; jne 0x6e39e
read: rbp rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
0006e3e0: RLP; mov edi, 0x7f ; call 0xb319c
read: rip rsp 
write: edi rsp 
--------------------------------------------------------------------------------
0006e3fe: RLP; jmp 0x6e395
read: 
write: 
--------------------------------------------------------------------------------
0006e42c: RLP; test rax, rax ; mov rbx, rax ; je 0x6e494
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
0006e450: RLP; lea rax, [rip + 0x2f99c5] ; mov rdi, rbx ; mov qword ptr [rbx + 0xd8], rax ; call 0x77edc
read: rax rbx rip rsp 
write: rax rdi rsp 
--------------------------------------------------------------------------------
0006e46a: RLP; mov rdx, r12 ; mov rsi, rbp ; mov rdi, rbx ; call 0x6e0bc
read: r12 rbp rbx rip rsp 
write: rdi rdx rsi rsp 
--------------------------------------------------------------------------------
0006e47c: RLP; test rax, rax ; je 0x6e498
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0006e4a9: RLP; mov rdi, rbx ; call 0x1f46c
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0006e4b5: RLP; mov rax, qword ptr [rsp + 8] ; jmp 0x6e484
read: 
write: rax 
--------------------------------------------------------------------------------
0006e4d0: RLP; mov rbx, qword ptr [rip + 0x2fc235] ; mov rbp, rax ; mov eax, dword ptr [rbx] ; mov rdi, rbx ; and eax, 0x8000 ; jne 0x6e54e
read: eax rax rbx rflags 
write: eax rbp rbx rdi rflags 
--------------------------------------------------------------------------------
0006e530: RLP; add rsp, 0x80 ; mov r8, qword ptr [rbx + 0x88] ; mov rdi, qword ptr [rip + 0x2fc1c7] ; mov qword ptr [r8 + 8], rdx ; add dword ptr [r8 + 4], 1 ; mov eax, dword ptr [rdi + 0xc0] ; test eax, eax ; jne 0x6e60c
read: eax rdx rflags rsp 
write: eax r8 rdi rflags rsp 
--------------------------------------------------------------------------------
0006e57a: RLP; cmp rbp, rax ; jne 0x6e615
read: rax rbp rflags 
write: rflags 
--------------------------------------------------------------------------------
0006e5fb: RLP; add rsp, 0x80 ; pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; ret
read: ebp rsp 
write: eax r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0006e632: RLP; add eax, 1 ; je 0x6e615
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0006e68e: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
0006e700: RLP; mov ecx, dword ptr [rsp + 0xc] ; mov edx, dword ptr [rsp + 8] ; mov rsi, qword ptr [rsp] ; mov rax, qword ptr [rbx + 0xd8] ; mov rdi, rbx ; call qword ptr [rax + 0x48]
read: rbx rsp 
write: ecx edx rax rdi rsi rsp 
--------------------------------------------------------------------------------
0006e71d: RLP; add rsp, 0x10 ; pop rbx ; ret
read: rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
0006e75d: RLP; mov rsi, qword ptr [rsp] ; mov edx, dword ptr [rsp + 8] ; mov ecx, dword ptr [rsp + 0xc] ; jmp 0x6e70c
read: 
write: ecx edx rsi 
--------------------------------------------------------------------------------
0006e7eb: RLP; add rsp, 0x80 ; mov r8, qword ptr [rbx + 0x88] ; mov qword ptr [r8 + 8], r12 ; add dword ptr [r8 + 4], 1 ; mov ecx, ebp ; mov rsi, r10 ; mov rdi, rbx ; call 0x6e6ac
read: ebp r10 r12 rbx rip rsp 
write: ecx r8 rdi rflags rsi rsp 
--------------------------------------------------------------------------------
0006e813: RLP; test dword ptr [rbx], 0x8000 ; mov rdx, rax ; jne 0x6e861
read: rax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
0006e85a: RLP; add rsp, 0x80 ; pop rbx ; pop rbp ; mov rax, rdx ; pop r12 ; ret
read: rdx rsp 
write: r12 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0006e8bb: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
0006e8fe: RLP; mov rax, qword ptr [rbx + 0xd8] ; mov ecx, r12d ; mov rsi, rbp ; mov rdi, rbx ; xor edx, edx ; call qword ptr [rax + 0x48]
read: edx r12d rbp rbx rsp 
write: ecx edx rax rdi rflags rsi rsp 
--------------------------------------------------------------------------------
0006e917: RLP; pop rbx ; pop rbp ; pop r12 ; ret
read: rsp 
write: r12 rbp rbx rsp 
--------------------------------------------------------------------------------
0006e92c: RLP; jmp 0x6e8fe
read: 
write: 
--------------------------------------------------------------------------------
0006e99b: RLP; add rsp, 0x80 ; mov r8, qword ptr [rbx + 0x88] ; mov qword ptr [r8 + 8], rbp ; add dword ptr [r8 + 4], 1 ; mov rsi, r10 ; mov rdi, rbx ; call 0x6e8cc
read: r10 rbp rbx rip rsp 
write: r8 rdi rflags rsi rsp 
--------------------------------------------------------------------------------
0006e9c1: RLP; test dword ptr [rbx], 0x8000 ; mov rdx, rax ; jne 0x6ea0f
read: rax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
0006ea08: RLP; add rsp, 0x80 ; add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
read: rdx rsp 
write: rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0006ea6b: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
0006eadb: RLP; add rsp, 0x80 ; mov r8, qword ptr [rbx + 0x88] ; mov ecx, dword ptr [rbx] ; mov qword ptr [r8 + 8], r9 ; add dword ptr [r8 + 4], 1 ; mov rax, qword ptr [rbx + 0xd8] ; and ch, 0xfd ; xor ebp, ebp ; test r12, r12 ; mov dword ptr [rbx], ecx ; mov rsi, r12 ; cmovne rbp, rdx ; mov rdi, rbx ; mov rdx, rbp ; call qword ptr [rax + 0x58]
read: ch ebp ecx r12 r9 rbp rbx rdx rflags rsp 
write: ch ebp ecx r8 rax rbp rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0006eb19: RLP; mov eax, dword ptr [rbx + 0xc0] ; test eax, eax ; jne 0x6eb46
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0006eb46: RLP; test dword ptr [rbx], 0x8000 ; jne 0x6eb91
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
0006eb8a: RLP; add rsp, 0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
read: rsp 
write: r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0006ebe8: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
0006ec61: RLP; add rsp, 0x80 ; mov r8, qword ptr [rbx + 0x88] ; mov edi, dword ptr [rbx] ; mov qword ptr [r8 + 8], r12 ; add dword ptr [r8 + 4], 1 ; mov r8d, edi ; cmp edx, 1 ; je 0x6ed44
read: edi edx r12 rflags rsp 
write: edi r8 r8d rflags rsp 
--------------------------------------------------------------------------------
0006ecdd: RLP; add rsp, 0x80 ; pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
read: edx rsp 
write: eax r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0006ed13: RLP; xor edx, edx ; test rax, rax ; mov r8d, dword ptr [rbx] ; sete dl ; neg edx ; jmp 0x6ec98
read: edx rax rflags 
write: dl edx r8d rflags 
--------------------------------------------------------------------------------
0006ed82: RLP; test eax, eax ; mov r8d, dword ptr [rbx] ; js 0x6ec93
read: eax rflags 
write: r8d rflags 
--------------------------------------------------------------------------------
0006edf0: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
0006ee6d: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rbx + 0x88] ; mov qword ptr [rdx + 8], r9 ; add dword ptr [rdx + 4], 1 ; movzx esi, r8b ; mov rdi, rbx ; call 0x79d9c
read: r8b r9 rbx rip rsp 
write: esi rdi rdx rflags rsp 
--------------------------------------------------------------------------------
0006ee93: RLP; test dword ptr [rbx], 0x8000 ; mov edx, eax ; jne 0x6eeec
read: eax rflags 
write: edx rflags 
--------------------------------------------------------------------------------
0006eed9: RLP; add rsp, 0x80 ; mov eax, edx ; nop word ptr cs:[rax + rax] ; pop rbx ; ret
read: edx rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
0006ef3d: RLP; lea rax, [rip + 0x2f9818] ; mov rcx, rbp ; mov rsi, rbp ; mov rdx, -1 ; mov rdi, rsp ; mov qword ptr [rsp + 0xd8], rax ; call 0x7aedc
read: rax rbp rip rsp 
write: rax rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
0006ef65: RLP; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rsp ; call 0x4797c
read: r12 r13 rip rsp 
write: rdi rdx rsi rsp 
--------------------------------------------------------------------------------
0006ef77: RLP; mov rdx, qword ptr [rsp + 0x28] ; cmp rdx, qword ptr [rsp + 0x30] ; mov ebp, eax ; jae 0x6ef98
read: eax rdx rflags 
write: ebp rdx rflags 
--------------------------------------------------------------------------------
0006efa6: RLP; jmp 0x6ef88
read: 
write: 
--------------------------------------------------------------------------------
0006efed: RLP; lea rax, [rip + 0x2f9768] ; mov rsi, r13 ; mov rdi, rsp ; xor ecx, ecx ; xor edx, edx ; mov qword ptr [rsp + 0xd8], rax ; call 0x7aedc
read: ecx edx r13 rax rip rsp 
write: ecx edx rax rdi rflags rsi rsp 
--------------------------------------------------------------------------------
0006f00f: RLP; mov rdx, r12 ; mov rsi, rbp ; mov rdi, rsp ; xor ecx, ecx ; call 0x57ecc
read: ecx r12 rbp rip rsp 
write: ecx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0006f023: RLP; add rsp, 0xf8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rsp 
write: r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0006f098: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rbx + 0x88] ; mov qword ptr [rdx + 8], r8 ; add dword ptr [rdx + 4], 1 ; mov esi, 1 ; mov rdi, rbx ; call 0x73bdc
read: r8 rbx rip rsp 
write: esi rdi rdx rflags rsp 
--------------------------------------------------------------------------------
0006f0bf: RLP; test eax, eax ; js 0x6f13c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0006f129: RLP; add rsp, 0x80 ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
read: edx rsp 
write: eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0006f151: RLP; mov edx, eax ; jmp 0x6f0e5
read: eax 
write: edx 
--------------------------------------------------------------------------------
0006f1a7: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
0006f1dc: RLP; test eax, eax ; mov edx, 0xffffffff ; js 0x6f207
read: eax rflags 
write: edx rflags 
--------------------------------------------------------------------------------
0006f21e: RLP; mov edx, eax ; jmp 0x6f207
read: eax 
write: edx 
--------------------------------------------------------------------------------
0006f281: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rbx + 0x88] ; mov qword ptr [rdx + 8], r8 ; add dword ptr [rdx + 4], 1 ; mov rax, qword ptr [rbx + 0xa0] ; test rax, rax ; je 0x6f304
read: r8 rax rflags rsp 
write: rax rdx rflags rsp 
--------------------------------------------------------------------------------
0006f2f9: RLP; add rsp, 0x80 ; mov eax, edx ; pop rbx ; ret
read: edx rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
0006f310: RLP; mov edx, eax ; jmp 0x6f2b5
read: eax 
write: edx 
--------------------------------------------------------------------------------
0006f366: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
0006f3b0: RLP; jmp 0x6f3a2
read: 
write: 
--------------------------------------------------------------------------------
0006f41c: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rbx + 0x88] ; mov rdi, qword ptr [rip + 0x2fb2e3] ; mov qword ptr [rdx + 8], r8 ; add dword ptr [rdx + 4], 1 ; mov rax, qword ptr [rdi + 0xa0] ; test rax, rax ; je 0x6f4b1
read: r8 rax rflags rsp 
write: rax rdi rdx rflags rsp 
--------------------------------------------------------------------------------
0006f49b: RLP; add rsp, 0x80 ; mov eax, edx ; pop rbx ; ret
read: edx rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
0006f4ba: RLP; mov edx, eax ; jmp 0x6f457
read: eax 
write: edx 
--------------------------------------------------------------------------------
0006f510: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
0006f567: RLP; jmp 0x6f559
read: 
write: 
--------------------------------------------------------------------------------
0006f5df: RLP; add rsp, 0x80 ; mov r8, qword ptr [rbx + 0x88] ; mov ecx, dword ptr [rbx] ; mov qword ptr [r8 + 8], rdx ; add dword ptr [r8 + 4], 1 ; mov r12d, ecx ; sub r9d, 1 ; and ecx, 0xffffffdf ; mov dword ptr [rbx], ecx ; movsxd rdx, r9d ; mov r8d, 1 ; mov ecx, 0xa ; mov rsi, rbp ; mov rdi, rbx ; and r12d, 0x20
read: ecx r12d r9d rbp rbx rdx rsp 
write: ecx r12d r8 r8d r9d rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0006f625: RLP; test rax, rax ; mov edx, dword ptr [rbx] ; jne 0x6f694
read: rax rflags 
write: edx rflags 
--------------------------------------------------------------------------------
0006f67e: RLP; add rsp, 0x80 ; mov rax, rbp ; nop dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; ret
read: rbp rsp 
write: r12 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0006f71c: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
0006f771: RLP; test rax, rax ; mov edx, dword ptr [rbx] ; jne 0x6f78c
read: rax rflags 
write: edx rflags 
--------------------------------------------------------------------------------
0006f7d3: RLP; mov r12, rax ; mov eax, dword ptr [rbx] ; and eax, 0x8000 ; jne 0x6f83c
read: eax rax rflags 
write: eax r12 rflags 
--------------------------------------------------------------------------------
0006f825: RLP; add rsp, 0x80 ; mov r8, qword ptr [rbx + 0x88] ; mov qword ptr [r8 + 8], rdx ; add dword ptr [r8 + 4], 1 ; mov esi, 1 ; mov rdi, rbx ; call 0x73bdc
read: rbx rdx rip rsp 
write: esi r8 rdi rflags rsp 
--------------------------------------------------------------------------------
0006f84d: RLP; cmp eax, 1 ; jne 0x6f8cc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0006f869: RLP; cmp r12, rax ; jne 0x6f8cc
read: r12 rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0006f8b7: RLP; add rsp, 0x80 ; pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
read: edx rsp 
write: eax r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0006f925: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
0006f953: RLP; mov esi, 1 ; mov rdi, rbx ; mov r12, rax ; call 0x73bdc
read: rax rbx rip rsp 
write: esi r12 rdi rsp 
--------------------------------------------------------------------------------
0006f967: RLP; cmp eax, 1 ; jne 0x6f99c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0006f983: RLP; cmp rax, r12 ; jne 0x6f99c
read: r12 rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0006fa1f: RLP; test rax, rax ; mov r8, rax ; jne 0x6fac4
read: rax rflags 
write: r8 rflags 
--------------------------------------------------------------------------------
0006fa3d: RLP; mov rdx, qword ptr [r14 + 0xa0] ; lea rax, [r12*4] ; sub r15, r12 ; add rbx, rax ; add qword ptr [rdx], rax ; test r15, r15 ; je 0x6faa4
read: r12 r15 rax rbx rflags 
write: r15 rax rbx rdx rflags 
--------------------------------------------------------------------------------
0006fa80: RLP; cmp eax, -1 ; je 0x6fb2a
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0006fb07: RLP; mov rax, qword ptr [r14 + 0xa0] ; mov r8, qword ptr [rsp + 8] ; mov qword ptr [rax], r8 ; add rsp, 0x28 ; lea rax, [rbp + r12] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: r8 rsp 
write: r12 r13 r14 r15 r8 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0006fb6b: RLP; nop ; jmp 0x6faa4
read: 
write: 
--------------------------------------------------------------------------------
0006fb8c: RLP; jmp 0x6f9f0
read: 
write: 
--------------------------------------------------------------------------------
0006fbb0: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0006fc3e: RLP; add rbp, rax ; cmp rax, 0x10 ; je 0x6fc1c
read: rax rbp rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
0006fc78: RLP; add rsp, 0x48 ; add rbp, rax ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
read: rax rbp rsp 
write: r12 r13 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0006fce8: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rbx + 0x88] ; mov qword ptr [rdx + 8], r8 ; add dword ptr [rdx + 4], 1 ; mov esi, 1 ; mov rdi, rbx ; call 0x73bdc
read: r8 rbx rip rsp 
write: esi rdi rdx rflags rsp 
--------------------------------------------------------------------------------
0006fd0f: RLP; mov edx, 0xffffffff ; cmp ebp, edx ; je 0x6fd28
read: ebp edx rflags 
write: edx rflags 
--------------------------------------------------------------------------------
0006fd26: RLP; mov edx, eax ; test dword ptr [rbx], 0x8000 ; jne 0x6fd73
read: eax rflags 
write: edx rflags 
--------------------------------------------------------------------------------
0006fd6c: RLP; add rsp, 0x80 ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
read: edx rsp 
write: eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0006fdd4: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rbx + 0x88] ; mov qword ptr [rdx + 8], r9 ; add dword ptr [rdx + 4], 1 ; mov rdx, qword ptr [rbx + 0xa0] ; test rdx, rdx ; je 0x6fe5d
read: r9 rdx rflags rsp 
write: rdx rflags rsp 
--------------------------------------------------------------------------------
0006fe52: RLP; add rsp, 0x80 ; mov eax, edx ; pop rbx ; ret
read: edx rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
0006fe6c: RLP; mov edx, eax ; jmp 0x6fe0e
read: eax 
write: edx 
--------------------------------------------------------------------------------
0006fec2: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
0006ff1c: RLP; jmp 0x6ff09
read: 
write: 
--------------------------------------------------------------------------------
0006ff8f: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rbx + 0x88] ; mov rdi, qword ptr [rip + 0x2fa768] ; mov qword ptr [rdx + 8], r9 ; add dword ptr [rdx + 4], 1 ; mov rdx, qword ptr [rdi + 0xa0] ; test rdx, rdx ; je 0x7002c
read: r9 rdx rflags rsp 
write: rdi rdx rflags rsp 
--------------------------------------------------------------------------------
00070014: RLP; add rsp, 0x80 ; mov eax, edx ; pop rbx ; ret
read: edx rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
00070038: RLP; mov edx, eax ; jmp 0x6ffd0
read: eax 
write: edx 
--------------------------------------------------------------------------------
0007008e: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
000700f0: RLP; jmp 0x700dd
read: 
write: 
--------------------------------------------------------------------------------
0007015f: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rbx + 0x88] ; mov rdi, qword ptr [rip + 0x2fa598] ; mov qword ptr [rdx + 8], r9 ; add dword ptr [rdx + 4], 1 ; mov rdx, qword ptr [rdi + 0x28] ; cmp rdx, qword ptr [rdi + 0x30] ; jae 0x701f1
read: r9 rdx rflags rsp 
write: rdi rdx rflags rsp 
--------------------------------------------------------------------------------
000701d9: RLP; add rsp, 0x80 ; mov eax, edx ; pop rbx ; ret
read: edx rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
000701fe: RLP; mov edx, eax ; jmp 0x70195
read: eax 
write: edx 
--------------------------------------------------------------------------------
00070254: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
000702a2: RLP; pop rdx ; ret
read: rsp 
write: rdx rsp 
--------------------------------------------------------------------------------
0007033b: RLP; add rsp, 0xd8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000703d6: RLP; add rsp, 0xd8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0007040d: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000704bd: RLP; add rsp, 0xd8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0007056f: RLP; add rsp, 0xd8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0007060b: RLP; add rsp, 0xd8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0007063c: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0007068c: RLP; mov rdx, qword ptr [rbp + 0xa0] ; mov qword ptr [rdx + 0x18], rbx ; mov qword ptr [rdx + 0x10], rbx ; mov qword ptr [rdx], rbx ; mov qword ptr [rdx + 8], r12 ; mov qword ptr [rdx + 0x20], rbx ; mov qword ptr [rdx + 0x28], rbx ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; mov eax, r13d ; pop r13 ; ret
read: r12 r13d rbx rsp 
write: eax r12 r13 rbp rbx rdx rflags rsp 
--------------------------------------------------------------------------------
00070715: RLP; mov rdi, rbx ; mov esi, 1 ; call 0x73bdc
read: rbx rip rsp 
write: esi rdi rsp 
--------------------------------------------------------------------------------
00070726: RLP; lea rdx, [r12 - 1] ; mov rdi, rbx ; mov rcx, rbp ; mov rsi, rbp ; mov dword ptr [rbp], 0 ; call 0x71d5c
read: rbp rbx rip rsp 
write: rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
00070744: RLP; mov rdx, r14 ; mov rdi, rbx ; mov rsi, r13 ; call 0x525dc
read: r13 r14 rbx rip rsp 
write: rdi rdx rsi rsp 
--------------------------------------------------------------------------------
00070756: RLP; mov rdx, qword ptr [rsp + 0x1f0] ; add rbx, 0xf0 ; cmp qword ptr [rdx + 0x30], rbx ; je 0x7078c
read: rbx rflags 
write: rbx rdx rflags 
--------------------------------------------------------------------------------
000707e4: RLP; mov rdi, rsp ; mov esi, 1 ; call 0x73bdc
read: rip rsp 
write: esi rdi rsp 
--------------------------------------------------------------------------------
000707f5: RLP; mov rsi, r13 ; mov rdi, rsp ; xor ecx, ecx ; xor edx, edx ; call 0x71d5c
read: ecx edx r13 rip rsp 
write: ecx edx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00070808: RLP; mov rdx, r12 ; mov rsi, rbp ; mov rdi, rsp ; xor ecx, ecx ; call 0x60fdc
read: ecx r12 rbp rip rsp 
write: ecx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0007081c: RLP; add rsp, 0x248 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rsp 
write: r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000708bb: RLP; add rsp, 0xd8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000709bb: RLP; test rax, rax ; mov r15, rax ; je 0x70b1b
read: rax rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
000709f3: RLP; mov rax, qword ptr [r13] ; mov rdi, qword ptr [rax + 0x40] ; call 0x1f46c
read: rip rsp 
write: rax rdi rsp 
--------------------------------------------------------------------------------
00070a04: RLP; mov rcx, qword ptr [rsp] ; mov rax, qword ptr [r13] ; mov rdx, r12 ; add rcx, r15 ; mov qword ptr [rax + 0x40], r15 ; mov qword ptr [rax + 0x50], rcx ; mov r8, qword ptr [r13] ; mov ecx, 0x190 ; sub rdx, qword ptr [r8 + 0x10] ; mov rdi, qword ptr [r8 + 0x40] ; sar rdx, 2 ; jmp 0x7095f
read: r12 r15 rcx rdx 
write: ecx r8 rax rcx rdi rdx rflags 
--------------------------------------------------------------------------------
00070a58: RLP; mov r8, qword ptr [r13] ; mov rdx, r12 ; mov rcx, qword ptr [rsp] ; sub rdx, qword ptr [r8 + 0x10] ; mov rdi, qword ptr [r8 + 0x40] ; sar rdx, 2 ; jmp 0x7095f
read: r12 rdx 
write: r8 rcx rdi rdx rflags 
--------------------------------------------------------------------------------
00070ac1: RLP; mov rdi, qword ptr [r13] ; mov rdx, r12 ; mov rsi, qword ptr [rdi + 0x10] ; mov rdi, qword ptr [rdi + 0x40] ; sub rdx, rsi ; lea rdi, [rdi + r15*4] ; sar rdx, 2 ; jmp 0x70a4f
read: r12 rdx rsi 
write: rdi rdx rflags rsi 
--------------------------------------------------------------------------------
00070aff: RLP; mov r9, qword ptr [rsp + 8] ; mov rdx, rbp ; mov rdi, rax ; mov rsi, r9 ; call 0x965cc
read: r9 rax rbp rip rsp 
write: r9 rdi rdx rsi rsp 
--------------------------------------------------------------------------------
00070b16: RLP; jmp 0x709f3
read: 
write: 
--------------------------------------------------------------------------------
00070c77: RLP; mov rax, qword ptr [rbx + 0xa0] ; mov r8d, dword ptr [rbx + 0x74] ; mov ecx, dword ptr [rsp + 0xc] ; mov rdx, qword ptr [rsp] ; jmp 0x70c16
read: 
write: ecx r8d rax rdx 
--------------------------------------------------------------------------------
00070d4f: RLP; test eax, eax ; je 0x70e25
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00070d92: RLP; test rax, rax ; mov r15, rax ; je 0x70d57
read: rax rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
00070dbd: RLP; mov rax, qword ptr [rbp + 0xa0] ; mov rdi, qword ptr [rax + 0x10] ; call 0x1f46c
read: rip rsp 
write: rax rdi rsp 
--------------------------------------------------------------------------------
00070dd1: RLP; mov rcx, qword ptr [rsp + 8] ; mov rdx, qword ptr [rbp + 0xa0] ; add rcx, r14 ; mov qword ptr [rdx + 0x10], r15 ; mov qword ptr [rdx], r14 ; mov qword ptr [rdx + 8], rcx ; mov qword ptr [rdx + 0x48], r14 ; mov rax, rdx ; mov rdx, r14 ; jmp 0x70cf9
read: r14 r15 rcx rdx 
write: rax rcx rdx rflags 
--------------------------------------------------------------------------------
00070e0a: RLP; test rax, rax ; je 0x70d57
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00070e90: RLP; mov qword ptr [rbx + 0x48], 0 ; mov rdi, rbx ; call 0x78cfc
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
00070ea4: RLP; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
00070ecf: RLP; mov rdx, qword ptr [rbx + 0xa0] ; mov qword ptr [rdx + 0x38], 0 ; mov qword ptr [rdx + 0x30], 0 ; jmp 0x70e5a
read: 
write: rdx 
--------------------------------------------------------------------------------
00070f02: RLP; mov edx, 0xffffffff ; cmp eax, edx ; je 0x70f1e
read: eax edx rflags 
write: edx rflags 
--------------------------------------------------------------------------------
00070f53: RLP; mov rax, qword ptr [rbx + 0xd8] ; mov esi, ebp ; mov rdi, rbx ; call qword ptr [rax + 0x18]
read: ebp rbx rsp 
write: esi rax rdi rsp 
--------------------------------------------------------------------------------
00070f66: RLP; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00071029: RLP; cmp eax, -1 ; je 0x7105c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0007108b: RLP; lea r8, [r13 + r15*4] ; mov qword ptr [r14 + 0x20], rax ; jmp 0x7100e
read: rax 
write: r8 
--------------------------------------------------------------------------------
000710cf: RLP; cmp eax, -1 ; jne 0x710b2
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000710f7: RLP; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
00071127: RLP; cmp rax, -1 ; je 0x7114d
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00071148: RLP; mov eax, 1 ; pop rbx ; ret
read: rsp 
write: eax rbx rsp 
--------------------------------------------------------------------------------
000711cf: RLP; cmp eax, -1 ; je 0x711a0
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00071233: RLP; mov rax, qword ptr [rbx + 0xa0] ; mov qword ptr [rax + 0x40], 0 ; mov qword ptr [rax + 0x50], 0 ; mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
read: rsp 
write: rax rbx rsp 
--------------------------------------------------------------------------------
000712d1: RLP; test eax, eax ; je 0x7138f
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000712fa: RLP; cmp eax, 1 ; jne 0x712dc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0007131e: RLP; test dword ptr [rbx], 0x800 ; je 0x7128c
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
00071336: RLP; cmp eax, -1 ; jne 0x7128c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0007138f: RLP; mov rax, qword ptr [rbx + 0xd8] ; mov rdi, rbx ; call qword ptr [rax + 0x28]
read: rbx rsp 
write: rax rdi rsp 
--------------------------------------------------------------------------------
000713a0: RLP; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
00071411: RLP; test eax, eax ; je 0x714d7
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0007143d: RLP; cmp eax, 1 ; jne 0x7141c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00071461: RLP; test dword ptr [rbx], 0x800 ; je 0x713cc
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
00071479: RLP; cmp eax, -1 ; jne 0x713cc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000714d7: RLP; mov rax, qword ptr [rbx + 0xd8] ; mov rdi, rbx ; call qword ptr [rax + 0x20]
read: rbx rsp 
write: rax rdi rsp 
--------------------------------------------------------------------------------
000714e8: RLP; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
0007157d: RLP; cmp eax, -1 ; jne 0x7150c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000715a3: RLP; mov r12, rax ; mov rax, qword ptr [rbx + 0xa0] ; lea rdx, [r14*4] ; add qword ptr [rax], rdx ; mov rax, r14 ; jmp 0x71569
read: r14 rax rdx 
write: r12 rax rdx rflags 
--------------------------------------------------------------------------------
000715fe: RLP; cmp eax, -1 ; je 0x71606
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0007165f: RLP; jmp 0x7163e
read: 
write: 
--------------------------------------------------------------------------------
00071725: RLP; mov rsi, qword ptr [rsp + 8] ; mov eax, dword ptr [rsi] ; jmp 0x716d3
read: 
write: eax rsi 
--------------------------------------------------------------------------------
00071873: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000719a3: RLP; test rax, rax ; mov r15, rax ; je 0x71966
read: rax rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
000719c7: RLP; mov rdi, r14 ; call qword ptr [rbp + 0xe8]
read: r14 rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000719d4: RLP; mov rax, qword ptr [rbp + 0xa0] ; mov rcx, qword ptr [rsp + 8] ; mov qword ptr [rax + 0x30], 0 ; sub rcx, rbx ; lea rdi, [r15 + rbx*4] ; xor esi, esi ; mov rdx, rcx ; call 0x9640c
read: esi rbx rcx rip rsp 
write: esi rax rcx rdi rdx rflags rsp 
--------------------------------------------------------------------------------
000719fd: RLP; mov rdx, qword ptr [rsp] ; mov ecx, 1 ; mov rsi, r15 ; mov rdi, rbp ; add rdx, r15 ; call 0x70bec
read: r15 rbp rdx rip rsp 
write: ecx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00071a18: RLP; mov rcx, qword ptr [rbp + 0xa0] ; mov rax, qword ptr [rcx + 0x10] ; mov qword ptr [rcx + 0x18], r15 ; sub rax, r14 ; and rax, 0xfffffffffffffffc ; add rax, r15 ; mov qword ptr [rcx + 0x10], rax ; mov rax, qword ptr [rcx] ; sub rax, r14 ; and rax, 0xfffffffffffffffc ; add rax, r15 ; mov qword ptr [rcx], rax ; mov rax, qword ptr [rcx + 8] ; sub rax, r14 ; and rax, 0xfffffffffffffffc
read: r14 r15 rax 
write: rax rcx rflags 
--------------------------------------------------------------------------------
00071b15: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00071b44: RLP; mov rax, qword ptr [rbx + 0xa0] ; mov rdi, rbx ; mov qword ptr [rax + 0x30], 0 ; xor esi, esi ; call 0x70e3c
read: esi rbx rip rsp 
write: esi rax rdi rflags rsp 
--------------------------------------------------------------------------------
00071b61: RLP; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
00071bde: RLP; test rax, rax ; mov r10, rax ; je 0x71ba0
read: rax rflags 
write: r10 rflags 
--------------------------------------------------------------------------------
00071c12: RLP; mov rdi, rbp ; call qword ptr [r13 + 0xe8]
read: rbp rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
00071c20: RLP; mov r10, qword ptr [rsp + 0x18] ; mov qword ptr [r14 + 0x30], 0 ; mov rdx, qword ptr [rsp + 0x10] ; sub r15, qword ptr [rsp] ; mov rsi, r10 ; mov ecx, 1 ; mov rdi, r13 ; mov qword ptr [rsp], r10 ; add rdx, r10 ; call 0x70bec
read: r10 r13 r15 rdx rip rsp 
write: ecx r10 r15 rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00071c51: RLP; mov eax, dword ptr [rsp + 0xc] ; sar r15, 2 ; mov r10, qword ptr [rsp] ; test eax, eax ; jne 0x71cdc
read: eax r15 rflags 
write: eax r10 r15 rflags 
--------------------------------------------------------------------------------
00071ccd: RLP; jmp 0x71ba5
read: 
write: 
--------------------------------------------------------------------------------
00071d84: RLP; lea r13, [rbx + rax*4] ; xor ecx, ecx ; mov rdx, r13 ; mov rsi, rbx ; mov rdi, rbp ; call 0x70bec
read: ecx r13 rbp rbx rip rsp 
write: ecx r13 rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00071d9c: RLP; mov rax, qword ptr [rbp + 0xa0] ; test r12, r12 ; mov qword ptr [rax + 0x18], rbx ; mov qword ptr [rax + 0x10], rbx ; mov qword ptr [rax], rbx ; je 0x71dfc
read: r12 rbx rflags 
write: rax rflags 
--------------------------------------------------------------------------------
00071e75: RLP; mov r14, rax ; cmp r13d, 1 ; je 0x72014
read: r13d rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
00071edd: RLP; test r12b, 1 ; mov r14, rax ; je 0x71f44
read: r12b rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
00071fb5: RLP; mov r12d, 1 ; mov r14, rax ; jmp 0x71ee6
read: rax 
write: r12d r14 
--------------------------------------------------------------------------------
00071fdd: RLP; test eax, eax ; je 0x71eae
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00072048: RLP; test eax, eax ; je 0x71f1c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0007207f: RLP; test eax, eax ; jle 0x720c4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00072116: RLP; cmp eax, 2 ; je 0x72129
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00072225: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rbp + 0x88] ; mov rdi, qword ptr [rip + 0x2f84d2] ; mov qword ptr [rdx + 8], r8 ; add dword ptr [rdx + 4], 1 ; mov edx, dword ptr [rdi] ; and edx, 0x288 ; cmp edx, 0x280 ; je 0x72659
read: edx r8 rflags rsp 
write: edx rdi rdx rflags rsp 
--------------------------------------------------------------------------------
00072279: RLP; mov rax, qword ptr [rbx + 0xa0] ; mov r15, qword ptr [rbx + 0x10] ; xor ebp, ebp ; mov rdx, qword ptr [rax + 0x30] ; mov qword ptr [rax], rdx ; mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 8], rdx ; mov qword ptr [rax + 0x28], rdx ; mov qword ptr [rax + 0x20], rdx ; mov qword ptr [rax + 0x18], rdx ; nop dword ptr [rax] ; mov rdx, qword ptr [rbx + 0x40] ; mov rax, qword ptr [rbx + 0xd8] ; mov rsi, r15 ; mov rdi, rbx
read: ebp r15 rbx rdx 
write: ebp r15 rax rdi rdx rflags rsi 
--------------------------------------------------------------------------------
000722bf: RLP; test rax, rax ; jle 0x723cc
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00072339: RLP; mov rsi, qword ptr [rsp + 0x28] ; xor ebp, ebp ; mov qword ptr [rbx + 8], rsi ; mov rdx, qword ptr [rbx + 0xa0] ; mov rcx, qword ptr [rdx + 0x30] ; cmp qword ptr [rdx + 8], rcx ; jne 0x725a4
read: ebp rcx rflags rsi 
write: ebp rcx rdx rflags rsi 
--------------------------------------------------------------------------------
0007239d: RLP; mov qword ptr [rbx + 0x10], r15 ; mov qword ptr [rbx + 8], r15 ; jmp 0x722a4
read: r15 
write: 
--------------------------------------------------------------------------------
00072417: RLP; mov r15, qword ptr [rbx + 0x10] ; mov r8, qword ptr [rsp + 0x18] ; mov rax, qword ptr [rbx + 0x18] ; sub r15, r8 ; mov qword ptr [rbx + 8], rax ; mov qword ptr [rbx + 0x10], r15 ; jmp 0x722a4
read: r15 r8 rax 
write: r15 r8 rax rflags 
--------------------------------------------------------------------------------
0007244e: RLP; jmp 0x723b8
read: 
write: 
--------------------------------------------------------------------------------
000724f9: RLP; mov rdx, qword ptr [rbx + 8] ; mov rsi, qword ptr [rsp + 0x30] ; mov qword ptr [rbx + 0x18], rdx ; mov rdx, qword ptr [rbx + 0xa0] ; mov qword ptr [rbx + 8], rsi ; mov rcx, qword ptr [rdx] ; cmp rcx, qword ptr [rdx + 8] ; jae 0x72474
read: rcx rdx rflags rsi 
write: rcx rdx rflags rsi 
--------------------------------------------------------------------------------
0007256c: RLP; add rsp, 0x80 ; jmp 0x72263
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000725ce: RLP; and dword ptr [rbx], 0xfffffeff ; mov rdi, rbx ; call 0x7109c
read: rbx rip rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
000725e0: RLP; jmp 0x721bb
read: 
write: 
--------------------------------------------------------------------------------
000725fe: RLP; and dword ptr [rbx], 0xfffffeff ; mov rdi, rbx ; call 0x797dc
read: rbx rip rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
00072610: RLP; mov rax, qword ptr [rbx + 0x38] ; mov qword ptr [rbx + 0x10], rax ; mov qword ptr [rbx + 8], rax ; mov qword ptr [rbx + 0x18], rax ; jmp 0x7219d
read: rax 
write: rax 
--------------------------------------------------------------------------------
00072639: RLP; mov rax, qword ptr [rbx + 0x38] ; mov rdx, rax ; add rdx, qword ptr [rbx + 0x10] ; mov qword ptr [rbx + 0x18], rax ; sub rdx, qword ptr [rbx + 8] ; mov qword ptr [rbx + 8], rax ; mov qword ptr [rbx + 0x10], rdx ; jmp 0x72194
read: rax rdx 
write: rax rdx rflags 
--------------------------------------------------------------------------------
0007266c: RLP; jmp 0x72256
read: 
write: 
--------------------------------------------------------------------------------
000726c4: RLP; mov rdx, qword ptr [rbx + 0xa0] ; mov r8, qword ptr [rsp + 0x18] ; mov rdi, r12 ; lea rcx, [rdx + 8] ; mov r9, qword ptr [rdx + 8] ; lea rsi, [rdx + 0x58] ; add rbp, r8 ; mov r8, r14 ; mov qword ptr [rsp + 8], rcx ; mov rdx, qword ptr [rdx + 0x38] ; mov rcx, rax ; mov qword ptr [rsp], rdx ; mov rdx, r13 ; call qword ptr [r12 + 0x18]
read: r12 r13 r14 r8 rax rbp rcx rdx rsp 
write: r8 r9 rbp rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00072701: RLP; test rbp, rbp ; je 0x72339
read: rbp rflags 
write: rflags 
--------------------------------------------------------------------------------
0007279f: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
0007280e: RLP; mov edx, eax ; mov eax, 0xffffffff ; test edx, edx ; je 0x72b84
read: eax edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
00072882: RLP; test eax, eax ; je 0x7291c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00072898: RLP; mov rax, qword ptr [rbx + 0xd8] ; mov rsi, r12 ; mov edx, ebp ; mov rdi, rbx ; call qword ptr [rax + 0x80]
read: ebp r12 rbx rsp 
write: edx rax rdi rsi rsp 
--------------------------------------------------------------------------------
000728b1: RLP; mov rsi, rax ; mov rax, -1 ; cmp rsi, rax ; je 0x7281d
read: rax rflags rsi 
write: rax rflags rsi 
--------------------------------------------------------------------------------
000729c4: RLP; test rax, rax ; mov r14, rax ; js 0x72b74
read: rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
00072a31: RLP; test eax, eax ; jne 0x7288c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00072a66: RLP; test eax, eax ; jle 0x72d5c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00072b1d: RLP; test bpl, bpl ; jne 0x72ca4
read: bpl rflags 
write: rflags 
--------------------------------------------------------------------------------
00072bb9: RLP; test rax, rax ; mov r14, rax ; js 0x72b74
read: rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
00072bf1: RLP; mov r13, rax ; cmp r15, r13 ; jle 0x729dc
read: r13 r15 rax rflags 
write: r13 rflags 
--------------------------------------------------------------------------------
00072c2e: RLP; and dword ptr [rbx], 0xfffffeff ; mov rdi, rbx ; call 0x797dc
read: rbx rip rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
00072c40: RLP; mov rax, qword ptr [rbx + 0x38] ; mov qword ptr [rbx + 0x28], rax ; mov qword ptr [rbx + 0x20], rax ; mov qword ptr [rbx + 0x30], rax ; mov qword ptr [rbx + 0x18], rax ; mov qword ptr [rbx + 8], rax ; mov qword ptr [rbx + 0x10], rax ; mov rax, qword ptr [rbx + 0xa0] ; mov rdx, qword ptr [rax + 0x30] ; mov qword ptr [rax + 0x20], rdx ; mov qword ptr [rax + 0x18], rdx ; mov qword ptr [rax + 0x28], rdx ; mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax], rdx ; mov qword ptr [rax + 8], rdx
read: rax rdx 
write: rax rdx 
--------------------------------------------------------------------------------
00072d07: RLP; cmp rax, -1 ; je 0x72b74
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00072d94: RLP; mov rdx, qword ptr [rbx + 0x18] ; cdqe ; lea rcx, [rdx + rax] ; sub rdx, qword ptr [rbx + 0x10] ; mov qword ptr [rbx + 8], rcx ; mov rcx, qword ptr [rbx + 0xa0] ; add rax, rdx ; mov rsi, qword ptr [rcx] ; add r12, rax ; mov qword ptr [rcx + 8], rsi ; jmp 0x72a94
read: eax r12 rax rcx rdx rsi 
write: r12 rax rcx rdx rflags rsi 
--------------------------------------------------------------------------------
00072e19: RLP; test eax, eax ; jne 0x7288c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00072e46: RLP; mov rax, r12 ; jmp 0x7281d
read: r12 
write: rax 
--------------------------------------------------------------------------------
00072e6f: RLP; cmp rax, -1 ; je 0x72b74
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00072eb8: RLP; movsxd rbp, eax ; mov rax, qword ptr [rbx + 0x18] ; sub rax, qword ptr [rbx + 0x10] ; add rbp, rax ; jmp 0x72b46
read: eax rax rbp 
write: rax rbp rflags 
--------------------------------------------------------------------------------
00072ef2: RLP; mov rdx, qword ptr [rsp + 0x18] ; mov r13, rax ; mov qword ptr [rsp + 0x28], rax ; lea rsi, [rsp + 0x20] ; mov r9, r13 ; lea r8, [rsp + 0x30] ; mov rdi, r14 ; mov qword ptr [rsp + 0x30], rdx ; mov rax, qword ptr [r15 + 0x60] ; lea rcx, [rdx + rbp] ; add rbp, r13 ; mov qword ptr [rsp], rbp ; mov qword ptr [rsp + 0x20], rax ; lea rax, [rsp + 0x28] ; mov qword ptr [rsp + 8], rax
read: r13 r14 rax rbp rdx 
write: r13 r8 r9 rax rbp rcx rdi rdx rflags rsi 
--------------------------------------------------------------------------------
00072f3a: RLP; test eax, eax ; jne 0x72f4b
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00072ff2: RLP; mov rax, qword ptr [rsp + 0x18] ; mov qword ptr [rbx + 8], rax ; mov rax, qword ptr [rbx + 0xa0] ; mov rdx, qword ptr [rax] ; cmp rdx, qword ptr [rax + 8] ; jb 0x7302c
read: rax rdx rflags 
write: rax rdx rflags 
--------------------------------------------------------------------------------
00073045: RLP; mov edx, eax ; mov eax, 0xffffffff ; cmp edx, eax ; je 0x7302e
read: eax edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
00073076: RLP; and dword ptr [rbx], 0xfffffeff ; mov rdi, rbx ; call 0x7109c
read: rbx rip rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
00073088: RLP; mov rax, qword ptr [rbx + 0xa0] ; jmp 0x72fac
read: 
write: rax 
--------------------------------------------------------------------------------
000730bd: RLP; mov edx, 0xffffffff ; cmp eax, edx ; je 0x730e0
read: eax edx rflags 
write: edx rflags 
--------------------------------------------------------------------------------
000730de: RLP; mov edx, eax ; mov eax, edx ; pop rbx ; ret
read: eax edx rsp 
write: eax edx rbx rsp 
--------------------------------------------------------------------------------
00073172: RLP; mov rsi, qword ptr [rbx + 0x20] ; mov rdx, qword ptr [rbx + 0x28] ; mov rdi, rbx ; mov r14d, eax ; sub rdx, rsi ; call 0x7875c
read: eax rbx rdx rip rsi rsp 
write: r14d rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0007318c: RLP; cmp eax, -1 ; je 0x731f4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0007322e: RLP; cmp eax, -1 ; je 0x731f4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0007334e: RLP; cmp eax, -1 ; sete al ; test al, al ; je 0x733c4
read: al eax rflags 
write: al rflags 
--------------------------------------------------------------------------------
000733bc: RLP; jmp 0x73277
read: 
write: 
--------------------------------------------------------------------------------
000733f4: RLP; cmp eax, -1 ; sete al ; test al, al ; jne 0x73358
read: al eax rflags 
write: al rflags 
--------------------------------------------------------------------------------
00073433: RLP; cmp eax, -1 ; sete al ; jmp 0x73354
read: eax rflags 
write: al rflags 
--------------------------------------------------------------------------------
0007345b: RLP; jmp 0x73277
read: 
write: 
--------------------------------------------------------------------------------
0007348d: RLP; mov rdx, qword ptr [rbx + 0xa0] ; cmp qword ptr [rbx + 0x20], 0 ; mov rcx, qword ptr [rdx + 0x30] ; mov qword ptr [rdx + 0x10], rcx ; mov qword ptr [rdx], rcx ; mov qword ptr [rdx + 8], rcx ; je 0x734d7
read: rcx rflags 
write: rcx rdx rflags 
--------------------------------------------------------------------------------
000734cc: RLP; cmp eax, -1 ; sete al ; jmp 0x733fa
read: eax rflags 
write: al rflags 
--------------------------------------------------------------------------------
000734e3: RLP; mov rax, qword ptr [rbx + 0x38] ; mov rdx, qword ptr [rbx + 0xa0] ; mov qword ptr [rbx + 8], rax ; mov qword ptr [rbx + 0x10], rax ; mov rcx, qword ptr [rdx] ; jmp 0x734aa
read: rax 
write: rax rcx rdx 
--------------------------------------------------------------------------------
0007353c: RLP; test eax, eax ; setne dl ; test dl, dl ; mov eax, 0xffffffff ; jne 0x7356e
read: dl eax rflags 
write: dl eax rflags 
--------------------------------------------------------------------------------
0007358f: RLP; test eax, eax ; jle 0x7361c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000735b9: RLP; cmp rax, -1 ; je 0x73604
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000735f3: RLP; test eax, eax ; setne dl ; jmp 0x73541
read: eax rflags 
write: dl rflags 
--------------------------------------------------------------------------------
0007364d: RLP; mov rsi, qword ptr [rbx + 0x18] ; cdqe ; lea rdx, [rsi + rax] ; sub rsi, qword ptr [rbx + 0x10] ; mov qword ptr [rbx + 8], rdx ; add rsi, rax ; jmp 0x735a0
read: eax rax rdx rsi 
write: rax rdx rflags rsi 
--------------------------------------------------------------------------------
0007373a: RLP; mov rax, rbp ; sub rax, r13 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: r13 rax rbp rsp 
write: r12 r13 r14 r15 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00073769: RLP; sub r13, rax ; jmp 0x7370d
read: r13 rax 
write: r13 rflags 
--------------------------------------------------------------------------------
000737df: RLP; mov qword ptr [r13 + 0x20], rax ; jmp 0x73705
read: rax 
write: 
--------------------------------------------------------------------------------
000738b4: RLP; lea rdx, [rsp + 0x18] ; xor r8d, r8d ; mov rcx, r13 ; lea rsi, [rbx + 0x50] ; mov dword ptr [rsp + 8], 0 ; mov dword ptr [rsp], 0 ; lea r9, [rsp + 0x10] ; mov rdi, r12 ; call rbp
read: r12 r13 r8d rbp rsp 
write: r8d r9 rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000738e0: RLP; mov rdx, qword ptr [rsp + 0x18] ; cmp eax, 4 ; mov qword ptr [r14], rdx ; mov rdx, qword ptr [rsp + 0x58] ; mov rcx, qword ptr [rbx + 0x50] ; mov qword ptr [rdx], rcx ; je 0x73938
read: eax rcx rdx rflags 
write: rcx rdx rflags 
--------------------------------------------------------------------------------
000739a1: RLP; xor edx, edx ; xor r8d, r8d ; xor ecx, ecx ; lea rsi, [rbx + 0x98] ; mov dword ptr [rsp + 8], 0 ; mov dword ptr [rsp], 1 ; lea r9, [rsp + 0x18] ; mov rdi, r12 ; call rbp
read: ecx edx r12 r8d rbp rsp 
write: ecx edx r8d r9 rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000739cc: RLP; mov rdx, qword ptr [rbx + 0x98] ; cmp eax, 4 ; mov qword ptr [r13], rdx ; je 0x73a10
read: eax rdx rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
00073a90: RLP; lea rdx, [rsp + 0x18] ; xor r8d, r8d ; mov rcx, r13 ; lea rsi, [rbx + 0x98] ; mov dword ptr [rsp + 8], 0 ; mov dword ptr [rsp], 0 ; lea r9, [rsp + 0x10] ; mov rdi, r12 ; call rbp
read: r12 r13 r8d rbp rsp 
write: r8d r9 rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00073abf: RLP; mov rdx, qword ptr [rsp + 0x18] ; cmp eax, 4 ; mov qword ptr [r14], rdx ; mov rdx, qword ptr [rsp + 0x58] ; mov rcx, qword ptr [rbx + 0x98] ; mov qword ptr [rdx], rcx ; je 0x73b18
read: eax rcx rdx rflags 
write: rcx rdx rflags 
--------------------------------------------------------------------------------
00073b99: RLP; lea rdx, [rbp - 0x40] ; lea rsi, [rbx + 0x50] ; mov dword ptr [rsp + 8], 0 ; mov dword ptr [rsp], 0 ; lea r9, [rbp - 0x38] ; mov rcx, r15 ; mov rdi, r13 ; xor r8d, r8d ; call r12
read: r12 r13 r15 r8d rsp 
write: r8d r9 rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00073bc4: RLP; mov rax, qword ptr [rbp - 0x40] ; lea rsp, [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; sub rax, r14 ; pop r14 ; pop r15 ; pop rbp ; ret
read: r14 rax rsp 
write: r12 r13 r14 r15 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00073c4d: RLP; cmp qword ptr [rsp + 8], 1 ; jne 0x73d7e
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
00073e49: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rbx + 0x88] ; mov qword ptr [rdx + 8], r9 ; add dword ptr [rdx + 4], 1 ; cmp r8d, -1 ; je 0x73ee4
read: r8d r9 rflags rsp 
write: rdx rflags rsp 
--------------------------------------------------------------------------------
00073e74: RLP; mov edx, eax ; test dword ptr [rbx], 0x8000 ; mov eax, edx ; jne 0x73de4
read: eax edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
00073ec4: RLP; add rsp, 0x80 ; mov eax, edx ; pop rbx ; ret
read: edx rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
00073f67: RLP; mov rax, qword ptr [rbx + 0xa0] ; sub qword ptr [rax + 0x20], 4 ; jmp 0x73f2b
read: 
write: rax rflags 
--------------------------------------------------------------------------------
00073fb7: RLP; mov qword ptr [rbp], rax ; mov rax, qword ptr [rbx + 0xf0] ; mov rcx, qword ptr [rax] ; test rcx, rcx ; je 0x73ff6
read: rax rcx rflags 
write: rax rcx rflags 
--------------------------------------------------------------------------------
00074004: RLP; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0007402e: RLP; test rax, rax ; mov rbx, rax ; je 0x740ec
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
0007405b: RLP; test rax, rax ; mov rbp, rax ; je 0x740f4
read: rax rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
00074085: RLP; mov esi, 1 ; mov rdi, rbx ; call 0x73bdc
read: rbx rip rsp 
write: esi rdi rsp 
--------------------------------------------------------------------------------
00074096: RLP; mov rcx, rbp ; mov edx, 0x800 ; mov rsi, rbp ; mov rdi, rbx ; call 0x71d5c
read: rbp rbx rip rsp 
write: edx rcx rdi rsi rsp 
--------------------------------------------------------------------------------
000740ad: RLP; mov rax, qword ptr [rip + 0x2f4d80] ; and dword ptr [rbx + 0x74], 0xfffffff7 ; mov qword ptr [rbx + 0xf0], r13 ; mov qword ptr [rbx + 0xf8], r12 ; mov qword ptr [rbx + 0xe0], rax ; mov rax, qword ptr [rip + 0x2f4ec0] ; mov qword ptr [rbx + 0xe8], rax ; mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: r12 r13 rax rbx rsp 
write: r12 r13 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00074100: RLP; xor eax, eax ; jmp 0x740de
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
0007416a: RLP; add rsp, 0x80 ; mov eax, dword ptr [r8] ; mov rdx, qword ptr [r8 + 0x88] ; mov ecx, eax ; add dword ptr [rdx + 4], 1 ; mov qword ptr [rdx + 8], r9 ; and ecx, 0xffffffcf ; test ah, 0x80 ; mov dword ptr [r8], ecx ; jne 0x741dc
read: ah eax ecx r9 rflags rsp 
write: eax ecx rdx rflags rsp 
--------------------------------------------------------------------------------
000741c5: RLP; add rsp, 0x80 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0007425a: RLP; add rsp, 0x80 ; mov rdx, qword ptr [r8 + 0x88] ; mov ecx, dword ptr [r8] ; mov eax, dword ptr [rdx + 4] ; mov qword ptr [rdx + 8], r9 ; lea esi, [rax + 1] ; mov dword ptr [rdx + 4], esi ; mov esi, ecx ; shr esi, 4 ; and esi, 1 ; and ch, 0x80 ; jne 0x742d2
read: ch ecx esi r9 rflags rsp 
write: ch eax ecx esi rdx rflags rsp 
--------------------------------------------------------------------------------
000742bb: RLP; add rsp, 0x80 ; mov eax, esi ; ret
read: esi rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
0007435a: RLP; add rsp, 0x80 ; mov rdx, qword ptr [r8 + 0x88] ; mov ecx, dword ptr [r8] ; mov eax, dword ptr [rdx + 4] ; mov qword ptr [rdx + 8], r9 ; lea esi, [rax + 1] ; mov dword ptr [rdx + 4], esi ; mov esi, ecx ; shr esi, 5 ; and esi, 1 ; and ch, 0x80 ; jne 0x743d2
read: ch ecx esi r9 rflags rsp 
write: ch eax ecx esi rdx rflags rsp 
--------------------------------------------------------------------------------
000743bb: RLP; add rsp, 0x80 ; mov eax, esi ; ret
read: esi rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
00074484: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rbx + 0x88] ; mov qword ptr [rdx + 8], r9 ; add dword ptr [rdx + 4], 1 ; mov rdx, qword ptr [rbx + 0x28] ; cmp rdx, qword ptr [rbx + 0x30] ; jae 0x74502
read: r9 rdx rflags rsp 
write: rdx rflags rsp 
--------------------------------------------------------------------------------
000744f7: RLP; add rsp, 0x80 ; mov eax, edx ; pop rbx ; ret
read: edx rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
00074512: RLP; mov edx, eax ; jmp 0x744b3
read: eax 
write: edx 
--------------------------------------------------------------------------------
00074568: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
000745f0: RLP; add rsp, 0x80 ; mov r8, qword ptr [rbx + 0x88] ; mov qword ptr [r8 + 8], rdx ; add dword ptr [r8 + 4], 1 ; test rbp, rbp ; mov r13d, dword ptr [rbx + 0x70] ; sete r14b ; je 0x7473c
read: rbp rdx rflags rsp 
write: r13d r14b r8 rflags rsp 
--------------------------------------------------------------------------------
00074628: RLP; lea rax, [rip + 0x2f406d] ; mov qword ptr [rbx + 0xd8], rax ; mov rax, qword ptr [rbx + 0xa0] ; test rax, rax ; je 0x74650
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
00074667: RLP; test rax, rax ; je 0x747cc
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0007467c: RLP; and dword ptr [rbx + 0x74], 0xffffffdf ; test rax, rax ; mov r12, rax ; je 0x747d0
read: rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
000746b7: RLP; mov edi, dword ptr [r12 + 0x70] ; call 0xd711c
read: rip rsp 
write: edi rsp 
--------------------------------------------------------------------------------
000746c5: RLP; mov dword ptr [r12 + 0x70], r13d ; test r14b, r14b ; jne 0x74804
read: r13d r14b rflags 
write: rflags 
--------------------------------------------------------------------------------
0007471a: RLP; add rsp, 0x80 ; mov rax, r12 ; nop dword ptr [rax + rax] ; add rsp, 0x90 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: r12 rsp 
write: r12 r13 r14 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00074753: RLP; test rax, rax ; mov rbp, rax ; je 0x74618
read: rax rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
00074798: RLP; mov byte ptr [rax], 0 ; mov rdx, rsp ; mov rsi, rbp ; mov edi, 1 ; call 0xd643c
read: rbp rip rsp 
write: edi rdx rsi rsp 
--------------------------------------------------------------------------------
000747af: RLP; test eax, eax ; jns 0x74618
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000747c5: RLP; jmp 0x74618
read: 
write: 
--------------------------------------------------------------------------------
000747e2: RLP; xor r12d, r12d ; jmp 0x746ca
read: r12d 
write: r12d rflags 
--------------------------------------------------------------------------------
00074810: RLP; jmp 0x746d3
read: 
write: 
--------------------------------------------------------------------------------
00074867: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
000748db: RLP; add rsp, 0x80 ; mov r8, qword ptr [rbx + 0x88] ; mov qword ptr [r8 + 8], rbp ; add dword ptr [r8 + 4], 1 ; mov ecx, 3 ; mov rsi, r10 ; mov rdi, rbx ; call 0x6e6ac
read: r10 rbp rbx rip rsp 
write: ecx r8 rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00074906: RLP; xor edx, edx ; cmp rax, -1 ; sete dl ; neg edx ; test dword ptr [rbx], 0x8000 ; jne 0x7495c
read: edx rax rflags 
write: dl edx rflags 
--------------------------------------------------------------------------------
00074955: RLP; add rsp, 0x80 ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
read: edx rsp 
write: eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000749b7: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
00074a21: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rbx + 0x88] ; mov qword ptr [rdx + 8], r8 ; add dword ptr [rdx + 4], 1 ; mov rax, qword ptr [rbx + 8] ; cmp rax, qword ptr [rbx + 0x10] ; jae 0x74a9b
read: r8 rax rflags rsp 
write: rax rdx rflags rsp 
--------------------------------------------------------------------------------
00074a90: RLP; add rsp, 0x80 ; mov eax, edx ; pop rbx ; ret
read: edx rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
00074aa7: RLP; mov edx, eax ; jmp 0x74a4c
read: eax 
write: edx 
--------------------------------------------------------------------------------
00074afd: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
00074b6c: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rbx + 0x88] ; mov rdi, qword ptr [rip + 0x2f5b93] ; mov qword ptr [rdx + 8], r8 ; add dword ptr [rdx + 4], 1 ; mov rax, qword ptr [rdi + 8] ; cmp rax, qword ptr [rdi + 0x10] ; jae 0x74bf9
read: r8 rax rflags rsp 
write: rax rdi rdx rflags rsp 
--------------------------------------------------------------------------------
00074be2: RLP; add rsp, 0x80 ; mov eax, edx ; pop rbx ; ret
read: edx rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
00074c02: RLP; mov edx, eax ; jmp 0x74b9e
read: eax 
write: edx 
--------------------------------------------------------------------------------
00074c58: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
00074cb7: RLP; sub qword ptr [rbx + 0x28], 1 ; jmp 0x74c81
read: 
write: rflags 
--------------------------------------------------------------------------------
00074cf8: RLP; mov qword ptr [rbp], rax ; mov rax, qword ptr [rbx + 0xf0] ; mov rdx, qword ptr [rax] ; test rdx, rdx ; je 0x74d31
read: rax rdx rflags 
write: rax rdx rflags 
--------------------------------------------------------------------------------
00074d3f: RLP; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00074d6e: RLP; test rax, rax ; mov rbx, rax ; je 0x74e14
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
00074d9b: RLP; test rax, rax ; mov rbp, rax ; je 0x74e1c
read: rax rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
00074db1: RLP; lea rax, [rip + 0x2f35e4] ; mov rcx, rbp ; mov edx, 0x2000 ; mov rsi, rbp ; mov rdi, rbx ; mov qword ptr [rbx + 0xd8], rax ; call 0x7aedc
read: rax rbp rbx rip rsp 
write: edx rax rcx rdi rsi rsp 
--------------------------------------------------------------------------------
00074dd6: RLP; mov rax, qword ptr [rip + 0x2f4057] ; and dword ptr [rbx], 0xfffffffe ; mov qword ptr [rbx + 0xf0], r13 ; mov qword ptr [rbx + 0xf8], r12 ; mov qword ptr [rbx + 0xe0], rax ; mov rax, qword ptr [rip + 0x2f4198] ; mov qword ptr [rbx + 0xe8], rax ; mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: r12 r13 rax rbx rsp 
write: r12 r13 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00074e28: RLP; xor eax, eax ; jmp 0x74e06
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
00074e3d: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00074ea4: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rbx + 0x88] ; mov qword ptr [rdx + 8], r9 ; add dword ptr [rdx + 4], 1 ; mov rdx, qword ptr [rbx + 0x28] ; cmp rdx, qword ptr [rbx + 0x30] ; jae 0x74f22
read: r9 rdx rflags rsp 
write: rdx rflags rsp 
--------------------------------------------------------------------------------
00074f17: RLP; add rsp, 0x80 ; mov eax, edx ; pop rbx ; ret
read: edx rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
00074f32: RLP; mov edx, eax ; jmp 0x74ed3
read: eax 
write: edx 
--------------------------------------------------------------------------------
00074f88: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
00074ff1: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rbx + 0x88] ; mov qword ptr [rdx + 8], r8 ; add dword ptr [rdx + 4], 1 ; mov ecx, 3 ; xor edx, edx ; xor esi, esi ; mov rdi, rbx ; call 0x6e6ac
read: edx esi r8 rbx rip rsp 
write: ecx edx esi rdi rdx rflags rsp 
--------------------------------------------------------------------------------
0007501c: RLP; mov eax, dword ptr [rbx] ; mov edx, eax ; and edx, 0xffffffcf ; test ah, 0x80 ; mov dword ptr [rbx], edx ; jne 0x7506d
read: ah eax edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
00075066: RLP; add rsp, 0x80 ; pop rbx ; ret
read: rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
000750c1: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
000750f2: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00075116: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00075146: RLP; test rax, rax ; mov rbx, rax ; je 0x7529c
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
00075179: RLP; lea rax, [rip + 0x2f35dc] ; mov rcx, rbx ; mov edx, 0x64 ; mov rsi, rbx ; mov rdi, rsp ; mov qword ptr [rsp + 0xd8], rax ; call 0x7aedc
read: rax rbx rip rsp 
write: edx rax rcx rdi rsi rsp 
--------------------------------------------------------------------------------
0007519f: RLP; mov rax, qword ptr [rip + 0x2f3c8e] ; mov rdx, r14 ; mov rsi, r13 ; mov rdi, rsp ; and dword ptr [rsp], 0xfffffffe ; mov qword ptr [rsp + 0xe0], rax ; mov rax, qword ptr [rip + 0x2f3dd2] ; mov qword ptr [rsp + 0xe8], rax ; call 0x4797c
read: r13 r14 rax rip rsp 
write: rax rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000751d3: RLP; test eax, eax ; mov ebp, eax ; js 0x75284
read: eax rflags 
write: ebp rflags 
--------------------------------------------------------------------------------
0007520f: RLP; mov rdx, rax ; mov qword ptr [r12], rax ; test rdx, rdx ; je 0x75275
read: rax rdx rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
00075240: RLP; test rax, rax ; mov qword ptr [r12], rax ; je 0x751fe
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00075260: RLP; mov rdi, r13 ; call 0x1f46c
read: r13 rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0007526c: RLP; mov rdx, qword ptr [r12] ; test rdx, rdx ; jne 0x7521b
read: rdx rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
00075292: RLP; mov eax, ebp ; jmp 0x75221
read: ebp 
write: eax 
--------------------------------------------------------------------------------
000752f6: RLP; lea rax, [rip + 0x2f339f] ; mov rdi, rsp ; mov qword ptr [rsp + 0xd8], rax ; call 0x77edc
read: rax rip rsp 
write: rax rdi rsp 
--------------------------------------------------------------------------------
00075311: RLP; mov esi, ebp ; mov rdi, rsp ; call 0x786dc
read: ebp rip rsp 
write: esi rdi rsp 
--------------------------------------------------------------------------------
0007531f: RLP; test rax, rax ; je 0x753d5
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00075348: RLP; cmp eax, -1 ; mov ebp, eax ; je 0x7538d
read: eax rflags 
write: ebp rflags 
--------------------------------------------------------------------------------
0007537d: RLP; cmp eax, -1 ; sete al ; test al, al ; mov eax, 0xffffffff ; cmovne ebp, eax ; mov rax, qword ptr [rsp + 0xd8] ; xor esi, esi ; mov rdi, rbx ; call qword ptr [rax + 0x10]
read: al eax ebp esi rbx rflags rsp 
write: al eax ebp esi rax rdi rflags rsp 
--------------------------------------------------------------------------------
000753a1: RLP; mov eax, ebp ; add rsp, 0x238 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: ebp rsp 
write: eax r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000753cd: RLP; cmp eax, -1 ; sete al ; jmp 0x75383
read: eax rflags 
write: al rflags 
--------------------------------------------------------------------------------
000753e1: RLP; mov eax, 0xffffffff ; jmp 0x753a3
read: 
write: eax 
--------------------------------------------------------------------------------
0007540c: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0007545c: RLP; mov qword ptr [rbx + 0x20], rbp ; mov qword ptr [rbx + 0x18], rbp ; mov qword ptr [rbx + 8], rbp ; mov qword ptr [rbx + 0x10], r12 ; mov qword ptr [rbx + 0x28], rbp ; mov qword ptr [rbx + 0x30], rbp ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; mov eax, r13d ; pop r13 ; ret
read: r12 r13d rbp rsp 
write: eax r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000754df: RLP; lea rax, [rip + 0x2f2f76] ; mov rdi, rbx ; mov rcx, rbp ; mov rdx, r14 ; mov rsi, rbp ; mov qword ptr [rsp + 0xd8], rax ; mov byte ptr [rbp], 0 ; call 0x7aedc
read: r14 rax rbp rbx rip rsp 
write: rax rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
00075507: RLP; mov rdi, rbx ; mov rdx, r13 ; mov rsi, r12 ; call 0x4797c
read: r12 r13 rbx rip rsp 
write: rdi rdx rsi rsp 
--------------------------------------------------------------------------------
00075519: RLP; add rbx, 0xf0 ; cmp qword ptr [rsp + 0x38], rbx ; je 0x7552f
read: rbx rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000755b0: RLP; mov rax, qword ptr [rbx + 0x10] ; add r13, qword ptr [rbx + 0x18] ; mov qword ptr [rbp + 0x20], rax ; mov rax, qword ptr [rbx + 0x20] ; mov qword ptr [rbp + 0x28], r13 ; sub rax, r13 ; cdqe ; add r13, rax ; mov rax, r12 ; mov qword ptr [rbp + 0x30], r13 ; mov qword ptr [rbx + 0x18], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13
read: eax r12 r13 rax rsp 
write: r12 r13 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000755f3: RLP; mov rdi, qword ptr [rbx + 0x18] ; jmp 0x755a1
read: 
write: rdi 
--------------------------------------------------------------------------------
00075608: RLP; mov qword ptr [rbp + 0x28], rax ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: r12 rax rsp 
write: r12 r13 r14 rax rbp rbx rsp 
--------------------------------------------------------------------------------
00075655: RLP; mov rax, qword ptr [rbx + 0x18] ; lea rdx, [rax + 1] ; mov qword ptr [rbx + 0x18], rdx ; mov byte ptr [rax], r12b ; mov rax, qword ptr [rbx + 0x10] ; mov rdx, qword ptr [rbx + 0x20] ; mov qword ptr [rbp + 0x20], rax ; mov rax, qword ptr [rbx + 0x18] ; sub rdx, rax ; mov qword ptr [rbp + 0x28], rax ; movsxd rdx, edx ; add rax, rdx ; mov qword ptr [rbp + 0x30], rax ; mov qword ptr [rbx + 0x18], rax ; mov eax, r12d
read: edx r12b r12d rax rdx 
write: eax rax rdx rflags 
--------------------------------------------------------------------------------
00075704: RLP; lea rax, [rip + 0x2f0c31] ; mov rcx, qword ptr [rbx + 0x18] ; mov rsi, qword ptr [rbx + 0x10] ; mov qword ptr [rsp + 0xd8], rax ; mov rax, qword ptr [rbx + 0x20] ; mov rdi, rcx ; sub rdi, rsi ; sub rax, rcx ; add edi, eax ; jne 0x757cc
read: eax edi rax rcx rdi rflags rsi 
write: edi rax rcx rdi rflags rsi 
--------------------------------------------------------------------------------
0007575d: RLP; mov rdx, qword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x30] ; sub rax, rdx ; cmp r15, rax ; jne 0x7581a
read: r15 rax rdx rflags 
write: rax rdx rflags 
--------------------------------------------------------------------------------
000757a7: RLP; mov rdx, qword ptr [rsp + 0x28] ; sub rdx, qword ptr [rsp + 0x30] ; add qword ptr [rbx + 0x18], rdx ; add rsp, 0xf8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rdx rsp 
write: r12 r13 r14 r15 rbp rbx rdx rflags rsp 
--------------------------------------------------------------------------------
000757ed: RLP; mov rcx, qword ptr [rbx + 0x18] ; mov edx, dword ptr [rbx + 0x20] ; sub edx, ecx ; jmp 0x7573c
read: ecx edx 
write: edx rcx rflags 
--------------------------------------------------------------------------------
000758eb: RLP; add rsp, 0xd8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0007590d: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0007597b: RLP; add rsp, 0x80 ; mov r8, qword ptr [rbx + 0x88] ; mov qword ptr [r8 + 8], rbp ; add dword ptr [r8 + 4], 1 ; mov ecx, 3 ; mov rsi, r10 ; mov rdi, rbx ; call 0x6e6ac
read: r10 rbp rbx rip rsp 
write: ecx r8 rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000759a6: RLP; xor edx, edx ; cmp rax, -1 ; sete dl ; neg edx ; test dword ptr [rbx], 0x8000 ; jne 0x759fc
read: edx rax rflags 
write: dl edx rflags 
--------------------------------------------------------------------------------
000759f5: RLP; add rsp, 0x80 ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
read: edx rsp 
write: eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00075a57: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
00075ac1: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rbx + 0x88] ; mov qword ptr [rdx + 8], r8 ; add dword ptr [rdx + 4], 1 ; xor ecx, ecx ; mov edx, 1 ; xor esi, esi ; mov rdi, rbx ; call 0x6e6ac
read: ecx esi r8 rbx rip rsp 
write: ecx edx esi rdi rdx rflags rsp 
--------------------------------------------------------------------------------
00075aec: RLP; mov rdx, rax ; mov eax, dword ptr [rbx] ; test ah, 1 ; je 0x75b0a
read: ah rax rflags 
write: eax rdx rflags 
--------------------------------------------------------------------------------
00075b7b: RLP; add rsp, 0x80 ; jmp 0x75b1c
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00075bee: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
00075c80: RLP; add rsp, 0x80 ; mov r8, qword ptr [rbx + 0x88] ; mov qword ptr [r8 + 8], rdx ; add dword ptr [r8 + 4], 1 ; test rbp, rbp ; mov r13d, dword ptr [rbx + 0x70] ; sete r14b ; je 0x75dcc
read: rbp rdx rflags rsp 
write: r13d r14b r8 rflags rsp 
--------------------------------------------------------------------------------
00075cb8: RLP; lea rax, [rip + 0x2f29dd] ; mov qword ptr [rbx + 0xd8], rax ; mov rax, qword ptr [rbx + 0xa0] ; test rax, rax ; je 0x75ce0
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
00075cf4: RLP; and dword ptr [rbx + 0x74], 0xffffffdf ; test rax, rax ; je 0x75e5c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00075d0d: RLP; test rax, rax ; mov r12, rax ; je 0x75e5c
read: rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
00075d44: RLP; mov edi, dword ptr [r12 + 0x70] ; call 0xd711c
read: rip rsp 
write: edi rsp 
--------------------------------------------------------------------------------
00075d52: RLP; mov dword ptr [r12 + 0x70], r13d ; test r14b, r14b ; jne 0x75e94
read: r13d r14b rflags 
write: rflags 
--------------------------------------------------------------------------------
00075da7: RLP; add rsp, 0x80 ; mov rax, r12 ; nop dword ptr [rax] ; add rsp, 0x90 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: r12 rsp 
write: r12 r13 r14 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00075de3: RLP; test rax, rax ; mov rbp, rax ; je 0x75ca8
read: rax rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
00075e28: RLP; mov byte ptr [rax], 0 ; mov rdx, rsp ; mov rsi, rbp ; mov edi, 1 ; call 0xd643c
read: rbp rip rsp 
write: edi rdx rsi rsp 
--------------------------------------------------------------------------------
00075e3f: RLP; test eax, eax ; jns 0x75ca8
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00075e55: RLP; jmp 0x75ca8
read: 
write: 
--------------------------------------------------------------------------------
00075e6e: RLP; xor r12d, r12d ; jmp 0x75d57
read: r12d 
write: r12d rflags 
--------------------------------------------------------------------------------
00075ea0: RLP; jmp 0x75d60
read: 
write: 
--------------------------------------------------------------------------------
00075ef7: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
00075ffd: RLP; jmp 0x75fd6
read: 
write: 
--------------------------------------------------------------------------------
0007602d: RLP; jmp 0x7600c
read: 
write: 
--------------------------------------------------------------------------------
00076101: RLP; test rax, rax ; je 0x7610f
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00076126: RLP; cmp eax, -1 ; mov dword ptr [rbp - 0x88], eax ; je 0x7629c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0007616e: RLP; movzx edx, byte ptr [rax] ; test dl, dl ; je 0x76180
read: dl rflags 
write: edx rflags 
--------------------------------------------------------------------------------
000761f1: RLP; mov rcx, rax ; lea rax, [rbx + 2] ; mov rbx, r12 ; jmp 0x7618c
read: r12 rax 
write: rax rbx rcx 
--------------------------------------------------------------------------------
00076313: RLP; cmp rax, -1 ; mov qword ptr [rbp - 0x90], rax ; je 0x7636d
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00076347: RLP; cmp r15d, r13d ; jg 0x7632a
read: r13d r15d rflags 
write: rflags 
--------------------------------------------------------------------------------
0007636d: RLP; xor esi, esi ; cmp r14, rbx ; sete sil ; mov edx, dword ptr [rbp - 0x88] ; mov edi, dword ptr [rbp - 0x84] ; call 0x1fde4
read: esi r14 rbx rflags rip rsp 
write: edi edx esi rflags rsp sil 
--------------------------------------------------------------------------------
0007638b: RLP; call 0x372fc
read: rip rsp 
write: rsp 
--------------------------------------------------------------------------------
000763c6: RLP; jmp 0x763ac
read: 
write: 
--------------------------------------------------------------------------------
00076457: RLP; mov rdi, rbx ; call 0x1f46c
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
00076463: RLP; xor eax, eax ; pop rbx ; ret
read: eax rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
000764e0: RLP; mov rax, rbp ; add rax, qword ptr [rbx + 0x18] ; cmp rax, qword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x18], rax ; jbe 0x76501
read: rax rbp rflags 
write: rax rflags 
--------------------------------------------------------------------------------
0007656e: RLP; mov rax, rbp ; add rax, qword ptr [rbx + 0x18] ; cmp rax, qword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x18], rax ; ja 0x7658c
read: rax rbp rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000765da: RLP; test rax, rax ; mov rbx, rax ; je 0x766fc
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
00076624: RLP; mov qword ptr [rbx + 0x10], r12 ; mov qword ptr [rbx + 0x20], rax ; cmp byte ptr [rbp], 0x61 ; je 0x766d9
read: r12 rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00076687: RLP; add rsp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rsp 
write: r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000766b8: RLP; test rax, rax ; mov qword ptr [rbx], rax ; je 0x76700
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0007670c: RLP; xor eax, eax ; jmp 0x76687
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
0007671f: RLP; mov rax, qword ptr [rip + 0x2f273e] ; mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; jmp 0x76687
read: eax 
write: eax rax rflags 
--------------------------------------------------------------------------------
0007679e: RLP; pop rdx ; ret
read: rsp 
write: rdx rsp 
--------------------------------------------------------------------------------
000767d0: RLP; pop rdx ; ret
read: rsp 
write: rdx rsp 
--------------------------------------------------------------------------------
00076807: RLP; pop rdx ; ret
read: rsp 
write: rdx rsp 
--------------------------------------------------------------------------------
00076827: RLP; test eax, eax ; setne al ; add rsp, 8 ; movzx eax, al ; neg eax ; ret
read: al eax rflags rsp 
write: al eax rflags rsp 
--------------------------------------------------------------------------------
00076845: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0007687e: RLP; pop rdx ; ret
read: rsp 
write: rdx rsp 
--------------------------------------------------------------------------------
000768e1: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rbx + 0x88] ; mov qword ptr [rdx + 8], r8 ; add dword ptr [rdx + 4], 1 ; mov rax, qword ptr [rbx + 8] ; cmp rax, qword ptr [rbx + 0x10] ; jae 0x76953
read: r8 rax rflags rsp 
write: rax rdx rflags rsp 
--------------------------------------------------------------------------------
00076948: RLP; add rsp, 0x80 ; mov eax, edx ; pop rbx ; ret
read: edx rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
0007695f: RLP; cmp eax, -1 ; je 0x769cb
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000769bc: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
00076a16: RLP; mov rdx, rax ; mov rax, r12 ; cmp rbx, rdx ; je 0x769f8
read: r12 rax rbx rdx rflags 
write: rax rdx rflags 
--------------------------------------------------------------------------------
00076a9d: RLP; cmp rax, -1 ; je 0x76aa8
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00076b01: RLP; test rax, rax ; mov edx, dword ptr [rbx] ; jne 0x76b1c
read: rax rflags 
write: edx rflags 
--------------------------------------------------------------------------------
00076b63: RLP; mov r12, rax ; mov eax, dword ptr [rbx + 0xc0] ; test eax, eax ; jne 0x76ba4
read: eax rax rflags 
write: eax r12 rflags 
--------------------------------------------------------------------------------
00076b91: RLP; cmp rax, r12 ; jne 0x76ba9
read: r12 rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00076bd5: RLP; test rax, rax ; js 0x76bec
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00076c3a: RLP; test eax, eax ; setne al ; test al, al ; jne 0x76cb1
read: al eax rflags 
write: al rflags 
--------------------------------------------------------------------------------
00076c75: RLP; cmp rax, -1 ; je 0x76ca4
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00076c98: RLP; test eax, eax ; setne al ; jmp 0x76c3f
read: eax rflags 
write: al rflags 
--------------------------------------------------------------------------------
00076cd0: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00076ced: RLP; test rax, rax ; je 0x76d11
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00076d50: RLP; test rax, rax ; je 0x76d5c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00076dc7: RLP; movzx edi, word ptr [rbx + 0x80] ; mov rbp, rax ; test di, di ; jne 0x76e4c
read: di rax rflags 
write: edi rbp rflags 
--------------------------------------------------------------------------------
00076e32: RLP; cmp rax, -1 ; je 0x76e84
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00076e62: RLP; add eax, 1 ; mov word ptr [rbx + 0x80], ax ; jmp 0x76dd6
read: ax eax 
write: eax rflags 
--------------------------------------------------------------------------------
00076ede: RLP; test eax, eax ; jne 0x77224
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00076f1c: RLP; test eax, eax ; je 0x770bc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00076f30: RLP; mov rax, qword ptr [rbx + 0xd8] ; mov edx, r12d ; mov rsi, rbp ; mov rdi, rbx ; call qword ptr [rax + 0x80]
read: r12d rbp rbx rsp 
write: edx rax rdi rsi rsp 
--------------------------------------------------------------------------------
00076f4a: RLP; mov rcx, rax ; mov rax, -1 ; cmp rcx, rax ; je 0x76f82
read: rax rcx rflags 
write: rax rcx rflags 
--------------------------------------------------------------------------------
00076fd5: RLP; and dword ptr [rbx], 0xfffffeff ; mov rdi, rbx ; call 0x797dc
read: rbx rip rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
00076fe7: RLP; mov rax, qword ptr [rbx + 0x38] ; cmp r12d, 1 ; mov qword ptr [rbx + 0x28], rax ; mov qword ptr [rbx + 0x20], rax ; mov qword ptr [rbx + 0x30], rax ; mov qword ptr [rbx + 0x18], rax ; mov qword ptr [rbx + 8], rax ; mov qword ptr [rbx + 0x10], rax ; jne 0x76efb
read: r12d rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000770b2: RLP; mov rax, rbp ; jmp 0x76f82
read: rbp 
write: rax 
--------------------------------------------------------------------------------
00077132: RLP; test rax, rax ; mov r14, rax ; js 0x77224
read: rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
00077159: RLP; test rax, rax ; mov r14, rax ; js 0x77224
read: rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
00077195: RLP; mov rcx, rax ; cmp r12, rcx ; jle 0x77238
read: r12 rax rcx rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
00077297: RLP; cmp rax, -1 ; je 0x77224
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00077307: RLP; cmp rax, -1 ; je 0x77224
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00077338: RLP; mov edi, dword ptr [rbx + 0x70] ; mov qword ptr [rbx + 0x40], 0 ; mov qword ptr [rbx + 0x38], 0 ; call 0xd7129
read: rip rsp 
write: edi rsp 
--------------------------------------------------------------------------------
00077354: RLP; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
00077382: RLP; test eax, eax ; mov ebp, eax ; jne 0x7739c
read: eax rflags 
write: ebp rflags 
--------------------------------------------------------------------------------
000773b5: RLP; mov esi, dword ptr [rbx + 0xc0] ; lea rdx, [rip + 0x2f0e1a] ; lea rax, [rip + 0x2f12d3] ; mov qword ptr [rbx + 0x40], 0 ; mov qword ptr [rbx + 0x38], 0 ; mov qword ptr [rbx + 0x18], 0 ; mov qword ptr [rbx + 8], 0 ; test esi, esi ; mov qword ptr [rbx + 0x10], 0 ; cmovg rax, rdx ; mov qword ptr [rbx + 0xd8], rax ; mov rax, qword ptr [rbx + 0xa0] ; mov qword ptr [rax + 0x140], rdx ; add rsp, 0x90 ; mov eax, ebp
read: ebp esi rax rdx rflags rsp 
write: eax esi rax rdx rflags rsp 
--------------------------------------------------------------------------------
00077433: RLP; mov rdi, qword ptr [rbx + 0x38] ; cdqe ; mov rcx, rax ; lea rdx, [r12 + rax - 1] ; neg rcx ; mov rsi, rdi ; and rdx, rcx ; mov r8, rdi ; not rsi ; add rsi, qword ptr [rbx + 0x40] ; add rsi, rax ; and rsi, rcx ; cmp rdx, rsi ; jb 0x774d4
read: eax rax rcx rdi rdx rflags rsi 
write: r8 rax rcx rdi rdx rflags rsi 
--------------------------------------------------------------------------------
000774aa: RLP; mov rdx, qword ptr [rbx + 0x40] ; sub rdx, qword ptr [rbx + 0x38] ; cmp rax, rdx ; je 0x77531
read: rax rdx rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
000774e3: RLP; mov rdi, qword ptr [rbx + 0x38] ; mov r12, rdi ; add r12, qword ptr [rsp + 0x30] ; mov r8, rdi ; mov qword ptr [rbx + 0x40], r12 ; jmp 0x7746c
read: r12 rdi 
write: r12 r8 rdi rflags 
--------------------------------------------------------------------------------
0007750c: RLP; cmp rax, -1 ; je 0x7739c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00077560: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00077590: RLP; mov rsi, qword ptr [rbx + 8] ; sub rsi, qword ptr [rbx + 0x38] ; cmp rax, rsi ; jne 0x775cc
read: rax rflags rsi 
write: rflags rsi 
--------------------------------------------------------------------------------
00077600: RLP; test eax, eax ; jne 0x77614
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0007768c: RLP; cmp rax, -1 ; mov rbp, rax ; je 0x77614
read: rax rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
000776ac: RLP; mov rsi, qword ptr [rsp + 0x30] ; cmp rax, rsi ; je 0x776d2
read: rax rflags rsi 
write: rflags rsi 
--------------------------------------------------------------------------------
000776c2: RLP; mov qword ptr [rbx + 0x90], -1 ; jmp 0x77614
read: 
write: 
--------------------------------------------------------------------------------
000776e8: RLP; mov rdx, qword ptr [rbx + 0x90] ; xor eax, eax ; mov qword ptr [rbx + 0x18], rbp ; cmp rdx, -1 ; cmovne rax, rdx ; lea rdx, [rip + 0x2f0a18] ; add rax, rbp ; mov qword ptr [rbx + 8], rax ; mov rax, qword ptr [rsp + 0x30] ; add rbp, rax ; mov qword ptr [rbx + 0x90], rax ; lea rax, [rip + 0x2f0ebb] ; mov qword ptr [rbx + 0x10], rbp ; jmp 0x77622
read: eax rax rbp rdx rflags 
write: eax rax rbp rdx rflags 
--------------------------------------------------------------------------------
0007773d: RLP; mov rax, qword ptr [rbx + 0xd8] ; mov rdi, rbx ; call qword ptr [rax + 0x20]
read: rbx rsp 
write: rax rdi rsp 
--------------------------------------------------------------------------------
0007774e: RLP; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
00077776: RLP; mov rax, qword ptr [rbx + 0xd8] ; mov rdx, r12 ; mov rsi, rbp ; mov rdi, rbx ; call qword ptr [rax + 0x40]
read: r12 rbp rbx rsp 
write: rax rdi rdx rsi rsp 
--------------------------------------------------------------------------------
0007778d: RLP; pop rbx ; pop rbp ; pop r12 ; ret
read: rsp 
write: r12 rbp rbx rsp 
--------------------------------------------------------------------------------
000777b8: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0007781b: RLP; test rax, rax ; jns 0x777f4
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00077869: RLP; cdqe ; nop ; jmp 0x7781b
read: eax 
write: rax 
--------------------------------------------------------------------------------
000778be: RLP; test eax, eax ; jne 0x77962
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000778fb: RLP; mov qword ptr [rbp + 8], rbx ; mov r15, rax ; jmp 0x77914
read: rax rbx 
write: r15 
--------------------------------------------------------------------------------
0007793b: RLP; mov rdi, rbp ; sub r14, rbx ; mov r15, rax ; call 0x7944c
read: r14 rax rbp rbx rip rsp 
write: r14 r15 rdi rflags rsp 
--------------------------------------------------------------------------------
0007794d: RLP; mov r13, qword ptr [rbp + 8] ; mov rbx, qword ptr [rbp + 0x10] ; sub rbx, r13 ; cmp r14, rbx ; jbe 0x7790f
read: r13 r14 rbx rflags 
write: r13 rbx rflags 
--------------------------------------------------------------------------------
0007797c: RLP; add rax, r15 ; jmp 0x7791a
read: r15 rax 
write: rax rflags 
--------------------------------------------------------------------------------
00077a49: RLP; cmp rax, 0 ; jle 0x77b54
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00077aa3: RLP; add qword ptr [rbx + 8], r12 ; jmp 0x77a7c
read: r12 
write: rflags 
--------------------------------------------------------------------------------
00077af8: RLP; jmp 0x77a70
read: 
write: 
--------------------------------------------------------------------------------
00077b16: RLP; add qword ptr [rbx + 8], rbp ; mov r14, rax ; jmp 0x779d9
read: rax rbp 
write: r14 rflags 
--------------------------------------------------------------------------------
00077b38: RLP; cmp eax, -1 ; jne 0x77a70
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00077b76: RLP; and dword ptr [rbx], 0xfffffeff ; mov rdi, rbx ; call 0x797dc
read: rbx rip rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
00077b88: RLP; jmp 0x779ac
read: 
write: 
--------------------------------------------------------------------------------
00077beb: RLP; test rax, rax ; js 0x77c83
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00077cb5: RLP; test eax, eax ; jne 0x77ccd
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00077cde: RLP; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
00077d06: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00077d15: RLP; cdqe ; jmp 0x77d06
read: eax 
write: rax 
--------------------------------------------------------------------------------
00077d7b: RLP; mov qword ptr [rbp + 0x28], rax ; mov rax, rbx ; add r12, r13 ; sub rax, r13 ; mov r13, rax ; lea rax, [r14 + r13] ; test rax, rax ; jne 0x77dbb
read: r12 r13 rax rbx rflags 
write: r12 r13 rax rflags 
--------------------------------------------------------------------------------
00077dd1: RLP; cmp eax, -1 ; je 0x77e7c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00077e16: RLP; sub r13, rax ; jmp 0x77d94
read: r13 rax 
write: r13 rflags 
--------------------------------------------------------------------------------
00077ec6: RLP; sub r13, rax ; cmp r14, rax ; jbe 0x77dfe
read: r13 r14 rax rflags 
write: r13 rflags 
--------------------------------------------------------------------------------
00077f06: RLP; mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: ebp rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00077f58: RLP; test byte ptr [rbx + 0x74], 0x20 ; je 0x7804c
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
00077f88: RLP; xor edx, edx ; xor ecx, ecx ; xor esi, esi ; mov rdi, rbx ; call 0x70bec
read: ecx edx esi rbx rip rsp 
write: ecx edx esi rdi rflags rsp 
--------------------------------------------------------------------------------
00077f9a: RLP; mov rdx, qword ptr [rbx + 0xa0] ; mov qword ptr [rdx + 0x10], 0 ; mov qword ptr [rdx], 0 ; mov qword ptr [rdx + 8], 0 ; mov qword ptr [rdx + 0x20], 0 ; mov qword ptr [rdx + 0x18], 0 ; mov qword ptr [rdx + 0x28], 0 ; xor ecx, ecx ; xor edx, edx ; xor esi, esi ; mov rdi, rbx ; call 0x7974c
read: ecx edx esi rbx rip rsp 
write: ecx edx esi rdi rdx rflags rsp 
--------------------------------------------------------------------------------
00077fe2: RLP; mov qword ptr [rbx + 0x18], 0 ; mov qword ptr [rbx + 8], 0 ; mov rdi, rbx ; mov qword ptr [rbx + 0x10], 0 ; mov qword ptr [rbx + 0x28], 0 ; mov qword ptr [rbx + 0x20], 0 ; mov qword ptr [rbx + 0x30], 0 ; call 0x78cfc
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0007801e: RLP; test ebp, ebp ; mov eax, ebp ; mov dword ptr [rbx], 0xfbad240c ; mov dword ptr [rbx + 0x70], 0xffffffff ; mov qword ptr [rbx + 0x90], -1 ; cmove eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
read: eax ebp r12d rflags rsp 
write: eax r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00078060: RLP; mov ebp, eax ; jmp 0x77f62
read: eax 
write: ebp 
--------------------------------------------------------------------------------
00078097: RLP; mov r12d, eax ; jmp 0x77f4a
read: eax 
write: r12d 
--------------------------------------------------------------------------------
000780b8: RLP; mov r12d, eax ; jmp 0x77f4a
read: eax 
write: r12d 
--------------------------------------------------------------------------------
00078105: RLP; test byte ptr [rbx], 0x40 ; je 0x7811c
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
00078118: RLP; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
00078130: RLP; mov rdi, rbx ; xor esi, esi ; call 0x79cfc
read: esi rbx rip rsp 
write: esi rdi rflags rsp 
--------------------------------------------------------------------------------
0007813e: RLP; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
00078158: RLP; jmp 0x78105
read: 
write: 
--------------------------------------------------------------------------------
00078186: RLP; mov ebp, eax ; test ebp, ebp ; js 0x7820c
read: eax ebp rflags 
write: ebp rflags 
--------------------------------------------------------------------------------
000781c4: RLP; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
read: rbx rsp 
write: r12 rax rbp rbx rsp 
--------------------------------------------------------------------------------
000781e7: RLP; cmp rax, -1 ; jne 0x781b8
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00078205: RLP; xor eax, eax ; jmp 0x781c7
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
00078219: RLP; mov ebp, eax ; nop ; jmp 0x78188
read: eax 
write: ebp 
--------------------------------------------------------------------------------
0007828d: RLP; mov rax, qword ptr [rip + 0x2f0bd0] ; mov dword ptr fs:[rax], 0x16 ; mov rsp, qword ptr [rbp - 0x58] ; nop dword ptr [rax + rax] ; lea rsp, [rbp - 0x28] ; xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: eax rsp 
write: eax r12 r13 r14 r15 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00078322: RLP; test rax, rax ; mov r14, rax ; je 0x782a4
read: rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
00078342: RLP; test rax, rax ; mov r13, rax ; je 0x7867c
read: rax rflags 
write: r13 rflags 
--------------------------------------------------------------------------------
00078367: RLP; sub rax, rbx ; mov rsi, rbx ; lea rdx, [rax + 0x12] ; and rdx, 0xfffffffffffffff0 ; sub rsp, rdx ; mov rdx, rax ; mov rdi, rsp ; mov r15, rsp ; call 0x892cc
read: rax rbx rdx rip rsp 
write: r15 rax rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0007838a: RLP; mov byte ptr [rax], 0 ; movzx edx, byte ptr [rsp] ; test dl, dl ; je 0x7868e
read: dl rflags 
write: edx rflags 
--------------------------------------------------------------------------------
00078471: RLP; test eax, eax ; jne 0x78281
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0007872b: RLP; cmp rax, -1 ; je 0x78744
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0007877d: RLP; cmp rbx, rax ; setne al ; movzx eax, al ; neg eax ; pop rbx ; ret
read: al eax rax rbx rflags rsp 
write: al eax rbx rflags rsp 
--------------------------------------------------------------------------------
00078825: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rbp + 0x88] ; mov rdi, qword ptr [rip + 0x2f1ed2] ; mov qword ptr [rdx + 8], r8 ; add dword ptr [rdx + 4], 1 ; mov edx, dword ptr [rdi] ; and edx, 0x288 ; cmp edx, 0x280 ; je 0x7897c
read: edx r8 rflags rsp 
write: edx rdi rdx rflags rsp 
--------------------------------------------------------------------------------
0007889b: RLP; add rsp, 0x80 ; nop word ptr cs:[rax + rax] ; mov rdi, rbx ; call 0x794ac
read: rbx rip rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
000788b8: RLP; mov rsi, qword ptr [rbx + 0x38] ; mov rdx, qword ptr [rbx + 0x40] ; mov rdi, rbx ; mov rax, qword ptr [rbx + 0xd8] ; sub rdx, rsi ; mov qword ptr [rbx + 8], rsi ; mov qword ptr [rbx + 0x18], rsi ; mov qword ptr [rbx + 0x10], rsi ; mov qword ptr [rbx + 0x30], rsi ; mov qword ptr [rbx + 0x28], rsi ; mov qword ptr [rbx + 0x20], rsi ; call qword ptr [rax + 0x70]
read: rbx rdx rsi rsp 
write: rax rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000788ec: RLP; cmp rax, 0 ; jle 0x7892c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00078956: RLP; and dword ptr [rbx], 0xfffffeff ; mov rdi, rbx ; call 0x797dc
read: rbx rip rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
00078968: RLP; mov eax, dword ptr [rbx] ; jmp 0x787bc
read: 
write: eax 
--------------------------------------------------------------------------------
0007898f: RLP; jmp 0x78856
read: 
write: 
--------------------------------------------------------------------------------
00078a1c: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
00078b23: RLP; cmp eax, -1 ; jne 0x78a8e
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00078b6e: RLP; cmp eax, -1 ; sete al ; test al, al ; jne 0x78b2c
read: al eax rflags 
write: al rflags 
--------------------------------------------------------------------------------
00078b97: RLP; jmp 0x78a92
read: 
write: 
--------------------------------------------------------------------------------
00078bd8: RLP; mov rdx, qword ptr [rbx + 0x38] ; mov ecx, dword ptr [rbx] ; mov qword ptr [rbx + 0x18], rdx ; mov qword ptr [rbx + 8], rdx ; mov qword ptr [rbx + 0x10], rdx ; jmp 0x78aab
read: rdx 
write: ecx rdx 
--------------------------------------------------------------------------------
00078c07: RLP; cmp eax, -1 ; sete al ; jmp 0x78b74
read: eax rflags 
write: al rflags 
--------------------------------------------------------------------------------
00078c25: RLP; mov rdx, qword ptr [rbx + 0x18] ; mov ecx, dword ptr [rbx] ; mov rax, rdx ; sub rax, qword ptr [rbx + 0x38] ; cmp r12, rax ; cmovbe rax, r12 ; sub rdx, rax ; mov qword ptr [rbx + 0x18], rdx ; mov qword ptr [rbx + 8], rdx ; jmp 0x78ab4
read: r12 rax rdx rflags 
write: ecx rax rdx rflags 
--------------------------------------------------------------------------------
00078ca0: RLP; add rsp, 0x80 ; sub dword ptr [rip + 0x2f2ad2], 1 ; jne 0x78cf5
read: rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00078cee: RLP; add rsp, 0x80 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00078d82: RLP; add rsp, 0x80 ; mov qword ptr [rip + 0x2f29f4], rdx ; mov esi, dword ptr [rbx] ; add dword ptr [rip + 0x2f29e7], 1 ; mov qword ptr [rip + 0x2f29cc], rbx ; mov eax, esi ; and eax, 0x8000 ; jne 0x78e0c
read: eax esi rbx rdx rflags rsp 
write: eax esi rflags rsp 
--------------------------------------------------------------------------------
00078ded: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rbx + 0x88] ; mov qword ptr [rdx + 8], r8 ; mov esi, dword ptr [rbx] ; add dword ptr [rdx + 4], 1 ; mov eax, esi ; and eax, 0x8000 ; mov rdx, qword ptr [rip + 0x2f1229] ; test rdx, rdx ; je 0x78e51
read: eax esi r8 rdx rflags rsp 
write: eax esi rdx rflags rsp 
--------------------------------------------------------------------------------
00078ebe: RLP; add rsp, 0x80 ; test ebp, ebp ; jne 0x78ed4
read: ebp rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00078ef3: RLP; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00078f22: RLP; jmp 0x78d34
read: 
write: 
--------------------------------------------------------------------------------
00078f5b: RLP; add rsp, 0x80 ; jmp 0x78e6c
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00079037: RLP; add rsp, 0x80 ; mov qword ptr [rip + 0x2f273f], rdx ; mov esi, dword ptr [rbx] ; mov ecx, dword ptr [rip + 0x2f2733] ; mov qword ptr [rip + 0x2f2718], rbx ; mov eax, esi ; add ecx, 1 ; and eax, 0x8000 ; mov dword ptr [rip + 0x2f271c], ecx ; jne 0x7916c
read: eax ecx esi rbx rdx rflags rsp 
write: eax ecx esi rflags rsp 
--------------------------------------------------------------------------------
000790ae: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rbx + 0x88] ; mov esi, dword ptr [rbx] ; mov qword ptr [rdx + 8], r8 ; mov rax, qword ptr [rip + 0x2f0f73] ; add dword ptr [rdx + 4], 1 ; add dword ptr [rip + 0x2f26a0], 1 ; and esi, 0x8000 ; mov qword ptr [rip + 0x2f0f5b], rbx ; mov qword ptr [rbx + 0x68], rax ; jne 0x79222
read: esi r8 rax rbx rflags rsp 
write: esi rax rdx rflags rsp 
--------------------------------------------------------------------------------
00079158: RLP; add rsp, 0x80 ; test ebp, ebp ; jne 0x7918c
read: ebp rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000791ab: RLP; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000791e2: RLP; jmp 0x78fe9
read: 
write: 
--------------------------------------------------------------------------------
0007921b: RLP; add rsp, 0x80 ; mov ecx, dword ptr [rip + 0x2f2558] ; jmp 0x79102
read: rsp 
write: ecx rflags rsp 
--------------------------------------------------------------------------------
00079290: RLP; mov rcx, qword ptr [rbx + 0x18] ; mov rsi, qword ptr [rbx + 0x58] ; mov r12, rax ; mov rdi, qword ptr [rbx + 0x48] ; sub r14, rcx ; mov rbp, r14 ; sub rbp, rax ; mov rax, rsi ; sub rax, rdi ; cmp rbp, rax ; ja 0x79304
read: r14 rax rbp rcx rdi rflags rsi 
write: r12 r14 rax rbp rcx rdi rflags rsi 
--------------------------------------------------------------------------------
00079323: RLP; test rax, rax ; je 0x79440
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0007935b: RLP; mov r9, qword ptr [rsp + 0x10] ; mov rdi, qword ptr [rbx + 0x48] ; mov qword ptr [rsp + 0x10], r9 ; call 0x1f46c
read: r9 rip rsp 
write: r9 rdi rsp 
--------------------------------------------------------------------------------
00079372: RLP; mov r9, qword ptr [rsp + 0x10] ; mov rsi, r13 ; sub rsi, qword ptr [rbx + 0x18] ; mov qword ptr [rbx + 0x48], r9 ; add r9, qword ptr [rsp + 8] ; mov qword ptr [rbx + 0x58], r9 ; jmp 0x792d1
read: r13 r9 rsi 
write: r9 rflags rsi 
--------------------------------------------------------------------------------
000793a7: RLP; mov rsi, r13 ; add r15, qword ptr [rbx + 0x48] ; sub rsi, qword ptr [rbx + 0x18] ; jmp 0x792d1
read: r13 r15 rsi 
write: r15 rflags rsi 
--------------------------------------------------------------------------------
000793cc: RLP; mov rdi, r15 ; mov rsi, qword ptr [rbx + 0x18] ; mov rdx, r13 ; sub rdi, r12 ; add rdi, qword ptr [rbx + 0x48] ; sub rdx, rsi ; call 0x8e3dc
read: r12 r13 r15 rdi rdx rip rsi rsp 
write: rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000793e9: RLP; mov rsi, r13 ; add r15, qword ptr [rbx + 0x48] ; sub rsi, qword ptr [rbx + 0x18] ; jmp 0x792d1
read: r13 r15 rsi 
write: r15 rflags rsi 
--------------------------------------------------------------------------------
0007941f: RLP; mov rcx, qword ptr [rsp + 0x18] ; mov rdx, r14 ; mov rdi, rax ; mov rsi, rcx ; call 0x8e3dc
read: r14 rax rcx rip rsp 
write: rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
00079436: RLP; mov r9, qword ptr [rsp + 0x10] ; jmp 0x79360
read: 
write: r9 
--------------------------------------------------------------------------------
0007950f: RLP; cmp eax, -1 ; je 0x794ea
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00079535: RLP; mov rdi, qword ptr [rbx + 0x48] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
00079542: RLP; mov qword ptr [rbx + 0x48], 0 ; mov qword ptr [rbx + 0x58], 0 ; mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
00079586: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000795d9: RLP; test eax, eax ; jne 0x795f9
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000795ee: RLP; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
00079610: RLP; mov rax, qword ptr [rbx + 8] ; cmp rax, qword ptr [rbx + 0x10] ; jae 0x795c2
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
00079630: RLP; cmp eax, -1 ; jne 0x795b0
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0007964f: RLP; jmp 0x795dd
read: 
write: 
--------------------------------------------------------------------------------
000796b1: RLP; test eax, eax ; jne 0x796d1
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000796c6: RLP; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
000796e8: RLP; mov rax, qword ptr [rbx + 8] ; cmp rax, qword ptr [rbx + 0x10] ; jae 0x79696
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
00079718: RLP; cmp eax, -1 ; jne 0x79684
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00079743: RLP; jmp 0x796b5
read: 
write: 
--------------------------------------------------------------------------------
000797c2: RLP; mov eax, dword ptr [rbx] ; mov ecx, dword ptr [rsp + 0xc] ; mov rdx, qword ptr [rsp] ; jmp 0x7976b
read: 
write: eax ecx rdx 
--------------------------------------------------------------------------------
00079814: RLP; cmp eax, -1 ; jne 0x797eb
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00079835: RLP; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
00079862: RLP; cmp eax, -1 ; je 0x79876
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00079909: RLP; cmp eax, -1 ; je 0x7993c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0007992e: RLP; mov qword ptr [r12 + 0x28], rax ; jmp 0x798e8
read: rax 
write: 
--------------------------------------------------------------------------------
00079962: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000799ed: RLP; cmp eax, -1 ; jne 0x7998c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00079a10: RLP; add qword ptr [rbx + 8], r14 ; mov r13, rax ; jmp 0x799d9
read: r14 rax 
write: r13 rflags 
--------------------------------------------------------------------------------
00079a3b: RLP; cmp eax, -1 ; je 0x79acc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00079a6d: RLP; mov qword ptr [rbx + 0x30], 0 ; mov qword ptr [rbx + 0x28], 0 ; mov rax, rbx ; mov qword ptr [rbx + 0x20], 0 ; mov qword ptr [rbx + 0x10], 0 ; mov qword ptr [rbx + 8], 0 ; mov qword ptr [rbx + 0x18], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
read: rbx rsp 
write: r12 rax rbp rbx rsp 
--------------------------------------------------------------------------------
00079ac5: RLP; jmp 0x79a6d
read: 
write: 
--------------------------------------------------------------------------------
00079af6: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00079b27: RLP; cmp rax, -1 ; je 0x79b4d
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00079b48: RLP; mov eax, 1 ; pop rbx ; ret
read: rsp 
write: eax rbx rsp 
--------------------------------------------------------------------------------
00079c2f: RLP; test r12d, r12d ; mov dword ptr [rbp + 0xc0], r12d ; js 0x79cbc
read: r12d rflags 
write: rflags 
--------------------------------------------------------------------------------
00079ce7: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00079d3e: RLP; mov qword ptr [rbx + 0x48], 0 ; mov rdi, rbx ; call 0x78cfc
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
00079d52: RLP; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
00079d7a: RLP; mov qword ptr [rbx + 0x40], 0 ; mov qword ptr [rbx + 0x38], 0 ; jmp 0x79d12
read: 
write: 
--------------------------------------------------------------------------------
00079dc5: RLP; cmp eax, -1 ; je 0x79dcd
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00079e27: RLP; cmp eax, -1 ; jne 0x79e0a
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00079f0d: RLP; add rsp, 0x80 ; mov qword ptr [rip + 0x2f1869], rdx ; add dword ptr [rip + 0x2f185e], 1 ; mov rbx, qword ptr [rip + 0x2f0113] ; xor r15d, r15d ; mov r14d, dword ptr [rip + 0x2f1841] ; test rbx, rbx ; je 0x7a083
read: r15d rbx rdx rflags rsp 
write: r14d r15d rbx rflags rsp 
--------------------------------------------------------------------------------
00079fae: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rbx + 0x88] ; mov qword ptr [rdx + 8], r12 ; add dword ptr [rdx + 4], 1 ; mov esi, dword ptr [rbx + 0xc0] ; test esi, esi ; jle 0x7a0cc
read: esi r12 rflags rsp 
write: esi rdx rflags rsp 
--------------------------------------------------------------------------------
00079ff9: RLP; cmp eax, -1 ; mov eax, 0xffffffff ; cmove r15d, eax ; test ebp, ebp ; je 0x7a05c
read: eax ebp r15d rflags 
write: eax r15d rflags 
--------------------------------------------------------------------------------
0007a04d: RLP; add rsp, 0x80 ; nop dword ptr [rax + rax] ; mov edx, dword ptr [rip + 0x2f1712] ; mov qword ptr [rip + 0x2f16ff], 0 ; cmp r14d, edx ; jne 0x79f4c
read: edx r14d rflags rsp 
write: edx rflags rsp 
--------------------------------------------------------------------------------
0007a0b4: RLP; add rsp, 0x28 ; mov eax, r15d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: r15d rsp 
write: eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0007a122: RLP; add rsp, 0x80 ; jmp 0x7a090
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0007a15a: RLP; jmp 0x79ebf
read: 
write: 
--------------------------------------------------------------------------------
0007a18e: RLP; mov rbx, qword ptr [rip + 0x2efea7] ; mov r12d, eax ; test rbx, rbx ; je 0x7a25b
read: eax rbx rflags 
write: r12d rbx rflags 
--------------------------------------------------------------------------------
0007a234: RLP; cmp r13d, 2 ; jne 0x7a2cc
read: r13d rflags 
write: rflags 
--------------------------------------------------------------------------------
0007a279: RLP; cmp r13d, 2 ; je 0x7a210
read: r13d rflags 
write: rflags 
--------------------------------------------------------------------------------
0007a315: RLP; add rsp, 0x80 ; jmp 0x7a244
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0007a352: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0007a3da: RLP; add rsp, 0x80 ; mov qword ptr [rip + 0x2f139c], rdx ; mov eax, dword ptr [rip + 0x2f1392] ; mov rbx, qword ptr [rip + 0x2efc47] ; mov r12d, dword ptr [rip + 0x2f1378] ; add eax, 1 ; test rbx, rbx ; mov dword ptr [rip + 0x2f1378], eax ; je 0x7a51a
read: eax rbx rdx rflags rsp 
write: eax r12d rbx rflags rsp 
--------------------------------------------------------------------------------
0007a47a: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rbx + 0x88] ; mov qword ptr [rdx + 8], r13 ; add dword ptr [rdx + 4], 1 ; mov eax, dword ptr [rbx] ; and eax, 0x208 ; cmp eax, 0x200 ; je 0x7a59c
read: eax r13 rflags rsp 
write: eax rdx rflags rsp 
--------------------------------------------------------------------------------
0007a4e6: RLP; add rsp, 0x80 ; mov eax, dword ptr [rip + 0x2f1281] ; mov qword ptr [rip + 0x2f126e], 0 ; cmp r12d, eax ; jne 0x7a41c
read: eax r12d rflags rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
0007a565: RLP; add rsp, 0x80 ; test ebp, ebp ; je 0x7a58f
read: ebp rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0007a58f: RLP; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rsp 
write: r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0007a5b2: RLP; jmp 0x7a4a2
read: 
write: 
--------------------------------------------------------------------------------
0007a5e2: RLP; jmp 0x7a38c
read: 
write: 
--------------------------------------------------------------------------------
0007a64d: RLP; mov rsi, qword ptr [rsp + 8] ; mov eax, dword ptr [rsi] ; jmp 0x7a603
read: 
write: eax rsi 
--------------------------------------------------------------------------------
0007a74d: RLP; mov rsi, qword ptr [rsp + 8] ; movsxd rax, dword ptr [rsi + 0x10] ; jmp 0x7a723
read: 
write: rax rsi 
--------------------------------------------------------------------------------
0007a78d: RLP; mov rsi, qword ptr [rsp + 8] ; movsxd rax, dword ptr [rsi + 0x10] ; jmp 0x7a764
read: 
write: rax rsi 
--------------------------------------------------------------------------------
0007a7c3: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0007a818: RLP; mov rbp, qword ptr [rbx + 8] ; lea rax, [rbp - 1] ; mov qword ptr [rbx + 8], rax ; mov byte ptr [rbp - 1], r12b ; movzx eax, r12b ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: r12b rax rsp 
write: eax r12 r13 r14 r15 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0007a863: RLP; test eax, eax ; jne 0x7a8fc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0007a892: RLP; test rax, rax ; mov r15, rax ; je 0x7a8fc
read: rax rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
0007a8b3: RLP; mov rdi, qword ptr [rbx + 0x18] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0007a8c0: RLP; mov qword ptr [rbx + 0x18], r15 ; mov qword ptr [rbx + 0x10], r14 ; mov qword ptr [rbx + 0x50], rbp ; jmp 0x7a81c
read: r14 r15 rbp 
write: 
--------------------------------------------------------------------------------
0007a8e2: RLP; test rax, rax ; je 0x7a8fc
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0007a9fe: RLP; add rsp, 0x80 ; mov qword ptr [rip + 0x2f0d78], rdx ; add dword ptr [rip + 0x2f0d6d], 1 ; ret
read: rdx rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0007aa67: RLP; add rsp, 0x80 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0007abad: RLP; test rax, rax ; mov r15, rax ; je 0x7aca4
read: rax rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
0007abd0: RLP; mov rdi, r14 ; call qword ptr [rbx + 0xe8]
read: r14 rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0007abdd: RLP; mov qword ptr [rbx + 0x38], 0 ; mov rdx, qword ptr [rsp + 8] ; lea rdi, [r15 + rbp] ; xor esi, esi ; sub rdx, rbp ; call 0x891bc
read: esi rbp rdx rip rsp 
write: esi rdi rdx rflags rsp 
--------------------------------------------------------------------------------
0007abfc: RLP; mov rdx, qword ptr [rsp + 8] ; mov ecx, 1 ; mov rsi, r15 ; mov rdi, rbx ; add rdx, r15 ; call 0x7974c
read: r15 rbx rdx rip rsp 
write: ecx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0007ac18: RLP; mov rax, r15 ; mov qword ptr [rbx + 0x20], r15 ; sub rax, r14 ; add qword ptr [rbx + 0x18], rax ; mov rax, r15 ; sub rax, r14 ; add qword ptr [rbx + 8], rax ; mov rax, r15 ; sub rax, r14 ; add qword ptr [rbx + 0x10], rax ; mov rcx, rax ; add rcx, qword ptr [rbx + 0x28] ; mov rax, qword ptr [rbx + 0x40] ; mov qword ptr [rbx + 0x28], rcx ; mov qword ptr [rbx + 0x30], rax
read: r14 r15 rax rcx 
write: rax rcx rflags 
--------------------------------------------------------------------------------
0007ad35: RLP; test rax, rax ; mov r9, rax ; je 0x7acfe
read: rax rflags 
write: r9 rflags 
--------------------------------------------------------------------------------
0007ad5e: RLP; mov rdi, rbp ; call qword ptr [rbx + 0xe8]
read: rbp rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0007ad6b: RLP; mov r9, qword ptr [rsp + 0x18] ; mov qword ptr [rbx + 0x38], 0 ; mov rdx, qword ptr [rsp + 0x10] ; mov rsi, r9 ; mov ecx, 1 ; mov rdi, rbx ; sub r14, qword ptr [rsp + 8] ; mov qword ptr [rsp + 8], r9 ; add rdx, r9 ; call 0x7974c
read: r14 r9 rbx rdx rip rsp 
write: ecx r14 r9 rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0007ad9e: RLP; mov r9, qword ptr [rsp + 8] ; test r13d, r13d ; mov rax, r9 ; jne 0x7ae0c
read: r13d r9 rflags 
write: r9 rax rflags 
--------------------------------------------------------------------------------
0007adf6: RLP; jmp 0x7ad04
read: 
write: 
--------------------------------------------------------------------------------
0007ae8b: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0007aebc: RLP; mov qword ptr [rbx + 0x38], 0 ; mov rdi, rbx ; xor esi, esi ; call 0x79cfc
read: esi rbx rip rsp 
write: esi rdi rflags rsp 
--------------------------------------------------------------------------------
0007aed2: RLP; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
0007af06: RLP; mov r12, rax ; xor ecx, ecx ; mov rdx, r12 ; mov rsi, rbp ; mov rdi, rbx ; call 0x7974c
read: ecx r12 rax rbp rbx rip rsp 
write: ecx r12 rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0007af1d: RLP; test r13, r13 ; mov qword ptr [rbx + 0x20], rbp ; mov qword ptr [rbx + 0x18], rbp ; mov qword ptr [rbx + 8], rbp ; je 0x7af6c
read: r13 rbp rflags 
write: rflags 
--------------------------------------------------------------------------------
0007af9a: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0007afcc: RLP; or dword ptr [rbx], 8 ; pop rbx ; ret
read: rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
0007b034: RLP; mov r14, rax ; cmp r13d, 1 ; je 0x7b14c
read: r13d rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
0007b085: RLP; test bpl, 1 ; mov r14, rax ; je 0x7b0d4
read: bpl rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
0007b12d: RLP; mov ebp, 1 ; mov r14, rax ; jmp 0x7b08e
read: rax 
write: ebp r14 
--------------------------------------------------------------------------------
0007b170: RLP; test eax, eax ; je 0x7b0b6
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0007b19d: RLP; test eax, eax ; je 0x7b05f
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0007b292: RLP; add rsp, 0x80 ; lea r8, [rip + 0x2ee37c] ; mov r10d, 1 ; xor r9d, r9d ; mov rdx, r8 ; mov esi, r10d ; mov eax, r9d ; cmp dword ptr [rip + 0x2f34b7], 0 ; je 0x7b2c3
read: r10d r8 r9d rflags rsp 
write: eax esi r10d r8 r9d rdx rflags rsp 
--------------------------------------------------------------------------------
0007b2db: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rdx + 0x868] ; cmp rdx, r8 ; jne 0x7b2ac
read: r8 rdx rflags rsp 
write: rdx rflags rsp 
--------------------------------------------------------------------------------
0007b76d: RLP; mov rax, qword ptr [rip + 0x2ed628] ; mov rdi, qword ptr [rax] ; call 0x6c45c
read: rip rsp 
write: rax rdi rsp 
--------------------------------------------------------------------------------
0007b780: RLP; call 0x372fc
read: rip rsp 
write: rsp 
--------------------------------------------------------------------------------
0007b804: RLP; cmp rax, -1 ; mov rbx, rax ; mov qword ptr [rip + 0x2effd6], 0 ; je 0x7b85d
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
0007b833: RLP; test eax, eax ; jne 0x7b944
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0007b85d: RLP; xor r9d, r9d ; xor edx, edx ; xor edi, edi ; mov r8d, 0xffffffff ; mov ecx, 0x4022 ; mov esi, 0x8000000 ; call 0xe004c
read: edi edx r9d rip rsp 
write: ecx edi edx esi r8d r9d rflags rsp 
--------------------------------------------------------------------------------
0007b87d: RLP; cmp rax, -1 ; je 0x7b90c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0007b8bc: RLP; jmp 0x7b81f
read: 
write: 
--------------------------------------------------------------------------------
0007b903: RLP; lea rdi, [rbx + 0x4000000] ; jmp 0x7b8ab
read: 
write: rdi 
--------------------------------------------------------------------------------
0007b929: RLP; cmp rax, -1 ; mov rbx, rax ; je 0x7b8e6
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
0007b955: RLP; xor eax, eax ; jmp 0x7b846
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
0007b9c3: RLP; cmp rax, -1 ; je 0x7ba2c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0007bb33: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rdx + 0x868] ; cmp rdx, rsi ; jne 0x7bb0c
read: rdx rflags rsi rsp 
write: rdx rflags rsp 
--------------------------------------------------------------------------------
0007bb79: RLP; add rsp, 0x80 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0007bbf6: RLP; mov rsi, qword ptr [rsp] ; mov r13, rax ; mov rax, rbx ; add rax, qword ptr [rsi] ; cmp r13, rax ; jne 0x7bbca
read: r13 rax rbx rflags 
write: r13 rax rflags rsi 
--------------------------------------------------------------------------------
0007bc16: RLP; mov rax, qword ptr [rip + 0x2ed27f] ; mov rsi, qword ptr [rsp] ; mov rdx, qword ptr [rsp + 8] ; mov rax, qword ptr [rax] ; test rax, rax ; jne 0x7bc73
read: rax rflags 
write: rax rdx rflags rsi 
--------------------------------------------------------------------------------
0007bc41: RLP; test rax, rax ; je 0x7bbca
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0007bc79: RLP; mov rdx, qword ptr [rsp + 8] ; mov rsi, qword ptr [rsp] ; jmp 0x7bc2e
read: 
write: rdx rsi 
--------------------------------------------------------------------------------
0007bcec: RLP; cmp rax, rsp ; mov r8, rax ; jbe 0x7bd0c
read: rax rflags rsp 
write: r8 rflags 
--------------------------------------------------------------------------------
0007bd3e: RLP; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
read: rsp 
write: r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0007bd66: RLP; jmp 0x7bcba
read: 
write: 
--------------------------------------------------------------------------------
0007bdd8: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0007be16: RLP; jmp 0x7bdd8
read: 
write: 
--------------------------------------------------------------------------------
0007bfe4: RLP; mov r8, qword ptr [rsp + 8] ; mov rcx, qword ptr [rsp + 0x10] ; mov r9, qword ptr [rsp + 0x18] ; jmp 0x7bf5e
read: 
write: r8 r9 rcx 
--------------------------------------------------------------------------------
0007c020: RLP; mov r8, qword ptr [rsp + 8] ; mov rcx, qword ptr [rsp + 0x10] ; mov r9, qword ptr [rsp + 0x18] ; jmp 0x7beb6
read: 
write: r8 r9 rcx 
--------------------------------------------------------------------------------
0007c03d: RLP; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0007c29d: RLP; mov rax, qword ptr [rbp + 0x58] ; jmp 0x7c1a9
read: 
write: rax 
--------------------------------------------------------------------------------
0007c33a: RLP; mov r13, qword ptr [rip + 0x2eca73] ; xor edi, edi ; call qword ptr [r13]
read: edi rsp 
write: edi r13 rflags rsp 
--------------------------------------------------------------------------------
0007c34b: RLP; mov r12, rax ; mov rbp, rax ; and r12d, 0xf ; jne 0x7c3d4
read: r12d rax rflags 
write: r12 r12d rbp rflags 
--------------------------------------------------------------------------------
0007c380: RLP; test rax, rax ; mov r13, rax ; je 0x7c3f9
read: rax rflags 
write: r13 rflags 
--------------------------------------------------------------------------------
0007c39d: RLP; sub r13, qword ptr [rip + 0x2ecde8] ; add rbp, r12 ; xor eax, eax ; mov qword ptr [rip + 0x2ed2c4], rbp ; add r13, rbx ; sub rbx, r12 ; or rbx, 1 ; mov qword ptr [rip + 0x2edad3], r13 ; mov qword ptr [rbp + 8], rbx ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: eax r12 r13 rbp rbx rsp 
write: eax r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0007c74a: RLP; test byte ptr [rbx + 8], 1 ; jne 0x7c78e
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
0007c8bb: RLP; add rsp, 0x80 ; mov dword ptr [rsp + 0x14], 1 ; jmp 0x7c572
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0007c98f: RLP; mov r10, qword ptr [rsp + 8] ; sub qword ptr [rip + 0x2eeea9], r13 ; sub r14, r13 ; mov qword ptr [rbp + 0x10], r10 ; or r14, 1 ; sub qword ptr [r15 + 0x878], r13 ; mov qword ptr [rbx + 8], r14 ; nop dword ptr [rax] ; mov edi, dword ptr [rsp + 0x10] ; test edi, edi ; jne 0x7c542
read: edi r10 r13 r14 rflags 
write: edi r10 r14 rflags 
--------------------------------------------------------------------------------
0007c9f8: RLP; add rsp, 0x80 ; add rsp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0007ca20: RLP; add rsp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0007ca5d: RLP; jmp 0x7c695
read: 
write: 
--------------------------------------------------------------------------------
0007ca9c: RLP; jmp 0x7c9b4
read: 
write: 
--------------------------------------------------------------------------------
0007caba: RLP; jmp 0x7c542
read: 
write: 
--------------------------------------------------------------------------------
0007cb41: RLP; jmp 0x7c78e
read: 
write: 
--------------------------------------------------------------------------------
0007cba0: RLP; cmp rax, -1 ; je 0x7c9b4
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0007cbe5: RLP; test eax, eax ; mov r10, qword ptr [rsp + 8] ; js 0x7cc35
read: eax rflags 
write: r10 rflags 
--------------------------------------------------------------------------------
0007cc0c: RLP; xor edx, edx ; test eax, eax ; mov ecx, dword ptr [rsp + 8] ; mov r10, qword ptr [rsp + 0x18] ; jle 0x7cc25
read: eax edx rflags 
write: ecx edx r10 rflags 
--------------------------------------------------------------------------------
0007ccb5: RLP; add rsp, 0x80 ; mov rax, qword ptr [rdx + 8] ; cmp rax, 0x10 ; jbe 0x7ccd4
read: rax rflags rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
0007cd07: RLP; add rsp, 0x80 ; lea rdx, [rbx + 0x10] ; jmp 0x7caab
read: rsp 
write: rdx rflags rsp 
--------------------------------------------------------------------------------
0007cd43: RLP; add rsp, 0x80 ; jmp 0x7c49e
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0007cd94: RLP; jmp 0x7c90f
read: 
write: 
--------------------------------------------------------------------------------
0007ce1e: RLP; jmp 0x7c5c9
read: 
write: 
--------------------------------------------------------------------------------
0007ce4b: RLP; mov r9, rax ; jmp 0x7c4b0
read: rax 
write: r9 
--------------------------------------------------------------------------------
0007cec4: RLP; jmp 0x7c613
read: 
write: 
--------------------------------------------------------------------------------
0007d08a: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0007d0b8: RLP; jmp 0x7d08a
read: 
write: 
--------------------------------------------------------------------------------
0007d109: RLP; add rsp, 0x80 ; xor esi, esi ; mov rdi, rbx ; call 0x7b47c
read: esi rbx rip rsp 
write: esi rdi rflags rsp 
--------------------------------------------------------------------------------
0007d11e: RLP; test rax, rax ; mov rsi, rax ; je 0x7d1d4
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
0007d145: RLP; cmp dword ptr [rip + 0x2f1624], 0 ; je 0x7d159
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
0007d178: RLP; add rsp, 0x80 ; pop rbx ; ret
read: rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
0007d1b7: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x7bd7c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
0007d1ca: RLP; pop rbx ; nop ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
0007d207: RLP; add rsp, 0x80 ; mov edi, dword ptr [rip + 0x2ebf18] ; lea rsi, [rip + 0xb8848] ; mov rdx, rbx ; call 0x7bc8c
read: rbx rip rsp 
write: edi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0007d227: RLP; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
0007d3a0: RLP; mov r8d, dword ptr [rsp] ; mov eax, ebp ; lea r15, [rbx + 0x58] ; shr eax, 4 ; mov dword ptr [rsp], eax ; mov rax, rbp ; shr rax, 6 ; mov qword ptr [rsp + 0x10], rax ; add eax, 0x30 ; mov dword ptr [rsp + 0x18], eax ; mov rax, rbp ; shr rax, 9 ; mov qword ptr [rsp + 0x20], rax ; add eax, 0x5b ; mov dword ptr [rsp + 0x28], eax
read: eax ebp rax rbp 
write: eax r15 r8d rax rflags 
--------------------------------------------------------------------------------
0007d6a2: RLP; jmp 0x7d352
read: 
write: 
--------------------------------------------------------------------------------
0007d797: RLP; cmp rbp, 0x3ff ; mov r8d, dword ptr [rsp] ; jbe 0x7d418
read: rbp rflags 
write: r8d rflags 
--------------------------------------------------------------------------------
0007db09: RLP; mov rsi, qword ptr [r12 + 8] ; mov r8d, dword ptr [rsp + 0x54] ; mov rax, qword ptr [rsp + 0x58] ; jmp 0x7d498
read: 
write: r8d rax rsi 
--------------------------------------------------------------------------------
0007dd76: RLP; test rax, rax ; mov r8d, dword ptr [rsp + 0x28] ; je 0x7e1d9
read: rax rflags 
write: r8d rflags 
--------------------------------------------------------------------------------
0007de58: RLP; mov rdx, rax ; mov eax, dword ptr [rip + 0x2eb7bf] ; mov rcx, qword ptr [rsp + 0x28] ; and eax, 2 ; test rdx, rdx ; je 0x7dedb
read: eax rax rdx rflags 
write: eax rcx rdx rflags 
--------------------------------------------------------------------------------
0007de88: RLP; mov rdx, qword ptr [rsp + 0x28] ; xor eax, eax ; cmp qword ptr [rip + 0x2eb2f5], 0 ; jne 0x7dea0
read: eax rflags 
write: eax rdx rflags 
--------------------------------------------------------------------------------
0007dfb4: RLP; test rax, rax ; mov rcx, qword ptr [rsp + 0x10] ; je 0x7e0bb
read: rax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
0007e065: RLP; mov rdx, qword ptr [rip + 0x2ebe28] ; mov rax, qword ptr [rip + 0x2eb601] ; jmp 0x7dcd1
read: 
write: rax rdx 
--------------------------------------------------------------------------------
0007e090: RLP; jmp 0x7df0a
read: 
write: 
--------------------------------------------------------------------------------
0007e0a5: RLP; mov rsi, qword ptr [rip + 0x2ebde8] ; mov rcx, qword ptr [rsp + 0x10] ; mov rax, qword ptr [rsp + 0x20] ; jmp 0x7dfdc
read: 
write: rax rcx rsi 
--------------------------------------------------------------------------------
0007e0c5: RLP; test rax, rax ; je 0x7df0a
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0007e132: RLP; jmp 0x7e0c5
read: 
write: 
--------------------------------------------------------------------------------
0007e155: RLP; cmp rax, -1 ; mov rdx, rax ; je 0x7df0a
read: rax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
0007e1c9: RLP; mov rdx, qword ptr [rbx + 0x878] ; mov rax, qword ptr [rbx + 0x58] ; jmp 0x7dcd1
read: 
write: rax rdx 
--------------------------------------------------------------------------------
0007e21d: RLP; test eax, eax ; mov r10, qword ptr [rsp + 0x18] ; mov r8d, dword ptr [rsp + 0x40] ; jne 0x7dd58
read: eax rflags 
write: r10 r8d rflags 
--------------------------------------------------------------------------------
0007e264: RLP; jmp 0x7d352
read: 
write: 
--------------------------------------------------------------------------------
0007e286: RLP; mov r8, qword ptr [rsp] ; jmp 0x7d93b
read: 
write: r8 
--------------------------------------------------------------------------------
0007e2fe: RLP; cmp rax, -1 ; je 0x7dbe2
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0007e46e: RLP; mov r8, qword ptr [rsp] ; jmp 0x7da0b
read: 
write: r8 
--------------------------------------------------------------------------------
0007e62a: RLP; add rsp, 0x80 ; call 0x7c2ac
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0007e63a: RLP; xor edx, edx ; test eax, eax ; js 0x7e657
read: eax edx rflags 
write: edx rflags 
--------------------------------------------------------------------------------
0007e654: RLP; mov rdx, rax ; cmp dword ptr [rip + 0x2f0112], 0 ; je 0x7e66b
read: rax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
0007e68a: RLP; add rsp, 0x80 ; mov rsi, rbx ; mov rdi, rdx ; call 0x7b3fc
read: rbx rdx rip rsp 
write: rdi rflags rsi rsp 
--------------------------------------------------------------------------------
0007e6a0: RLP; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
0007e70f: RLP; test rax, rax ; mov rcx, rax ; je 0x7e8bc
read: rax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
0007e7b6: RLP; cmp r12, r14 ; ja 0x7e8c3
read: r12 r14 rflags 
write: rflags 
--------------------------------------------------------------------------------
0007e857: RLP; jmp 0x7e7e4
read: 
write: 
--------------------------------------------------------------------------------
0007e993: RLP; add rsp, 0x80 ; call 0x7c2ac
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0007e9a3: RLP; xor edx, edx ; test eax, eax ; js 0x7e9c3
read: eax edx rflags 
write: edx rflags 
--------------------------------------------------------------------------------
0007e9c0: RLP; mov rdx, rax ; cmp dword ptr [rip + 0x2efda6], 0 ; je 0x7e9d7
read: rax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
0007e9f6: RLP; add rsp, 0x80 ; mov rsi, rbp ; mov rdi, rdx ; call 0x7b3fc
read: rbp rdx rip rsp 
write: rdi rflags rsi rsp 
--------------------------------------------------------------------------------
0007ea0c: RLP; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0007ea42: RLP; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0007eba4: RLP; lea rax, [rbx + 0x10] ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: rsp 
write: r12 r13 r14 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0007ec11: RLP; test rax, rax ; mov r14, rax ; je 0x7ed5a
read: rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
0007ecc0: RLP; add rsp, 0x10 ; mov rax, r14 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: r14 rsp 
write: r12 r13 r14 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0007ece4: RLP; jmp 0x7ecac
read: 
write: 
--------------------------------------------------------------------------------
0007ed7b: RLP; xor eax, eax ; jmp 0x7eba8
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
0007ee06: RLP; mov rax, qword ptr [rbx + 8] ; mov rcx, qword ptr [rsp + 8] ; jmp 0x7eb41
read: 
write: rax rcx 
--------------------------------------------------------------------------------
0007ef1c: RLP; add rsp, 0x80 ; lea rsi, [rsp + 0x18] ; mov rdi, rbp ; call 0x7b47c
read: rbp rip rsp 
write: rdi rflags rsi rsp 
--------------------------------------------------------------------------------
0007ef34: RLP; mov r12, rax ; cmp dword ptr [rip + 0x2ef832], 0 ; je 0x7ef4b
read: rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
0007ef6a: RLP; add rsp, 0x80 ; test r12, r12 ; je 0x7f114
read: r12 rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0007efe6: RLP; add rsp, 0x80 ; test byte ptr [r12 + 8], 2 ; jne 0x7f09c
read: rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0007f002: RLP; test eax, eax ; js 0x7f0ec
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0007f034: RLP; mov rbp, rax ; test rbp, rbp ; je 0x7f0ec
read: rax rbp rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
0007f073: RLP; add rsp, 0x80 ; mov rsi, rbx ; mov rdi, rbp ; call 0x7b3fc
read: rbp rbx rip rsp 
write: rdi rflags rsi rsp 
--------------------------------------------------------------------------------
0007f089: RLP; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0007f0b0: RLP; test rax, rax ; mov rdx, qword ptr [rsp + 8] ; je 0x7f144
read: rax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
0007f107: RLP; xor eax, eax ; jmp 0x7f089
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
0007f12d: RLP; xor esi, esi ; mov rdi, rbx ; call 0x7e5dc
read: esi rbx rip rsp 
write: esi rdi rflags rsp 
--------------------------------------------------------------------------------
0007f13b: RLP; jmp 0x7f089
read: 
write: 
--------------------------------------------------------------------------------
0007f15f: RLP; test eax, eax ; js 0x7f0ec
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0007f17b: RLP; test rax, rax ; mov r14, rax ; je 0x7f0ec
read: rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
0007f19d: RLP; mov rdi, r12 ; call 0x7bd7c
read: r12 rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0007f1a9: RLP; jmp 0x7f040
read: 
write: 
--------------------------------------------------------------------------------
0007f214: RLP; add rsp, 0x80 ; mov rbx, qword ptr [rip + 0x2ec62a] ; test rbx, rbx ; je 0x7f235
read: rbx rflags rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
0007f268: RLP; add rsp, 0x80 ; test rbx, rbx ; je 0x7f2c4
read: rbx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0007f2a4: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x2e9aca] ; mov qword ptr fs:[rax], rbx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
read: rbx rsp 
write: r12 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0007f37e: RLP; test eax, eax ; jle 0x7f40b
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0007f3d9: RLP; add rsp, 0x80 ; jmp 0x7f354
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0007f472: RLP; test rax, rax ; mov rbp, rax ; je 0x7f5d5
read: rax rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
0007f492: RLP; mov rdx, qword ptr [rbp + 0x10] ; lea rcx, [rbp + 0x8b8] ; add qword ptr [rip + 0x2ec3a0], rdx ; lea rax, [rbp + 0x8a8] ; and ecx, 0xf ; mov qword ptr [rbp + 0x8a0], rdx ; mov qword ptr [rbp + 0x898], rdx ; je 0x7f4c5
read: ecx rdx rflags 
write: ecx rax rcx rdx rflags 
--------------------------------------------------------------------------------
0007f519: RLP; add rsp, 0x80 ; mov esi, 1 ; xor eax, eax ; cmp dword ptr [rip + 0x2ef242], 0 ; je 0x7f53c
read: eax rflags rsp 
write: eax esi rflags rsp 
--------------------------------------------------------------------------------
0007f55c: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x2ea91a] ; mov qword ptr [rbp + 0x888], rax ; mov qword ptr [rip + 0x2ea90c], rbx ; cmp dword ptr [rip + 0x2ef1f1], 0 ; je 0x7f58c
read: rax rbx rflags rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
0007f5ab: RLP; add rsp, 0x80 ; test rbx, rbx ; jne 0x7f2b6
read: rbx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0007f5ea: RLP; test rax, rax ; mov rbp, rax ; jne 0x7f47e
read: rax rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
0007f636: RLP; add rsp, 0x80 ; mov esi, 1 ; xor eax, eax ; cmp dword ptr [rip + 0x2ef125], 0 ; je 0x7f659
read: eax rflags rsp 
write: eax esi rflags rsp 
--------------------------------------------------------------------------------
0007f679: RLP; add rsp, 0x80 ; lea rax, [rip + 0x2e9f95] ; ret
read: rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
0007f6ba: RLP; add rsp, 0x80 ; lea rsi, [rip + 0x2e9f54] ; mov rdi, r8 ; call 0x7f1bc
read: r8 rip rsp 
write: rdi rflags rsi rsp 
--------------------------------------------------------------------------------
0007f6d4: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0007f7b0: RLP; add rsp, 0x80 ; mov rsi, rbp ; mov rdi, rbx ; call 0x7d22c
read: rbp rbx rip rsp 
write: rdi rflags rsi rsp 
--------------------------------------------------------------------------------
0007f7c6: RLP; test rax, rax ; mov rdx, rax ; je 0x7f85c
read: rax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
0007f7f9: RLP; add rsp, 0x80 ; mov rax, qword ptr [rdx - 8] ; test al, 2 ; jne 0x7f81c
read: al rflags rsp 
write: al rax rflags rsp 
--------------------------------------------------------------------------------
0007f847: RLP; test rax, rax ; mov rbx, rax ; jne 0x7f7b7
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
0007f86b: RLP; test rax, rax ; mov rbx, rax ; je 0x7f853
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
0007f882: RLP; mov rdx, rax ; cmp dword ptr [rip + 0x2eeee4], 0 ; je 0x7f895
read: rax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
0007f8ac: RLP; add rsp, 0x80 ; test rdx, rdx ; jne 0x7f800
read: rdx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0007f8cb: RLP; nop ; jmp 0x7f81f
read: 
write: 
--------------------------------------------------------------------------------
0007f952: RLP; add rsp, 0x80 ; cmp dword ptr [rip + 0x2eee10], 0 ; je 0x7f96d
read: rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0007f98c: RLP; add rsp, 0x80 ; mov rdi, rbx ; call 0x7f74c
read: rbx rip rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
0007f99f: RLP; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
0007f9c7: RLP; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
0007f9d5: RLP; test eax, eax ; nop dword ptr [rax + rax] ; js 0x7fa03
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0007f9f2: RLP; mov rsi, rbx ; mov rdi, rax ; call 0x7b3fc
read: rax rbx rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
0007fa01: RLP; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
0007fa1f: RLP; test rax, rax ; mov rbx, rax ; je 0x7fc39
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
0007fa67: RLP; add rsp, 0x80 ; lea rdi, [rip + 0x2e9ba7] ; call 0x7be1c
read: rip rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
0007fa7e: RLP; mov rax, qword ptr [rip + 0x2e9bef] ; mov qword ptr [rbx], 0x444c4541 ; lea rdx, [rip + 0x2e9be1] ; mov qword ptr [rbx + 8], 4 ; mov qword ptr [rbx + 0x10], 0 ; lea rcx, [rbx + 0x38] ; mov qword ptr [rbx + 0x18], 0 ; mov qword ptr [rbx + 0x28], 0 ; lea rdi, [rip + 0x2ea3a6] ; mov qword ptr [rbx + 0x20], rax ; jmp 0x7fae5
read: rax 
write: rax rcx rdi rdx 
--------------------------------------------------------------------------------
0007fc2d: RLP; add rsp, 0x80 ; mov rax, rbx ; pop rbx ; ret
read: rbx rsp 
write: rax rbx rflags rsp 
--------------------------------------------------------------------------------
0007fd0e: RLP; add rsp, 0x80 ; mov rdx, r12 ; mov rsi, rbx ; mov rdi, rbp ; call 0x7e6cc
read: r12 rbp rbx rip rsp 
write: rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0007fd27: RLP; test rax, rax ; mov rdx, rax ; je 0x7fe24
read: rax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
0007fd5d: RLP; add rsp, 0x80 ; mov rax, qword ptr [rdx - 8] ; test al, 2 ; jne 0x7fd80
read: al rflags rsp 
write: al rax rflags rsp 
--------------------------------------------------------------------------------
0007fdb0: RLP; pop rbx ; pop rbp ; pop r12 ; ret
read: rsp 
write: r12 rbp rbx rsp 
--------------------------------------------------------------------------------
0007fe0c: RLP; test rax, rax ; mov rbp, rax ; jne 0x7fd15
read: rax rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
0007fe33: RLP; test rax, rax ; mov rbp, rax ; je 0x7fe18
read: rax rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
0007fe4d: RLP; mov rdx, rax ; cmp dword ptr [rip + 0x2ee919], 0 ; je 0x7fe61
read: rax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
0007fe7a: RLP; add rsp, 0x80 ; test rdx, rdx ; jne 0x7fd64
read: rdx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0007fe97: RLP; nop dword ptr [rax + rax] ; jmp 0x7fd83
read: 
write: 
--------------------------------------------------------------------------------
0007ff16: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0007ff58: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0007ff68: RLP; jmp 0x7ff16
read: 
write: 
--------------------------------------------------------------------------------
00080043: RLP; add rsp, 0x80 ; mov rsi, r12 ; mov rcx, r13 ; mov rdx, r15 ; mov rdi, rbx ; call 0x7ea7c
read: r12 r13 r15 rbx rip rsp 
write: rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0008005f: RLP; mov rsi, rax ; cmp dword ptr [rip + 0x2ee707], 0 ; je 0x80072
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
00080089: RLP; add rsp, 0x80 ; test rsi, rsi ; je 0x8016c
read: rflags rsi rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000800db: RLP; test rax, rax ; lea rsi, [rax + 0x10] ; jne 0x800b9
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
00080101: RLP; test rax, rax ; mov rbx, rax ; je 0x801f0
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
00080122: RLP; mov rdi, r12 ; call 0x7bd7c
read: r12 rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0008012e: RLP; mov rsi, rbx ; jmp 0x800b9
read: rbx 
write: rsi 
--------------------------------------------------------------------------------
00080178: RLP; xor esi, esi ; test rax, rax ; mov r13, rax ; je 0x800b9
read: esi rax rflags 
write: esi r13 rflags 
--------------------------------------------------------------------------------
00080199: RLP; mov rsi, r12 ; xor edx, edx ; mov rdi, rbx ; call 0x7c41c
read: edx r12 rbx rip rsp 
write: edx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000801aa: RLP; mov rsi, r13 ; jmp 0x800b9
read: r13 
write: rsi 
--------------------------------------------------------------------------------
000801ce: RLP; xor esi, esi ; jmp 0x800b9
read: esi 
write: esi rflags 
--------------------------------------------------------------------------------
000801e8: RLP; mov rsi, rax ; jmp 0x800b9
read: rax 
write: rsi 
--------------------------------------------------------------------------------
00080210: RLP; xor esi, esi ; jmp 0x800b9
read: esi 
write: esi rflags 
--------------------------------------------------------------------------------
00080222: RLP; mov rsi, rax ; jmp 0x800b9
read: rax 
write: rsi 
--------------------------------------------------------------------------------
00080262: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000802ec: RLP; add rsp, 0x80 ; mov r13, qword ptr [rbx + 0x58] ; lea rax, [rip + 0x2e931e] ; mov rbp, qword ptr [r13 + 8] ; and rbp, 0xfffffffffffffff8 ; cmp rbx, rax ; je 0x80323
read: rax rbp rbx rflags rsp 
write: r13 rax rbp rflags rsp 
--------------------------------------------------------------------------------
00080332: RLP; test rax, rax ; mov r8, rax ; je 0x804b4
read: rax rflags 
write: r8 rflags 
--------------------------------------------------------------------------------
0008038e: RLP; add rsp, 0x80 ; mov rdx, qword ptr [r8 - 8] ; test dl, 2 ; je 0x803bc
read: dl rflags rsp 
write: rdx rflags rsp 
--------------------------------------------------------------------------------
0008047a: RLP; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rsp 
write: r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0008049a: RLP; test rax, rax ; mov rbx, rax ; jne 0x802f3
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000804c3: RLP; test rax, rax ; mov rbx, rax ; je 0x804a6
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000804da: RLP; mov r8, rax ; cmp dword ptr [rip + 0x2ee28c], 0 ; je 0x804ed
read: rax rflags 
write: r8 rflags 
--------------------------------------------------------------------------------
00080504: RLP; add rsp, 0x80 ; test r8, r8 ; jne 0x80395
read: r8 rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00080548: RLP; test rax, rax ; je 0x804a6
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00080562: RLP; jmp 0x803af
read: 
write: 
--------------------------------------------------------------------------------
000805a7: RLP; jmp 0x803af
read: 
write: 
--------------------------------------------------------------------------------
000806a7: RLP; xor eax, eax ; jmp 0x80603
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
00080715: RLP; add rsp, 0x80 ; lea rdi, [rip + 0x2e8ef9] ; call 0x7be1c
read: rip rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
0008072c: RLP; lea edi, [rbp + 8] ; cmp edi, 9 ; ja 0x808bc
read: edi rflags 
write: edi rflags 
--------------------------------------------------------------------------------
000807cf: RLP; add rsp, 0x80 ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
read: edx rsp 
write: eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000808d5: RLP; jmp 0x806d9
read: 
write: 
--------------------------------------------------------------------------------
0008097c: RLP; mov rax, qword ptr [rip + 0x2e8459] ; mov rbx, qword ptr [rax] ; test rbx, rbx ; je 0x809c0
read: rbx rflags 
write: rax rbx rflags 
--------------------------------------------------------------------------------
000809d5: RLP; mov dword ptr [rip + 0x2e8741], 1 ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: rsp 
write: r12 r13 r14 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000809fd: RLP; mov r8d, dword ptr [rip + 0x2e8728] ; test r8d, r8d ; je 0x809c0
read: r8d rflags 
write: r8d rflags 
--------------------------------------------------------------------------------
00080a12: RLP; jmp 0x809c0
read: 
write: 
--------------------------------------------------------------------------------
00080a30: RLP; test eax, eax ; je 0x80915
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00080aff: RLP; test eax, eax ; cmove r12, rbp ; jmp 0x809aa
read: eax r12 rbp rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
00080b39: RLP; test eax, eax ; je 0x80bea
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00080b59: RLP; test eax, eax ; jne 0x809aa
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00080b75: RLP; mov edi, 0xfffffffd ; mov esi, eax ; call 0x806bc
read: eax rip rsp 
write: edi esi rsp 
--------------------------------------------------------------------------------
00080b85: RLP; jmp 0x809aa
read: 
write: 
--------------------------------------------------------------------------------
00080bb9: RLP; test eax, eax ; jne 0x809aa
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00080bd5: RLP; mov edi, 0xfffffff9 ; mov esi, eax ; call 0x806bc
read: eax rip rsp 
write: edi esi rsp 
--------------------------------------------------------------------------------
00080be5: RLP; jmp 0x809aa
read: 
write: 
--------------------------------------------------------------------------------
00080bfe: RLP; mov edi, 0xffffffff ; mov esi, eax ; call 0x806bc
read: eax rip rsp 
write: edi esi rsp 
--------------------------------------------------------------------------------
00080c0e: RLP; jmp 0x809aa
read: 
write: 
--------------------------------------------------------------------------------
00080c42: RLP; test eax, eax ; je 0x80d0d
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00080c62: RLP; test eax, eax ; jne 0x809aa
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00080c7e: RLP; mov edi, 0xfffffff8 ; mov esi, eax ; call 0x806bc
read: eax rip rsp 
write: edi esi rsp 
--------------------------------------------------------------------------------
00080c8e: RLP; jmp 0x809aa
read: 
write: 
--------------------------------------------------------------------------------
00080cc0: RLP; test eax, eax ; je 0x80d36
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00080cdc: RLP; test eax, eax ; jne 0x809aa
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00080cf8: RLP; mov edi, 0xfffffffa ; mov esi, eax ; call 0x806bc
read: eax rip rsp 
write: edi esi rsp 
--------------------------------------------------------------------------------
00080d08: RLP; jmp 0x809aa
read: 
write: 
--------------------------------------------------------------------------------
00080d21: RLP; mov edi, 0xfffffffc ; mov esi, eax ; call 0x806bc
read: eax rip rsp 
write: edi esi rsp 
--------------------------------------------------------------------------------
00080d31: RLP; jmp 0x809aa
read: 
write: 
--------------------------------------------------------------------------------
00080d4a: RLP; mov edi, 0xfffffffe ; mov esi, eax ; call 0x806bc
read: eax rip rsp 
write: edi esi rsp 
--------------------------------------------------------------------------------
00080d5a: RLP; jmp 0x809aa
read: 
write: 
--------------------------------------------------------------------------------
00080d89: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00080dc5: RLP; add rsp, 0x18 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00080dda: RLP; mov rdi, qword ptr [rsp + 8] ; call 0x7f74c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
00080de8: RLP; add rsp, 0x18 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00080e33: RLP; add rsp, 0x18 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00080e4e: RLP; mov rsi, qword ptr [rsp + 8] ; mov rdi, qword ptr [rsp] ; call 0x7ff6c
read: rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
00080e60: RLP; add rsp, 0x18 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00080e9a: RLP; add rsp, 0x18 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00080eb6: RLP; mov rsi, qword ptr [rsp + 8] ; mov rdi, qword ptr [rsp] ; mov rdx, qword ptr [rsp + 0x18] ; call 0x7fc4c
read: rip rsp 
write: rdi rdx rsi rsp 
--------------------------------------------------------------------------------
00080ecd: RLP; add rsp, 0x18 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00080f58: RLP; add rsp, 0x80 ; cmp dword ptr fs:[0x18], 0 ; je 0x80f6b
read: rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0008133a: RLP; add rsp, 0x80 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
read: eax rsp 
write: eax r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000813e4: RLP; mov rcx, qword ptr [rbx + 8] ; jmp 0x812d7
read: 
write: rcx 
--------------------------------------------------------------------------------
000813f6: RLP; cmp qword ptr [rbx], 0x444c4541 ; je 0x80f0e
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
0008146c: RLP; add rsp, 0x18 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00081482: RLP; mov rsi, qword ptr [rsp + 8] ; jmp 0x81453
read: 
write: rsi 
--------------------------------------------------------------------------------
000814dd: RLP; add rsp, 0x18 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00081512: RLP; mov rdi, qword ptr [rsp + 8] ; jmp 0x814a0
read: 
write: rdi 
--------------------------------------------------------------------------------
0008158c: RLP; add rsp, 0x80 ; mov rdi, rdx ; call 0x7be1c
read: rdx rip rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
0008159f: RLP; mov rax, qword ptr [rip + 0x2e78b6] ; mov r14, qword ptr [rax + 0x18] ; cmp r14, 0x3ff ; ja 0x816fc
read: r14 rflags 
write: r14 rax rflags 
--------------------------------------------------------------------------------
00081655: RLP; mov rbx, qword ptr [rbx + 0x18] ; mov r9d, 1 ; cmp r15, rbx ; jne 0x81605
read: r15 rbx rflags 
write: r9d rbx rflags 
--------------------------------------------------------------------------------
000816c6: RLP; add rsp, 0x80 ; mov rax, qword ptr [rsi + 0x868] ; lea rcx, [rip + 0x2e7f41] ; cmp rax, rcx ; mov qword ptr [rsp + 8], rax ; jne 0x81557
read: rax rcx rflags rsp 
write: rax rcx rflags rsp 
--------------------------------------------------------------------------------
00081791: RLP; mov r9d, dword ptr [rsp + 0x10] ; jmp 0x81693
read: 
write: r9d 
--------------------------------------------------------------------------------
000817de: RLP; jmp 0x81543
read: 
write: 
--------------------------------------------------------------------------------
0008189a: RLP; add rsp, 0x80 ; mov rsi, r13 ; mov rdi, rbx ; call 0x7c18c
read: r13 rbx rip rsp 
write: rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000818b0: RLP; cmp dword ptr [rip + 0x2eceb9], 0 ; je 0x818c0
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000818d7: RLP; add rsp, 0x80 ; mov rbx, qword ptr [rbx + 0x868] ; cmp rbx, rbp ; jne 0x8186c
read: rbp rbx rflags rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
00081935: RLP; jmp 0x8182d
read: 
write: 
--------------------------------------------------------------------------------
000819f8: RLP; add rsp, 0x80 ; mov rsi, qword ptr [rsp] ; mov rdi, rbx ; mov rbp, rsi ; call 0x7c18c
read: rbx rip rsi rsp 
write: rbp rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00081a12: RLP; mov rdi, qword ptr [r12] ; lea rsi, [rip + 0xb4229] ; mov edx, r13d ; xor eax, eax ; call 0x5212c
read: eax r13d rip rsp 
write: eax edx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00081a2b: RLP; mov edx, dword ptr [rsp + 0x10] ; mov rdi, qword ptr [r12] ; lea rsi, [rip + 0xb4217] ; xor eax, eax ; call 0x5212c
read: eax rip rsp 
write: eax edx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00081a45: RLP; mov edx, dword ptr [rsp + 0x2c] ; mov rdi, qword ptr [r12] ; lea rsi, [rip + 0xb4216] ; xor eax, eax ; call 0x5212c
read: eax rip rsp 
write: eax edx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00081a5f: RLP; add r14d, dword ptr [rsp + 0x10] ; add r15d, dword ptr [rsp + 0x2c] ; cmp dword ptr [rip + 0x2ecd00], 0 ; je 0x81a79
read: r14d r15d rflags 
write: r14d r15d rflags 
--------------------------------------------------------------------------------
00081a90: RLP; add rsp, 0x80 ; mov rbx, qword ptr [rbx + 0x868] ; lea rax, [rip + 0x2e7b77] ; cmp rbx, rax ; jne 0x8199c
read: rax rbx rflags rsp 
write: rax rbx rflags rsp 
--------------------------------------------------------------------------------
00081ad5: RLP; mov r8d, dword ptr [rsp] ; mov rdi, qword ptr [r12] ; lea rsi, [rip + 0xb416d] ; xor eax, eax ; mov edx, r8d ; call 0x5212c
read: eax r8d rip rsp 
write: eax edx r8d rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00081af2: RLP; mov r9d, dword ptr [rsp + 0xc] ; mov rdi, qword ptr [r12] ; lea rsi, [rip + 0xb4168] ; xor eax, eax ; mov edx, r9d ; call 0x5212c
read: eax r9d rip rsp 
write: eax edx r9d rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00081b10: RLP; mov rdi, qword ptr [r12] ; mov edx, dword ptr [rip + 0x2e7652] ; lea rsi, [rip + 0xb4177] ; xor eax, eax ; call 0x5212c
read: eax rip rsp 
write: eax edx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00081b2c: RLP; mov rdi, qword ptr [r12] ; mov rdx, qword ptr [rip + 0x2e7645] ; lea rsi, [rip + 0xb4173] ; xor eax, eax ; call 0x5212c
read: eax rip rsp 
write: eax rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00081b49: RLP; mov rax, qword ptr [r12] ; mov ecx, dword ptr [rsp + 8] ; or dword ptr [rax + 0x74], ecx ; add rsp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: ecx rsp 
write: ecx r12 r13 r14 r15 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00081b75: RLP; jmp 0x81966
read: 
write: 
--------------------------------------------------------------------------------
00081bce: RLP; mov rdx, rax ; mov eax, 0xc ; test rdx, rdx ; je 0x81bab
read: rax rdx rflags 
write: eax rdx rflags 
--------------------------------------------------------------------------------
00081c3b: RLP; lea rax, [rip + 0x2e79da] ; mov qword ptr [rsp + 0x40], 0 ; mov qword ptr [rsp + 0x38], 0 ; mov qword ptr [rsp + 0x78], 0 ; mov qword ptr [rsp + 0x70], 0 ; xor edx, edx ; mov qword ptr [rsp + 0x30], rax ; lea rax, [rsp + 0xa0] ; mov qword ptr [rsp + 0x68], 0 ; mov qword ptr [rsp + 0x60], 0 ; mov qword ptr [rsp + 0x58], 0 ; mov qword ptr [rsp + 0x48], rax ; lea rax, [rsp + 0x1e8] ; mov qword ptr [rsp + 0x50], 0 ; mov qword ptr [rsp + 0x98], rax
read: edx rax 
write: edx rax rflags 
--------------------------------------------------------------------------------
00081ccd: RLP; mov esi, 1 ; xor eax, eax ; mov rbx, qword ptr [rsp + 0x30] ; cmp dword ptr [rip + 0x2eca90], 0 ; je 0x81cea
read: eax rflags 
write: eax esi rbx rflags 
--------------------------------------------------------------------------------
00081d02: RLP; add rsp, 0x80 ; mov rax, qword ptr [rsp + 0x48] ; mov r10, qword ptr [rsp + 0x98] ; mov rdi, rbx ; xor r9d, r9d ; xor r8d, r8d ; lea rcx, [rax + 8] ; nop word ptr [rax + rax] ; mov rax, qword ptr [rdi + 8] ; test rax, rax ; je 0x81ff8
read: r8d r9d rax rbx rflags rsp 
write: r10 r8d r9d rax rcx rdi rflags rsp 
--------------------------------------------------------------------------------
00081e89: RLP; add rsp, 0x80 ; mov rax, qword ptr [rsp + 0x80] ; add qword ptr [rsp + 0x58], rax ; mov ebx, 1 ; mov rax, qword ptr [rsp + 0x88] ; add qword ptr [rsp + 0x68], rax ; mov rax, qword ptr [rsp + 0x48] ; add qword ptr [rsp + 0x50], rbp ; add qword ptr [rsp + 0x60], r13 ; lea r14, [rax + 0x18] ; jmp 0x81ed4
read: r13 rax rbp rsp 
write: ebx r14 rax rflags rsp 
--------------------------------------------------------------------------------
00081f03: RLP; cmp rbx, 0x89 ; jne 0x81ecc
read: rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
00081f6e: RLP; lea rdi, [rip + 0x2e76a7] ; cmp rbx, rdi ; je 0x82048
read: rbx rdi rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
00081fa6: RLP; mov rax, qword ptr [rbx + 0x10] ; add qword ptr [rsp + 0x38], rax ; mov rax, qword ptr [rbx + 0x18] ; add qword ptr [rsp + 0x40], rax ; lea rdi, [rip + 0xb3d3a] ; mov rsi, r12 ; lea rbx, [rip + 0x2e7653] ; call 0x6cd6c
read: r12 rax rip rsp 
write: rax rbx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00081fd2: RLP; mov rax, qword ptr [rsp + 0x30] ; mov rax, qword ptr [rax + 0x868] ; cmp rax, rbx ; mov qword ptr [rsp + 0x30], rax ; je 0x8207d
read: rax rbx rflags 
write: rax rflags 
--------------------------------------------------------------------------------
00082043: RLP; jmp 0x81f1d
read: 
write: 
--------------------------------------------------------------------------------
00082067: RLP; mov rax, qword ptr [rip + 0x2e7e26] ; add qword ptr [rsp + 0x38], rax ; add qword ptr [rsp + 0x40], rax ; jmp 0x81fb8
read: rax 
write: rax rflags 
--------------------------------------------------------------------------------
000820e3: RLP; add rsp, 0x11c8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: eax rsp 
write: eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00082100: RLP; jmp 0x81c20
read: 
write: 
--------------------------------------------------------------------------------
0008211d: RLP; xor edx, edx ; cmp rax, -1 ; cmovne rdx, rax ; add rsp, 8 ; mov rax, rdx ; ret
read: edx rax rdx rflags rsp 
write: edx rax rdx rflags rsp 
--------------------------------------------------------------------------------
0008217a: RLP; mov rdi, rax ; call 0x7639c
read: rax rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0008219e: RLP; jmp 0x8217a
read: 
write: 
--------------------------------------------------------------------------------
000821c0: RLP; jmp 0x8217a
read: 
write: 
--------------------------------------------------------------------------------
000821de: RLP; jmp 0x8217a
read: 
write: 
--------------------------------------------------------------------------------
000821fc: RLP; jmp 0x8217a
read: 
write: 
--------------------------------------------------------------------------------
0008224c: RLP; mov dword ptr [rip + 0x2e9612], 1 ; mov eax, ebx ; pop rbx ; ret
read: ebx rsp 
write: eax rbx rsp 
--------------------------------------------------------------------------------
0008231b: RLP; mov rbx, qword ptr [rbx + 0x18] ; test rbx, rbx ; jne 0x82305
read: rbx rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
0008239c: RLP; lea rsi, [rip - 0x67] ; test rax, rax ; mov qword ptr [r12], rsi ; je 0x8248c
read: rax rflags rsi 
write: rflags rsi 
--------------------------------------------------------------------------------
00082425: RLP; mov rcx, rax ; add rsp, 0x10 ; mov rax, rcx ; pop rbx ; pop rbp ; pop r12 ; ret
read: rax rcx rsp 
write: r12 rax rbp rbx rcx rflags rsp 
--------------------------------------------------------------------------------
0008244e: RLP; mov rdx, qword ptr [rsp + 8] ; mov rdi, qword ptr [rsp] ; jmp 0x82359
read: 
write: rdi rdx 
--------------------------------------------------------------------------------
00082465: RLP; jmp 0x8239c
read: 
write: 
--------------------------------------------------------------------------------
000824e6: RLP; lea rdi, [rip - 0x51] ; test rax, rax ; mov qword ptr [rbp], rdi ; je 0x825cc
read: rax rdi rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
0008256a: RLP; mov rcx, rax ; add rsp, 0x18 ; mov rax, rcx ; pop rbx ; pop rbp ; ret
read: rax rcx rsp 
write: rax rbp rbx rcx rflags rsp 
--------------------------------------------------------------------------------
0008258a: RLP; cmp rbx, -0x32 ; mov rsi, qword ptr [rsp + 8] ; jbe 0x824c1
read: rbx rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
000825c5: RLP; jmp 0x824e6
read: 
write: 
--------------------------------------------------------------------------------
0008262d: RLP; mov rdx, qword ptr [rbx - 0x30] ; mov qword ptr [rbx - 0x18], 0 ; mov rdi, rbx ; mov qword ptr [rbx - 0x20], 0 ; mov esi, 0xffffff95 ; call 0x891bc
read: rbx rip rsp 
write: esi rdi rdx rsp 
--------------------------------------------------------------------------------
00082652: RLP; mov rbx, qword ptr [rbx - 0x10] ; mov rax, qword ptr [rip + 0x2e9237] ; mov rbp, qword ptr [rip + 0x2e6880] ; test rax, rax ; mov qword ptr [rbp], rax ; je 0x826b4
read: rax rflags 
write: rax rbp rbx rflags 
--------------------------------------------------------------------------------
00082679: RLP; lea rax, [rip - 0xa4] ; mov qword ptr [rbp], rax ; pop rbx ; pop rbp ; pop r12 ; ret
read: rax rsp 
write: r12 rax rbp rbx rsp 
--------------------------------------------------------------------------------
00082695: RLP; jmp 0x825fa
read: 
write: 
--------------------------------------------------------------------------------
000826a9: RLP; nop dword ptr [rax] ; jmp 0x8260f
read: 
write: 
--------------------------------------------------------------------------------
000826c0: RLP; lea rax, [rip - 0xeb] ; mov qword ptr [rbp], rax ; pop rbx ; pop rbp ; pop r12 ; ret
read: rax rsp 
write: r12 rax rbp rbx rsp 
--------------------------------------------------------------------------------
0008274c: RLP; cmp r12, rbx ; jb 0x8289c
read: r12 rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
000827b5: RLP; mov r14, rax ; lea rax, [rip - 0x1e3] ; lea rcx, [rip - 0x32a] ; test r14, r14 ; mov qword ptr [r13], rax ; mov rax, qword ptr [rip + 0x2e6708] ; mov qword ptr [rax], rcx ; lea rax, [rip - 0x4a2] ; lea rcx, [rip - 0x109] ; mov qword ptr [rbp], rax ; mov rax, qword ptr [rip + 0x2e67e4] ; mov qword ptr [rax], rcx ; je 0x8292c
read: r14 rax rcx rflags 
write: r14 rax rcx rflags 
--------------------------------------------------------------------------------
00082875: RLP; jmp 0x82710
read: 
write: 
--------------------------------------------------------------------------------
00082895: RLP; jmp 0x82857
read: 
write: 
--------------------------------------------------------------------------------
000828b5: RLP; jmp 0x82755
read: 
write: 
--------------------------------------------------------------------------------
000828c8: RLP; nop dword ptr [rax] ; jmp 0x8273b
read: 
write: 
--------------------------------------------------------------------------------
000828e0: RLP; mov r14, rax ; jmp 0x827b8
read: rax 
write: r14 
--------------------------------------------------------------------------------
00082920: RLP; xor eax, eax ; jmp 0x8285b
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
00082993: RLP; mov qword ptr [rsp + 8], rax ; mov rdi, qword ptr [rsp + 8] ; call 0x1f46c
read: rax rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000829a6: RLP; mov rax, qword ptr [rip + 0x2e6537] ; lea rcx, [rip - 0x3d8] ; lea rsi, [rip - 0x51f] ; mov dword ptr [rip + 0x2e8ea3], 1 ; mov rdx, qword ptr [rax] ; mov qword ptr [rax], rcx ; lea rcx, [rip - 0x696] ; mov rax, qword ptr [rip + 0x2e6503] ; mov qword ptr [rip + 0x2e8eb4], rdx ; mov rdx, qword ptr [rax] ; mov qword ptr [rax], rsi ; lea rsi, [rip - 0x311] ; mov rax, qword ptr [rip + 0x2e64d8] ; mov qword ptr [rip + 0x2e8e91], rdx ; mov rdx, qword ptr [rax]
read: rcx rdx rsi 
write: rax rcx rdx rsi 
--------------------------------------------------------------------------------
00082a3d: RLP; test eax, eax ; jne 0x82a4b
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00082a7b: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00082aa6: RLP; test eax, eax ; mov eax, 0 ; mov esi, 1 ; cmove rbx, rax ; cmp dword ptr [rip + 0x2ebcb3], 0 ; je 0x82acb
read: eax rax rbx rflags 
write: eax esi rbx rflags 
--------------------------------------------------------------------------------
00082aeb: RLP; add rsp, 0x80 ; mov rax, rbx ; pop rbx ; ret
read: rbx rsp 
write: rax rbx rflags rsp 
--------------------------------------------------------------------------------
00082b50: RLP; lea rcx, [rax + 0x34] ; lea rdx, [rip + 0xb325c] ; lea r14, [rip + 0xb3251] ; and rcx, 0xfffffffffffffff0 ; sub rsp, rcx ; lea r13, [rsp + 0xf] ; and r13, 0xfffffffffffffff0 ; mov byte ptr [r13], 0x28 ; cmp r12, qword ptr [rbx + 0x18] ; lea rdi, [r13 + 1] ; mov rsi, qword ptr [rbx + 0x10] ; cmovb r14, rdx ; mov rdx, rax ; call 0x892cc
read: r12 r13 r14 rax rcx rdx rflags rip rsp 
write: r13 r14 rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00082b93: RLP; mov edx, dword ptr [r14] ; lea rsi, [rax + 3] ; mov rdi, r12 ; mov dword ptr [rax], edx ; mov rdx, qword ptr [rbx + 0x18] ; mov rax, rdx ; sub rdi, rdx ; sub rax, r12 ; cmp r12, rdx ; mov edx, 0x10 ; cmovb rdi, rax ; xor ecx, ecx ; call 0x4785c
read: ecx edx r12 rax rdi rdx rflags rip rsp 
write: ecx edx rax rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00082bc3: RLP; mov edx, 0x29 ; mov word ptr [rax], dx ; mov rdx, qword ptr [rbx] ; lea rcx, [rip + 0xb35c3] ; test rdx, rdx ; je 0x82c0c
read: dx rdx rflags 
write: edx rcx rdx rflags 
--------------------------------------------------------------------------------
00082bf9: RLP; lea rsp, [rbp - 0x20] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
read: rsp 
write: r12 r13 r14 rbp rbx rsp 
--------------------------------------------------------------------------------
00082c38: RLP; jmp 0x82bf9
read: 
write: 
--------------------------------------------------------------------------------
00082c66: RLP; mov r14, rax ; mov rax, qword ptr [rip + 0x2e8c34] ; mov r12, qword ptr [rip + 0x2e6255] ; mov rbp, qword ptr [rip + 0x2e625e] ; mov rdx, qword ptr [rip + 0x2e8c2f] ; test rax, rax ; mov qword ptr [r12], rax ; mov qword ptr [rbp], rdx ; je 0x82d3c
read: rax rdx rflags 
write: r12 r14 rax rbp rdx rflags 
--------------------------------------------------------------------------------
00082ca5: RLP; mov r15, rax ; lea rax, [rip - 0x73] ; mov rsi, r14 ; mov rdi, rbx ; mov qword ptr [r12], rax ; lea rax, [rip + 0x9c] ; mov qword ptr [rbp], rax ; call 0x82b0c
read: r14 rax rbx rip rsp 
write: r15 rax rdi rsi rsp 
--------------------------------------------------------------------------------
00082ccd: RLP; mov rdi, qword ptr [rip + 0x2e8c00] ; lea rsi, [rip + 0xb30f6] ; mov rcx, r13 ; mov rdx, r15 ; xor eax, eax ; call 0x5212c
read: eax r13 r15 rip rsp 
write: eax rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00082cec: RLP; cmp dword ptr [rip + 0x2eba7d], 0 ; je 0x82d00
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
00082d1f: RLP; add rsp, 0x80 ; add rsp, 0x28 ; mov rax, r15 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: r15 rsp 
write: r12 r13 r14 r15 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00082d4b: RLP; mov r15, rax ; jmp 0x82ca8
read: rax 
write: r15 
--------------------------------------------------------------------------------
00082d81: RLP; mov rdx, qword ptr [rip + 0x2e8b2c] ; mov rbp, qword ptr [rip + 0x2e614d] ; mov r14, rax ; test rdx, rdx ; mov qword ptr [rbp], rdx ; je 0x82e34
read: rax rdx rflags 
write: r14 rbp rdx rflags 
--------------------------------------------------------------------------------
00082dab: RLP; mov r12, rax ; lea rax, [rip - 0x59] ; mov rsi, r14 ; mov rdi, rbx ; mov qword ptr [rbp], rax ; call 0x82b0c
read: r14 rax rbx rip rsp 
write: r12 rax rdi rsi rsp 
--------------------------------------------------------------------------------
00082dc8: RLP; mov rdi, qword ptr [rip + 0x2e8b05] ; lea rsi, [rip + 0xb2ffb] ; mov rcx, r13 ; mov rdx, r12 ; xor eax, eax ; call 0x5212c
read: eax r12 r13 rip rsp 
write: eax rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00082de7: RLP; cmp dword ptr [rip + 0x2eb982], 0 ; je 0x82dfb
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
00082e1a: RLP; add rsp, 0x80 ; add rsp, 0x20 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: r12 rsp 
write: r12 r13 r14 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00082e40: RLP; mov r12, rax ; jmp 0x82dae
read: rax 
write: r12 
--------------------------------------------------------------------------------
00082e76: RLP; mov r14, qword ptr [rip + 0x2e6067] ; mov r15, rax ; mov rax, qword ptr [rip + 0x2e8a35] ; mov rcx, qword ptr [rip + 0x2e604e] ; mov qword ptr [r14], rax ; mov rax, qword ptr [rip + 0x2e8a1c] ; mov qword ptr [rcx], rax ; mov rax, qword ptr [rip + 0x2e8a0a] ; mov rcx, qword ptr [rip + 0x2e612b] ; test rax, rax ; mov qword ptr [rcx], rax ; je 0x82fdc
read: rax rflags 
write: r14 r15 rax rcx rflags 
--------------------------------------------------------------------------------
00082ec4: RLP; mov rbp, rax ; lea rax, [rip + 0x17e] ; lea rdx, [rip - 0x179] ; lea rcx, [rip - 0x90] ; mov rsi, r15 ; mov rdi, rbx ; mov qword ptr [r14], rax ; mov rax, qword ptr [rip + 0x2e5ff0] ; mov qword ptr [rax], rdx ; mov rax, qword ptr [rip + 0x2e60de] ; mov qword ptr [rax], rcx ; call 0x82b0c
read: r15 rax rbx rcx rdx rip rsp 
write: rax rbp rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
00082f02: RLP; test rbp, rbp ; je 0x82fac
read: rbp rflags 
write: rflags 
--------------------------------------------------------------------------------
00082f30: RLP; mov rsi, r15 ; mov rdi, rbx ; call 0x82b0c
read: r15 rbx rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
00082f3f: RLP; mov rdi, qword ptr [rip + 0x2e898e] ; lea rsi, [rip + 0xb2ea6] ; mov rcx, r13 ; mov rdx, rbp ; xor eax, eax ; call 0x5212c
read: eax r13 rbp rip rsp 
write: eax rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00082f5e: RLP; cmp dword ptr [rip + 0x2eb80b], 0 ; je 0x82f72
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
00082f91: RLP; add rsp, 0x80 ; add rsp, 0x28 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rbp rsp 
write: r12 r13 r14 r15 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00082fd0: RLP; jmp 0x82f5e
read: 
write: 
--------------------------------------------------------------------------------
00082feb: RLP; mov rbp, rax ; jmp 0x82ec7
read: rax 
write: rbp 
--------------------------------------------------------------------------------
0008301b: RLP; jmp 0x82f5e
read: 
write: 
--------------------------------------------------------------------------------
00083040: RLP; jmp 0x82f5e
read: 
write: 
--------------------------------------------------------------------------------
00083076: RLP; mov rdi, rbp ; mov rsi, rax ; call 0x82b0c
read: rax rbp rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
00083085: RLP; mov rdi, qword ptr [rip + 0x2e8848] ; lea rsi, [rip + 0xb2d54] ; xor eax, eax ; mov rdx, rbx ; call 0x5212c
read: eax rbx rip rsp 
write: eax rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000830a1: RLP; mov rax, qword ptr [rip + 0x2e5d5c] ; cmp rbx, qword ptr [rax] ; je 0x8312c
read: rbx rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000830d4: RLP; lea rax, [rip - 0x8f] ; mov qword ptr [r12], rax ; cmp dword ptr [rip + 0x2eb68a], 0 ; je 0x830f3
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
00083112: RLP; add rsp, 0x80 ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
read: rsp 
write: r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0008315f: RLP; add rsp, 0x80 ; mov esi, 1 ; xor eax, eax ; cmp dword ptr [rip + 0x2eb5fc], 0 ; je 0x83182
read: eax rflags rsp 
write: eax esi rflags rsp 
--------------------------------------------------------------------------------
000831a2: RLP; add rsp, 0x80 ; jmp 0x830ad
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000831c0: RLP; jmp 0x830d4
read: 
write: 
--------------------------------------------------------------------------------
00083202: RLP; test rax, rax ; mov rbx, rax ; je 0x8322c
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
00083218: RLP; test rax, rax ; mov rbp, rax ; je 0x8335d
read: rax rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
0008324b: RLP; test rax, rax ; mov rbp, rax ; je 0x8335d
read: rax rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
0008326e: RLP; test rax, rax ; mov qword ptr [rip + 0x2e865c], rax ; je 0x8336c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000832a2: RLP; mov rcx, qword ptr [rip + 0x2e862b] ; lea rdi, [rip + 0xb2b52] ; mov edx, 8 ; mov esi, 1 ; call 0x6d45c
read: rip rsp 
write: edx esi rcx rdi rsp 
--------------------------------------------------------------------------------
000832c3: RLP; mov rax, qword ptr [rip + 0x2e5c1a] ; lea rcx, [rip - 0x285] ; lea rsi, [rip - 0x48c] ; mov rdx, qword ptr [rax] ; mov qword ptr [rax], rcx ; lea rcx, [rip - 0x6a9] ; mov rax, qword ptr [rip + 0x2e5bf0] ; mov qword ptr [rip + 0x2e85c9], rdx ; mov rdx, qword ptr [rax] ; mov qword ptr [rax], rbx ; mov rax, qword ptr [rip + 0x2e5cd4] ; mov qword ptr [rip + 0x2e85ad], rdx ; mov rdx, qword ptr [rax] ; mov qword ptr [rax], rsi ; mov rax, qword ptr [rip + 0x2e5bb8]
read: rbx rcx rdx rsi 
write: rax rcx rdx rsi 
--------------------------------------------------------------------------------
0008335d: RLP; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00083378: RLP; jmp 0x8335d
read: 
write: 
--------------------------------------------------------------------------------
00083409: RLP; mov rdi, rbx ; call 0x6bf5c
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
00083415: RLP; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
00083440: RLP; lea rsi, [rip + 0xb3c2f] ; mov rdx, rax ; xor edi, edi ; xor eax, eax ; call 0x6bcbc
read: eax edi rax rip rsp 
write: eax edi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00083457: RLP; mov rax, qword ptr [rip + 0x2e5b06] ; mov edi, dword ptr [rax] ; call 0x38aec
read: rip rsp 
write: edi rax rsp 
--------------------------------------------------------------------------------
000834b0: RLP; test rax, rax ; mov qword ptr [rbx + 8], rax ; je 0x8350c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0008351e: RLP; mov rax, qword ptr [rsp + 8] ; jmp 0x834b9
read: 
write: rax 
--------------------------------------------------------------------------------
0008357a: RLP; test rax, rax ; mov qword ptr [rbx + 8], rax ; je 0x835dc
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000835ee: RLP; mov rax, qword ptr [rsp + 8] ; jmp 0x83583
read: 
write: rax 
--------------------------------------------------------------------------------
00083654: RLP; test rax, rax ; je 0x83768
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0008373e: RLP; jmp 0x83654
read: 
write: 
--------------------------------------------------------------------------------
00083763: RLP; jmp 0x836d4
read: 
write: 
--------------------------------------------------------------------------------
0008377a: RLP; mov rax, qword ptr [rsp + 8] ; jmp 0x8365d
read: 
write: rax 
--------------------------------------------------------------------------------
00083792: RLP; jmp 0x836d4
read: 
write: 
--------------------------------------------------------------------------------
00083807: RLP; or byte ptr [rbx + 0x50], 2 ; test rbp, rbp ; je 0x8383d
read: rbp rflags 
write: rflags 
--------------------------------------------------------------------------------
00083834: RLP; or byte ptr [rbx + 0x50], 2 ; test rbp, rbp ; jne 0x83810
read: rbp rflags 
write: rflags 
--------------------------------------------------------------------------------
000850f8: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00085402: RLP; lea rbp, [rax + 1] ; mov rdi, rbp ; call 0x1f3cc
read: rbp rip rsp 
write: rbp rdi rsp 
--------------------------------------------------------------------------------
00085412: RLP; test rax, rax ; je 0x85434
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00085429: RLP; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00085452: RLP; lea rdi, [rax + 1] ; mov rbx, rax ; call 0x1f3cc
read: rax rip rsp 
write: rbx rdi rsp 
--------------------------------------------------------------------------------
00085462: RLP; test rax, rax ; je 0x8548c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0008547d: RLP; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000854b3: RLP; test rax, rax ; je 0x854bd
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000854f4: RLP; jmp 0x854b8
read: 
write: 
--------------------------------------------------------------------------------
00085504: RLP; mov qword ptr [rip + 0x2e5251], rax ; jmp 0x854d3
read: rax 
write: 
--------------------------------------------------------------------------------
00085529: RLP; jmp 0x854b8
read: 
write: 
--------------------------------------------------------------------------------
00085582: RLP; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000855b0: RLP; mov rdi, rax ; mov r14, rax ; call 0x856dc
read: rax rip rsp 
write: r14 rdi rsp 
--------------------------------------------------------------------------------
000855bf: RLP; mov r13, rax ; mov eax, ebx ; lea rsi, [rsp + 0x14] ; sar eax, 0x1f ; xor ecx, ecx ; mov edx, 0xa ; xor ebx, eax ; mov byte ptr [rsp + 0x14], 0 ; sub ebx, eax ; movsxd rdi, ebx ; call 0x4778c
read: eax ebx ecx rax rip rsp 
write: eax ebx ecx edx r13 rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000855e8: RLP; cmp r13, rbp ; mov rdx, rbp ; mov rsi, r14 ; cmovbe rdx, r13 ; mov rdi, r12 ; mov rbx, rax ; call 0x892cc
read: r12 r13 r14 rax rbp rdx rflags rip rsp 
write: rbx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00085604: RLP; cmp r13, rbp ; jae 0x85639
read: r13 rbp rflags 
write: rflags 
--------------------------------------------------------------------------------
00085639: RLP; test rbp, rbp ; je 0x85644
read: rbp rflags 
write: rflags 
--------------------------------------------------------------------------------
00085675: RLP; mov r14, rax ; or rcx, 0xffffffffffffffff ; xor eax, eax ; mov rdi, r14 ; lea rsi, [rsp + 0x14] ; mov edx, 0xa ; repne scasb al, byte ptr [rdi] ; mov eax, ebx ; mov byte ptr [rsp + 0x14], 0 ; sar eax, 0x1f ; not rcx ; xor ebx, eax ; lea r13, [rcx - 1] ; xor ecx, ecx ; sub ebx, eax
read: al eax ebx ecx r14 rax rcx rdi rflags 
write: eax ebx ecx edx r13 r14 rcx rdi rflags rsi 
--------------------------------------------------------------------------------
000856b0: RLP; cmp r13, rbp ; mov rdx, rbp ; mov rdi, r12 ; cmovbe rdx, r13 ; mov rsi, r14 ; mov rbx, rax ; call 0x892cc
read: r12 r13 r14 rax rbp rdx rflags rip rsp 
write: rbx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000856cc: RLP; mov rdi, rax ; jmp 0x85614
read: rax 
write: rdi 
--------------------------------------------------------------------------------
00087918: RLP; test eax, eax ; je 0x8792a
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0008794d: RLP; mov edx, dword ptr [rip + 0x2e6e19] ; test edx, edx ; je 0x87979
read: edx rflags 
write: edx rflags 
--------------------------------------------------------------------------------
00087979: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000879bf: RLP; cmp eax, ebx ; jle 0x87aa4
read: eax ebx rflags 
write: rflags 
--------------------------------------------------------------------------------
000879e7: RLP; cmp ebx, eax ; jge 0x87a74
read: eax ebx rflags 
write: rflags 
--------------------------------------------------------------------------------
00087a0b: RLP; mov ecx, ebx ; mov rdx, rax ; mov esi, 0x63 ; xor eax, eax ; mov rdi, rbp ; call 0x5227c
read: eax ebx rax rbp rip rsp 
write: eax ecx esi rdi rdx rflags rsp 
--------------------------------------------------------------------------------
00087a23: RLP; movsxd rdx, eax ; xor eax, eax ; cmp edx, 0x63 ; jg 0x87a35
read: eax edx rflags 
write: eax rdx rflags 
--------------------------------------------------------------------------------
00087a68: RLP; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00087a7d: RLP; cmp ebx, eax ; jg 0x879ef
read: eax ebx rflags 
write: rflags 
--------------------------------------------------------------------------------
00087a8e: RLP; mov edx, 5 ; sub ebx, eax ; lea rsi, [rip + 0xae3b1] ; jmp 0x879fb
read: eax ebx 
write: ebx edx rflags rsi 
--------------------------------------------------------------------------------
00087aad: RLP; cmp ebx, eax ; jg 0x879c7
read: eax ebx rflags 
write: rflags 
--------------------------------------------------------------------------------
00087ae1: RLP; test rax, rax ; mov rbp, rax ; je 0x87bac
read: rax rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
00087b1e: RLP; jmp 0x879de
read: 
write: 
--------------------------------------------------------------------------------
00087b54: RLP; jmp 0x879b6
read: 
write: 
--------------------------------------------------------------------------------
00087b65: RLP; or dword ptr [rip + 0x2e3d90], 2 ; jmp 0x879b6
read: 
write: rflags 
--------------------------------------------------------------------------------
00087b94: RLP; test rax, rax ; mov rbp, rax ; jne 0x879de
read: rax rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
00087dd3: RLP; lea rdx, [rsp + 0x860] ; mov qword ptr [rsp + 8], rax ; lea rax, [rsp + 0x60] ; nop dword ptr [rax] ; mov qword ptr [rax], rbx ; add rax, 8 ; cmp rax, rdx ; jne 0x87dec
read: rax rbx rdx rflags 
write: rax rdx rflags 
--------------------------------------------------------------------------------
00087e47: RLP; test eax, eax ; jne 0x87ffd
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00087ef2: RLP; test rax, rax ; jne 0x87fe9
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00088098: RLP; test rax, rax ; jne 0x87fe9
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00088201: RLP; test rax, rax ; mov r12, rax ; je 0x8825c
read: rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
0008824a: RLP; add rsp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00088292: RLP; mov r15, rax ; mov rax, qword ptr [rsp + 0x58] ; mov rsi, r13 ; mov rdx, r15 ; mov rdi, r13 ; add rsi, rax ; mov qword ptr [rsp + 0x18], rax ; call 0x88bbc
read: r13 r15 rax rip rsi rsp 
write: r15 rax rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000882b4: RLP; test eax, eax ; mov r9, qword ptr [rsp + 0x10] ; mov r10, qword ptr [rsp + 0x20] ; jne 0x8841e
read: eax rflags 
write: r10 r9 rflags 
--------------------------------------------------------------------------------
00088335: RLP; test rax, rax ; jne 0x8825c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000885a1: RLP; test rax, rax ; jne 0x8825c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000885f7: RLP; test rax, rax ; jne 0x8825c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00088858: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00089042: RLP; mov rax, qword ptr [rsp + 8] ; mov rdx, r12 ; and rdx, 0xfffffffffffffff8 ; add rbp, rdx ; add rbx, rdx ; mov rdx, r12 ; and edx, 7 ; mov rsi, rbp ; lea r8, [rbx + rdx] ; mov rcx, rbx ; sub rsi, rbx ; test rdx, rdx ; je 0x8907c
read: edx r12 rbp rbx rdx rflags rsi 
write: edx r8 rax rbp rbx rcx rdx rflags rsi 
--------------------------------------------------------------------------------
000890ee: RLP; mov rax, qword ptr [rsp + 8] ; mov rdx, r12 ; and rdx, 0xfffffffffffffff8 ; sub rbx, rdx ; sub rbp, rdx ; mov rdx, r12 ; and edx, 7 ; mov rsi, rbx ; je 0x8907c
read: edx r12 rbp rbx rdx rflags 
write: edx rax rbp rbx rdx rflags rsi 
--------------------------------------------------------------------------------
00089145: RLP; mov rax, qword ptr [rsp + 8] ; jmp 0x890f3
read: 
write: rax 
--------------------------------------------------------------------------------
00089155: RLP; mov rax, qword ptr [rsp + 8] ; jmp 0x89047
read: 
write: rax 
--------------------------------------------------------------------------------
000897a4: RLP; mov rax, r12 ; mov rdx, r12 ; and rax, 0xfffffffffffffff8 ; and edx, 7 ; add rbp, rax ; add rbx, rax ; mov rsi, rbp ; lea r8, [rbx + rdx] ; mov rdi, rbx ; sub rsi, rbx ; test rdx, rdx ; je 0x897dc
read: edx r12 rax rbp rbx rdx rflags rsi 
write: edx r8 rax rbp rbx rdi rdx rflags rsi 
--------------------------------------------------------------------------------
00089842: RLP; mov rdx, r12 ; mov rax, rbx ; and rdx, 0xfffffffffffffff8 ; sub rax, rdx ; sub rbp, rdx ; mov rdx, r12 ; and edx, 7 ; je 0x897dc
read: edx r12 rax rbp rbx rdx rflags 
write: edx rax rbp rdx rflags 
--------------------------------------------------------------------------------
0008988d: RLP; jmp 0x89842
read: 
write: 
--------------------------------------------------------------------------------
0008989d: RLP; jmp 0x897a4
read: 
write: 
--------------------------------------------------------------------------------
0008ee4a: RLP; test rax, rax ; je 0x8ee77
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0008ee9c: RLP; jmp 0x8ee4a
read: 
write: 
--------------------------------------------------------------------------------
0008f061: RLP; lea rdx, [rsp + 0x860] ; mov r14, rax ; lea rax, [rsp + 0x60] ; nop dword ptr [rax] ; mov qword ptr [rax], rbx ; add rax, 8 ; cmp rax, rdx ; jne 0x8f074
read: rax rbx rdx rflags 
write: r14 rax rdx rflags 
--------------------------------------------------------------------------------
0008f0d6: RLP; test eax, eax ; jne 0x8f2d5
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0008f18e: RLP; test rax, rax ; mov rcx, qword ptr [rsp] ; jne 0x8f2c1
read: rax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
0008f377: RLP; test rax, rax ; jne 0x8f2c1
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0008f530: RLP; add rsp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0008f561: RLP; mov r8, qword ptr [rsp] ; mov r11, rax ; mov rax, qword ptr [rsp + 0x58] ; mov rdx, r11 ; mov qword ptr [rsp + 8], r11 ; lea rsi, [r8 + rax] ; mov rdi, r8 ; mov qword ptr [rsp + 0x18], rax ; call 0x8bd2c
read: r11 r8 rax rip rsp 
write: r11 r8 rax rdi rdx rsi rsp 
--------------------------------------------------------------------------------
0008f58a: RLP; test eax, eax ; mov r8, qword ptr [rsp] ; mov r11, qword ptr [rsp + 8] ; mov r9, qword ptr [rsp + 0x10] ; jne 0x8f71c
read: eax rflags 
write: r11 r8 r9 rflags 
--------------------------------------------------------------------------------
0008f621: RLP; test rax, rax ; jne 0x8f774
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0008f76a: RLP; test rax, rax ; je 0x8f7a1
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0008f92d: RLP; test rax, rax ; jne 0x8f774
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0008fa05: RLP; cmp rax, 1 ; mov r12, rax ; jbe 0x8fa5f
read: rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
0008fa2f: RLP; movsxd rax, dword ptr [rsp + 0xc] ; mov rcx, r12 ; xor edx, edx ; sub rcx, rbx ; movzx esi, byte ptr [rbp + rbx] ; div rcx ; add edx, ebx ; movsxd rdx, edx ; add rdx, rbp ; movzx eax, byte ptr [rdx] ; mov byte ptr [rbp + rbx], al ; add rbx, 1 ; mov byte ptr [rdx], sil ; cmp rbx, r14 ; jne 0x8fa1c
read: al ebx edx r12 r14 rax rbp rbx rcx rdx rflags sil 
write: eax edx esi rax rbx rcx rdx rflags 
--------------------------------------------------------------------------------
0008fa8a: RLP; mov rbx, rax ; call 0xb3d6c
read: rax rip rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
0008fa96: RLP; lea rcx, [rip + 0x2dbf1f] ; mov edi, eax ; lea rsi, [rip + 0x2dbef6] ; xor edi, ebx ; mov edx, 0x20 ; call 0x3999c
read: eax ebx edi rip rsp 
write: edi edx rcx rflags rsi rsp 
--------------------------------------------------------------------------------
0008fab6: RLP; mov dword ptr [rip + 0x2dbf2c], 1 ; jmp 0x8f9f9
read: 
write: 
--------------------------------------------------------------------------------
0008fc61: RLP; lea rdx, [rsp + 0x830] ; mov r14, rax ; lea rax, [rsp + 0x30] ; nop dword ptr [rax] ; mov qword ptr [rax], rbp ; add rax, 8 ; cmp rax, rdx ; jne 0x8fc74
read: rax rbp rdx rflags 
write: r14 rax rdx rflags 
--------------------------------------------------------------------------------
0008fcc9: RLP; test eax, eax ; mov r8, qword ptr [rsp] ; jne 0x8fe26
read: eax rflags 
write: r8 rflags 
--------------------------------------------------------------------------------
0008ff88: RLP; test rax, rax ; mov r12, rax ; je 0x900e4
read: rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
0008ffca: RLP; mov r14, qword ptr [rsp + 0x28] ; mov rdx, rax ; mov rdi, r13 ; mov rbp, rax ; lea rsi, [r13 + r14] ; call 0x88bbc
read: r13 rax rip rsp 
write: r14 rbp rdi rdx rsi rsp 
--------------------------------------------------------------------------------
0008ffe6: RLP; test eax, eax ; mov rcx, qword ptr [rsp + 8] ; jne 0x9010d
read: eax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
000900fe: RLP; add rsp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0009069f: RLP; mov rbp, rax ; mov eax, 0xc ; test rbp, rbp ; je 0x906ca
read: rax rbp rflags 
write: eax rbp rflags 
--------------------------------------------------------------------------------
000906c1: RLP; mov qword ptr [r13], rbp ; xor eax, eax ; mov qword ptr [rbx], r12 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: eax r12 rbp rsp 
write: eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000906f9: RLP; lea rcx, [rax + 1] ; mov rdx, rbx ; mov rsi, r12 ; mov rdi, rbp ; call 0x9066c
read: r12 rbp rbx rip rsp 
write: rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
0009070f: RLP; pop rbx ; pop rbp ; pop r12 ; ret
read: rsp 
write: r12 rbp rbx rsp 
--------------------------------------------------------------------------------
0009074c: RLP; mov rsi, rbp ; lea rbx, [rbx + rax + 1] ; sub rsi, rax ; sub rsi, 1 ; mov rbp, rsi ; jne 0x9073c
read: rax rbp rflags rsi 
write: rbp rbx rflags rsi 
--------------------------------------------------------------------------------
000907b9: RLP; mov rdi, qword ptr [r15 - 8] ; lea rbx, [rbx + rax + 1] ; test rdi, rdi ; jne 0x907ac
read: rdi rflags 
write: rbx rdi rflags 
--------------------------------------------------------------------------------
000907f8: RLP; mov rdi, rax ; mov qword ptr [r13], rax ; mov eax, 0xc ; test rdi, rdi ; je 0x907db
read: rax rdi rflags 
write: eax rdi rflags 
--------------------------------------------------------------------------------
00090829: RLP; mov rsi, qword ptr [rbp] ; lea rdi, [rax + 1] ; test rsi, rsi ; jne 0x9081c
read: rflags rsi 
write: rdi rflags rsi 
--------------------------------------------------------------------------------
0009085d: RLP; lea r13, [rax + 1] ; cmp r13, 1 ; jbe 0x9091c
read: r13 rflags 
write: r13 rflags 
--------------------------------------------------------------------------------
00090877: RLP; mov r8, rax ; mov qword ptr [r14], rax ; mov eax, 0xc ; test r8, r8 ; jne 0x908a8
read: r8 rax rflags 
write: eax r8 rflags 
--------------------------------------------------------------------------------
000908ed: RLP; mov qword ptr [r14], 0 ; mov qword ptr [rbp], r13 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: eax r13 rsp 
write: eax r12 r13 r14 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00090964: RLP; add rax, 1 ; cmp rbp, rax ; cmova rbx, rax ; add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
read: rax rbp rbx rflags rsp 
write: rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000909be: RLP; mov rdx, qword ptr [rbp] ; mov rcx, qword ptr [r12] ; add rax, 1 ; lea rsi, [rbx + rax] ; mov rdi, rbx ; sub rdx, rax ; sub rcx, rbx ; mov qword ptr [rbp], rdx ; add rdx, rcx ; call 0x88fbc
read: rax rbx rcx rdx rip rsp 
write: rax rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000909e7: RLP; cmp qword ptr [rbp], 0 ; je 0x909fc
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
00090a09: RLP; mov qword ptr [r12], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
read: rsp 
write: r12 rbp rbx rsp 
--------------------------------------------------------------------------------
00090a4c: RLP; mov rsi, r12 ; mov qword ptr [rbp - 8], rbx ; lea rbx, [rbx + rax + 1] ; sub rsi, rax ; sub rsi, 1 ; mov r12, rsi ; jne 0x90a3c
read: r12 rax rbx rflags rsi 
write: r12 rbx rflags rsi 
--------------------------------------------------------------------------------
00090ae7: RLP; lea r12, [rax + 1] ; mov rdi, rbx ; lea r13, [r12 + r15] ; mov rsi, r13 ; call 0x1f3ac
read: r13 rbx rip rsp 
write: r12 r13 rdi rsi rsp 
--------------------------------------------------------------------------------
00090afe: RLP; mov r8, rax ; mov eax, 0xc ; test r8, r8 ; je 0x90aaa
read: r8 rax rflags 
write: eax r8 rflags 
--------------------------------------------------------------------------------
00090b3b: RLP; mov rcx, qword ptr [rsp + 8] ; mov r9, qword ptr [rsp + 0x10] ; mov rdx, r12 ; mov rsi, rcx ; mov rdi, r9 ; call 0x88fbc
read: r12 r9 rcx rip rsp 
write: r9 rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
00090b57: RLP; mov r8, qword ptr [rsp + 0x18] ; xor eax, eax ; mov qword ptr [rbp], r8 ; mov qword ptr [r14], r13 ; jmp 0x90aaa
read: eax r13 r8 
write: eax r8 rflags 
--------------------------------------------------------------------------------
00090b88: RLP; nop dword ptr [rax] ; jmp 0x90aaa
read: 
write: 
--------------------------------------------------------------------------------
00090bd2: RLP; sub rbx, rax ; lea rcx, [rbp + rax] ; mov rax, rbx ; lea rbx, [rbx - 1] ; cmp rax, 1 ; ja 0x90bbc
read: rax rbx rflags 
write: rax rbx rcx rflags 
--------------------------------------------------------------------------------
00090c10: RLP; lea r13, [rax + 1] ; xor edx, edx ; cmp r13, 1 ; jbe 0x90c92
read: edx r13 rflags 
write: edx r13 rflags 
--------------------------------------------------------------------------------
00090c2f: RLP; test rax, rax ; mov qword ptr [r14], rax ; mov edx, 0xc ; je 0x90c92
read: rax rflags 
write: edx rflags 
--------------------------------------------------------------------------------
00090ce0: RLP; test rax, rax ; mov rbp, rax ; je 0x90d1c
read: rax rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
00090cfd: RLP; mov byte ptr [rax], 0 ; mov qword ptr [r12], rbp ; mov qword ptr [rbx], r13 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: r13 rbp rsp 
write: r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00090d29: RLP; mov qword ptr [r12], 0 ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00090dc2: RLP; mov rdi, r13 ; mov qword ptr [rsp + 0x28], rax ; call 0x856dc
read: r13 rax rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
00090dd3: RLP; mov r14, rax ; lea rax, [rsp + 0x68] ; mov dword ptr [rsp + 0xc], 1 ; mov qword ptr [rsp + 0x40], rax ; lea rax, [rsp + 0x60] ; mov qword ptr [rsp + 0x48], rax ; nop word ptr cs:[rax + rax] ; test r15, r15 ; je 0x91024
read: r15 rax rflags 
write: r14 rax rflags 
--------------------------------------------------------------------------------
00090e26: RLP; lea r15, [rax + 1] ; cmp rbx, r15 ; jbe 0x90f8c
read: r15 rbx rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
00090e4d: RLP; test rax, rax ; je 0x90fb4
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00090e7e: RLP; mov qword ptr [rsp + 0x20], r15 ; mov qword ptr [rsp + 0x78], rax ; mov rdx, rax ; mov r15, rbx ; test r15, r15 ; setne bl ; jmp 0x90ebf
read: r15 rax rbx rflags 
write: bl r15 rdx rflags 
--------------------------------------------------------------------------------
00090eb5: RLP; cmp qword ptr [rsp + 0x78], 0 ; jne 0x90f3c
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
00090ef1: RLP; mov ebx, eax ; mov rdi, qword ptr [rsp + 0x78] ; call 0x1f46c
read: eax rip rsp 
write: ebx rdi rsp 
--------------------------------------------------------------------------------
00090f01: RLP; mov dword ptr [rsp + 0xc], 0 ; mov rax, qword ptr [rsp + 0x38] ; test rax, rax ; je 0x90f16
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
00090f34: RLP; jmp 0x90f9a
read: 
write: 
--------------------------------------------------------------------------------
00090f4d: RLP; test rax, rax ; mov rbx, rax ; je 0x91044
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
00090f71: RLP; mov rax, qword ptr [rsp + 0x28] ; lea r15, [rbx + rax] ; mov rdx, qword ptr [rsp + 0x78] ; jmp 0x90e8e
read: 
write: r15 rax rdx 
--------------------------------------------------------------------------------
00090fd6: RLP; mov ebx, eax ; jmp 0x90f16
read: eax 
write: ebx 
--------------------------------------------------------------------------------
0009100d: RLP; test eax, eax ; mov ebx, eax ; jne 0x90ef3
read: eax rflags 
write: ebx rflags 
--------------------------------------------------------------------------------
00091050: RLP; mov rdx, r15 ; mov rcx, rax ; mov rsi, r12 ; mov rdi, rbp ; xor r15d, r15d ; call 0x90cac
read: r12 r15 r15d rax rbp rip rsp 
write: r15d rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00091068: RLP; jmp 0x90f7a
read: 
write: 
--------------------------------------------------------------------------------
0009107d: RLP; mov rax, qword ptr [rsp + 0x60] ; mov rcx, qword ptr [rsp + 0x50] ; mov qword ptr [rcx], rax ; mov rax, qword ptr [rsp + 0x68] ; mov rcx, qword ptr [rsp + 0x58] ; mov qword ptr [rcx], rax ; jmp 0x90f9a
read: rax 
write: rax rcx 
--------------------------------------------------------------------------------
00091179: RLP; test rax, rax ; jne 0x9118c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000911cb: RLP; test rax, rax ; je 0x911e2
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000911e2: RLP; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00091213: RLP; test r13, r13 ; je 0x912e4
read: r13 rflags 
write: rflags 
--------------------------------------------------------------------------------
00091228: RLP; mov rdi, r13 ; mov r14, rax ; call 0x856dc
read: r13 rax rip rsp 
write: r14 rdi rsp 
--------------------------------------------------------------------------------
00091237: RLP; mov rdx, qword ptr [rbp] ; mov qword ptr [rsp + 8], r14 ; mov rdi, qword ptr [rbx] ; mov qword ptr [rsp + 0x10], rax ; lea r15, [r14 + rdx] ; mov qword ptr [rsp + 0x18], rdx ; lea r14, [r15 + rax] ; lea rcx, [r14 + 2] ; mov rsi, rcx ; mov qword ptr [rsp], rcx ; call 0x1f3ac
read: r14 rax rcx rdx rip rsp 
write: r14 r15 rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
00091269: RLP; mov rcx, rax ; mov eax, 0xc ; test rcx, rcx ; je 0x912d2
read: rax rcx rflags 
write: eax rcx rflags 
--------------------------------------------------------------------------------
00091295: RLP; mov rcx, qword ptr [rsp + 0x18] ; mov rdx, qword ptr [rsp + 0x10] ; mov rsi, r13 ; lea rdi, [rcx + r15 + 1] ; mov byte ptr [rcx + r15], 0x3d ; mov qword ptr [rsp + 8], rcx ; call 0x8e3dc
read: r13 rcx rip rsp 
write: rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000912ba: RLP; mov rcx, qword ptr [rsp + 8] ; xor eax, eax ; mov byte ptr [rcx + r14 + 1], 0 ; mov qword ptr [rbx], rcx ; mov rcx, qword ptr [rsp] ; mov qword ptr [rbp], rcx ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: eax rcx rsp 
write: eax r12 r13 r14 r15 rbp rbx rcx rflags rsp 
--------------------------------------------------------------------------------
000912f6: RLP; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0009135e: RLP; mov rdi, rbx ; mov r15, rax ; call 0x856dc
read: rax rbx rip rsp 
write: r15 rdi rsp 
--------------------------------------------------------------------------------
0009136d: RLP; test r15, r15 ; lea rbp, [rax + 1] ; je 0x91397
read: r15 rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
00091397: RLP; mov rcx, rbp ; mov rdx, rbx ; mov rsi, r13 ; mov rdi, r14 ; call 0x9066c
read: r13 r14 rbp rbx rip rsp 
write: rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000913ac: RLP; test eax, eax ; sete cl ; add rbx, rbp ; sub r12, rbp ; test cl, cl ; jne 0x91346
read: cl eax r12 rbp rbx rflags 
write: cl r12 rbx rflags 
--------------------------------------------------------------------------------
00091408: RLP; lea r12, [rax + 1] ; mov esi, 0x3d ; mov rdi, rbx ; call 0x83a5c
read: rbx rip rsp 
write: esi r12 rdi rsp 
--------------------------------------------------------------------------------
0009141d: RLP; sub rbp, r12 ; test rax, rax ; je 0x91444
read: r12 rax rbp rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
00091457: RLP; jmp 0x91428
read: 
write: 
--------------------------------------------------------------------------------
00091482: RLP; lea rdx, [rax + 1] ; test rax, rax ; cmove rdx, rbx ; mov rax, rdx ; pop rbx ; ret
read: rax rbx rdx rflags rsp 
write: rax rbx rdx rflags rsp 
--------------------------------------------------------------------------------
000921b0: RLP; mov rdi, qword ptr [rbp - 0x140] ; mov r12, rax ; call 0x856dc
read: rax rip rsp 
write: r12 rdi rsp 
--------------------------------------------------------------------------------
000921c3: RLP; test r12, r12 ; mov rsi, rax ; je 0x9282a
read: r12 rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
0009238a: RLP; mov rdi, qword ptr [rbp - 0x120] ; mov r8, rbx ; mov rcx, r14 ; mov edx, r12d ; mov esi, r15d ; call 0x9149c
read: r12d r14 r15d rbx rip rsp 
write: edx esi r8 rcx rdi rsp 
--------------------------------------------------------------------------------
000923a6: RLP; mov esi, dword ptr [rbp - 0x110] ; test esi, esi ; je 0x92548
read: esi rflags 
write: esi rflags 
--------------------------------------------------------------------------------
000925b0: RLP; mov eax, dword ptr [rbp - 0x118] ; lea rsp, [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: rsp 
write: eax r12 r13 r14 r15 rbp rbx rsp 
--------------------------------------------------------------------------------
000925ce: RLP; lea rsp, [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rsp 
--------------------------------------------------------------------------------
0009261b: RLP; mov rax, qword ptr [rbp - 0x148] ; mov r9, qword ptr [rbp - 0x160] ; mov rcx, rbx ; mov r8, qword ptr [rbp - 0x158] ; mov rdi, qword ptr [rbp - 0x120] ; mov rdx, r14 ; mov dword ptr [rsp + 8], r12d ; mov esi, r15d ; mov qword ptr [rsp], rax ; call 0x919ec
read: r12d r14 r15d rax rbx rip rsp 
write: esi r8 r9 rax rcx rdi rdx rsp 
--------------------------------------------------------------------------------
00092652: RLP; jmp 0x923a6
read: 
write: 
--------------------------------------------------------------------------------
00092689: RLP; mov rax, qword ptr [rbp - 0x148] ; mov r9, qword ptr [rbp - 0x160] ; mov rcx, rbx ; mov r8, qword ptr [rbp - 0x158] ; mov rdi, qword ptr [rbp - 0x120] ; mov rdx, r14 ; mov esi, r15d ; mov qword ptr [rsp], rax ; call 0x915ec
read: r14 r15d rax rbx rip rsp 
write: esi r8 r9 rax rcx rdi rdx rsp 
--------------------------------------------------------------------------------
000926bb: RLP; jmp 0x923a6
read: 
write: 
--------------------------------------------------------------------------------
00092785: RLP; test eax, eax ; mov rdx, qword ptr [rbp - 0x120] ; mov rsi, qword ptr [rbp - 0x128] ; jne 0x92490
read: eax rflags 
write: rdx rflags rsi 
--------------------------------------------------------------------------------
000927ae: RLP; test rax, rax ; mov qword ptr [rbp - 0xd0], rax ; mov rsi, qword ptr [rbp - 0x120] ; je 0x92282
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
0009295d: RLP; test rbx, rbx ; mov r15, rax ; mov r10, qword ptr [rbp - 0x50] ; jne 0x92987
read: rax rbx rflags 
write: r10 r15 rflags 
--------------------------------------------------------------------------------
00092beb: RLP; jmp 0x92975
read: 
write: 
--------------------------------------------------------------------------------
0009323f: RLP; mov rcx, qword ptr [rbp - 0x80] ; cdqe ; mov r11, qword ptr [rbp - 0x70] ; mov r8d, dword ptr [rbp - 0x78] ; mov r10, qword ptr [rbp - 0x88] ; lea rsi, [rcx + rax] ; lea rdx, [rsi + r15] ; cmp qword ptr [rbp - 0x50], rdx ; jbe 0x93036
read: eax rdx rflags 
write: r10 r11 r8d rax rcx rdx rflags rsi 
--------------------------------------------------------------------------------
000932ca: RLP; mov r8, qword ptr [rbp - 0x70] ; movsxd rsi, eax ; mov r10, qword ptr [rbp - 0x78] ; mov rcx, qword ptr [rbp - 0x50] ; mov edx, dword ptr [rbp - 0x68] ; lea r11, [r8 + rsi] ; lea rax, [r11 + r15] ; cmp r10, rax ; jbe 0x931e6
read: eax r10 rax rflags 
write: edx r10 r11 r8 rax rcx rflags rsi 
--------------------------------------------------------------------------------
00093317: RLP; mov rcx, qword ptr [rbp - 0x70] ; movsxd rsi, eax ; mov r8, qword ptr [rbp - 0x78] ; mov r10, qword ptr [rbp - 0x80] ; lea rdx, [rcx + rsi] ; lea rax, [rdx + r12] ; cmp qword ptr [rbp - 0x50], rax ; jbe 0x930e6
read: eax rax rflags 
write: r10 r8 rax rcx rdx rflags rsi 
--------------------------------------------------------------------------------
000933a4: RLP; jmp 0x92975
read: 
write: 
--------------------------------------------------------------------------------
00093403: RLP; test eax, eax ; mov r10, qword ptr [rbp - 0x60] ; jne 0x929de
read: eax rflags 
write: r10 rflags 
--------------------------------------------------------------------------------
00093423: RLP; mov r13, rax ; lea rax, [rax + r15] ; mov r10, qword ptr [rbp - 0x70] ; test r13, r13 ; mov qword ptr [rbp - 0x60], rax ; je 0x929e2
read: r13 rax rflags 
write: r10 r13 rax rflags 
--------------------------------------------------------------------------------
000939b1: RLP; test rax, rax ; mov rdx, rax ; mov qword ptr [rbp], rax ; je 0x939c8
read: rax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
00093ede: RLP; cmp rax, r12 ; mov r13, rax ; je 0x93f6c
read: r12 rax rflags 
write: r13 rflags 
--------------------------------------------------------------------------------
00093f1c: RLP; test rbp, rbp ; mov rbx, rax ; jne 0x93f3c
read: rax rbp rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
00093f56: RLP; cmp rbp, rbx ; mov byte ptr [rax], 0 ; jbe 0x93f24
read: rbp rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
00094009: RLP; lea rdi, [rip + 0xa099d] ; mov r12, rax ; mov rsi, rbp ; mov edx, 5 ; call 0x2f4bc
read: rax rbp rip rsp 
write: edx r12 rdi rsi rsp 
--------------------------------------------------------------------------------
00094024: RLP; mov rdi, r12 ; mov rbx, rax ; call 0x2e6bc
read: r12 rax rip rsp 
write: rbx rdi rsp 
--------------------------------------------------------------------------------
00094033: RLP; add rsp, 0x10 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: rbx rsp 
write: r12 r13 r14 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00094058: RLP; mov rdi, qword ptr [rax + 0x50] ; lea r12, [rax + 0x50] ; mov rbp, rax ; call 0x1f46c
read: rax rip rsp 
write: r12 rbp rdi rsp 
--------------------------------------------------------------------------------
00094072: RLP; mov rsi, qword ptr [rsp + 8] ; mov rdi, rsi ; call 0x2e6bc
read: rip rsi rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
00094083: RLP; lea rsi, [rip + 0xa1db4] ; lea rdi, [rip + 0xa091c] ; mov edx, 5 ; mov r13, rax ; call 0x2f4bc
read: rax rip rsp 
write: edx r13 rdi rsi rsp 
--------------------------------------------------------------------------------
000940a2: RLP; mov rdi, r13 ; mov r14, rax ; call 0x2e6bc
read: r13 rax rip rsp 
write: r14 rdi rsp 
--------------------------------------------------------------------------------
000940b1: RLP; lea rsi, [rip + 0xa1de2] ; xor eax, eax ; mov ecx, ebx ; mov rdx, r14 ; mov rdi, r12 ; call 0x523bc
read: eax ebx r12 r14 rip rsp 
write: eax ecx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000940cb: RLP; cmp eax, -1 ; je 0x940ec
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00094477: RLP; test rax, rax ; jne 0x94524
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00094493: RLP; test rax, rax ; jne 0x94524
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000944b0: RLP; test rax, rax ; jne 0x94524
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000944ca: RLP; test rax, rax ; jne 0x94524
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00094797: RLP; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
000947a5: RLP; pop rbx ; nop word ptr [rax + rax] ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
00095754: RLP; test rax, rax ; je 0x9573c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00095782: RLP; lea rbp, [rax*4 + 4] ; mov rdi, rbp ; call 0x1f3cc
read: rbp rip rsp 
write: rbp rdi rsp 
--------------------------------------------------------------------------------
00095796: RLP; test rax, rax ; je 0x957bc
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000957ad: RLP; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00095d32: RLP; test rax, rax ; je 0x95d1c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00096101: RLP; lea rbx, [rbx + rax*4] ; mov eax, dword ptr [rbx] ; test eax, eax ; je 0x9616c
read: eax rflags 
write: eax rbx rflags 
--------------------------------------------------------------------------------
0009611a: RLP; test rax, rax ; je 0x9615c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000963e1: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00096401: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000965e1: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00096679: RLP; movzx esi, bl ; mov rdi, qword ptr [r12] ; call rbp
read: bl rbp rsp 
write: esi rdi rsp 
--------------------------------------------------------------------------------
00096686: RLP; jmp 0x9660d
read: 
write: 
--------------------------------------------------------------------------------
00096709: RLP; mov rax, qword ptr [rsp + 0x20] ; mov dword ptr [rsp + 8], 1 ; xor r8d, r8d ; mov dword ptr [rsp], 0 ; lea rdx, [rsp + 0x20] ; lea r9, [rsp + 0x28] ; mov rsi, rbp ; mov rdi, qword ptr [r12] ; lea rcx, [rax + 1] ; call rbx
read: r8d rbp rbx rsp 
write: r8d r9 rax rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0009673b: RLP; test eax, eax ; je 0x9674f
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00096770: RLP; mov r12, qword ptr [rbp + 0x28] ; jmp 0x96645
read: 
write: r12 
--------------------------------------------------------------------------------
00096859: RLP; mov rax, qword ptr [rsp + 0x28] ; mov rdi, qword ptr [rbp + 0x10] ; xor r8d, r8d ; lea rdx, [rsp + 0x28] ; mov dword ptr [rsp + 8], 1 ; mov dword ptr [rsp], 0 ; lea r9, [rsp + 0x20] ; mov rsi, r13 ; lea rcx, [rax + 4] ; call rbx
read: r13 r8d rbx rsp 
write: r8d r9 rax rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0009688b: RLP; test eax, eax ; jne 0x968ac
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000968e6: RLP; mov rbp, qword ptr [rbx + 0x28] ; jmp 0x96823
read: 
write: rbp 
--------------------------------------------------------------------------------
00096943: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00096a0d: RLP; mov dword ptr [rsp + 8], 1 ; mov dword ptr [rsp], 0 ; xor r8d, r8d ; lea rdx, [rsp + 0x38] ; lea rsi, [rsp + 0x40] ; lea r9, [rsp + 0x30] ; mov rcx, r14 ; mov rdi, qword ptr [r13] ; call r12
read: r12 r14 r8d rsp 
write: r8d r9 rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00096a3c: RLP; test eax, 0xfffffffb ; je 0x96a84
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00096b4e: RLP; mov r13, qword ptr [r12 + 0x28] ; mov rdx, qword ptr [rsp + 0x18] ; jmp 0x969d5
read: 
write: r13 rdx 
--------------------------------------------------------------------------------
00096c3e: RLP; mov rdi, qword ptr [r12 + 0x10] ; xor r8d, r8d ; xor ecx, ecx ; xor edx, edx ; lea rsi, [rsp + 0x40] ; mov dword ptr [rsp + 8], 1 ; mov dword ptr [rsp], 1 ; lea r9, [rsp + 0x20] ; call rbx
read: ecx edx r8d rbx rsp 
write: ecx edx r8d r9 rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00096c69: RLP; test eax, 0xfffffffb ; jne 0x96d12
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00096cd2: RLP; mov rax, qword ptr [rsp + 0x28] ; mov rdi, qword ptr [r12 + 0x10] ; xor r8d, r8d ; lea rdx, [rsp + 0x28] ; lea rsi, [rsp + 0x40] ; mov dword ptr [rsp + 8], 1 ; mov dword ptr [rsp], 0 ; lea r9, [rsp + 0x20] ; lea rcx, [rax + 4] ; call rbx
read: r8d rbx rsp 
write: r8d r9 rax rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00096d07: RLP; test eax, 0xfffffffb ; je 0x96c85
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00096d66: RLP; mov r12, qword ptr [rbx + 0x28] ; jmp 0x96c0a
read: 
write: r12 
--------------------------------------------------------------------------------
00096dc9: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00096e84: RLP; lea r15, [r15 + rax*4 + 4] ; mov rdi, rbx ; mov qword ptr [rsp + 0x48], r14 ; mov qword ptr [rsp + 0x40], r12 ; call 0x11c1dc
read: r12 r14 rbx rip rsp 
write: r15 rdi rsp 
--------------------------------------------------------------------------------
00096e9f: RLP; xor r8d, r8d ; mov rcx, r15 ; lea rsi, [rsp + 0x40] ; mov dword ptr [rsp + 8], 1 ; mov dword ptr [rsp], 0 ; lea r9, [rsp + 0x80] ; mov rdx, r13 ; mov rdi, rbp ; call rbx
read: r13 r15 r8d rbp rbx rsp 
write: r8d r9 rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00096ecd: RLP; mov ecx, eax ; mov rax, qword ptr [rsp + 0x40] ; mov r14, rax ; sub r14, r12 ; test ecx, 0xfffffffb ; je 0x96f54
read: eax ecx r12 r14 rax rflags 
write: ecx r14 rax rflags 
--------------------------------------------------------------------------------
00096fa4: RLP; lea r15, [r12 + rax*4 + 4] ; mov rax, qword ptr [rsp + 0x60] ; mov qword ptr [rsp + 0x30], r12 ; lea r12, [rsp + 0x80] ; mov rax, qword ptr [rax] ; mov qword ptr [rsp + 0x20], rax ; lea rax, [rsp + 0x20] ; mov qword ptr [rsp + 0x60], rax ; lea rax, [rsp + 0x180] ; mov qword ptr [rsp + 0x48], rax ; lea rax, [rsp + 0x38] ; mov qword ptr [rsp + 0x10], rax ; lea rax, [rsp + 0x40] ; mov qword ptr [rsp + 0x18], rax ; nop word ptr [rax + rax]
read: r12 rax 
write: r12 r15 rax 
--------------------------------------------------------------------------------
00097005: RLP; xor r8d, r8d ; mov rcx, r15 ; mov rdx, r13 ; mov dword ptr [rsp + 8], 1 ; mov dword ptr [rsp], 0 ; mov rdi, rbp ; mov r9, qword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
read: r13 r15 r8d rbp rbx rsp 
write: r8d r9 rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00097030: RLP; mov ecx, eax ; mov rax, qword ptr [rsp + 0x40] ; mov rdx, rax ; sub rdx, r12 ; add r14, rdx ; cmp ecx, 5 ; je 0x96ff4
read: eax ecx r12 r14 rax rdx rflags 
write: ecx r14 rax rdx rflags 
--------------------------------------------------------------------------------
00097092: RLP; mov rax, qword ptr [rbx + 0x28] ; jmp 0x96e49
read: 
write: rax 
--------------------------------------------------------------------------------
00097170: RLP; lea r13, [rbx + rax + 1] ; mov rax, qword ptr [rip + 0x2d1c40] ; mov rax, qword ptr fs:[rax] ; mov rbx, qword ptr [rax] ; mov rax, qword ptr [rbx + 0x28] ; test rax, rax ; je 0x97367
read: rax rflags 
write: r13 rax rbx rflags 
--------------------------------------------------------------------------------
000971ce: RLP; xor r8d, r8d ; mov rdx, r14 ; lea rsi, [rsp + 0x40] ; mov dword ptr [rsp + 8], 1 ; mov dword ptr [rsp], 0 ; lea r9, [rsp + 0x30] ; mov rcx, r13 ; mov rdi, rbp ; call rbx
read: r13 r14 r8d rbp rbx rsp 
write: r8d r9 rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000971f9: RLP; mov rdx, qword ptr [rsp + 0x40] ; sub rdx, r12 ; sar rdx, 2 ; test eax, 0xfffffffb ; mov r15, rdx ; jne 0x9723c
read: eax r12 rdx rflags 
write: eax r15 rdx rflags 
--------------------------------------------------------------------------------
0009730d: RLP; xor r8d, r8d ; mov rcx, r13 ; mov rdx, r14 ; mov dword ptr [rsp + 8], 1 ; mov dword ptr [rsp], 0 ; mov rdi, rbp ; mov r9, qword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
read: r13 r14 r8d rbp rbx rsp 
write: r8d r9 rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00097338: RLP; mov rcx, qword ptr [rsp + 0x40] ; mov rdx, rcx ; sub rdx, r12 ; sar rdx, 2 ; add r15, rdx ; cmp eax, 5 ; je 0x972fc
read: eax r12 r15 rcx rdx rflags 
write: r15 rcx rdx rflags 
--------------------------------------------------------------------------------
0009737f: RLP; mov rax, qword ptr [rbx + 0x28] ; jmp 0x97190
read: 
write: rax 
--------------------------------------------------------------------------------
00097480: RLP; lea r13, [rbx + rax*4 + 4] ; mov rax, qword ptr [rip + 0x2d1930] ; mov rax, qword ptr fs:[rax] ; mov rbx, qword ptr [rax] ; mov rax, qword ptr [rbx + 0x28] ; test rax, rax ; je 0x97663
read: rax rflags 
write: r13 rax rbx rflags 
--------------------------------------------------------------------------------
000974de: RLP; xor r8d, r8d ; mov rdx, r14 ; lea rsi, [rsp + 0x40] ; mov dword ptr [rsp + 8], 1 ; mov dword ptr [rsp], 0 ; lea r9, [rsp + 0x80] ; mov rcx, r13 ; mov rdi, rbp ; call rbx
read: r13 r14 r8d rbp rbx rsp 
write: r8d r9 rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0009750c: RLP; mov rdx, qword ptr [rsp + 0x40] ; mov r15, rdx ; sub r15, r12 ; test eax, 0xfffffffb ; jne 0x9754c
read: eax r12 r15 rdx rflags 
write: eax r15 rdx rflags 
--------------------------------------------------------------------------------
0009760d: RLP; xor r8d, r8d ; mov rcx, r13 ; mov rdx, r14 ; mov dword ptr [rsp + 8], 1 ; mov dword ptr [rsp], 0 ; mov rdi, rbp ; mov r9, qword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
read: r13 r14 r8d rbp rbx rsp 
write: r8d r9 rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00097638: RLP; mov rdx, qword ptr [rsp + 0x40] ; mov rcx, rdx ; sub rcx, r12 ; add r15, rcx ; cmp eax, 5 ; je 0x975fc
read: eax r12 r15 rcx rdx rflags 
write: r15 rcx rdx rflags 
--------------------------------------------------------------------------------
0009767b: RLP; mov rax, qword ptr [rbx + 0x28] ; jmp 0x974a0
read: 
write: rax 
--------------------------------------------------------------------------------
000977f8: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0009782a: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00097858: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0009788a: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000978b8: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000978ea: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00097918: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0009794a: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00097978: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000979aa: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00097a28: RLP; test eax, eax ; jne 0x97a14
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00097c18: RLP; test eax, eax ; je 0x97b3c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00097c34: RLP; sub eax, 0x37 ; jmp 0x97b04
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
00097cd1: RLP; cmp eax, 0x58 ; je 0x97d54
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00097d32: RLP; cmp eax, 0x58 ; jne 0x97d0e
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00097df3: RLP; sub eax, 0x37 ; cmp eax, 9 ; jg 0x97e2b
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00097e27: RLP; test eax, eax ; jne 0x97de4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00097e47: RLP; mov edx, dword ptr [r13] ; mov r14, rax ; mov byte ptr [rsp + 0x13], 1 ; mov eax, 8 ; jmp 0x97a7e
read: rax 
write: eax edx r14 
--------------------------------------------------------------------------------
00097e82: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00097ef7: RLP; test eax, eax ; jne 0x97ee4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000980d8: RLP; test eax, eax ; je 0x9800c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000980f4: RLP; sub eax, 0x37 ; jmp 0x97fd4
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
00098141: RLP; cmp eax, 0x58 ; je 0x981c4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000981a1: RLP; cmp eax, 0x58 ; jne 0x9817d
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0009824b: RLP; sub eax, 0x37 ; cmp eax, 9 ; jg 0x98284
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00098280: RLP; test eax, eax ; jne 0x9823c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000982a0: RLP; mov edx, dword ptr [r14] ; mov r15, rax ; mov byte ptr [rsp + 0x13], 1 ; mov eax, 8 ; jmp 0x97f4c
read: rax 
write: eax edx r15 
--------------------------------------------------------------------------------
000982d2: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00098385: RLP; mov rdx, qword ptr [r15] ; mov rcx, qword ptr [r14] ; add rbp, rdx ; cmp rdx, rbp ; mov qword ptr [r15], rbp ; jbe 0x983d4
read: rbp rdx rflags 
write: rbp rcx rdx rflags 
--------------------------------------------------------------------------------
00098480: RLP; mov rdx, qword ptr [r15] ; mov rcx, qword ptr [r14] ; add rbp, rdx ; cmp rdx, rbp ; mov qword ptr [r15], rbp ; ja 0x984ae
read: rbp rdx rflags 
write: rbp rcx rdx rflags 
--------------------------------------------------------------------------------
0009872c: RLP; mov r14, qword ptr [r12] ; mov r9d, dword ptr [rsp + 8] ; mov rdi, -0x3ff ; sub edi, ebx ; mov esi, r14d ; and esi, 1 ; mov rdx, r13 ; mov ecx, edi ; shr rdx, cl ; and edx, 1 ; jne 0x9876c
read: cl ebx edi edx esi r13 r14d rdx rflags 
write: ecx edi edx esi r14 r9d rdi rdx rflags 
--------------------------------------------------------------------------------
0009882d: RLP; test al, al ; je 0x98855
read: al rflags 
write: rflags 
--------------------------------------------------------------------------------
00098865: RLP; jmp 0x98686
read: 
write: 
--------------------------------------------------------------------------------
000988cd: RLP; test al, al ; mov r9d, dword ptr [rsp + 0xc] ; je 0x9899c
read: al rflags 
write: r9d rflags 
--------------------------------------------------------------------------------
000988fa: RLP; lea rdx, [r13 + 1] ; movabs rax, 0x20000000000000 ; sub r14, rbx ; mov r10d, dword ptr [rsp + 8] ; mov r9d, dword ptr [rsp + 0xc] ; test rax, rdx ; je 0x989c9
read: r14 rax rbx rdx rflags 
write: r10d r14 r9d rax rdx rflags 
--------------------------------------------------------------------------------
00098979: RLP; movabs rax, 0x10000000000000 ; or qword ptr [r12], rax ; cmp rbx, 0x401 ; je 0x98668
read: rax rbx rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000989c1: RLP; mov r9d, dword ptr [rsp + 8] ; sub r14, rbx ; mov edi, r14d ; mov r14, qword ptr [r12] ; mov esi, r14d ; and esi, 1 ; jmp 0x98744
read: esi r14 r14d rbx 
write: edi esi r14 r9d rflags 
--------------------------------------------------------------------------------
00098a49: RLP; test eax, eax ; jne 0x98a34
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00098abf: RLP; lea edx, [rbx - 0x30] ; mov ecx, eax ; cmp edx, 9 ; ja 0x98f7c
read: eax edx rflags 
write: ecx edx rflags 
--------------------------------------------------------------------------------
00098b45: RLP; cmp dword ptr [rsp], 0x10 ; mov r9, qword ptr [rsp + 0x18] ; mov r10, qword ptr [rsp + 0x20] ; sete bl ; cmp eax, 0x70 ; je 0x99015
read: eax rflags 
write: bl r10 r9 rflags 
--------------------------------------------------------------------------------
00098d52: RLP; add r15d, r15d ; add r14, 0x18 ; test r12d, r12d ; je 0x98dbf
read: r12d r14 r15d rflags 
write: r14 r15d rflags 
--------------------------------------------------------------------------------
00098d94: RLP; mov rdx, qword ptr [r14 + 8] ; test rax, rax ; lea rbp, [rbp + rdx - 1] ; jne 0x994d4
read: rax rflags 
write: rbp rdx rflags 
--------------------------------------------------------------------------------
00098df7: RLP; lea rax, [rbx - 1] ; bsr rbp, qword ptr [rsp + rax*8 + 0x240] ; mov qword ptr [rsp + 8], rax ; xor rbp, 0x3f ; test ebp, ebp ; jle 0x98e47
read: ebp rax rbp rflags 
write: rax rbp rflags 
--------------------------------------------------------------------------------
00098e27: RLP; mov rdi, qword ptr [rsp] ; mov rdx, qword ptr [rsp + 0x50] ; mov ecx, ebp ; mov rsi, rdi ; call 0x45cac
read: ebp rdi rip rsp 
write: ecx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
00098e3e: RLP; test rax, rax ; jne 0x99c45
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00098fd0: RLP; cmp qword ptr [rsp + 0x10], 0 ; je 0x98fed
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
0009915f: RLP; test eax, eax ; je 0x9914c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00099246: RLP; lea rdx, [rbp + 4] ; test eax, eax ; cmove rbp, rdx ; mov edi, dword ptr [rbp] ; add rbp, 4 ; lea eax, [rdi - 0x30] ; cmp eax, 9 ; jbe 0x99214
read: eax rbp rdx rflags 
write: eax edi rbp rdx rflags 
--------------------------------------------------------------------------------
0009926b: RLP; sub eax, 0x57 ; jmp 0x99216
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
00099302: RLP; test eax, eax ; sete al ; jmp 0x992a7
read: eax rflags 
write: al rflags 
--------------------------------------------------------------------------------
00099339: RLP; cmp eax, 0x78 ; jne 0x98a90
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00099382: RLP; cmp eax, 0x69 ; je 0x99f66
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000993ea: RLP; sub eax, 0x61 ; cmp eax, 5 ; ja 0x99425
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00099532: RLP; sub eax, 0x61 ; mov r9, qword ptr [rsp + 0x20] ; mov r10, qword ptr [rsp + 0x28] ; cmp eax, 5 ; jbe 0x98ad8
read: eax rflags 
write: eax r10 r9 rflags 
--------------------------------------------------------------------------------
000995c3: RLP; sub eax, 0x61 ; mov ecx, dword ptr [rsp + 0x20] ; mov edx, dword ptr [rsp + 0x28] ; cmp eax, 5 ; ja 0x98fa1
read: eax rflags 
write: eax ecx edx rflags 
--------------------------------------------------------------------------------
00099600: RLP; mov rbp, rax ; mov rax, qword ptr [rsp + 0x58] ; mov r14, qword ptr [rsp + 0x50] ; test rax, rax ; jle 0x99724
read: rax rflags 
write: r14 rax rbp rflags 
--------------------------------------------------------------------------------
00099660: RLP; add r14, qword ptr [rsp + 0x50] ; test rax, rax ; mov qword ptr [rsp + 0x50], r14 ; je 0x996dc
read: r14 rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
000996cd: RLP; add r14, qword ptr [rsp + 0x50] ; test rax, rax ; mov qword ptr [rsp + 0x50], r14 ; jne 0x9966f
read: r14 rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
00099724: RLP; lea rcx, [r14 - 1] ; mov esi, r14d ; shl esi, 6 ; bsr rax, qword ptr [rsp + rcx*8 + 0x60] ; xor rax, 0x3f ; sub esi, eax ; cmp esi, 0x400 ; mov r12d, esi ; jg 0x9a4e0
read: eax esi r14d rax rflags 
write: esi r12d rax rcx rflags 
--------------------------------------------------------------------------------
000997b2: RLP; mov rdx, qword ptr [rsp + 0x50] ; neg rdx ; test rdx, rdx ; mov qword ptr [rsp + rdx*8 + 0x40], rax ; jle 0x997cd
read: rax rdx rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
000997e8: RLP; jmp 0x99003
read: 
write: 
--------------------------------------------------------------------------------
00099827: RLP; test eax, eax ; mov rcx, qword ptr [rsp + 0x50] ; mov r9, qword ptr [rsp + 0x18] ; jle 0x9984c
read: eax rflags 
write: r9 rcx rflags 
--------------------------------------------------------------------------------
000999a3: RLP; cmp qword ptr [rsp + r13*8 + 0x60], rax ; je 0x999cf
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000999c2: RLP; test rax, rax ; je 0x9a3d9
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00099ac8: RLP; jmp 0x99003
read: 
write: 
--------------------------------------------------------------------------------
00099b8b: RLP; jmp 0x99003
read: 
write: 
--------------------------------------------------------------------------------
00099bfc: RLP; mov ecx, 0x40 ; mov rax, rbx ; sub ecx, r13d ; shr rax, cl ; or qword ptr [rsp + 0x40], rax ; mov rdi, qword ptr [rsp + 0x58] ; jmp 0x99b59
read: cl ecx r13d rax rbx 
write: ecx rax rdi rflags 
--------------------------------------------------------------------------------
00099d07: RLP; jmp 0x99003
read: 
write: 
--------------------------------------------------------------------------------
00099da4: RLP; mov r8, qword ptr [rsp + 0x60] ; mov r10d, dword ptr [rsp] ; add r12d, 0x40 ; mov r14, r8 ; xor r8d, r8d ; cmp r12d, 0x35 ; jle 0x98e94
read: r12d r8 r8d rflags 
write: r10d r12d r14 r8 r8d rflags 
--------------------------------------------------------------------------------
00099e6e: RLP; mov ecx, 0x40 ; mov rax, rbp ; sub ecx, r14d ; shr rax, cl ; or qword ptr [rsp + 0x40], rax ; jmp 0x99e30
read: cl ecx r14d rax rbp 
write: ecx rax rflags 
--------------------------------------------------------------------------------
00099f17: RLP; mov r10d, dword ptr [rsp] ; mov ecx, 0x40 ; mov rax, rbx ; mov r8, qword ptr [rsp + 8] ; sub ecx, r10d ; shr rax, cl ; or qword ptr [rsp + 0x40], rax ; jmp 0x99ed8
read: cl ecx r10d rax rbx 
write: ecx r10d r8 rax rflags 
--------------------------------------------------------------------------------
00099f85: RLP; test eax, eax ; jne 0x99394
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00099fba: RLP; lea r8, [r14 + 0x20] ; test eax, eax ; cmove rbx, r8 ; mov qword ptr [r15], rbx ; mov r10d, dword ptr [rsp + 0x38] ; movsd xmm0, qword ptr [rip + 0xa3c48] ; test r10d, r10d ; je 0x99003
read: eax r10d r8 rbx rflags 
write: r10d r8 rbx rflags xmm0 
--------------------------------------------------------------------------------
0009a051: RLP; jmp 0x99003
read: 
write: 
--------------------------------------------------------------------------------
0009a0eb: RLP; test eax, eax ; jne 0x99394
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0009a142: RLP; sub eax, 0x61 ; cmp eax, 0x19 ; jbe 0x9a124
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0009a180: RLP; cmp rbp, qword ptr [rsp + 0x240] ; movsd xmm0, qword ptr [rsp] ; je 0x9a87f
read: rbp rflags 
write: rflags xmm0 
--------------------------------------------------------------------------------
0009a1bb: RLP; jmp 0x99003
read: 
write: 
--------------------------------------------------------------------------------
0009a1df: RLP; mov r10, qword ptr [rsp] ; sub eax, 0x57 ; jmp 0x99192
read: eax 
write: eax r10 rflags 
--------------------------------------------------------------------------------
0009a252: RLP; jmp 0x98dd9
read: 
write: 
--------------------------------------------------------------------------------
0009a2a0: RLP; jmp 0x98c68
read: 
write: 
--------------------------------------------------------------------------------
0009a2f1: RLP; mov rcx, qword ptr [rsp + 0x50] ; mov r9, qword ptr [rsp + 0x18] ; jmp 0x99893
read: 
write: r9 rcx 
--------------------------------------------------------------------------------
0009a32b: RLP; sub rbp, qword ptr [rsp + 0x50] ; test rbp, rbp ; jle 0x997cd
read: rbp rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
0009a4ac: RLP; test rbp, rbp ; jle 0x997cd
read: rbp rflags 
write: rflags 
--------------------------------------------------------------------------------
0009a64d: RLP; mov r9, qword ptr [rsp + 0x20] ; mov r15, rax ; mov r10, qword ptr [rsp + 0x28] ; mov r11, qword ptr [rsp + 0x30] ; cmp r9, rax ; je 0x98b0a
read: r9 rax rflags 
write: r10 r11 r15 r9 rflags 
--------------------------------------------------------------------------------
0009a922: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0009a9d5: RLP; mov rdx, qword ptr [r15] ; mov rcx, qword ptr [r14] ; add rbp, rdx ; cmp rdx, rbp ; mov qword ptr [r15], rbp ; jbe 0x9aa24
read: rbp rdx rflags 
write: rbp rcx rdx rflags 
--------------------------------------------------------------------------------
0009aad8: RLP; mov rdx, qword ptr [r15] ; mov rcx, qword ptr [r14] ; add rbp, rdx ; cmp rdx, rbp ; mov qword ptr [r15], rbp ; ja 0x9ab09
read: rbp rdx rflags 
write: rbp rcx rdx rflags 
--------------------------------------------------------------------------------
0009ad63: RLP; mov r15, qword ptr [rbp] ; mov r9d, dword ptr [rsp] ; mov rdi, -0x3fff ; sub edi, ebx ; mov esi, r15d ; and esi, 1 ; mov rdx, r13 ; mov ecx, edi ; shr rdx, cl ; and edx, 1 ; jne 0x9ada4
read: cl ebx edi edx esi r13 r15d rdx rflags 
write: ecx edi edx esi r15 r9d rdi rdx rflags 
--------------------------------------------------------------------------------
0009ae5e: RLP; test al, al ; je 0x9aeac
read: al rflags 
write: rflags 
--------------------------------------------------------------------------------
0009ae8c: RLP; movabs rax, 0x8000000000000000 ; or qword ptr [rbp], rax ; cmp rbx, 0x4001 ; je 0x9acc0
read: rax rbx rflags 
write: rax rflags 
--------------------------------------------------------------------------------
0009aebd: RLP; jmp 0x9ac92
read: 
write: 
--------------------------------------------------------------------------------
0009af2d: RLP; test al, al ; mov r10d, dword ptr [rsp] ; mov r9d, dword ptr [rsp + 8] ; je 0x9afbf
read: al rflags 
write: r10d r9d rflags 
--------------------------------------------------------------------------------
0009af6f: RLP; cmp r13, -1 ; mov r8, qword ptr [rsp] ; mov r10d, dword ptr [rsp + 8] ; mov r9d, dword ptr [rsp + 0xc] ; jb 0x9aff4
read: r13 rflags 
write: r10d r8 r9d rflags 
--------------------------------------------------------------------------------
0009afeb: RLP; mov r8, qword ptr [rsp] ; mov r9d, dword ptr [rsp + 8] ; mov r15, qword ptr [rbp] ; mov edi, r8d ; mov esi, r15d ; and esi, 1 ; jmp 0x9ad7a
read: esi r15d r8d 
write: edi esi r15 r8 r9d rflags 
--------------------------------------------------------------------------------
0009b079: RLP; test eax, eax ; jne 0x9b064
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0009b0ef: RLP; lea edx, [rbx - 0x30] ; mov ecx, eax ; cmp edx, 9 ; ja 0x9b5b5
read: eax edx rflags 
write: ecx edx rflags 
--------------------------------------------------------------------------------
0009b175: RLP; cmp dword ptr [rsp], 0x10 ; mov r9, qword ptr [rsp + 0x18] ; mov r10, qword ptr [rsp + 0x20] ; sete bl ; cmp eax, 0x70 ; je 0x9b64a
read: eax rflags 
write: bl r10 r9 rflags 
--------------------------------------------------------------------------------
0009b37c: RLP; add r12d, r12d ; add r13, 0x18 ; test ebx, ebx ; je 0x9b3e8
read: ebx r12d r13 rflags 
write: r12d r13 rflags 
--------------------------------------------------------------------------------
0009b3be: RLP; mov rdx, qword ptr [r13 + 8] ; test rax, rax ; lea r14, [r14 + rdx - 1] ; jne 0x9baec
read: rax rflags 
write: r14 rdx rflags 
--------------------------------------------------------------------------------
0009b41d: RLP; lea rax, [rbx - 1] ; bsr r12, qword ptr [rsp + rax*8 + 0x1b40] ; mov qword ptr [rsp + 0x10], rax ; xor r12, 0x3f ; test r12d, r12d ; jle 0x9bb0d
read: r12 r12d rax rflags 
write: r12 rax rflags 
--------------------------------------------------------------------------------
0009b453: RLP; mov rdi, qword ptr [rsp] ; mov rdx, qword ptr [rsp + 0x50] ; mov ecx, r12d ; mov rsi, rdi ; call 0x45cac
read: r12d rdi rip rsp 
write: ecx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
0009b46b: RLP; test rax, rax ; je 0x9bb0d
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0009b60b: RLP; cmp qword ptr [rsp + 0x10], 0 ; je 0x9b628
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
0009b78f: RLP; test eax, eax ; je 0x9b77c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0009b86e: RLP; lea rdx, [rbp + 4] ; test eax, eax ; cmove rbp, rdx ; mov edi, dword ptr [rbp] ; add rbp, 4 ; lea eax, [rdi - 0x30] ; cmp eax, 9 ; jbe 0x9b83c
read: eax rbp rdx rflags 
write: eax edi rbp rdx rflags 
--------------------------------------------------------------------------------
0009b893: RLP; sub eax, 0x57 ; jmp 0x9b83e
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
0009b92a: RLP; test eax, eax ; sete al ; jmp 0x9b8cf
read: eax rflags 
write: al rflags 
--------------------------------------------------------------------------------
0009b961: RLP; cmp eax, 0x78 ; jne 0x9b0c0
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0009b9a7: RLP; cmp eax, 0x69 ; je 0x9c68f
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0009ba12: RLP; sub eax, 0x61 ; cmp eax, 5 ; ja 0x9ba4d
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0009bb54: RLP; sub eax, 0x61 ; mov r9, qword ptr [rsp + 0x20] ; mov r10, qword ptr [rsp + 0x28] ; cmp eax, 5 ; jbe 0x9b108
read: eax rflags 
write: eax r10 r9 rflags 
--------------------------------------------------------------------------------
0009bbe3: RLP; sub eax, 0x61 ; mov ecx, dword ptr [rsp + 0x20] ; mov edx, dword ptr [rsp + 0x28] ; cmp eax, 5 ; ja 0x9b5dc
read: eax rflags 
write: eax ecx edx rflags 
--------------------------------------------------------------------------------
0009bc21: RLP; mov rbp, rax ; mov rax, qword ptr [rsp + 0x58] ; mov rbx, qword ptr [rsp + 0x50] ; test rax, rax ; jle 0x9c177
read: rax rflags 
write: rax rbp rbx rflags 
--------------------------------------------------------------------------------
0009bc81: RLP; mov rdx, r12 ; add rdx, qword ptr [rsp + 0x50] ; test rax, rax ; mov qword ptr [rsp + 0x50], rdx ; jne 0x9bc9c
read: r12 rax rdx rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
0009bcfb: RLP; jmp 0x9bc81
read: 
write: 
--------------------------------------------------------------------------------
0009bdbd: RLP; jmp 0x9b638
read: 
write: 
--------------------------------------------------------------------------------
0009bdfb: RLP; mov ecx, r13d ; mov rax, rbx ; sub ecx, r12d ; shr rax, cl ; or qword ptr [rsp + 0x40], rax ; mov rdi, qword ptr [rsp + 0x58] ; jmp 0x9bd8b
read: cl ecx r12d r13d rax rbx 
write: ecx rax rdi rflags 
--------------------------------------------------------------------------------
0009be94: RLP; test eax, eax ; mov rcx, qword ptr [rsp + 0x50] ; mov r8, qword ptr [rsp + 0x18] ; jle 0x9beb9
read: eax rflags 
write: r8 rcx rflags 
--------------------------------------------------------------------------------
0009c01b: RLP; cmp qword ptr [rsp + r14*8 + 0x60], rax ; je 0x9c047
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0009c03a: RLP; test rax, rax ; je 0x9caf0
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0009c143: RLP; jmp 0x9b638
read: 
write: 
--------------------------------------------------------------------------------
0009c177: RLP; lea rcx, [rbx - 1] ; mov esi, ebx ; shl esi, 6 ; bsr rax, qword ptr [rsp + rcx*8 + 0x60] ; xor rax, 0x3f ; sub esi, eax ; cmp esi, 0x4000 ; mov r14d, esi ; jg 0x9ccc5
read: eax ebx esi rax rflags 
write: esi r14d rax rcx rflags 
--------------------------------------------------------------------------------
0009c22f: RLP; jmp 0x9b638
read: 
write: 
--------------------------------------------------------------------------------
0009c327: RLP; sub r12, qword ptr [rsp + 0x50] ; test r12, r12 ; jle 0x9c33a
read: r12 rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
0009c355: RLP; jmp 0x9b638
read: 
write: 
--------------------------------------------------------------------------------
0009c39c: RLP; mov r8, qword ptr [rsp + 0x60] ; mov r10d, dword ptr [rsp] ; add r14d, 0x40 ; mov r13, r8 ; xor r8d, r8d ; cmp r14d, 0x40 ; jle 0x9b4cf
read: r14d r8 r8d rflags 
write: r10d r13 r14d r8 r8d rflags 
--------------------------------------------------------------------------------
0009c48b: RLP; mov ecx, ebp ; mov rax, r12 ; sub ecx, r14d ; shr rax, cl ; or qword ptr [rsp + 0x40], rax ; mov rdx, qword ptr [rsp + 0x58] ; jmp 0x9c0e4
read: cl ebp ecx r12 r14d rax 
write: ecx rax rdx rflags 
--------------------------------------------------------------------------------
0009c505: RLP; mov r10d, dword ptr [rsp] ; mov ecx, ebp ; mov rax, rbx ; mov r8, qword ptr [rsp + 8] ; sub ecx, r10d ; shr rax, cl ; or qword ptr [rsp + 0x40], rax ; mov rdx, qword ptr [rsp + 0x58] ; jmp 0x9b584
read: cl ebp ecx r10d rax rbx 
write: ecx r10d r8 rax rdx rflags 
--------------------------------------------------------------------------------
0009c5da: RLP; jmp 0x9b638
read: 
write: 
--------------------------------------------------------------------------------
0009c650: RLP; jmp 0x9b638
read: 
write: 
--------------------------------------------------------------------------------
0009c6ae: RLP; test eax, eax ; jne 0x9b9b9
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0009c6e3: RLP; lea r8, [r15 + 0x20] ; test eax, eax ; cmove rbx, r8 ; mov qword ptr [r14], rbx ; mov r10d, dword ptr [rsp + 0x38] ; test r10d, r10d ; jne 0x9c8d4
read: eax r10d r8 rbx rflags 
write: r10d r8 rbx rflags 
--------------------------------------------------------------------------------
0009c728: RLP; test eax, eax ; jne 0x9b9b9
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0009c77a: RLP; sub eax, 0x61 ; cmp eax, 0x19 ; jbe 0x9c75c
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0009c7a8: RLP; cmp rbp, qword ptr [rsp + 0x60] ; je 0x9cb5c
read: rbp rflags 
write: rflags 
--------------------------------------------------------------------------------
0009c7f1: RLP; mov r10, qword ptr [rsp] ; sub eax, 0x57 ; jmp 0x9b7bc
read: eax 
write: eax r10 rflags 
--------------------------------------------------------------------------------
0009c8a5: RLP; jmp 0x9b290
read: 
write: 
--------------------------------------------------------------------------------
0009c92b: RLP; mov rcx, qword ptr [rsp + 0x50] ; mov r8, qword ptr [rsp + 0x18] ; jmp 0x9bf00
read: 
write: r8 rcx 
--------------------------------------------------------------------------------
0009c956: RLP; jmp 0x9b3ff
read: 
write: 
--------------------------------------------------------------------------------
0009ca52: RLP; test r12, r12 ; jle 0x9c33a
read: r12 rflags 
write: rflags 
--------------------------------------------------------------------------------
0009cde2: RLP; mov r9, qword ptr [rsp + 0x20] ; mov r14, rax ; mov r10, qword ptr [rsp + 0x28] ; mov r11, qword ptr [rsp + 0x30] ; cmp r9, rax ; je 0x9b13a
read: r9 rax rflags 
write: r10 r11 r14 r9 rflags 
--------------------------------------------------------------------------------
0009cea2: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0009cf55: RLP; mov rdx, qword ptr [r15] ; mov rcx, qword ptr [r14] ; add rbp, rdx ; cmp rdx, rbp ; mov qword ptr [r15], rbp ; jbe 0x9cfa4
read: rbp rdx rflags 
write: rbp rcx rdx rflags 
--------------------------------------------------------------------------------
0009d050: RLP; mov rdx, qword ptr [r15] ; mov rcx, qword ptr [r14] ; add rbp, rdx ; cmp rdx, rbp ; mov qword ptr [r15], rbp ; ja 0x9d07e
read: rbp rdx rflags 
write: rbp rcx rdx rflags 
--------------------------------------------------------------------------------
0009d2fc: RLP; mov r14, qword ptr [r12] ; mov r9d, dword ptr [rsp + 8] ; mov rdi, -0x7f ; sub edi, ebx ; mov esi, r14d ; and esi, 1 ; mov rdx, r13 ; mov ecx, edi ; shr rdx, cl ; and edx, 1 ; jne 0x9d33c
read: cl ebx edi edx esi r13 r14d rdx rflags 
write: ecx edi edx esi r14 r9d rdi rdx rflags 
--------------------------------------------------------------------------------
0009d3fd: RLP; test al, al ; je 0x9d41c
read: al rflags 
write: rflags 
--------------------------------------------------------------------------------
0009d42c: RLP; jmp 0x9d253
read: 
write: 
--------------------------------------------------------------------------------
0009d48d: RLP; test al, al ; mov r9d, dword ptr [rsp + 0xc] ; je 0x9d55c
read: al rflags 
write: r9d rflags 
--------------------------------------------------------------------------------
0009d4ba: RLP; lea rax, [r13 + 1] ; sub r14, rbx ; mov r10d, dword ptr [rsp + 8] ; mov r9d, dword ptr [rsp + 0xc] ; test eax, 0x1000000 ; je 0x9d589
read: eax r14 rbx rflags 
write: eax r10d r14 r9d rax rflags 
--------------------------------------------------------------------------------
0009d539: RLP; or qword ptr [r12], 0x800000 ; cmp rbx, 0x81 ; je 0x9d235
read: rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
0009d581: RLP; mov r9d, dword ptr [rsp + 8] ; sub r14, rbx ; mov edi, r14d ; mov r14, qword ptr [r12] ; mov esi, r14d ; and esi, 1 ; jmp 0x9d314
read: esi r14 r14d rbx 
write: edi esi r14 r9d rflags 
--------------------------------------------------------------------------------
0009d609: RLP; test eax, eax ; jne 0x9d5f4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0009d680: RLP; lea edx, [rbx - 0x30] ; mov ecx, eax ; cmp edx, 9 ; ja 0x9db4c
read: eax edx rflags 
write: ecx edx rflags 
--------------------------------------------------------------------------------
0009d709: RLP; cmp dword ptr [rsp + 8], 0x10 ; mov r10, qword ptr [rsp + 0x20] ; sete bl ; cmp eax, 0x70 ; je 0x9dbec
read: eax rflags 
write: bl r10 rflags 
--------------------------------------------------------------------------------
0009d913: RLP; add r15d, r15d ; add r14, 0x18 ; test r13d, r13d ; je 0x9d984
read: r13d r14 r15d rflags 
write: r14 r15d rflags 
--------------------------------------------------------------------------------
0009d955: RLP; mov rdx, qword ptr [r14 + 8] ; test rax, rax ; lea rbp, [rbp + rdx - 1] ; jne 0x9e0fc
read: rax rflags 
write: rbp rdx rflags 
--------------------------------------------------------------------------------
0009d9bb: RLP; lea rax, [rbx - 1] ; bsr r12, qword ptr [rsp + rax*8 + 0xb0] ; mov qword ptr [rsp + 8], rax ; xor r12, 0x3f ; test r12d, r12d ; jle 0x9da0e
read: r12 r12d rax rflags 
write: r12 rax rflags 
--------------------------------------------------------------------------------
0009d9ed: RLP; mov rdi, qword ptr [rsp] ; mov rdx, qword ptr [rsp + 0x50] ; mov ecx, r12d ; mov rsi, rdi ; call 0x45cac
read: r12d rdi rip rsp 
write: ecx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
0009da05: RLP; test rax, rax ; jne 0x9e6d2
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0009dba2: RLP; cmp qword ptr [rsp + 0x18], 0 ; je 0x9dbc4
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
0009dd30: RLP; test eax, eax ; je 0x9dd1c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0009de18: RLP; lea rdx, [rbx + 4] ; test eax, eax ; cmove rbx, rdx ; mov edi, dword ptr [rbx] ; add rbx, 4 ; lea eax, [rdi - 0x30] ; cmp eax, 9 ; jbe 0x9dde4
read: eax rbx rdx rflags 
write: eax edi rbx rdx rflags 
--------------------------------------------------------------------------------
0009de3c: RLP; sub eax, 0x57 ; jmp 0x9dde6
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
0009deda: RLP; test eax, eax ; sete al ; jmp 0x9de7f
read: eax rflags 
write: al rflags 
--------------------------------------------------------------------------------
0009df15: RLP; cmp eax, 0x78 ; jne 0x9d651
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0009df66: RLP; cmp eax, 0x69 ; je 0x9ed74
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0009dfe2: RLP; sub eax, 0x61 ; cmp eax, 5 ; ja 0x9e01d
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0009e098: RLP; sub eax, 0x61 ; mov ecx, dword ptr [rsp] ; mov edx, dword ptr [rsp + 0x28] ; cmp eax, 5 ; ja 0x9db72
read: eax rflags 
write: eax ecx edx rflags 
--------------------------------------------------------------------------------
0009e158: RLP; sub eax, 0x61 ; mov r10, qword ptr [rsp + 0x28] ; cmp eax, 5 ; jbe 0x9d69e
read: eax rflags 
write: eax r10 rflags 
--------------------------------------------------------------------------------
0009e1d9: RLP; mov r13, rax ; mov rax, qword ptr [rsp + 0x58] ; mov r14, qword ptr [rsp + 0x50] ; mov r9, qword ptr [rsp + 8] ; test rax, rax ; jle 0x9e311
read: rax rflags 
write: r13 r14 r9 rax rflags 
--------------------------------------------------------------------------------
0009e240: RLP; add r14, qword ptr [rsp + 0x50] ; test rax, rax ; mov qword ptr [rsp + 0x50], r14 ; je 0x9e2bc
read: r14 rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
0009e2ad: RLP; add r14, qword ptr [rsp + 0x50] ; test rax, rax ; mov qword ptr [rsp + 0x50], r14 ; jne 0x9e24f
read: r14 rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
0009e30c: RLP; mov r9, qword ptr [rsp + 8] ; lea rdx, [r14 - 1] ; mov esi, r14d ; shl esi, 6 ; bsr rax, qword ptr [rsp + rdx*8 + 0x60] ; xor rax, 0x3f ; sub esi, eax ; cmp esi, 0x80 ; mov ebp, esi ; jg 0x9f1c0
read: eax esi r14d rax rflags 
write: ebp esi r9 rax rdx rflags 
--------------------------------------------------------------------------------
0009e3a3: RLP; mov rdx, qword ptr [rsp + 0x50] ; neg rdx ; test rdx, rdx ; mov qword ptr [rsp + rdx*8 + 0x40], rax ; jle 0x9e3be
read: rax rdx rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
0009e3db: RLP; jmp 0x9dbd9
read: 
write: 
--------------------------------------------------------------------------------
0009e444: RLP; test eax, eax ; mov rcx, qword ptr [rsp + 0x50] ; mov r9, qword ptr [rsp + 0x18] ; jle 0x9e469
read: eax rflags 
write: r9 rcx rflags 
--------------------------------------------------------------------------------
0009e607: RLP; jmp 0x9dbd9
read: 
write: 
--------------------------------------------------------------------------------
0009e68a: RLP; mov ecx, 0x40 ; mov rax, rbx ; sub ecx, r13d ; shr rax, cl ; or qword ptr [rsp + 0x40], rax ; mov rdi, qword ptr [rsp + 0x58] ; jmp 0x9e5d3
read: cl ecx r13d rax rbx 
write: ecx rax rdi rflags 
--------------------------------------------------------------------------------
0009e72e: RLP; test eax, eax ; jne 0x9df78
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0009e78a: RLP; sub eax, 0x61 ; cmp eax, 0x19 ; jbe 0x9e76c
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0009e7c9: RLP; cmp r13, qword ptr [rsp + 0xb0] ; movss xmm0, dword ptr [rsp] ; je 0x9f3de
read: r13 rflags 
write: rflags xmm0 
--------------------------------------------------------------------------------
0009e87f: RLP; jmp 0x9dbd9
read: 
write: 
--------------------------------------------------------------------------------
0009e8cb: RLP; mov r8, qword ptr [rsp + 0x60] ; mov r10d, dword ptr [rsp] ; add ebp, 0x40 ; mov r14, r8 ; xor r8d, r8d ; cmp ebp, 0x18 ; jle 0x9da60
read: ebp r8 r8d rflags 
write: ebp r10d r14 r8 r8d rflags 
--------------------------------------------------------------------------------
0009e9cc: RLP; cmp qword ptr [rsp + rbx*8 + 0x60], rax ; je 0x9e9f8
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0009e9eb: RLP; test rax, rax ; je 0x9f381
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0009eb03: RLP; jmp 0x9dbd9
read: 
write: 
--------------------------------------------------------------------------------
0009eb84: RLP; mov ecx, 0x40 ; mov rax, r12 ; sub ecx, r15d ; shr rax, cl ; or qword ptr [rsp + 0x40], rax ; jmp 0x9eb44
read: cl ecx r12 r15d rax 
write: ecx rax rflags 
--------------------------------------------------------------------------------
0009ec29: RLP; mov r10d, dword ptr [rsp] ; mov ecx, 0x40 ; mov rax, rbx ; mov r8, qword ptr [rsp + 0x10] ; sub ecx, r10d ; shr rax, cl ; or qword ptr [rsp + 0x40], rax ; jmp 0x9ebec
read: cl ecx r10d rax rbx 
write: ecx r10d r8 rax rflags 
--------------------------------------------------------------------------------
0009ed6f: RLP; jmp 0x9dbd9
read: 
write: 
--------------------------------------------------------------------------------
0009ed93: RLP; test eax, eax ; jne 0x9df78
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0009edc8: RLP; lea r8, [r14 + 0x20] ; test eax, eax ; cmove rbx, r8 ; mov qword ptr [r15], rbx ; mov r10d, dword ptr [rsp + 0x38] ; movss xmm0, dword ptr [rip + 0x9ee96] ; test r10d, r10d ; je 0x9dbd9
read: eax r10d r8 rbx rflags 
write: r10d r8 rbx rflags xmm0 
--------------------------------------------------------------------------------
0009ee17: RLP; jmp 0x9dbd9
read: 
write: 
--------------------------------------------------------------------------------
0009ee28: RLP; sub eax, 0x57 ; nop ; jmp 0x9dd5b
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
0009eea9: RLP; mov r9, qword ptr [rsp + 8] ; jmp 0x9d82a
read: 
write: r9 
--------------------------------------------------------------------------------
0009ef08: RLP; jmp 0x9d99d
read: 
write: 
--------------------------------------------------------------------------------
0009ef36: RLP; mov rcx, qword ptr [rsp + 0x50] ; jmp 0x9e4af
read: 
write: rcx 
--------------------------------------------------------------------------------
0009efe6: RLP; sub rbp, qword ptr [rsp + 0x50] ; test rbp, rbp ; jle 0x9e3be
read: rbp rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
0009f060: RLP; test rbp, rbp ; jle 0x9e3be
read: rbp rflags 
write: rflags 
--------------------------------------------------------------------------------
0009f4ae: RLP; mov r10, qword ptr [rsp + 0x28] ; mov r15, rax ; mov r11, qword ptr [rsp + 0x30] ; cmp r10, rax ; je 0x9d6d2
read: r10 rax rflags 
write: r10 r11 r15 rflags 
--------------------------------------------------------------------------------
0009f572: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0009f598: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0009f5c8: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0009f9b5: RLP; test eax, eax ; mov ecx, eax ; jns 0x9f964
read: eax rflags 
write: ecx rflags 
--------------------------------------------------------------------------------
0009fc9e: RLP; test eax, eax ; mov edi, eax ; jns 0x9fc7c
read: eax rflags 
write: edi rflags 
--------------------------------------------------------------------------------
0009fedd: RLP; test eax, eax ; mov edi, eax ; jns 0x9fe84
read: eax rflags 
write: edi rflags 
--------------------------------------------------------------------------------
000a01d3: RLP; mov rdi, qword ptr [rbp - 0x140] ; mov rbx, rax ; call 0x957cc
read: rax rip rsp 
write: rbx rdi rsp 
--------------------------------------------------------------------------------
000a01e6: RLP; test rbx, rbx ; mov rsi, rax ; je 0xa0774
read: rax rbx rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
000a03ac: RLP; mov rdi, qword ptr [rbp - 0x120] ; mov r8, r14 ; mov rcx, r12 ; mov edx, ebx ; mov esi, r15d ; call 0x9f72c
read: ebx r12 r14 r15d rip rsp 
write: edx esi r8 rcx rdi rsp 
--------------------------------------------------------------------------------
000a03c7: RLP; mov esi, dword ptr [rbp - 0x110] ; test esi, esi ; je 0xa054c
read: esi rflags 
write: esi rflags 
--------------------------------------------------------------------------------
000a05d3: RLP; mov eax, dword ptr [rbp - 0x118] ; lea rsp, [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: rsp 
write: eax r12 r13 r14 r15 rbp rbx rsp 
--------------------------------------------------------------------------------
000a05f1: RLP; lea rsp, [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rsp 
--------------------------------------------------------------------------------
000a063a: RLP; mov rax, qword ptr [rbp - 0x150] ; mov r9, qword ptr [rbp - 0x148] ; mov rcx, r14 ; mov r8, qword ptr [rbp - 0x160] ; mov rdi, qword ptr [rbp - 0x120] ; mov rdx, r12 ; mov dword ptr [rsp + 8], ebx ; mov esi, r15d ; mov qword ptr [rsp], rax ; call 0x9fbac
read: ebx r12 r14 r15d rax rip rsp 
write: esi r8 r9 rax rcx rdi rdx rsp 
--------------------------------------------------------------------------------
000a0670: RLP; jmp 0xa03c7
read: 
write: 
--------------------------------------------------------------------------------
000a06a7: RLP; mov rax, qword ptr [rbp - 0x150] ; mov r9, qword ptr [rbp - 0x148] ; mov rcx, r14 ; mov r8, qword ptr [rbp - 0x160] ; mov rdi, qword ptr [rbp - 0x120] ; mov rdx, r12 ; mov esi, r15d ; mov qword ptr [rsp], rax ; call 0x9f87c
read: r12 r14 r15d rax rip rsp 
write: esi r8 r9 rax rcx rdi rdx rsp 
--------------------------------------------------------------------------------
000a06d9: RLP; jmp 0xa03c7
read: 
write: 
--------------------------------------------------------------------------------
000a0818: RLP; test eax, eax ; mov rdx, qword ptr [rbp - 0x120] ; mov rsi, qword ptr [rbp - 0x128] ; jne 0xa04aa
read: eax rflags 
write: rdx rflags rsi 
--------------------------------------------------------------------------------
000a0841: RLP; test rax, rax ; mov qword ptr [rbp - 0xd0], rax ; mov rsi, qword ptr [rbp - 0x120] ; je 0xa02a5
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
000a0905: RLP; test rbx, rbx ; mov rdx, rax ; jne 0xa092b
read: rax rbx rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
000a0a3f: RLP; test eax, eax ; mov edi, eax ; jns 0xa0a04
read: eax rflags 
write: edi rflags 
--------------------------------------------------------------------------------
000a0b41: RLP; jmp 0xa0919
read: 
write: 
--------------------------------------------------------------------------------
000a106f: RLP; jmp 0xa1059
read: 
write: 
--------------------------------------------------------------------------------
000a1101: RLP; test eax, eax ; mov rcx, qword ptr [rbp - 0x40] ; mov rdx, qword ptr [rbp - 0x60] ; jne 0xa099e
read: eax rflags 
write: rcx rdx rflags 
--------------------------------------------------------------------------------
000a1121: RLP; mov rdx, qword ptr [rbp - 0x40] ; mov qword ptr [rbp - 0x70], rax ; shl rdx, 2 ; test rax, rax ; lea rdi, [rax + rdx] ; mov qword ptr [rbp - 0x40], rdi ; je 0xa09a2
read: rax rdi rdx rflags 
write: rdi rdx rflags 
--------------------------------------------------------------------------------
000a118d: RLP; mov edi, dword ptr [rbx - 4] ; mov r12d, eax ; call 0xe6c5c
read: eax rip rsp 
write: edi r12d rsp 
--------------------------------------------------------------------------------
000a119c: RLP; test r12d, r12d ; jne 0xa1174
read: r12d rflags 
write: rflags 
--------------------------------------------------------------------------------
000a120b: RLP; mov edi, dword ptr [rbx - 4] ; mov r13d, eax ; call 0xe6c5c
read: eax rip rsp 
write: edi r13d rsp 
--------------------------------------------------------------------------------
000a121a: RLP; cmp r13d, eax ; je 0xa11ec
read: eax r13d rflags 
write: rflags 
--------------------------------------------------------------------------------
000a1278: RLP; mov edi, dword ptr [rbx - 4] ; mov r12d, eax ; mov rsi, r13 ; call 0xe75ec
read: eax r13 rip rsp 
write: edi r12d rsi rsp 
--------------------------------------------------------------------------------
000a128a: RLP; test r12d, r12d ; jne 0xa125c
read: r12d rflags 
write: rflags 
--------------------------------------------------------------------------------
000a130e: RLP; mov edi, dword ptr [rbx - 4] ; mov r13d, eax ; mov rsi, r14 ; call 0xe75ec
read: eax r14 rip rsp 
write: edi r13d rsi rsp 
--------------------------------------------------------------------------------
000a1320: RLP; cmp r13d, eax ; je 0xa12ec
read: eax r13d rflags 
write: rflags 
--------------------------------------------------------------------------------
000a136b: RLP; mov rdi, qword ptr [rbx] ; mov rsi, qword ptr [rbx + 8] ; call 0x241ac
read: rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
000a137b: RLP; mov rdi, rbx ; call 0x1f46c
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000a1387: RLP; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
000a13ac: RLP; test eax, eax ; jne 0xa13ec
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a13c8: RLP; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
read: eax rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
000a143c: RLP; test rax, rax ; mov r12, rax ; je 0xa15cf
read: rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
000a150b: RLP; test rax, rax ; mov qword ptr [r12], rax ; je 0xa15e4
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a1530: RLP; mov qword ptr [r12 + 0x10], rax ; test rax, rax ; je 0xa15ac
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a1574: RLP; lea rsp, [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
read: rsp 
write: r12 r13 rbp rbx rsp 
--------------------------------------------------------------------------------
000a15a5: RLP; jmp 0xa141e
read: 
write: 
--------------------------------------------------------------------------------
000a15c3: RLP; mov rdi, r12 ; call 0x1f46c
read: r12 rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000a15cf: RLP; lea rax, [rip + 0x2c4e26] ; mov qword ptr [rbx + 0x28], rax ; jmp 0xa1549
read: rax 
write: rax 
--------------------------------------------------------------------------------
000a162f: RLP; mov r8, rax ; jmp 0xa14ef
read: rax 
write: r8 
--------------------------------------------------------------------------------
000a16d5: RLP; mov rax, qword ptr [rbp + 0x28] ; jmp 0xa1680
read: 
write: rax 
--------------------------------------------------------------------------------
000a1710: RLP; test rax, rax ; mov qword ptr [rbx], rax ; mov ecx, 1 ; je 0xa173f
read: rax rflags 
write: ecx rflags 
--------------------------------------------------------------------------------
000a1734: RLP; xor ecx, ecx ; test rax, rax ; mov qword ptr [rbx + 0x10], rax ; je 0xa174c
read: ecx rax rflags 
write: ecx rflags 
--------------------------------------------------------------------------------
000a175c: RLP; mov ecx, 1 ; jmp 0xa173f
read: 
write: ecx 
--------------------------------------------------------------------------------
000a186c: RLP; lea rbx, [rbx + rax + 1] ; mov rdi, rbp ; call 0x11c1dc
read: rbp rip rsp 
write: rbx rdi rsp 
--------------------------------------------------------------------------------
000a187d: RLP; xor r8d, r8d ; mov rcx, rbx ; mov rdx, r13 ; mov dword ptr [rsp + 8], 1 ; mov dword ptr [rsp], 0 ; mov r9, r15 ; mov rsi, r14 ; mov rdi, r12 ; call rbp
read: r12 r13 r14 r15 r8d rbp rbx rsp 
write: r8d r9 rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000a18a4: RLP; cmp eax, 4 ; setne dl ; cmp eax, 7 ; setne cl ; and cl, dl ; je 0xa1834
read: cl dl eax rflags 
write: cl dl rflags 
--------------------------------------------------------------------------------
000a199d: RLP; lea rax, [rbx + rax + 1] ; lea r15, [rsp + 0x40] ; lea r14, [rsp + 0x50] ; xor ebx, ebx ; mov qword ptr [rsp + 0x18], rax ; mov rax, qword ptr [rsp + 0x70] ; mov rax, qword ptr [rax] ; mov qword ptr [rsp + 0x30], rax ; lea rax, [rsp + 0x30] ; mov qword ptr [rsp + 0x70], rax ; lea rax, [rsp + 0x190] ; mov qword ptr [rsp + 0x58], rax ; lea rax, [rsp + 0x48] ; mov qword ptr [rsp + 0x20], rax ; nop dword ptr [rax]
read: ebx rax 
write: ebx r14 r15 rax rflags 
--------------------------------------------------------------------------------
000a19f5: RLP; xor r8d, r8d ; mov rcx, qword ptr [rsp + 0x18] ; mov rdx, qword ptr [rsp + 0x20] ; mov dword ptr [rsp + 8], 1 ; mov dword ptr [rsp], 0 ; mov r9, r15 ; mov rsi, r14 ; mov rdi, r12 ; call rbp
read: r12 r14 r15 r8d rbp rsp 
write: r8d r9 rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000a1a20: RLP; mov rcx, qword ptr [rsp + 0x50] ; mov rdx, rcx ; sub rdx, r13 ; sar rdx, 2 ; add rbx, rdx ; cmp eax, 5 ; je 0xa19e4
read: eax r13 rbx rcx rdx rflags 
write: rbx rcx rdx rflags 
--------------------------------------------------------------------------------
000a1aef: RLP; mov rax, qword ptr [rbx + 0x28] ; mov rsi, qword ptr [rsp + 0x28] ; jmp 0xa17c7
read: 
write: rax rsi 
--------------------------------------------------------------------------------
000a1bee: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rbx + 0x88] ; mov rcx, qword ptr [r8] ; mov qword ptr [rdx + 8], rbp ; add dword ptr [rdx + 4], 1 ; lea rax, [rsp + 0xf0] ; or dword ptr [rcx + 0x74], 0x10 ; mov rdi, qword ptr [r8] ; lea rdx, [rsp + 8] ; xor ecx, ecx ; mov rsi, r10 ; mov qword ptr [rsp + 0x10], rax ; lea rax, [rsp + 0x20] ; mov dword ptr [rsp + 8], 8 ; mov dword ptr [rsp + 0xc], 0x30
read: ecx r10 rax rbp rsp 
write: ecx rax rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000a1c48: RLP; and dword ptr [rbx + 0x74], 0xffffffeb ; test dword ptr [rbx], 0x8000 ; mov edx, eax ; jne 0xa1c99
read: eax rflags 
write: edx rflags 
--------------------------------------------------------------------------------
000a1c92: RLP; add rsp, 0x80 ; add rsp, 0xd8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
read: edx rsp 
write: eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000a1d0a: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
000a1d8a: RLP; add rsp, 0x80 ; mov r8, qword ptr [rbx + 0x88] ; mov rdi, qword ptr [r10] ; mov qword ptr [r8 + 8], r12 ; add dword ptr [r8 + 4], 1 ; or dword ptr [rdi + 0x74], 0x10 ; xor ecx, ecx ; mov rsi, rbp ; call 0x60fdc
read: ecx r12 rbp rip rsp 
write: ecx r8 rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000a1db6: RLP; and dword ptr [rbx + 0x74], 0xffffffeb ; test dword ptr [rbx], 0x8000 ; mov edx, eax ; jne 0xa1e07
read: eax rflags 
write: edx rflags 
--------------------------------------------------------------------------------
000a1e00: RLP; add rsp, 0x80 ; pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
read: edx rsp 
write: eax r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000a1e6f: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
000a1f3a: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rbx + 0x88] ; mov qword ptr [rdx + 8], r10 ; add dword ptr [rdx + 4], 1 ; lea rax, [rsp + 0xe0] ; or dword ptr [rbx + 0x74], 0x10 ; lea rdx, [rsp + 8] ; xor ecx, ecx ; mov rsi, r9 ; mov rdi, rbx ; mov qword ptr [rsp + 0x10], rax ; lea rax, [rsp + 0x20] ; mov dword ptr [rsp + 8], 0x10 ; mov dword ptr [rsp + 0xc], 0x30 ; mov qword ptr [rsp + 0x18], rax
read: ecx r10 r9 rax rbx rsp 
write: ecx rax rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000a1f91: RLP; and dword ptr [rbx + 0x74], 0xffffffeb ; test dword ptr [rbx], 0x8000 ; mov edx, eax ; jne 0xa1fe2
read: eax rflags 
write: edx rflags 
--------------------------------------------------------------------------------
000a1fdb: RLP; add rsp, 0x80 ; add rsp, 0xd0 ; mov eax, edx ; pop rbx ; ret
read: edx rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
000a2043: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
000a20bb: RLP; add rsp, 0x80 ; mov r8, qword ptr [rbx + 0x88] ; mov qword ptr [r8 + 8], rbp ; add dword ptr [r8 + 4], 1 ; or dword ptr [rbx + 0x74], 0x10 ; xor ecx, ecx ; mov rsi, r10 ; mov rdi, rbx ; call 0x60fdc
read: ecx r10 rbp rbx rip rsp 
write: ecx r8 rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000a20e7: RLP; and dword ptr [rbx + 0x74], 0xffffffeb ; test dword ptr [rbx], 0x8000 ; mov edx, eax ; jne 0xa2138
read: eax rflags 
write: edx rflags 
--------------------------------------------------------------------------------
000a2131: RLP; add rsp, 0x80 ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
read: edx rsp 
write: eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000a2197: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
000a223b: RLP; add rsp, 0xd8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000a2294: RLP; mov rdi, rsp ; mov esi, 1 ; call 0x73bdc
read: rip rsp 
write: esi rdi rsp 
--------------------------------------------------------------------------------
000a22a5: RLP; mov rsi, r13 ; mov rdi, rsp ; xor ecx, ecx ; xor edx, edx ; call 0x71d5c
read: ecx edx r13 rip rsp 
write: ecx edx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000a22b8: RLP; mov rdx, r12 ; mov rsi, rbp ; mov rdi, rsp ; xor ecx, ecx ; or dword ptr [rsp + 0x74], 0x10 ; call 0x60fdc
read: ecx r12 rbp rip rsp 
write: ecx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000a22d1: RLP; add rsp, 0x248 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rsp 
write: r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000a23bd: RLP; mov dword ptr [rsp + 8], 1 ; mov dword ptr [rsp], 0 ; xor r8d, r8d ; lea rdx, [rsp + 0x38] ; lea rsi, [rsp + 0x40] ; lea r9, [rsp + 0x30] ; mov rcx, qword ptr [rsp + 0x18] ; mov rdi, qword ptr [r13] ; call r12
read: r12 r8d rsp 
write: r8d r9 rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000a23ee: RLP; test eax, 0xfffffffb ; je 0xa244c
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000a2539: RLP; mov r13, qword ptr [r12 + 0x28] ; mov rdx, qword ptr [rsp + 0x18] ; jmp 0xa2380
read: 
write: r13 rdx 
--------------------------------------------------------------------------------
000a25b1: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000a2a51: RLP; test eax, eax ; js 0xa2a94
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a2ad2: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000a2af9: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000a2b25: RLP; test eax, eax ; jne 0xa2b5d
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a2b7d: RLP; mov rdi, rax ; call 0xa2adc
read: rax rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000a2b89: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000a2bb4: RLP; mov rsi, rbx ; mov rdi, rax ; call 0xa2abc
read: rax rbx rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
000a2bc3: RLP; add rsp, 0x40 ; pop rbx ; ret
read: rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
000a2c12: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000a2c36: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000a2c55: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000a2c79: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000a2dd4: RLP; test rax, rax ; je 0xa2dec
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a2e46: RLP; test rax, rax ; jne 0xa2e04
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a2e73: RLP; jmp 0xa2dd9
read: 
write: 
--------------------------------------------------------------------------------
000a2ebf: RLP; lea rdx, [rax + rbx] ; cmp rdx, rbx ; setge sil ; shr rax, 0x3f ; mov rcx, rax ; mov rax, rdx ; cmp sil, cl ; jne 0xa2efd
read: cl rax rbx rdx rflags sil 
write: rax rcx rdx rflags sil 
--------------------------------------------------------------------------------
000a3094: RLP; mov r15, rax ; mov qword ptr [rsp + 0x70], rax ; mov qword ptr [rsp + 0xa0], rax ; mov qword ptr [rsp + 0x98], rax ; lea rax, [rsp + 0xb0] ; xor edi, edi ; mov qword ptr [rsp + 0x78], r13 ; mov r13, r15 ; mov r15d, edi ; mov qword ptr [rsp + 0x40], rax ; lea rax, [rsp + 0x98] ; mov qword ptr [rsp + 0x48], rax ; jmp 0xa310d
read: edi r13 r15 rax 
write: edi r13 r15 r15d rax rflags 
--------------------------------------------------------------------------------
000a3125: RLP; mov r14, qword ptr [rsp + 0x98] ; mov ecx, dword ptr [rsp + 0x2c] ; mov r8d, r12d ; mov edx, dword ptr [rsp + 0x58] ; mov rsi, qword ptr [rsp + 0x30] ; mov rdi, rbp ; mov qword ptr [rsp], rax ; mov r9, r14 ; call 0xa2e7c
read: r12d r14 rax rbp rip rsp 
write: ecx edx r14 r8d r9 rdi rsi rsp 
--------------------------------------------------------------------------------
000a3150: RLP; cmp r14, rax ; je 0xa32ec
read: r14 rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a3236: RLP; test rax, rax ; je 0xa329c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a33c1: RLP; mov eax, dword ptr [rsp + 0x110] ; test eax, eax ; sete dl ; cmp dl, byte ptr [rsp + 0x78] ; je 0xa33ec
read: dl eax rflags 
write: dl eax rflags 
--------------------------------------------------------------------------------
000a3421: RLP; mov rdx, qword ptr [rsp + 0x40] ; mov rsi, qword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x38] ; mov qword ptr [rsp + 0x98], rax ; call 0xa2dac
read: rax rip rsp 
write: rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000a3441: RLP; mov rax, qword ptr [rsp + 0x98] ; jmp 0xa31ac
read: 
write: rax 
--------------------------------------------------------------------------------
000a346d: RLP; lea rdx, [rip + 0x2c8640] ; lea rsi, [rip - 0x83f] ; mov rdi, rbx ; call 0xa2f3c
read: rbx rip rsp 
write: rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000a3487: RLP; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
000a3509: RLP; mov rdx, -0x9ffc00 ; test rax, rax ; cmovne rdx, rax ; add rsp, 0x28 ; mov rax, rdx ; ret
read: rax rdx rflags rsp 
write: rax rdx rflags rsp 
--------------------------------------------------------------------------------
000a35c9: RLP; mov rdx, -0xa00000 ; test rax, rax ; cmovne rdx, rax ; add rsp, 0x28 ; mov rax, rdx ; ret
read: rax rdx rflags rsp 
write: rax rdx rflags rsp 
--------------------------------------------------------------------------------
000a36bc: RLP; test eax, eax ; js 0xa379c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a3b24: RLP; mov rdi, rbp ; mov rbx, rax ; call 0x856dc
read: rax rbp rip rsp 
write: rbx rdi rsp 
--------------------------------------------------------------------------------
000a3b33: RLP; mov rdx, qword ptr [rip + 0x2ca9fa] ; cmp rbx, rdx ; jbe 0xa3b49
read: rbx rdx rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
000a3b74: RLP; mov rbx, qword ptr [rip + 0x2c7f59] ; mov rbp, rax ; test rbx, rbx ; jne 0xa3b8f
read: rax rbx rflags 
write: rbp rbx rflags 
--------------------------------------------------------------------------------
000a3baf: RLP; test eax, eax ; je 0xa3c0c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a3bc8: RLP; test rax, rax ; mov r14, rax ; je 0xa3c24
read: rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
000a3bee: RLP; test rbx, rbx ; je 0xa3c18
read: rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
000a3c7d: RLP; lea rdx, [rax + 1] ; add rax, 0x1f ; mov rsi, r15 ; and rax, 0xfffffffffffffff0 ; sub rsp, rax ; lea rdi, [rsp + 0x1f] ; and rdi, 0xfffffffffffffff0 ; call 0x8e3dc
read: r15 rax rdi rip rsp 
write: rax rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000a3ca1: RLP; lea rsi, [rip + 0x923bd] ; mov rdx, rax ; mov rbx, rax ; mov rcx, r12 ; xor eax, eax ; mov rdi, r15 ; call 0x693dc
read: eax r12 r15 rax rip rsp 
write: eax rbx rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000a3cbf: RLP; cmp eax, 1 ; je 0xa3e24
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a3d38: RLP; mov qword ptr [rip + 0x2c7d9d], rax ; movzx eax, byte ptr [r14] ; test al, al ; je 0xa3de4
read: al rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000a3dbb: RLP; cmp eax, 2 ; je 0xa3ea8
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a3ded: RLP; lea rsp, [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rsp 
--------------------------------------------------------------------------------
000a3e6a: RLP; mov eax, eax ; imul r15, rax ; movsxd rax, dword ptr [rbp - 0x3c] ; add r14, rax ; mov qword ptr [rip + 0x2c7c76], r15 ; cmp byte ptr [r14], 0 ; jne 0xa3eae
read: eax r14 r15 rax rflags 
write: eax r14 r15 rax rflags 
--------------------------------------------------------------------------------
000a3ec9: RLP; cmp eax, 1 ; je 0xa4294
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a3f47: RLP; mov qword ptr [rip + 0x2c7bbe], rax ; movzx eax, byte ptr [r14] ; cmp al, 0x2d ; sete dl ; cmp al, 0x2b ; je 0xa3f63
read: al rax rflags 
write: dl eax rflags 
--------------------------------------------------------------------------------
000a3fa8: RLP; cmp eax, 2 ; je 0xa42f0
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a400f: RLP; mov eax, dword ptr [rip + 0x2ca527] ; test eax, eax ; jne 0xa436d
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000a407c: RLP; mov r14, qword ptr [rbp - 0x38] ; mov rcx, qword ptr [rbp - 0x78] ; cmp r14, rcx ; je 0xa3de4
read: r14 rcx rflags 
write: r14 rcx rflags 
--------------------------------------------------------------------------------
000a4142: RLP; cmp eax, 2 ; mov r10d, dword ptr [rbp - 0x78] ; je 0xa432a
read: eax rflags 
write: r10d rflags 
--------------------------------------------------------------------------------
000a4203: RLP; cmp eax, 3 ; jne 0xa3de4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a42cd: RLP; mov eax, eax ; imul rbx, rax ; movsxd rax, dword ptr [rbp - 0x3c] ; mov qword ptr [rip + 0x2c7846], rbx ; add r14, rax ; jmp 0xa3fd7
read: eax r14 rax rbx 
write: eax r14 rax rbx rflags 
--------------------------------------------------------------------------------
000a437d: RLP; mov qword ptr [rip + 0x2c7744], 0 ; jmp 0xa3ded
read: 
write: 
--------------------------------------------------------------------------------
000a43d6: RLP; test rax, rax ; mov rbx, rax ; je 0xa44ac
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000a441b: RLP; test eax, eax ; je 0xa449c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a4441: RLP; mov rdi, rbx ; call 0x853ec
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000a444d: RLP; xor esi, esi ; xor edx, edx ; mov rdi, rbx ; mov qword ptr [rip + 0x2c7671], rax ; call 0xa49fc
read: edx esi rax rbx rip rsp 
write: edx esi rdi rflags rsp 
--------------------------------------------------------------------------------
000a4464: RLP; mov esi, dword ptr [rip + 0x2ca0d2] ; test esi, esi ; jne 0xa449c
read: esi rflags 
write: esi rflags 
--------------------------------------------------------------------------------
000a4496: RLP; nop word ptr [rax + rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000a4544: RLP; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000a45c0: RLP; add rsp, 0x80 ; xor esi, esi ; xor edi, edi ; call 0xa439c
read: edi esi rip rsp 
write: edi esi rflags rsp 
--------------------------------------------------------------------------------
000a45d4: RLP; cmp dword ptr [rip + 0x2ca195], 0 ; je 0xa45e8
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000a4607: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x2c9f1f] ; add rsp, 8 ; ret
read: rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000a4645: RLP; mov eax, dword ptr [rbx + 0x14] ; lea rdi, [rip + 0x2c74bd] ; lea esi, [rax + 0x76c] ; call 0xa37ec
read: rip rsp 
write: eax esi rdi rsp 
--------------------------------------------------------------------------------
000a465e: RLP; test ebp, ebp ; je 0xa46a9
read: ebp rflags 
write: rflags 
--------------------------------------------------------------------------------
000a4720: RLP; add rsp, 0x80 ; mov esi, 1 ; mov edi, 1 ; call 0xa439c
read: rip rsp 
write: edi esi rflags rsp 
--------------------------------------------------------------------------------
000a473a: RLP; mov r9d, dword ptr [rip + 0x2c9dfb] ; test r9d, r9d ; jne 0xa4762
read: r9d rflags 
write: r9d rflags 
--------------------------------------------------------------------------------
000a4795: RLP; add rsp, 0x80 ; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000a4806: RLP; add rsp, 0x80 ; lea rax, [rip + 0x2c9ce8] ; xor edi, edi ; cmp rdx, rax ; je 0xa4954
read: edi rax rdx rflags rsp 
write: edi rax rflags rsp 
--------------------------------------------------------------------------------
000a482d: RLP; mov r10d, dword ptr [rip + 0x2c9d08] ; test r10d, r10d ; jne 0xa48ec
read: r10d rflags 
write: r10d rflags 
--------------------------------------------------------------------------------
000a484e: RLP; test eax, eax ; jne 0xa496c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a4893: RLP; test eax, eax ; je 0xa491c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a48d4: RLP; add rsp, 0x80 ; mov rax, rbx ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
read: rbx rsp 
write: r12 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000a4909: RLP; test rbx, rbx ; jne 0xa4872
read: rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
000a497f: RLP; jmp 0xa4858
read: 
write: 
--------------------------------------------------------------------------------
000a4a54: RLP; mov rdi, qword ptr [rip + 0x2c5d09] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000a4a64: RLP; mov qword ptr [rip + 0x2c5cf5], 0 ; add rsp, 0x118 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000a4aae: RLP; xor edi, edi ; test rax, rax ; jne 0xa4a4b
read: edi rax rflags 
write: edi rflags 
--------------------------------------------------------------------------------
000a4ad2: RLP; test rax, rax ; je 0xa4fd4
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a4b06: RLP; mov rbx, qword ptr [rsp + 0x48] ; cmp eax, -1 ; mov rdi, rbx ; je 0xa4a4b
read: eax rbx rflags 
write: rbx rdi rflags 
--------------------------------------------------------------------------------
000a4b35: RLP; test eax, eax ; jne 0xa4b54
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a4b67: RLP; test rax, rax ; mov r15, rax ; je 0xa4ce8
read: rax rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
000a4b7f: RLP; lea rdx, [rsp + 0x80] ; mov esi, eax ; mov edi, 1 ; call 0xd63ec
read: eax rip rsp 
write: edi esi rdx rsp 
--------------------------------------------------------------------------------
000a4b97: RLP; test eax, eax ; jne 0xa4cdc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a4bb9: RLP; mov rax, qword ptr [rsp + 0x80] ; mov qword ptr [rip + 0x2c5b98], 0 ; mov qword ptr [rip + 0x2c6fd1], rax ; mov rax, qword ptr [rsp + 0x88] ; mov qword ptr [rip + 0x2c6fba], rax ; mov rax, qword ptr [rsp + 0xd8] ; or dword ptr [r15], 0x8000 ; mov qword ptr [rip + 0x2c6f9c], rax ; jmp 0xa4c96
read: rax 
write: rax rflags 
--------------------------------------------------------------------------------
000a4c8f: RLP; test eax, eax ; jne 0xa4cdc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a4caf: RLP; cmp rax, 1 ; jne 0xa4cdc
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a4ccd: RLP; test eax, eax ; je 0xa4c04
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a4ce8: RLP; mov rdi, qword ptr [rsp + 0x48] ; jmp 0xa4a4b
read: 
write: rdi 
--------------------------------------------------------------------------------
000a4d07: RLP; test eax, eax ; je 0xa4a9b
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a4d27: RLP; test eax, eax ; jne 0xa4a49
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a4e19: RLP; test rax, rax ; mov qword ptr [rip + 0x2c5941], rax ; je 0xa4cdc
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a4eb9: RLP; cmp rax, qword ptr [rip + 0x2c6ccc] ; jne 0xa4cdc
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a4fab: RLP; cmp eax, -1 ; mov rcx, qword ptr [rsp + 8] ; mov r8, qword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 0x28] ; je 0xa4cdc
read: eax rflags 
write: r8 rcx rflags rsi 
--------------------------------------------------------------------------------
000a5022: RLP; jmp 0xa4a6f
read: 
write: 
--------------------------------------------------------------------------------
000a50e4: RLP; cmp rbx, rax ; jne 0xa4cdc
read: rax rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
000a5153: RLP; cmp rbp, rax ; jne 0xa56f5
read: rax rbp rflags 
write: rflags 
--------------------------------------------------------------------------------
000a531d: RLP; cmp qword ptr [rip + 0x2c6857], 0 ; je 0xa535b
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000a5352: RLP; cmp qword ptr [rip + 0x2c6823], rbp ; ja 0xa532c
read: rbp rflags 
write: rflags 
--------------------------------------------------------------------------------
000a53ce: RLP; mov qword ptr [r15 + r14*8], rax ; mov eax, r13d ; sub eax, r12d ; cdqe ; cmp qword ptr [r15 + rax*8], 0 ; je 0xa538c
read: eax r12d r13d rax rflags 
write: eax rax rflags 
--------------------------------------------------------------------------------
000a5404: RLP; mov rax, qword ptr [rip + 0x2c6781] ; test rax, rax ; jne 0xa5464
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000a5550: RLP; cmp rbp, rax ; jne 0xa5304
read: rax rbp rflags 
write: rflags 
--------------------------------------------------------------------------------
000a55a4: RLP; mov rdi, qword ptr [rsp + 0x18] ; sub rdi, rax ; mov rax, rdi ; js 0xa4cdc
read: rax rdi rflags 
write: rax rdi rflags 
--------------------------------------------------------------------------------
000a567a: RLP; mov qword ptr [r15], rax ; jmp 0xa53ed
read: rax 
write: 
--------------------------------------------------------------------------------
000a56e7: RLP; cmp eax, -1 ; mov rdx, qword ptr [rsp + 0x38] ; jne 0xa5196
read: eax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
000a5718: RLP; mov rcx, qword ptr [rsp + 8] ; mov r8, qword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 0x28] ; jmp 0xa5096
read: 
write: r8 rcx rsi 
--------------------------------------------------------------------------------
000a5747: RLP; mov rcx, qword ptr [rsp + 8] ; mov r8, qword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 0x28] ; jmp 0xa5061
read: 
write: r8 rcx rsi 
--------------------------------------------------------------------------------
000a578b: RLP; cmp rax, qword ptr [rip + 0x2c63fa] ; jne 0xa4cdc
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a57b3: RLP; cmp rax, qword ptr [rip + 0x2c63d2] ; je 0xa4ec6
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a57d1: RLP; cmp eax, -1 ; je 0xa4cdc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a57f5: RLP; cmp eax, -1 ; jne 0xa5205
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a5820: RLP; jmp 0xa52fb
read: 
write: 
--------------------------------------------------------------------------------
000a5855: RLP; mov rdi, rbx ; lea r12, [rax + 1] ; call 0x856dc
read: rbx rip rsp 
write: r12 rdi rsp 
--------------------------------------------------------------------------------
000a5865: RLP; lea r14, [rax + 1] ; lea rdx, [rsp + 0x18] ; lea rdi, [rip + 0x9086e] ; lea r13, [r14 + r12] ; mov rsi, r13 ; call 0xa49fc
read: r13 rip rsp 
write: r13 r14 rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000a5885: RLP; mov edx, dword ptr [rip + 0x2c8cb1] ; test edx, edx ; je 0xa59b9
read: edx rflags 
write: edx rflags 
--------------------------------------------------------------------------------
000a58b5: RLP; mov rsi, rbx ; mov rdx, r14 ; mov rdi, rax ; call 0x8e3dc
read: r14 rax rbx rip rsp 
write: rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000a58c7: RLP; mov r8, qword ptr [rip + 0x2c62be] ; mov rax, qword ptr [rsp + 0x18] ; mov qword ptr [rip + 0x2c629e], 2 ; mov rsi, qword ptr [rip + 0x2c628f] ; test r8, r8 ; mov qword ptr [rip + 0x2c627d], rax ; je 0xa5968
read: r8 rax rflags 
write: r8 rax rflags rsi 
--------------------------------------------------------------------------------
000a59b9: RLP; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000a5aef: RLP; cmp rbx, qword ptr [rip + 0x2c6096] ; mov qword ptr [r15 + r14*8], rax ; mov r9, qword ptr [rip + 0x2c6083] ; mov r8, qword ptr [rip + 0x2c606c] ; jb 0xa5b19
read: rax rbx rflags 
write: r8 r9 rflags 
--------------------------------------------------------------------------------
000a5b4d: RLP; mov rsi, qword ptr [rsp + 8] ; mov r9, qword ptr [rip + 0x2c602b] ; mov r8, qword ptr [rip + 0x2c6014] ; mov qword ptr [r15 + rsi*8], rax ; mov eax, 1 ; sub eax, r14d ; cdqe ; cmp qword ptr [r15 + rax*8], 0 ; je 0xa5b0c
read: eax r14d rax rflags 
write: eax r8 r9 rax rflags rsi 
--------------------------------------------------------------------------------
000a5bf9: RLP; test eax, eax ; jne 0xa6076
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a5dec: RLP; mov qword ptr [r15], rax ; jmp 0xa5bcc
read: rax 
write: 
--------------------------------------------------------------------------------
000a5e40: RLP; lea rdi, [rsp + 0x18] ; xor esi, esi ; mov rdx, rbp ; call 0xa25bc
read: esi rbp rip rsp 
write: esi rdi rdx rflags rsp 
--------------------------------------------------------------------------------
000a5e53: RLP; test eax, eax ; je 0xa6056
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a5e71: RLP; mov rdx, qword ptr [rip + 0x2c5cdc] ; mov r8, qword ptr [rip + 0x2c5ccd] ; mov rdi, rdx ; shl rdi, 4 ; add rdi, r8 ; cmp rdi, qword ptr [rip + 0x2c5cdc] ; jne 0xa5c1a
read: r8 rdi rdx rflags 
write: r8 rdi rdx rflags 
--------------------------------------------------------------------------------
000a5ead: RLP; mov rbx, qword ptr [rip + 0x2c5cb8] ; mov qword ptr [r15], rax ; mov rdi, rbx ; call 0x856dc
read: rax rbx rip rsp 
write: rbx rdi rsp 
--------------------------------------------------------------------------------
000a5ec3: RLP; lea rdi, [rbx + rax + 1] ; call 0xa3b5c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000a5ed1: RLP; mov rdx, qword ptr [rip + 0x2c5c7c] ; mov qword ptr [r15 + 8], rax ; mov r8, qword ptr [rip + 0x2c5c69] ; jmp 0xa5c1a
read: rax 
write: r8 rdx 
--------------------------------------------------------------------------------
000a5f59: RLP; mov r8, qword ptr [rip + 0x2c5c14] ; mov qword ptr [r15 + 8], rax ; jmp 0xa5f1c
read: rax 
write: r8 
--------------------------------------------------------------------------------
000a5fac: RLP; cmp qword ptr [r15 + 8], 0 ; mov qword ptr [r15], rax ; mov rcx, qword ptr [rsp + 8] ; je 0xa5fd1
read: rax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
000a603b: RLP; mov rcx, qword ptr [rsp + 8] ; add rcx, qword ptr [rip + 0x2c5b2d] ; mov qword ptr [r15 + 8], rax ; mov rax, qword ptr [r15] ; mov rbx, rcx ; jmp 0xa5b99
read: rax rcx 
write: rax rbx rcx rflags 
--------------------------------------------------------------------------------
000a6127: RLP; add rsp, 0x18 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000a61c2: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000a61e9: RLP; test eax, eax ; js 0xa625c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a62a0: RLP; test rax, rax ; mov r13, rax ; je 0xa62ad
read: rax rflags 
write: r13 rflags 
--------------------------------------------------------------------------------
000a62df: RLP; test eax, eax ; js 0xa62ad
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a6309: RLP; test eax, eax ; jns 0xa6315
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a6328: RLP; test rax, rax ; mov r13, rax ; je 0xa630d
read: rax rflags 
write: r13 rflags 
--------------------------------------------------------------------------------
000a6371: RLP; test rax, rax ; je 0xa651e
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a63ee: RLP; mov qword ptr [rbp - 0x170], 0 ; mov byte ptr [rax + r14], 0 ; mov r12, rax ; lea rax, [rbp - 0x150] ; mov qword ptr [rbp - 0x158], 0 ; mov qword ptr [rbp - 0x150], 0 ; xor r15d, r15d ; lea r14, [rbp - 0x158] ; mov qword ptr [rbp - 0x168], rax ; jmp 0xa649e
read: r15d rax 
write: r12 r14 r15d rax rflags 
--------------------------------------------------------------------------------
000a648a: RLP; test rax, rax ; mov r15, rax ; je 0xa6497
read: rax rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
000a64b4: RLP; test rax, rax ; js 0xa64dd
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a64ed: RLP; mov rdi, qword ptr [rbp - 0x158] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000a64fd: RLP; mov r14d, dword ptr [r13] ; mov rdi, r13 ; and r14d, 0x20 ; je 0xa652e
read: r13 r14d rflags 
write: r14d rdi rflags 
--------------------------------------------------------------------------------
000a6513: RLP; mov r14d, 5 ; jmp 0xa62ad
read: 
write: r14d 
--------------------------------------------------------------------------------
000a6537: RLP; test r15, r15 ; je 0xa6542
read: r15 rflags 
write: rflags 
--------------------------------------------------------------------------------
000a6560: RLP; lea rsi, [rbp - 0x140] ; mov rdi, r12 ; call 0xa2c3c
read: r12 rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
000a6573: RLP; mov r12d, dword ptr [rbx + 0x18] ; xor eax, eax ; cmp r12d, 6 ; ja 0xa6596
read: eax r12d rflags 
write: eax r12d rflags 
--------------------------------------------------------------------------------
000a667c: RLP; add rax, 1 ; mov eax, 8 ; cmove r14d, eax ; jmp 0xa62ad
read: eax r14d rax rflags 
write: eax r14d rax rflags 
--------------------------------------------------------------------------------
000a66c0: RLP; test eax, eax ; jne 0xa63c8
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a66d4: RLP; test rax, rax ; mov r15, rax ; mov qword ptr [rbp - 0x170], rax ; je 0xa6702
read: rax rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
000a66f5: RLP; mov r12, r15 ; mov byte ptr [r15 + r14], 0 ; jmp 0xa6401
read: r15 
write: r12 
--------------------------------------------------------------------------------
000a6714: RLP; jmp 0xa62ad
read: 
write: 
--------------------------------------------------------------------------------
000a67c4: RLP; mov eax, r12d ; sub eax, dword ptr [rbp - 0xe8] ; mov ecx, 7 ; add eax, 7 ; cdq ; idiv ecx ; lea eax, [rdx + 1] ; mov dword ptr [rbx + 0xc], eax ; mov eax, 1 ; jmp 0xa65ab
read: eax ecx edx r12d 
write: eax ecx edx rflags 
--------------------------------------------------------------------------------
000a68b4: RLP; test eax, eax ; lea rdx, [rip + 0x2c52ff] ; jne 0xa68cc
read: eax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
000a690a: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000a6ca1: RLP; test rax, rax ; mov qword ptr [rsp + 0x68], rax ; jne 0xa6ab7
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a6d29: RLP; test rax, rax ; mov qword ptr [rsp + 0x68], rax ; je 0xa6b9a
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a6d88: RLP; test rax, rax ; je 0xa9954
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a6da6: RLP; mov r9, qword ptr [rsp + 0x30] ; mov rsi, qword ptr [rsp + 0x68] ; mov rcx, rbp ; mov rdx, rax ; mov qword ptr [rsp + 0x28], rax ; mov rdi, r9 ; call 0x8bd4c
read: r9 rax rbp rip rsp 
write: r9 rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000a6dc7: RLP; test eax, eax ; mov r8, qword ptr [rsp + 0x28] ; jne 0xa9954
read: eax rflags 
write: r8 rflags 
--------------------------------------------------------------------------------
000a6ef9: RLP; test rax, rax ; je 0xa6edc
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a7218: RLP; test rax, rax ; mov qword ptr [rsp + 0x68], rax ; jne 0xa6d37
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a7331: RLP; test rax, rax ; jne 0xa6ab7
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a73ad: RLP; test rax, rax ; mov qword ptr [rsp + 0x68], rax ; jne 0xa6ab7
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a7448: RLP; mov r10, qword ptr [rsp + 0x28] ; test eax, eax ; mov r12, qword ptr [rsp + 0x68] ; mov r13, r10 ; je 0xa7461
read: eax r10 rflags 
write: r10 r12 r13 rflags 
--------------------------------------------------------------------------------
000a747d: RLP; mov r9, qword ptr [rsp + 0x30] ; mov rcx, rbp ; mov rdx, rax ; mov rsi, r12 ; mov qword ptr [rsp + 0x28], rax ; mov rdi, r9 ; call 0x8bd4c
read: r12 r9 rax rbp rip rsp 
write: r9 rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000a749c: RLP; test eax, eax ; mov r10, qword ptr [rsp + 0x28] ; jne 0xa8da5
read: eax rflags 
write: r10 rflags 
--------------------------------------------------------------------------------
000a7515: RLP; mov r9, qword ptr [rsp + 0x30] ; mov rcx, rbp ; mov rdx, rax ; mov rsi, r12 ; mov qword ptr [rsp + 0x28], rax ; mov rdi, r9 ; call 0x8bd4c
read: r12 r9 rax rbp rip rsp 
write: r9 rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000a7534: RLP; test eax, eax ; mov r11, qword ptr [rsp + 0x28] ; mov r10, qword ptr [rsp + 0x38] ; jne 0xa7583
read: eax rflags 
write: r10 r11 rflags 
--------------------------------------------------------------------------------
000a7573: RLP; test eax, eax ; mov eax, 1 ; cmove eax, dword ptr [rsp + 0x20] ; mov dword ptr [rsp + 0x20], eax ; mov rax, qword ptr [rsp] ; mov r12, qword ptr [rsp + 0x68] ; mov r9, qword ptr [rax + r14*8 + 0x40] ; mov rdi, r9 ; mov qword ptr [rsp + 0x30], r9 ; call 0x856dc
read: eax r9 rflags rip rsp 
write: eax r12 r9 rax rdi rflags rsp 
--------------------------------------------------------------------------------
000a75a2: RLP; mov r9, qword ptr [rsp + 0x30] ; mov rcx, rbp ; mov rdx, rax ; mov rsi, r12 ; mov qword ptr [rsp + 0x28], rax ; mov rdi, r9 ; call 0x8bd4c
read: r12 r9 rax rbp rip rsp 
write: r9 rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000a75c1: RLP; test eax, eax ; mov r10, qword ptr [rsp + 0x28] ; je 0xa7409
read: eax rflags 
write: r10 rflags 
--------------------------------------------------------------------------------
000a7d3c: RLP; test rax, rax ; mov qword ptr [rsp + 0x68], rax ; jne 0xa6ab7
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a7efb: RLP; mov r10, qword ptr [rsp + 0x20] ; test eax, eax ; mov rbx, qword ptr [rsp + 0x68] ; mov dword ptr [rsp + 0x20], r13d ; mov r12, r10 ; je 0xa7f19
read: eax r10 r13d rflags 
write: r10 r12 rbx rflags 
--------------------------------------------------------------------------------
000a7f42: RLP; mov r8, qword ptr [rsp + 0x28] ; mov rcx, rbp ; mov rdx, rax ; mov rsi, rbx ; mov r15, rax ; mov rdi, r8 ; call 0x8bd4c
read: r8 rax rbp rbx rip rsp 
write: r15 r8 rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000a7f5f: RLP; test eax, eax ; jne 0xa8d3c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a7fd6: RLP; mov r8, qword ptr [rsp + 0x38] ; mov rcx, rbp ; mov rdx, rax ; mov rsi, rbx ; mov qword ptr [rsp + 0x30], rax ; mov rdi, r8 ; call 0x8bd4c
read: r8 rax rbp rbx rip rsp 
write: r8 rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000a7ff5: RLP; test eax, eax ; mov r10, qword ptr [rsp + 0x30] ; jne 0xa8041
read: eax rflags 
write: r10 rflags 
--------------------------------------------------------------------------------
000a802c: RLP; test eax, eax ; mov eax, 1 ; cmove eax, dword ptr [rsp + 0x40] ; mov dword ptr [rsp + 0x20], r14d ; mov dword ptr [rsp + 0x40], eax ; mov eax, dword ptr [rsp + 0x28] ; mov rdi, qword ptr [rsp] ; mov rbx, qword ptr [rsp + 0x68] ; add eax, 0x2000e ; movzx eax, ax ; lea r15, [rdi + rax*8] ; mov r8, qword ptr [r15 + 0x40] ; mov rdi, r8 ; mov qword ptr [rsp + 0x30], r8 ; call 0x856dc
read: ax eax r14d r8 rflags rip rsp 
write: eax r15 r8 rbx rdi rflags rsp 
--------------------------------------------------------------------------------
000a806f: RLP; mov r8, qword ptr [rsp + 0x30] ; mov rcx, rbp ; mov rdx, rax ; mov rsi, rbx ; mov qword ptr [rsp + 0x28], rax ; mov rdi, r8 ; call 0x8bd4c
read: r8 rax rbp rbx rip rsp 
write: r8 rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000a808e: RLP; test eax, eax ; mov r10, qword ptr [rsp + 0x28] ; je 0xa7ec4
read: eax rflags 
write: r10 rflags 
--------------------------------------------------------------------------------
000a818e: RLP; mov r8, qword ptr [rsp + 0x28] ; mov rcx, rbp ; mov rdx, rax ; mov rsi, r15 ; mov qword ptr [rsp + 0x20], rax ; mov rdi, r8 ; call 0x8bd4c
read: r15 r8 rax rbp rip rsp 
write: r8 rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000a81ad: RLP; test eax, eax ; mov r9, qword ptr [rsp + 0x20] ; jne 0xa901c
read: eax rflags 
write: r9 rflags 
--------------------------------------------------------------------------------
000a81da: RLP; test eax, eax ; je 0xa81ed
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a82da: RLP; test rax, rax ; je 0xa6b9a
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a8397: RLP; test rax, rax ; mov qword ptr [rsp + 0x68], rax ; jne 0xa6ab7
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a8401: RLP; test rax, rax ; mov qword ptr [rsp + 0x68], rax ; mov r9, qword ptr [rsp + 0x20] ; je 0xa98f3
read: rax rflags 
write: r9 rflags 
--------------------------------------------------------------------------------
000a8427: RLP; test eax, eax ; je 0xa6d37
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a84a7: RLP; test rax, rax ; je 0xa8484
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a84ce: RLP; test rax, rax ; mov qword ptr [rsp + 0x68], rax ; je 0xa8484
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a8520: RLP; cdqe ; cmp rax, -1 ; je 0xa9847
read: eax rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000a85c4: RLP; test rax, rax ; mov qword ptr [rsp + 0x68], rax ; jne 0xa6ab7
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a8609: RLP; test rax, rax ; je 0xa6b9a
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a8622: RLP; mov rsi, qword ptr [rsp + 0x68] ; mov rcx, rbp ; mov rdx, rax ; mov rdi, r15 ; mov qword ptr [rsp + 0x20], rax ; call 0x8bd4c
read: r15 rax rbp rip rsp 
write: rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000a863e: RLP; test eax, eax ; mov r8, qword ptr [rsp + 0x20] ; jne 0xa6b9a
read: eax rflags 
write: r8 rflags 
--------------------------------------------------------------------------------
000a8692: RLP; cdqe ; cmp rax, -1 ; je 0xa9459
read: eax rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000a86da: RLP; cdqe ; cmp rax, -1 ; je 0xa99c2
read: eax rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000a8722: RLP; cdqe ; cmp rax, -1 ; jne 0xa7df3
read: eax rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000a880a: RLP; cdqe ; cmp rax, -1 ; jne 0xa77c3
read: eax rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000a88f2: RLP; cdqe ; cmp rax, -1 ; je 0xa9b05
read: eax rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000a893c: RLP; movsxd rcx, eax ; cmp rcx, -1 ; jne 0xa7bb6
read: eax rcx rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
000a89e2: RLP; cdqe ; cmp rax, -1 ; jne 0xa7c70
read: eax rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000a8ac2: RLP; cdqe ; cmp rax, -1 ; jne 0xa7a48
read: eax rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000a8ba2: RLP; cdqe ; cmp rax, -1 ; jne 0xa7d07
read: eax rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000a8c82: RLP; cdqe ; cmp rax, -1 ; jne 0xa7b15
read: eax rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000a8d5d: RLP; mov rcx, rbp ; mov rdx, rax ; mov rsi, rbx ; mov rdi, r15 ; mov qword ptr [rsp + 0x28], rax ; call 0x8bd4c
read: r15 rax rbp rbx rip rsp 
write: rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000a8d77: RLP; test eax, eax ; mov r8, qword ptr [rsp + 0x28] ; jne 0xa7f84
read: eax rflags 
write: r8 rflags 
--------------------------------------------------------------------------------
000a8dc7: RLP; mov r10, qword ptr [rsp + 0x30] ; mov rcx, rbp ; mov rdx, rax ; mov rsi, r12 ; mov qword ptr [rsp + 0x28], rax ; mov rdi, r10 ; call 0x8bd4c
read: r10 r12 rax rbp rip rsp 
write: r10 rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000a8de6: RLP; test eax, eax ; mov r9, qword ptr [rsp + 0x28] ; jne 0xa74c3
read: eax rflags 
write: r9 rflags 
--------------------------------------------------------------------------------
000a8e90: RLP; test rax, rax ; je 0xa6b9a
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a9038: RLP; mov r8, qword ptr [rsp + 0x20] ; mov rsi, qword ptr [rsp + 0x68] ; mov rcx, rbp ; mov rdx, rax ; mov r15, rax ; mov rdi, r8 ; call 0x8bd4c
read: r8 rax rbp rip rsp 
write: r15 r8 rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000a9057: RLP; test eax, eax ; je 0xa92cd
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a9088: RLP; mov rsi, qword ptr [rsp + 0x20] ; mov rdi, qword ptr [rip + 0x2be3d8] ; mov rcx, rbp ; mov rdx, rax ; mov r15, rax ; call 0x8bd4c
read: rax rbp rip rsp 
write: r15 rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000a90a6: RLP; test eax, eax ; jne 0xa9288
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a9298: RLP; mov rsi, qword ptr [rsp + 0x68] ; mov rdi, qword ptr [rip + 0x2be1d0] ; mov rcx, rbp ; mov rdx, rax ; mov r15, rax ; call 0x8bd4c
read: rax rbp rip rsp 
write: r15 rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000a92b6: RLP; test eax, eax ; jne 0xa6b9a
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a92ed: RLP; test eax, eax ; je 0xa92c3
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a9318: RLP; movzx eax, word ptr [rsp + 0x70] ; movzx ecx, byte ptr [rsp + 0x70] ; jmp 0xa8ed2
read: 
write: eax ecx 
--------------------------------------------------------------------------------
000a9413: RLP; test rax, rax ; mov qword ptr [rsp + 0x68], rax ; je 0xa9973
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a943c: RLP; test eax, eax ; je 0xa6ab7
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a9500: RLP; test rax, rax ; mov qword ptr [rsp + 0x68], rax ; je 0xa98f3
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a9539: RLP; test eax, eax ; je 0xa6d37
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a9572: RLP; test rax, rax ; mov qword ptr [rsp + 0x68], rax ; je 0xa9931
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a95ab: RLP; test eax, eax ; je 0xa6ab7
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a95fd: RLP; movzx ecx, byte ptr [rsp + 0x70] ; and ebp, 1 ; mov edi, ecx ; and edi, 0x10 ; je 0xa9610
read: ebp ecx edi rflags 
write: ebp ecx edi rflags 
--------------------------------------------------------------------------------
000a97af: RLP; test rax, rax ; mov qword ptr [rsp + 0x68], rax ; je 0xa9915
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a97e8: RLP; test eax, eax ; je 0xa6d37
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a9814: RLP; test rax, rax ; mov qword ptr [rsp + 0x68], rax ; mov r9, qword ptr [rsp + 0x20] ; je 0xa9908
read: rax rflags 
write: r9 rflags 
--------------------------------------------------------------------------------
000a983a: RLP; test eax, eax ; je 0xa6ab7
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a9ac9: RLP; test rax, rax ; mov qword ptr [rsp + 0x68], rax ; mov r9, qword ptr [rsp + 0x20] ; je 0xa9af8
read: rax rflags 
write: r9 rflags 
--------------------------------------------------------------------------------
000a9aeb: RLP; test eax, eax ; je 0xa6ab7
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000a9bd2: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000a9bf8: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000a9c28: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000a9eb9: RLP; mov rcx, qword ptr [rsp + 0x50] ; mov r11, qword ptr [rsp + 0x58] ; add rbp, rcx ; mov eax, dword ptr [rsp + 0x10] ; test eax, eax ; je 0xa9f6c
read: eax rbp rcx rflags 
write: eax r11 rbp rcx rflags 
--------------------------------------------------------------------------------
000a9f86: RLP; mov r11, qword ptr [rsp + 0x10] ; jmp 0xa9ef7
read: 
write: r11 
--------------------------------------------------------------------------------
000a9fc8: RLP; mov edx, r15d ; mov r13, rax ; xor eax, eax ; sub edx, r13d ; mov r11, qword ptr [rsp + 0x50] ; cmovns eax, edx ; add eax, r13d ; cdqe ; mov rdi, rax ; mov qword ptr [rsp + 0x58], rax ; mov rax, qword ptr [rsp + 8] ; sub rax, r11 ; cmp rdi, rax ; mov qword ptr [rsp + 0x50], rax ; jae 0xa9e04
read: eax edx r11 r13d r15d rax rdi rflags 
write: eax edx r11 r13 rax rdi rflags 
--------------------------------------------------------------------------------
000aa03c: RLP; mov r11, qword ptr [rsp + 0x60] ; mov r8, qword ptr [rsp + 0x38] ; mov rcx, qword ptr [rsp + 0x20] ; mov r9, r12 ; mov rsi, qword ptr [rsp + 0x50] ; mov rdx, r14 ; mov rdi, r15 ; mov qword ptr [rsp + 0x60], r11 ; movsxd r13, r13d ; call 0xa9c3c
read: r11 r12 r13d r14 r15 rip rsp 
write: r11 r13 r8 r9 rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000aa06a: RLP; mov r9d, dword ptr [rsp + 0x10] ; mov r11, qword ptr [rsp + 0x60] ; lea r10, [r15 + r13] ; add r11, qword ptr [rsp + 0x58] ; test r9d, r9d ; je 0xab3dc
read: r11 r9d rflags 
write: r10 r11 r9d rflags 
--------------------------------------------------------------------------------
000aa10f: RLP; mov esi, dword ptr [rsp + 0x50] ; mov ecx, r15d ; mov r13, rax ; sub ecx, eax ; mov r11, qword ptr [rsp + 0x58] ; cmovns esi, ecx ; lea r15d, [rsi + rax] ; mov rax, qword ptr [rsp + 8] ; movsxd r15, r15d ; sub rax, r11 ; cmp r15, rax ; jae 0xa9e04
read: eax ecx esi r11 r15 r15d rax rflags 
write: ecx esi r11 r13 r15 r15d rax rflags 
--------------------------------------------------------------------------------
000aa17c: RLP; mov rax, qword ptr [rsp + 0x20] ; mov rcx, qword ptr [rsp + 0x50] ; mov r11, qword ptr [rsp + 0x58] ; mov edx, dword ptr [rax + 8] ; add rbp, rcx ; test r14d, r14d ; je 0xab478
read: r14d rbp rcx rflags 
write: edx r11 rax rbp rcx rflags 
--------------------------------------------------------------------------------
000aa311: RLP; mov r11, qword ptr [rsp + 0x60] ; mov rcx, qword ptr [rsp + 0x58] ; mov r10d, dword ptr [rsp + 0x50] ; add r11, r14 ; xor r15d, r15d ; sub rcx, r13 ; xor eax, eax ; mov r14, rcx ; mov ecx, r15d ; sub ecx, r14d ; cmovns eax, ecx ; add eax, r14d ; movsxd r15, eax ; mov rax, qword ptr [rsp + 8] ; sub rax, r11
read: eax ecx r11 r13 r14 r14d r15d rax rcx rflags 
write: eax ecx r10d r11 r14 r15 r15d rax rcx rflags 
--------------------------------------------------------------------------------
000aa387: RLP; mov rcx, qword ptr [rsp + 0x50] ; mov r11, qword ptr [rsp + 0x58] ; add rbp, rcx ; mov edx, dword ptr [rsp + 0x10] ; test edx, edx ; je 0xab3b4
read: edx rbp rcx rflags 
write: edx r11 rbp rcx rflags 
--------------------------------------------------------------------------------
000aa47e: RLP; mov r11, qword ptr [rsp + 0x10] ; mov byte ptr [rbp], 9 ; add rbp, 1 ; nop ; add r11, r13 ; mov rax, rbx ; jmp 0xa9ce9
read: r11 r13 rbp rbx 
write: r11 rax rbp rflags 
--------------------------------------------------------------------------------
000aa50b: RLP; mov rcx, rax ; shr rax, 0x3f ; mov r11, qword ptr [rsp + 0x58] ; mov rsi, rax ; mov rax, qword ptr [rsp + 0x28] ; mov r10d, dword ptr [rsp + 0x50] ; lea r13, [rax + 0x16] ; nop dword ptr [rax] ; movabs rax, 0x6666666666666667 ; mov rdi, rcx ; imul rcx ; mov rax, rcx ; sar rax, 0x3f ; sar rdx, 2 ; sub rdx, rax
read: rax rcx rdx 
write: r10d r11 r13 rax rcx rdi rdx rflags rsi 
--------------------------------------------------------------------------------
000aa6e6: RLP; mov ecx, dword ptr [rsp + 0x50] ; sub r15d, eax ; mov r8, rax ; mov r11, qword ptr [rsp + 0x58] ; cmovns ecx, r15d ; lea r13d, [rcx + rax] ; mov rax, qword ptr [rsp + 8] ; movsxd r13, r13d ; sub rax, r11 ; cmp r13, rax ; jae 0xa9e04
read: eax ecx r11 r13 r13d r15d rax rflags 
write: ecx r11 r13 r13d r15d r8 rax rflags 
--------------------------------------------------------------------------------
000aa74f: RLP; mov rax, qword ptr [rsp + 0x20] ; mov rdi, qword ptr [rsp + 0x30] ; add rbp, r15 ; mov r11, qword ptr [rsp + 0x58] ; mov r8, qword ptr [rsp + 0x50] ; movzx eax, word ptr [rax + 0x18] ; mov r14, qword ptr [rdi + rax*8 + 0x40] ; mov eax, dword ptr [rsp + 0x10] ; test eax, eax ; je 0xab4d3
read: eax r15 rbp rflags 
write: eax r11 r14 r8 rax rbp rdi rflags 
--------------------------------------------------------------------------------
000aa82e: RLP; mov r10d, dword ptr [rsp + 0x50] ; mov r11, qword ptr [rsp + 0x58] ; mov ecx, eax ; xor eax, eax ; sub r15d, ecx ; cmovns eax, r15d ; add eax, ecx ; movsxd r14, eax ; mov rax, qword ptr [rsp + 8] ; sub rax, r11 ; cmp r14, rax ; jae 0xa9e04
read: eax ecx r11 r14 r15d rax rflags 
write: eax ecx r10d r11 r14 r15d rax rflags 
--------------------------------------------------------------------------------
000aa890: RLP; mov r11, qword ptr [rsp + 0x58] ; mov ecx, dword ptr [rsp + 0x50] ; test r13d, r13d ; je 0xab51b
read: r13d rflags 
write: ecx r11 rflags 
--------------------------------------------------------------------------------
000aa9a8: RLP; mov r11, qword ptr [rsp + 0x68] ; mov r8, qword ptr [rsp + 0x60] ; mov ecx, dword ptr [rsp + 0x58] ; mov r10d, dword ptr [rsp + 0x50] ; mov byte ptr [rbp], 0x2b ; add rbp, 1 ; add r11, r8 ; mov eax, r13d ; mov edi, 0x88888889 ; mov r14d, 4 ; imul edi ; lea esi, [rdx + r13] ; sar r13d, 0x1f ; sar esi, 5 ; sub esi, r13d
read: eax edi esi r11 r13d r8 rbp 
write: eax ecx edi edx esi r10d r11 r13d r14d r8 rbp rflags 
--------------------------------------------------------------------------------
000aaa76: RLP; mov r11, qword ptr [rsp + 0x10] ; mov byte ptr [rbp], 0xa ; add rbp, 1 ; jmp 0xaa48c
read: rbp 
write: r11 rbp rflags 
--------------------------------------------------------------------------------
000aac17: RLP; mov ecx, dword ptr [rsp + 0x58] ; sub r15d, eax ; mov r8, rax ; mov r11, qword ptr [rsp + 0x60] ; cmovns ecx, r15d ; lea r13d, [rcx + rax] ; mov rax, qword ptr [rsp + 8] ; movsxd r13, r13d ; sub rax, r11 ; cmp r13, rax ; jae 0xa9e04
read: eax ecx r11 r13 r13d r15d rax rflags 
write: ecx r11 r13 r13d r15d r8 rax rflags 
--------------------------------------------------------------------------------
000aac80: RLP; mov rax, qword ptr [rsp + 0x20] ; mov rdi, qword ptr [rsp + 0x30] ; add rbp, r15 ; mov r11, qword ptr [rsp + 0x60] ; mov r8, qword ptr [rsp + 0x58] ; mov eax, dword ptr [rax + 0x10] ; mov dword ptr [rsp + 0x50], eax ; add eax, 0x2000e ; movzx eax, ax ; mov r14, qword ptr [rdi + rax*8 + 0x40] ; mov r15d, dword ptr [rsp + 0x10] ; test r15d, r15d ; je 0xab4d3
read: ax eax r15 r15d rbp rflags 
write: eax r11 r14 r15d r8 rax rbp rdi rflags 
--------------------------------------------------------------------------------
000aad40: RLP; mov ecx, dword ptr [rsp + 0x58] ; sub r15d, eax ; mov r8, rax ; mov r11, qword ptr [rsp + 0x60] ; cmovns ecx, r15d ; lea r13d, [rcx + rax] ; mov rax, qword ptr [rsp + 8] ; movsxd r13, r13d ; sub rax, r11 ; cmp r13, rax ; jae 0xa9e04
read: eax ecx r11 r13 r13d r15d rax rflags 
write: ecx r11 r13 r13d r15d r8 rax rflags 
--------------------------------------------------------------------------------
000aada9: RLP; mov rax, qword ptr [rsp + 0x20] ; mov rdi, qword ptr [rsp + 0x30] ; add rbp, r15 ; mov r11, qword ptr [rsp + 0x60] ; mov r8, qword ptr [rsp + 0x58] ; mov eax, dword ptr [rax + 0x10] ; mov dword ptr [rsp + 0x50], eax ; add eax, 0x2001a ; movzx eax, ax ; mov r14, qword ptr [rdi + rax*8 + 0x40] ; mov r10d, dword ptr [rsp + 0x10] ; test r10d, r10d ; je 0xab4d3
read: ax eax r10d r15 rbp rflags 
write: eax r10d r11 r14 r8 rax rbp rdi rflags 
--------------------------------------------------------------------------------
000aae70: RLP; mov ecx, dword ptr [rsp + 0x58] ; sub r15d, eax ; mov r8, rax ; mov r11, qword ptr [rsp + 0x60] ; cmovns ecx, r15d ; lea r13d, [rcx + rax] ; mov rax, qword ptr [rsp + 8] ; movsxd r13, r13d ; sub rax, r11 ; cmp r13, rax ; jae 0xa9e04
read: eax ecx r11 r13 r13d r15d rax rflags 
write: ecx r11 r13 r13d r15d r8 rax rflags 
--------------------------------------------------------------------------------
000aaed9: RLP; mov rax, qword ptr [rsp + 0x20] ; mov rdi, qword ptr [rsp + 0x30] ; add rbp, r15 ; mov r11, qword ptr [rsp + 0x60] ; mov r8, qword ptr [rsp + 0x58] ; mov eax, dword ptr [rax + 0x18] ; mov dword ptr [rsp + 0x50], eax ; add eax, 0x20007 ; movzx eax, ax ; mov r14, qword ptr [rdi + rax*8 + 0x40] ; mov eax, dword ptr [rsp + 0x10] ; test eax, eax ; je 0xab4d3
read: ax eax r15 rbp rflags 
write: eax r11 r14 r8 rax rbp rdi rflags 
--------------------------------------------------------------------------------
000aafa8: RLP; movzx esi, byte ptr [rbx] ; mov r11, qword ptr [rsp + 0x10] ; mov byte ptr [rbp], sil ; add rbp, 1 ; jmp 0xaa48c
read: rbp sil 
write: esi r11 rbp rflags 
--------------------------------------------------------------------------------
000ab2b0: RLP; test rax, rax ; mov r10d, dword ptr [rsp + 0x50] ; mov r11, qword ptr [rsp + 0x58] ; je 0xaa23d
read: rax rflags 
write: r10d r11 rflags 
--------------------------------------------------------------------------------
000ab2de: RLP; test rax, rax ; mov r8, rax ; mov rcx, qword ptr [rsp + 0x50] ; mov r10d, dword ptr [rsp + 0x58] ; mov r11, qword ptr [rsp + 0x60] ; je 0xaa23d
read: rax rflags 
write: r10d r11 r8 rcx rflags 
--------------------------------------------------------------------------------
000ab35a: RLP; mov r11, qword ptr [rsp + 0x60] ; mov r8, qword ptr [rsp + 0x58] ; mov rcx, qword ptr [rsp + 0x50] ; mov esi, dword ptr [rsp + 0x10] ; test esi, esi ; je 0xab4f7
read: esi rflags 
write: esi r11 r8 rcx rflags 
--------------------------------------------------------------------------------
000ab3d1: RLP; mov r11, qword ptr [rsp + 0x10] ; jmp 0xa9efa
read: 
write: r11 
--------------------------------------------------------------------------------
000ab42b: RLP; mov r11, qword ptr [rsp + 0x68] ; mov r8d, dword ptr [rsp + 0x60] ; mov rcx, qword ptr [rsp + 0x58] ; mov r10d, dword ptr [rsp + 0x50] ; mov eax, r15d ; add r11, r14 ; sub eax, r8d ; cmp r15d, r8d ; mov r15d, 0 ; cmovg r15d, eax ; jmp 0xaa326
read: eax r11 r14 r15d r8d rflags 
write: eax r10d r11 r15d r8d rcx rflags 
--------------------------------------------------------------------------------
000ab46e: RLP; mov r11, qword ptr [rsp + 0x60] ; jmp 0xaa041
read: 
write: r11 
--------------------------------------------------------------------------------
000ab4ed: RLP; mov r11, qword ptr [rsp + 0x10] ; jmp 0xaa7aa
read: 
write: r11 
--------------------------------------------------------------------------------
000ab511: RLP; mov r11, qword ptr [rsp + 0x10] ; jmp 0xab3a9
read: 
write: r11 
--------------------------------------------------------------------------------
000ab587: RLP; mov r11, qword ptr [rsp + 0x10] ; jmp 0xa9ef7
read: 
write: r11 
--------------------------------------------------------------------------------
000ab5c5: RLP; mov rcx, qword ptr [rsp + 0x50] ; mov r8, qword ptr [rsp + 0x58] ; mov r11, qword ptr [rsp + 0x60] ; jmp 0xab369
read: 
write: r11 r8 rcx 
--------------------------------------------------------------------------------
000ab70c: RLP; mov r8, qword ptr [rsp + 0x50] ; mov r11, qword ptr [rsp + 0x68] ; mov ecx, dword ptr [rsp + 0x60] ; mov r10d, dword ptr [rsp + 0x58] ; add rbp, r8 ; mov byte ptr [rbp], 0x2d ; add rbp, 1 ; add r11, r13 ; mov r13d, r14d ; neg r13d ; jmp 0xaa9c6
read: r11 r13 r13d r14d r8 rbp 
write: ecx r10d r11 r13d r8 rbp rflags 
--------------------------------------------------------------------------------
000ab782: RLP; mov r11, qword ptr [rsp + 0x10] ; jmp 0xaaa7b
read: 
write: r11 
--------------------------------------------------------------------------------
000ab7a0: RLP; mov r11, qword ptr [rsp + 0x10] ; jmp 0xaa483
read: 
write: r11 
--------------------------------------------------------------------------------
000ab7be: RLP; mov ecx, dword ptr [rsp + 0x50] ; mov r11, qword ptr [rsp + 0x58] ; jmp 0xaa899
read: 
write: ecx r11 
--------------------------------------------------------------------------------
000ab809: RLP; test rax, rax ; mov r13, rax ; mov r10d, dword ptr [rsp + 0x50] ; mov ecx, dword ptr [rsp + 0x58] ; mov r11, qword ptr [rsp + 0x60] ; je 0xaafca
read: rax rflags 
write: ecx r10d r11 r13 rflags 
--------------------------------------------------------------------------------
000ab842: RLP; mov r14, rax ; xor eax, eax ; mov r11, qword ptr [rsp + 0x68] ; sub r15d, r14d ; cmovns eax, r15d ; add eax, r14d ; cdqe ; mov rdi, rax ; mov qword ptr [rsp + 0x50], rax ; mov rax, qword ptr [rsp + 8] ; sub rax, r11 ; cmp rdi, rax ; jae 0xa9e04
read: eax r11 r14d r15d rax rdi rflags 
write: eax r11 r14 r15d rax rdi rflags 
--------------------------------------------------------------------------------
000ab8b3: RLP; mov rsi, qword ptr [r13 + 0x20] ; mov r11, qword ptr [rsp + 0x58] ; mov r8d, dword ptr [rsp + 0x10] ; test r8d, r8d ; je 0xabb9c
read: r8d rflags 
write: r11 r8d rflags rsi 
--------------------------------------------------------------------------------
000ab92b: RLP; test rax, rax ; mov r10d, dword ptr [rsp + 0x50] ; mov ecx, dword ptr [rsp + 0x58] ; mov r11, qword ptr [rsp + 0x60] ; je 0xab1ac
read: rax rflags 
write: ecx r10d r11 rflags 
--------------------------------------------------------------------------------
000ab986: RLP; test rax, rax ; mov r10d, dword ptr [rsp + 0x50] ; mov ecx, dword ptr [rsp + 0x58] ; mov r11, qword ptr [rsp + 0x60] ; je 0xaa8fa
read: rax rflags 
write: ecx r10d r11 rflags 
--------------------------------------------------------------------------------
000ab9b9: RLP; mov rax, qword ptr [rsp + 0x38] ; mov r11, qword ptr [rsp + 0x50] ; mov r10d, dword ptr [rsp + 0x40] ; mov byte ptr [rax], 1 ; mov rax, qword ptr [rsp + 0x20] ; movsxd rax, dword ptr [rax + 0x20] ; jmp 0xaa7fa
read: 
write: r10d r11 rax 
--------------------------------------------------------------------------------
000ab9fd: RLP; mov r11, qword ptr [rsp + 0x10] ; jmp 0xaa8d6
read: 
write: r11 
--------------------------------------------------------------------------------
000aba2e: RLP; mov rax, qword ptr [rsp + 0x20] ; mov rdi, qword ptr [rsp + 0x30] ; mov r8, qword ptr [rsp + 0x58] ; mov r11, qword ptr [rsp + 0x60] ; mov eax, dword ptr [rax + 0x18] ; mov dword ptr [rsp + 0x50], eax ; add eax, 0x20007 ; movzx eax, ax ; mov r14, qword ptr [rdi + rax*8 + 0x40] ; jmp 0xaaf04
read: ax eax 
write: eax r11 r14 r8 rax rdi rflags 
--------------------------------------------------------------------------------
000aba7a: RLP; mov rax, qword ptr [rsp + 0x20] ; mov rdi, qword ptr [rsp + 0x30] ; mov r8, qword ptr [rsp + 0x50] ; mov r11, qword ptr [rsp + 0x58] ; movzx eax, word ptr [rax + 0x18] ; mov r14, qword ptr [rdi + rax*8 + 0x40] ; jmp 0xaa76f
read: 
write: eax r11 r14 r8 rax rdi 
--------------------------------------------------------------------------------
000abab8: RLP; mov r10d, dword ptr [rsp + 0x50] ; mov ecx, dword ptr [rsp + 0x58] ; mov r8, qword ptr [rsp + 0x60] ; mov r11, qword ptr [rsp + 0x68] ; jmp 0xaa9bb
read: 
write: ecx r10d r11 r8 
--------------------------------------------------------------------------------
000abaef: RLP; mov rax, qword ptr [rsp + 0x20] ; mov rdi, qword ptr [rsp + 0x30] ; mov r8, qword ptr [rsp + 0x58] ; mov r11, qword ptr [rsp + 0x60] ; mov eax, dword ptr [rax + 0x10] ; mov dword ptr [rsp + 0x50], eax ; add eax, 0x2001a ; movzx eax, ax ; mov r14, qword ptr [rdi + rax*8 + 0x40] ; jmp 0xaadd4
read: ax eax 
write: eax r11 r14 r8 rax rdi rflags 
--------------------------------------------------------------------------------
000abb3b: RLP; mov rax, qword ptr [rsp + 0x20] ; mov rdi, qword ptr [rsp + 0x30] ; mov r8, qword ptr [rsp + 0x58] ; mov r11, qword ptr [rsp + 0x60] ; mov eax, dword ptr [rax + 0x10] ; mov dword ptr [rsp + 0x50], eax ; add eax, 0x2000e ; movzx eax, ax ; mov r14, qword ptr [rdi + rax*8 + 0x40] ; jmp 0xaacab
read: ax eax 
write: eax r11 r14 r8 rax rdi rflags 
--------------------------------------------------------------------------------
000abb81: RLP; mov r8, qword ptr [rsp + 0x50] ; mov r10d, dword ptr [rsp + 0x58] ; mov ecx, dword ptr [rsp + 0x60] ; mov r11, qword ptr [rsp + 0x68] ; add rbp, r8 ; jmp 0xab722
read: r8 rbp 
write: ecx r10d r11 r8 rbp rflags 
--------------------------------------------------------------------------------
000abbb3: RLP; mov r11, qword ptr [rsp + 0x10] ; jmp 0xab8f7
read: 
write: r11 
--------------------------------------------------------------------------------
000abbfa: RLP; add rsp, 0x18 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000abc3d: RLP; mov dword ptr [rbp + rbx*4 - 4], eax ; sub rbx, 1 ; jne 0xabc2c
read: eax rbx rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000abf13: RLP; mov ecx, dword ptr [rbp - 0x130] ; mov r8, qword ptr [rbp - 0x128] ; mov r11d, dword ptr [rbp - 0x120] ; test r11d, r11d ; movsxd r15, ecx ; je 0xac0bc
read: ecx r11d rflags 
write: ecx r11d r15 r8 rflags 
--------------------------------------------------------------------------------
000abf4c: RLP; lea r13, [r13 + r15*4] ; mov rax, rbx ; add r14, r12 ; add rbx, 4 ; mov eax, dword ptr [rax + 4] ; test eax, eax ; jne 0xabd33
read: eax r12 r14 rbx rflags 
write: eax r13 r14 rax rbx rflags 
--------------------------------------------------------------------------------
000abfc5: RLP; test rax, rax ; mov r10d, dword ptr [rbp - 0x120] ; mov ecx, dword ptr [rbp - 0x128] ; mov r11d, dword ptr [rbp - 0x130] ; je 0xac465
read: rax rflags 
write: ecx r10d r11d rflags 
--------------------------------------------------------------------------------
000ac009: RLP; test rax, rax ; mov r9, rax ; mov r8, qword ptr [rbp - 0x120] ; mov r10d, dword ptr [rbp - 0x128] ; mov ecx, dword ptr [rbp - 0x130] ; mov r11d, dword ptr [rbp - 0x138] ; je 0xac465
read: rax rflags 
write: ecx r10d r11d r8 r9 rflags 
--------------------------------------------------------------------------------
000ac09b: RLP; mov r9, qword ptr [rbp - 0x130] ; mov r8, qword ptr [rbp - 0x128] ; mov r11d, dword ptr [rbp - 0x120] ; test r11d, r11d ; movsxd r15, r9d ; jne 0xabf33
read: r11d r9d rflags 
write: r11d r15 r8 r9 rflags 
--------------------------------------------------------------------------------
000ac0ce: RLP; jmp 0xabf4c
read: 
write: 
--------------------------------------------------------------------------------
000ac118: RLP; mov r11d, dword ptr [rbp - 0x120] ; mov r8, qword ptr [rbp - 0x128] ; mov ecx, dword ptr [rbp - 0x130] ; jmp 0xabf27
read: 
write: ecx r11d r8 
--------------------------------------------------------------------------------
000ac188: RLP; mov edx, r15d ; mov r12, rax ; xor eax, eax ; sub edx, r12d ; cmovns eax, edx ; add eax, r12d ; cdqe ; mov rdi, rax ; mov qword ptr [rbp - 0x128], rax ; mov rax, qword ptr [rbp - 0xd8] ; sub rax, r14 ; cmp rdi, rax ; mov qword ptr [rbp - 0x130], rax ; jae 0xabe4c
read: eax edx r12d r14 r15d rax rdi rflags 
write: eax edx r12 rax rdi rflags 
--------------------------------------------------------------------------------
000ac20a: RLP; mov r11d, dword ptr [rbp - 0x138] ; mov r9, qword ptr [rbp - 0xf0] ; mov r8, qword ptr [rbp - 0x108] ; mov rdi, r15 ; mov rcx, qword ptr [rbp - 0xe8] ; mov rdx, qword ptr [rbp - 0x120] ; movsxd r12, r12d ; mov rsi, qword ptr [rbp - 0x130] ; mov dword ptr [rbp - 0x138], r11d ; lea r12, [r15 + r12*4] ; call 0xabc5c
read: r11d r12d r15 rip rsp 
write: r11d r12 r8 r9 rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000ac24e: RLP; mov r11d, dword ptr [rbp - 0x138] ; add r14, qword ptr [rbp - 0x128] ; test r11d, r11d ; je 0xac291
read: r11d r14 rflags 
write: r11d r14 rflags 
--------------------------------------------------------------------------------
000ac288: RLP; mov dword ptr [r13 - 4], eax ; cmp r12, r13 ; ja 0xac274
read: eax r12 r13 rflags 
write: rflags 
--------------------------------------------------------------------------------
000ac302: RLP; mov r12, rax ; mov eax, r15d ; mov esi, 0 ; sub eax, r12d ; cmovns esi, eax ; lea r15d, [rsi + r12] ; movsxd rsi, r15d ; mov rdi, rsi ; mov qword ptr [rbp - 0x120], rsi ; mov rsi, qword ptr [rbp - 0xd8] ; sub rsi, r14 ; cmp rdi, rsi ; jae 0xabe4c
read: eax esi r12d r14 r15d rax rdi rflags rsi 
write: eax esi r12 r15d rdi rflags rsi 
--------------------------------------------------------------------------------
000ac391: RLP; mov rax, qword ptr [rbp - 0xe8] ; mov r11d, dword ptr [rbp - 0x130] ; mov ecx, dword ptr [rbp - 0x128] ; mov edx, dword ptr [rax + 8] ; test ecx, ecx ; je 0xad701
read: ecx rflags 
write: ecx edx r11d rax rflags 
--------------------------------------------------------------------------------
000ac405: RLP; mov dword ptr [r13 + r12*4 - 4], eax ; sub r12, 1 ; jne 0xac3f4
read: eax r12 rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
000ac572: RLP; mov r11d, dword ptr [rbp - 0x130] ; mov r8, qword ptr [rbp - 0x128] ; mov r10d, dword ptr [rbp - 0x120] ; add r14, r15 ; xor r15d, r15d ; mov rcx, r12 ; mov rax, qword ptr [rbp - 0xd8] ; xor r12d, r12d ; sar rcx, 2 ; sub r15d, ecx ; cmovns r12d, r15d ; sub rax, r14 ; add r12d, ecx ; movsxd r12, r12d ; cmp r12, rax
read: ecx r12 r12d r14 r15 r15d rax rcx rflags 
write: r10d r11d r12 r12d r14 r15d r8 rax rcx rflags 
--------------------------------------------------------------------------------
000ac604: RLP; mov rcx, qword ptr [rbp - 0x130] ; mov r11d, dword ptr [rbp - 0x128] ; mov r8, qword ptr [rbp - 0x120] ; jmp 0xabf27
read: 
write: r11d r8 rcx 
--------------------------------------------------------------------------------
000ac950: RLP; mov dword ptr [r13], 9 ; add r13, 4 ; jmp 0xabf51
read: r13 
write: r13 rflags 
--------------------------------------------------------------------------------
000ac9d6: RLP; mov rcx, rax ; shr rax, 0x3f ; mov r10d, dword ptr [rbp - 0x120] ; mov rsi, rax ; mov rax, qword ptr [rbp - 0xf8] ; mov r11d, dword ptr [rbp - 0x128] ; movabs rdi, 0x6666666666666667 ; lea r8, [rax + 0x58] ; nop word ptr [rax + rax] ; mov rax, rcx ; imul rdi ; mov rax, rcx ; sar rax, 0x3f ; sar rdx, 2 ; sub rdx, rax
read: rax rcx rdi rdx 
write: r10d r11d r8 rax rcx rdi rdx rflags rsi 
--------------------------------------------------------------------------------
000acb17: RLP; mov rcx, qword ptr [rbp - 0x120] ; mov r9, qword ptr [rbp - 0x140] ; mov r11d, dword ptr [rbp - 0x138] ; mov r8d, dword ptr [rbp - 0x130] ; mov r10d, dword ptr [rbp - 0x128] ; lea r13, [r13 + rcx*4] ; mov dword ptr [r13], 0x2b ; add r13, 4 ; add r14, r9 ; mov eax, r12d ; mov edi, 0x88888889 ; mov ecx, 4 ; imul edi ; lea esi, [rdx + r12] ; sar r12d, 0x1f
read: eax edi r12d r13 r14 r9 
write: eax ecx edi edx esi r10d r11d r12d r13 r14 r8d r9 rcx rflags 
--------------------------------------------------------------------------------
000accd3: RLP; mov r8d, dword ptr [rbp - 0x128] ; sub r15d, eax ; mov rcx, rax ; cmovns r8d, r15d ; lea r12d, [r8 + rax] ; mov rax, qword ptr [rbp - 0xd8] ; movsxd r12, r12d ; sub rax, r14 ; cmp r12, rax ; jae 0xabe4c
read: eax r12 r12d r14 r15d r8d rax rflags 
write: r12 r12d r15d r8d rax rcx rflags 
--------------------------------------------------------------------------------
000acd55: RLP; mov rax, qword ptr [rbp - 0xe8] ; mov eax, dword ptr [rax + 0x18] ; mov dword ptr [rbp - 0x120], eax ; add eax, 0x20034 ; mov rsi, qword ptr [rbp - 0x100] ; movzx eax, ax ; mov rcx, qword ptr [rbp - 0x130] ; mov r11d, dword ptr [rbp - 0x128] ; mov rsi, qword ptr [rsi + rax*8 + 0x40] ; test r11d, r11d ; movsxd r15, ecx ; je 0xad73d
read: ax eax ecx r11d rflags 
write: eax r11d r15 rax rcx rflags rsi 
--------------------------------------------------------------------------------
000acda9: RLP; jmp 0xabf4c
read: 
write: 
--------------------------------------------------------------------------------
000ace75: RLP; mov r9, rax ; lea rax, [rax*4 + 0x22] ; mov r8, qword ptr [rbp - 0xf0] ; mov rcx, qword ptr [rbp - 0x110] ; mov rsi, qword ptr [rbp - 0xf8] ; mov rdx, r9 ; and rax, 0xfffffffffffffff0 ; mov qword ptr [rbp - 0x128], r9 ; sub rsp, rax ; lea r12, [rsp + 0xf] ; and r12, 0xfffffffffffffff0 ; mov rdi, r12 ; call 0xa176c
read: r12 r9 rax rip rsp 
write: r12 r8 r9 rax rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000acebb: RLP; mov r9, qword ptr [rbp - 0x128] ; mov edx, r15d ; xor eax, eax ; sub edx, r9d ; cmovns eax, edx ; add eax, r9d ; cdqe ; mov rdi, rax ; mov qword ptr [rbp - 0x128], rax ; mov rax, qword ptr [rbp - 0xd8] ; sub rax, r14 ; cmp rdi, rax ; jae 0xabe4c
read: eax edx r14 r15d r9d rax rdi rflags 
write: eax edx r9 rax rdi rflags 
--------------------------------------------------------------------------------
000acf3e: RLP; mov r9, qword ptr [rbp - 0x138] ; mov r11d, dword ptr [rbp - 0x130] ; mov esi, dword ptr [rbp - 0x120] ; test esi, esi ; jne 0xad843
read: esi rflags 
write: esi r11d r9 rflags 
--------------------------------------------------------------------------------
000acf86: RLP; mov r9, qword ptr [rbp - 0x120] ; lea r13, [r13 + r9*4] ; add r14, qword ptr [rbp - 0x128] ; mov rax, rbx ; jmp 0xabd24
read: r14 rbx 
write: r13 r14 r9 rax rflags 
--------------------------------------------------------------------------------
000ad0f3: RLP; mov r8d, dword ptr [rbp - 0x128] ; sub r15d, eax ; mov rcx, rax ; cmovns r8d, r15d ; lea r12d, [r8 + rax] ; mov rax, qword ptr [rbp - 0xd8] ; movsxd r12, r12d ; sub rax, r14 ; cmp r12, rax ; jae 0xabe4c
read: eax r12 r12d r14 r15d r8d rax rflags 
write: r12 r12d r15d r8d rax rcx rflags 
--------------------------------------------------------------------------------
000ad179: RLP; mov rax, qword ptr [rbp - 0xe8] ; mov eax, dword ptr [rax + 0x10] ; mov dword ptr [rbp - 0x120], eax ; add eax, 0x20042 ; jmp 0xacd6a
read: eax 
write: eax rax rflags 
--------------------------------------------------------------------------------
000ad332: RLP; mov dword ptr [r13], 0xa ; add r13, 4 ; jmp 0xabf51
read: r13 
write: r13 rflags 
--------------------------------------------------------------------------------
000ad3a1: RLP; mov r8d, dword ptr [rbp - 0x128] ; sub r15d, eax ; mov rcx, rax ; cmovns r8d, r15d ; lea r12d, [r8 + rax] ; mov rax, qword ptr [rbp - 0xd8] ; movsxd r12, r12d ; sub rax, r14 ; cmp r12, rax ; jae 0xabe4c
read: eax r12 r12d r14 r15d r8d rax rflags 
write: r12 r12d r15d r8d rax rcx rflags 
--------------------------------------------------------------------------------
000ad427: RLP; mov rax, qword ptr [rbp - 0xe8] ; mov eax, dword ptr [rax + 0x10] ; mov dword ptr [rbp - 0x120], eax ; add eax, 0x2004e ; jmp 0xacd6a
read: eax 
write: eax rax rflags 
--------------------------------------------------------------------------------
000ad49f: RLP; mov r8d, dword ptr [rbp - 0x128] ; sub r15d, eax ; mov rcx, rax ; cmovns r8d, r15d ; lea r12d, [r8 + rax] ; mov rax, qword ptr [rbp - 0xd8] ; movsxd r12, r12d ; sub rax, r14 ; cmp r12, rax ; jae 0xabe4c
read: eax r12 r12d r14 r15d r8d rax rflags 
write: r12 r12d r15d r8d rax rcx rflags 
--------------------------------------------------------------------------------
000ad525: RLP; mov rax, qword ptr [rbp - 0xe8] ; mov eax, dword ptr [rax + 0x18] ; mov dword ptr [rbp - 0x120], eax ; add eax, 0x2003b ; jmp 0xacd6a
read: eax 
write: eax rax rflags 
--------------------------------------------------------------------------------
000ad5fe: RLP; mov ecx, dword ptr [rbx] ; mov dword ptr [r13], ecx ; add r13, 4 ; jmp 0xabf51
read: ecx r13 
write: ecx r13 rflags 
--------------------------------------------------------------------------------
000ad62a: RLP; mov r8, qword ptr [rbp - 0x120] ; mov r11d, dword ptr [rbp - 0x128] ; mov rcx, qword ptr [rbp - 0x130] ; jmp 0xabf27
read: 
write: r11d r8 rcx 
--------------------------------------------------------------------------------
000ad696: RLP; mov rcx, qword ptr [rbp - 0x120] ; mov r9d, dword ptr [rbp - 0x140] ; mov r11d, dword ptr [rbp - 0x138] ; mov r8, qword ptr [rbp - 0x130] ; mov r10d, dword ptr [rbp - 0x128] ; lea r13, [r13 + rcx*4] ; mov eax, r15d ; add r14, rcx ; sub eax, r9d ; cmp r15d, r9d ; mov r15d, 0 ; cmovg r15d, eax ; jmp 0xac58d
read: eax r14 r15d r9d rcx rflags 
write: eax r10d r11d r13 r14 r15d r8 r9d rcx rflags 
--------------------------------------------------------------------------------
000ad6f5: RLP; mov r11d, dword ptr [rbp - 0x138] ; jmp 0xac211
read: 
write: r11d 
--------------------------------------------------------------------------------
000ad738: RLP; jmp 0xac41e
read: 
write: 
--------------------------------------------------------------------------------
000ad74c: RLP; jmp 0xabf4c
read: 
write: 
--------------------------------------------------------------------------------
000ad779: RLP; jmp 0xac41e
read: 
write: 
--------------------------------------------------------------------------------
000ad794: RLP; mov rax, qword ptr [rbp - 0xe8] ; mov ecx, dword ptr [rbp - 0x128] ; mov r11d, dword ptr [rbp - 0x130] ; mov edx, dword ptr [rax + 8] ; jmp 0xac3a8
read: 
write: ecx edx r11d rax 
--------------------------------------------------------------------------------
000ad7c6: RLP; mov r11d, dword ptr [rbp - 0x120] ; mov r8, qword ptr [rbp - 0x128] ; mov r9, qword ptr [rbp - 0x130] ; jmp 0xac0b0
read: 
write: r11d r8 r9 
--------------------------------------------------------------------------------
000ad7f9: RLP; mov r9, qword ptr [rbp - 0x120] ; jmp 0xacf8d
read: 
write: r9 
--------------------------------------------------------------------------------
000ad87d: RLP; mov dword ptr [r13 + r15*4 - 4], eax ; sub r15, 1 ; jne 0xad86c
read: eax r15 rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
000ad90c: RLP; mov r9, qword ptr [rbp - 0x120] ; mov rcx, qword ptr [rbp - 0x140] ; mov r11d, dword ptr [rbp - 0x138] ; mov r8d, dword ptr [rbp - 0x130] ; mov r10d, dword ptr [rbp - 0x128] ; lea r13, [r13 + r9*4] ; mov dword ptr [r13], 0x2d ; add r13, 4 ; add r14, r12 ; mov r12d, ecx ; neg r12d ; jmp 0xacb4e
read: ecx r12 r12d r13 r14 
write: r10d r11d r12d r13 r14 r8d r9 rcx rflags 
--------------------------------------------------------------------------------
000ada6e: RLP; jmp 0xac950
read: 
write: 
--------------------------------------------------------------------------------
000ada89: RLP; jmp 0xad332
read: 
write: 
--------------------------------------------------------------------------------
000adaaa: RLP; mov r11d, dword ptr [rbp - 0x130] ; mov r9, qword ptr [rbp - 0x138] ; jmp 0xacf4c
read: 
write: r11d r9 
--------------------------------------------------------------------------------
000adaec: RLP; test rax, rax ; mov r10d, dword ptr [rbp - 0x120] ; mov r8d, dword ptr [rbp - 0x128] ; mov r11d, dword ptr [rbp - 0x130] ; je 0xacff6
read: rax rflags 
write: r10d r11d r8d rflags 
--------------------------------------------------------------------------------
000adb59: RLP; test rax, rax ; mov r12, rax ; mov r10d, dword ptr [rbp - 0x120] ; mov r8d, dword ptr [rbp - 0x128] ; mov r11d, dword ptr [rbp - 0x130] ; je 0xad54d
read: rax rflags 
write: r10d r11d r12 r8d rflags 
--------------------------------------------------------------------------------
000adb98: RLP; mov rcx, rax ; mov eax, r15d ; xor edx, edx ; sub eax, ecx ; cmovns edx, eax ; add edx, ecx ; movsxd r15, edx ; mov rdx, qword ptr [rbp - 0xd8] ; sub rdx, r14 ; cmp r15, rdx ; jae 0xabe4c
read: eax ecx edx r14 r15 r15d rax rdx rflags 
write: eax edx r15 rcx rdx rflags 
--------------------------------------------------------------------------------
000adc15: RLP; mov r8, qword ptr [rbp - 0x120] ; mov rsi, qword ptr [r12 + 0x30] ; mov rcx, qword ptr [rbp - 0x130] ; mov r11d, dword ptr [rbp - 0x128] ; lea r13, [r13 + r8*4] ; test r11d, r11d ; movsxd r12, ecx ; je 0xade9f
read: ecx r11d rflags 
write: r11d r12 r13 r8 rcx rflags rsi 
--------------------------------------------------------------------------------
000adc56: RLP; lea r13, [r13 + r12*4] ; add r14, r15 ; mov rax, rbx ; jmp 0xabd24
read: r14 r15 rbx 
write: r13 r14 rax rflags 
--------------------------------------------------------------------------------
000adc9d: RLP; test rax, rax ; mov r10d, dword ptr [rbp - 0x120] ; mov r8d, dword ptr [rbp - 0x128] ; mov r11d, dword ptr [rbp - 0x130] ; je 0xacbad
read: rax rflags 
write: r10d r11d r8d rflags 
--------------------------------------------------------------------------------
000adce2: RLP; mov rax, qword ptr [rbp - 0x108] ; mov r11d, dword ptr [rbp - 0x128] ; mov r10d, dword ptr [rbp - 0x118] ; mov byte ptr [rax], 1 ; mov rax, qword ptr [rbp - 0xe8] ; movsxd rax, dword ptr [rax + 0x20] ; jmp 0xacdff
read: 
write: r10d r11d rax 
--------------------------------------------------------------------------------
000add20: RLP; mov rax, qword ptr [rbp - 0xe8] ; mov rsi, qword ptr [rbp - 0x100] ; mov r11d, dword ptr [rbp - 0x128] ; mov rcx, qword ptr [rbp - 0x130] ; mov eax, dword ptr [rax + 0x18] ; mov dword ptr [rbp - 0x120], eax ; add eax, 0x20034 ; movzx eax, ax ; mov rsi, qword ptr [rsi + rax*8 + 0x40] ; jmp 0xacd87
read: ax eax 
write: eax r11d rax rcx rflags rsi 
--------------------------------------------------------------------------------
000add6d: RLP; mov rax, qword ptr [rbp - 0xe8] ; mov eax, dword ptr [rax + 0x10] ; mov dword ptr [rbp - 0x120], eax ; add eax, 0x20042 ; mov rdi, qword ptr [rbp - 0x100] ; movzx eax, ax ; mov r11d, dword ptr [rbp - 0x128] ; mov rcx, qword ptr [rbp - 0x130] ; mov rsi, qword ptr [rdi + rax*8 + 0x40] ; jmp 0xacd87
read: ax eax 
write: eax r11d rax rcx rdi rflags rsi 
--------------------------------------------------------------------------------
000addba: RLP; mov rax, qword ptr [rbp - 0xe8] ; mov eax, dword ptr [rax + 0x18] ; mov dword ptr [rbp - 0x120], eax ; add eax, 0x2003b ; jmp 0xadd82
read: eax 
write: eax rax rflags 
--------------------------------------------------------------------------------
000adde7: RLP; mov rax, qword ptr [rbp - 0xe8] ; mov eax, dword ptr [rax + 0x10] ; mov dword ptr [rbp - 0x120], eax ; add eax, 0x2004e ; jmp 0xadd82
read: eax 
write: eax rax rflags 
--------------------------------------------------------------------------------
000ade14: RLP; mov ecx, dword ptr [rbx] ; jmp 0xad600
read: 
write: ecx 
--------------------------------------------------------------------------------
000ade2c: RLP; mov rcx, qword ptr [rbp - 0x120] ; mov r10d, dword ptr [rbp - 0x128] ; mov r8d, dword ptr [rbp - 0x130] ; mov r11d, dword ptr [rbp - 0x138] ; mov r9, qword ptr [rbp - 0x140] ; lea r13, [r13 + rcx*4] ; jmp 0xacb3f
read: 
write: r10d r11d r13 r8d r9 rcx 
--------------------------------------------------------------------------------
000ade72: RLP; mov r9, qword ptr [rbp - 0x120] ; mov r10d, dword ptr [rbp - 0x128] ; mov r8d, dword ptr [rbp - 0x130] ; mov r11d, dword ptr [rbp - 0x138] ; mov rcx, qword ptr [rbp - 0x140] ; lea r13, [r13 + r9*4] ; jmp 0xad934
read: 
write: r10d r11d r13 r8d r9 rcx 
--------------------------------------------------------------------------------
000adeae: RLP; jmp 0xadc56
read: 
write: 
--------------------------------------------------------------------------------
000adecc: RLP; mov r8, qword ptr [rbp - 0x120] ; mov rsi, qword ptr [r12 + 0x30] ; mov r11d, dword ptr [rbp - 0x128] ; mov rcx, qword ptr [rbp - 0x130] ; lea r13, [r13 + r8*4] ; jmp 0xadc34
read: 
write: r11d r13 r8 rcx rsi 
--------------------------------------------------------------------------------
000adf1a: RLP; add rsp, 0x18 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000adf62: RLP; cmp eax, 0xfffff000 ; setbe al ; add rsp, 8 ; movzx eax, al ; ret
read: al eax rflags rsp 
write: al eax rflags rsp 
--------------------------------------------------------------------------------
000adfd9: RLP; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: rsp 
write: r12 r13 r14 rbp rbx rsp 
--------------------------------------------------------------------------------
000ae00a: RLP; mov qword ptr [r13], 0 ; mov dword ptr [r13 + 0x10], 1 ; jmp 0xadfae
read: 
write: 
--------------------------------------------------------------------------------
000ae03d: RLP; jmp 0xadf99
read: 
write: 
--------------------------------------------------------------------------------
000ae06a: RLP; test rax, rax ; je 0xae1bb
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ae0c4: RLP; lea rdi, [rax + 1] ; xor esi, esi ; mov qword ptr [rbx - 0x20], rdi ; call 0x9023c
read: esi rdi rip rsp 
write: esi rdi rflags rsp 
--------------------------------------------------------------------------------
000ae0d7: RLP; lea rdi, [rax + 1] ; xor esi, esi ; mov rdx, rdi ; sub rdx, rbp ; add rdx, 3 ; not rdx ; and edx, 3 ; add rdi, rdx ; mov qword ptr [rbx - 0x18], rdi ; call 0x9488c
read: edx esi rbp rdi rdx rip rsp 
write: edx esi rdi rdx rflags rsp 
--------------------------------------------------------------------------------
000ae0fd: RLP; lea rdi, [rax + 4] ; xor esi, esi ; mov qword ptr [rbx - 0x10], rdi ; call 0x9488c
read: esi rdi rip rsp 
write: esi rdi rflags rsp 
--------------------------------------------------------------------------------
000ae110: RLP; cmp r14, r12 ; lea rbp, [rax + 4] ; jbe 0xae012
read: r12 r14 rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
000ae18a: RLP; test rax, rax ; mov rdx, rax ; mov qword ptr [rbp + 0x28], rax ; je 0xadfae
read: rax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
000ae1c8: RLP; mov qword ptr [r13 + 8], 0 ; mov qword ptr [r13], 0 ; jmp 0xae012
read: 
write: 
--------------------------------------------------------------------------------
000ae336: RLP; mov rsi, qword ptr [rsp + 8] ; mov rax, qword ptr [rsi + 0x28] ; test rax, rax ; jne 0xae212
read: rax rflags 
write: rax rflags rsi 
--------------------------------------------------------------------------------
000ae3bd: RLP; mov rsi, qword ptr [rsp + 8] ; mov rax, qword ptr [rsi + 0x28] ; test rax, rax ; jne 0xae379
read: rax rflags 
write: rax rflags rsi 
--------------------------------------------------------------------------------
000ae41c: RLP; test rax, rax ; mov qword ptr [r12 + 0x18], rax ; je 0xae45c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ae44f: RLP; cmp rbx, 0x320 ; lea rbp, [rax + 1] ; jne 0xae434
read: rbx rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
000ae46f: RLP; test rax, rax ; mov rdx, rax ; mov qword ptr [rbx + 0x28], rax ; je 0xae45c
read: rax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
000ae518: RLP; mov rax, qword ptr [rbx + 0x28] ; test rax, rax ; jne 0xae4e2
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000ae54e: RLP; add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
read: rbx rsp 
write: rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000ae57d: RLP; jmp 0xae4d2
read: 
write: 
--------------------------------------------------------------------------------
000ae614: RLP; test rax, rax ; mov qword ptr [r12 + 0x20], rax ; je 0xae71f
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ae647: RLP; cmp rbx, 0x320 ; lea rbp, [rax + 4] ; jne 0xae62c
read: rbx rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
000ae6aa: RLP; mov rsi, qword ptr [rsp + 8] ; jmp 0xae5da
read: 
write: rsi 
--------------------------------------------------------------------------------
000ae6dd: RLP; add rsp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rbx rsp 
write: r12 r13 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000ae70e: RLP; mov rsi, qword ptr [rsp + 8] ; test rax, rax ; mov rdx, rax ; mov qword ptr [rsi + 0x28], rax ; jne 0xae726
read: rax rflags 
write: rdx rflags rsi 
--------------------------------------------------------------------------------
000ae7d5: RLP; cmp rax, rbp ; mov r15, rax ; jbe 0xae7fa
read: rax rbp rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
000ae7f0: RLP; test eax, eax ; cmove r12d, ebx ; cmove rbp, r15 ; add rbx, 1 ; cmp rbx, 0x64 ; jne 0xae7c4
read: eax ebx r12d r15 rbp rbx rflags 
write: r12d rbp rbx rflags 
--------------------------------------------------------------------------------
000ae83c: RLP; mov rax, qword ptr [rbx + 0x28] ; test rax, rax ; jne 0xae7a8
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000ae87e: RLP; jmp 0xae810
read: 
write: 
--------------------------------------------------------------------------------
000ae8a1: RLP; jmp 0xae790
read: 
write: 
--------------------------------------------------------------------------------
000ae8e6: RLP; mov rdi, qword ptr [rbx + 0x18] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000ae8f3: RLP; mov rdi, qword ptr [rbx + 0x20] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000ae900: RLP; mov rdi, rbx ; call 0x1f46c
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000ae90c: RLP; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
000ae93e: RLP; mov rdx, qword ptr [rsp + 0x18] ; mov rsi, qword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x50] ; mov qword ptr [rbx + 0x10], rdx ; mov rdx, qword ptr [rsp + 0x20] ; mov qword ptr [rbx], rsi ; mov qword ptr [rbx + 8], rdi ; mov qword ptr [rbx + 0x18], rdx ; add rsp, 0xd0 ; pop rbx ; ret
read: rdi rdx rsi rsp 
write: rbx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000ae98e: RLP; mov rdx, qword ptr [rsp + 0x18] ; mov rsi, qword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x50] ; mov qword ptr [rbx + 0x28], 0 ; mov qword ptr [rbx + 0x30], 0 ; mov qword ptr [rbx + 0x38], 0 ; mov qword ptr [rbx + 0x10], rdx ; mov rdx, qword ptr [rsp + 0x20] ; mov qword ptr [rbx], rsi ; mov qword ptr [rbx + 8], rdi ; mov qword ptr [rbx + 0x40], 0 ; mov qword ptr [rbx + 0x18], rdx ; movsxd rdx, dword ptr [rsp + 0xa0] ; mov qword ptr [rbx + 0x20], rdx ; add rsp, 0xd0
read: rdi rdx rsi rsp 
write: rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000aea45: RLP; test rax, rax ; je 0xaeac4
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000aeaae: RLP; test eax, eax ; mov rcx, qword ptr [rsp + 8] ; jns 0xaea0e
read: eax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
000aead7: RLP; test rax, rax ; jne 0xaea4a
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000aeb29: RLP; test eax, eax ; js 0xaeb57
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000aeb41: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000aeb75: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000aeb91: RLP; mov edi, ebx ; call 0xd7129
read: ebx rip rsp 
write: edi rsp 
--------------------------------------------------------------------------------
000aeb9c: RLP; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
000aec0c: RLP; add rsp, 0x80 ; mov rax, qword ptr [rbx + 0x18] ; lea rbp, [rbx + 0x30] ; jmp 0xaec42
read: rsp 
write: rax rbp rflags rsp 
--------------------------------------------------------------------------------
000aec5a: RLP; cmp rax, 0 ; jle 0xaec6c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000aeca6: RLP; add rsp, 0x80 ; add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rdx rsp 
write: r12 r13 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000aed29: RLP; add rsp, 0x80 ; mov rcx, qword ptr [rbx + 0x18] ; lea rbp, [rbx + 0x30] ; nop dword ptr [rax] ; cmp rcx, qword ptr [rbx + 0x10] ; jae 0xaed95
read: rcx rflags rsp 
write: rbp rcx rflags rsp 
--------------------------------------------------------------------------------
000aed72: RLP; cmp rax, 0xff ; lea r13, [rax + 0x14] ; jbe 0xaedbc
read: rax rflags 
write: r13 rflags 
--------------------------------------------------------------------------------
000aeda7: RLP; cmp rax, 0 ; jle 0xaee34
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000aedde: RLP; mov rsi, qword ptr [rsp] ; xor edx, edx ; mov qword ptr [rsi], r12 ; mov word ptr [r12 + 0x10], r13w ; cmp dword ptr [rip + 0x2bf97c], 0 ; je 0xaedfe
read: edx r12 r13w rflags 
write: edx rflags rsi 
--------------------------------------------------------------------------------
000aee17: RLP; add rsp, 0x80 ; add rsp, 0x18 ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: edx rsp 
write: eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000aeea7: RLP; add rsp, 0x80 ; mov edi, dword ptr [rbx] ; xor edx, edx ; xor esi, esi ; call 0xe35bc
read: edx esi rip rsp 
write: edi edx esi rflags rsp 
--------------------------------------------------------------------------------
000aeebd: RLP; mov qword ptr [rbx + 0x20], 0 ; mov qword ptr [rbx + 0x18], 0 ; mov qword ptr [rbx + 0x10], 0 ; mov dword ptr [rbx + 0x28], 0 ; cmp dword ptr [rip + 0x2bf88d], 0 ; je 0xaeeed
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000aef06: RLP; add rsp, 0x80 ; pop rbx ; ret
read: rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
000aef5f: RLP; add rsp, 0x80 ; mov edi, dword ptr [rbx] ; xor edx, edx ; mov rsi, rbp ; call 0xe35bc
read: edx rbp rip rsp 
write: edi edx rflags rsi rsp 
--------------------------------------------------------------------------------
000aef76: RLP; mov qword ptr [rbx + 0x10], 0 ; mov qword ptr [rbx + 0x18], 0 ; mov qword ptr [rbx + 0x20], rbp ; cmp dword ptr [rip + 0x2bf7df], 0 ; je 0xaef9b
read: rbp rflags 
write: rflags 
--------------------------------------------------------------------------------
000aefb4: RLP; add rsp, 0x80 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000aeffe: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000af02b: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000af05b: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000af0b6: RLP; lea rdi, [rbx + 0x13] ; lea rdx, [rax + 1] ; mov rsi, rbp ; call 0x88fbc
read: rbp rip rsp 
write: rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000af0ca: RLP; movzx eax, word ptr [rbx + 0x10] ; mov byte ptr [rbx + 0x12], r12b ; add rbx, rax ; cmp r13, rbx ; ja 0xaf09c
read: r12b r13 rax rbx rflags 
write: eax rbx rflags 
--------------------------------------------------------------------------------
000af12e: RLP; test eax, eax ; js 0xaf18d
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000af154: RLP; cmp eax, -1 ; je 0xaf18d
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000af175: RLP; add rsp, 0x98 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000af1dd: RLP; cmp qword ptr [rbp + 0x10], rbx ; ja 0xaf1cc
read: rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
000af1ef: RLP; mov rdi, qword ptr [rbp] ; call 0xaeb7c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000af1fc: RLP; pop rbx ; pop rbp ; pop r12 ; ret
read: rsp 
write: r12 rbp rbx rsp 
--------------------------------------------------------------------------------
000af234: RLP; test rax, rax ; mov r12, rax ; je 0xaf3a4
read: rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
000af278: RLP; test rax, rax ; mov r15, rax ; je 0xaf2ec
read: rax rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
000af2b0: RLP; test rax, rax ; je 0xaf2ec
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000af2c9: RLP; mov rsi, qword ptr [rsp + 8] ; mov rdi, r12 ; mov qword ptr [rsi + r13*8], rax ; add r13, 1 ; call 0xaebbc
read: r12 r13 rax rip rsp 
write: r13 rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000af2e2: RLP; test rax, rax ; mov r15, rax ; jne 0xaf280
read: rax rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
000af318: RLP; mov rax, qword ptr [rsp + 0x18] ; mov rcx, qword ptr [rsp + 8] ; mov qword ptr [rax], rcx ; mov rdi, r12 ; call 0xaeb7c
read: r12 rcx rip rsp 
write: rax rcx rdi rsp 
--------------------------------------------------------------------------------
000af331: RLP; mov eax, dword ptr [rsp + 0x14] ; mov dword ptr fs:[rbp], eax ; add rsp, 0x38 ; mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: eax r13d rsp 
write: eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000af355: RLP; test eax, eax ; mov dword ptr fs:[rbp], 0 ; je 0xaf26c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000af382: RLP; test r13, r13 ; jne 0xaf36c
read: r13 rflags 
write: rflags 
--------------------------------------------------------------------------------
000af39b: RLP; mov dword ptr [rsp + 0x14], ebx ; jmp 0xaf325
read: ebx 
write: 
--------------------------------------------------------------------------------
000af3cb: RLP; test rax, rax ; je 0xaf2ec
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000af413: RLP; mov rdx, r12 ; mov rsi, rbp ; mov edi, ebx ; mov r13, rax ; call 0xaf06c
read: ebx r12 rax rbp rip rsp 
write: edi r13 rdx rsi rsp 
--------------------------------------------------------------------------------
000af427: RLP; cmp rax, -1 ; je 0xaf430
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000af462: RLP; test eax, eax ; jne 0xaf62b
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000af4a4: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rip + 0x2bb2ba] ; test rdx, rdx ; je 0xaf5de
read: rdx rflags rsp 
write: rdx rflags rsp 
--------------------------------------------------------------------------------
000af4e9: RLP; cmp eax, 0x22 ; jne 0xaf5bc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000af51a: RLP; test rax, rax ; je 0xaf606
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000af539: RLP; test eax, eax ; jne 0xaf5cc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000af592: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x2b98c4] ; mov dword ptr fs:[rax], edx ; mov rax, qword ptr [rsp + 0x18] ; add rsp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: edx rsp 
write: r12 r13 r14 r15 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000af5f7: RLP; mov qword ptr [rip + 0x2bb16e], rax ; mov rdx, rax ; jmp 0xaf4bb
read: rax 
write: rdx 
--------------------------------------------------------------------------------
000af61c: RLP; mov rax, qword ptr [rsp + 8] ; mov dword ptr fs:[r13], r15d ; jmp 0xaf523
read: r15d 
write: rax 
--------------------------------------------------------------------------------
000af67d: RLP; lea rsi, [rip + 0x86abc] ; mov rdi, r12 ; mov r13, qword ptr [r14] ; mov r15, rax ; call 0x104d8c
read: r12 rax rip rsp 
write: r13 r15 rdi rsi rsp 
--------------------------------------------------------------------------------
000af696: RLP; test rax, rax ; mov r14, rax ; je 0xaf8de
read: rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
000af6b5: RLP; test rax, rax ; je 0xaf6ec
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000af6ca: RLP; mov rax, qword ptr [rbp - 0x58] ; call rax
read: rax rsp 
write: rax rsp 
--------------------------------------------------------------------------------
000af6d4: RLP; cmp eax, 1 ; mov edx, eax ; je 0xaf6ec
read: eax rflags 
write: edx rflags 
--------------------------------------------------------------------------------
000af703: RLP; mov qword ptr [rbp - 0x98], rax ; mov rax, r15 ; mov byte ptr [rbp - 0x75], 0 ; add rax, 0x1e ; and rax, 0xfffffffffffffff0 ; sub rsp, rax ; lea rax, [rsp + 0xf] ; mov qword ptr [rbp - 0x58], rax ; lea rax, [rbp - 0x50] ; and qword ptr [rbp - 0x58], 0xfffffffffffffff0 ; mov qword ptr [rbp - 0x68], rax ; mov rax, qword ptr [rip + 0x2b972b] ; add rax, qword ptr fs:[0] ; mov qword ptr [rbp - 0x70], rax ; nop word ptr [rax + rax]
read: r15 rax rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000af758: RLP; mov rcx, qword ptr [rbp - 0x70] ; mov rdx, qword ptr [rbp - 0x60] ; mov rsi, qword ptr [rbp - 0x58] ; mov rdi, qword ptr [rbp - 0x68] ; call r14
read: r14 rsp 
write: rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000af76f: RLP; cmp eax, -2 ; mov r12d, eax ; je 0xaf81c
read: eax rflags 
write: r12d rflags 
--------------------------------------------------------------------------------
000af7b4: RLP; test eax, eax ; jne 0xaf79c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000af859: RLP; call rbx
read: rbx rsp 
write: rsp 
--------------------------------------------------------------------------------
000af85f: RLP; mov edx, dword ptr [rbp - 0x58] ; jmp 0xaf6db
read: 
write: edx 
--------------------------------------------------------------------------------
000af8c9: RLP; nop dword ptr [rax] ; jmp 0xaf838
read: 
write: 
--------------------------------------------------------------------------------
000af920: RLP; test rax, rax ; mov r13, rax ; je 0xaf829
read: rax rflags 
write: r13 rflags 
--------------------------------------------------------------------------------
000af95c: RLP; test eax, eax ; jne 0xaf881
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000af97b: RLP; test rax, rax ; je 0xaf99a
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000afa59: RLP; test rax, rax ; je 0xafb3e
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000afa73: RLP; mov rdx, r14 ; add rdx, qword ptr [rip + 0x2b93e7] ; mov r9, qword ptr [rsp + 0x20] ; mov r8, r15 ; mov rcx, r12 ; mov esi, ebp ; mov rdi, qword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x10] ; mov qword ptr [rsp], rdx ; mov rdx, qword ptr [rsp + 0x28] ; call rax
read: ebp r12 r14 r15 rax rdx rsp 
write: esi r8 r9 rax rcx rdi rdx rflags rsp 
--------------------------------------------------------------------------------
000afaa3: RLP; mov rdi, qword ptr [rsp + 0x38] ; mov rsi, rbx ; mov r9, rdi ; nop word ptr [rax + rax] ; cmp rdi, rsi ; jle 0xafaec
read: rbx rdi rflags rsi 
write: r9 rdi rflags rsi 
--------------------------------------------------------------------------------
000afb65: RLP; jmp 0xafaa3
read: 
write: 
--------------------------------------------------------------------------------
000afb8a: RLP; mov r11, qword ptr [rip + 0x2bec83] ; test eax, eax ; mov qword ptr [r14], r11 ; je 0xafc8c
read: eax r11 rflags 
write: r11 rflags 
--------------------------------------------------------------------------------
000afbe8: RLP; test eax, eax ; jns 0xafba3
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000afc48: RLP; test eax, eax ; js 0xafc6c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000afcd9: RLP; test rax, rax ; mov qword ptr [rsp + 8], rax ; je 0xafd48
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000afd01: RLP; movsxd rdx, dword ptr [rbx] ; movsxd rbp, eax ; mov r13, qword ptr [rsp + 8] ; mov rdi, r12 ; mov rsi, r13 ; cmp ebp, edx ; cmovle rdx, rbp ; shl rdx, 2 ; call 0x8e3dc
read: eax ebp edx r12 r13 rbp rdx rflags rip rsp 
write: r13 rbp rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000afd25: RLP; mov rdi, r13 ; call 0x1f46c
read: r13 rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000afd31: RLP; cmp ebp, dword ptr [rbx] ; mov eax, 0xffffffff ; mov dword ptr [rbx], ebp ; cmovle eax, ebp ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: eax ebp rflags rsp 
write: eax r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000afd7e: RLP; test rax, rax ; mov rbx, rax ; jle 0xafe3c
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000afdac: RLP; test rax, rax ; mov qword ptr [rsp + 8], rax ; je 0xafe4e
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000afdd6: RLP; mov r12d, eax ; movsxd r13, eax ; jmp 0xafdfe
read: eax 
write: r12d r13 
--------------------------------------------------------------------------------
000afe12: RLP; cmp eax, -1 ; mov ebp, eax ; je 0xafde4
read: eax rflags 
write: ebp rflags 
--------------------------------------------------------------------------------
000afe27: RLP; mov eax, ebp ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: ebp rsp 
write: eax r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000afebd: RLP; add rsp, 0x38 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000aff10: RLP; add rsp, 0x80 ; lea r8, [rip + 0x2bbd1e] ; lea rdx, [rip + 0x2ba84f] ; lea rsi, [rip + 0x2bbd30] ; lea rdi, [rip + 0x7e9] ; xor r9d, r9d ; mov ecx, 0x400 ; call 0x10522c
read: r9d rip rsp 
write: ecx r8 r9d rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000aff44: RLP; mov rdx, rax ; mov rax, qword ptr [rip + 0x2b8f16] ; mov esi, dword ptr fs:[rax] ; cmp dword ptr [rip + 0x2be818], 0 ; je 0xaff65
read: rax rflags 
write: esi rax rdx rflags 
--------------------------------------------------------------------------------
000aff84: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x2b8ed2] ; mov dword ptr fs:[rax], esi ; mov rax, rdx ; add rsp, 8 ; ret
read: esi rdx rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000afff8: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rip + 0x2ba776] ; mov rcx, qword ptr [rip + 0x2bbcaf] ; test rdx, rdx ; je 0xb010c
read: rdx rflags rsp 
write: rcx rdx rflags rsp 
--------------------------------------------------------------------------------
000b0046: RLP; cmp eax, 0x22 ; jne 0xb00fc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b0077: RLP; test rax, rax ; jne 0xb0024
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b0088: RLP; mov rax, qword ptr [rip + 0x2b8dd5] ; mov qword ptr [rip + 0x2ba6e2], 0 ; mov dword ptr fs:[rax], 0xc ; mov qword ptr [rsp + 8], 0 ; cmp dword ptr [rip + 0x2be6bf], 0 ; je 0xb00be
read: rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000b00dd: RLP; add rsp, 0x80 ; mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rsp 
write: r12 r13 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000b0125: RLP; test rax, rax ; mov qword ptr [rip + 0x2ba64d], rax ; je 0xb00a1
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b0199: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rip + 0x2ba5dd] ; mov rcx, qword ptr [rip + 0x2bbb4e] ; test rdx, rdx ; je 0xb02ac
read: rdx rflags rsp 
write: rcx rdx rflags rsp 
--------------------------------------------------------------------------------
000b01e7: RLP; cmp eax, 0x22 ; jne 0xb029c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b0218: RLP; test rax, rax ; jne 0xb01c4
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b0229: RLP; mov rax, qword ptr [rip + 0x2b8c34] ; mov qword ptr [rip + 0x2ba549], 0 ; mov dword ptr fs:[rax], 0xc ; mov qword ptr [rsp + 8], 0 ; cmp dword ptr [rip + 0x2be51e], 0 ; je 0xb025f
read: rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000b027e: RLP; add rsp, 0x80 ; mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rsp 
write: r12 r13 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000b02c5: RLP; test rax, rax ; mov qword ptr [rip + 0x2ba4b5], rax ; je 0xb0242
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b0363: RLP; add rsp, 0x80 ; mov rdx, qword ptr [r12 + 0x88] ; mov qword ptr [rdx + 8], r8 ; add dword ptr [rdx + 4], 1 ; mov rdx, qword ptr [r15] ; movzx eax, byte ptr [rdx] ; cmp al, 0x2d ; je 0xb038c
read: al r8 rflags rsp 
write: eax rdx rflags rsp 
--------------------------------------------------------------------------------
000b03b3: RLP; test eax, eax ; js 0xb041f
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b041b: RLP; test eax, eax ; jns 0xb03ec
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b0466: RLP; add rsp, 0x80 ; mov edx, 0xffffffff ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: edx rsp 
write: eax edx r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000b04b7: RLP; jmp 0xb03b3
read: 
write: 
--------------------------------------------------------------------------------
000b051d: RLP; add rsp, 0x80 ; jmp 0xb0472
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000b0552: RLP; cdq ; jmp 0xb04d6
read: eax 
write: eax edx 
--------------------------------------------------------------------------------
000b05a0: RLP; add rsp, 0x80 ; lea r8, [rip + 0x2bb76e] ; lea rcx, [rip + 0x2bb75f] ; lea rdx, [rip + 0x2bb768] ; lea rsi, [rip + 0x55aa9] ; lea rdi, [rip + 0x85b81] ; mov dword ptr [rsp + 8], 0 ; mov qword ptr [rsp], 0 ; xor r9d, r9d ; call 0x1053dc
read: r9d rip rsp 
write: r8 r9d rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000b05e6: RLP; mov rax, qword ptr [rip + 0x2b8877] ; mov edx, dword ptr fs:[rax] ; cmp dword ptr [rip + 0x2be179], 0 ; je 0xb0604
read: rflags 
write: edx rax rflags 
--------------------------------------------------------------------------------
000b0623: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x2b8833] ; mov dword ptr fs:[rax], edx ; add rsp, 0x18 ; ret
read: edx rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000b068e: RLP; add rsp, 0x80 ; lea r8, [rip + 0x2bb680] ; lea rcx, [rip + 0x2bb671] ; lea rdx, [rip + 0x2bb67a] ; lea rsi, [rip + 0x559bb] ; lea rdi, [rip + 0x85a9c] ; xor r9d, r9d ; call 0x10550c
read: r9d rip rsp 
write: r8 r9d rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000b06c4: RLP; mov rax, qword ptr [rip + 0x2b8799] ; mov edx, dword ptr fs:[rax] ; cmp dword ptr [rip + 0x2be09b], 0 ; je 0xb06e2
read: rflags 
write: edx rax rflags 
--------------------------------------------------------------------------------
000b0701: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x2b8755] ; mov dword ptr fs:[rax], edx ; add rsp, 8 ; ret
read: edx rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000b076a: RLP; add rsp, 0x80 ; lea r8, [rip + 0x2bb59c] ; mov qword ptr [rsp + 0x20], rdx ; mov qword ptr [rsp + 0x10], r9 ; lea rcx, [rip + 0x2bb59b] ; lea r9, [rip + 0x2bb58c] ; lea rdx, [rip + 0x558d5] ; lea rsi, [rip + 0x859ad] ; lea rdi, [rip + 0x8599b] ; mov qword ptr [rsp + 0x30], 0 ; mov qword ptr [rsp + 0x28], rbx ; mov qword ptr [rsp + 0x18], r10 ; mov dword ptr [rsp + 8], 0 ; mov qword ptr [rsp], 0 ; call 0x1055fc
read: r10 r9 rbx rdx rip rsp 
write: r8 r9 rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000b07d1: RLP; mov edx, eax ; mov rax, qword ptr [rip + 0x2b868a] ; mov esi, dword ptr fs:[rax] ; cmp dword ptr [rip + 0x2bdf8c], 0 ; je 0xb07f1
read: eax rflags 
write: edx esi rax rflags 
--------------------------------------------------------------------------------
000b0810: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x2b8646] ; mov dword ptr fs:[rax], esi ; add rsp, 0x40 ; mov eax, edx ; pop rbx ; ret
read: edx esi rsp 
write: eax rax rbx rflags rsp 
--------------------------------------------------------------------------------
000b08fa: RLP; mov r8, r14 ; mov rcx, r13 ; mov rdx, r12 ; mov rsi, rbx ; mov edi, ebp ; call qword ptr [rsp + 0x20]
read: ebp r12 r13 r14 rbx rsp 
write: edi r8 rcx rdx rsi rsp 
--------------------------------------------------------------------------------
000b0910: RLP; cmp eax, -2 ; mov r15d, eax ; jne 0xb0927
read: eax rflags 
write: r15d rflags 
--------------------------------------------------------------------------------
000b0948: RLP; test eax, eax ; je 0xb08ec
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b09c0: RLP; test eax, eax ; jns 0xb0979
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b0a38: RLP; test eax, eax ; jne 0xb0a9c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b0b9a: RLP; mov r8, r14 ; mov rcx, r13 ; mov rdx, r12 ; mov rsi, rbx ; mov rdi, rbp ; call qword ptr [rsp + 0x20]
read: r12 r13 r14 rbp rbx rsp 
write: r8 rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000b0bb1: RLP; cmp eax, -2 ; mov r15d, eax ; jne 0xb0bc8
read: eax rflags 
write: r15d rflags 
--------------------------------------------------------------------------------
000b0be9: RLP; test eax, eax ; je 0xb0b8c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b0c61: RLP; test eax, eax ; jns 0xb0c16
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b0cd8: RLP; test eax, eax ; jne 0xb0d3c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b0db0: RLP; test rax, rax ; je 0xb0db8
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b0f68: RLP; mov edx, 0xffffffff ; cmp rax, rdx ; cmova rax, rdx ; mov dword ptr [r12 + 0x10], eax ; mov rax, qword ptr [rsp + 8] ; cmp rbx, rax ; je 0xb0f2b
read: eax rax rbx rdx rflags 
write: edx rax rflags 
--------------------------------------------------------------------------------
000b0fab: RLP; lea r15, [rax + 1] ; jmp 0xb0d9f
read: 
write: r15 
--------------------------------------------------------------------------------
000b0fca: RLP; mov edx, 0xffffffff ; cmp rax, rdx ; cmova rax, rdx ; mov dword ptr [r12 + 0x10], eax ; mov rax, qword ptr [rsp + 8] ; cmp rbx, rax ; jne 0xb0f83
read: eax rax rbx rdx rflags 
write: edx rax rflags 
--------------------------------------------------------------------------------
000b1043: RLP; lea r15, [rax + 1] ; jmp 0xb0e19
read: 
write: r15 
--------------------------------------------------------------------------------
000b10cb: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rbp + 0x88] ; mov qword ptr [rdx + 8], r8 ; add dword ptr [rdx + 4], 1 ; mov rax, qword ptr [rip + 0x2b7d7c] ; add rax, qword ptr fs:[0] ; lea rbx, [r12 + r14 - 1] ; mov r13d, r14d ; mov qword ptr [rsp + 8], rax ; nop word ptr [rax + rax] ; mov byte ptr [rbx], 0xff ; mov rdx, rbp ; mov esi, r13d ; mov rdi, r12 ; call 0x76abc
read: r12 r13d r14d r8 rax rbp rip rsp 
write: esi r13d rax rbx rdi rdx rflags rsp 
--------------------------------------------------------------------------------
000b1119: RLP; test rax, rax ; je 0xb1260
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b1182: RLP; test eax, eax ; mov esi, eax ; je 0xb1104
read: eax rflags 
write: esi rflags 
--------------------------------------------------------------------------------
000b11d1: RLP; add rsp, 0x80 ; cmp esi, -1 ; je 0xb12cb
read: esi rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000b1230: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x2b7c26] ; mov qword ptr [r15], 0 ; mov dword ptr fs:[rax], 0x22 ; mov eax, 0x22 ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: eax r12 r13 r14 r15 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000b12a8: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x2b7bae] ; mov qword ptr [r15], 0 ; mov dword ptr fs:[rax], 2 ; mov eax, 2 ; jmp 0xb1251
read: rsp 
write: eax rax rflags rsp 
--------------------------------------------------------------------------------
000b1312: RLP; test eax, eax ; jne 0xb14ae
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b1354: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rip + 0x2b942a] ; test rdx, rdx ; je 0xb14bf
read: rdx rflags rsp 
write: rdx rflags rsp 
--------------------------------------------------------------------------------
000b1392: RLP; test eax, eax ; jne 0xb149c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b13c7: RLP; cmp eax, 0x22 ; jne 0xb1424
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b13f4: RLP; test rax, rax ; jne 0xb137c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b140f: RLP; mov rax, qword ptr [rsp + 8] ; mov dword ptr fs:[r13], r15d ; jmp 0xb137c
read: r15d 
write: rax 
--------------------------------------------------------------------------------
000b1475: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x2b79e1] ; mov dword ptr fs:[rax], edx ; mov rax, qword ptr [rsp + 0x18] ; add rsp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: edx rsp 
write: r12 r13 r14 r15 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000b14d8: RLP; mov qword ptr [rip + 0x2b92ad], rax ; mov rdx, rax ; jmp 0xb136b
read: rax 
write: rdx 
--------------------------------------------------------------------------------
000b1518: RLP; lea rdx, [rax + 0x1e] ; lea rsi, [rbp - 0x40] ; lea r8, [rbp - 0x48] ; mov rcx, rax ; mov edi, r12d ; and rdx, 0xfffffffffffffff0 ; sub rsp, rdx ; lea rdx, [rsp + 0x27] ; and rdx, 0xfffffffffffffff0 ; call 0xb207c
read: r12d rax rdx rip rsp 
write: edi r8 rcx rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000b1543: RLP; test eax, eax ; jne 0xb159c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b158e: RLP; sar eax, 0x1f ; lea rsp, [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
read: eax rsp 
write: eax r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000b1649: RLP; add rsp, 0x20 ; sar eax, 0x1f ; pop rbx ; ret
read: eax rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
000b16bf: RLP; add rsp, 0x20 ; sar eax, 0x1f ; pop rbx ; ret
read: eax rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
000b1730: RLP; add rsp, 0x80 ; lea r8, [rip + 0x2ba65e] ; lea rdx, [rip + 0x2b904f] ; lea rsi, [rip + 0x2ba670] ; lea rdi, [rip + 0x579] ; xor r9d, r9d ; mov ecx, 0x400 ; call 0x10522c
read: r9d rip rsp 
write: ecx r8 r9d rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000b1764: RLP; mov rdx, rax ; mov rax, qword ptr [rip + 0x2b76f6] ; mov esi, dword ptr fs:[rax] ; cmp dword ptr [rip + 0x2bcff8], 0 ; je 0xb1785
read: rax rflags 
write: esi rax rdx rflags 
--------------------------------------------------------------------------------
000b17a4: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x2b76b2] ; mov dword ptr fs:[rax], esi ; mov rax, rdx ; add rsp, 8 ; ret
read: esi rdx rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000b1819: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rip + 0x2b8f75] ; mov rcx, qword ptr [rip + 0x2ba5fe] ; test rdx, rdx ; je 0xb192c
read: rdx rflags rsp 
write: rcx rdx rflags rsp 
--------------------------------------------------------------------------------
000b1867: RLP; cmp eax, 0x22 ; jne 0xb191c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b1898: RLP; test rax, rax ; jne 0xb1844
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b18a9: RLP; mov rax, qword ptr [rip + 0x2b75b4] ; mov qword ptr [rip + 0x2b8ee1], 0 ; mov dword ptr fs:[rax], 0xc ; mov qword ptr [rsp + 8], 0 ; cmp dword ptr [rip + 0x2bce9e], 0 ; je 0xb18df
read: rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000b18fe: RLP; add rsp, 0x80 ; mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rsp 
write: r12 r13 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000b1945: RLP; test rax, rax ; mov qword ptr [rip + 0x2b8e4d], rax ; je 0xb18c2
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b19b8: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rip + 0x2b8dde] ; mov rcx, qword ptr [rip + 0x2ba49f] ; test rdx, rdx ; je 0xb1acc
read: rdx rflags rsp 
write: rcx rdx rflags rsp 
--------------------------------------------------------------------------------
000b1a06: RLP; cmp eax, 0x22 ; jne 0xb1abc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b1a37: RLP; test rax, rax ; jne 0xb19e4
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b1a48: RLP; mov rax, qword ptr [rip + 0x2b7415] ; mov qword ptr [rip + 0x2b8d4a], 0 ; mov dword ptr fs:[rax], 0xc ; mov qword ptr [rsp + 8], 0 ; cmp dword ptr [rip + 0x2bccff], 0 ; je 0xb1a7e
read: rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000b1a9d: RLP; add rsp, 0x80 ; mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rsp 
write: r12 r13 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000b1ae5: RLP; test rax, rax ; mov qword ptr [rip + 0x2b8cb5], rax ; je 0xb1a61
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b1b50: RLP; add rsp, 0x80 ; lea r8, [rip + 0x2ba32e] ; lea rcx, [rip + 0x2ba31f] ; lea rdx, [rip + 0x2ba328] ; lea rsi, [rip + 0x54589] ; lea rdi, [rip + 0x84682] ; mov dword ptr [rsp + 8], 0 ; mov qword ptr [rsp], 0 ; xor r9d, r9d ; call 0x1053dc
read: r9d rip rsp 
write: r8 r9d rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000b1b96: RLP; mov rax, qword ptr [rip + 0x2b72c7] ; mov edx, dword ptr fs:[rax] ; cmp dword ptr [rip + 0x2bcbc9], 0 ; je 0xb1bb4
read: rflags 
write: edx rax rflags 
--------------------------------------------------------------------------------
000b1bd3: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x2b7283] ; mov dword ptr fs:[rax], edx ; add rsp, 0x18 ; ret
read: edx rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000b1c3e: RLP; add rsp, 0x80 ; lea r8, [rip + 0x2ba240] ; lea rcx, [rip + 0x2ba231] ; lea rdx, [rip + 0x2ba23a] ; lea rsi, [rip + 0x5449b] ; lea rdi, [rip + 0x8459d] ; xor r9d, r9d ; call 0x10550c
read: r9d rip rsp 
write: r8 r9d rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000b1c74: RLP; mov rax, qword ptr [rip + 0x2b71e9] ; mov edx, dword ptr fs:[rax] ; cmp dword ptr [rip + 0x2bcaeb], 0 ; je 0xb1c92
read: rflags 
write: edx rax rflags 
--------------------------------------------------------------------------------
000b1cb1: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x2b71a5] ; mov dword ptr fs:[rax], edx ; add rsp, 8 ; ret
read: edx rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000b1d1a: RLP; add rsp, 0x80 ; lea r8, [rip + 0x2ba15c] ; mov qword ptr [rsp + 0x20], rdx ; mov qword ptr [rsp + 0x10], r9 ; lea rcx, [rip + 0x2ba15b] ; lea r9, [rip + 0x2ba14c] ; lea rdx, [rip + 0x543b5] ; lea rsi, [rip + 0x844ae] ; lea rdi, [rip + 0x844b9] ; mov qword ptr [rsp + 0x30], 0 ; mov qword ptr [rsp + 0x28], rbx ; mov qword ptr [rsp + 0x18], r10 ; mov dword ptr [rsp + 8], 0 ; mov qword ptr [rsp], 0 ; call 0x1055fc
read: r10 r9 rbx rdx rip rsp 
write: r8 r9 rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000b1d81: RLP; mov edx, eax ; mov rax, qword ptr [rip + 0x2b70da] ; mov esi, dword ptr fs:[rax] ; cmp dword ptr [rip + 0x2bc9dc], 0 ; je 0xb1da1
read: eax rflags 
write: edx esi rax rflags 
--------------------------------------------------------------------------------
000b1dc0: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x2b7096] ; mov dword ptr fs:[rax], esi ; add rsp, 0x40 ; mov eax, edx ; pop rbx ; ret
read: edx esi rsp 
write: eax rax rbx rflags rsp 
--------------------------------------------------------------------------------
000b1eaa: RLP; mov r8, r14 ; mov rcx, r13 ; mov rdx, r12 ; mov rsi, rbx ; mov rdi, rbp ; call qword ptr [rsp + 0x20]
read: r12 r13 r14 rbp rbx rsp 
write: r8 rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000b1ec1: RLP; cmp eax, -2 ; mov r15d, eax ; jne 0xb1ed8
read: eax rflags 
write: r15d rflags 
--------------------------------------------------------------------------------
000b1ef9: RLP; test eax, eax ; je 0xb1e9c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b1f71: RLP; test eax, eax ; jns 0xb1f26
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b1fe8: RLP; test eax, eax ; jne 0xb204c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b214a: RLP; mov r8, r14 ; mov rcx, r13 ; mov rdx, r12 ; mov rsi, rbx ; mov edi, ebp ; call qword ptr [rsp + 0x20]
read: ebp r12 r13 r14 rbx rsp 
write: edi r8 rcx rdx rsi rsp 
--------------------------------------------------------------------------------
000b2160: RLP; cmp eax, -2 ; mov r15d, eax ; jne 0xb2177
read: eax rflags 
write: r15d rflags 
--------------------------------------------------------------------------------
000b2198: RLP; test eax, eax ; je 0xb213c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b2210: RLP; test eax, eax ; jns 0xb21c9
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b2288: RLP; test eax, eax ; jne 0xb22ec
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b233c: RLP; test rax, rax ; je 0xb2344
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b2403: RLP; mov rdi, qword ptr [rsp + 8] ; mov edx, 0xffffffff ; cmp rax, rdx ; cmova rax, rdx ; cmp rdi, rbx ; mov dword ptr [rbp + 0x10], eax ; je 0xb23c3
read: eax rax rbx rdi rdx rflags 
write: edx rax rdi rflags 
--------------------------------------------------------------------------------
000b2442: RLP; mov edx, 0xffffffff ; cmp rax, rdx ; cmova rax, rdx ; mov dword ptr [rbp + 0x14], eax ; mov rax, qword ptr [rsp + 8] ; cmp rax, rbx ; jne 0xb24f3
read: eax rax rbx rdx rflags 
write: edx rax rflags 
--------------------------------------------------------------------------------
000b2485: RLP; mov edx, 0xffffffff ; cmp rax, rdx ; cmova rax, rdx ; mov dword ptr [rbp + 0x10], eax ; mov rax, qword ptr [rsp + 8] ; cmp rax, rbx ; je 0xb25c1
read: eax rax rbx rdx rflags 
write: edx rax rflags 
--------------------------------------------------------------------------------
000b24d6: RLP; mov edx, 0xffffffff ; cmp rax, rdx ; cmova rax, rdx ; mov dword ptr [rbp + 0x14], eax ; mov rax, qword ptr [rsp + 8] ; cmp rax, rbx ; je 0xb25cd
read: eax rax rbx rdx rflags 
write: edx rax rflags 
--------------------------------------------------------------------------------
000b264b: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rbp + 0x88] ; mov qword ptr [rdx + 8], r8 ; add dword ptr [rdx + 4], 1 ; mov rax, qword ptr [rip + 0x2b67fc] ; add rax, qword ptr fs:[0] ; lea rbx, [r12 + r14 - 1] ; mov r13d, r14d ; mov qword ptr [rsp + 8], rax ; nop word ptr [rax + rax] ; mov byte ptr [rbx], 0xff ; mov rdx, rbp ; mov esi, r13d ; mov rdi, r12 ; call 0x76abc
read: r12 r13d r14d r8 rax rbp rip rsp 
write: esi r13d rax rbx rdi rdx rflags rsp 
--------------------------------------------------------------------------------
000b2699: RLP; test rax, rax ; je 0xb2764
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b2702: RLP; test eax, eax ; je 0xb2684
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b274f: RLP; add rsp, 0x80 ; mov rax, qword ptr [rsp] ; mov qword ptr [r15], rax ; xor eax, eax ; jmp 0xb27cd
read: eax rax rsp 
write: eax rax rflags rsp 
--------------------------------------------------------------------------------
000b27ac: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x2b66aa] ; mov qword ptr [r15], 0 ; mov dword ptr fs:[rax], 0x22 ; mov eax, 0x22 ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: eax r12 r13 r14 r15 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000b2822: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x2b6634] ; mov qword ptr [r15], 0 ; mov dword ptr fs:[rax], 2 ; mov eax, 2 ; jmp 0xb27cd
read: rsp 
write: eax rax rflags rsp 
--------------------------------------------------------------------------------
000b292f: RLP; mov ecx, 0x3d ; mov r8d, eax ; xor r10d, r10d ; xor edx, edx ; mov rsi, qword ptr [rsp + 8] ; or rdi, 0xffffffffffffffff ; mov eax, ecx ; syscall ; cmp rax, -0x1000 ; mov rbx, rax ; ja 0xb2968
read: eax ecx edx r10d rax rdi rflags 
write: eax ecx edx r10d r8d rbx rdi rflags rsi 
--------------------------------------------------------------------------------
000b2960: RLP; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
read: ebx rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
000b29d0: RLP; mov ecx, 0x3d ; mov r8d, eax ; xor r10d, r10d ; movsxd rdx, dword ptr [rsp + 0xc] ; mov rsi, qword ptr [rsp] ; mov eax, ecx ; movsxd rdi, dword ptr [rsp + 8] ; syscall ; cmp rax, -0x1000 ; mov rbx, rax ; ja 0xb2a0c
read: eax ecx r10d rax rflags 
write: eax ecx r10d r8d rbx rdi rdx rflags rsi 
--------------------------------------------------------------------------------
000b2a04: RLP; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
read: ebx rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
000b2a4a: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000b2ae3: RLP; mov ecx, dword ptr [rsp + 0x1c] ; mov r9d, eax ; xor r8d, r8d ; mov rdx, qword ptr [rsp + 0x10] ; mov esi, dword ptr [rsp + 0x18] ; mov eax, 0xf7 ; mov edi, dword ptr [rsp + 0xc] ; movsxd r10, ecx ; syscall ; cmp rax, -0x1000 ; ja 0xb2b25
read: eax ecx r8d rax rflags 
write: eax ecx edi esi r10 r8d r9d rdx rflags 
--------------------------------------------------------------------------------
000b2b1c: RLP; mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x28 ; ret
read: rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
000b2bcd: RLP; test eax, eax ; je 0xb2be4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b2c1f: RLP; test eax, eax ; js 0xb2c94
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b2c45: RLP; mov rdi, rsp ; mov rsi, rsp ; call 0xb2dac
read: rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
000b2c54: RLP; mov ebx, eax ; test ebx, ebx ; je 0xb2c7c
read: eax ebx rflags 
write: ebx rflags 
--------------------------------------------------------------------------------
000b2cb2: RLP; mov dword ptr fs:[rbx], r13d ; jmp 0xb2bd1
read: r13d 
write: 
--------------------------------------------------------------------------------
000b2ccb: RLP; mov rbp, qword ptr [rip + 0x2b6192] ; xor edx, edx ; mov rsi, r12 ; mov edi, 2 ; mov ebx, eax ; mov r13d, dword ptr fs:[rbp] ; call 0x361ac
read: eax edx r12 rip rsp 
write: ebx edi edx r13d rbp rflags rsi rsp 
--------------------------------------------------------------------------------
000b2cec: RLP; mov dword ptr fs:[rbp], r13d ; jmp 0xb2c56
read: r13d 
write: 
--------------------------------------------------------------------------------
000b2d6a: RLP; mov qword ptr [rsp], rax ; mov eax, 0x22 ; syscall ; mov rdi, qword ptr [rsp] ; mov rdx, rax ; call 0xf081c
read: rax rip rsp 
write: eax rdi rdx rsp 
--------------------------------------------------------------------------------
000b2d85: RLP; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xb2d95
read: rax rdx rflags rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000b2dda: RLP; mov qword ptr [rsp], rax ; mov eax, 0x23 ; syscall ; mov rdi, qword ptr [rsp] ; mov rdx, rax ; call 0xf081c
read: rax rip rsp 
write: eax rdi rdx rsp 
--------------------------------------------------------------------------------
000b2df5: RLP; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xb2e05
read: rax rdx rflags rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000b2e72: RLP; sub rsp, 0x20 ; lea rax, [rsp + 0xf] ; and rax, 0xfffffffffffffff0 ; mov qword ptr [rax], rbx ; mov rbx, qword ptr [rbx] ; mov r12, rax ; mov qword ptr [rax + 8], r13 ; test rbx, rbx ; jne 0xb2e5c
read: r13 rax rbx rflags rsp 
write: r12 rax rbx rflags rsp 
--------------------------------------------------------------------------------
000b2e9a: RLP; mov r9d, dword ptr fs:[0x2d0] ; mov r8d, dword ptr fs:[0x2d4] ; mov eax, r8d ; neg eax ; mov dword ptr fs:[0x2d4], eax ; mov r10, qword ptr fs:[0x10] ; xor edx, edx ; add r10, 0x2d0 ; xor esi, esi ; mov edi, 0x1200011 ; mov eax, 0x38 ; syscall ; cmp rax, -0x1000 ; ja 0xb3046
read: eax edx esi r10 r8d rax rflags 
write: eax edi edx esi r10 r8d r9d rflags 
--------------------------------------------------------------------------------
000b2f63: RLP; mov rbx, rax ; jmp 0xb2fa3
read: rax 
write: rbx 
--------------------------------------------------------------------------------
000b2f78: RLP; mov rdx, qword ptr [rax + 0x88] ; mov rdi, rbx ; mov dword ptr [rdx], 0 ; mov dword ptr [rdx + 4], 0 ; mov qword ptr [rdx + 8], 0 ; call 0x7a98c
read: rbx rip rsp 
write: rdi rdx rsp 
--------------------------------------------------------------------------------
000b2fa0: RLP; mov rbx, rax ; call 0x7a97c
read: rax rip rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
000b2fac: RLP; cmp rbx, rax ; jne 0xb2f6c
read: rax rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
000b2fba: RLP; test r12, r12 ; mov qword ptr [r14 + 0x918], 0 ; mov qword ptr [r14 + 0x908], 0 ; mov qword ptr [r14 + 0x910], 0 ; mov qword ptr [r14 + 0x920], 0 ; mov qword ptr [r14 + 0x928], 0 ; mov dword ptr [r14 + 0x918], 1 ; je 0xb302c
read: r12 rflags 
write: rflags 
--------------------------------------------------------------------------------
000b3017: RLP; mov rax, qword ptr [r12] ; mov r12, qword ptr [r12 + 8] ; mov dword ptr [rax + 0x28], 1 ; test r12, r12 ; jne 0xb3004
read: r12 rflags 
write: r12 rax rflags 
--------------------------------------------------------------------------------
000b307f: RLP; test r12, r12 ; je 0xb3036
read: r12 rflags 
write: rflags 
--------------------------------------------------------------------------------
000b309f: RLP; mov rcx, qword ptr [r12] ; lock dec dword ptr [rcx + 0x28] ; sete al ; test al, al ; je 0xb30c6
read: al rflags 
write: al rcx rflags 
--------------------------------------------------------------------------------
000b3106: RLP; jmp 0xb2f5a
read: 
write: 
--------------------------------------------------------------------------------
000b327c: RLP; mov rdx, rbp ; mov rsi, rbx ; mov rdi, rsp ; call 0xb31fc
read: rbp rbx rip rsp 
write: rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000b328e: RLP; mov rbx, qword ptr [rip + 0x2b5bcf] ; lea rdx, [rsp + 0x20] ; lea rsi, [rip + 0x82fc2] ; mov edi, 1 ; mov ebp, dword ptr fs:[rbx] ; call 0xd639c
read: rip rsp 
write: ebp edi rbx rdx rsi rsp 
--------------------------------------------------------------------------------
000b32b2: RLP; test eax, eax ; je 0xb32c2
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b3327: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000b33fe: RLP; test rax, rax ; je 0xb34cc
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b3450: RLP; cmp r13, r14 ; je 0xb3469
read: r13 r14 rflags 
write: rflags 
--------------------------------------------------------------------------------
000b3465: RLP; mov eax, dword ptr [rsp + 8] ; add rsp, 0x2068 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000b34a4: RLP; test rax, rax ; mov r13, rax ; mov rdx, qword ptr [rsp + 8] ; je 0xb34d8
read: rax rflags 
write: r13 rdx rflags 
--------------------------------------------------------------------------------
000b34c4: RLP; mov rdx, r15 ; jmp 0xb33ac
read: r15 
write: rdx 
--------------------------------------------------------------------------------
000b34d8: RLP; mov eax, 0xffffffff ; jmp 0xb3469
read: 
write: eax 
--------------------------------------------------------------------------------
000b35be: RLP; test rax, rax ; je 0xb364e
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b3609: RLP; cmp r13, r14 ; je 0xb3622
read: r13 r14 rflags 
write: rflags 
--------------------------------------------------------------------------------
000b361e: RLP; mov eax, dword ptr [rsp + 8] ; add rsp, 0x2068 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000b364c: RLP; jmp 0xb3622
read: 
write: 
--------------------------------------------------------------------------------
000b365a: RLP; mov eax, 0xffffffff ; jmp 0xb3622
read: 
write: eax 
--------------------------------------------------------------------------------
000b3674: RLP; test rax, rax ; mov r13, rax ; mov rdx, qword ptr [rsp + 8] ; je 0xb365a
read: rax rflags 
write: r13 rdx rflags 
--------------------------------------------------------------------------------
000b3694: RLP; mov rdx, r15 ; jmp 0xb356c
read: r15 
write: rdx 
--------------------------------------------------------------------------------
000b36b7: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000b378e: RLP; test rax, rax ; je 0xb3802
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b37c7: RLP; cmp r13, r14 ; je 0xb37e0
read: r13 r14 rflags 
write: rflags 
--------------------------------------------------------------------------------
000b37dc: RLP; mov eax, dword ptr [rsp + 8] ; add rsp, 0x2068 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000b3800: RLP; jmp 0xb37e0
read: 
write: 
--------------------------------------------------------------------------------
000b380e: RLP; mov eax, 0xffffffff ; jmp 0xb37e0
read: 
write: eax 
--------------------------------------------------------------------------------
000b382c: RLP; test rax, rax ; mov r13, rax ; mov rdx, qword ptr [rsp + 8] ; je 0xb380e
read: rax rflags 
write: r13 rdx rflags 
--------------------------------------------------------------------------------
000b384c: RLP; mov rdx, r15 ; jmp 0xb373c
read: r15 
write: rdx 
--------------------------------------------------------------------------------
000b388d: RLP; test rax, rax ; je 0xb39a4
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b38a8: RLP; mov rax, qword ptr [rip + 0x2b55b5] ; cmp dword ptr fs:[rax], 8 ; je 0xb38dc
read: rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000b398f: RLP; mov rdi, r13 ; call 0x1f46c
read: r13 rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000b399b: RLP; jmp 0xb38b5
read: 
write: 
--------------------------------------------------------------------------------
000b39b4: RLP; test rax, rax ; mov r14, rax ; je 0xb3c3d
read: rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
000b39d2: RLP; mov rcx, rax ; mov rdi, r15 ; mov qword ptr [rbp - 0x38], rcx ; call 0x856dc
read: r15 rax rcx rip rsp 
write: rcx rdi rsp 
--------------------------------------------------------------------------------
000b39e5: RLP; mov rcx, qword ptr [rbp - 0x38] ; lea r8, [rax + 1] ; lea rdx, [r8 + rcx] ; lea rax, [rdx + r13] ; cmp rax, 0x1000 ; mov qword ptr [rbp - 0x58], rax ; ja 0xb3ccf
read: rax rflags 
write: r8 rax rcx rdx rflags 
--------------------------------------------------------------------------------
000b3a42: RLP; lea rcx, [rax - 1] ; mov qword ptr [rbp - 0x40], rax ; mov byte ptr [rax - 1], 0x2f ; lea rax, [rbx - 0x10] ; mov byte ptr [rbp - 0x59], 0 ; mov qword ptr [rbp - 0x78], 0 ; mov qword ptr [rbp - 0x50], rcx ; mov qword ptr [rbp - 0x48], 0 ; mov qword ptr [rbp - 0x68], rax ; mov esi, 0x3a ; mov rdi, r14 ; call 0x9045c
read: r14 rax rcx rip rsp 
write: esi rax rcx rdi rsp 
--------------------------------------------------------------------------------
000b3a7f: RLP; cmp r14, rax ; mov r13, rax ; mov r15, qword ptr [rbp - 0x40] ; je 0xb3aa7
read: r14 rax rflags 
write: r13 r15 rflags 
--------------------------------------------------------------------------------
000b3aa4: RLP; mov r15, rax ; mov rdx, r12 ; mov rsi, rbx ; mov rdi, r15 ; call 0xb31fc
read: r12 r15 rax rbx rip rsp 
write: r15 rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000b3ab9: RLP; mov rax, qword ptr [rip + 0x2b53a4] ; mov eax, dword ptr fs:[rax] ; cmp eax, 8 ; mov dword ptr [rbp - 0x38], eax ; mov edx, eax ; je 0xb3b4c
read: eax rflags 
write: eax edx rax rflags 
--------------------------------------------------------------------------------
000b3b1b: RLP; mov rdi, qword ptr [rbp - 0x70] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000b3b28: RLP; jmp 0xb38b5
read: 
write: 
--------------------------------------------------------------------------------
000b3b68: RLP; mov rax, qword ptr [rip + 0x2b52f5] ; mov edx, dword ptr fs:[rax] ; jmp 0xb3acd
read: 
write: edx rax 
--------------------------------------------------------------------------------
000b3c4c: RLP; mov rcx, rax ; lea r13, [rax + 2] ; jmp 0xb39d5
read: rax 
write: r13 rcx 
--------------------------------------------------------------------------------
000b3c7b: RLP; mov r8, qword ptr [rbp - 0x40] ; mov rcx, qword ptr [rbp - 0x38] ; jmp 0xb3a2e
read: 
write: r8 rcx 
--------------------------------------------------------------------------------
000b3ca1: RLP; test eax, eax ; mov rdx, qword ptr [rbp - 0x38] ; jne 0xb3bb8
read: eax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
000b3cb9: RLP; test rax, rax ; mov qword ptr [rbp - 0x78], rax ; je 0xb3b0e
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b3ce3: RLP; test eax, eax ; mov rcx, qword ptr [rbp - 0x38] ; mov r8, qword ptr [rbp - 0x40] ; mov rdx, qword ptr [rbp - 0x48] ; jne 0xb3a05
read: eax rflags 
write: r8 rcx rdx rflags 
--------------------------------------------------------------------------------
000b3d10: RLP; test rax, rax ; mov r13, rax ; je 0xb38b5
read: rax rflags 
write: r13 rflags 
--------------------------------------------------------------------------------
000b3d3d: RLP; test eax, eax ; jne 0xb3916
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b3d51: RLP; test rax, rax ; mov r13, rax ; mov rsi, rax ; jne 0xb392d
read: rax rflags 
write: r13 rflags rsi 
--------------------------------------------------------------------------------
000b3e8c: RLP; add rsp, 0x38 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000b3efc: RLP; add rsp, 0x38 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000b3f5c: RLP; cmp ebx, eax ; lea edx, [rbx + rbx] ; je 0xb3f2c
read: eax ebx rflags 
write: edx rflags 
--------------------------------------------------------------------------------
000b403d: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000b4061: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000b419e: RLP; add rsp, 0x38 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000b421e: RLP; add rsp, 0x38 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000b4263: RLP; test eax, eax ; setne al ; test al, al ; je 0xb4284
read: al eax rflags 
write: al rflags 
--------------------------------------------------------------------------------
000b42dc: RLP; mov edx, 0x1000 ; mov rsi, rbx ; mov rdi, r12 ; call 0xd832c
read: r12 rbx rip rsp 
write: edx rdi rsi rsp 
--------------------------------------------------------------------------------
000b42f0: RLP; cmp rax, 0xfff ; ja 0xb43ac
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b4310: RLP; mov rdi, rax ; mov r12, rax ; call 0x856dc
read: rax rip rsp 
write: r12 rdi rsp 
--------------------------------------------------------------------------------
000b431f: RLP; lea rcx, [rax + 0x1f] ; lea rdx, [rax + 1] ; mov rsi, r12 ; and rcx, 0xfffffffffffffff0 ; sub rsp, rcx ; lea rdi, [rsp + 0xf] ; and rdi, 0xfffffffffffffff0 ; call 0x8e3dc
read: r12 rcx rdi rip rsp 
write: rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000b4343: RLP; lea rdx, [rip + 0x81f3c] ; mov rcx, rax ; mov esi, 0x1000 ; mov rdi, rbx ; xor eax, eax ; call 0x5227c
read: eax rax rbx rip rsp 
write: eax esi rcx rdi rdx rflags rsp 
--------------------------------------------------------------------------------
000b4360: RLP; xor esi, esi ; mov rdi, rbx ; call 0xd6b3c
read: esi rbx rip rsp 
write: esi rdi rflags rsp 
--------------------------------------------------------------------------------
000b436e: RLP; cmp eax, 1 ; sbb rax, rax ; and eax, 0x80e8 ; add rax, 0x7d00 ; jmp 0xb4271
read: eax rax rflags 
write: eax rax rflags 
--------------------------------------------------------------------------------
000b4398: RLP; test eax, eax ; setne al ; jmp 0xb4268
read: eax rflags 
write: al rflags 
--------------------------------------------------------------------------------
000b43c3: RLP; test rax, rax ; mov rbx, rax ; je 0xb44d4
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000b4403: RLP; test rax, rax ; je 0xb44cc
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b4464: RLP; test eax, eax ; js 0xb43ec
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b44bc: RLP; mov rax, r12 ; jmp 0xb4271
read: r12 
write: rax 
--------------------------------------------------------------------------------
000b44eb: RLP; test rax, rax ; mov rbx, rax ; je 0xb426c
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000b464e: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000b48b3: RLP; mov rsi, rsp ; mov edi, eax ; call 0xb479c
read: eax rip rsp 
write: edi rsi rsp 
--------------------------------------------------------------------------------
000b48c1: RLP; add rsp, 0x90 ; pop rbx ; pop rbp ; pop r12 ; ret
read: rsp 
write: r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000b48e0: RLP; mov rsi, rsp ; mov edi, eax ; call 0xb465c
read: eax rip rsp 
write: edi rsi rsp 
--------------------------------------------------------------------------------
000b48ee: RLP; add rsp, 0x90 ; pop rbx ; pop rbp ; pop r12 ; ret
read: rsp 
write: r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000b490c: RLP; mov rdx, rbx ; mov rsi, rsp ; mov ecx, 0xffffffff ; mov edi, eax ; call 0xb44fc
read: eax rbx rip rsp 
write: ecx edi rdx rsi rsp 
--------------------------------------------------------------------------------
000b4922: RLP; add rsp, 0x90 ; pop rbx ; pop rbp ; pop r12 ; ret
read: rsp 
write: r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000b4968: RLP; mov rsi, rsp ; mov edi, eax ; call 0xb484c
read: eax rip rsp 
write: edi rsi rsp 
--------------------------------------------------------------------------------
000b4976: RLP; add rsp, 0x90 ; pop rbx ; pop rbp ; pop r12 ; ret
read: rsp 
write: r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000b49a4: RLP; test eax, eax ; js 0xb4a4a
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b4a0f: RLP; mov edx, eax ; mov rax, -1 ; test edx, edx ; cmovns rax, qword ptr [rsp + 8] ; jmp 0xb48c1
read: eax edx rax rflags 
write: edx rax rflags 
--------------------------------------------------------------------------------
000b4a7f: RLP; mov edx, eax ; mov rax, -1 ; test edx, edx ; cmovns rax, qword ptr [rsp] ; jmp 0xb48c1
read: eax edx rax rflags 
write: edx rax rflags 
--------------------------------------------------------------------------------
000b4abb: RLP; mov edx, eax ; mov rax, qword ptr [rsp + 0x50] ; test edx, edx ; jns 0xb48c1
read: eax edx rflags 
write: edx rax rflags 
--------------------------------------------------------------------------------
000b4b42: RLP; test rax, rax ; mov rbx, rax ; je 0xb4bf4
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000b4b5a: RLP; mov r12, rax ; mov rdi, r14 ; call 0x856dc
read: r14 rax rip rsp 
write: r12 rdi rsp 
--------------------------------------------------------------------------------
000b4b69: RLP; lea rcx, [r12 + rax + 0x1a] ; mov rdx, r12 ; mov rsi, rbx ; mov r15, rax ; and rcx, 0xfffffffffffffff0 ; sub rsp, rcx ; mov rdi, rsp ; call 0x892cc
read: r12 rax rbx rcx rip rsp 
write: r15 rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000b4b8a: RLP; mov edx, 0x5f36 ; movabs rcx, 0x565f5849534f502f ; lea rdi, [rax + 0xa] ; mov word ptr [rax + 8], dx ; lea rdx, [r15 + 1] ; mov rsi, r14 ; mov qword ptr [rax], rcx ; call 0x8e3dc
read: dx r14 rcx rip rsp 
write: edx rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000b4bb4: RLP; lea rdx, [rbp - 0xc0] ; mov rsi, rsp ; mov edi, 1 ; call 0xd639c
read: rip rsp 
write: edi rdx rsi rsp 
--------------------------------------------------------------------------------
000b4bcc: RLP; mov rsi, qword ptr [rip + 0x2b4291] ; cdqe ; sar rax, 0x3f ; or rax, 1 ; mov dword ptr fs:[rsi], r13d ; lea rsp, [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: eax r13d rax rsp 
write: r12 r13 r14 r15 rax rbp rbx rflags rsi rsp 
--------------------------------------------------------------------------------
000b4c64: RLP; cmp eax, -1 ; mov r12d, eax ; jne 0xb4c81
read: eax rflags 
write: r12d rflags 
--------------------------------------------------------------------------------
000b4c95: RLP; movsxd rdx, eax ; cmp rdx, -1 ; je 0xb4c74
read: eax rdx rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
000b4cc8: RLP; mov rdx, qword ptr [rsp + 8] ; cmp rdx, rbp ; je 0xb4ce4
read: rbp rdx rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
000b4d67: RLP; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
read: rsp 
write: r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000b4d87: RLP; mov edx, eax ; mov eax, 0x20000 ; test edx, edx ; jne 0xb4d4c
read: eax edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
000b4dc2: RLP; test eax, eax ; jne 0xb4dd4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b4ded: RLP; cdqe ; jmp 0xb4d4c
read: eax 
write: rax 
--------------------------------------------------------------------------------
000b4e16: RLP; jmp 0xb4d4c
read: 
write: 
--------------------------------------------------------------------------------
000b4e3d: RLP; jmp 0xb4d4c
read: 
write: 
--------------------------------------------------------------------------------
000b4f60: RLP; jmp 0xb4d4c
read: 
write: 
--------------------------------------------------------------------------------
000b5059: RLP; jmp 0xb4d4c
read: 
write: 
--------------------------------------------------------------------------------
000b50bf: RLP; mov rdx, rax ; mov eax, 6 ; cmp rdx, 6 ; jle 0xb4d4c
read: rax rdx rflags 
write: eax rdx rflags 
--------------------------------------------------------------------------------
000b50da: RLP; jmp 0xb4d4c
read: 
write: 
--------------------------------------------------------------------------------
000b514e: RLP; cdqe ; jmp 0xb4d4c
read: eax 
write: rax 
--------------------------------------------------------------------------------
000b5170: RLP; cdqe ; jmp 0xb4d4c
read: eax 
write: rax 
--------------------------------------------------------------------------------
000b51a2: RLP; jmp 0xb4d4c
read: 
write: 
--------------------------------------------------------------------------------
000b51c9: RLP; jmp 0xb4d4c
read: 
write: 
--------------------------------------------------------------------------------
000b51e2: RLP; jmp 0xb4d4c
read: 
write: 
--------------------------------------------------------------------------------
000b52f0: RLP; cdqe ; jmp 0xb4d4c
read: eax 
write: rax 
--------------------------------------------------------------------------------
000b5305: RLP; cdqe ; jmp 0xb4d4c
read: eax 
write: rax 
--------------------------------------------------------------------------------
000b5319: RLP; nop dword ptr [rax] ; jmp 0xb4d4c
read: 
write: 
--------------------------------------------------------------------------------
000b5335: RLP; nop dword ptr [rax] ; jmp 0xb4d4c
read: 
write: 
--------------------------------------------------------------------------------
000b55a2: RLP; mov rsi, rsp ; mov edi, eax ; call 0xb479c
read: eax rip rsp 
write: edi rsi rsp 
--------------------------------------------------------------------------------
000b55b0: RLP; add rsp, 0x90 ; pop rbx ; pop rbp ; pop r12 ; ret
read: rsp 
write: r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000b55c8: RLP; mov rsi, rsp ; mov edi, eax ; call 0xb465c
read: eax rip rsp 
write: edi rsi rsp 
--------------------------------------------------------------------------------
000b55d6: RLP; add rsp, 0x90 ; pop rbx ; pop rbp ; pop r12 ; ret
read: rsp 
write: r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000b55fc: RLP; mov ecx, ebx ; mov rsi, rsp ; xor edx, edx ; mov edi, eax ; call 0xb44fc
read: eax ebx edx rip rsp 
write: ecx edi edx rflags rsi rsp 
--------------------------------------------------------------------------------
000b560e: RLP; add rsp, 0x90 ; pop rbx ; pop rbp ; pop r12 ; ret
read: rsp 
write: r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000b5650: RLP; mov rsi, rsp ; mov edi, eax ; call 0xb484c
read: eax rip rsp 
write: edi rsi rsp 
--------------------------------------------------------------------------------
000b565e: RLP; add rsp, 0x90 ; pop rbx ; pop rbp ; pop r12 ; ret
read: rsp 
write: r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000b5683: RLP; test eax, eax ; js 0xb572a
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b56ee: RLP; mov edx, eax ; mov rax, -1 ; test edx, edx ; cmovns rax, qword ptr [rsp + 8] ; jmp 0xb55b0
read: eax edx rax rflags 
write: edx rax rflags 
--------------------------------------------------------------------------------
000b575e: RLP; mov edx, eax ; mov rax, -1 ; test edx, edx ; cmovns rax, qword ptr [rsp] ; jmp 0xb55b0
read: eax edx rax rflags 
write: edx rax rflags 
--------------------------------------------------------------------------------
000b579a: RLP; mov edx, eax ; mov rax, qword ptr [rsp + 0x40] ; test edx, edx ; jns 0xb55b0
read: eax edx rflags 
write: edx rax rflags 
--------------------------------------------------------------------------------
000b58b3: RLP; cmp rax, 1 ; mov r12, rax ; je 0xb5994
read: rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
000b58f0: RLP; mov byte ptr [rax], 0x2f ; mov rsi, qword ptr [rbx + r14*8] ; lea rdi, [rax + 1] ; mov rdx, rbp ; call 0x8e3dc
read: rbp rip rsp 
write: rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000b5907: RLP; mov rdi, qword ptr [rbx + r14*8] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000b5914: RLP; mov qword ptr [rbx + r14*8], r13 ; add r14, 1 ; cmp r14, qword ptr [rsp] ; je 0xb597c
read: r13 r14 rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
000b592f: RLP; lea rbp, [rax + 1] ; lea rdi, [rbp + r15] ; call 0x1f3cc
read: rip rsp 
write: rbp rdi rsp 
--------------------------------------------------------------------------------
000b5941: RLP; test rax, rax ; mov r13, rax ; jne 0xb58dc
read: rax rflags 
write: r13 rflags 
--------------------------------------------------------------------------------
000b595d: RLP; test r14, r14 ; jne 0xb594c
read: r14 rflags 
write: rflags 
--------------------------------------------------------------------------------
000b59d2: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000b5a34: RLP; cmp qword ptr [rbp], rbx ; mov rdi, qword ptr [rbp + 8] ; ja 0xb5a1c
read: rbx rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
000b5a47: RLP; mov qword ptr [rbp + 8], 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000b5b24: RLP; xor esi, esi ; and r15d, 0x40 ; mov rdi, rbx ; sete sil ; mov qword ptr [rbp - 0x438], rax ; mov qword ptr [rbp - 0x240], 0 ; mov qword ptr [rbp - 0x238], 0x40 ; call 0xb5a5c
read: esi r15d rax rbx rflags rip rsp 
write: esi r15d rdi rflags rsp sil 
--------------------------------------------------------------------------------
000b5b57: RLP; test eax, eax ; je 0xb5e14
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b5b89: RLP; test rax, rax ; mov rbx, rax ; je 0xb6172
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000b5c5e: RLP; test rax, rax ; mov r14, rax ; je 0xb5f7e
read: rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
000b5ca6: RLP; test eax, eax ; jne 0xb5c44
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b5ce6: RLP; test eax, eax ; jne 0xb5c52
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b5d59: RLP; lea rdi, [rax + 1] ; mov r14, rax ; call 0x1f3cc
read: rax rip rsp 
write: r14 rdi rsp 
--------------------------------------------------------------------------------
000b5d69: RLP; test rax, rax ; mov rdi, rax ; mov qword ptr [r15 + r13*8 + 0x10], rax ; je 0xb5fb7
read: rax rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
000b5d8d: RLP; add qword ptr [rbp - 0x428], 1 ; cmp qword ptr [rbp - 0x3f8], 0 ; mov byte ptr [rax], 0 ; je 0xb5c52
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000b5db7: RLP; test rax, rax ; mov r12, rax ; je 0xb5f7e
read: rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
000b5dd3: RLP; mov rdi, qword ptr [rbp - 0x460] ; lea rdx, [rax + 1] ; mov rsi, r14 ; call 0x8e3dc
read: r14 rip rsp 
write: rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000b5dea: RLP; mov rax, qword ptr [r12] ; mov r14, qword ptr [rbp - 0x458] ; mov qword ptr [rbp - 0x360], rax ; movzx edx, byte ptr [r12 + 0x12] ; mov byte ptr [rbp - 0x34e], dl ; jmp 0xb5c6d
read: dl rax 
write: edx r14 rax 
--------------------------------------------------------------------------------
000b5e31: RLP; mov rbx, rax ; mov rax, qword ptr [rbp - 0x438] ; lea rdi, [r13 + rax + 0x212] ; add rdi, rbx ; cmp rdi, 0x1000 ; ja 0xb6231
read: rax rbx rdi rflags 
write: rax rbx rdi rflags 
--------------------------------------------------------------------------------
000b5e95: RLP; mov rsi, qword ptr [rbp - 0x400] ; lea rdi, [rax + 1] ; lea rdx, [rbx + 1] ; mov byte ptr [rax], 0x2f ; call 0x8e3dc
read: rip rsp 
write: rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000b5eb0: RLP; test r12d, 0x200 ; jne 0xb6276
read: r12d rflags 
write: rflags 
--------------------------------------------------------------------------------
000b5ed5: RLP; test eax, eax ; sete al ; mov edx, r12d ; or edx, 0x10 ; test al, al ; cmovne r12d, edx ; test r13d, r13d ; je 0xb6298
read: al eax edx r12d r13d rflags 
write: al edx r12d rflags 
--------------------------------------------------------------------------------
000b5f57: RLP; mov dword ptr fs:[r13], r14d ; mov eax, r12d ; lea rsp, [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: r12d r14d rsp 
write: eax r12 r13 r14 r15 rbp rbx rsp 
--------------------------------------------------------------------------------
000b5fde: RLP; cmp r12, r13 ; jne 0xb5fcc
read: r12 r13 rflags 
write: rflags 
--------------------------------------------------------------------------------
000b6001: RLP; mov r15, r12 ; jmp 0xb5fc4
read: r12 
write: r15 
--------------------------------------------------------------------------------
000b607d: RLP; test rax, rax ; mov r12, rax ; je 0xb5fb7
read: rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
000b60e6: RLP; mov rdi, rbx ; jmp 0xb6096
read: rbx 
write: rdi 
--------------------------------------------------------------------------------
000b60fe: RLP; lea rdi, [rax + 1] ; mov r12, rax ; call 0x1f3cc
read: rax rip rsp 
write: r12 rdi rsp 
--------------------------------------------------------------------------------
000b610e: RLP; test rax, rax ; mov rdi, rax ; mov qword ptr [r15 + r13*8 + 0x10], rax ; je 0xb5fb7
read: rax rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
000b6132: RLP; mov qword ptr [rbp - 0x428], 1 ; mov byte ptr [rax], 0 ; jmp 0xb5f88
read: 
write: 
--------------------------------------------------------------------------------
000b615c: RLP; test rax, rax ; mov rbx, rax ; mov dword ptr [rbp - 0x420], 0xffffffff ; jne 0xb5b9d
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000b6198: RLP; test eax, eax ; je 0xb61eb
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b6206: RLP; test eax, eax ; mov rdx, qword ptr [rbp - 0x468] ; jne 0xb5d19
read: eax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
000b6221: RLP; test rax, rax ; jne 0xb5d40
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b623a: RLP; test eax, eax ; jne 0xb5e53
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b6257: RLP; test rax, rax ; mov r14, rax ; je 0xb626c
read: rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
000b628e: RLP; test eax, eax ; sete al ; jmp 0xb5eda
read: eax rflags 
write: al rflags 
--------------------------------------------------------------------------------
000b62a4: RLP; jmp 0xb5eef
read: 
write: 
--------------------------------------------------------------------------------
000b62ce: RLP; test eax, eax ; jne 0xb5cee
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b62e9: RLP; nop dword ptr [rax] ; jmp 0xb5f57
read: 
write: 
--------------------------------------------------------------------------------
000b6399: RLP; mov edx, r13d ; or dh, 0x20 ; cmp byte ptr [r15 + rax - 1], 0x2f ; cmove r13d, edx ; mov eax, r13d ; and eax, 8 ; mov dword ptr [rbp - 0x1e8], eax ; jne 0xb63c0
read: dh eax edx r13d rflags 
write: dh eax edx r13d rflags 
--------------------------------------------------------------------------------
000b641d: RLP; test rax, rax ; mov rbx, rax ; jne 0xb6724
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000b6475: RLP; test rax, rax ; mov rbx, rax ; je 0xb6c1c
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000b6514: RLP; mov byte ptr [rax], 0 ; cmp byte ptr [rbx + 1], 0 ; lea rax, [rbx + 1] ; mov qword ptr [rbp - 0x1c8], rax ; je 0xb6954
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000b657a: RLP; test al, 5 ; je 0xb69f4
read: al rflags 
write: al rflags 
--------------------------------------------------------------------------------
000b65d8: RLP; test eax, eax ; jne 0xb70cc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b664f: RLP; cmp eax, 3 ; je 0xb6690
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b6688: RLP; test eax, eax ; jne 0xb755f
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b6730: RLP; lea r14, [rax - 1] ; cmp r14, 0x1000 ; ja 0xb7ffb
read: r14 rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
000b679a: RLP; mov esi, r13d ; mov rdi, rbx ; mov qword ptr [rbp - 0x1c0], rax ; call 0xb57fc
read: r13d rax rbx rip rsp 
write: esi rdi rsp 
--------------------------------------------------------------------------------
000b67b0: RLP; test rax, rax ; mov r14, rax ; jne 0xb67dd
read: rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
000b67d4: RLP; test rax, rax ; je 0xb6904
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b67f9: RLP; add rax, 1 ; mov rcx, rax ; mov eax, r13d ; and eax, 0x20 ; mov dword ptr [rbp - 0x1e0], eax ; je 0xb6b9c
read: eax r13d rax rflags 
write: eax rax rcx rflags 
--------------------------------------------------------------------------------
000b6861: RLP; test rax, rax ; mov r14, rax ; je 0xb7ba1
read: rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
000b6886: RLP; mov rsi, qword ptr [rbp - 0x1d0] ; mov rdx, r15 ; mov rdi, rax ; call 0x8e3dc
read: r15 rax rip rsp 
write: rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000b689c: RLP; mov rdx, qword ptr [rbp - 0x1a8] ; mov esi, dword ptr [rbp - 0x1c8] ; mov rcx, r12 ; mov rdi, qword ptr [rbp - 0x1b8] ; call 0xb633c
read: r12 rip rsp 
write: esi rcx rdi rdx rsp 
--------------------------------------------------------------------------------
000b68bc: RLP; cmp eax, 3 ; je 0xb6844
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b68f7: RLP; mov qword ptr [r12], 0 ; jmp 0xb6939
read: 
write: 
--------------------------------------------------------------------------------
000b6933: RLP; mov dword ptr [rbp - 0x1b0], eax ; mov eax, dword ptr [rbp - 0x1b0] ; lea rsp, [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: eax rsp 
write: eax r12 r13 r14 r15 rbp rbx rsp 
--------------------------------------------------------------------------------
000b69a6: RLP; test eax, eax ; jne 0xb6e34
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b6a15: RLP; mov rsi, qword ptr [rbp - 0x1c0] ; mov rdx, rax ; jmp 0xb6a3a
read: rax 
write: rdx rsi 
--------------------------------------------------------------------------------
000b6a8b: RLP; test eax, eax ; jne 0xb6aa4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b6aca: RLP; test eax, eax ; jne 0xb6aa4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b6b19: RLP; test rax, rax ; mov r14, rax ; je 0xb7234
read: rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
000b6b48: RLP; mov qword ptr [r14 + rbx - 0x10], rax ; mov rdi, qword ptr [r12 + 8] ; mov rax, qword ptr [rdi + rbx - 0x10] ; test rax, rax ; je 0xb7239
read: rax rflags 
write: rax rdi rflags 
--------------------------------------------------------------------------------
000b6b76: RLP; mov byte ptr [rax], 0x2f ; mov byte ptr [rax + 1], 0 ; mov rdi, qword ptr [r12 + 8] ; mov qword ptr [rdi + rbx - 8], 0 ; add qword ptr [r12], 1 ; mov dword ptr [r12 + 0x18], r13d ; jmp 0xb6939
read: r13d 
write: rdi rflags 
--------------------------------------------------------------------------------
000b6c43: RLP; mov qword ptr [rbp - 0x1b8], r15 ; mov qword ptr [rbp - 0x1c0], rax ; mov qword ptr [rbp - 0x1c8], 0 ; mov dword ptr [rbp - 0x1d0], 0 ; mov rax, qword ptr [rbp - 0x1b8] ; movzx eax, byte ptr [rax + 1] ; cmp al, 0x2f ; je 0xb75e4
read: al r15 rax rflags 
write: eax rax rflags 
--------------------------------------------------------------------------------
000b6ca8: RLP; test rax, rax ; mov qword ptr [rbp - 0x210], rax ; je 0xb7b66
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b6cda: RLP; mov rbx, rax ; mov rax, qword ptr [rbp - 0x1d8] ; lea rdi, [r14 + rax] ; cmp rdi, 0x1000 ; ja 0xb7eb6
read: rax rdi rflags 
write: rax rbx rdi rflags 
--------------------------------------------------------------------------------
000b6d59: RLP; movzx edx, byte ptr [rbx] ; test dl, dl ; jne 0xb6d89
read: dl rflags 
write: edx rflags 
--------------------------------------------------------------------------------
000b6eba: RLP; test eax, eax ; je 0xb6f4c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b6f21: RLP; jmp 0xb6aa4
read: 
write: 
--------------------------------------------------------------------------------
000b6ff1: RLP; xor edx, edx ; test eax, eax ; jne 0xb700a
read: eax edx rflags 
write: edx rflags 
--------------------------------------------------------------------------------
000b702a: RLP; mov rdx, qword ptr [rbp - 0x1c0] ; lea rsi, [rax + 2] ; mov qword ptr [rbp - 0x1a8], rax ; mov rdi, rdx ; call 0x1f3ac
read: rax rdx rip rsp 
write: rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000b7048: RLP; test rax, rax ; mov rcx, qword ptr [rbp - 0x1a8] ; je 0xb72e3
read: rax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
000b70ba: RLP; mov eax, dword ptr [rbp - 0x1a8] ; jmp 0xb69c0
read: 
write: eax 
--------------------------------------------------------------------------------
000b711a: RLP; test rax, rax ; je 0xb74ae
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b7139: RLP; mov qword ptr [r14], rax ; mov rax, qword ptr [r12 + 8] ; cmp qword ptr [rax + rbx - 0x10], 0 ; je 0xb755f
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000b7177: RLP; jmp 0xb6f5a
read: 
write: 
--------------------------------------------------------------------------------
000b7190: RLP; test rax, rax ; mov qword ptr [r12 + 8], rax ; je 0xb6712
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b7242: RLP; mov qword ptr [r12 + 8], 0 ; mov qword ptr [r12], 0 ; mov dword ptr [rbp - 0x1b0], 1 ; jmp 0xb6939
read: 
write: 
--------------------------------------------------------------------------------
000b72db: RLP; test eax, eax ; je 0xb6f5a
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b72ef: RLP; mov qword ptr [r12], 0 ; mov dword ptr [rbp - 0x1b0], 1 ; jmp 0xb6939
read: 
write: 
--------------------------------------------------------------------------------
000b732b: RLP; mov rbx, rax ; mov rax, qword ptr [rip + 0x2b1b2f] ; mov qword ptr [rbp - 0x218], rax ; mov eax, dword ptr fs:[rax] ; mov dword ptr [rbp - 0x200], eax ; mov rax, qword ptr [rbp - 0x1d8] ; lea rdi, [rbx + rax] ; cmp rdi, 0x1000 ; ja 0xb7f7a
read: eax rax rdi rflags 
write: eax rax rbx rdi rflags 
--------------------------------------------------------------------------------
000b7470: RLP; test eax, eax ; je 0xb7660
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b749d: RLP; test rax, rax ; je 0xb7878
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b74be: RLP; mov dword ptr [rbp - 0x1b0], 1 ; jmp 0xb6939
read: 
write: 
--------------------------------------------------------------------------------
000b74e4: RLP; mov qword ptr [rbp - 0x210], rax ; mov rax, qword ptr [rbp - 0x210] ; mov r14, rax ; sub r14, qword ptr [rbp - 0x1b8] ; test rax, rax ; jne 0xb6cdd
read: r14 rax rflags 
write: r14 rax rflags 
--------------------------------------------------------------------------------
000b7546: RLP; mov qword ptr [r14], rax ; mov rdi, qword ptr [r12 + 8] ; cmp qword ptr [rdi + rbx - 0x10], 0 ; jne 0xb6b82
read: rax rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
000b756f: RLP; mov rdi, r12 ; call 0xb59fc
read: r12 rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000b757b: RLP; mov qword ptr [r12], 0 ; mov dword ptr [rbp - 0x1b0], 1 ; jmp 0xb6939
read: 
write: 
--------------------------------------------------------------------------------
000b75a8: RLP; mov rdi, r12 ; call 0xb59fc
read: r12 rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000b75b4: RLP; mov eax, dword ptr [rbp - 0x1a8] ; mov qword ptr [r12], 0 ; mov dword ptr [rbp - 0x1b0], eax ; jmp 0xb6939
read: eax 
write: eax 
--------------------------------------------------------------------------------
000b75f4: RLP; test rax, rax ; mov qword ptr [rbp - 0x1e8], rax ; je 0xb77e0
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b7641: RLP; mov qword ptr [rbp - 0x1b8], r14 ; mov qword ptr [rbp - 0x1c0], rax ; mov r14d, 1 ; mov dword ptr [rbp - 0x1d0], ebx ; jmp 0xb654b
read: ebx r14 rax 
write: r14d 
--------------------------------------------------------------------------------
000b76b7: RLP; mov rdi, qword ptr [rbp - 0x210] ; mov r14, rax ; test rdi, rdi ; je 0xb79d0
read: rax rdi rflags 
write: r14 rdi rflags 
--------------------------------------------------------------------------------
000b76d3: RLP; mov qword ptr [rbp - 0x1c0], rax ; mov r10d, dword ptr [rbp - 0x1d0] ; test r10d, r10d ; jne 0xb7dc2
read: r10d rax rflags 
write: r10d rflags 
--------------------------------------------------------------------------------
000b775f: RLP; mov rbx, qword ptr [rbp - 0x1c0] ; mov rsi, qword ptr [rbp - 0x210] ; mov rdi, rax ; mov rdx, rbx ; add r14, rbx ; call 0x892cc
read: r14 rax rbx rip rsp 
write: r14 rbx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000b777f: RLP; mov r8d, dword ptr [rbp - 0x208] ; mov byte ptr [rax], 0 ; mov qword ptr [rbp - 0x1c0], r14 ; test r8d, r8d ; jne 0xb806c
read: r14 r8d rflags 
write: r8d rflags 
--------------------------------------------------------------------------------
000b77ee: RLP; add rax, 1 ; mov rsi, rax ; mov eax, 0x14 ; cmove rsi, rax ; mov rax, rsp ; lea rdx, [rsi + 0x1e] ; and rdx, 0xfffffffffffffff0 ; sub rsp, rdx ; lea rcx, [rsp + 0xf] ; mov qword ptr [rbp - 0x1f8], rcx ; and qword ptr [rbp - 0x1f8], 0xfffffffffffffff0 ; sub rax, rsp ; mov rdi, qword ptr [rbp - 0x1f8] ; add qword ptr [rbp - 0x1d8], rax ; xor ebx, ebx
read: ebx rax rcx rdx rflags rsi rsp 
write: eax ebx rax rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000b783c: RLP; test eax, eax ; je 0xb79e0
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b78b0: RLP; mov rdi, qword ptr [rbp - 0x1d8] ; add rdi, qword ptr [rbp - 0x1c0] ; mov r14, rax ; add rdi, rax ; cmp rdi, 0x1000 ; ja 0xb7f15
read: rax rdi rflags 
write: r14 rdi rflags 
--------------------------------------------------------------------------------
000b7919: RLP; mov rcx, qword ptr [rbp - 0x1b8] ; mov rdx, qword ptr [rbp - 0x1c0] ; mov rdi, rax ; lea rsi, [rcx + 1] ; call 0x8e3dc
read: rax rip rsp 
write: rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000b7937: RLP; mov eax, dword ptr [rbp - 0x1d0] ; mov rcx, qword ptr [rbp - 0x1e8] ; test eax, eax ; jne 0xb7ef2
read: eax rflags 
write: eax rcx rflags 
--------------------------------------------------------------------------------
000b79a8: RLP; jmp 0xb731a
read: 
write: 
--------------------------------------------------------------------------------
000b79ee: RLP; mov rbx, rax ; mov rax, qword ptr [rip + 0x2b146c] ; mov qword ptr [rbp - 0x218], rax ; mov eax, dword ptr fs:[rax] ; mov dword ptr [rbp - 0x208], eax ; mov rax, qword ptr [rbp - 0x1d8] ; lea rdi, [rbx + rax] ; cmp rdi, 0x1000 ; ja 0xb7d73
read: eax rax rdi rflags 
write: eax rax rbx rdi rflags 
--------------------------------------------------------------------------------
000b7b26: RLP; test eax, eax ; je 0xb7bdc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b7b55: RLP; test rax, rax ; je 0xb7c21
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b7b7b: RLP; test rax, rax ; mov rbx, rax ; je 0xb7505
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000b7b95: RLP; mov qword ptr [rbp - 0x210], rax ; jmp 0xb74eb
read: rax 
write: 
--------------------------------------------------------------------------------
000b7c3d: RLP; jmp 0xb7896
read: 
write: 
--------------------------------------------------------------------------------
000b7c5b: RLP; lea rdx, [rax + 1] ; mov rax, qword ptr [rbp - 0x1d8] ; lea rdi, [rdx + rax] ; cmp rdi, 0x1000 ; ja 0xb7e34
read: rdi rflags 
write: rax rdi rdx rflags 
--------------------------------------------------------------------------------
000b7cb8: RLP; mov rdi, qword ptr [rbp - 0x200] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000b7cc8: RLP; jmp 0xb7844
read: 
write: 
--------------------------------------------------------------------------------
000b7ce1: RLP; xor edx, edx ; test eax, eax ; jne 0xb7cfc
read: eax edx rflags 
write: edx rflags 
--------------------------------------------------------------------------------
000b7d62: RLP; mov eax, dword ptr [rbp - 0x1a8] ; mov dword ptr [rbp - 0x1b0], eax ; jmp 0xb6939
read: eax 
write: eax 
--------------------------------------------------------------------------------
000b7d7c: RLP; test eax, eax ; jne 0xb7a20
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b7d90: RLP; test rax, rax ; mov qword ptr [rbp - 0x200], rax ; je 0xb7896
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b7db3: RLP; test eax, eax ; jne 0xb7aad
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b7dd2: RLP; jmp 0xb76ea
read: 
write: 
--------------------------------------------------------------------------------
000b7de7: RLP; jmp 0xb79bb
read: 
write: 
--------------------------------------------------------------------------------
000b7df8: RLP; nop dword ptr [rax] ; jmp 0xb762e
read: 
write: 
--------------------------------------------------------------------------------
000b7e44: RLP; test eax, eax ; mov rdx, qword ptr [rbp - 0x1e8] ; jne 0xb7c77
read: eax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
000b7e66: RLP; test rax, rax ; mov qword ptr [rbp - 0x1e8], rax ; je 0xb81aa
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b7e97: RLP; jmp 0xb76a1
read: 
write: 
--------------------------------------------------------------------------------
000b7eac: RLP; mov eax, 3 ; jmp 0xb69c0
read: 
write: eax 
--------------------------------------------------------------------------------
000b7ebf: RLP; test eax, eax ; jne 0xb6cf5
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b7ed3: RLP; test rax, rax ; mov qword ptr [rbp - 0x1e8], rax ; je 0xb7896
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b7f09: RLP; mov rcx, qword ptr [rbp - 0x1d0] ; jmp 0xb794c
read: 
write: rcx 
--------------------------------------------------------------------------------
000b7f1e: RLP; test eax, eax ; jne 0xb78d1
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b7f3a: RLP; test rax, rax ; mov rcx, rax ; je 0xb7f4c
read: rax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
000b7f6f: RLP; mov eax, dword ptr [rbp - 0x1a8] ; jmp 0xb69c0
read: 
write: eax 
--------------------------------------------------------------------------------
000b7f83: RLP; test eax, eax ; jne 0xb735d
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b7f97: RLP; test rax, rax ; mov qword ptr [rbp - 0x1f8], rax ; je 0xb7888
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b7fcd: RLP; mov rcx, qword ptr [rbp - 0x1d8] ; test eax, eax ; mov rsi, rcx ; jne 0xb7401
read: eax rcx rflags 
write: rcx rflags rsi 
--------------------------------------------------------------------------------
000b7ff6: RLP; jmp 0xb6914
read: 
write: 
--------------------------------------------------------------------------------
000b8007: RLP; test eax, eax ; nop dword ptr [rax] ; jne 0xb6741
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b801e: RLP; test rax, rax ; mov qword ptr [rbp - 0x1b8], rax ; je 0xb804c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b8082: RLP; jmp 0xb654b
read: 
write: 
--------------------------------------------------------------------------------
000b8090: RLP; test eax, eax ; jne 0xb770a
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b80ad: RLP; test rax, rax ; mov qword ptr [rbp - 0x1b8], rax ; je 0xb80cc
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b80f7: RLP; jmp 0xb7896
read: 
write: 
--------------------------------------------------------------------------------
000b8108: RLP; nop dword ptr [rax] ; jmp 0xb7888
read: 
write: 
--------------------------------------------------------------------------------
000b8121: RLP; mov dword ptr [rbp - 0x1d0], 0 ; jmp 0xb7896
read: 
write: 
--------------------------------------------------------------------------------
000b8139: RLP; test eax, eax ; jne 0xb64bd
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b8155: RLP; test rax, rax ; mov qword ptr [rbp - 0x1b8], rax ; je 0xb6712
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b8184: RLP; jmp 0xb6bf9
read: 
write: 
--------------------------------------------------------------------------------
000b819f: RLP; mov eax, dword ptr [rbp - 0x1a8] ; jmp 0xb68d9
read: 
write: eax 
--------------------------------------------------------------------------------
000b81ba: RLP; jmp 0xb7896
read: 
write: 
--------------------------------------------------------------------------------
000b81d9: RLP; cmp eax, 1 ; sete al ; movzx eax, al ; ret
read: al eax rflags 
write: al eax rflags 
--------------------------------------------------------------------------------
000b8257: RLP; mov rbx, rax ; jmp 0xb81fc
read: rax 
write: rbx 
--------------------------------------------------------------------------------
000b82d4: RLP; cmp rax, 1 ; sbb eax, eax ; or eax, 1 ; mov dword ptr [rip + 0x2b3be5], eax ; jmp 0xb8266
read: eax rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000b836f: RLP; mov rbx, rax ; jmp 0xb830c
read: rax 
write: rbx 
--------------------------------------------------------------------------------
000b83fc: RLP; cmp rax, 1 ; sbb eax, eax ; or eax, 1 ; mov dword ptr [rip + 0x2b3abd], eax ; jmp 0xb8386
read: eax rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000b850b: RLP; mov r13d, eax ; lea eax, [r13 - 0x21] ; cmp eax, 0x3b ; ja 0xb872a
read: eax rflags 
write: eax r13d rflags 
--------------------------------------------------------------------------------
000b8566: RLP; cmp r15, qword ptr [rbp - 0x2860] ; mov r13d, eax ; jne 0xb874b
read: eax r15 rflags 
write: r13d rflags 
--------------------------------------------------------------------------------
000b8683: RLP; cmp ebx, 0x2d ; je 0xb8a1c
read: ebx rflags 
write: rflags 
--------------------------------------------------------------------------------
000b8757: RLP; cmp eax, r13d ; jne 0xb857c
read: eax r13d rflags 
write: rflags 
--------------------------------------------------------------------------------
000b87c5: RLP; cmp eax, -1 ; je 0xb872a
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b886f: RLP; cmp rax, r13 ; je 0xb883c
read: r13 rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b88d7: RLP; test rax, rax ; mov rbx, rax ; cmove rbx, r13 ; cmp r14d, 0x5b ; je 0xb9174
read: r13 r14d rax rbx rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000b8938: RLP; mov r14d, eax ; sub r12, 4 ; cmp rbx, r15 ; jbe 0xb857c
read: eax r12 r15 rbx rflags 
write: r12 r14d rflags 
--------------------------------------------------------------------------------
000b8979: RLP; cmp r14d, eax ; je 0xb899b
read: eax r14d rflags 
write: rflags 
--------------------------------------------------------------------------------
000b89ce: RLP; test eax, eax ; jne 0xb897e
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b8adf: RLP; cmp eax, -1 ; mov ecx, eax ; je 0xb8b89
read: eax rflags 
write: ecx rflags 
--------------------------------------------------------------------------------
000b8b48: RLP; mov ecx, dword ptr [rbp - 0x2890] ; cmp dword ptr [rbp - 0x2888], ecx ; ja 0xb9b5b
read: ecx rflags 
write: ecx rflags 
--------------------------------------------------------------------------------
000b8b72: RLP; cmp eax, -1 ; mov ecx, dword ptr [rbp - 0x2890] ; je 0xb9264
read: eax rflags 
write: ecx rflags 
--------------------------------------------------------------------------------
000b8cb6: RLP; mov ebx, dword ptr [r14 + 4] ; add r14, 4 ; jmp 0xb8683
read: r14 
write: ebx r14 rflags 
--------------------------------------------------------------------------------
000b8d77: RLP; mov dword ptr [rbp - 0x2858], eax ; jmp 0xb8607
read: eax 
write: 
--------------------------------------------------------------------------------
000b8df3: RLP; mov r8d, dword ptr [rbp - 0x2890] ; mov dword ptr [rbp - 0x2888], eax ; mov ecx, dword ptr [rbp - 0x2898] ; cmp r8d, 0x5b ; mov eax, r8d ; jne 0xb8b1a
read: eax r8d rflags 
write: eax ecx r8d rflags 
--------------------------------------------------------------------------------
000b8e9c: RLP; cmp rax, 1 ; sbb eax, eax ; or eax, 1 ; mov dword ptr [rip + 0x2b301d], eax ; jmp 0xb85ae
read: eax rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000b91ca: RLP; test eax, eax ; je 0xb89d2
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b9253: RLP; test eax, eax ; je 0xb8fe1
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b9297: RLP; test rax, rax ; mov rsi, rax ; mov rcx, qword ptr [rbp - 0x2888] ; je 0xb857c
read: rax rflags 
write: rcx rflags rsi 
--------------------------------------------------------------------------------
000b92bd: RLP; test eax, eax ; mov rcx, qword ptr [rbp - 0x2888] ; jne 0xb998c
read: eax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
000b9359: RLP; test rax, rax ; setne al ; movzx eax, al ; mov dword ptr [rbp - 0x2868], eax ; jmp 0xb8586
read: al eax rax rflags 
write: al eax rflags 
--------------------------------------------------------------------------------
000b94c7: RLP; test eax, eax ; mov r10, qword ptr [rbp - 0x28f8] ; mov r8, qword ptr [rbp - 0x2900] ; mov rcx, qword ptr [rbp - 0x2908] ; mov r11, qword ptr [rbp - 0x2910] ; mov r9, qword ptr [rbp - 0x2918] ; jne 0xb944c
read: eax rflags 
write: r10 r11 r8 r9 rcx rflags 
--------------------------------------------------------------------------------
000b95d3: RLP; test eax, eax ; mov r8d, eax ; mov rdx, qword ptr [rbp - 0x2890] ; mov rcx, qword ptr [rbp - 0x2898] ; js 0xb9754
read: eax rflags 
write: r8d rcx rdx rflags 
--------------------------------------------------------------------------------
000b963a: RLP; test eax, eax ; mov r10d, eax ; mov rcx, qword ptr [rbp - 0x28d8] ; mov r9, qword ptr [rbp - 0x28e0] ; mov r8d, dword ptr [rbp - 0x28e4] ; js 0xb9a20
read: eax rflags 
write: r10d r8d r9 rcx rflags 
--------------------------------------------------------------------------------
000b98f8: RLP; test eax, eax ; mov r11, qword ptr [rbp - 0x2900] ; mov r9, qword ptr [rbp - 0x2908] ; mov ecx, dword ptr [rbp - 0x2910] ; jne 0xb9884
read: eax rflags 
write: ecx r11 r9 rflags 
--------------------------------------------------------------------------------
000b9b47: RLP; cmp eax, -1 ; je 0xb86e0
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b9bc7: RLP; cmp eax, -1 ; je 0xb87fc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000b9fdc: RLP; cmp eax, -1 ; mov r11, qword ptr [rsp + 0x50] ; mov r10d, dword ptr [rsp + 0x58] ; je 0xb9f10
read: eax rflags 
write: r10d r11 rflags 
--------------------------------------------------------------------------------
000ba085: RLP; cmp rax, r15 ; je 0xba054
read: r15 rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ba0ef: RLP; test rax, rax ; mov r14, rax ; mov r11, qword ptr [rsp + 0x50] ; cmove r14, rbx ; cmp r12b, 0x5b ; je 0xbaa6f
read: r12b r14 rax rbx rflags 
write: r11 r14 rflags 
--------------------------------------------------------------------------------
000ba1d7: RLP; test eax, eax ; jne 0xba193
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ba556: RLP; cmp rax, 1 ; mov r11, qword ptr [rsp + 0x58] ; mov r10d, dword ptr [rsp + 0x50] ; sbb eax, eax ; or eax, 1 ; mov dword ptr [rip + 0x2b1959], eax ; jmp 0xb9d6e
read: eax rax rflags 
write: eax r10d r11 rflags 
--------------------------------------------------------------------------------
000ba802: RLP; test eax, eax ; mov rcx, qword ptr [rsp + 0xa0] ; mov r8, qword ptr [rsp + 0xa8] ; mov r9d, dword ptr [rsp + 0xb4] ; mov r11, qword ptr [rsp + 0xb8] ; jne 0xba78c
read: eax rflags 
write: r11 r8 r9d rcx rflags 
--------------------------------------------------------------------------------
000ba97a: RLP; test rax, rax ; mov r10d, dword ptr [rsp + 0x60] ; mov r9d, dword ptr [rsp + 0x68] ; mov r11, qword ptr [rsp + 0x70] ; je 0xb9ea4
read: rax rflags 
write: r10d r11 r9d rflags 
--------------------------------------------------------------------------------
000baabc: RLP; test eax, eax ; je 0xba1db
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bab38: RLP; test eax, eax ; je 0xb9f77
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000babfb: RLP; test rax, rax ; setne al ; movzx eax, al ; mov dword ptr [rsp + 0x20], eax ; jmp 0xb9eac
read: al eax rax rflags 
write: al eax rflags 
--------------------------------------------------------------------------------
000bae4f: RLP; test eax, eax ; mov rcx, qword ptr [rsp + 0x88] ; mov r10d, dword ptr [rsp + 0x90] ; mov r9d, dword ptr [rsp + 0x98] ; mov r8, qword ptr [rsp + 0xa0] ; mov r11, qword ptr [rsp + 0xa8] ; jne 0xbadcc
read: eax rflags 
write: r10d r11 r8 r9d rcx rflags 
--------------------------------------------------------------------------------
000bb248: RLP; cmp eax, -1 ; mov r11, qword ptr [rsp + 0x50] ; je 0xb9edc
read: eax rflags 
write: r11 rflags 
--------------------------------------------------------------------------------
000bb2a1: RLP; cmp eax, -1 ; mov r11, qword ptr [rsp + 0x50] ; mov r10d, dword ptr [rsp + 0x58] ; je 0xba018
read: eax rflags 
write: r10d r11 rflags 
--------------------------------------------------------------------------------
000bb313: RLP; mov rdi, qword ptr [rbp - 0x48] ; mov ecx, r13d ; lea rdx, [rbx + rax] ; and ecx, 4 ; mov qword ptr [rsp], 0 ; xor r9d, r9d ; mov r8d, r13d ; mov rsi, rbx ; call 0xb9c2c
read: ecx r13d r9d rbx rip rsp 
write: ecx r8d r9d rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000bb33b: RLP; lea rsp, [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rsp 
--------------------------------------------------------------------------------
000bb364: RLP; cmp rax, 0x3ff ; ja 0xbb5e5
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bb3b1: RLP; add rax, 1 ; je 0xbb5dd
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000bb3e4: RLP; cmp rax, -1 ; je 0xbb5dd
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bb416: RLP; cmp dword ptr [rbp - 0x40], 0 ; mov r12, rax ; jne 0xbb615
read: rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
000bb441: RLP; mov qword ptr [rbp - 0x60], r12 ; cmp dword ptr [rbp - 0x40], 0 ; jne 0xbb5f6
read: r12 rflags 
write: rflags 
--------------------------------------------------------------------------------
000bb464: RLP; cmp rax, 0x3ff ; mov qword ptr [rbp - 0x38], r15 ; ja 0xbb4c8
read: r15 rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bb4a9: RLP; cmp rax, -1 ; mov r9, rax ; je 0xbb5d1
read: rax rflags 
write: r9 rflags 
--------------------------------------------------------------------------------
000bb4df: RLP; cmp rax, -1 ; mov r9, rax ; je 0xbb5d1
read: rax rflags 
write: r9 rflags 
--------------------------------------------------------------------------------
000bb51c: RLP; test rax, rax ; mov r14, rax ; mov rdx, qword ptr [rbp - 0x68] ; mov r9, qword ptr [rbp - 0x70] ; je 0xbb653
read: rax rflags 
write: r14 r9 rdx rflags 
--------------------------------------------------------------------------------
000bb553: RLP; mov r9, qword ptr [rbp - 0x68] ; mov rax, qword ptr [rbp - 0x58] ; mov rdi, qword ptr [rbp - 0x60] ; lea rdx, [r15 + r9*4] ; mov ecx, r13d ; xor r9d, r9d ; mov r8d, r13d ; and ecx, 4 ; mov rsi, r15 ; mov qword ptr [rsp], rax ; call 0xb841c
read: ecx r13d r15 r9d rax rip rsp 
write: ecx r8d r9 r9d rax rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000bb57f: RLP; mov rdi, r14 ; mov ebx, eax ; call 0x1f46c
read: eax r14 rip rsp 
write: ebx rdi rsp 
--------------------------------------------------------------------------------
000bb58d: RLP; mov rdi, r12 ; call 0x1f46c
read: r12 rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000bb599: RLP; mov eax, ebx ; jmp 0xbb33b
read: ebx 
write: eax 
--------------------------------------------------------------------------------
000bb5ac: RLP; mov rax, qword ptr [rip + 0x2ad8b1] ; mov dword ptr fs:[rax], 0xc ; mov eax, 0xfffffffe ; jmp 0xbb33b
read: 
write: eax rax 
--------------------------------------------------------------------------------
000bb5dd: RLP; or eax, 0xffffffff ; jmp 0xbb33b
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
000bb65f: RLP; mov eax, 0xfffffffe ; jmp 0xbb33b
read: 
write: eax 
--------------------------------------------------------------------------------
000bb988: RLP; cmp eax, -1 ; je 0xbb8f4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bba9c: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000bbafa: RLP; test eax, eax ; jne 0xbbb08
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bbb44: RLP; test eax, eax ; jne 0xbbb7a
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bbbc9: RLP; test rax, rax ; je 0xbbc1f
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bbbe7: RLP; test rax, rax ; je 0xbbc1f
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bbc14: RLP; test rax, rax ; je 0xbbc1f
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bbc76: RLP; test rax, rax ; je 0xbbc85
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bbdb5: RLP; test rax, rax ; je 0xbbe56
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bbdd9: RLP; mov rdi, qword ptr [rbx + 0x20] ; mov rsi, r15 ; mov qword ptr [rsp + 0x10], rax ; call 0x1f3ac
read: r15 rax rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
000bbdee: RLP; mov rdi, qword ptr [rbx + 0x28] ; mov rsi, r14 ; mov qword ptr [rsp + 8], rax ; call 0x1f3ac
read: r14 rax rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
000bbe03: RLP; mov rdi, qword ptr [rbx + 0x30] ; mov rsi, r14 ; mov r15, rax ; call 0x1f3ac
read: r14 rax rip rsp 
write: r15 rdi rsi rsp 
--------------------------------------------------------------------------------
000bbe16: RLP; mov r8, qword ptr [rsp + 0x10] ; test r8, r8 ; je 0xbbe56
read: r8 rflags 
write: r8 rflags 
--------------------------------------------------------------------------------
000bbe9f: RLP; cmp eax, -1 ; je 0xbbf10
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bbf46: RLP; test rax, rax ; mov qword ptr [rbx + 8], rax ; je 0xbbf5a
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bbfa9: RLP; test rax, rax ; mov qword ptr [rbp + 0x20], rax ; je 0xbbff7
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bbff3: RLP; test eax, eax ; jns 0xbbfc4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bc05d: RLP; test rax, rax ; je 0xbbff7
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bc12e: RLP; mov r8, qword ptr [rsp + 8] ; mov r9, qword ptr [rsp + 0x10] ; mov qword ptr [r9 + r8*8], rax ; mov rax, qword ptr [r15 + 0xb8] ; mov rax, qword ptr [rax + r8*8] ; test rax, rax ; je 0xbc1d8
read: rax rflags 
write: r8 r9 rax rflags 
--------------------------------------------------------------------------------
000bc1ae: RLP; test rax, rax ; je 0xbc1d8
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bc2a0: RLP; test rax, rax ; mov qword ptr [rbx + 8], rax ; je 0xbc3f6
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bc307: RLP; jmp 0xbc231
read: 
write: 
--------------------------------------------------------------------------------
000bc32b: RLP; pop rbx ; pop rbp ; pop r12 ; ret
read: rsp 
write: r12 rbp rbx rsp 
--------------------------------------------------------------------------------
000bc4b1: RLP; lea rdx, [rax - 1] ; cmp rdx, -3 ; ja 0xbc544
read: rdx rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
000bc6c8: RLP; mov r12, rax ; lea rax, [rax + 2] ; cmp rax, 2 ; jbe 0xbcbab
read: rax rflags 
write: r12 rax rflags 
--------------------------------------------------------------------------------
000bc6ea: RLP; test eax, eax ; mov r9, qword ptr [rsp] ; je 0xbcb85
read: eax rflags 
write: r9 rflags 
--------------------------------------------------------------------------------
000bc707: RLP; lea rcx, [rsp + 0x60] ; lea rdx, [rsp + 0x50] ; mov esi, eax ; mov r13d, eax ; mov rdi, rcx ; mov qword ptr [rsp], rcx ; call 0x96b8c
read: eax rcx rip rsp 
write: esi r13d rcx rdi rdx rsp 
--------------------------------------------------------------------------------
000bc726: RLP; cmp r12, rax ; mov r8, rax ; mov rcx, qword ptr [rsp] ; mov r9, qword ptr [rsp + 8] ; jne 0xbcaa3
read: r12 rax rflags 
write: r8 r9 rcx rflags 
--------------------------------------------------------------------------------
000bc758: RLP; mov r8, qword ptr [rsp] ; cmp byte ptr [r15 + 0x64], 0 ; jne 0xbca85
read: rflags 
write: r8 rflags 
--------------------------------------------------------------------------------
000bc8bb: RLP; mov r12, rax ; lea rax, [rax + 2] ; cmp rax, 2 ; jbe 0xbc9e2
read: rax rflags 
write: r12 rax rflags 
--------------------------------------------------------------------------------
000bc8dd: RLP; test eax, eax ; je 0xbc984
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bc8f1: RLP; mov rdx, qword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x28] ; mov esi, eax ; mov r13d, eax ; call 0x96b8c
read: eax rip rsp 
write: esi r13d rdi rdx rsp 
--------------------------------------------------------------------------------
000bc909: RLP; cmp r12, rax ; jne 0xbca79
read: r12 rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bc92a: RLP; mov rdx, qword ptr [r15 + 0x10] ; lea edi, [r14 + 1] ; add r12d, r14d ; lea rax, [rbx*4] ; cmp edi, r12d ; mov dword ptr [rdx + rbx*4], r13d ; jge 0xbc9a3
read: edi r12d r13d r14d rflags 
write: edi r12d rax rdx rflags 
--------------------------------------------------------------------------------
000bc9a1: RLP; jmp 0xbc92a
read: 
write: 
--------------------------------------------------------------------------------
000bcb09: RLP; lea rcx, [rbp*4] ; mov r8, qword ptr [rsp] ; mov edx, r12d ; mov eax, 1 ; lea edi, [r12 - 1] ; mov rsi, rcx ; add rcx, qword ptr [r15 + 0x18] ; add rsi, qword ptr [r15 + 0x10] ; cmp r8, 1 ; mov dword ptr [rsi], r13d ; mov dword ptr [rcx], ebx ; jbe 0xbcb59
read: ebx r12d r13d r8 rcx rflags rsi 
write: eax edi edx r8 rcx rflags rsi 
--------------------------------------------------------------------------------
000bcba2: RLP; mov r8, qword ptr [rsp] ; jmp 0xbc75c
read: 
write: r8 
--------------------------------------------------------------------------------
000bcc3e: RLP; test rax, rax ; mov qword ptr [r15 + 0x18], rax ; mov r8, qword ptr [rsp] ; mov rcx, qword ptr [rsp + 8] ; jne 0xbcacc
read: rax rflags 
write: r8 rcx rflags 
--------------------------------------------------------------------------------
000bcd2e: RLP; test eax, eax ; jne 0xbcd89
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bcd54: RLP; test rax, rax ; je 0xbcdd1
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bcd85: RLP; mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
read: rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
000bcda6: RLP; add rsp, 0x10 ; pop rbx ; ret
read: rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
000bcdb8: RLP; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
read: eax rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
000bcdcd: RLP; xor eax, eax ; jmp 0xbcd89
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
000bce0b: RLP; test eax, eax ; jne 0xbce16
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bce37: RLP; test eax, eax ; je 0xbce0f
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bce67: RLP; mov dword ptr [rbx + 0x90], ebp ; jmp 0xbce14
read: ebp 
write: 
--------------------------------------------------------------------------------
000bcf38: RLP; mov edx, eax ; mov eax, 1 ; test edx, edx ; jne 0xbced9
read: eax edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
000bcfe8: RLP; mov edx, ebx ; mov ecx, eax ; and dx, 0x3ff ; and ebx, 4 ; jne 0xbd074
read: dx eax ebx rflags 
write: dx ebx ecx edx rflags 
--------------------------------------------------------------------------------
000bd0b0: RLP; mov rdi, qword ptr [rbx + 8] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000bd0bd: RLP; mov rdi, qword ptr [rbx + 0x10] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000bd0ca: RLP; mov rdi, qword ptr [rbx + 0x18] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000bd0d7: RLP; mov rdi, qword ptr [rbx + 0x20] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000bd0e4: RLP; mov rdi, qword ptr [rbx + 0x28] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000bd0f1: RLP; mov rdi, rbx ; call 0x1f46c
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000bd0fd: RLP; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
000bd138: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000bd154: RLP; jmp 0xbd126
read: 
write: 
--------------------------------------------------------------------------------
000bd171: RLP; xor eax, eax ; add rsp, 8 ; ret
read: eax rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
000bd191: RLP; mov rdi, qword ptr [rbx + 0x30] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000bd19e: RLP; mov rax, qword ptr [rbx + 0x38] ; lea rdx, [rbx + 8] ; cmp rax, rdx ; je 0xbd1c5
read: rax rdx rflags 
write: rax rdx rflags 
--------------------------------------------------------------------------------
000bd1b8: RLP; mov rdi, qword ptr [rbx + 0x38] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000bd1c5: RLP; mov rdi, qword ptr [rbx + 0x10] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000bd1d2: RLP; mov rdi, qword ptr [rbx + 0x48] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000bd1df: RLP; mov rdi, qword ptr [rbx + 0x40] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000bd1ec: RLP; mov rdi, rbx ; call 0x1f46c
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000bd1f8: RLP; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
000bd211: RLP; mov rdi, qword ptr [rbx + 0x18] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000bd21e: RLP; cmp byte ptr [rbx + 0x63], 0 ; jne 0xbd22c
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000bd239: RLP; pop rbx ; nop ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
000bd296: RLP; cmp qword ptr [r13 + 0x10], rbx ; lea rdx, [rbx + 1] ; ja 0xbd27c
read: rbx rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
000bd2b4: RLP; cmp qword ptr [r13 + 0x10], 0 ; jne 0xbd2ca
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000bd2e8: RLP; mov rax, qword ptr [r13 + 0x38] ; test rax, rax ; je 0xbd306
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000bd306: RLP; mov rax, qword ptr [r13 + 0x28] ; test rax, rax ; je 0xbd321
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000bd321: RLP; cmp qword ptr [r13 + 0x10], rbx ; lea rax, [rbx + 1] ; ja 0xbd2c4
read: rbx rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000bd33e: RLP; mov rdi, qword ptr [r13 + 0x30] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000bd34b: RLP; mov rdi, qword ptr [r13 + 0x38] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000bd358: RLP; mov rdi, qword ptr [r13] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000bd365: RLP; mov rdi, qword ptr [r13 + 0x40] ; test rdi, rdi ; je 0xbd3d4
read: rdi rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
000bd3a5: RLP; cmp dword ptr [r12], ebx ; jg 0xbd38c
read: ebx rflags 
write: rflags 
--------------------------------------------------------------------------------
000bd3c1: RLP; cmp r14d, dword ptr [r13 + 0x84] ; ja 0xbd3d0
read: r14d rflags 
write: rflags 
--------------------------------------------------------------------------------
000bd3dd: RLP; mov rdi, qword ptr [r13 + 0x78] ; lea rax, [rip + 0x74c94] ; cmp rdi, rax ; je 0xbd3f6
read: rax rdi rflags 
write: rax rdi rflags 
--------------------------------------------------------------------------------
000bd3f6: RLP; mov rdi, qword ptr [r13 + 0xd0] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000bd406: RLP; mov rdi, r13 ; call 0x1f46c
read: r13 rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000bd412: RLP; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000bd499: RLP; mov rdi, r12 ; call 0x1f46c
read: r12 rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000bd4a5: RLP; cmp dword ptr [r13 + 0x14], ebx ; jg 0xbd47c
read: ebx rflags 
write: rflags 
--------------------------------------------------------------------------------
000bd4b8: RLP; mov rdx, qword ptr [r13 + 8] ; test rdx, rdx ; je 0xbd4db
read: rdx rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
000bd4ce: RLP; mov rdi, qword ptr [r13 + 8] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000bd4db: RLP; mov rdi, r13 ; add r14, 8 ; call 0x1f46c
read: r13 r14 rip rsp 
write: r14 rdi rflags rsp 
--------------------------------------------------------------------------------
000bd4eb: RLP; add dword ptr [rsp + 0xc], 1 ; mov eax, dword ptr [rsp + 0xc] ; cmp dword ptr [r15 + 0xac], eax ; jg 0xbd45c
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000bd562: RLP; mov rax, qword ptr [rbp + 8] ; mov rdi, qword ptr [rax + rbx + 8] ; add rbx, 0x20 ; call 0x1f46c
read: rbx rip rsp 
write: rax rbx rdi rflags rsp 
--------------------------------------------------------------------------------
000bd578: RLP; cmp dword ptr [rbp], r12d ; jg 0xbd54c
read: r12d rflags 
write: rflags 
--------------------------------------------------------------------------------
000bd58b: RLP; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
read: eax rsp 
write: eax r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000bd5eb: RLP; cmp dword ptr [rbx + 0x68], 1 ; mov dword ptr [rbx + 0x4c], eax ; jle 0xbd614
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bd614: RLP; movzx eax, byte ptr [rbx + 0x63] ; test al, al ; jne 0xbd693
read: al rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000bd654: RLP; mov dword ptr [rbx + 0x38], 0 ; xor eax, eax ; add rsp, 0x58 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: eax rsp 
write: eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000bd675: RLP; test eax, eax ; je 0xbd654
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bd6ae: RLP; movzx eax, byte ptr [rbx + 0x63] ; jmp 0xbd61c
read: 
write: eax 
--------------------------------------------------------------------------------
000bd800: RLP; mov r8d, dword ptr [rsp + 0x10] ; mov dword ptr [rbx + 0x4c], eax ; mov rcx, qword ptr [rsp] ; cmp ebp, r8d ; jge 0xbd81a
read: eax ebp r8d rflags 
write: r8d rcx rflags 
--------------------------------------------------------------------------------
000bd8f4: RLP; jmp 0xbd8a1
read: 
write: 
--------------------------------------------------------------------------------
000bd93b: RLP; mov r8, qword ptr [rsp] ; mov rdx, r14 ; sub rdx, r8 ; cmp rax, rdx ; jb 0xbd970
read: r14 r8 rax rdx rflags 
write: r8 rdx rflags 
--------------------------------------------------------------------------------
000bd9c6: RLP; cmp rax, 0 ; mov r9d, dword ptr [rsp + 0x14] ; mov r11, qword ptr [rsp + 0x18] ; jle 0xbdbdb
read: rax rflags 
write: r11 r9d rflags 
--------------------------------------------------------------------------------
000bda0e: RLP; mov dword ptr [rbx + 0x4c], eax ; jmp 0xbdac8
read: eax 
write: 
--------------------------------------------------------------------------------
000bda48: RLP; mov rdi, qword ptr [rbx + 8] ; mov eax, dword ptr [rbx + 0x2c] ; lea rsi, [rdi + r13] ; sub eax, r14d ; movsxd rdx, eax ; call 0x88fbc
read: eax r14d rip rsp 
write: eax rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000bda62: RLP; sub dword ptr [rbx + 0x2c], r14d ; sub dword ptr [rbx + 0x30], r14d ; xor eax, eax ; jmp 0xbda83
read: eax r14d 
write: eax rflags 
--------------------------------------------------------------------------------
000bdafa: RLP; jmp 0xbd654
read: 
write: 
--------------------------------------------------------------------------------
000bdb66: RLP; test eax, eax ; mov ecx, 1 ; jne 0xbdac5
read: eax rflags 
write: ecx rflags 
--------------------------------------------------------------------------------
000bdc2d: RLP; jmp 0xbd654
read: 
write: 
--------------------------------------------------------------------------------
000bdf08: RLP; mov edi, ebp ; mov edx, r12d ; mov rsi, r14 ; mov dword ptr [rsp + 0xc], eax ; xor ebp, ebp ; call 0xbde3c
read: eax ebp r12d r14 rip rsp 
write: ebp edi edx rflags rsi rsp 
--------------------------------------------------------------------------------
000bdf1f: RLP; mov r9d, dword ptr [r15 + 4] ; mov dword ptr [rsp + 0x10], eax ; test r9d, r9d ; jle 0xbdfde
read: eax r9d rflags 
write: r9d rflags 
--------------------------------------------------------------------------------
000bdf86: RLP; mov r14d, eax ; mov rax, qword ptr [r12 + 8] ; mov r9d, dword ptr [rsp + 0x10] ; mov ecx, dword ptr [rsp + 0x18] ; mov r8d, r15d ; mov edx, r13d ; mov rdi, rbx ; mov esi, dword ptr [rax + rbp*4] ; call 0xbba3c
read: eax r13d r15d rbx rip rsp 
write: ecx edx esi r14d r8d r9d rax rdi rsp 
--------------------------------------------------------------------------------
000bdfac: RLP; cmp eax, r14d ; je 0xbdfcc
read: eax r14d rflags 
write: rflags 
--------------------------------------------------------------------------------
000be239: RLP; cmp byte ptr [rsp + 8], 0x15 ; je 0xbe09e
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000be297: RLP; movsxd rdx, eax ; cmp edx, -1 ; mov dword ptr [rbx + 0x38], edx ; je 0xbe2ff
read: eax edx rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
000be3a9: RLP; test rax, rax ; je 0xbe3d4
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000be42a: RLP; test rax, rax ; mov qword ptr [r14], rax ; je 0xbe471
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000be51c: RLP; mov r8, r14 ; xor ecx, ecx ; xor edx, edx ; mov rsi, r13 ; mov rdi, r12 ; mov r15, rax ; mov byte ptr [rsp + 0x18], 9 ; call 0xbe30c
read: ecx edx r12 r13 r14 rax rip rsp 
write: ecx edx r15 r8 rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000be53a: RLP; mov r10, qword ptr [rsp] ; mov rbp, rax ; mov r8, r14 ; mov rcx, rbp ; mov rdx, r10 ; mov rsi, r13 ; mov rdi, r12 ; mov byte ptr [rsp + 0x18], 0x10 ; call 0xbe30c
read: r10 r12 r13 r14 rax rbp rip rsp 
write: r10 r8 rbp rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000be55e: RLP; mov r11, rax ; mov r8, r14 ; mov rcx, r11 ; mov rdx, r15 ; mov rsi, r13 ; mov rdi, r12 ; mov byte ptr [rsp + 0x18], 0x10 ; mov qword ptr [rsp], r11 ; call 0xbe30c
read: r11 r12 r13 r14 r15 rax rip rsp 
write: r11 r8 rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000be582: RLP; test rax, rax ; je 0xbe6a5
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000be618: RLP; xor ecx, ecx ; xor edx, edx ; mov r8, r14 ; mov rsi, r13 ; mov rdi, r12 ; mov r15, rax ; mov byte ptr [rsp + 0x18], 9 ; call 0xbe30c
read: ecx edx r12 r13 r14 rax rip rsp 
write: ecx edx r15 r8 rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000be636: RLP; mov r10, qword ptr [rsp] ; mov rbp, rax ; mov r11, rax ; test r10, r10 ; jne 0xbe541
read: r10 rax rflags 
write: r10 r11 rbp rflags 
--------------------------------------------------------------------------------
000be67c: RLP; mov r8, r14 ; xor ecx, ecx ; xor edx, edx ; mov rsi, r13 ; mov rdi, r12 ; mov r15, rax ; mov byte ptr [rsp + 0x18], 9 ; call 0xbe30c
read: ecx edx r12 r13 r14 rax rip rsp 
write: ecx edx r15 r8 rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000be69a: RLP; mov r11, rax ; mov rbp, rax ; jmp 0xbe561
read: rax 
write: r11 rbp 
--------------------------------------------------------------------------------
000be715: RLP; test rax, rax ; mov qword ptr [rbx + 0x10], rax ; je 0xbe6f2
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000be73d: RLP; test rax, rax ; mov qword ptr [rbx + 8], rax ; je 0xbe6e3
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000be78d: RLP; cmp eax, 1 ; sbb eax, eax ; add rsp, 8 ; and eax, 2 ; pop rbx ; sub eax, 1 ; pop rbp ; ret
read: eax rflags rsp 
write: eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000be845: RLP; test rax, rax ; je 0xbe857
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000be966: RLP; test eax, eax ; js 0xbe9a9
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000be986: RLP; cmp eax, -1 ; mov r12d, eax ; je 0xbe9a9
read: eax rflags 
write: r12d rflags 
--------------------------------------------------------------------------------
000be9a1: RLP; test eax, eax ; jns 0xbe894
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000be9d4: RLP; cmp eax, -1 ; mov r12d, eax ; je 0xbe9a9
read: eax rflags 
write: r12d rflags 
--------------------------------------------------------------------------------
000be9ef: RLP; test eax, eax ; js 0xbe9a9
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bea0b: RLP; test eax, eax ; je 0xbe96a
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bea5c: RLP; cmp eax, -1 ; mov r12d, eax ; je 0xbe9a9
read: eax rflags 
write: r12d rflags 
--------------------------------------------------------------------------------
000bea7a: RLP; test eax, eax ; js 0xbe9a9
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000beabf: RLP; cmp eax, -1 ; mov r12d, eax ; mov rcx, qword ptr [rsp] ; je 0xbe9a9
read: eax rflags 
write: r12d rcx rflags 
--------------------------------------------------------------------------------
000beb17: RLP; test eax, eax ; js 0xbe9a9
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000beb87: RLP; test eax, eax ; jne 0xbec34
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bebbd: RLP; cmp eax, -1 ; je 0xbec1c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bebf2: RLP; test eax, eax ; jne 0xbec21
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bec17: RLP; cmp eax, -1 ; jne 0xbec34
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bed19: RLP; mov ecx, dword ptr [rbp + 4] ; mov eax, dword ptr [r12 + 4] ; lea r8d, [rcx + rax*2 - 1] ; mov edx, r8d ; sub edx, ebx ; add edx, 1 ; je 0xbedcc
read: ebx edx r8d rflags 
write: eax ecx edx r8d rflags 
--------------------------------------------------------------------------------
000beda1: RLP; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
read: eax rsp 
write: eax r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000bedc6: RLP; nop word ptr [rax + rax] ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
read: eax rsp 
write: eax r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000bee1d: RLP; test rax, rax ; je 0xbee36
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000beea1: RLP; test rax, rax ; mov qword ptr [rsp + 0x28], rax ; je 0xbf0b6
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bef35: RLP; test eax, eax ; jne 0xbefb4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000befa7: RLP; test eax, eax ; mov r11, qword ptr [rsp + 8] ; je 0xbef26
read: eax rflags 
write: r11 rflags 
--------------------------------------------------------------------------------
000befe0: RLP; jmp 0xbef4b
read: 
write: 
--------------------------------------------------------------------------------
000bf001: RLP; test eax, eax ; js 0xbf0b6
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bf0a3: RLP; test eax, eax ; jne 0xbefb4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bf109: RLP; test rax, rax ; mov qword ptr [rsp + 0x18], rax ; je 0xbf21e
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bf1a8: RLP; test eax, eax ; jne 0xbf206
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bf1cb: RLP; mov rax, qword ptr [rsp + 0x10] ; mov rdx, qword ptr [rsp + 0x18] ; mov qword ptr [r15], rax ; mov qword ptr [r15 + 8], rdx ; xor eax, eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: eax rax rdx rsp 
write: eax r12 r13 r14 r15 rax rbp rbx rdx rflags rsp 
--------------------------------------------------------------------------------
000bf202: RLP; test eax, eax ; je 0xbf1ac
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bf218: RLP; mov eax, dword ptr [rsp + 8] ; jmp 0xbf1de
read: 
write: eax 
--------------------------------------------------------------------------------
000bf259: RLP; test rax, rax ; mov qword ptr [rbx + 8], rax ; je 0xbf29a
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bf27a: RLP; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
read: eax rsp 
write: eax r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000bf305: RLP; test rax, rax ; mov qword ptr [r14 + 8], rax ; je 0xbf463
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bf38b: RLP; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000bf3b9: RLP; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000bf417: RLP; add r15d, dword ptr [r13 + 4] ; nop ; mov dword ptr [r14 + 4], r15d ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: eax r15d rsp 
write: eax r12 r13 r14 r15 r15d rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000bf45c: RLP; add r15d, dword ptr [r12 + 4] ; jmp 0xbf41c
read: r15d 
write: r15d rflags 
--------------------------------------------------------------------------------
000bf52f: RLP; test eax, eax ; je 0xbf4fc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bf573: RLP; test rax, rax ; mov r15, rax ; je 0xbf735
read: rax rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
000bf597: RLP; test eax, eax ; mov edx, dword ptr [rsp + 0x14] ; jne 0xbf7ae
read: eax rflags 
write: edx rflags 
--------------------------------------------------------------------------------
000bf674: RLP; lea ecx, [rbx + 1] ; add rbx, 1 ; cmp dword ptr [r15 + 4], ecx ; jle 0xbf704
read: ecx rbx rflags 
write: ecx rbx rflags 
--------------------------------------------------------------------------------
000bf721: RLP; test eax, eax ; je 0xbf53c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bf735: RLP; mov rax, qword ptr [rsp + 0x20] ; mov dword ptr [rax], 0xc ; xor eax, eax ; jmp 0xbf53f
read: eax 
write: eax rax rflags 
--------------------------------------------------------------------------------
000bf75f: RLP; test rax, rax ; mov qword ptr [r13 + 0x38], rax ; mov r9d, dword ptr [rsp + 0x2c] ; je 0xbf7bf
read: rax rflags 
write: r9d rflags 
--------------------------------------------------------------------------------
000bf781: RLP; test eax, eax ; jne 0xbf735
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bf7ba: RLP; jmp 0xbf735
read: 
write: 
--------------------------------------------------------------------------------
000bf7cb: RLP; nop ; jmp 0xbf735
read: 
write: 
--------------------------------------------------------------------------------
000bf86d: RLP; test eax, eax ; je 0xbf84c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bf89f: RLP; test rax, rax ; mov r14, rax ; je 0xbf9c5
read: rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
000bf8be: RLP; test eax, eax ; jne 0xbf9f5
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bf9b1: RLP; test eax, eax ; je 0xbf871
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bf9c5: RLP; mov rax, qword ptr [rsp + 8] ; mov dword ptr [rax], 0xc ; xor eax, eax ; jmp 0xbf874
read: eax 
write: eax rax rflags 
--------------------------------------------------------------------------------
000bfa01: RLP; jmp 0xbf9c5
read: 
write: 
--------------------------------------------------------------------------------
000bfa71: RLP; test eax, eax ; mov dword ptr [rsp + 0x1c], eax ; jne 0xbface
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bfa8d: RLP; mov rdi, qword ptr [rsp + 0x28] ; mov qword ptr [rbx + r15], rax ; call 0x1f46c
read: rax rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000bfa9f: RLP; mov eax, dword ptr [rsp + 0x1c] ; test eax, eax ; jne 0xbface
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000bfb2d: RLP; cmp eax, -1 ; je 0xbfd6c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bfbc1: RLP; test eax, eax ; mov r8, qword ptr [rsp + 8] ; je 0xbfcb4
read: eax rflags 
write: r8 rflags 
--------------------------------------------------------------------------------
000bfbf6: RLP; test eax, eax ; je 0xbfbce
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bfc34: RLP; test eax, eax ; jne 0xbfbce
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bfc4c: RLP; mov edx, dword ptr [rsp + 0x38] ; mov ecx, dword ptr [rsp + 0x3c] ; mov rsi, r15 ; mov rdi, r14 ; mov dword ptr [rsp + 0x4c], eax ; call 0xbf0cc
read: eax r14 r15 rip rsp 
write: ecx edx rdi rsi rsp 
--------------------------------------------------------------------------------
000bfc67: RLP; mov rsi, r15 ; mov rdi, rbp ; mov ebx, eax ; call 0xbec4c
read: eax r15 rbp rip rsp 
write: ebx rdi rsi rsp 
--------------------------------------------------------------------------------
000bfc78: RLP; mov rdi, qword ptr [rsp + 0x58] ; mov r15d, eax ; call 0x1f46c
read: eax rip rsp 
write: r15d rdi rsp 
--------------------------------------------------------------------------------
000bfc89: RLP; mov eax, dword ptr [rsp + 0x4c] ; mov edx, ebx ; or edx, r15d ; or edx, eax ; je 0xbfb69
read: eax ebx edx r15d rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
000bfcc6: RLP; mov rdi, qword ptr [rsp + 0x20] ; mov esi, r12d ; mov dword ptr [rsp + 0x4c], eax ; call 0xbe74c
read: eax r12d rip rsp 
write: esi rdi rsp 
--------------------------------------------------------------------------------
000bfcdb: RLP; shr eax, 0x1f ; test al, al ; jne 0xbfd7d
read: al eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000bfd14: RLP; mov qword ptr [r12], rax ; mov rdi, qword ptr [rsp + 0x58] ; call 0x1f46c
read: rax rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000bfd26: RLP; mov rax, qword ptr [r13 + 0x88] ; cmp qword ptr [rax + r15*8], 0 ; jne 0xbfbce
read: rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000bfd5d: RLP; test eax, eax ; mov dword ptr [rsp + 0x4c], eax ; je 0xbfcf2
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000bfd8b: RLP; mov edx, dword ptr [rsp + 0x4c] ; mov eax, 0xc ; test edx, edx ; cmovne eax, edx ; jmp 0xbfd6e
read: eax edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
000bfed0: RLP; xor eax, eax ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: eax rsp 
write: eax r12 r13 r14 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000bff76: RLP; test rax, rax ; je 0xbffa2
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c003d: RLP; test eax, eax ; je 0xc00de
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c005f: RLP; test eax, eax ; jne 0xc01cf
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c00d1: RLP; test eax, eax ; mov r11d, dword ptr [rsp + 4] ; je 0xc0024
read: eax rflags 
write: r11d rflags 
--------------------------------------------------------------------------------
000c00f4: RLP; test eax, eax ; jne 0xc006c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c0114: RLP; test eax, eax ; jne 0xc0045
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c017a: RLP; test eax, eax ; jne 0xc0154
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c0190: RLP; lea esi, [rax - 1] ; mov rdi, r13 ; call 0xbdcec
read: r13 rip rsp 
write: esi rdi rsp 
--------------------------------------------------------------------------------
000c019f: RLP; lea eax, [rbp + 1] ; add rbp, 1 ; cmp dword ptr [r15 + 4], eax ; jg 0xc0161
read: eax rbp rflags 
write: eax rbp rflags 
--------------------------------------------------------------------------------
000c01ba: RLP; xor eax, eax ; add rsp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: eax rsp 
write: eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000c01e0: RLP; mov eax, dword ptr [rsp] ; jmp 0xc01bc
read: 
write: eax 
--------------------------------------------------------------------------------
000c020a: RLP; test ebx, ebx ; jle 0xc0258
read: ebx rflags 
write: rflags 
--------------------------------------------------------------------------------
000c02de: RLP; mov rdi, qword ptr [r12 + 8] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000c02ec: RLP; mov rax, qword ptr [rbx + 8] ; mov rdi, qword ptr [rax + rbp + 8] ; call 0x1f46c
read: rip rsp 
write: rax rdi rsp 
--------------------------------------------------------------------------------
000c02fe: RLP; add rbp, qword ptr [rbx + 8] ; mov rax, qword ptr [rbp + 0x10] ; mov rdx, qword ptr [rbp + 0x18] ; mov qword ptr [r12], rax ; mov qword ptr [r12 + 8], rdx ; pop rbx ; mov eax, dword ptr [rbp + 4] ; pop rbp ; pop r12 ; ret
read: rax rbp rdx rsp 
write: eax r12 rax rbp rbx rdx rflags rsp 
--------------------------------------------------------------------------------
000c03a8: RLP; lea rdi, [rip + 0x760f6] ; mov qword ptr [r12], rax ; mov ecx, 6 ; mov rsi, rbp ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0xc0414
read: rax rbp rcx rdi rflags rsi 
write: ecx rcx rdi rflags rsi 
--------------------------------------------------------------------------------
000c0b31: RLP; test rax, rax ; je 0xc0b4e
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c0b9f: RLP; mov esi, 1 ; mov edi, 0x48 ; mov rbx, rax ; call 0x1f44c
read: rax rip rsp 
write: edi esi rbx rsp 
--------------------------------------------------------------------------------
000c0bb5: RLP; test rax, rax ; mov r14, rax ; je 0xc0d5a
read: rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
000c0bfc: RLP; test eax, eax ; jne 0xc0d69
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c0ca7: RLP; test rax, rax ; mov r15, rax ; mov r9, qword ptr [rsp + 0x10] ; je 0xc0d42
read: rax rflags 
write: r15 r9 rflags 
--------------------------------------------------------------------------------
000c0cec: RLP; test rax, rax ; je 0xc0d42
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c0d10: RLP; add rsp, 0x58 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000c0d30: RLP; add rsp, 0x58 ; mov rax, r15 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: r15 rsp 
write: r12 r13 r14 r15 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000c0d4e: RLP; mov rdi, r14 ; call 0xbd09c
read: r14 rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000c0d5a: RLP; mov rax, qword ptr [rsp + 0x18] ; mov dword ptr [rax], 0xc ; xor eax, eax ; jmp 0xc0d10
read: eax 
write: eax rax rflags 
--------------------------------------------------------------------------------
000c0d79: RLP; mov rdi, r14 ; call 0xbd09c
read: r14 rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000c0d85: RLP; mov eax, dword ptr [rsp + 0x10] ; mov rdi, qword ptr [rsp + 0x18] ; mov dword ptr [rdi], eax ; xor eax, eax ; jmp 0xc0d10
read: eax 
write: eax rdi rflags 
--------------------------------------------------------------------------------
000c0f80: RLP; mov r10, qword ptr [rbp - 0x168] ; cmp r10, rax ; jne 0xc0e44
read: r10 rax rflags 
write: r10 rflags 
--------------------------------------------------------------------------------
000c0f9f: RLP; mov rdx, qword ptr [rbp - 0x160] ; mov esi, eax ; mov rdi, r12 ; call 0x96b8c
read: eax r12 rip rsp 
write: esi rdi rdx rsp 
--------------------------------------------------------------------------------
000c0fb4: RLP; cmp rax, -1 ; je 0xc0e44
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c10e2: RLP; cmp rax, -2 ; jne 0xc10bc
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c1242: RLP; cmp rax, -1 ; je 0xc1274
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c12a1: RLP; mov rdi, qword ptr [rbp - 0x160] ; mov rdx, r15 ; mov esi, eax ; call 0x96b8c
read: eax r15 rip rsp 
write: esi rdi rdx rsp 
--------------------------------------------------------------------------------
000c12b6: RLP; cmp rax, -1 ; je 0xc12c9
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c1612: RLP; test eax, eax ; je 0xc15ec
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c1925: RLP; test eax, eax ; jg 0xc18ec
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c193a: RLP; test eax, eax ; jg 0xc18ec
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c196c: RLP; mov ecx, dword ptr [r13 + 0x40] ; test ecx, ecx ; jle 0xc19a7
read: ecx rflags 
write: ecx rflags 
--------------------------------------------------------------------------------
000c1fe8: RLP; cmp r15d, ebx ; mov ebp, eax ; je 0xc23a5
read: eax ebx r15d rflags 
write: ebp rflags 
--------------------------------------------------------------------------------
000c20ce: RLP; test eax, eax ; mov dword ptr [rsp + 0x78], eax ; jne 0xc2535
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c2134: RLP; test eax, eax ; je 0xc215e
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c2156: RLP; test eax, eax ; js 0xc251c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c21a4: RLP; cmp eax, 1 ; jle 0xc243c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c2206: RLP; test eax, eax ; mov dword ptr [rsp + 0x7c], eax ; mov edx, dword ptr [rsp + 0x38] ; jne 0xc2279
read: eax rflags 
write: edx rflags 
--------------------------------------------------------------------------------
000c2222: RLP; test eax, eax ; js 0xc251c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c2251: RLP; mov rcx, qword ptr [rsp + 0x18] ; mov qword ptr [rcx], rax ; mov rax, qword ptr [r13 + 0x88] ; cmp qword ptr [rax + r14*8], 0 ; jne 0xc2140
read: rax rflags 
write: rax rcx rflags 
--------------------------------------------------------------------------------
000c228a: RLP; mov eax, dword ptr [rsp + 0x7c] ; test eax, eax ; mov dword ptr [rsp + 0x78], eax ; jne 0xc2535
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000c22ce: RLP; test eax, eax ; mov dword ptr [rsp + 0x78], eax ; jne 0xc2535
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c22f9: RLP; test eax, eax ; mov dword ptr [rsp + 0x78], eax ; jne 0xc2535
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c2319: RLP; mov rdx, qword ptr [rsp + 8] ; mov rsi, qword ptr [rsp + 0x40] ; mov ecx, eax ; mov rdi, qword ptr [rsp + 0x50] ; call 0xbf47c
read: eax rip rsp 
write: ecx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000c2333: RLP; test rax, rax ; mov r15, rax ; je 0xc262d
read: rax rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
000c23a3: RLP; mov ebp, eax ; lea r14, [rsp + 0x80] ; mov esi, r12d ; mov rdi, r14 ; call 0xbbf1c
read: eax r12d r14 rip rsp 
write: ebp esi r14 rdi rsp 
--------------------------------------------------------------------------------
000c23bc: RLP; test eax, eax ; mov dword ptr [rsp + 0x78], eax ; jne 0xc24dc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c23e4: RLP; test eax, eax ; mov dword ptr [rsp + 0x78], eax ; jne 0xc2535
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c241b: RLP; test rax, rax ; mov r15, rax ; je 0xc25be
read: rax rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
000c2465: RLP; mov dword ptr [rsp + 0x78], 0 ; jmp 0xc229c
read: 
write: 
--------------------------------------------------------------------------------
000c2487: RLP; movsxd rdx, dword ptr [rsp + 0x48] ; mov rax, qword ptr [r13 + 0x88] ; mov rax, qword ptr [rax + rdx*8] ; test rax, rax ; je 0xc2581
read: rax rflags 
write: rax rdx rflags 
--------------------------------------------------------------------------------
000c24cf: RLP; mov edx, eax ; xor eax, eax ; test edx, edx ; jne 0xc24dc
read: eax edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
000c250d: RLP; test eax, eax ; mov dword ptr [rsp + 0x78], eax ; je 0xc2403
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c252d: RLP; mov dword ptr [rsp + 0x78], 0xc ; mov rdi, qword ptr [rsp + 0x88] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000c2546: RLP; mov eax, dword ptr [rsp + 0x78] ; jmp 0xc24dc
read: 
write: eax 
--------------------------------------------------------------------------------
000c256b: RLP; test eax, eax ; mov dword ptr [rsp + 0x78], eax ; jne 0xc24dc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c25ed: RLP; test rax, rax ; je 0xc261b
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c2616: RLP; jmp 0xc1f94
read: 
write: 
--------------------------------------------------------------------------------
000c26b6: RLP; mov rdx, rax ; mov qword ptr [rbp - 0x38], rax ; mov eax, 0xc ; test rdx, rdx ; je 0xc2c50
read: rax rdx rflags 
write: eax rdx rflags 
--------------------------------------------------------------------------------
000c2749: RLP; mov rsi, qword ptr [rbp - 0xa0] ; mov r12d, dword ptr [r14] ; lea rdi, [rbp - 0x54] ; mov qword ptr [rbp - 0xb0], rdi ; movsxd rax, esi ; mov dword ptr [rbp - 0x54], r12d ; mov dword ptr [rbp - 0x84], esi ; shl rax, 3 ; mov qword ptr [rbp - 0xc0], rax ; mov rax, rsi ; add rax, 1 ; mov qword ptr [rbp - 0xb8], rax ; lea rax, [rbp - 0x50] ; mov qword ptr [rbp - 0x98], rax ; add rax, 8
read: esi r12d rax rdi rsi 
write: r12d rax rdi rflags rsi 
--------------------------------------------------------------------------------
000c27ca: RLP; test eax, eax ; mov ecx, dword ptr [rbp - 0x68] ; je 0xc2c94
read: eax rflags 
write: ecx rflags 
--------------------------------------------------------------------------------
000c281e: RLP; test eax, eax ; je 0xc2c94
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c28ca: RLP; test eax, eax ; js 0xc2e06
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c2929: RLP; test eax, eax ; je 0xc2939
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c29f6: RLP; test eax, eax ; mov r8d, eax ; je 0xc2e44
read: eax rflags 
write: r8d rflags 
--------------------------------------------------------------------------------
000c2a6f: RLP; test eax, eax ; js 0xc2e06
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c2aa9: RLP; test eax, eax ; jne 0xc282d
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c2b47: RLP; movsxd r14, eax ; mov ebx, eax ; mov r13, r14 ; shl r13, 4 ; jmp 0xc2885
read: eax r13 r14 
write: ebx r13 r14 rflags 
--------------------------------------------------------------------------------
000c2b7b: RLP; test eax, eax ; jne 0xc2ccc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c2bcf: RLP; test rax, rax ; mov qword ptr [r12 + 8], rax ; je 0xc2e06
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c2bf0: RLP; mov rsi, qword ptr [rbp - 0x98] ; lea rdi, [r12 + 0x10] ; call 0xbf22c
read: rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
000c2c05: RLP; test eax, eax ; je 0xc282d
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c2c29: RLP; mov eax, dword ptr [rbp - 0x88] ; test eax, eax ; je 0xc2c43
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000c2c43: RLP; mov rdi, qword ptr [rbp - 0x78] ; call 0xbd52c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000c2c50: RLP; lea rsp, [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rsp 
--------------------------------------------------------------------------------
000c2c84: RLP; test eax, eax ; mov r8d, dword ptr [rbp - 0x68] ; je 0xc2a05
read: eax rflags 
write: r8d rflags 
--------------------------------------------------------------------------------
000c2cc2: RLP; mov ebx, eax ; jmp 0xc2835
read: eax 
write: ebx 
--------------------------------------------------------------------------------
000c2cf3: RLP; mov rax, qword ptr [rbp - 0x70] ; mov eax, dword ptr [rax + 4] ; jmp 0xc2873
read: 
write: eax rax 
--------------------------------------------------------------------------------
000c2d16: RLP; mov rax, qword ptr [rbp - 0x70] ; mov eax, dword ptr [rax + 4] ; jmp 0xc2873
read: 
write: eax rax 
--------------------------------------------------------------------------------
000c2d4f: RLP; test rax, rax ; je 0xc2e06
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c2d87: RLP; mov esi, dword ptr [rbp - 0x88] ; xor eax, eax ; test esi, esi ; je 0xc2c50
read: eax esi rflags 
write: eax esi rflags 
--------------------------------------------------------------------------------
000c2daa: RLP; mov eax, dword ptr [rbp - 0x68] ; jmp 0xc2c50
read: 
write: eax 
--------------------------------------------------------------------------------
000c2dc2: RLP; test eax, eax ; mov rdx, qword ptr [rbp - 0x68] ; jne 0xc2709
read: eax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
000c2dde: RLP; test rax, rax ; mov qword ptr [rbp - 0xa8], rax ; je 0xc2e2d
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c2e13: RLP; mov ecx, dword ptr [rbp - 0x88] ; test ecx, ecx ; je 0xc2e2d
read: ecx rflags 
write: ecx rflags 
--------------------------------------------------------------------------------
000c2e2d: RLP; mov rdi, qword ptr [rbp - 0x78] ; call 0xbd52c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000c2e3a: RLP; mov eax, 0xc ; jmp 0xc2c50
read: 
write: eax 
--------------------------------------------------------------------------------
000c2e60: RLP; mov edx, dword ptr [rbp - 0x88] ; mov eax, 1 ; test edx, edx ; je 0xc2c50
read: edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
000c2ebc: RLP; test eax, eax ; je 0xc2ed4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c2f66: RLP; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000c2f9c: RLP; test rax, rax ; mov ecx, dword ptr [rsp + 0xc] ; je 0xc3015
read: rax rflags 
write: ecx rflags 
--------------------------------------------------------------------------------
000c2fd9: RLP; shl dword ptr [rbx + 0x98], 1 ; mov edx, dword ptr [rbx + 0x94] ; mov ecx, dword ptr [rsp + 0xc] ; jmp 0xc2eee
read: 
write: ecx edx rflags 
--------------------------------------------------------------------------------
000c3025: RLP; mov eax, 0xc ; jmp 0xc2ec0
read: 
write: eax 
--------------------------------------------------------------------------------
000c312e: RLP; mov edx, ebx ; and dx, 0x3ff ; and ebx, 4 ; je 0xc313e
read: dx ebx rflags 
write: dx ebx edx rflags 
--------------------------------------------------------------------------------
000c319a: RLP; cmp eax, -1 ; je 0xc31d4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c32b5: RLP; test eax, eax ; mov r9, qword ptr [rsp + 0x18] ; mov r8d, dword ptr [rsp + 0x20] ; mov ecx, dword ptr [rsp + 0x28] ; jne 0xc350e
read: eax rflags 
write: ecx r8d r9 rflags 
--------------------------------------------------------------------------------
000c32ee: RLP; cmp eax, 1 ; mov r9, qword ptr [r15 + 8] ; ja 0xc373c
read: eax rflags 
write: r9 rflags 
--------------------------------------------------------------------------------
000c342c: RLP; cmp eax, 1 ; mov r10, qword ptr [rsp + 0x18] ; je 0xc34ad
read: eax rflags 
write: r10 rflags 
--------------------------------------------------------------------------------
000c3464: RLP; test rax, rax ; je 0xc37e9
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c34a8: RLP; mov r10, qword ptr [rsp + 0x18] ; add ebp, 1 ; add r15, 1 ; cmp dword ptr [rsp + 0x14], ebp ; jge 0xc336c
read: ebp r15 rflags 
write: ebp r10 r15 rflags 
--------------------------------------------------------------------------------
000c34f0: RLP; test rax, rax ; mov qword ptr [r13 + 8], rax ; je 0xc37e9
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c360c: RLP; mov rdi, qword ptr [rsp + 0x78] ; mov ecx, eax ; mov rax, qword ptr [r12 + 0x88] ; lea r10, [r13*8] ; lea r11, [rax + r10] ; mov rax, qword ptr [rax + rdi] ; mov rdx, qword ptr [r11] ; test rax, rax ; je 0xc37d4
read: eax rax rflags 
write: ecx r10 r11 rax rdi rdx rflags 
--------------------------------------------------------------------------------
000c366a: RLP; test eax, eax ; mov dword ptr [rsp + 0xac], eax ; mov ecx, dword ptr [rsp + 0x30] ; mov r10, qword ptr [rsp + 0x38] ; jne 0xc3838
read: eax rflags 
write: ecx r10 rflags 
--------------------------------------------------------------------------------
000c36ad: RLP; mov r10, qword ptr [rsp + 0x30] ; mov qword ptr [r10], rax ; mov rdi, qword ptr [rsp + 0xb8] ; call 0x1f46c
read: rax rip rsp 
write: r10 rdi rsp 
--------------------------------------------------------------------------------
000c36c6: RLP; mov rdx, qword ptr [r12 + 0x88] ; cmp qword ptr [rdx + r13*8], 0 ; je 0xc37bc
read: rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
000c3713: RLP; test eax, eax ; mov dword ptr [rsp + 0xac], eax ; jne 0xc373c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c372d: RLP; test eax, eax ; mov dword ptr [rsp + 0xac], eax ; je 0xc3584
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c37a1: RLP; mov r11, qword ptr [rsp + 0x30] ; mov qword ptr [r11], rax ; mov rdx, qword ptr [r12 + 0x88] ; cmp qword ptr [rdx + r13*8], 0 ; jne 0xc36d9
read: rax rflags 
write: r11 rdx rflags 
--------------------------------------------------------------------------------
000c381b: RLP; test eax, eax ; jne 0xc373c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c3849: RLP; mov eax, dword ptr [rsp + 0xac] ; jmp 0xc373c
read: 
write: eax 
--------------------------------------------------------------------------------
000c3876: RLP; test rax, rax ; je 0xc37e9
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c38bc: RLP; test eax, eax ; jne 0xc373c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c39ac: RLP; mov rcx, qword ptr [rsp] ; test eax, eax ; mov r9, qword ptr [rsp + 8] ; mov dword ptr [rcx], eax ; jne 0xc3ace
read: eax rflags 
write: r9 rcx rflags 
--------------------------------------------------------------------------------
000c39d9: RLP; mov r9, qword ptr [rsp + 8] ; add r9, qword ptr [rbx + 0x88] ; mov rdx, r14 ; mov rdi, qword ptr [rsp] ; mov ecx, eax ; mov rsi, rbp ; mov qword ptr [rsp + 8], r9 ; call 0xbf47c
read: eax r14 r9 rbp rip rsp 
write: ecx r9 rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000c39ff: RLP; mov r9, qword ptr [rsp + 8] ; test r15, r15 ; mov r14, rax ; mov qword ptr [r9], rax ; je 0xc393e
read: r15 rax rflags 
write: r14 r9 rflags 
--------------------------------------------------------------------------------
000c3a21: RLP; jmp 0xc393e
read: 
write: 
--------------------------------------------------------------------------------
000c3a50: RLP; mov rdi, qword ptr [rsp] ; lea rdx, [rsp + 0x10] ; mov ecx, eax ; mov rsi, rbp ; call 0xbf47c
read: eax rbp rip rsp 
write: ecx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000c3a67: RLP; mov r14, rax ; mov qword ptr [r15], r14 ; jmp 0xc393e
read: r14 rax 
write: r14 
--------------------------------------------------------------------------------
000c3a8d: RLP; mov rcx, qword ptr [rsp] ; test eax, eax ; mov dword ptr [rcx], eax ; jne 0xc3ace
read: eax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
000c3ab4: RLP; mov rcx, qword ptr [rsp] ; test eax, eax ; mov dword ptr [rcx], eax ; jne 0xc3ace
read: eax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
000c3b1c: RLP; test eax, eax ; jne 0xc3daa
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c3b39: RLP; test eax, eax ; mov dword ptr [rsp + 0x4c], eax ; jne 0xc3d98
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c3bfe: RLP; test eax, eax ; je 0xc3c7f
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c3c2b: RLP; test eax, eax ; je 0xc3c7f
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c3c62: RLP; test eax, eax ; jne 0xc3c7f
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c3c76: RLP; cmp eax, -1 ; je 0xc3e05
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c3cec: RLP; cmp eax, 0 ; mov ecx, eax ; mov r10, qword ptr [rsp + 0x18] ; jle 0xc3dbc
read: eax rflags 
write: ecx r10 rflags 
--------------------------------------------------------------------------------
000c3d44: RLP; test eax, eax ; mov ecx, dword ptr [rsp + 0x18] ; jne 0xc3c34
read: eax rflags 
write: ecx rflags 
--------------------------------------------------------------------------------
000c3d7e: RLP; test eax, eax ; jne 0xc3e0f
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c3da6: RLP; mov eax, dword ptr [rsp + 0x4c] ; add rsp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000c3de6: RLP; mov rdi, qword ptr [rsp + 0x58] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000c3df4: RLP; add rsp, 0x68 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: eax rsp 
write: eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000c4038: RLP; test eax, eax ; mov dword ptr [rsp + 0x44], eax ; jne 0xc4ea9
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c40f0: RLP; lea rdi, [r12*8] ; mov r13, rax ; mov qword ptr [rsp + 0x1b0], rax ; call 0x1f3cc
read: rax rip rsp 
write: r13 rdi rsp 
--------------------------------------------------------------------------------
000c410c: RLP; test r13, r13 ; mov qword ptr [rsp + 0x1c8], rax ; je 0xc53bf
read: r13 rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c416d: RLP; test rax, rax ; mov qword ptr [rsp + 0x198], rax ; je 0xc5407
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c43d5: RLP; test eax, eax ; mov dword ptr [rsp + 0x44], eax ; jne 0xc53a2
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c448b: RLP; test al, 1 ; je 0xc4c43
read: al rflags 
write: al rflags 
--------------------------------------------------------------------------------
000c458b: RLP; mov r15, rax ; test r15, r15 ; je 0xc471c
read: r15 rax rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
000c46f9: RLP; test eax, eax ; je 0xc4503
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c480d: RLP; mov dword ptr [rsp + 0x190], eax ; test bl, bl ; jne 0xc482e
read: bl eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c4876: RLP; test rax, rax ; mov rbx, rax ; je 0xc54d2
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000c489d: RLP; test rax, rax ; mov qword ptr [rsp + 8], rax ; je 0xc54d2
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c48d8: RLP; mov rax, qword ptr [rsp + 8] ; mov qword ptr [rsp + 0xe0], rbx ; mov rsi, r13 ; mov dword ptr [rsp + 0xf0], r15d ; mov dword ptr [rsp + 0xf4], r14d ; mov rdi, r12 ; mov qword ptr [rsp + 0xe8], rax ; mov qword ptr [r13 + 0x18], 0 ; mov qword ptr [r13 + 0x20], 0 ; call 0xc3adc
read: r12 r13 r14d r15d rax rbx rip rsp 
write: rax rdi rsi rsp 
--------------------------------------------------------------------------------
000c491c: RLP; mov rdi, qword ptr [rsp + 0x100] ; mov dword ptr [rsp + 0x24], eax ; call 0x1f46c
read: eax rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000c4931: RLP; mov eax, dword ptr [rsp + 0x24] ; test eax, eax ; jne 0xc4f3a
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000c4998: RLP; mov rdi, qword ptr [rsp + 8] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000c49a6: RLP; mov rdi, r12 ; call 0xbd42c
read: r12 rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000c49b2: RLP; mov ebx, dword ptr [rsp + 0xd4] ; add ebx, dword ptr [rsp + 0x60] ; cmp dword ptr [rsp + 0x40], ebx ; mov dword ptr [rsp + 0xd4], ebx ; jl 0xc49d4
read: ebx rflags 
write: ebx rflags 
--------------------------------------------------------------------------------
000c49f0: RLP; mov rax, qword ptr [rsp + 0x38] ; mov eax, dword ptr [rax + 0x8c] ; test eax, eax ; jne 0xc4eb6
read: eax rflags 
write: eax rax rflags 
--------------------------------------------------------------------------------
000c4a0f: RLP; mov eax, dword ptr [rsp + 0x44] ; add rsp, 0x1d8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000c4a46: RLP; mov r8d, dword ptr [rsp + 0xd8] ; test r8d, r8d ; jne 0xc4a64
read: r8d rflags 
write: r8d rflags 
--------------------------------------------------------------------------------
000c4ad8: RLP; mov rdi, qword ptr [rsp + 0x100] ; mov dword ptr [rsp + 8], eax ; call 0x1f46c
read: eax rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000c4aed: RLP; mov eax, dword ptr [rsp + 8] ; test eax, eax ; jne 0xc4f31
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000c4b17: RLP; mov qword ptr [rsp + 0x198], rbx ; mov dword ptr [rsp + 0x190], r15d ; mov dword ptr [rsp + 0x18c], ebp ; cmp qword ptr [rsp + 0x58], 0 ; je 0xc4ea9
read: ebp r15d rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
000c4bee: RLP; test eax, eax ; je 0xc4dab
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c4c22: RLP; mov r15d, eax ; lea eax, [r14 + 1] ; mov dword ptr [rsp + 0x18], eax ; jmp 0xc48b8
read: eax 
write: eax r15d 
--------------------------------------------------------------------------------
000c4c80: RLP; mov r14, rax ; jmp 0xc4497
read: rax 
write: r14 
--------------------------------------------------------------------------------
000c4ec2: RLP; mov rdi, qword ptr [rsp + 0x1c8] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000c4ed3: RLP; mov rdi, qword ptr [rsp + 0x1b0] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000c4ee4: RLP; jmp 0xc4a03
read: 
write: 
--------------------------------------------------------------------------------
000c4f15: RLP; mov rdi, r13 ; mov dword ptr [rsp + 8], eax ; call 0x1f46c
read: eax r13 rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000c4f25: RLP; mov eax, dword ptr [rsp + 8] ; test eax, eax ; je 0xc4b03
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000c4f4a: RLP; mov rdi, qword ptr [rsp + 8] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000c4f58: RLP; mov eax, dword ptr [rsp + 0x18] ; cmp eax, 1 ; je 0xc49a6
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000c4fc8: RLP; test al, 1 ; je 0xc5311
read: al rflags 
write: al rflags 
--------------------------------------------------------------------------------
000c50a8: RLP; mov ecx, dword ptr [rsp + 0xbc] ; mov r8d, dword ptr [rsp + 0xa8] ; mov r10d, dword ptr [rsp + 0xb8] ; mov r9, qword ptr [rsp + 0xb0] ; shr ecx, 8 ; mov edx, ecx ; and dx, 0x3ff ; and ecx, 4 ; je 0xc50de
read: dx ecx rflags 
write: dx ecx edx r10d r8d r9 rflags 
--------------------------------------------------------------------------------
000c5122: RLP; test eax, eax ; je 0xc502c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c515b: RLP; test eax, eax ; mov dword ptr [rsp + 0xdc], eax ; jne 0xc543d
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c51c6: RLP; test eax, eax ; mov dword ptr [rsp + 0xdc], eax ; mov ecx, dword ptr [rsp + 0xb8] ; jne 0xc543d
read: eax rflags 
write: ecx rflags 
--------------------------------------------------------------------------------
000c51f2: RLP; mov r8, qword ptr [rsp + 0xa8] ; add r8, qword ptr [rsp + 0x198] ; mov ecx, eax ; mov rdi, qword ptr [rsp + 0xa0] ; mov rdx, qword ptr [rsp + 0x68] ; mov rsi, r12 ; mov qword ptr [rsp + 0xa8], r8 ; call 0xbf47c
read: eax r12 r8 rip rsp 
write: ecx r8 rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000c5225: RLP; mov r8, qword ptr [rsp + 0xa8] ; mov qword ptr [r8], rax ; mov rdi, qword ptr [rsp + 0xe8] ; call 0x1f46c
read: rax rip rsp 
write: r8 rdi rsp 
--------------------------------------------------------------------------------
000c5241: RLP; mov rdx, qword ptr [rsp + 0x198] ; cmp qword ptr [rdx + rbx*8], 0 ; jne 0xc502c
read: rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
000c52e6: RLP; mov rdx, qword ptr [rsp + 0x68] ; mov rdi, qword ptr [rsp + 0xa0] ; mov ecx, eax ; mov rsi, r12 ; call 0xbf47c
read: eax r12 rip rsp 
write: ecx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000c5301: RLP; mov r8, qword ptr [rsp + 0xa8] ; mov qword ptr [r8], rax ; jmp 0xc5241
read: rax 
write: r8 
--------------------------------------------------------------------------------
000c5348: RLP; test eax, eax ; mov dword ptr [rsp + 0xd8], eax ; jne 0xc5416
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c538b: RLP; test eax, eax ; mov r9d, dword ptr [rsp + 8] ; jne 0xc53f3
read: eax rflags 
write: r9d rflags 
--------------------------------------------------------------------------------
000c5470: RLP; test eax, eax ; jne 0xc4559
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c54e1: RLP; mov eax, 0xc ; jmp 0xc4bf6
read: 
write: eax 
--------------------------------------------------------------------------------
000c5500: RLP; test eax, eax ; mov dword ptr [rsp + 0xd8], eax ; jne 0xc5580
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c5538: RLP; test eax, eax ; je 0xc44d1
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c556e: RLP; test eax, eax ; mov dword ptr [rsp + 0xd8], eax ; jne 0xc5580
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c5625: RLP; mov rbp, rax ; mov eax, dword ptr [rsp + 0x80] ; test eax, eax ; jne 0xc56fb
read: eax rax rflags 
write: eax rbp rflags 
--------------------------------------------------------------------------------
000c5666: RLP; test eax, eax ; mov dword ptr [rsp + 0x7c], eax ; jne 0xc56fb
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c569e: RLP; mov qword ptr [rbp], rax ; mov eax, dword ptr [rsp + 0x7c] ; test eax, eax ; jne 0xc56fb
read: eax rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000c5732: RLP; cmp eax, -1 ; mov dword ptr [rsp + 0x60], eax ; je 0xc56b2
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c58b1: RLP; test eax, eax ; mov r8d, dword ptr [rsp + 0x20] ; mov r9d, dword ptr [rsp + 8] ; je 0xc583c
read: eax rflags 
write: r8d r9d rflags 
--------------------------------------------------------------------------------
000c58dd: RLP; test eax, eax ; jne 0xc583c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c591b: RLP; test eax, eax ; js 0xc5d6f
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c5947: RLP; test eax, eax ; jne 0xc5a4e
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c5970: RLP; test eax, eax ; jne 0xc5a4e
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c59a4: RLP; lea rdi, [r15 + 0x18] ; lea esi, [rax - 1] ; mov r15, rbp ; call 0xbdcec
read: rbp rip rsp 
write: esi r15 rdi rsp 
--------------------------------------------------------------------------------
000c59b7: RLP; mov rax, qword ptr [rsp + 0x38] ; add r15, qword ptr [rax + 0xa0] ; jmp 0xc583c
read: r15 
write: r15 rax rflags 
--------------------------------------------------------------------------------
000c5a42: RLP; test eax, eax ; je 0xc58f4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c5a6e: RLP; mov eax, dword ptr [rsp + 4] ; test eax, eax ; jne 0xc56fb
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000c5aa5: RLP; test rax, rax ; mov qword ptr [rbp + 0x30], rax ; mov r10, qword ptr [rsp + 8] ; je 0xc5d79
read: rax rflags 
write: r10 rflags 
--------------------------------------------------------------------------------
000c5afc: RLP; test eax, eax ; mov dword ptr [rsp + 0x80], eax ; jne 0xc5d79
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c5be4: RLP; test eax, eax ; jne 0xc56fb
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c5c97: RLP; test eax, eax ; jne 0xc56fb
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c5d01: RLP; test eax, eax ; jne 0xc5ccc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c5d1e: RLP; test eax, eax ; jne 0xc5ccc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c5d39: RLP; test eax, eax ; jne 0xc56fb
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c5e1c: RLP; test eax, eax ; mov ecx, 1 ; mov rdx, qword ptr [rsp + 8] ; je 0xc5f0c
read: eax rflags 
write: ecx rdx rflags 
--------------------------------------------------------------------------------
000c5ecb: RLP; test eax, eax ; mov ecx, 1 ; mov rdx, qword ptr [rsp + 8] ; je 0xc5f7c
read: eax rflags 
write: ecx rdx rflags 
--------------------------------------------------------------------------------
000c5fd4: RLP; movzx eax, byte ptr [rsp + 0x18] ; sub dword ptr [rbx + 0x38], 1 ; lea edx, [rax - 9] ; mov eax, 1 ; cmp dl, 1 ; ja 0xc5e62
read: dl rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
000c64e4: RLP; add ebx, eax ; mov dword ptr [r12 + 0x38], ebx ; movzx ecx, byte ptr [rbp + 8] ; movzx eax, byte ptr [rbp] ; cmp cl, 2 ; je 0xc6552
read: cl eax ebx rflags 
write: eax ebx ecx rflags 
--------------------------------------------------------------------------------
000c6612: RLP; test rax, rax ; mov qword ptr [rsp + 0x40], rax ; je 0xc81af
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c6652: RLP; add r13d, eax ; mov rcx, qword ptr [rsp + 0x20] ; mov dword ptr [r14 + 0x38], r13d ; movzx eax, byte ptr [r15 + 8] ; lea r14, [rcx + 0x70] ; lea r13, [rcx + 0x80] ; mov rcx, rbx ; and ecx, 0x200000 ; cmp al, 0x12 ; mov qword ptr [rsp + 0x60], rcx ; sete bpl ; je 0xc678d
read: al eax ecx r13d rbx rcx rflags 
write: bpl eax ecx r13 r13d r14 rcx rflags 
--------------------------------------------------------------------------------
000c66db: RLP; cmp eax, -1 ; mov ebp, eax ; mov rcx, qword ptr [rsp + 0x10] ; mov rbx, qword ptr [rsp + 0x18] ; je 0xc69b4
read: eax rflags 
write: ebp rbx rcx rflags 
--------------------------------------------------------------------------------
000c67dc: RLP; add ebx, eax ; cmp qword ptr [rsp + 0x40], 0 ; mov dword ptr [r15 + 0x38], ebx ; je 0xc81c1
read: eax ebx rflags 
write: ebx rflags 
--------------------------------------------------------------------------------
000c6843: RLP; test rax, rax ; mov r15, rax ; je 0xc6ab6
read: rax rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
000c686d: RLP; mov r8, r12 ; mov rcx, rax ; mov rdx, r15 ; mov rsi, r13 ; mov rdi, r14 ; mov rbx, rax ; mov byte ptr [rsp + 0x138], 0x10 ; call 0xbe30c
read: r12 r13 r14 r15 rax rip rsp 
write: r8 rbx rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000c6890: RLP; test rax, rax ; je 0xc6ab6
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c68c1: RLP; test rax, rax ; mov r15, rax ; je 0xc6ab6
read: rax rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
000c6901: RLP; mov qword ptr [rsp + 0x30], rax ; jmp 0xc6744
read: rax 
write: 
--------------------------------------------------------------------------------
000c6928: RLP; mov ebp, dword ptr [r14] ; test ebp, ebp ; jne 0xc6963
read: ebp rflags 
write: ebp rflags 
--------------------------------------------------------------------------------
000c6958: RLP; mov rax, qword ptr [rsp + 0x58] ; mov dword ptr [rax], 8 ; xor eax, eax ; add rsp, 0x158 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: eax rsp 
write: eax r12 r13 r14 r15 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000c69af: RLP; jmp 0xc681a
read: 
write: 
--------------------------------------------------------------------------------
000c69f0: RLP; cmp eax, -2 ; mov dword ptr [rsp + 0x10], eax ; mov rcx, qword ptr [rsp + 0x30] ; mov rbx, qword ptr [rsp + 0x38] ; je 0xc670e
read: eax rflags 
write: rbx rcx rflags 
--------------------------------------------------------------------------------
000c6a87: RLP; mov rdx, qword ptr [rsp + 0x30] ; mov r8, r12 ; mov rcx, rax ; mov rsi, r13 ; mov rdi, r14 ; mov rbx, rax ; mov byte ptr [rsp + 0x138], 0x10 ; call 0xbe30c
read: r12 r13 r14 rax rip rsp 
write: r8 rbx rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000c6aac: RLP; test rax, rax ; mov qword ptr [rsp + 0x30], rax ; jne 0xc6a64
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c6ae1: RLP; xor eax, eax ; jmp 0xc6965
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
000c6b26: RLP; mov rax, qword ptr [rsp + 0x58] ; mov dword ptr [rax], 0xd ; xor eax, eax ; jmp 0xc6965
read: eax 
write: eax rax rflags 
--------------------------------------------------------------------------------
000c6b89: RLP; mov ebp, dword ptr [r14] ; mov qword ptr [rsp + 0x40], rax ; test ebp, ebp ; jne 0xc7b0e
read: ebp rax rflags 
write: ebp rflags 
--------------------------------------------------------------------------------
000c6c0e: RLP; mov rdx, qword ptr [rsp + 0x28] ; add ebp, eax ; mov rax, r14 ; mov dword ptr [r14 + 0x38], ebp ; cmp byte ptr [rdx + 8], 9 ; jne 0xc690b
read: eax ebp r14 rflags 
write: ebp rax rdx rflags 
--------------------------------------------------------------------------------
000c6c74: RLP; test rax, rax ; mov qword ptr [rsp + 0x40], rax ; je 0xc7afe
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c6d13: RLP; test rax, rax ; mov qword ptr [rsp + 0x40], rax ; je 0xc81af
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c6d68: RLP; test rax, rax ; mov qword ptr [rsp + 0x40], rax ; je 0xc81af
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c6e08: RLP; mov dword ptr [r14], 0xa ; mov r12, rax ; mov r8, qword ptr [rsp + 0x28] ; xor ecx, ecx ; xor edx, edx ; mov rdi, rbx ; mov rsi, rbp ; call 0xbe30c
read: ecx edx rax rbp rbx rip rsp 
write: ecx edx r12 r8 rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000c6e2a: RLP; lea r8, [rsp + 0x130] ; mov rdi, rbx ; mov rcx, rax ; mov rdx, r12 ; mov rsi, rbp ; mov r13, rax ; mov byte ptr [rsp + 0x138], 0xa ; call 0xbe30c
read: r12 rax rbp rbx rip rsp 
write: r13 r8 rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000c6e52: RLP; test r12, r12 ; mov rbx, rax ; je 0xc81af
read: r12 rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000c6e8f: RLP; add ebp, eax ; mov rax, rbx ; mov dword ptr [r14 + 0x38], ebp ; jmp 0xc6965
read: eax ebp rbx 
write: ebp rax rflags 
--------------------------------------------------------------------------------
000c6ec9: RLP; test rax, rax ; mov qword ptr [rsp + 0x40], rax ; je 0xc81af
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c6f31: RLP; mov r8, qword ptr [rsp + 0x28] ; add r13d, eax ; xor ecx, ecx ; xor edx, edx ; mov dword ptr [r14 + 0x38], r13d ; mov rsi, rbp ; mov rdi, rbx ; call 0xbe30c
read: eax ecx edx r13d rbp rbx rip rsp 
write: ecx edx r13d r8 rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000c6f50: RLP; mov rdx, r15 ; mov r8, r12 ; mov rcx, rax ; mov rsi, rbp ; mov rdi, rbx ; mov r13, rax ; mov byte ptr [rsp + 0x138], 0x10 ; call 0xbe30c
read: r12 r15 rax rbp rbx rip rsp 
write: r13 r8 rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000c6f73: RLP; test rax, rax ; mov r15, rax ; je 0xc81af
read: rax rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
000c701c: RLP; mov esi, 1 ; mov edi, 0x48 ; mov r15, rax ; call 0x1f44c
read: rax rip rsp 
write: edi esi r15 rsp 
--------------------------------------------------------------------------------
000c7032: RLP; test rax, rax ; mov r13, rax ; je 0xc7ae6
read: rax rflags 
write: r13 rflags 
--------------------------------------------------------------------------------
000c7062: RLP; mov dword ptr [rsp + 0x30], eax ; movzx eax, byte ptr [rbx + 8] ; cmp al, 2 ; je 0xc7ad6
read: al eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000c7152: RLP; test eax, eax ; jne 0xc7964
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c7172: RLP; mov dword ptr [rsp + 0x30], eax ; mov eax, dword ptr [rsp + 0xe0] ; cmp eax, 2 ; setne r14b ; cmp eax, 4 ; setne dl ; and r14b, dl ; je 0xc71aa
read: dl eax r14b rflags 
write: dl eax r14b rflags 
--------------------------------------------------------------------------------
000c71db: RLP; test ebp, ebp ; mov r12, rax ; jne 0xc74c8
read: ebp rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
000c73e8: RLP; mov rdx, qword ptr [rsp + 0x58] ; test eax, eax ; mov dword ptr [rdx], eax ; je 0xc7216
read: eax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
000c7539: RLP; test eax, eax ; mov rcx, qword ptr [rsp + 0x90] ; jne 0xc74e1
read: eax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
000c75a4: RLP; mov rdi, r13 ; call 0xbd09c
read: r13 rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000c75b0: RLP; mov rax, qword ptr [rsp + 0x58] ; mov r12d, dword ptr [rax] ; test r12d, r12d ; jne 0xc6963
read: r12d rflags 
write: r12d rax rflags 
--------------------------------------------------------------------------------
000c768f: RLP; test rax, rax ; mov qword ptr [rsp + 0x40], rax ; je 0xc7715
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c76c4: RLP; jmp 0xc6620
read: 
write: 
--------------------------------------------------------------------------------
000c76d5: RLP; mov rax, qword ptr [rsp + 0x20] ; mov r8, qword ptr [rsp + 0x70] ; xor ecx, ecx ; xor edx, edx ; mov byte ptr [rsp + 0x118], 3 ; mov qword ptr [rsp + 0x110], r15 ; lea rsi, [rax + 0x80] ; lea rdi, [rax + 0x70] ; call 0xbe30c
read: ecx edx r15 rip rsp 
write: ecx edx r8 rax rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000c7707: RLP; test rax, rax ; mov qword ptr [rsp + 0x40], rax ; jne 0xc6620
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c774d: RLP; test rax, rax ; je 0xc7715
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c7779: RLP; test rax, rax ; mov qword ptr [rsp + 0x40], rax ; jne 0xc6620
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c77be: RLP; test rax, rax ; je 0xc7715
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c78eb: RLP; cmp rax, 1 ; jne 0xc795f
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c79d9: RLP; test rax, rax ; je 0xc7a4f
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c7aba: RLP; mov dword ptr [rsp + 0x30], eax ; movzx eax, byte ptr [rbx + 8] ; cmp al, 2 ; je 0xc7ad6
read: al eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000c7af2: RLP; mov rdi, r13 ; call 0x1f46c
read: r13 rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000c7afe: RLP; mov rax, qword ptr [rsp + 0x58] ; mov dword ptr [rax], 0xc ; jmp 0xc6963
read: 
write: rax 
--------------------------------------------------------------------------------
000c7b44: RLP; movzx edx, byte ptr [rsp + 0x108] ; cmp dl, 2 ; je 0xc8084
read: dl rflags 
write: edx rflags 
--------------------------------------------------------------------------------
000c7b99: RLP; test eax, eax ; jne 0xc7964
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c7bb9: RLP; mov dword ptr [rsp + 0x30], eax ; mov eax, dword ptr [rsp + 0xe0] ; cmp eax, 4 ; je 0xc7dc2
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000c7d04: RLP; mov rdi, qword ptr [rsp + 0x68] ; mov esi, eax ; call 0x2e89c
read: eax rip rsp 
write: esi rdi rsp 
--------------------------------------------------------------------------------
000c7d14: RLP; mov edx, dword ptr [rsp + 0x98] ; mov r8, qword ptr [rsp + 0x90] ; jmp 0xc7cb6
read: 
write: edx r8 
--------------------------------------------------------------------------------
000c7d57: RLP; mov rcx, qword ptr [rsp + 0x88] ; mov rdi, qword ptr [r13 + 0x20] ; mov r14, rax ; mov rsi, rcx ; call 0x1f3ac
read: rax rcx rip rsp 
write: r14 rcx rdi rsi rsp 
--------------------------------------------------------------------------------
000c7d72: RLP; test rax, rax ; je 0xc7daf
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c7dfa: RLP; test ebp, ebp ; mov r8, rax ; mov rcx, qword ptr [rsp + 0x88] ; je 0xc7e6c
read: ebp rax rflags 
write: r8 rcx rflags 
--------------------------------------------------------------------------------
000c7eac: RLP; cmp r12d, -1 ; mov edx, eax ; sete r14b ; jmp 0xc7c35
read: eax r12d rflags 
write: edx r14b rflags 
--------------------------------------------------------------------------------
000c7ee7: RLP; test eax, eax ; mov r8, qword ptr [rsp + 0x90] ; mov r9d, dword ptr [rsp + 0x98] ; mov r11d, dword ptr [rsp + 0xac] ; jne 0xc7e53
read: eax rflags 
write: r11d r8 r9d rflags 
--------------------------------------------------------------------------------
000c7f4e: RLP; mov rdi, qword ptr [rsp + 0x68] ; mov esi, eax ; call 0x2e89c
read: eax rip rsp 
write: esi rdi rsp 
--------------------------------------------------------------------------------
000c7f5e: RLP; mov ecx, dword ptr [rsp + 0xf0] ; mov r12d, eax ; test ecx, ecx ; jne 0xc7dcc
read: eax ecx rflags 
write: ecx r12d rflags 
--------------------------------------------------------------------------------
000c7f89: RLP; mov rdi, qword ptr [rsp + 0x68] ; mov esi, eax ; call 0x2e89c
read: eax rip rsp 
write: esi rdi rsp 
--------------------------------------------------------------------------------
000c7f99: RLP; mov edx, eax ; jmp 0xc7c35
read: eax 
write: edx 
--------------------------------------------------------------------------------
000c7fe9: RLP; test ebp, ebp ; mov r9, rax ; mov r8, qword ptr [rsp + 0x88] ; mov ecx, dword ptr [rsp + 0x90] ; je 0xc816e
read: ebp rax rflags 
write: ecx r8 r9 rflags 
--------------------------------------------------------------------------------
000c80d8: RLP; mov ecx, dword ptr [rsp + 0xf0] ; mov r12d, eax ; jmp 0xc7f68
read: eax 
write: ecx r12d 
--------------------------------------------------------------------------------
000c811a: RLP; test eax, eax ; mov r8, qword ptr [rsp + 0x88] ; mov r9, qword ptr [rsp + 0x90] ; mov ecx, dword ptr [rsp + 0x98] ; mov r11d, dword ptr [rsp + 0xac] ; jne 0xc804d
read: eax rflags 
write: ecx r11d r8 r9 rflags 
--------------------------------------------------------------------------------
000c8214: RLP; mov r9, qword ptr [rsp + 0x58] ; mov r8d, dword ptr [rsp + 0x10] ; mov rcx, rbp ; add ebx, eax ; mov rdx, r15 ; mov rsi, r12 ; mov dword ptr [r14 + 0x38], ebx ; mov rdi, r14 ; call 0xc655c
read: eax ebx r12 r14 r15 rbp rip rsp 
write: ebx r8d r9 rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000c8239: RLP; jmp 0xc6965
read: 
write: 
--------------------------------------------------------------------------------
000c832f: RLP; mov rax, qword ptr [rsp + 0x58] ; mov eax, dword ptr [rax] ; jmp 0xc81c8
read: 
write: eax rax 
--------------------------------------------------------------------------------
000c8356: RLP; test rax, rax ; mov rbx, rax ; jne 0xc6810
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000c8399: RLP; mov dword ptr [r14], 9 ; mov r12, rax ; jmp 0xc6e12
read: rax 
write: r12 
--------------------------------------------------------------------------------
000c83ce: RLP; mov rbx, rax ; jmp 0xc6e67
read: rax 
write: rbx 
--------------------------------------------------------------------------------
000c840e: RLP; test rax, rax ; je 0xc7daf
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c8463: RLP; mov r14, rax ; mov eax, dword ptr [rbx] ; mov r11, qword ptr [rsp + 0x10] ; test eax, eax ; jne 0xc85ca
read: eax rax rflags 
write: eax r11 r14 rflags 
--------------------------------------------------------------------------------
000c84e3: RLP; mov rbp, rax ; mov eax, dword ptr [r13] ; test eax, eax ; jne 0xc859c
read: eax rax rflags 
write: eax rbp rflags 
--------------------------------------------------------------------------------
000c854c: RLP; test rax, rax ; je 0xc8559
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c856e: RLP; lea rsi, [rip - 0xb419] ; xor edx, edx ; mov rdi, r14 ; call 0xbbaac
read: edx r14 rip rsp 
write: edx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000c8583: RLP; mov dword ptr [r13], 0xc ; xor eax, eax ; add rsp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: eax rsp 
write: eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000c85c3: RLP; xor eax, eax ; jmp 0xc8511
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
000c8610: RLP; mov r12, rax ; mov eax, dword ptr [r15] ; test eax, eax ; jne 0xc8730
read: eax rax rflags 
write: eax r12 rflags 
--------------------------------------------------------------------------------
000c8680: RLP; mov rcx, rax ; mov eax, dword ptr [r15] ; test eax, eax ; jne 0xc8709
read: eax rax rflags 
write: eax rcx rflags 
--------------------------------------------------------------------------------
000c86aa: RLP; test rax, rax ; mov r12, rax ; je 0xc86fe
read: rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
000c86cf: RLP; add r13d, eax ; mov dword ptr [rbp + 0x38], r13d ; movzx eax, byte ptr [rbx + 8] ; mov edx, eax ; and edx, 0xfffffff7 ; cmp dl, 2 ; jne 0xc8654
read: dl eax edx r13d rflags 
write: eax edx r13d rflags 
--------------------------------------------------------------------------------
000c872c: RLP; xor eax, eax ; jmp 0xc86ef
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
000c8839: RLP; mov rax, qword ptr [rsp + 0x20] ; mov qword ptr [rax], 0 ; mov qword ptr [rax + 8], 0 ; mov eax, dword ptr [rsp + 0x4c] ; add rsp, 0xe8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: eax r12 r13 r14 r15 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000c887c: RLP; test r15, r15 ; mov rbx, rax ; mov qword ptr [r12], rax ; je 0xc943c
read: r15 rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000c88ae: RLP; mov qword ptr [r12 + 0x40], rax ; mov rax, qword ptr [rip + 0x2a0502] ; mov dword ptr [r12 + 0x84], ebp ; mov rax, qword ptr fs:[rax] ; mov rdx, qword ptr [rax] ; mov ecx, dword ptr [rdx + 0xa8] ; cmp ecx, 6 ; mov dword ptr [r12 + 0xa4], ecx ; je 0xc92f3
read: ebp ecx rax rflags 
write: ecx rax rdx rflags 
--------------------------------------------------------------------------------
000c8a19: RLP; test eax, eax ; jne 0xc9658
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c8a84: RLP; test eax, eax ; jne 0xc9658
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c8a9d: RLP; test eax, eax ; jne 0xc9658
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c8b01: RLP; mov rdi, qword ptr [rsp + 0x10] ; lea r9, [rsp + 0x4c] ; add ebp, eax ; xor r8d, r8d ; mov rcx, r14 ; mov rdx, r13 ; mov rsi, r15 ; mov dword ptr [rsp + 0xa8], ebp ; call 0xc85dc
read: eax ebp r13 r14 r15 r8d rip rsp 
write: ebp r8d r9 rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000c8b29: RLP; mov r9, rax ; mov eax, dword ptr [rsp + 0x4c] ; test eax, eax ; jne 0xc95cd
read: eax rax rflags 
write: eax r9 rflags 
--------------------------------------------------------------------------------
000c8b6a: RLP; mov r9, qword ptr [rsp + 8] ; mov r15, rax ; test r9, r9 ; je 0xc8b96
read: r9 rax rflags 
write: r15 r9 rflags 
--------------------------------------------------------------------------------
000c8b96: RLP; test rax, rax ; je 0xc9611
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c8bd6: RLP; mov rdx, qword ptr [rsp + 8] ; mov qword ptr [r15 + 0x18], rax ; mov rbp, rax ; mov rdi, rdx ; call 0x1f3cc
read: rax rdx rip rsp 
write: rbp rdi rdx rsp 
--------------------------------------------------------------------------------
000c8bee: RLP; mov rdi, rbx ; mov qword ptr [r15 + 0x20], rax ; mov qword ptr [rsp + 8], rbx ; mov qword ptr [rsp + 0x38], rax ; call 0x1f3cc
read: rax rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000c8c08: RLP; mov rdx, qword ptr [rsp + 8] ; mov qword ptr [r15 + 0x28], rax ; mov rbx, rax ; mov rdi, rdx ; call 0x1f3cc
read: rax rdx rip rsp 
write: rbx rdi rdx rsp 
--------------------------------------------------------------------------------
000c8c20: RLP; test rbp, rbp ; mov qword ptr [r15 + 0x30], rax ; mov rcx, qword ptr [rsp + 0x38] ; je 0xc9639
read: rax rbp rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
000c8c67: RLP; test rax, rax ; mov qword ptr [r15 + 0xd0], rax ; je 0xc8cef
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c8caa: RLP; mov rax, qword ptr [rsp + 0x20] ; mov rsi, qword ptr [rax + 0x30] ; test rsi, rsi ; je 0xc941c
read: rflags rsi 
write: rax rflags rsi 
--------------------------------------------------------------------------------
000c8d08: RLP; test eax, eax ; jne 0xc958e
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c8d27: RLP; test eax, eax ; jne 0xc958e
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c8d46: RLP; mov rdi, qword ptr [r15 + 0x68] ; lea rsi, [rip - 0xcb65] ; mov rdx, r15 ; call 0xbbb1c
read: r15 rip rsp 
write: rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000c8d5d: RLP; test eax, eax ; jne 0xc958e
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c8dae: RLP; test eax, eax ; mov r8d, dword ptr [rsp + 8] ; jne 0xc958e
read: eax rflags 
write: r8d rflags 
--------------------------------------------------------------------------------
000c8dfa: RLP; mov r8d, 1 ; jmp 0xc8dc9
read: 
write: r8d 
--------------------------------------------------------------------------------
000c8e22: RLP; jmp 0xc8aae
read: 
write: 
--------------------------------------------------------------------------------
000c8e69: RLP; test rax, rax ; mov qword ptr [r15 + 0x38], rax ; mov rdx, qword ptr [rsp + 8] ; je 0xc9646
read: rax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
000c8f13: RLP; cmp eax, -1 ; je 0xc9448
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c8f9c: RLP; test eax, eax ; mov dword ptr [rsp + 0x50], eax ; jne 0xc90db
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c9056: RLP; test eax, eax ; jne 0xc8fdc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c9074: RLP; test eax, eax ; jne 0xc90db
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c90a4: RLP; test rax, rax ; mov qword ptr [r12 + 0x48], rax ; je 0xc9240
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c90d9: RLP; xor eax, eax ; mov dword ptr [rsp + 0x4c], eax ; mov rax, qword ptr [rsp + 0x20] ; mov rbp, qword ptr [rax] ; mov rdi, qword ptr [rbp + 0x70] ; test rdi, rdi ; jne 0xc90ff
read: eax rdi rflags 
write: eax rax rbp rdi rflags 
--------------------------------------------------------------------------------
000c910b: RLP; test rbx, rbx ; jne 0xc90fc
read: rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
000c9137: RLP; mov rdi, qword ptr [rsp + 0x10] ; mov qword ptr [rbp + 0x20], 0 ; call 0xbd1fc
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000c914d: RLP; mov edx, dword ptr [rsp + 0x4c] ; test edx, edx ; jne 0xc882d
read: edx rflags 
write: edx rflags 
--------------------------------------------------------------------------------
000c91ea: RLP; mov ecx, 2 ; mov rdx, r14 ; mov rsi, r12 ; mov rdi, rbx ; mov qword ptr [r12 + 0x50], rax ; call 0xbf47c
read: r12 r14 rax rbx rip rsp 
write: ecx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000c9206: RLP; mov ecx, 6 ; mov qword ptr [r12 + 0x58], rax ; mov rdx, r14 ; mov rsi, r12 ; mov rdi, rbx ; call 0xbf47c
read: r12 r14 rax rbx rip rsp 
write: ecx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000c9222: RLP; cmp qword ptr [r12 + 0x50], 0 ; mov qword ptr [r12 + 0x60], rax ; je 0xc9240
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c9257: RLP; jmp 0xc8aae
read: 
write: 
--------------------------------------------------------------------------------
000c9289: RLP; test rax, rax ; mov qword ptr [r12 + 0x78], rax ; je 0xc8825
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c92bd: RLP; cmp eax, -1 ; je 0xc92d6
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c9395: RLP; jmp 0xc8aae
read: 
write: 
--------------------------------------------------------------------------------
000c942c: RLP; mov qword ptr [r15 + 0xd0], 0 ; jmp 0xc8cef
read: 
write: 
--------------------------------------------------------------------------------
000c947b: RLP; test rbp, rbp ; jne 0xc946c
read: rbp rflags 
write: rflags 
--------------------------------------------------------------------------------
000c94a7: RLP; mov rdi, qword ptr [rsp + 0x10] ; mov qword ptr [rbx + 0x20], 0 ; call 0xbd1fc
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000c94bd: RLP; jmp 0xc882d
read: 
write: 
--------------------------------------------------------------------------------
000c95b0: RLP; test rax, rax ; mov r12, rax ; je 0xc962f
read: rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
000c9604: RLP; mov r9, qword ptr [rsp + 8] ; mov r15, rax ; jmp 0xc8b77
read: rax 
write: r15 r9 
--------------------------------------------------------------------------------
000c96b2: RLP; movsxd rdx, eax ; xor eax, eax ; test edx, edx ; je 0xc96e2
read: eax edx rflags 
write: eax rdx rflags 
--------------------------------------------------------------------------------
000c96e2: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000c9791: RLP; mov rax, qword ptr [rbp + 0x48] ; mov rsi, qword ptr [rbp + 0x50] ; cmp rax, rsi ; je 0xc97b9
read: rax rflags rsi 
write: rax rflags rsi 
--------------------------------------------------------------------------------
000c97b5: RLP; mov rax, qword ptr [rbp + 0x48] ; mov rsi, qword ptr [rbp + 0x58] ; cmp rsi, rax ; je 0xc97dd
read: rax rflags rsi 
write: rax rflags rsi 
--------------------------------------------------------------------------------
000c97d9: RLP; mov rax, qword ptr [rbp + 0x48] ; mov rsi, qword ptr [rbp + 0x60] ; cmp rsi, rax ; je 0xc97fd
read: rax rflags rsi 
write: rax rflags rsi 
--------------------------------------------------------------------------------
000c97fd: RLP; or byte ptr [rbx + 0x38], 8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
read: eax rsp 
write: eax r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000c98fe: RLP; add rsp, 0x80 ; movzx eax, byte ptr [r14 + 0x38] ; mov esi, eax ; mov ecx, eax ; shr sil, 5 ; shr ecx, 5 ; and esi, 1 ; and ecx, 2 ; or ecx, esi ; test r8d, r8d ; jle 0xc9931
read: eax ecx esi r8d rflags rsp sil 
write: eax ecx esi rflags rsp sil 
--------------------------------------------------------------------------------
000c9983: RLP; test rax, rax ; mov rbp, rax ; je 0xc9c3f
read: rax rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
000c99c7: RLP; test eax, eax ; jne 0xc9aac
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c9abd: RLP; cmp dword ptr [rip + 0x2a4cac], 0 ; je 0xc9ad3
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000c9af5: RLP; add rsp, 0x80 ; mov eax, ebx ; add rsp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: ebx rsp 
write: eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000c9b3a: RLP; movzx eax, byte ptr [r14 + 0x38] ; mov r9d, dword ptr [rsp + 0x38] ; mov r8d, dword ptr [rsp + 0x34] ; mov edx, dword ptr [rsp + 0x28] ; mov ecx, dword ptr [rsp + 0x20] ; jmp 0xc9931
read: 
write: eax ecx edx r8d r9d 
--------------------------------------------------------------------------------
000c9ba8: RLP; test rax, rax ; mov qword ptr [r13 + 8], rax ; mov rsi, qword ptr [rsp + 0x18] ; mov edx, dword ptr [rsp + 0x20] ; je 0xc9cc8
read: rax rflags 
write: edx rflags rsi 
--------------------------------------------------------------------------------
000c9bd3: RLP; test rax, rax ; mov qword ptr [r13 + 0x10], rax ; mov edx, dword ptr [rsp + 0x18] ; mov rcx, qword ptr [rsp + 0x20] ; je 0xc9cbc
read: rax rflags 
write: edx rcx rflags 
--------------------------------------------------------------------------------
000c9cc8: RLP; xor edi, edi ; jmp 0xc9a77
read: edi 
write: edi rflags 
--------------------------------------------------------------------------------
000c9cef: RLP; test rax, rax ; mov qword ptr [rsp + 0x18], rax ; je 0xc9cc8
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c9d0e: RLP; test rax, rax ; mov rcx, qword ptr [rsp + 0x18] ; mov edx, dword ptr [rsp + 0x28] ; je 0xc9cbc
read: rax rflags 
write: edx rcx rflags 
--------------------------------------------------------------------------------
000c9dba: RLP; test rax, rax ; mov r13, rax ; je 0xc9e54
read: rax rflags 
write: r13 rflags 
--------------------------------------------------------------------------------
000c9dda: RLP; mov rsi, r14 ; movsxd rdx, ebp ; mov rdi, rax ; call 0x8e3dc
read: ebp r14 rax rip rsp 
write: rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000c9dec: RLP; mov ecx, dword ptr [rsp + 0x1c] ; mov r14, r13 ; mov eax, dword ptr [rsp + 0x78] ; mov r9d, dword ptr [rsp + 0x70] ; mov edx, r12d ; mov r8d, dword ptr [rsp + 0x60] ; mov rsi, r14 ; mov rdi, r15 ; mov dword ptr [rsp + 8], eax ; mov rax, qword ptr [rsp + 0x68] ; mov qword ptr [rsp], rax ; call 0xc986c
read: eax r12d r13 r14 r15 rax rip rsp 
write: eax ecx edx r14 r8d r9d rax rdi rsi rsp 
--------------------------------------------------------------------------------
000c9e20: RLP; mov rdi, r13 ; mov ebx, eax ; call 0x1f46c
read: eax r13 rip rsp 
write: ebx rdi rsp 
--------------------------------------------------------------------------------
000c9e2e: RLP; mov eax, ebx ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: ebx rsp 
write: eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000c9eac: RLP; add r12, 0x3b2fc ; test rax, rax ; mov qword ptr [rbx + 0x20], rax ; je 0xc9f80
read: r12 rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
000c9f07: RLP; mov rcx, rbp ; mov rdx, rax ; mov rsi, r14 ; mov rdi, rbx ; call 0xc874c
read: r14 rax rbp rbx rip rsp 
write: rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000c9f1c: RLP; cmp eax, 0x10 ; je 0xc9f5c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000c9f31: RLP; xor eax, eax ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: eax rsp 
write: eax r12 r13 r14 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000c9f72: RLP; mov qword ptr [rbx + 0x20], 0 ; mov eax, dword ptr [rsp + 0xc] ; jmp 0xc9f33
read: 
write: eax 
--------------------------------------------------------------------------------
000c9fcf: RLP; mov rdi, rax ; mov r12, rax ; call 0x856dc
read: rax rip rsp 
write: r12 rdi rsp 
--------------------------------------------------------------------------------
000c9fde: RLP; test rbp, rbp ; lea rbx, [rax + 1] ; je 0xc9ffe
read: rbp rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000c9ffe: RLP; add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rbx rsp 
write: r12 r13 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000ca024: RLP; mov byte ptr [rax], 0 ; jmp 0xc9ffe
read: 
write: 
--------------------------------------------------------------------------------
000ca045: RLP; mov rdi, qword ptr [rbx + 0x20] ; mov qword ptr [rbx], 0 ; mov qword ptr [rbx + 8], 0 ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000ca061: RLP; mov rdi, qword ptr [rbx + 0x28] ; mov qword ptr [rbx + 0x20], 0 ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000ca076: RLP; mov qword ptr [rbx + 0x28], 0 ; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
000ca0cf: RLP; mov ecx, 8 ; xor eax, eax ; mov rdi, rbp ; rep stosq qword ptr [rdi], rax ; mov qword ptr [rip + 0x2a1e19], r12 ; test r12, r12 ; je 0xca18c
read: eax r12 rax rbp rcx rdi rflags 
write: eax ecx rcx rdi rflags 
--------------------------------------------------------------------------------
000ca0ff: RLP; mov rdx, qword ptr [rip + 0x29eea6] ; lea rdi, [rip + 0x2a1dcf] ; mov rsi, rbx ; mov rcx, qword ptr [rdx] ; mov rdx, rax ; call 0xc874c
read: rax rbx rip rsp 
write: rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000ca11f: RLP; test eax, eax ; je 0xca154
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ca14c: RLP; pop rbx ; pop rbp ; pop r12 ; ret
read: rsp 
write: r12 rbp rbx rsp 
--------------------------------------------------------------------------------
000ca182: RLP; jmp 0xca14c
read: 
write: 
--------------------------------------------------------------------------------
000ca19e: RLP; test rax, rax ; mov qword ptr [rip + 0x2a1d54], rax ; jne 0xca0ec
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ca1ca: RLP; jmp 0xca14c
read: 
write: 
--------------------------------------------------------------------------------
000ca23e: RLP; mov r8d, dword ptr [rsp + 0x2c] ; mov rdx, qword ptr [rsp + 0x20] ; mov r10d, eax ; xor r14d, r14d ; mov esi, 1 ; xor eax, eax ; cmp dword ptr [rip + 0x2a4514], 0 ; je 0xca26a
read: eax r14d rflags 
write: eax esi r10d r14d r8d rdx rflags 
--------------------------------------------------------------------------------
000ca28a: RLP; add rsp, 0x80 ; test byte ptr [rbp + 0x38], 0x10 ; mov dword ptr [rsp + 0x10], r8d ; je 0xca334
read: r8d rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000ca2cf: RLP; mov edx, eax ; cmp dword ptr [rip + 0x2a4498], 0 ; je 0xca2e5
read: eax rflags 
write: edx rflags 
--------------------------------------------------------------------------------
000ca304: RLP; add rsp, 0x80 ; xor eax, eax ; test edx, edx ; setne al ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: eax edx rflags rsp 
write: al eax r12 r13 r14 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000ca36f: RLP; add rsp, 0x18 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000ca39c: RLP; add rsp, 0x18 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000ca3de: RLP; add rsp, 0x28 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000ca41e: RLP; add rsp, 0x28 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000ca48e: RLP; test eax, eax ; sete al ; add rsp, 8 ; movzx eax, al ; ret
read: al eax rflags rsp 
write: al eax rflags rsp 
--------------------------------------------------------------------------------
000ca512: RLP; test rax, rax ; jle 0xcaac9
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ca546: RLP; test rax, rax ; jle 0xcab6c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ca636: RLP; mov rax, rbp ; add rsp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
read: rbp rsp 
write: r12 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000ca69a: RLP; test rax, rax ; js 0xca71c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ca712: RLP; test rax, rax ; jns 0xca69f
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ca753: RLP; test rax, rax ; jle 0xcaafb
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ca78f: RLP; test rax, rax ; jle 0xcab34
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ca80c: RLP; mov byte ptr [r12 + rbx - 1], 0 ; add rsp, 0x60 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
read: rbp rsp 
write: r12 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000ca8ca: RLP; test rax, rax ; jle 0xcaa97
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ca906: RLP; test rax, rax ; jle 0xcab50
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ca9d2: RLP; test rax, rax ; js 0xca71c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000caaa5: RLP; test rax, rax ; jle 0xcabb0
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000caad7: RLP; test rax, rax ; jle 0xcab88
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000cab09: RLP; test rax, rax ; jle 0xcab9c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000cad50: RLP; test rax, rax ; mov rsi, qword ptr [rbp - 0x60] ; setne al ; movzx eax, al ; or eax, dword ptr [rbp + 0x18] ; mov dword ptr [r15 + 0x2c], eax ; movzx edx, byte ptr [rsi] ; cmp dl, 0x2d ; je 0xcb2a4
read: al dl eax rax rflags 
write: al eax edx rflags rsi 
--------------------------------------------------------------------------------
000cae20: RLP; test rax, rax ; je 0xcb07c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000cae4c: RLP; mov rsi, qword ptr [rbp - 0x58] ; cmp byte ptr [rsi + 1], 0 ; jne 0xcae5a
read: rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
000caf35: RLP; mov eax, dword ptr [r15 + 0x30] ; mov dword ptr [r15 + 0x34], r14d ; mov dword ptr [r15], r14d ; mov edx, r14d ; cmp eax, edx ; je 0xcaf4a
read: eax edx r14d rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
000cb00f: RLP; lea rdi, [rbp - 0x40] ; mov rsi, rax ; mov ecx, ebx ; xor eax, eax ; mov rdx, r12 ; call 0x523bc
read: eax ebx r12 rax rip rsp 
write: eax ecx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000cb026: RLP; test eax, eax ; js 0xcae73
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000cb05e: RLP; mov rax, qword ptr [r13] ; mov rdi, qword ptr [rbp - 0x40] ; mov dword ptr [rax + 0x74], r12d ; call 0x1f46c
read: r12d rip rsp 
write: rax rdi rsp 
--------------------------------------------------------------------------------
000cb073: RLP; jmp 0xcae73
read: 
write: 
--------------------------------------------------------------------------------
000cb14a: RLP; test eax, eax ; jne 0xcb123
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000cb15a: RLP; cmp dword ptr [rbp - 0x88], eax ; je 0xcb3fc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000cb1f5: RLP; add r13, rax ; mov qword ptr [r15 + 0x20], r13 ; mov eax, dword ptr [rbp - 0x94] ; mov dword ptr [r15 + 8], 0 ; add eax, 1 ; mov dword ptr [r15], eax ; lea rsp, [rbp - 0x28] ; mov eax, 0x3f ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: eax r13 rax rsp 
write: eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000cb250: RLP; mov ecx, dword ptr [r15] ; cmp r14d, ecx ; jle 0xcb840
read: ecx r14d rflags 
write: ecx rflags 
--------------------------------------------------------------------------------
000cb370: RLP; lea rdi, [rbp - 0x40] ; mov rsi, rax ; mov r8, r12 ; mov ecx, r14d ; mov rdx, rbx ; xor eax, eax ; call 0x523bc
read: eax r12 r14d rax rbx rip rsp 
write: eax ecx r8 rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000cb38b: RLP; test eax, eax ; js 0xcb3d1
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000cb3bd: RLP; mov rax, qword ptr [r12] ; mov rdi, qword ptr [rbp - 0x40] ; mov dword ptr [rax + 0x74], ebx ; call 0x1f46c
read: ebx rip rsp 
write: rax rdi rsp 
--------------------------------------------------------------------------------
000cb3d1: RLP; mov rbx, qword ptr [r15 + 0x20] ; mov rdi, rbx ; call 0x856dc
read: rbx rip rsp 
write: rbx rdi rsp 
--------------------------------------------------------------------------------
000cb3e1: RLP; add rax, rbx ; mov qword ptr [r15 + 0x20], rax ; mov eax, dword ptr [r13 + 0x18] ; mov dword ptr [r15 + 8], eax ; mov eax, 0x3f ; jmp 0xcae7c
read: eax rax rbx 
write: eax rax rflags 
--------------------------------------------------------------------------------
000cb448: RLP; test rax, rax ; mov r12, rax ; je 0xcb52f
read: rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
000cb47e: RLP; mov rdx, rbx ; mov rsi, rax ; mov rcx, r13 ; mov rdi, r12 ; xor eax, eax ; lea rbx, [rbp - 0x40] ; call 0x5212c
read: eax r12 r13 rax rbx rip rsp 
write: eax rbx rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000cb499: RLP; jmp 0xcb49f
read: 
write: 
--------------------------------------------------------------------------------
000cb4b7: RLP; mov rbx, qword ptr [rbx + 8] ; test rbx, rbx ; jne 0xcb49c
read: rbx rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000cb4e8: RLP; cmp eax, -1 ; je 0xcb52f
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000cb51b: RLP; mov rax, qword ptr [r12] ; mov rdi, qword ptr [rbp - 0x50] ; mov dword ptr [rax + 0x74], ebx ; call 0x1f46c
read: ebx rip rsp 
write: rax rdi rsp 
--------------------------------------------------------------------------------
000cb52f: RLP; mov eax, dword ptr [r15] ; mov r13, qword ptr [r15 + 0x20] ; mov dword ptr [rbp - 0x94], eax ; jmp 0xcb1e9
read: eax 
write: eax r13 
--------------------------------------------------------------------------------
000cb55c: RLP; add rax, rbx ; mov qword ptr [r15 + 0x20], rax ; mov rax, qword ptr [rbp - 0x90] ; test rax, rax ; je 0xcb572
read: rax rbx rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000cb694: RLP; test eax, eax ; jne 0xcb66d
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000cb6a4: RLP; cmp qword ptr [rbp - 0x88], rax ; je 0xcbb03
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000cb774: RLP; mov r8, qword ptr [rbp - 0x58] ; lea rdi, [rbp - 0x40] ; mov rsi, rax ; mov ecx, r12d ; mov rdx, rbx ; xor eax, eax ; call 0x523bc
read: eax r12d rax rbx rip rsp 
write: eax ecx r8 rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000cb790: RLP; test eax, eax ; js 0xcb7d6
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000cb7c2: RLP; mov rax, qword ptr [r12] ; mov rdi, qword ptr [rbp - 0x40] ; mov dword ptr [rax + 0x74], ebx ; call 0x1f46c
read: ebx rip rsp 
write: rax rdi rsp 
--------------------------------------------------------------------------------
000cb7d6: RLP; mov eax, dword ptr [r15] ; mov dword ptr [rbp - 0x94], eax ; lea rax, [rip + 0x6912c] ; mov qword ptr [r15 + 0x20], rax ; jmp 0xcb1fc
read: eax rax 
write: eax rax 
--------------------------------------------------------------------------------
000cb892: RLP; add rax, rbx ; mov qword ptr [r15 + 0x20], rax ; mov eax, dword ptr [r13 + 0x18] ; mov dword ptr [r15 + 8], eax ; mov rax, qword ptr [rbp - 0x60] ; cmp byte ptr [rax], 0x3a ; jne 0xcb210
read: eax rax rbx rflags 
write: eax rax rflags 
--------------------------------------------------------------------------------
000cb8fc: RLP; lea rdi, [rbp - 0x40] ; mov rsi, rax ; mov rcx, r12 ; mov rdx, rbx ; xor eax, eax ; call 0x523bc
read: eax r12 rax rbx rip rsp 
write: eax rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000cb914: RLP; jmp 0xcb38b
read: 
write: 
--------------------------------------------------------------------------------
000cb941: RLP; test rax, rax ; jne 0xcae29
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000cb98e: RLP; add rbx, rax ; add dword ptr [r15], 1 ; mov eax, 0x3f ; mov qword ptr [r15 + 0x20], rbx ; jmp 0xcae7c
read: rax rbx 
write: eax rbx rflags 
--------------------------------------------------------------------------------
000cb9f9: RLP; mov rcx, qword ptr [rbp - 0x58] ; lea rdi, [rbp - 0x40] ; mov rsi, rax ; mov rdx, rbx ; xor eax, eax ; call 0x523bc
read: eax rax rbx rip rsp 
write: eax rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000cba12: RLP; jmp 0xcb790
read: 
write: 
--------------------------------------------------------------------------------
000cba9c: RLP; lea rdi, [rbp - 0x40] ; mov rsi, rax ; mov rcx, r12 ; xor eax, eax ; mov rdx, rbx ; call 0x523bc
read: eax r12 rax rbx rip rsp 
write: eax rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000cbab4: RLP; test eax, eax ; js 0xcbafa
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000cbae6: RLP; mov rax, qword ptr [r12] ; mov rdi, qword ptr [rbp - 0x40] ; mov dword ptr [rax + 0x74], ebx ; call 0x1f46c
read: ebx rip rsp 
write: rax rdi rsp 
--------------------------------------------------------------------------------
000cbafa: RLP; mov rbx, qword ptr [r15 + 0x20] ; jmp 0xcb886
read: 
write: rbx 
--------------------------------------------------------------------------------
000cbba3: RLP; mov rcx, qword ptr [rbp - 0x70] ; lea rdi, [rbp - 0x40] ; mov rsi, rax ; mov rdx, rbx ; xor eax, eax ; call 0x523bc
read: eax rax rbx rip rsp 
write: eax rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000cbbbc: RLP; test eax, eax ; js 0xcbc02
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000cbbee: RLP; mov rax, qword ptr [r12] ; mov rdi, qword ptr [rbp - 0x40] ; mov dword ptr [rax + 0x74], ebx ; call 0x1f46c
read: ebx rip rsp 
write: rax rdi rsp 
--------------------------------------------------------------------------------
000cbc02: RLP; mov rbx, qword ptr [r15 + 0x20] ; jmp 0xcb982
read: 
write: rbx 
--------------------------------------------------------------------------------
000cbc91: RLP; lea rdi, [rbp - 0x40] ; mov rsi, rax ; mov ecx, ebx ; xor eax, eax ; mov rdx, r12 ; call 0x523bc
read: eax ebx r12 rax rip rsp 
write: eax ecx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000cbca8: RLP; test eax, eax ; js 0xcba22
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000cbce0: RLP; mov rax, qword ptr [r13] ; mov rdi, qword ptr [rbp - 0x40] ; mov dword ptr [rax + 0x74], r12d ; call 0x1f46c
read: r12d rip rsp 
write: rax rdi rsp 
--------------------------------------------------------------------------------
000cbcf5: RLP; jmp 0xcba22
read: 
write: 
--------------------------------------------------------------------------------
000cbd60: RLP; lea rdi, [rbp - 0x40] ; mov rsi, rax ; mov ecx, ebx ; xor eax, eax ; mov rdx, r12 ; call 0x523bc
read: eax ebx r12 rax rip rsp 
write: eax ecx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000cbd77: RLP; test eax, eax ; js 0xcbd00
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000cbdab: RLP; mov rax, qword ptr [r13] ; mov rdi, qword ptr [rbp - 0x40] ; mov dword ptr [rax + 0x74], r12d ; call 0x1f46c
read: r12d rip rsp 
write: rax rdi rsp 
--------------------------------------------------------------------------------
000cbdc0: RLP; jmp 0xcbd00
read: 
write: 
--------------------------------------------------------------------------------
000cbe26: RLP; lea rdi, [rbp - 0x40] ; mov rsi, rax ; mov rcx, r12 ; xor eax, eax ; mov rdx, rbx ; call 0x523bc
read: eax r12 rax rbx rip rsp 
write: eax rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000cbe3e: RLP; test eax, eax ; js 0xcbb43
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000cbe74: RLP; mov rax, qword ptr [r12] ; mov rdi, qword ptr [rbp - 0x40] ; mov dword ptr [rax + 0x74], ebx ; call 0x1f46c
read: ebx rip rsp 
write: rax rdi rsp 
--------------------------------------------------------------------------------
000cbe88: RLP; jmp 0xcbb43
read: 
write: 
--------------------------------------------------------------------------------
000cbe9e: RLP; jmp 0xcb4dc
read: 
write: 
--------------------------------------------------------------------------------
000cbee6: RLP; lea rdi, [rbp - 0x40] ; mov rsi, rax ; mov rcx, r12 ; xor eax, eax ; mov rdx, rbx ; call 0x523bc
read: eax r12 rax rbx rip rsp 
write: eax rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000cbefe: RLP; test eax, eax ; js 0xcbdcf
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000cbf34: RLP; mov rax, qword ptr [r12] ; mov rdi, qword ptr [rbp - 0x40] ; mov dword ptr [rax + 0x74], ebx ; call 0x1f46c
read: ebx rip rsp 
write: rax rdi rsp 
--------------------------------------------------------------------------------
000cbf48: RLP; jmp 0xcbdcf
read: 
write: 
--------------------------------------------------------------------------------
000cbf9f: RLP; mov edx, dword ptr [rip + 0x29ff77] ; mov rcx, qword ptr [rip + 0x29ff80] ; mov dword ptr [rbx], edx ; mov rdx, qword ptr [rip + 0x29ceb7] ; mov qword ptr [rdx], rcx ; mov ecx, dword ptr [rip + 0x29ff66] ; mov rdx, qword ptr [rip + 0x29cf8f] ; mov dword ptr [rdx], ecx ; add rsp, 0x10 ; pop rbx ; ret
read: ecx edx rcx rsp 
write: ecx edx rbx rcx rdx rflags rsp 
--------------------------------------------------------------------------------
000cbffc: RLP; add rsp, 0x18 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000cc02c: RLP; add rsp, 0x18 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000cc057: RLP; add rsp, 0x18 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000cc07c: RLP; add rsp, 0x18 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000cc0aa: RLP; add rsp, 0x18 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000cc0df: RLP; add rsp, 0x18 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000cc2bf: RLP; add rsp, 8 ; xor eax, eax ; ret
read: eax rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
000cc403: RLP; mov rdx, r14 ; movsxd rdi, eax ; mov rsi, r15 ; mov eax, 0xcc ; syscall ; cmp eax, 0xfffff000 ; mov edx, eax ; seta cl ; cmp eax, -0x16 ; je 0xcc3cc
read: eax r14 r15 rflags 
write: cl eax edx rdi rdx rflags rsi 
--------------------------------------------------------------------------------
000cc4ba: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000cc606: RLP; test rax, rax ; mov rbx, rax ; je 0xccfce
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000cc61e: RLP; lea rdx, [rsp + 0x90] ; mov esi, eax ; mov edi, 1 ; call 0xd63ec
read: eax rip rsp 
write: edi esi rdx rsp 
--------------------------------------------------------------------------------
000cc636: RLP; test eax, eax ; jne 0xcd094
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000cc6ae: RLP; test rax, rax ; jle 0xcc8e6
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000cc6cd: RLP; test rax, rax ; je 0xccb64
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000cc85f: RLP; test rax, rax ; je 0xcd0c3
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000cc885: RLP; test eax, eax ; mov rcx, qword ptr [rsp + 8] ; je 0xcc8dc
read: eax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
000cc8b6: RLP; cmp rax, -1 ; mov rcx, rax ; je 0xcc8dc
read: rax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
000cc8fb: RLP; mov rdi, rbx ; mov rbx, r13 ; call 0x6bf5c
read: r13 rbx rip rsp 
write: rbx rdi rsp 
--------------------------------------------------------------------------------
000cc90a: RLP; mov r12, qword ptr [rsp + 0x50] ; test r12, r12 ; jne 0xccd6e
read: r12 rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
000cc946: RLP; test rax, rax ; mov r12, rax ; je 0xcd228
read: rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
000cc9e0: RLP; cmp qword ptr [rsp + 0x28], 0 ; lea rax, [rip + 0x658cf] ; mov qword ptr [rsp], rax ; je 0xcce6d
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000cca18: RLP; test rax, rax ; mov r14, rax ; je 0xccf0e
read: rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
000ccab4: RLP; test r15, r15 ; jne 0xccaa4
read: r15 rflags 
write: rflags 
--------------------------------------------------------------------------------
000ccadd: RLP; jmp 0xcce77
read: 
write: 
--------------------------------------------------------------------------------
000ccb9f: RLP; test rax, rax ; je 0xcd202
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ccbc9: RLP; test eax, eax ; je 0xccfd5
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ccc27: RLP; cmp rax, -1 ; mov r14, rax ; je 0xcd210
read: rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
000ccc69: RLP; cmp rax, -1 ; mov r13, rax ; je 0xcc8dc
read: rax rflags 
write: r13 rflags 
--------------------------------------------------------------------------------
000ccc9f: RLP; test rax, rax ; je 0xcd26b
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ccd8e: RLP; test rax, rax ; mov rbx, rax ; je 0xccf31
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000cce1c: RLP; test r12, r12 ; jne 0xcce0c
read: r12 rflags 
write: rflags 
--------------------------------------------------------------------------------
000cce45: RLP; mov r14, qword ptr [rsp + 0x60] ; test r14, r14 ; jne 0xcc926
read: r14 rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
000cce93: RLP; mov rdi, qword ptr [rip + 0x29f0ea] ; cmp rdi, qword ptr [rsp] ; mov qword ptr [rip + 0x29f0df], r12 ; je 0xcceb0
read: r12 rdi rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
000cceb0: RLP; mov rdi, qword ptr [rip + 0x29f0dd] ; mov qword ptr [rip + 0x29f0d6], r14 ; cmp rdi, rbp ; je 0xccecc
read: r14 rbp rdi rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
000ccecc: RLP; mov rax, qword ptr [rsp + 0xe8] ; mov qword ptr [rip + 0x29f091], rax ; mov rax, qword ptr [rsp + 0xf0] ; mov qword ptr [rip + 0x29f08a], rax ; jmp 0xccfaa
read: rax 
write: rax 
--------------------------------------------------------------------------------
000ccf04: RLP; test r14, r14 ; jne 0xccef4
read: r14 rflags 
write: rflags 
--------------------------------------------------------------------------------
000ccf1f: RLP; cmp r12, qword ptr [rsp] ; je 0xccf31
read: r12 rflags 
write: rflags 
--------------------------------------------------------------------------------
000ccf31: RLP; mov rdi, qword ptr [rsp + 0x48] ; test rdi, rdi ; jne 0xccf47
read: rdi rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
000ccf54: RLP; test rbx, rbx ; jne 0xccf44
read: rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
000ccf7c: RLP; test rbx, rbx ; jne 0xccf6c
read: rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
000ccf9c: RLP; test rbx, rbx ; jne 0xccf8c
read: rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
000ccfaa: RLP; add rsp, 0x128 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000ccfeb: RLP; test eax, eax ; je 0xcc8dc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000cd01c: RLP; cmp rax, -1 ; mov r14, rax ; je 0xcc8dc
read: rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
000cd05a: RLP; cmp rax, -1 ; mov r13, rax ; je 0xcc8dc
read: rax rflags 
write: r13 rflags 
--------------------------------------------------------------------------------
000cd0a2: RLP; jmp 0xccf31
read: 
write: 
--------------------------------------------------------------------------------
000cd0d8: RLP; test eax, eax ; je 0xcc8dc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000cd111: RLP; cmp rax, -1 ; mov r13, rax ; je 0xcc8dc
read: rax rflags 
write: r13 rflags 
--------------------------------------------------------------------------------
000cd147: RLP; test rax, rax ; mov rcx, qword ptr [rsp + 8] ; je 0xcd26b
read: rax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
000cd23d: RLP; jmp 0xccf31
read: 
write: 
--------------------------------------------------------------------------------
000cd279: RLP; mov rdi, rbx ; call 0x6bf5c
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000cd285: RLP; jmp 0xccf31
read: 
write: 
--------------------------------------------------------------------------------
000cd304: RLP; test eax, eax ; jne 0xcd34c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000cd54e: RLP; test eax, eax ; mov edx, eax ; mov dword ptr [rbp - 0x70], eax ; je 0xcd64c
read: eax rflags 
write: edx rflags 
--------------------------------------------------------------------------------
000cd620: RLP; test eax, eax ; mov dword ptr [rbp - 0x70], eax ; jne 0xcd5bc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000cd689: RLP; test eax, eax ; je 0xcd74c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000cd742: RLP; mov eax, dword ptr [rbp - 0x78] ; jmp 0xcd43f
read: 
write: eax 
--------------------------------------------------------------------------------
000cd771: RLP; test rax, rax ; mov r12, rax ; setne r13b ; jne 0xcf634
read: rax rflags 
write: r12 r13b rflags 
--------------------------------------------------------------------------------
000cd79d: RLP; test eax, eax ; jle 0xce439
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000cd802: RLP; mov dword ptr [r15 + 0x24], eax ; mov rax, qword ptr [rbp - 0x50] ; cmp byte ptr [rax], 0 ; jne 0xcdefe
read: eax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000cd8bf: RLP; cmp eax, -1 ; mov eax, 1 ; cmove r12d, eax ; mov rax, qword ptr [rip + 0x29b71a] ; mov r13, qword ptr fs:[rax] ; mov rax, qword ptr [r13 + 8] ; mov r15, rax ; mov qword ptr [rbp - 0x108], rax ; mov rax, qword ptr [rbp - 0xe0] ; and r15, 0xffffffffffffdfff ; mov qword ptr [r13 + 8], r15 ; lea rdi, [rax + 0x428] ; cmp rdi, 0x1000 ; ja 0xcf869
read: eax r12d r15 rax rdi rflags 
write: eax r12d r13 r15 rax rdi rflags 
--------------------------------------------------------------------------------
000cda15: RLP; test rax, rax ; mov r13, rax ; mov r8d, dword ptr [rbp - 0xb8] ; jne 0xce2f2
read: rax rflags 
write: r13 r8d rflags 
--------------------------------------------------------------------------------
000cdc6a: RLP; mov rdi, qword ptr [rbp - 0x78] ; test rax, rax ; mov qword ptr [rdi], rax ; je 0xcdd7c
read: rax rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
000cdd3d: RLP; test eax, eax ; mov dword ptr [rbp - 0x70], eax ; je 0xcd4dc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000cdd8d: RLP; jmp 0xcd6f9
read: 
write: 
--------------------------------------------------------------------------------
000cdda2: RLP; jmp 0xcd720
read: 
write: 
--------------------------------------------------------------------------------
000cddb7: RLP; jmp 0xcd713
read: 
write: 
--------------------------------------------------------------------------------
000cddcc: RLP; jmp 0xcd706
read: 
write: 
--------------------------------------------------------------------------------
000cdf4c: RLP; test eax, eax ; jne 0xcf847
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000cdf87: RLP; test rax, rax ; mov r13, rax ; mov r8d, dword ptr [rbp - 0xb8] ; jne 0xcdff4
read: rax rflags 
write: r13 r8d rflags 
--------------------------------------------------------------------------------
000ce007: RLP; mov qword ptr [rsp], 0 ; mov r9, qword ptr [rbp - 0x90] ; mov rcx, r15 ; mov r8, qword ptr [rbp - 0x88] ; mov rdx, rbx ; mov rsi, qword ptr [rbp - 0x80] ; mov rdi, qword ptr [rbp - 0x98] ; call r13
read: r13 r15 rbx rsp 
write: r8 r9 rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000ce035: RLP; cmp eax, 1 ; je 0xce0df
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ce070: RLP; test rax, rax ; je 0xce23c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ce2df: RLP; test rax, rax ; mov r13, rax ; mov r8d, dword ptr [rbp - 0xb8] ; je 0xcd9f7
read: rax rflags 
write: r13 r8d rflags 
--------------------------------------------------------------------------------
000ce379: RLP; mov rax, qword ptr [rbp - 0xe8] ; mov rdx, qword ptr [rbp - 0x90] ; mov r8, r15 ; mov qword ptr [rsp + 8], 0 ; mov r9, qword ptr [rbp - 0x88] ; mov rcx, rbx ; mov esi, 0xa ; mov rdi, qword ptr [rbp - 0x98] ; mov qword ptr [rsp + 0x10], rax ; mov rax, qword ptr [rbp - 0xf0] ; mov qword ptr [rsp], rax ; call r13
read: r13 r15 rax rbx rsp 
write: esi r8 r9 rax rcx rdi rdx rsp 
--------------------------------------------------------------------------------
000ce3c0: RLP; mov edx, dword ptr [rbp - 0x70] ; cmp edx, 0x22 ; jne 0xcec74
read: edx rflags 
write: edx rflags 
--------------------------------------------------------------------------------
000ce3f1: RLP; test rax, rax ; je 0xcee00
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ce48a: RLP; mov r13, qword ptr [rbp - 0x50] ; test r13, r13 ; je 0xcf548
read: r13 rflags 
write: r13 rflags 
--------------------------------------------------------------------------------
000ce62a: RLP; test byte ptr [r14], 0x80 ; lea r11, [rax + 1] ; mov rsi, qword ptr [rbp - 0xb8] ; mov r10d, dword ptr [rbp - 0xd0] ; je 0xcee85
read: rflags 
write: r10d r11 rflags rsi 
--------------------------------------------------------------------------------
000ce6b9: RLP; mov rdi, qword ptr [rbp - 0xd8] ; mov qword ptr [rbp - 0xb8], rax ; mov r10d, dword ptr [rbp - 0xe8] ; mov qword ptr [rdi + 8], rax ; mov rdi, qword ptr [rbp - 0x88] ; jmp 0xce5bb
read: rax 
write: r10d rdi 
--------------------------------------------------------------------------------
000ce6ff: RLP; mov rdi, qword ptr [rbp - 0x50] ; mov rcx, qword ptr [rbp - 0x80] ; mov edx, 1 ; mov r12, qword ptr [r12] ; mov byte ptr [rbp - 0x80], 1 ; mov rax, qword ptr [rdi + 0x10] ; mov r10, rcx ; cmp byte ptr [rax + rbx], 0xa ; movzx eax, byte ptr [rbp - 0xbb] ; cmove eax, edx ; mov byte ptr [rbp - 0xbb], al ; jmp 0xce5df
read: al eax edx rcx rflags 
write: eax edx r10 r12 rax rcx rdi rflags 
--------------------------------------------------------------------------------
000ce864: RLP; test rax, rax ; mov r13, rax ; mov r10d, dword ptr [rbp - 0xb8] ; je 0xce96b
read: rax rflags 
write: r10d r13 rflags 
--------------------------------------------------------------------------------
000ce8d3: RLP; mov rax, qword ptr [rbp - 0x60] ; mov r9, qword ptr [rbp - 0xe8] ; mov edx, 0x100 ; mov r8, qword ptr [rbp - 0x88] ; mov rcx, qword ptr [rbp - 0x90] ; mov rsi, qword ptr [rbp - 0xd0] ; mov rax, qword ptr [rax + 8] ; test rax, rax ; cmove rax, qword ptr [rbp - 0x98] ; mov rdi, rax ; call r13
read: r13 rax rflags rsp 
write: edx r8 r9 rax rcx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000ce911: RLP; sub eax, 1 ; mov r10d, dword ptr [rbp - 0xb8] ; je 0xcf923
read: eax rflags 
write: eax r10d rflags 
--------------------------------------------------------------------------------
000ce94f: RLP; mov rax, qword ptr [rbp - 0x98] ; mov r10d, dword ptr [rbp - 0xb8] ; mov byte ptr [rbp - 0xb9], 0 ; mov qword ptr [rbp - 0xf8], rax ; mov eax, 3 ; mov r8d, 1 ; jmp 0xcda58
read: rax 
write: eax r10d r8d rax 
--------------------------------------------------------------------------------
000cea03: RLP; mov rax, qword ptr [rbp - 0xe8] ; mov rdx, qword ptr [rbp - 0x90] ; mov r8, r15 ; mov qword ptr [rsp + 8], 0 ; mov r9, qword ptr [rbp - 0x88] ; mov rcx, rbx ; mov esi, 2 ; mov rdi, qword ptr [rbp - 0x98] ; mov qword ptr [rsp + 0x10], rax ; mov rax, qword ptr [rbp - 0xf0] ; mov qword ptr [rsp], rax ; call r13
read: r13 r15 rax rbx rsp 
write: esi r8 r9 rax rcx rdi rdx rsp 
--------------------------------------------------------------------------------
000cea4a: RLP; mov edx, dword ptr [rbp - 0x70] ; cmp edx, 0x22 ; jne 0xcec0c
read: edx rflags 
write: edx rflags 
--------------------------------------------------------------------------------
000cea7b: RLP; test rax, rax ; je 0xcee00
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000cebcb: RLP; cmp eax, 0x22 ; jne 0xcefb4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000cebfb: RLP; test rax, rax ; je 0xcf5a4
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ced6d: RLP; mov r9d, dword ptr [rbp - 0xb8] ; mov r8d, dword ptr [rbp - 0xd8] ; mov r10d, dword ptr [rbp - 0xe0] ; mov qword ptr [rbp - 0xf8], rax ; mov rax, qword ptr [rbp - 0xb0] ; cmp dword ptr [rax + 4], 2 ; mov eax, dword ptr [rbp - 0xc0] ; cmovne r9d, dword ptr [rbp - 0xfc] ; cmove eax, r10d ; mov dword ptr [rbp - 0xfc], r9d ; mov dword ptr [rbp - 0xc0], eax ; jmp 0xce80a
read: eax r10d r9d rax rflags 
write: eax r10d r8d r9d rax rflags 
--------------------------------------------------------------------------------
000cede0: RLP; mov r14, qword ptr [rbp - 0x60] ; mov dword ptr [r15 + 0x24], eax ; mov r13d, dword ptr [r14 + 0x24] ; mov r15, r14 ; test r13d, r13d ; jne 0xcd817
read: eax r13d r14 rflags 
write: r13d r14 r15 rflags 
--------------------------------------------------------------------------------
000cee68: RLP; test eax, eax ; mov rsi, qword ptr [rbp - 0xb8] ; mov r11, qword ptr [rbp - 0xd0] ; mov r10d, dword ptr [rbp - 0xd8] ; jne 0xce65e
read: eax rflags 
write: r10d r11 rflags rsi 
--------------------------------------------------------------------------------
000ceea6: RLP; test rax, rax ; mov qword ptr [rbp - 0xd0], rax ; je 0xcf7cb
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ceef7: RLP; mov rcx, qword ptr [rbp - 0x60] ; mov r12d, dword ptr [rcx + 0x10] ; test r12d, r12d ; jne 0xcf32c
read: r12d rflags 
write: r12d rcx rflags 
--------------------------------------------------------------------------------
000cef30: RLP; test rax, rax ; mov rbx, rax ; jne 0xcdbdf
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000cef7f: RLP; mov r12d, eax ; mov rax, qword ptr [rip + 0x29f87b] ; mov qword ptr [rbp - 0xc8], rax ; jmp 0xcd896
read: eax rax 
write: r12d rax 
--------------------------------------------------------------------------------
000cf0c3: RLP; mov rdx, qword ptr [rbp - 0x58] ; mov r12, qword ptr [r12] ; lea rax, [r15 + 8] ; mov rdx, qword ptr [rdx + 0x18] ; cmp qword ptr [rdx + r15], 0 ; je 0xcf110
read: rflags 
write: r12 rax rdx rflags 
--------------------------------------------------------------------------------
000cf26f: RLP; mov edi, 0x10 ; lea rsi, [rax + 1] ; xor edx, edx ; add rax, 0x1f ; mov r8, qword ptr [rbp - 0x80] ; div rdi ; mov rdx, rsi ; mov rsi, r8 ; shl rax, 4 ; sub rsp, rax ; lea rdi, [rsp + 0x27] ; and rdi, 0xfffffffffffffff0 ; call 0x8e3dc
read: edx r8 rax rdi rdx rip rsi rsp 
write: edi edx r8 rax rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000cf2a4: RLP; mov r11, qword ptr [rbp - 0x120] ; mov r10d, dword ptr [rbp - 0x118] ; mov rcx, qword ptr [rbp - 0x110] ; jmp 0xcf213
read: 
write: r10d r11 rcx 
--------------------------------------------------------------------------------
000cf41e: RLP; mov edi, 0x10 ; lea rsi, [rax + 1] ; xor edx, edx ; add rax, 0x1f ; mov r8, qword ptr [rbp - 0x80] ; div rdi ; mov rdx, rsi ; mov rsi, r8 ; shl rax, 4 ; sub rsp, rax ; lea rdi, [rsp + 0x27] ; and rdi, 0xfffffffffffffff0 ; call 0x8e3dc
read: edx r8 rax rdi rdx rip rsi rsp 
write: edi edx r8 rax rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000cf453: RLP; mov r10, qword ptr [rbp - 0x118] ; mov rcx, qword ptr [rbp - 0x110] ; mov r11d, dword ptr [rbp - 0x100] ; jmp 0xcf38c
read: 
write: r10 r11d rcx 
--------------------------------------------------------------------------------
000cf661: RLP; mov byte ptr [r12], 0x25 ; jmp 0xcd79d
read: 
write: 
--------------------------------------------------------------------------------
000cf6af: RLP; mov r11d, dword ptr [rbp - 0xd8] ; mov qword ptr [rbp - 0xf8], rax ; mov r8d, dword ptr [rbp - 0xb8] ; jmp 0xcf4c1
read: rax 
write: r11d r8d 
--------------------------------------------------------------------------------
000cf72d: RLP; test eax, eax ; mov rcx, qword ptr [rbp - 0xb8] ; jne 0xceb5b
read: eax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
000cf7c3: RLP; mov byte ptr [rax], 0 ; jmp 0xcd788
read: 
write: 
--------------------------------------------------------------------------------
000cf7de: RLP; test eax, eax ; jne 0xcf043
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000cf7f2: RLP; test rax, rax ; mov qword ptr [rbp - 0xc8], rax ; je 0xcf5b2
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000cf826: RLP; test eax, eax ; mov rcx, qword ptr [rbp - 0xb8] ; jne 0xce323
read: eax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
000cf872: RLP; test eax, eax ; jne 0xcd90a
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000cf888: RLP; test rax, rax ; mov qword ptr [rbp - 0xd8], rax ; je 0xcf8a4
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000cf8f5: RLP; jmp 0xcd8a9
read: 
write: 
--------------------------------------------------------------------------------
000cf90a: RLP; test eax, eax ; mov rcx, qword ptr [rbp - 0xb8] ; jne 0xce9ad
read: eax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
000cf93c: RLP; test eax, eax ; mov r10d, dword ptr [rbp - 0xb8] ; jne 0xce89c
read: eax rflags 
write: r10d rflags 
--------------------------------------------------------------------------------
000cf960: RLP; test rax, rax ; mov qword ptr [rbp - 0xd0], rax ; mov r10d, dword ptr [rbp - 0xb8] ; je 0xce23c
read: rax rflags 
write: r10d rflags 
--------------------------------------------------------------------------------
000cf9a8: RLP; test eax, eax ; mov rcx, qword ptr [rbp - 0xb8] ; jne 0xcdfb1
read: eax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
000cf9d1: RLP; test eax, eax ; mov rdx, qword ptr [rbp - 0x88] ; jne 0xce4d3
read: eax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
000cf9ec: RLP; test rax, rax ; mov qword ptr [rbp - 0xc8], rax ; je 0xcf6d1
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000cfa11: RLP; test eax, eax ; jne 0xcf786
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000cfa2f: RLP; test rax, rax ; mov r14, rax ; je 0xce1d2
read: rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
000cfa54: RLP; mov rdi, r14 ; mov dword ptr [rbp - 0x80], eax ; call 0x1f46c
read: eax r14 rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000cfa63: RLP; mov eax, dword ptr [rbp - 0x80] ; jmp 0xcd79d
read: 
write: eax 
--------------------------------------------------------------------------------
000cfb96: RLP; mov dword ptr [rsp + 0x28], eax ; mov rax, qword ptr [rbx] ; mov rdi, qword ptr [rax + 0x18] ; call 0xcfa6c
read: eax rip rsp 
write: rax rdi rsp 
--------------------------------------------------------------------------------
000cfbaa: RLP; mov rdi, r14 ; mov dword ptr [rsp + 0xc], eax ; call 0xcfa6c
read: eax r14 rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000cfbba: RLP; lea rsi, [rbx + 8] ; mov r12d, eax ; mov rdi, rsi ; mov qword ptr [rsp + 0x20], rsi ; call 0xcfa6c
read: eax rip rsi rsp 
write: r12d rdi rsi rsp 
--------------------------------------------------------------------------------
000cfbd2: RLP; cmp dword ptr [rsp + 0xc], eax ; mov rcx, qword ptr [rsp + 0x10] ; mov r9, qword ptr [rsp + 0x18] ; jne 0xcff61
read: eax rflags 
write: r9 rcx rflags 
--------------------------------------------------------------------------------
000cfc3b: RLP; mov rdi, r14 ; mov edx, 0x7fffffff ; mov rsi, r12 ; mov dword ptr [rsp + 0x18], eax ; call 0xcc4cc
read: eax r12 r14 rip rsp 
write: edx rdi rsi rsp 
--------------------------------------------------------------------------------
000cfc53: RLP; mov dword ptr [rsp + 0x2c], eax ; mov rax, qword ptr [rbx] ; mov edx, 0x7fffffff ; mov rsi, r12 ; mov rdi, qword ptr [rax + 0x18] ; call 0xcc4cc
read: eax r12 rip rsp 
write: edx rax rdi rsi rsp 
--------------------------------------------------------------------------------
000cfc6f: RLP; mov rdi, qword ptr [rsp + 0x20] ; mov r14d, eax ; mov edx, 0x7fffffff ; mov rsi, r12 ; call 0xcc4cc
read: eax r12 rip rsp 
write: edx r14d rdi rsi rsp 
--------------------------------------------------------------------------------
000cfc88: RLP; cmp r14d, eax ; mov r9, qword ptr [rsp + 0x10] ; jne 0xcff74
read: eax r14d rflags 
write: r9 rflags 
--------------------------------------------------------------------------------
000cfcce: RLP; mov dword ptr [rsp + 0x28], eax ; mov rax, qword ptr [rbx] ; mov rdi, qword ptr [rax + 0x18] ; call 0xcfa6c
read: eax rip rsp 
write: rax rdi rsp 
--------------------------------------------------------------------------------
000cfce2: RLP; mov r9, qword ptr [rsp + 0x10] ; mov dword ptr [rsp + 0xc], eax ; mov r14, qword ptr [rip + 0x29c292] ; xor edx, edx ; mov rdi, r12 ; mov qword ptr [rsp + 0x10], r9 ; mov rsi, r14 ; call 0xcc4cc
read: eax edx r12 r14 r9 rip rsp 
write: edx r14 r9 rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000cfd08: RLP; mov r12d, eax ; mov rax, qword ptr [rbx] ; xor edx, edx ; mov rsi, r14 ; mov rdi, qword ptr [rax + 0x18] ; call 0xcc4cc
read: eax edx r14 rip rsp 
write: edx r12d rax rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000cfd20: RLP; cmp r12d, eax ; jg 0xcfe86
read: eax r12d rflags 
write: rflags 
--------------------------------------------------------------------------------
000cfdad: RLP; mov r9, qword ptr [rsp + 0x10] ; mov edi, dword ptr [rsp + 0x38] ; mov r8d, dword ptr [rsp + 0x3c] ; mov eax, dword ptr [r9 + 8] ; test eax, eax ; jle 0xcff4c
read: eax rflags 
write: eax edi r8d r9 rflags 
--------------------------------------------------------------------------------
000d01c8: RLP; mov rdi, rbx ; call 0x1f46c
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000d01d4: RLP; test rbp, rbp ; jne 0xd01b4
read: rbp rflags 
write: rflags 
--------------------------------------------------------------------------------
000d02f1: RLP; test eax, eax ; jne 0xd0b4c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d0403: RLP; mov r13, qword ptr [rbp - 0x128] ; test r13, r13 ; je 0xd0cfb
read: r13 rflags 
write: r13 rflags 
--------------------------------------------------------------------------------
000d04ae: RLP; mov dword ptr [rbp - 0x100], 0x1c ; mov edx, dword ptr [r14 + 0x10] ; mov rsi, qword ptr [r14 + 0x18] ; mov edi, r12d ; call 0xe436c
read: r12d rip rsp 
write: edi edx rsi rsp 
--------------------------------------------------------------------------------
000d04cc: RLP; test eax, eax ; je 0xd069c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d0598: RLP; cmp eax, -1 ; mov r12d, eax ; mov dword ptr [rbp - 0x100], 0x1c ; jne 0xd04b8
read: eax rflags 
write: r12d rflags 
--------------------------------------------------------------------------------
000d064d: RLP; test eax, eax ; jne 0xd055b
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d066b: RLP; movzx eax, byte ptr [r15 - 0xc] ; mov byte ptr [r15 + 0x24], al ; movzx eax, byte ptr [r15 - 0xb] ; mov byte ptr [r15 + 0x25], al ; movzx eax, byte ptr [r15 - 0xa] ; mov byte ptr [r15 + 0x26], al ; movzx eax, byte ptr [r15 - 9] ; mov byte ptr [r15 + 0x27], al ; mov eax, dword ptr [r15 - 8] ; mov dword ptr [r15 + 0x28], eax ; jmp 0xd04ea
read: al eax 
write: eax 
--------------------------------------------------------------------------------
000d06b3: RLP; test eax, eax ; jne 0xd04d4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d0773: RLP; test eax, eax ; js 0xd0744
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d08c8: RLP; mov rcx, qword ptr [rbp - 0x150] ; mov r8, qword ptr [rbp - 0x160] ; mov ebx, dword ptr [rbp - 0x148] ; mov rax, qword ptr [rcx] ; lea rax, [rax + rax*2] ; shl rax, 4 ; cmp ebx, 1 ; mov rdi, qword ptr [r8 + rax] ; mov qword ptr [rbp - 0x128], rdi ; jle 0xd0cd4
read: ebx rax rdi rflags 
write: ebx r8 rax rcx rdi rflags 
--------------------------------------------------------------------------------
000d0963: RLP; mov rax, qword ptr [rbp - 0x128] ; test rax, rax ; je 0xd0b1d
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000d09c1: RLP; mov eax, dword ptr [r12 + 4] ; test eax, eax ; jne 0xd0ae9
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000d0a83: RLP; mov dword ptr [rbp - 0x108], eax ; mov rax, qword ptr [rbp - 0xc0] ; cmp byte ptr [rax], 0 ; je 0xd0aa9
read: eax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000d0ae4: RLP; jmp 0xd0367
read: 
write: 
--------------------------------------------------------------------------------
000d0b1d: RLP; mov dword ptr [rbp - 0x164], 0xfffffffe ; jmp 0xd097d
read: 
write: 
--------------------------------------------------------------------------------
000d0b62: RLP; mov rdi, qword ptr [rbp - 0x120] ; call 0x1012dc
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000d0b72: RLP; mov eax, dword ptr [rbp - 0x138] ; neg eax ; mov dword ptr [rbp - 0x164], eax ; jmp 0xd097d
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
000d0bb1: RLP; jmp 0xd03db
read: 
write: 
--------------------------------------------------------------------------------
000d0bd5: RLP; or dword ptr [rip + 0x29b384], 2 ; jmp 0xd0367
read: 
write: rflags 
--------------------------------------------------------------------------------
000d0bf1: RLP; jmp 0xd0953
read: 
write: 
--------------------------------------------------------------------------------
000d0cec: RLP; mov dword ptr [rbp - 0x164], 0xfffffffa ; jmp 0xd097d
read: 
write: 
--------------------------------------------------------------------------------
000d0d66: RLP; add rsp, 0x80 ; mov r9d, dword ptr [rbp - 0x19c] ; test r9d, r9d ; je 0xd0d89
read: r9d rflags rsp 
write: r9d rflags rsp 
--------------------------------------------------------------------------------
000d0db3: RLP; cmp dword ptr [rip + 0x29d9b6], 0 ; je 0xd0dc7
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000d0de6: RLP; add rsp, 0x80 ; jmp 0xd08c8
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000d0dfe: RLP; test eax, eax ; jne 0xd0390
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d0e12: RLP; test rax, rax ; mov qword ptr [rbp - 0x160], rax ; je 0xd0e2c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d0e3c: RLP; mov dword ptr [rbp - 0x164], 0xfffffff6 ; jmp 0xd097d
read: 
write: 
--------------------------------------------------------------------------------
000d0e67: RLP; test eax, eax ; jne 0xd0e78
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d0e81: RLP; jmp 0xd0d89
read: 
write: 
--------------------------------------------------------------------------------
000d0ee2: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000d0f3b: RLP; test rax, rax ; je 0xd0fbf
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d0f87: RLP; test rax, rax ; mov r12, rax ; mov rbp, rax ; je 0xd0fbf
read: rax rflags 
write: r12 rbp rflags 
--------------------------------------------------------------------------------
000d0fae: RLP; test rax, rax ; jne 0xd0f40
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d0fbf: RLP; mov eax, 1 ; jmp 0xd0f6a
read: 
write: eax 
--------------------------------------------------------------------------------
000d1031: RLP; test rax, rax ; je 0xd104c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d105a: RLP; jmp 0xd0ffd
read: 
write: 
--------------------------------------------------------------------------------
000d10b3: RLP; test rax, rax ; mov qword ptr [rbx], rax ; je 0xd10dc
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d116f: RLP; test rax, rax ; mov qword ptr [r12], rax ; je 0xd119c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d1192: RLP; test rax, rax ; mov qword ptr [r12], rax ; jne 0xd11cc
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d11c3: RLP; test rax, rax ; mov qword ptr [r12], rax ; je 0xd119c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d123b: RLP; test rax, rax ; je 0xd128c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d1259: RLP; mov byte ptr [rax], 0 ; add qword ptr [r12], rbp ; add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rbp rbx rsp 
write: r12 r13 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000d129a: RLP; jmp 0xd1260
read: 
write: 
--------------------------------------------------------------------------------
000d1332: RLP; test eax, eax ; js 0xd1749
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d1363: RLP; test eax, eax ; mov dword ptr [rsp + 0x44], eax ; js 0xd18f1
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d138a: RLP; cmp qword ptr [rsp + 0x28], 0 ; mov dword ptr [rsp + 0x64], 0xffffffff ; je 0xd155b
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000d13c2: RLP; cmp rax, -1 ; je 0xd161c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d13f0: RLP; test rax, rax ; jne 0xd14cc
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d1417: RLP; cmp eax, 1 ; je 0xd15c4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d1472: RLP; test rax, rax ; jne 0xd13dc
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d14b3: RLP; test rax, rax ; mov qword ptr [r13], rax ; je 0xd15c4
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d151b: RLP; cmp eax, 1 ; je 0xd15c4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d1581: RLP; cmp rax, -1 ; je 0xd175c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d15b5: RLP; test rax, rax ; mov qword ptr [r13], rax ; jne 0xd156c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d15d8: RLP; jmp 0xd15e9
read: 
write: 
--------------------------------------------------------------------------------
000d15f8: RLP; cmp eax, -1 ; je 0xd15dc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d160a: RLP; mov eax, 1 ; jmp 0xd1303
read: 
write: eax 
--------------------------------------------------------------------------------
000d1669: RLP; cdqe ; cmp rax, -1 ; je 0xd164c
read: eax rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000d16aa: RLP; cmp rax, -1 ; je 0xd1684
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d172b: RLP; mov eax, dword ptr [rsp + 0x5c] ; mov dword ptr [rsp + 0x60], 0xffffffff ; test eax, eax ; je 0xd1301
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000d1799: RLP; movsxd r8, eax ; cmp r8, -1 ; je 0xd177c
read: eax r8 rflags 
write: r8 rflags 
--------------------------------------------------------------------------------
000d17d6: RLP; cmp rax, -1 ; je 0xd17b4
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d185e: RLP; mov edi, dword ptr [rsp + 0x64] ; call 0xd711c
read: rip rsp 
write: edi rsp 
--------------------------------------------------------------------------------
000d186b: RLP; test ebx, ebx ; jne 0xd19de
read: ebx rflags 
write: rflags 
--------------------------------------------------------------------------------
000d1881: RLP; lea rdi, [rip + 0x62bb0] ; xor eax, eax ; mov esi, 1 ; call 0xd680c
read: eax rip rsp 
write: eax esi rdi rflags rsp 
--------------------------------------------------------------------------------
000d1898: RLP; cmp eax, 2 ; mov ebx, eax ; jne 0xd1a1f
read: eax rflags 
write: ebx rflags 
--------------------------------------------------------------------------------
000d18be: RLP; test eax, eax ; jne 0xd18e7
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d18fe: RLP; mov edi, dword ptr [rsp + 0x64] ; call 0xd711c
read: rip rsp 
write: edi rsp 
--------------------------------------------------------------------------------
000d190b: RLP; mov eax, 1 ; jmp 0xd1303
read: 
write: eax 
--------------------------------------------------------------------------------
000d1945: RLP; movsxd rdx, eax ; cmp rdx, -1 ; je 0xd1924
read: eax rdx rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
000d19b9: RLP; mov rax, qword ptr [rsp + 0x20] ; mov qword ptr [rax], 0 ; mov rax, qword ptr [rsp + 0x18] ; mov qword ptr [rax], 0 ; mov qword ptr [r13], 0 ; jmp 0xd171e
read: 
write: rax 
--------------------------------------------------------------------------------
000d19ee: RLP; mov edi, dword ptr [rsp + 0x60] ; call 0xd711c
read: rip rsp 
write: edi rsp 
--------------------------------------------------------------------------------
000d19fb: RLP; mov rax, qword ptr [rip + 0x2974a2] ; lea rsi, [rsp + 0x70] ; lea rdi, [rip + 0x63138] ; mov rdx, qword ptr [rax] ; call 0xb31fc
read: rip rsp 
write: rax rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000d1a1a: RLP; call 0x372fc
read: rip rsp 
write: rsp 
--------------------------------------------------------------------------------
000d1a37: RLP; mov edi, ebx ; call 0xd711c
read: ebx rip rsp 
write: edi rsp 
--------------------------------------------------------------------------------
000d1a42: RLP; jmp 0xd18a3
read: 
write: 
--------------------------------------------------------------------------------
000d1a5e: RLP; jmp 0xd186b
read: 
write: 
--------------------------------------------------------------------------------
000d1b06: RLP; test rax, rax ; mov qword ptr [rsp + 0x48], rax ; je 0xd1c18
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d1b35: RLP; mov eax, 5 ; jmp 0xd1b8f
read: 
write: eax 
--------------------------------------------------------------------------------
000d1b7d: RLP; mov rdi, qword ptr [rsp + 0x48] ; mov ebx, eax ; call 0x1f46c
read: eax rip rsp 
write: ebx rdi rsp 
--------------------------------------------------------------------------------
000d1b8d: RLP; mov eax, ebx ; add rsp, 0x58 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: ebx rsp 
write: eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000d1bc2: RLP; test eax, eax ; jne 0xd1bfd
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d1bf5: RLP; test eax, eax ; je 0xd1b14
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d1c0f: RLP; mov eax, dword ptr [rsp + 0x10] ; jmp 0xd1b8f
read: 
write: eax 
--------------------------------------------------------------------------------
000d1c49: RLP; test eax, eax ; mov ebp, eax ; lea rbx, [rsp + 8] ; je 0xd1ca9
read: eax rflags 
write: ebp rbx rflags 
--------------------------------------------------------------------------------
000d1c96: RLP; test eax, eax ; jne 0xd1c54
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d1d33: RLP; test eax, eax ; jne 0xd1c54
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d1d88: RLP; test eax, eax ; mov r13d, eax ; je 0xd1ddf
read: eax rflags 
write: r13d rflags 
--------------------------------------------------------------------------------
000d1dd3: RLP; test eax, eax ; jne 0xd1d8f
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d1e54: RLP; test eax, eax ; jne 0xd1d8f
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d1f2d: RLP; cmp qword ptr [rbp], rbx ; mov qword ptr [r12], rax ; je 0xd1f07
read: rax rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
000d1f59: RLP; test eax, eax ; jne 0xd1f07
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d1f97: RLP; mov rcx, rbx ; mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; mov r8, rax ; call 0xd11dc
read: r12 r13 rax rbp rbx rip rsp 
write: r8 rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000d1faf: RLP; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rsp 
write: r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000d2042: RLP; test rax, rax ; mov rcx, qword ptr [rbp - 0x98] ; mov r9, qword ptr [rbp - 0xa0] ; je 0xd221c
read: rax rflags 
write: r9 rcx rflags 
--------------------------------------------------------------------------------
000d20ee: RLP; lea rdx, [rax + 0x1f] ; mov rsi, rbx ; mov ebx, 0x3e8 ; and rdx, 0xfffffffffffffff0 ; sub rsp, rdx ; mov rdx, rax ; lea rdi, [rsp + 0xf] ; and rdi, 0xfffffffffffffff0 ; mov byte ptr [rdi + rax], 0 ; call 0x8e3dc
read: rax rbx rdi rdx rip rsp 
write: ebx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000d211a: RLP; sub rsp, 0x400 ; mov qword ptr [rbp - 0x98], r15 ; mov qword ptr [rbp - 0xa0], rax ; lea r14, [rsp + 0xf] ; and r14, 0xfffffffffffffff0 ; mov r15, r14 ; mov r14, r12 ; mov r12, rax ; jmp 0xd2197
read: r12 r14 r15 rax rsp 
write: r12 r14 r15 rflags rsp 
--------------------------------------------------------------------------------
000d21af: RLP; test eax, eax ; jne 0xd214c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d21f0: RLP; mov qword ptr [rbx], rax ; mov rdi, qword ptr [rbp - 0x80] ; mov qword ptr [rdi], r15 ; test rax, rax ; sete al ; lea rsp, [rbp - 0x28] ; movzx eax, al ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: al r15 rax rflags rsp 
write: al eax r12 r13 r14 r15 rbp rbx rdi rflags rsp 
--------------------------------------------------------------------------------
000d223b: RLP; mov rdx, qword ptr [rbp - 0x78] ; test rax, rax ; mov qword ptr [rdx], rax ; sete al ; movzx eax, al ; lea rsp, [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: al rax rflags rsp 
write: al eax r12 r13 r14 r15 rbp rbx rdx rflags rsp 
--------------------------------------------------------------------------------
000d228c: RLP; test rax, rax ; mov qword ptr [rbx], rax ; je 0xd21f3
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d22b1: RLP; mov qword ptr [rbx], rax ; jmp 0xd21f3
read: rax 
write: 
--------------------------------------------------------------------------------
000d22cc: RLP; test rax, rax ; je 0xd234a
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d22f2: RLP; test rax, rax ; mov qword ptr [rbx], rax ; jne 0xd21fa
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d232f: RLP; test rax, rax ; mov qword ptr [rbx], rax ; sete al ; lea rsp, [rbp - 0x28] ; movzx eax, al ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: al rax rflags rsp 
write: al eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000d2353: RLP; sub rsp, 0x400 ; mov ebx, eax ; mov r15d, 0x3e8 ; lea r14, [rsp + 0xf] ; lea r13, [rbp - 0x68] ; lea r12, [rbp - 0x60] ; and r14, 0xfffffffffffffff0 ; jmp 0xd23c7
read: eax r14 rsp 
write: ebx r12 r13 r14 r15d rflags rsp 
--------------------------------------------------------------------------------
000d23de: RLP; test eax, eax ; jne 0xd237c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d2419: RLP; test rax, rax ; mov qword ptr [rbx], rax ; jne 0xd21fa
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d24f6: RLP; test rax, rax ; mov qword ptr [rsp + 0x50], rax ; je 0xd2735
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d2526: RLP; mov eax, 5 ; jmp 0xd25a7
read: 
write: eax 
--------------------------------------------------------------------------------
000d2583: RLP; test eax, eax ; jne 0xd2594
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d25a2: RLP; mov eax, 5 ; add rsp, 0x88 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000d25fa: RLP; test eax, eax ; je 0xd2504
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d2614: RLP; mov eax, dword ptr [rsp + 0x24] ; jmp 0xd25a7
read: 
write: eax 
--------------------------------------------------------------------------------
000d2634: RLP; test eax, eax ; je 0xd2504
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d2683: RLP; test eax, eax ; je 0xd2504
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d26b0: RLP; mov eax, 2 ; jmp 0xd25a7
read: 
write: eax 
--------------------------------------------------------------------------------
000d26d2: RLP; mov eax, 2 ; jmp 0xd25a7
read: 
write: eax 
--------------------------------------------------------------------------------
000d26f8: RLP; mov rbx, qword ptr [rsp + 0x28] ; mov rdx, qword ptr [rsp + 0x38] ; mov rcx, rax ; mov rsi, qword ptr [rsp + 0x30] ; mov rdi, qword ptr [rbx] ; call 0xd1f6c
read: rax rip rsp 
write: rbx rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000d2716: RLP; mov rdi, qword ptr [rsp + 0x50] ; mov qword ptr [rbx], rax ; call 0x1f46c
read: rax rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000d2727: RLP; xor eax, eax ; cmp qword ptr [rbx], 0 ; sete al ; jmp 0xd25a7
read: eax rflags 
write: al eax rflags 
--------------------------------------------------------------------------------
000d279a: RLP; mov rbx, qword ptr [rsp + 0x28] ; mov rdx, qword ptr [rsp + 0x38] ; mov rcx, rax ; mov rsi, qword ptr [rsp + 0x30] ; mov rdi, qword ptr [rbx] ; call 0xd1f6c
read: rax rip rsp 
write: rbx rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000d27b8: RLP; mov rdi, qword ptr [rsp + 0x50] ; mov qword ptr [rbx], rax ; call 0x1f46c
read: rax rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000d27c9: RLP; cmp qword ptr [rbx], 0 ; sete al ; movzx eax, al ; jmp 0xd25a7
read: al rflags 
write: al eax rflags 
--------------------------------------------------------------------------------
000d27e6: RLP; test eax, eax ; jne 0xd2594
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d281b: RLP; test rax, rax ; mov qword ptr [r14], rax ; jne 0xd277d
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d2835: RLP; mov eax, 1 ; jmp 0xd25a7
read: 
write: eax 
--------------------------------------------------------------------------------
000d28d9: RLP; mov r15d, eax ; add rsp, 0x108 ; mov eax, r15d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: eax r15d rsp 
write: eax r12 r13 r14 r15 r15d rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000d2a22: RLP; test rax, rax ; mov rdi, rax ; jne 0xd29ec
read: rax rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
000d2a44: RLP; mov rdi, r15 ; mov r15d, r12d ; call 0x1f46c
read: r12d r15 rip rsp 
write: r15d rdi rsp 
--------------------------------------------------------------------------------
000d2a53: RLP; jmp 0xd28dc
read: 
write: 
--------------------------------------------------------------------------------
000d2a7c: RLP; mov qword ptr [rbx], rax ; xor r15d, r15d ; test rax, rax ; sete r15b ; jmp 0xd28dc
read: r15d rax rflags 
write: r15b r15d rflags 
--------------------------------------------------------------------------------
000d2b3e: RLP; test rax, rax ; je 0xd2dec
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d2c4e: RLP; test rax, rax ; je 0xd2a2c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d2d7a: RLP; test rax, rax ; je 0xd392e
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d2da2: RLP; test rax, rax ; mov r10, rax ; je 0xd2a2c
read: rax rflags 
write: r10 rflags 
--------------------------------------------------------------------------------
000d2de1: RLP; jmp 0xd28dc
read: 
write: 
--------------------------------------------------------------------------------
000d2f15: RLP; test rax, rax ; je 0xd3979
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d2fbe: RLP; test rax, rax ; jne 0xd2efc
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d3044: RLP; cmp eax, dword ptr [rip + 0x29b30a] ; mov r10, qword ptr [rsp + 0x40] ; jl 0xd3967
read: eax rflags 
write: r10 rflags 
--------------------------------------------------------------------------------
000d311a: RLP; mov rdi, r15 ; call 0x1f46c
read: r15 rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000d3126: RLP; cmp dword ptr [rsp + 0x78], 0 ; je 0xd32a5
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000d314e: RLP; lea rsi, [rsp + 0xf4] ; xor ecx, ecx ; mov edx, 0xa ; mov rdi, rax ; call 0x4778c
read: ecx rax rip rsp 
write: ecx edx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000d3169: RLP; mov rcx, rax ; mov rbx, qword ptr [rsp + 0x30] ; mov rdx, qword ptr [rsp + 0x28] ; mov rsi, qword ptr [rsp + 0x20] ; mov rdi, qword ptr [rbx] ; call 0xd1f6c
read: rax rip rsp 
write: rbx rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000d3187: RLP; test r14d, r14d ; mov qword ptr [rbx], rax ; je 0xd2a7f
read: r14d rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d319f: RLP; mov rax, qword ptr [rsp + 0x30] ; mov rax, qword ptr [rax] ; jmp 0xd2a7f
read: 
write: rax 
--------------------------------------------------------------------------------
000d31ee: RLP; mov r10, qword ptr [rsp + 0x20] ; jmp 0xd2a38
read: 
write: r10 
--------------------------------------------------------------------------------
000d326b: RLP; test rax, rax ; mov rbp, rax ; mov r10, qword ptr [rsp + 0x38] ; je 0xd2a38
read: rax rflags 
write: r10 rbp rflags 
--------------------------------------------------------------------------------
000d328e: RLP; mov rdi, r15 ; call 0x1f46c
read: r15 rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000d329a: RLP; cmp dword ptr [rsp + 0x78], 0 ; jne 0xd3131
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000d32f8: RLP; cmp dword ptr [rsp + 0x48], 0x25 ; lea rbx, [rbp + rax] ; mov r10, qword ptr [rsp + 0x38] ; je 0xd40eb
read: rflags 
write: r10 rbx rflags 
--------------------------------------------------------------------------------
000d335a: RLP; cmp eax, 1 ; je 0xd333c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d3375: RLP; test rax, rax ; mov rbx, rax ; mov r10, qword ptr [rsp + 0x38] ; je 0xd4239
read: rax rflags 
write: r10 rbx rflags 
--------------------------------------------------------------------------------
000d339d: RLP; test r14d, r14d ; mov byte ptr [rax], 0 ; mov r10, qword ptr [rsp + 0x38] ; jne 0xd4212
read: r14d rflags 
write: r10 rflags 
--------------------------------------------------------------------------------
000d34c0: RLP; test rax, rax ; mov qword ptr [rsp + 0xa8], rax ; je 0xd37dc
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d3502: RLP; mov r15, qword ptr [rsp + 0xa8] ; mov r10, qword ptr [rsp + 0x38] ; jmp 0xd30d8
read: 
write: r10 r15 
--------------------------------------------------------------------------------
000d3559: RLP; test rax, rax ; mov rdi, rax ; mov qword ptr [rsp + 0xa8], rax ; je 0xd37dc
read: rax rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
000d358f: RLP; mov r10, qword ptr [rsp + 0x38] ; test r15, r15 ; je 0xd4068
read: r15 rflags 
write: r10 rflags 
--------------------------------------------------------------------------------
000d35ae: RLP; test rax, rax ; mov rbp, rax ; mov r10, qword ptr [rsp + 0x38] ; je 0xd37e1
read: rax rflags 
write: r10 rbp rflags 
--------------------------------------------------------------------------------
000d35de: RLP; mov r10, qword ptr [rsp + 0x38] ; mov rdi, r10 ; call 0x1f46c
read: r10 rip rsp 
write: r10 rdi rsp 
--------------------------------------------------------------------------------
000d35ef: RLP; mov rdi, r15 ; call 0x1f46c
read: r15 rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000d35fb: RLP; mov r8d, dword ptr [rsp + 0x78] ; test r8d, r8d ; jne 0xd3131
read: r8d rflags 
write: r8d rflags 
--------------------------------------------------------------------------------
000d36ab: RLP; test eax, eax ; je 0xd3787
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d36e4: RLP; mov r10, qword ptr [rsp + 0x20] ; jmp 0xd2a38
read: 
write: r10 
--------------------------------------------------------------------------------
000d377f: RLP; test eax, eax ; jne 0xd36b3
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d37bc: RLP; mov qword ptr [rsp + 0xa8], rax ; movsx ecx, byte ptr [rbp + 1] ; mov rdi, rax ; test cl, cl ; je 0xd432b
read: cl rax rflags 
write: ecx rdi rflags 
--------------------------------------------------------------------------------
000d3831: RLP; mov rbx, qword ptr [rsp + 0x30] ; mov rdx, qword ptr [rsp + 0x28] ; mov rcx, rax ; mov rsi, qword ptr [rsp + 0x20] ; mov rdi, qword ptr [rbx] ; call 0xd1f6c
read: rax rip rsp 
write: rbx rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000d384f: RLP; mov r10, qword ptr [rsp + 0x38] ; mov qword ptr [rbx], rax ; mov rdi, r10 ; call 0x1f46c
read: r10 rax rip rsp 
write: r10 rdi rsp 
--------------------------------------------------------------------------------
000d3863: RLP; mov rdi, r15 ; xor r15d, r15d ; call 0x1f46c
read: r15 r15d rip rsp 
write: r15d rdi rflags rsp 
--------------------------------------------------------------------------------
000d3872: RLP; cmp qword ptr [rbx], 0 ; sete r15b ; jmp 0xd28dc
read: rflags 
write: r15b rflags 
--------------------------------------------------------------------------------
000d3890: RLP; mov r10, qword ptr [rsp + 0x40] ; mov rbp, rax ; test rbp, rbp ; je 0xd3055
read: rax rbp rflags 
write: r10 rbp rflags 
--------------------------------------------------------------------------------
000d38e6: RLP; mov dword ptr [rsp + 0x78], 0 ; mov rbp, rax ; mov r10, qword ptr [rsp + 0x40] ; jmp 0xd3898
read: rax 
write: r10 rbp 
--------------------------------------------------------------------------------
000d39df: RLP; test rax, rax ; mov rdx, qword ptr [rsp + 0x48] ; mov rcx, qword ptr [rsp + 0x58] ; mov r10, qword ptr [rsp + 0x60] ; je 0xd2a38
read: rax rflags 
write: r10 rcx rdx rflags 
--------------------------------------------------------------------------------
000d3a51: RLP; mov rdi, qword ptr [rbp - 8] ; lea r12, [r12 + rax + 1] ; test rdi, rdi ; jne 0xd3a44
read: rdi rflags 
write: r12 rdi rflags 
--------------------------------------------------------------------------------
000d3a73: RLP; test rax, rax ; mov rbp, rax ; mov r10, qword ptr [rsp + 0x40] ; je 0xd37e1
read: rax rflags 
write: r10 rbp rflags 
--------------------------------------------------------------------------------
000d3aa3: RLP; cmp qword ptr [rbx], 0 ; je 0xd3ac9
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000d3ac3: RLP; cmp qword ptr [rbx], 0 ; jne 0xd3aac
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000d3b40: RLP; test r14d, r14d ; mov r13, rax ; jne 0xd3dc7
read: r14d rax rflags 
write: r13 rflags 
--------------------------------------------------------------------------------
000d3b78: RLP; test r12d, r12d ; lea rbp, [rbx + rax] ; jne 0xd3b8b
read: r12d rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
000d3ba2: RLP; mov rsi, qword ptr [rsp + 0x150] ; lea r15, [rbp + rax] ; mov rdi, r15 ; call 0x87bbc
read: r15 rip rsp 
write: r15 rdi rsi rsp 
--------------------------------------------------------------------------------
000d3bbb: RLP; lea rbx, [r15 + rax] ; movsx esi, byte ptr [rbx] ; test sil, sil ; je 0xd3be4
read: rflags sil 
write: esi rbx rflags 
--------------------------------------------------------------------------------
000d3bd8: RLP; test rax, rax ; je 0xd3be4
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d3c01: RLP; test rax, rax ; mov qword ptr [r14], rax ; je 0xd3c6c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d3c36: RLP; cmp eax, 1 ; je 0xd3c72
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d3c87: RLP; xor r10d, r10d ; jmp 0xd2a38
read: r10d 
write: r10d rflags 
--------------------------------------------------------------------------------
000d3cb6: RLP; lea rsi, [rsp + 0xd4] ; movsxd rdi, eax ; xor ecx, ecx ; mov edx, 0xa ; call 0x4778c
read: eax ecx rip rsp 
write: ecx edx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000d3cd1: RLP; mov r10, qword ptr [rsp + 0x40] ; mov rbp, rax ; jmp 0xd3898
read: rax 
write: r10 rbp 
--------------------------------------------------------------------------------
000d3d58: RLP; mov r10d, dword ptr [rip + 0x29aa0d] ; mov ebx, eax ; test r10d, r10d ; mov r10, qword ptr [rsp + 0x20] ; jne 0xd3f70
read: eax r10d rflags 
write: ebx r10 r10d rflags 
--------------------------------------------------------------------------------
000d3d7e: RLP; jmp 0xd28dc
read: 
write: 
--------------------------------------------------------------------------------
000d3d94: RLP; mov r10, qword ptr [rsp + 0x20] ; jmp 0xd36ce
read: 
write: r10 
--------------------------------------------------------------------------------
000d3dad: RLP; jmp 0xd28dc
read: 
write: 
--------------------------------------------------------------------------------
000d3dd3: RLP; jmp 0xd3b4c
read: 
write: 
--------------------------------------------------------------------------------
000d3e10: RLP; mov r10, qword ptr [rsp + 0x20] ; lea rsi, [rip + 0x62924] ; mov rcx, rax ; mov rdx, r10 ; xor edi, edi ; xor eax, eax ; mov qword ptr [rsp + 0x20], r10 ; call 0x6bcbc
read: eax edi r10 rax rip rsp 
write: eax edi r10 rcx rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000d3e34: RLP; mov r10, qword ptr [rsp + 0x20] ; jmp 0xd31d1
read: 
write: r10 
--------------------------------------------------------------------------------
000d3e9a: RLP; test rax, rax ; mov r10, qword ptr [rsp + 0x40] ; je 0xd37e1
read: rax rflags 
write: r10 rflags 
--------------------------------------------------------------------------------
000d3ebc: RLP; test eax, eax ; mov r10, qword ptr [rsp + 0x40] ; jne 0xd37e1
read: eax rflags 
write: r10 rflags 
--------------------------------------------------------------------------------
000d3f00: RLP; test eax, eax ; jne 0xd3f32
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d3f2d: RLP; test rax, rax ; jne 0xd3eec
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d3f4c: RLP; mov rdi, r15 ; xor r15d, r15d ; call 0x1f46c
read: r15 r15d rip rsp 
write: r15d rdi rflags rsp 
--------------------------------------------------------------------------------
000d3f5b: RLP; jmp 0xd28dc
read: 
write: 
--------------------------------------------------------------------------------
000d3f93: RLP; mov r10, qword ptr [rsp + 0x20] ; jmp 0xd3d6f
read: 
write: r10 
--------------------------------------------------------------------------------
000d3fc9: RLP; mov r10, qword ptr [rsp + 0x48] ; jmp 0xd3d15
read: 
write: r10 
--------------------------------------------------------------------------------
000d400c: RLP; mov r10, qword ptr [rsp + 0x38] ; jmp 0xd324b
read: 
write: r10 
--------------------------------------------------------------------------------
000d4027: RLP; mov r10, qword ptr [rsp + 0x38] ; jmp 0xd3214
read: 
write: r10 
--------------------------------------------------------------------------------
000d40c9: RLP; cmp eax, 1 ; mov r10, qword ptr [rsp + 0x38] ; mov byte ptr [r12], r13b ; je 0xd409c
read: eax r13b rflags 
write: r10 rflags 
--------------------------------------------------------------------------------
000d411a: RLP; cmp eax, 1 ; je 0xd40fc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d4134: RLP; test rax, rax ; mov r12, rax ; mov r10, qword ptr [rsp + 0x38] ; je 0xd4371
read: rax rflags 
write: r10 r12 rflags 
--------------------------------------------------------------------------------
000d415c: RLP; test r14d, r14d ; mov byte ptr [rax], 0 ; mov r10, qword ptr [rsp + 0x38] ; jne 0xd4352
read: r14d rflags 
write: r10 rflags 
--------------------------------------------------------------------------------
000d41b0: RLP; cmp eax, 1 ; je 0xd418c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d4200: RLP; test rax, rax ; mov rbx, rax ; mov r10, qword ptr [rsp + 0x38] ; je 0xd424d
read: rax rflags 
write: r10 rbx rflags 
--------------------------------------------------------------------------------
000d4227: RLP; mov r10, qword ptr [rsp + 0x38] ; jmp 0xd310e
read: 
write: r10 
--------------------------------------------------------------------------------
000d4264: RLP; mov r10, qword ptr [rsp + 0x20] ; jmp 0xd2a38
read: 
write: r10 
--------------------------------------------------------------------------------
000d42af: RLP; cmp dword ptr [rsp + 0x78], 0 ; je 0xd3612
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000d42e2: RLP; mov rbx, qword ptr [rsp + 0x30] ; mov rdx, qword ptr [rsp + 0x28] ; mov rcx, rax ; mov rsi, qword ptr [rsp + 0x20] ; mov rdi, qword ptr [rbx] ; call 0xd1f6c
read: rax rip rsp 
write: rbx rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000d4300: RLP; test r14d, r14d ; mov qword ptr [rbx], rax ; je 0xd2a7f
read: r14d rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d4367: RLP; mov r10, qword ptr [rsp + 0x38] ; jmp 0xd310e
read: 
write: r10 
--------------------------------------------------------------------------------
000d43c9: RLP; mov rdi, qword ptr [rbx] ; test rdi, rdi ; jne 0xd43bc
read: rdi rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
000d43e1: RLP; mov qword ptr [rbp + 8], 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000d44aa: RLP; mov rsi, qword ptr [rsp + 0x28] ; test rax, rax ; mov qword ptr [rsi + 8], rax ; je 0xd4f86
read: rax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
000d44d9: RLP; test rax, rax ; mov qword ptr [rsp + 0x20], rax ; je 0xd5120
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d4648: RLP; test rax, rax ; mov qword ptr [rsp + 0xb8], rax ; jne 0xd460c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d466d: RLP; cmp r15d, 1 ; je 0xd4f9a
read: r15d rflags 
write: rflags 
--------------------------------------------------------------------------------
000d4712: RLP; test eax, eax ; mov r15d, eax ; jne 0xd48ee
read: eax rflags 
write: r15d rflags 
--------------------------------------------------------------------------------
000d4768: RLP; jmp 0xd46ad
read: 
write: 
--------------------------------------------------------------------------------
000d481d: RLP; test eax, eax ; jne 0xd4c54
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d4883: RLP; test eax, eax ; je 0xd4724
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d48e3: RLP; test eax, eax ; mov r15d, eax ; je 0xd4724
read: eax rflags 
write: r15d rflags 
--------------------------------------------------------------------------------
000d49dd: RLP; mov dword ptr [rsp + 0x30], eax ; mov r14d, dword ptr [rsp + 0x30] ; test r14d, r14d ; jne 0xd4cf6
read: eax r14d rflags 
write: r14d rflags 
--------------------------------------------------------------------------------
000d4a2f: RLP; test rax, rax ; jne 0xd4db2
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d4a73: RLP; test rax, rax ; mov qword ptr [rsp + 0xb8], rax ; jne 0xd49f4
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d4aa1: RLP; test r15d, r15d ; je 0xd4724
read: r15d rflags 
write: rflags 
--------------------------------------------------------------------------------
000d4abb: RLP; mov eax, 1 ; jmp 0xd46ad
read: 
write: eax 
--------------------------------------------------------------------------------
000d4b09: RLP; test rax, rax ; je 0xd50b4
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d4b2d: RLP; test eax, eax ; mov r15d, eax ; jne 0xd48ee
read: eax rflags 
write: r15d rflags 
--------------------------------------------------------------------------------
000d4bc1: RLP; test eax, eax ; mov r15d, eax ; je 0xd4724
read: eax rflags 
write: r15d rflags 
--------------------------------------------------------------------------------
000d4bf6: RLP; test eax, eax ; mov r15d, eax ; je 0xd4724
read: eax rflags 
write: r15d rflags 
--------------------------------------------------------------------------------
000d4c4c: RLP; test eax, eax ; je 0xd4825
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d4c86: RLP; test rax, rax ; mov qword ptr [rsp + 0xb8], rax ; jne 0xd4825
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d4cb4: RLP; test eax, eax ; je 0xd4825
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d4ce4: RLP; mov dword ptr [rsp + 0x30], eax ; mov r14d, dword ptr [rsp + 0x30] ; test r14d, r14d ; je 0xd49f4
read: eax r14d rflags 
write: r14d rflags 
--------------------------------------------------------------------------------
000d4d09: RLP; mov rdi, qword ptr [rsp + 0xb8] ; jmp 0xd4664
read: 
write: rdi 
--------------------------------------------------------------------------------
000d4d8e: RLP; test eax, eax ; mov dword ptr [rsp + 0x30], eax ; je 0xd49f4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d4de1: RLP; test eax, eax ; mov r15d, eax ; mov qword ptr [rsp + 0xb0], 0 ; mov qword ptr [rsp + 0xa8], 0 ; mov qword ptr [rsp + 0xb8], 0 ; jne 0xd4cfb
read: eax rflags 
write: r15d rflags 
--------------------------------------------------------------------------------
000d4e56: RLP; test eax, eax ; jne 0xd5064
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d4e97: RLP; cmp qword ptr [rsp + 0xe0], 1 ; mov rdi, rax ; mov qword ptr [rsp + 0xb8], rax ; jbe 0xd4f28
read: rax rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
000d4ee5: RLP; test rax, rax ; mov qword ptr [rsp + 0xb8], rax ; je 0xd4f18
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d4f10: RLP; mov qword ptr [rsp + 0xb8], rax ; add ebx, 1 ; mov r14d, ebx ; cmp r14, qword ptr [rsp + 0xe0] ; jb 0xd4ec4
read: ebx r14 rax rflags 
write: ebx r14d rflags 
--------------------------------------------------------------------------------
000d4f36: RLP; cmp qword ptr [rsp + 0xb8], 0 ; je 0xd5056
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000d4f79: RLP; test rax, rax ; mov qword ptr [r15 + 8], rax ; jne 0xd44c9
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d4f9a: RLP; mov eax, 1 ; jmp 0xd46ad
read: 
write: eax 
--------------------------------------------------------------------------------
000d4fb7: RLP; jmp 0xd4724
read: 
write: 
--------------------------------------------------------------------------------
000d4fd2: RLP; mov qword ptr [rsp + 0xb0], 0 ; mov qword ptr [rsp + 0xa8], 0 ; mov qword ptr [rsp + 0xb8], 0 ; xor ebx, ebx ; xor eax, eax ; cmp qword ptr [rsp + 0xe0], 0 ; jne 0xd502e
read: eax ebx rflags 
write: eax ebx rflags 
--------------------------------------------------------------------------------
000d501b: RLP; test eax, eax ; jne 0xd5048
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d5043: RLP; test rax, rax ; jne 0xd500c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d5056: RLP; mov r15d, 1 ; jmp 0xd4cfb
read: 
write: r15d 
--------------------------------------------------------------------------------
000d509a: RLP; jmp 0xd4f45
read: 
write: 
--------------------------------------------------------------------------------
000d50c7: RLP; test rax, rax ; jne 0xd5199
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d50ea: RLP; test rax, rax ; mov qword ptr [rsp + 0xb8], rax ; jne 0xd4724
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d5112: RLP; mov qword ptr [rsp + 0x70], 0 ; jmp 0xd446d
read: 
write: 
--------------------------------------------------------------------------------
000d5150: RLP; jmp 0xd4688
read: 
write: 
--------------------------------------------------------------------------------
000d5181: RLP; jmp 0xd4677
read: 
write: 
--------------------------------------------------------------------------------
000d520d: RLP; mov qword ptr [rsp], rax ; mov r10, rcx ; mov eax, 0x11 ; syscall ; mov rdi, qword ptr [rsp] ; mov rdx, rax ; call 0xf081c
read: rax rcx rip rsp 
write: eax r10 rdi rdx rsp 
--------------------------------------------------------------------------------
000d522b: RLP; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xd523b
read: rax rdx rflags rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000d527d: RLP; mov qword ptr [rsp], rax ; mov r10, rcx ; mov eax, 0x12 ; syscall ; mov rdi, qword ptr [rsp] ; mov rdx, rax ; call 0xf081c
read: rax rcx rip rsp 
write: eax r10 rdi rdx rsp 
--------------------------------------------------------------------------------
000d529b: RLP; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xd52ab
read: rax rdx rflags rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000d52e2: RLP; test rax, rax ; mov edx, 0xc ; je 0xd52f4
read: rax rflags 
write: edx rflags 
--------------------------------------------------------------------------------
000d53e7: RLP; cmp dword ptr [r12 + 4], ebx ; mov rdi, qword ptr [r12 + 8] ; jg 0xd53ca
read: ebx rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
000d53fc: RLP; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
read: eax rsp 
write: eax r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000d5429: RLP; cmp ebx, eax ; jl 0xd543c
read: eax ebx rflags 
write: rflags 
--------------------------------------------------------------------------------
000d5480: RLP; mov edx, eax ; mov eax, 0xc ; test edx, edx ; jne 0xd5432
read: eax edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
000d54ca: RLP; cmp ebx, eax ; jl 0xd54ec
read: eax ebx rflags 
write: rflags 
--------------------------------------------------------------------------------
000d5506: RLP; test rax, rax ; mov r15, rax ; je 0xd54d3
read: rax rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
000d5558: RLP; test eax, eax ; jne 0xd5563
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d556f: RLP; jmp 0xd54d3
read: 
write: 
--------------------------------------------------------------------------------
000d5599: RLP; mov ecx, ebx ; shr ecx, 0x1f ; test cl, cl ; je 0xd55ac
read: cl ebx ecx rflags 
write: ecx rflags 
--------------------------------------------------------------------------------
000d55f8: RLP; mov edx, eax ; mov eax, 0xc ; test edx, edx ; jne 0xd55a7
read: eax edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
000d5834: RLP; add rsp, 0x18 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000d5854: RLP; add rsp, 0x18 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000d58fe: RLP; leave ; ret
read: rbp rsp 
write: rbp rsp 
--------------------------------------------------------------------------------
000d5984: RLP; test eax, eax ; je 0xd59b5
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d5a5c: RLP; cmp eax, -1 ; mov r15d, eax ; je 0xd5ad6
read: eax rflags 
write: r15d rflags 
--------------------------------------------------------------------------------
000d5a76: RLP; cmp eax, dword ptr [rbx + 8] ; jne 0xd5ad6
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d5a87: RLP; test eax, eax ; jne 0xd5ad6
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d5ad1: RLP; cmp eax, dword ptr [rbx + 0xc] ; je 0xd5a8c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d5ae9: RLP; jmp 0xd5984
read: 
write: 
--------------------------------------------------------------------------------
000d5b00: RLP; test eax, eax ; je 0xd5a8c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d5b36: RLP; jmp 0xd5b09
read: 
write: 
--------------------------------------------------------------------------------
000d5b57: RLP; test rax, rax ; jne 0xd5efe
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d5b70: RLP; test rax, rax ; mov r12, rax ; je 0xd5e9c
read: rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
000d5b8f: RLP; mov rdi, r12 ; lea rbx, [rax + 1] ; call 0x856dc
read: r12 rip rsp 
write: rbx rdi rsp 
--------------------------------------------------------------------------------
000d5b9f: RLP; lea rdx, [rax + 1] ; mov rsi, r14 ; lea rax, [rbx + rdx + 0x1e] ; and rax, 0xfffffffffffffff0 ; sub rsp, rax ; lea rax, [rsp + 0xf] ; and rax, 0xfffffffffffffff0 ; lea rdi, [rax + rdx] ; mov rdx, rbx ; call 0x8e3dc
read: r14 rax rbx rip rsp 
write: rax rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000d5bcb: RLP; mov r14d, dword ptr [rbp + 0x10] ; mov r13, rax ; lea rax, [rax - 1] ; mov byte ptr [r13 - 1], 0x2f ; mov qword ptr [rbp - 0xf8], rax ; and r14d, 2 ; jmp 0xd5c1f
read: r14d rax 
write: r13 r14d rax rflags 
--------------------------------------------------------------------------------
000d5c33: RLP; cmp r12, rax ; mov rbx, rax ; je 0xd5c5a
read: r12 rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000d5c57: RLP; mov r15, rax ; mov rdx, qword ptr [rbp - 0xf0] ; mov rsi, qword ptr [rbp - 0xe8] ; mov rdi, r15 ; call 0xb31fc
read: r15 rax rip rsp 
write: r15 rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000d5c74: RLP; test r14d, r14d ; je 0xd5bec
read: r14d rflags 
write: rflags 
--------------------------------------------------------------------------------
000d5cac: RLP; mov edx, dword ptr fs:[r12] ; jmp 0xd5bf6
read: 
write: edx 
--------------------------------------------------------------------------------
000d5d06: RLP; test eax, eax ; jne 0xd5ad6
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d5d7a: RLP; test eax, eax ; je 0xd5d3c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d5da5: RLP; cmp eax, -1 ; je 0xd5ad6
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d5dd0: RLP; test eax, eax ; jne 0xd5ad6
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d5dee: RLP; mov rdx, -1 ; mov esi, eax ; mov eax, 0x75 ; mov rdi, rdx ; syscall ; cmp rax, -0x1000 ; ja 0xd5eed
read: eax rax rdx rflags 
write: eax esi rdi rdx rflags 
--------------------------------------------------------------------------------
000d5e1f: RLP; mov rdx, -1 ; mov esi, eax ; mov eax, 0x77 ; mov rdi, rdx ; syscall ; cmp rax, -0x1000 ; ja 0xd5eed
read: eax rax rdx rflags 
write: eax esi rdi rdx rflags 
--------------------------------------------------------------------------------
000d5e8b: RLP; cmp eax, -1 ; jne 0xd59f0
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d5eab: RLP; lea rcx, [rax + 0x1f] ; mov rdx, rax ; xor edi, edi ; and rcx, 0xfffffffffffffff0 ; sub rsp, rcx ; lea r12, [rsp + 0xf] ; and r12, 0xfffffffffffffff0 ; lea rsi, [r12 + 1] ; mov byte ptr [r12], 0x3a ; call 0xca49c
read: edi r12 rax rcx rip rsp 
write: edi r12 rcx rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000d5ed7: RLP; jmp 0xd5b7c
read: 
write: 
--------------------------------------------------------------------------------
000d5f1c: RLP; test byte ptr [rbp + 0x10], 2 ; je 0xd5ad6
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000d5f55: RLP; jmp 0xd5ad6
read: 
write: 
--------------------------------------------------------------------------------
000d6175: RLP; mov rdx, -1 ; test eax, eax ; cmove rdx, qword ptr [rsp] ; add rsp, 0x18 ; mov rax, rdx ; ret
read: eax rdx rflags rsp 
write: rax rdx rflags rsp 
--------------------------------------------------------------------------------
000d6279: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000d629d: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000d62e1: RLP; mov edx, dword ptr [rsp] ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xd62f3
read: rax rflags rsp 
write: edx rflags rsp 
--------------------------------------------------------------------------------
000d6365: RLP; add rsp, 0x18 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000d6397: RLP; add rsp, 0x18 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000d662a: RLP; test eax, eax ; js 0xd6654
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d6645: RLP; xor eax, eax ; sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
read: eax rsp 
write: eax r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000d6679: RLP; test eax, eax ; js 0xd669c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d6690: RLP; xor eax, eax ; sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
read: eax rsp 
write: eax r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000d683a: RLP; mov qword ptr [rsp], rax ; mov eax, 2 ; syscall ; mov rdi, qword ptr [rsp] ; mov rdx, rax ; call 0xf081c
read: rax rip rsp 
write: eax rdi rdx rsp 
--------------------------------------------------------------------------------
000d6855: RLP; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xd6865
read: rax rdx rflags rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000d6895: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000d68c5: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000d699f: RLP; mov r10, qword ptr [rsp + 8] ; mov r8d, eax ; movsxd rdx, dword ptr [rsp + 0x1c] ; mov rsi, qword ptr [rsp + 0x10] ; movsxd rdi, dword ptr [rsp + 0x18] ; mov eax, 0x101 ; syscall ; cmp rax, -0x1000 ; ja 0xd69de
read: eax rax rflags 
write: eax r10 r8d rdi rdx rflags rsi 
--------------------------------------------------------------------------------
000d69d5: RLP; mov eax, dword ptr [rsp + 8] ; jmp 0xd6940
read: 
write: eax 
--------------------------------------------------------------------------------
000d6a14: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000d6a44: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000d6a8a: RLP; mov qword ptr [rsp], rax ; mov eax, 0 ; syscall ; mov rdi, qword ptr [rsp] ; mov rdx, rax ; call 0xf081c
read: rax rip rsp 
write: eax rdi rdx rsp 
--------------------------------------------------------------------------------
000d6aa5: RLP; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xd6ab5
read: rax rdx rflags rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000d6afa: RLP; mov qword ptr [rsp], rax ; mov eax, 1 ; syscall ; mov rdi, qword ptr [rsp] ; mov rdx, rax ; call 0xf081c
read: rax rip rsp 
write: eax rdi rdx rsp 
--------------------------------------------------------------------------------
000d6b15: RLP; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xd6b25
read: rax rdx rflags rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000d6b9a: RLP; test eax, eax ; mov ebp, eax ; jne 0xd6c94
read: eax rflags 
write: ebp rflags 
--------------------------------------------------------------------------------
000d6bcd: RLP; mov r14d, eax ; call 0xb3dec
read: eax rip rsp 
write: r14d rsp 
--------------------------------------------------------------------------------
000d6bd9: RLP; mov r15d, eax ; call 0xb3dbc
read: eax rip rsp 
write: r15d rsp 
--------------------------------------------------------------------------------
000d6be5: RLP; cmp eax, r14d ; je 0xd6c5c
read: eax r14d rflags 
write: rflags 
--------------------------------------------------------------------------------
000d6c14: RLP; test eax, eax ; je 0xd6c84
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d6c65: RLP; cmp eax, r15d ; jne 0xd6bea
read: eax r15d rflags 
write: rflags 
--------------------------------------------------------------------------------
000d6c79: RLP; mov ebp, eax ; jmp 0xd6bad
read: eax 
write: ebp 
--------------------------------------------------------------------------------
000d6d39: RLP; test eax, eax ; mov r12d, eax ; jne 0xd6e54
read: eax rflags 
write: r12d rflags 
--------------------------------------------------------------------------------
000d6d5e: RLP; test eax, eax ; jne 0xd6d72
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d6d8d: RLP; cmp ebp, eax ; je 0xd6e04
read: eax ebp rflags 
write: rflags 
--------------------------------------------------------------------------------
000d6d9e: RLP; test eax, eax ; jne 0xd6e04
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d6ddd: RLP; jmp 0xd6d5e
read: 
write: 
--------------------------------------------------------------------------------
000d6df5: RLP; nop dword ptr [rax] ; jmp 0xd6d8d
read: 
write: 
--------------------------------------------------------------------------------
000d6f2e: RLP; add rsp, 0x58 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000d6f7d: RLP; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000d6f9a: RLP; mov rdx, qword ptr [rsp] ; mov edi, dword ptr [rsp + 0xc] ; mov ebx, eax ; mov esi, 7 ; call 0xd6e7c
read: eax rip rsp 
write: ebx edi esi rdx rsp 
--------------------------------------------------------------------------------
000d6fb2: RLP; mov edi, ebx ; mov ebp, eax ; call 0xf081c
read: eax ebx rip rsp 
write: ebp edi rsp 
--------------------------------------------------------------------------------
000d6fbf: RLP; mov eax, ebp ; jmp 0xd6f7d
read: ebp 
write: eax 
--------------------------------------------------------------------------------
000d705c: RLP; test eax, eax ; js 0xd7111
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d7078: RLP; cmp ebx, eax ; jne 0xd70fc
read: eax ebx rflags 
write: rflags 
--------------------------------------------------------------------------------
000d70a5: RLP; add rsp, 0x20 ; pop rbx ; ret
read: rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
000d714a: RLP; mov qword ptr [rsp], rax ; mov eax, 3 ; syscall ; mov rdi, qword ptr [rsp] ; mov rdx, rax ; call 0xf081c
read: rax rip rsp 
write: eax rdi rdx rsp 
--------------------------------------------------------------------------------
000d7165: RLP; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xd7175
read: rax rdx rflags rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000d72aa: RLP; mov qword ptr [rsp], rax ; mov eax, 0x55 ; syscall ; mov rdi, qword ptr [rsp] ; mov rdx, rax ; call 0xf081c
read: rax rip rsp 
write: eax rdi rdx rsp 
--------------------------------------------------------------------------------
000d72c5: RLP; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xd72d5
read: rax rdx rflags rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000d737e: RLP; mov esi, 0x1000 ; cmp eax, 0x1000 ; cmovge esi, eax ; movsxd rsi, esi ; mov rdi, rsi ; mov qword ptr [rsp], rsi ; call 0x1f3cc
read: eax esi rflags rip rsi rsp 
write: esi rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000d739e: RLP; test rax, rax ; mov rbp, rax ; mov rsi, qword ptr [rsp] ; jne 0xd73bc
read: rax rflags 
write: rbp rflags rsi 
--------------------------------------------------------------------------------
000d7426: RLP; xor eax, eax ; jmp 0xd73e5
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
000d7458: RLP; mov r12, rax ; jmp 0xd73db
read: rax 
write: r12 
--------------------------------------------------------------------------------
000d74c8: RLP; test eax, eax ; js 0xd78b4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d74fe: RLP; test eax, eax ; js 0xd78b4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d7550: RLP; test eax, eax ; mov r13d, eax ; js 0xd78f9
read: eax rflags 
write: r13d rflags 
--------------------------------------------------------------------------------
000d7570: RLP; test eax, eax ; js 0xd796e
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d7589: RLP; test eax, eax ; jne 0xd78e8
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d75ac: RLP; test rax, rax ; mov r14, rax ; jne 0xd75e0
read: rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
000d75f9: RLP; test rax, rax ; jne 0xd75bc
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d7620: RLP; jmp 0xd75e5
read: 
write: 
--------------------------------------------------------------------------------
000d765f: RLP; test eax, eax ; js 0xd75e5
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d76ed: RLP; test rax, rax ; mov r8, rax ; mov rcx, qword ptr [rsp] ; mov r9, qword ptr [rsp + 8] ; je 0xd7a00
read: rax rflags 
write: r8 r9 rcx rflags 
--------------------------------------------------------------------------------
000d7739: RLP; mov r8, qword ptr [rsp] ; mov rcx, qword ptr [rsp + 8] ; mov qword ptr [rsp + 0x38], rax ; mov qword ptr [rsp + 0x20], rbx ; mov qword ptr [rsp + 0x28], r8 ; mov r8, qword ptr [rsp + 0x38] ; mov rdx, rcx ; mov rsi, rbp ; sub r8, rcx ; mov rdi, r8 ; call 0x8e3dc
read: r8 rax rbp rbx rcx rip rsp 
write: r8 rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000d776b: RLP; mov r8, rax ; lea rax, [rax - 1] ; mov byte ptr [r8 - 1], 0x2f ; mov qword ptr [rsp + 0x38], rax ; mov rax, qword ptr [rsp + 0x58] ; cmp qword ptr [rsp + 0x50], rax ; je 0xd79cc
read: rax rflags 
write: r8 rax rflags 
--------------------------------------------------------------------------------
000d7825: RLP; mov edx, dword ptr [rsp] ; test dl, dl ; je 0xd7836
read: dl rflags 
write: edx rflags 
--------------------------------------------------------------------------------
000d7868: RLP; xor eax, eax ; jmp 0xd73e5
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
000d787b: RLP; mov eax, dword ptr fs:[r15] ; mov edi, 0x1001 ; mov dword ptr [rsp + 0x44], eax ; call 0x1f3cc
read: eax rip rsp 
write: eax edi rsp 
--------------------------------------------------------------------------------
000d7891: RLP; test rax, rax ; mov rbp, rax ; je 0xd7991
read: rax rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
000d78e3: RLP; jmp 0xd7842
read: 
write: 
--------------------------------------------------------------------------------
000d794e: RLP; cmp byte ptr [rsp + 0x43], 0 ; jne 0xd799f
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000d79ae: RLP; mov qword ptr [rsp + 0x18], rax ; jmp 0xd7955
read: rax 
write: 
--------------------------------------------------------------------------------
000d79ed: RLP; test eax, eax ; jne 0xd7a30
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d7a64: RLP; test rax, rax ; mov rbx, rax ; je 0xd7aac
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000d7a7e: RLP; add rsp, 0x1000 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
read: rbx rsp 
write: r12 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000d7ac7: RLP; jmp 0xd7a7e
read: 
write: 
--------------------------------------------------------------------------------
000d7ae8: RLP; test rax, rax ; mov rbx, rax ; je 0xd7b0c
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000d7b08: RLP; test eax, eax ; je 0xd7b2c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d7b19: RLP; add rsp, 0x120 ; pop rbx ; ret
read: rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
000d7b45: RLP; test eax, eax ; jne 0xd7b0c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d7b72: RLP; jmp 0xd7b19
read: 
write: 
--------------------------------------------------------------------------------
000d7c81: RLP; test eax, eax ; js 0xd7e5c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d7c9e: RLP; test eax, eax ; js 0xd7e5c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d7ce9: RLP; mov rdx, qword ptr [rip + 0x2942d4] ; mov byte ptr [rax], 0 ; test rdx, rdx ; je 0xd7e1c
read: rdx rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
000d7d0f: RLP; cmp rax, -1 ; mov rbx, rax ; je 0xd7f2c
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000d7d55: RLP; test eax, eax ; mov r8, r12 ; je 0xd7e6c
read: eax r12 rflags 
write: r8 rflags 
--------------------------------------------------------------------------------
000d7d8f: RLP; test eax, eax ; jne 0xd7daa
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d7de2: RLP; test rax, rax ; jne 0xd7e5e
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d7e19: RLP; jmp 0xd7e5e
read: 
write: 
--------------------------------------------------------------------------------
000d7e35: RLP; test rax, rax ; mov qword ptr [rip + 0x29296d], rax ; je 0xd7f1c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d7e84: RLP; mov r8, r12 ; jmp 0xd7d60
read: r12 
write: r8 
--------------------------------------------------------------------------------
000d7ea0: RLP; test eax, eax ; jne 0xd7d77
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d7f09: RLP; test rax, rax ; jne 0xd7e5e
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d7fbd: RLP; test eax, eax ; js 0xd81ac
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d7fdb: RLP; test eax, eax ; js 0xd81ac
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d8026: RLP; lea rdx, [r12 - 1] ; mov byte ptr [rax], 0 ; mov rsi, rbp ; mov rdi, r15 ; call 0xd832c
read: r15 rbp rip rsp 
write: rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000d803d: RLP; cmp rax, -1 ; je 0xd820c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d8068: RLP; test eax, eax ; jne 0xd808c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d8083: RLP; nop word ptr [rax + rax] ; mov byte ptr [rbp + r13], 0 ; cmp byte ptr [rbp], 0x2f ; lea r13, [rsp + 0x100] ; je 0xd81bc
read: rflags 
write: r13 rflags 
--------------------------------------------------------------------------------
000d80d4: RLP; test eax, eax ; jne 0xd8124
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d810f: RLP; cdqe ; test rax, rax ; jne 0xd812d
read: eax rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000d8161: RLP; cdqe ; test rax, rax ; je 0xd8116
read: eax rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000d81a3: RLP; jmp 0xd7f81
read: 
write: 
--------------------------------------------------------------------------------
000d81d0: RLP; test eax, eax ; jne 0xd80a4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d8240: RLP; test eax, eax ; sete al ; add rsp, 0x48 ; movzx eax, al ; ret
read: al eax rflags rsp 
write: al eax rflags rsp 
--------------------------------------------------------------------------------
000d847b: RLP; test rax, rax ; je 0xd84bc
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d84a6: RLP; test rax, rax ; sete al ; movzx eax, al ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
read: al eax rax rflags rsp 
write: al eax r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000d8520: RLP; mov byte ptr [rax], 0 ; mov esi, dword ptr [r13 + 8] ; cmp esi, -1 ; je 0xd864c
read: esi rflags 
write: esi rflags 
--------------------------------------------------------------------------------
000d855b: RLP; test eax, eax ; js 0xd8684
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d85c8: RLP; test rax, rax ; je 0xd87eb
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d8607: RLP; mov edx, eax ; test byte ptr [rbx + 0x30], 0x10 ; mov eax, edx ; je 0xd859e
read: eax edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
000d8678: RLP; test eax, eax ; jns 0xd8563
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d86cf: RLP; test eax, eax ; jne 0xd873c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d86fd: RLP; jmp 0xd855b
read: 
write: 
--------------------------------------------------------------------------------
000d875a: RLP; mov edx, eax ; jmp 0xd8609
read: eax 
write: edx 
--------------------------------------------------------------------------------
000d878e: RLP; test rax, rax ; je 0xd87c8
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d87c3: RLP; jmp 0xd86cf
read: 
write: 
--------------------------------------------------------------------------------
000d87dc: RLP; test eax, eax ; mov edx, eax ; je 0xd85f5
read: eax rflags 
write: edx rflags 
--------------------------------------------------------------------------------
000d8859: RLP; test rax, rax ; mov r15, rax ; je 0xd8c0c
read: rax rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
000d888c: RLP; lea rbp, [rax + rbx] ; mov rdx, rax ; lea rax, [rbp + 2] ; cmp rax, r13 ; jb 0xd88d7
read: r13 rax rflags 
write: rax rbp rdx rflags 
--------------------------------------------------------------------------------
000d88c6: RLP; test rax, rax ; mov rdx, qword ptr [rsp + 8] ; je 0xd8c3c
read: rax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
000d88eb: RLP; mov byte ptr [rax], 0 ; mov rdi, qword ptr [rsp] ; call 0xaebbc
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000d88fb: RLP; test rax, rax ; jne 0xd887c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d8924: RLP; mov rdx, qword ptr [r14 + 8] ; mov qword ptr [rbp + 0x10], rax ; mov rax, qword ptr [r14] ; mov rax, qword ptr [rax + rdx*8] ; cmp qword ptr [rax + 0x10], 0 ; je 0xd8c3c
read: rax rflags 
write: rax rdx rflags 
--------------------------------------------------------------------------------
000d894b: RLP; mov rdx, qword ptr [r14 + 8] ; mov rax, qword ptr [r14] ; lea rax, [rax + rdx*8] ; mov rcx, qword ptr [rax] ; mov qword ptr [rcx], 0 ; mov rcx, qword ptr [rax] ; mov dword ptr [rcx + 8], 0xffffffff ; mov qword ptr [rax], 0 ; mov rax, qword ptr [r14] ; cmp qword ptr [rax + rdx*8], 0 ; jne 0xd8e39
read: rflags 
write: rax rcx rdx rflags 
--------------------------------------------------------------------------------
000d89b0: RLP; cmp eax, -1 ; mov ebx, eax ; mov qword ptr [rsp + 0x30], 0 ; je 0xd8c0c
read: eax rflags 
write: ebx rflags 
--------------------------------------------------------------------------------
000d89cf: RLP; test rax, rax ; mov qword ptr [rsp + 0x30], rax ; je 0xd8e1e
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d8a39: RLP; cmp rbx, rax ; je 0xd8e58
read: rax rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
000d8a6d: RLP; test rax, rax ; mov rbx, rax ; je 0xd8c9c
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000d8a89: RLP; movzx r8d, byte ptr [rbx + 0x12] ; mov rcx, rax ; mov rdx, r12 ; mov rsi, rbp ; mov rdi, r14 ; call 0xd84cc
read: r12 r14 rax rbp rip rsp 
write: r8d rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000d8aa3: RLP; test eax, eax ; mov ebx, eax ; jne 0xd8c9c
read: eax rflags 
write: ebx rflags 
--------------------------------------------------------------------------------
000d8ae1: RLP; mov rcx, rax ; xor r8d, r8d ; mov rdx, r12 ; sub rcx, r12 ; mov rsi, rbp ; mov rdi, r14 ; mov r13, rax ; call 0xd84cc
read: r12 r14 r8d rax rbp rcx rip rsp 
write: r13 r8d rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000d8aff: RLP; test eax, eax ; mov ebx, eax ; lea r12, [r13 + 1] ; je 0xd8acc
read: eax rflags 
write: ebx r12 rflags 
--------------------------------------------------------------------------------
000d8b23: RLP; mov dword ptr fs:[rbp], r12d ; nop dword ptr [rax] ; test byte ptr [r14 + 0x30], 0x10 ; je 0xd8b3c
read: r12d rflags 
write: rflags 
--------------------------------------------------------------------------------
000d8bb4: RLP; test eax, eax ; je 0xd8c61
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d8bd7: RLP; test eax, eax ; jns 0xd8c61
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d8bfc: RLP; mov qword ptr [rsp + 0x30], rax ; test rax, rax ; jne 0xd89dd
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d8c35: RLP; mov ebx, eax ; jmp 0xd8c61
read: eax 
write: ebx 
--------------------------------------------------------------------------------
000d8c52: RLP; mov eax, ebp ; mov dword ptr fs:[rbx], ebp ; cmp eax, 0xd ; je 0xd8c1b
read: eax ebp rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000d8ccb: RLP; mov rax, qword ptr [r14 + 8] ; mov dword ptr [rsp + 0x38], 0xffffffff ; mov dword ptr fs:[rbp], r12d ; lea rdx, [rax - 1] ; test rax, rax ; mov qword ptr [r14 + 8], rdx ; jne 0xd8cf5
read: r12d rax rdx rflags 
write: rax rdx rflags 
--------------------------------------------------------------------------------
000d8d46: RLP; mov ebx, eax ; jmp 0xd8b5e
read: eax 
write: ebx 
--------------------------------------------------------------------------------
000d8d6e: RLP; test eax, eax ; mov ebx, eax ; jne 0xd8da1
read: eax rflags 
write: ebx rflags 
--------------------------------------------------------------------------------
000d8d94: RLP; test eax, eax ; jns 0xd8a22
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d8dbb: RLP; mov rax, qword ptr [r14 + 8] ; mov dword ptr fs:[rbp], r12d ; lea rdx, [rax - 1] ; test rax, rax ; mov qword ptr [r14 + 8], rdx ; jne 0xd8ddd
read: r12d rax rdx rflags 
write: rax rdx rflags 
--------------------------------------------------------------------------------
000d8e11: RLP; test eax, eax ; jns 0xd8c61
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d8f22: RLP; mov rdi, r15 ; call 0x856dc
read: r15 rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000d8f2e: RLP; lea rdi, [rax + rax] ; mov eax, 0x1000 ; cmp rdi, 0x1000 ; cmovb rdi, rax ; mov qword ptr [rbp - 0x100], rdi ; call 0x1f3cc
read: rax rdi rflags rip rsp 
write: eax rdi rflags rsp 
--------------------------------------------------------------------------------
000d8f52: RLP; test rax, rax ; mov r12, rax ; mov qword ptr [rbp - 0x108], rax ; je 0xd941c
read: rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
000d8f74: RLP; mov rcx, rax ; lea rax, [r12 + 1] ; cmp rcx, rax ; ja 0xd8f95
read: rax rcx rflags 
write: rax rcx rflags 
--------------------------------------------------------------------------------
000d9055: RLP; test eax, eax ; mov r8, qword ptr [rbp - 0x130] ; jns 0xd90c9
read: eax rflags 
write: r8 rflags 
--------------------------------------------------------------------------------
000d90b3: RLP; test eax, eax ; mov rcx, qword ptr [rbp - 0x130] ; mov r8, qword ptr [rbp - 0x138] ; js 0xd9294
read: eax rflags 
write: r8 rcx rflags 
--------------------------------------------------------------------------------
000d9117: RLP; mov r15d, eax ; mov r14d, dword ptr fs:[r12] ; and ebx, 0x10 ; je 0xd922c
read: eax ebx rflags 
write: ebx r14d r15d rflags 
--------------------------------------------------------------------------------
000d915e: RLP; mov rdi, rbx ; call 0x1f46c
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000d916a: RLP; mov dword ptr fs:[r12], r14d ; jmp 0xd9251
read: r14d 
write: 
--------------------------------------------------------------------------------
000d9193: RLP; cmp eax, -1 ; mov r13d, eax ; je 0xd9304
read: eax rflags 
write: r13d rflags 
--------------------------------------------------------------------------------
000d9208: RLP; mov r15d, eax ; movsxd rax, dword ptr [rbp - 0xf8] ; mov rdx, qword ptr [rbp - 0x108] ; mov byte ptr [rdx + rax - 1], r14b ; test r15d, r15d ; je 0xd93a0
read: eax r14b r15d rflags 
write: r15d rax rdx rflags 
--------------------------------------------------------------------------------
000d9242: RLP; movsxd rdi, r13d ; mov eax, 3 ; syscall ; mov dword ptr fs:[r12], r14d ; mov rsi, qword ptr [rip + 0x28fd3c] ; mov rdi, qword ptr [rbp - 0xd0] ; call 0xe1a4c
read: r13d r14d rip rsp 
write: eax rdi rsi rsp 
--------------------------------------------------------------------------------
000d9268: RLP; mov rdi, qword ptr [rbp - 0x108] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000d9278: RLP; mov dword ptr fs:[r12], r14d ; mov eax, r15d ; lea rsp, [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: r14d r15d rsp 
write: eax r12 r13 r14 r15 rbp rbx rsp 
--------------------------------------------------------------------------------
000d92c4: RLP; test eax, eax ; mov r8, qword ptr [rbp - 0x130] ; jne 0xd9060
read: eax rflags 
write: r8 rflags 
--------------------------------------------------------------------------------
000d932a: RLP; test rax, rax ; mov qword ptr [rbp - 0x128], rax ; jne 0xd91cd
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d937b: RLP; mov r14d, dword ptr fs:[r12] ; mov r15d, eax ; jmp 0xd911f
read: eax 
write: r14d r15d 
--------------------------------------------------------------------------------
000d93dc: RLP; mov r15d, eax ; jmp 0xd921e
read: eax 
write: r15d 
--------------------------------------------------------------------------------
000d9405: RLP; test eax, eax ; mov r15d, eax ; mov r8, qword ptr [rbp - 0x130] ; jne 0xd911a
read: eax rflags 
write: r15d r8 rflags 
--------------------------------------------------------------------------------
000d9447: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000d9472: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000d94f6: RLP; mov rdx, qword ptr [rbp + 0x10] ; mov esi, r12d ; sub esi, 1 ; mov rax, qword ptr [rdx] ; je 0xd956f
read: esi r12d rflags 
write: esi rax rdx rflags 
--------------------------------------------------------------------------------
000d9561: RLP; test rax, rax ; je 0xd957c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d9589: RLP; mov qword ptr [rbp + 0x10], 0 ; mov dword ptr [rbp + 0x30], 0 ; mov rax, rbx ; jmp 0xd9539
read: rbx 
write: rax 
--------------------------------------------------------------------------------
000d95d5: RLP; test rax, rax ; je 0xd960c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d95f0: RLP; mov rax, qword ptr [rip + 0x28f86d] ; mov qword ptr [rbx], 0 ; mov dword ptr fs:[rax], 0x24 ; mov eax, 1 ; pop rbx ; ret
read: rsp 
write: eax rax rbx rsp 
--------------------------------------------------------------------------------
000d9618: RLP; mov qword ptr [rbx], 0 ; mov eax, 1 ; pop rbx ; ret
read: rsp 
write: eax rbx rsp 
--------------------------------------------------------------------------------
000d9669: RLP; test eax, eax ; jne 0xd9794
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d96bd: RLP; test eax, eax ; je 0xd9671
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d97b5: RLP; test eax, eax ; jne 0xd97dc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d988f: RLP; test rax, rax ; mov rbx, rax ; je 0xd9914
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000d98aa: RLP; test byte ptr [r12], 8 ; mov byte ptr [rbx + rbp + 0x70], 0 ; je 0xd98fc
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000d9956: RLP; test eax, eax ; je 0xd998c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d99c1: RLP; jmp 0xd9970
read: 
write: 
--------------------------------------------------------------------------------
000d99de: RLP; test eax, eax ; mov r12d, eax ; jns 0xd9942
read: eax rflags 
write: r12d rflags 
--------------------------------------------------------------------------------
000d9a0b: RLP; mov rbp, qword ptr [rip + 0x28f452] ; mov r13d, eax ; mov r14d, dword ptr fs:[rbp] ; jmp 0xd996c
read: eax 
write: r13d r14d rbp 
--------------------------------------------------------------------------------
000d9a5a: RLP; test rax, rax ; mov qword ptr [rsp + 8], rax ; je 0xda104
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d9ba3: RLP; mov edx, dword ptr [rsp + 0x10] ; mov word ptr [r14 + 0x62], ax ; test edx, edx ; jle 0xd9bc4
read: ax edx rflags 
write: edx rflags 
--------------------------------------------------------------------------------
000d9bf4: RLP; test rax, rax ; mov r12, rax ; je 0xd9ebc
read: rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
000d9c23: RLP; mov rsi, qword ptr [rsp + 0x28] ; mov rdi, qword ptr [rsp + 0x18] ; mov rcx, rax ; mov rdx, rbp ; call 0xd985c
read: rax rbp rip rsp 
write: rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000d9c3c: RLP; test rax, rax ; mov r14, rax ; je 0xd9e3c
read: rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
000d9c54: RLP; cmp rax, r15 ; jae 0xd9cdc
read: r15 rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d9c8b: RLP; mov edi, dword ptr [rsp + 0x10] ; add ax, word ptr [rsp + 0x14] ; test edi, edi ; mov word ptr [r14 + 0x40], ax ; jne 0xd9b6c
read: ax edi rflags 
write: ax edi rflags 
--------------------------------------------------------------------------------
000d9cfb: RLP; test eax, eax ; jne 0xd9e3c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000d9d39: RLP; add rax, qword ptr [rsp + 0x20] ; movsxd r15, r15d ; cmp rax, 0xfffe ; jbe 0xd9c6e
read: r15d rax rflags 
write: r15 rax rflags 
--------------------------------------------------------------------------------
000d9d59: RLP; test r13, r13 ; mov rdi, r13 ; jne 0xd9d6f
read: r13 rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
000d9d7c: RLP; test rbp, rbp ; jne 0xd9d6c
read: rbp rflags 
write: rflags 
--------------------------------------------------------------------------------
000d9d8f: RLP; mov rax, qword ptr [rsp + 0x38] ; mov r8d, 7 ; mov word ptr [rax + 0x62], r8w ; mov rax, qword ptr [rip + 0x28f0be] ; or dword ptr [rbx + 0x40], 0x200 ; mov dword ptr fs:[rax], 0x24 ; add rsp, 0x68 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: eax r8w rsp 
write: eax r12 r13 r14 r15 r8d rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000d9e0f: RLP; jmp 0xd9b92
read: 
write: 
--------------------------------------------------------------------------------
000d9e54: RLP; test r13, r13 ; mov rdi, r13 ; jne 0xd9e67
read: r13 rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
000d9e74: RLP; test r14, r14 ; jne 0xd9e64
read: r14 rflags 
write: rflags 
--------------------------------------------------------------------------------
000d9e87: RLP; mov rax, qword ptr [rsp + 0x38] ; mov r9d, 7 ; mov dword ptr fs:[rbp], r12d ; mov word ptr [rax + 0x62], r9w ; or dword ptr [rbx + 0x40], 0x200 ; xor eax, eax ; add rsp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: eax r12d r9w rsp 
write: eax r12 r13 r14 r15 r9d rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000d9eca: RLP; mov r8d, dword ptr [rsp + 0x54] ; test r8d, r8d ; jne 0xda080
read: r8d rflags 
write: r8d rflags 
--------------------------------------------------------------------------------
000d9f4a: RLP; jmp 0xd9ea5
read: 
write: 
--------------------------------------------------------------------------------
000d9f8c: RLP; test rbx, rbx ; jne 0xd9f7c
read: rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
000da074: RLP; test rbx, rbx ; jne 0xda064
read: rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
000da154: RLP; test eax, eax ; je 0xda223
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000da190: RLP; mov ecx, dword ptr [rbx + 0x40] ; mov dword ptr [rsp + 0x5c], 0 ; mov qword ptr [rsp + 8], 0 ; and ecx, 4 ; jmp 0xd9aba
read: ecx 
write: ecx rflags 
--------------------------------------------------------------------------------
000da1de: RLP; test eax, eax ; setne al ; jmp 0xda030
read: eax rflags 
write: al rflags 
--------------------------------------------------------------------------------
000da209: RLP; test eax, eax ; setne al ; jmp 0xda030
read: eax rflags 
write: al rflags 
--------------------------------------------------------------------------------
000da271: RLP; test rax, rax ; mov r12, rax ; je 0xda595
read: rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
000da2c5: RLP; cmp rbx, rax ; cmovb rbx, rax ; add r13, 8 ; mov rdi, qword ptr [r13] ; test rdi, rdi ; jne 0xda2bc
read: r13 rax rbx rdi rflags 
write: r13 rbx rdi rflags 
--------------------------------------------------------------------------------
000da30b: RLP; test eax, eax ; jne 0xda486
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000da340: RLP; test rax, rax ; mov r14, rax ; je 0xda478
read: rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
000da394: RLP; test rax, rax ; je 0xda43c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000da3b6: RLP; mov edi, dword ptr [r12 + 0x40] ; mov r15, rax ; xor eax, eax ; mov word ptr [r15 + 0x60], ax ; lea rax, [r15 + 0x70] ; mov qword ptr [r15 + 8], r14 ; mov rsi, r15 ; mov edx, edi ; mov qword ptr [r15 + 0x28], rax ; and edx, 1 ; call 0xd962c
read: ax eax edi edx r14 r15 rax rip rsp 
write: eax edi edx r15 rax rflags rsi rsp 
--------------------------------------------------------------------------------
000da3e2: RLP; mov ecx, 1 ; cmp ax, 5 ; cmove eax, ecx ; cmp qword ptr [rsp], 0 ; mov word ptr [r15 + 0x62], ax ; jne 0xda36c
read: ax eax ecx rflags 
write: eax ecx rflags 
--------------------------------------------------------------------------------
000da467: RLP; test rbp, rbp ; jne 0xda454
read: rbp rflags 
write: rflags 
--------------------------------------------------------------------------------
000da478: RLP; mov rdi, qword ptr [r12 + 0x20] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000da486: RLP; mov rdi, r12 ; xor r12d, r12d ; call 0x1f46c
read: r12 r12d rip rsp 
write: r12d rdi rflags rsp 
--------------------------------------------------------------------------------
000da495: RLP; add rsp, 0x28 ; mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: r12 rsp 
write: r12 r13 r14 r15 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000da4d7: RLP; test rax, rax ; mov qword ptr [r12], rax ; je 0xda44a
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000da511: RLP; test eax, eax ; mov dword ptr [r12 + 0x28], eax ; jns 0xda495
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000da583: RLP; mov rbx, rax ; jmp 0xda4bb
read: rax 
write: rbx 
--------------------------------------------------------------------------------
000da5d5: RLP; cmp word ptr [rbx + 0x60], 0 ; nop ; js 0xda604
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000da5f7: RLP; cmp word ptr [rbx + 0x60], 0 ; jns 0xda5de
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000da610: RLP; mov rdi, qword ptr [rbp + 8] ; test rdi, rdi ; jne 0xda61f
read: rdi rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
000da62c: RLP; test rbx, rbx ; jne 0xda61c
read: rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
000da63e: RLP; mov rdi, qword ptr [rbp + 0x20] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000da64b: RLP; test byte ptr [rbp + 0x40], 4 ; jne 0xda67d
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000da65d: RLP; test eax, eax ; je 0xda694
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000da678: RLP; test r12d, r12d ; jne 0xda6aa
read: r12d rflags 
write: rflags 
--------------------------------------------------------------------------------
000da689: RLP; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
read: eax rsp 
write: eax r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000da6a0: RLP; jmp 0xda67d
read: 
write: 
--------------------------------------------------------------------------------
000da6b6: RLP; mov dword ptr fs:[rbx], r12d ; mov eax, 0xffffffff ; jmp 0xda68b
read: r12d 
write: eax 
--------------------------------------------------------------------------------
000da73c: RLP; cmp word ptr [rbx + 0x60], 0 ; je 0xda85c
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000da775: RLP; cmp word ptr [rbx + 0x60], -1 ; je 0xdac26
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000da82c: RLP; test rbx, rbx ; jne 0xda81c
read: rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
000da872: RLP; test eax, eax ; jne 0xda9b5
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000da89b: RLP; mov esi, 0x2f ; mov rdi, rbp ; call 0x8751c
read: rbp rip rsp 
write: esi rdi rsp 
--------------------------------------------------------------------------------
000da8ac: RLP; test rax, rax ; je 0xda8e7
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000da8ca: RLP; lea edx, [rax + 1] ; mov r13, rax ; mov rsi, r14 ; mov rdi, rbp ; movsxd rdx, edx ; call 0x88fbc
read: edx r14 rax rbp rip rsp 
write: edx r13 rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000da8e2: RLP; mov word ptr [rbx + 0x42], r13w ; mov rax, qword ptr [r12 + 0x20] ; mov qword ptr [rbx + 0x30], rax ; mov qword ptr [rbx + 0x28], rax ; mov rax, qword ptr [rbx + 0x50] ; mov qword ptr [r12 + 0x18], rax ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: r13w rax rbx rsp 
write: r12 r13 r14 rax rbp rbx rsp 
--------------------------------------------------------------------------------
000da958: RLP; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: rbx rsp 
write: r12 r13 r14 rax rbp rbx rsp 
--------------------------------------------------------------------------------
000da9ad: RLP; test eax, eax ; je 0xda7a4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000daa1e: RLP; test eax, eax ; je 0xdacb2
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000daa7d: RLP; mov rbx, rbp ; mov word ptr [rbp + 0x62], ax ; jmp 0xda7b1
read: ax rbp 
write: rbx 
--------------------------------------------------------------------------------
000daaac: RLP; test rbx, rbx ; jne 0xdaa9c
read: rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
000daacb: RLP; test rax, rax ; mov qword ptr [r12 + 8], rax ; je 0xdab77
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000dab02: RLP; test eax, eax ; jne 0xdac4f
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000dab16: RLP; jmp 0xda7a4
read: 
write: 
--------------------------------------------------------------------------------
000dab2f: RLP; cmp ax, 1 ; mov word ptr [rbp + 0x62], ax ; mov rbx, rbp ; jne 0xda7b1
read: ax rbp rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000dab62: RLP; test eax, eax ; mov dword ptr [rbp + 0x3c], eax ; js 0xdac7c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000daba7: RLP; nop dword ptr [rax + rax] ; jmp 0xda807
read: 
write: 
--------------------------------------------------------------------------------
000dabbf: RLP; test eax, eax ; je 0xda7a4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000dabe2: RLP; cmp ax, 1 ; mov word ptr [rbx + 0x62], ax ; je 0xdabfa
read: ax rflags 
write: rflags 
--------------------------------------------------------------------------------
000dac18: RLP; test eax, eax ; mov dword ptr [rbx + 0x3c], eax ; js 0xdac97
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000dac34: RLP; mov rax, qword ptr [rip + 0x28e229] ; mov dword ptr fs:[rax], 0 ; mov qword ptr [r12], 0 ; jmp 0xda7b1
read: 
write: rax 
--------------------------------------------------------------------------------
000dac69: RLP; or dword ptr [r12 + 0x40], 0x200 ; mov dword ptr fs:[rbp], r13d ; jmp 0xda7b1
read: r13d 
write: rflags 
--------------------------------------------------------------------------------
000dad83: RLP; mov qword ptr [rbp + 8], rax ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rax rsp 
write: r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000dadac: RLP; test rbx, rbx ; jne 0xdad9c
read: rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
000dae0a: RLP; test eax, eax ; mov r12d, eax ; js 0xdadc4
read: eax rflags 
write: r12d rflags 
--------------------------------------------------------------------------------
000dae1f: RLP; mov edi, r12d ; mov qword ptr [rbp + 8], rax ; call 0xd731c
read: r12d rax rip rsp 
write: edi rsp 
--------------------------------------------------------------------------------
000dae2f: RLP; test eax, eax ; jne 0xdadc4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000dae3f: RLP; mov rax, qword ptr [rbp + 8] ; jmp 0xdad87
read: 
write: rax 
--------------------------------------------------------------------------------
000daeaa: RLP; mov qword ptr [rsp], rax ; mov eax, 7 ; syscall ; mov rdi, qword ptr [rsp] ; mov rdx, rax ; call 0xf081c
read: rax rip rsp 
write: eax rdi rdx rsp 
--------------------------------------------------------------------------------
000daec5: RLP; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xdaed5
read: rax rdx rflags rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000daf5c: RLP; mov r8d, 8 ; mov r9d, eax ; mov r10, qword ptr [rsp + 0x18] ; mov rdx, qword ptr [rsp] ; mov rsi, qword ptr [rsp + 0x10] ; mov eax, 0x10f ; mov rdi, qword ptr [rsp + 8] ; syscall ; cmp rax, -0x1000 ; ja 0xdafad
read: eax rax rflags 
write: eax r10 r8d r9d rdi rdx rflags rsi 
--------------------------------------------------------------------------------
000daf96: RLP; mov eax, dword ptr [rsp] ; jmp 0xdaf31
read: 
write: eax 
--------------------------------------------------------------------------------
000db065: RLP; test eax, eax ; mov ebx, eax ; je 0xdb07c
read: eax rflags 
write: ebx rflags 
--------------------------------------------------------------------------------
000db0d0: RLP; test eax, eax ; je 0xdb022
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000db0f8: RLP; test eax, eax ; jne 0xdb0d8
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000db147: RLP; cmp rax, 1 ; jne 0xdb0d8
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000db182: RLP; test rax, rax ; js 0xdb0d8
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000db1f6: RLP; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000db313: RLP; shr eax, 0x1f ; test al, al ; jne 0xdb5c4
read: al eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000db3a3: RLP; test rax, rax ; mov rbp, rax ; je 0xdb59c
read: rax rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
000db3eb: RLP; test rax, rax ; je 0xdb6b4
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000db40a: RLP; test eax, eax ; jne 0xdb3d4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000db427: RLP; test eax, eax ; je 0xdb46c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000db441: RLP; test eax, eax ; je 0xdb46c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000db45b: RLP; test eax, eax ; jne 0xdb3d4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000db484: RLP; test eax, eax ; js 0xdb3d4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000db4ee: RLP; test rax, rax ; je 0xdb6dc
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000db52d: RLP; mov eax, ebx ; jmp 0xdb5c6
read: ebx 
write: eax 
--------------------------------------------------------------------------------
000db5b3: RLP; test rax, rax ; mov rbp, rax ; jne 0xdb3af
read: rax rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
000db5e9: RLP; shr eax, 0x1f ; jmp 0xdb316
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
000db6d5: RLP; jmp 0xdb3d4
read: 
write: 
--------------------------------------------------------------------------------
000db7b8: RLP; mov eax, ebx ; jmp 0xdb5c6
read: ebx 
write: eax 
--------------------------------------------------------------------------------
000db9ba: RLP; cdqe ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
read: eax rax rsp 
write: rax rbx rsp 
--------------------------------------------------------------------------------
000db9fd: RLP; mov qword ptr [rsp], rax ; mov r10, rcx ; mov eax, 0x115 ; syscall ; mov rdi, qword ptr [rsp] ; mov rdx, rax ; call 0xf081c
read: rax rcx rip rsp 
write: eax r10 rdi rdx rsp 
--------------------------------------------------------------------------------
000dba1b: RLP; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xdba2b
read: rax rdx rflags rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000dba99: RLP; mov r10, qword ptr [rsp + 0x18] ; mov r8d, eax ; mov rdx, qword ptr [rsp + 0x10] ; movsxd rsi, dword ptr [rsp + 0xc] ; movsxd rdi, dword ptr [rsp + 8] ; mov eax, ebx ; syscall ; cmp rax, -0x1000 ; mov rbx, rax ; ja 0xdbad3
read: eax ebx rax rflags 
write: eax r10 r8d rbx rdi rdx rflags rsi 
--------------------------------------------------------------------------------
000dbacb: RLP; add rsp, 0x20 ; mov eax, ebx ; pop rbx ; ret
read: ebx rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
000dbc2a: RLP; mov esi, ebx ; mov rdi, r12 ; call 0xdbb1c
read: ebx r12 rip rsp 
write: esi rdi rsp 
--------------------------------------------------------------------------------
000dbc38: RLP; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
read: eax rsp 
write: eax r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000dbc52: RLP; mov esi, ebp ; mov rdi, r12 ; call 0xdbb1c
read: ebp r12 rip rsp 
write: esi rdi rsp 
--------------------------------------------------------------------------------
000dbc60: RLP; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
read: eax rsp 
write: eax r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000dbe19: RLP; test eax, eax ; js 0xdbe2c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000dbe5d: RLP; add rsp, 0x18 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000dbebc: RLP; mov ecx, 0x10 ; mov r8d, eax ; mov edx, 1 ; mov esi, 0x5409 ; movsxd rdi, dword ptr [rsp + 0xc] ; mov eax, ecx ; syscall ; cmp rax, -0x1000 ; mov rbx, rax ; ja 0xdbef6
read: eax ecx rax rflags 
write: eax ecx edx esi r8d rbx rdi rflags 
--------------------------------------------------------------------------------
000dbeee: RLP; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
read: ebx rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
000dbf26: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000dbf46: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000dbf7c: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000dbf96: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000dc005: RLP; mov edx, eax ; mov eax, dword ptr [rsp + 0xc] ; test edx, edx ; js 0xdc01c
read: eax edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
000dc047: RLP; cmp eax, -1 ; je 0xdc069
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000dc057: RLP; cmp eax, -1 ; jne 0xdc00f
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000dc188: RLP; test eax, eax ; jne 0xdc259
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000dc1ca: RLP; add rsp, 0x60 ; mov rbx, rax ; mov rax, rbx ; pop rbx ; ret
read: rax rbx rsp 
write: rax rbx rflags rsp 
--------------------------------------------------------------------------------
000dc21d: RLP; cmp eax, -1 ; mov rax, -1 ; cmove rbx, rax ; add rsp, 0x60 ; mov rax, rbx ; pop rbx ; ret
read: eax rax rbx rflags rsp 
write: rax rbx rflags rsp 
--------------------------------------------------------------------------------
000dc291: RLP; mov edx, eax ; mov eax, 0xffffffff ; test edx, edx ; js 0xdc2ae
read: eax edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
000dc2ae: RLP; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
read: rsp 
write: r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000dc305: RLP; test eax, eax ; js 0xdc3c4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000dc3df: RLP; test eax, eax ; js 0xdc3fc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000dc3f4: RLP; pop rbx ; sar eax, 0x1f ; ret
read: eax rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
000dc4a5: RLP; cmp eax, -1 ; je 0xdc4d4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000dc4ba: RLP; cmp eax, -1 ; je 0xdc4e4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000dc4cc: RLP; pop rbx ; pop rbp ; pop r12 ; ret
read: rsp 
write: r12 rbp rbx rsp 
--------------------------------------------------------------------------------
000dc5ba: RLP; test eax, eax ; js 0xdc5e4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000dc5d7: RLP; test eax, eax ; js 0xdc5e4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000dc6bb: RLP; movsxd rdx, dword ptr [rsp + 0x1c] ; mov r8d, eax ; mov rsi, qword ptr [rsp + 0x10] ; movsxd rdi, dword ptr [rsp + 8] ; mov eax, 0x13 ; syscall ; cmp rax, -0x1000 ; ja 0xdc6f7
read: eax rax rflags 
write: eax r8d rdi rdx rflags rsi 
--------------------------------------------------------------------------------
000dc6ed: RLP; mov rax, qword ptr [rsp + 8] ; add rsp, 0x28 ; ret
read: rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000dc75b: RLP; movsxd rdx, dword ptr [rsp + 0x1c] ; mov r8d, eax ; mov rsi, qword ptr [rsp + 0x10] ; movsxd rdi, dword ptr [rsp + 8] ; mov eax, 0x14 ; syscall ; cmp rax, -0x1000 ; ja 0xdc797
read: eax rax rflags 
write: eax r8d rdi rdx rflags rsi 
--------------------------------------------------------------------------------
000dc78d: RLP; mov rax, qword ptr [rsp + 8] ; add rsp, 0x28 ; ret
read: rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000dc802: RLP; mov r10, qword ptr [rsp + 0x18] ; mov r8d, eax ; movsxd rdx, dword ptr [rsp + 0x14] ; mov rsi, qword ptr [rsp + 8] ; movsxd rdi, dword ptr [rsp] ; mov eax, 0x127 ; syscall ; cmp rax, -0x1000 ; ja 0xdc840
read: eax rax rflags 
write: eax r10 r8d rdi rdx rflags rsi 
--------------------------------------------------------------------------------
000dc837: RLP; mov rax, qword ptr [rsp] ; add rsp, 0x28 ; ret
read: rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000dc8b2: RLP; mov r10, qword ptr [rsp + 0x18] ; mov r8d, eax ; movsxd rdx, dword ptr [rsp + 0x14] ; mov rsi, qword ptr [rsp + 8] ; movsxd rdi, dword ptr [rsp] ; mov eax, 0x128 ; syscall ; cmp rax, -0x1000 ; ja 0xdc8f0
read: eax rax rflags 
write: eax r10 r8d rdi rdx rflags rsi 
--------------------------------------------------------------------------------
000dc8e7: RLP; mov rax, qword ptr [rsp] ; add rsp, 0x28 ; ret
read: rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000dc975: RLP; add rsp, 0x38 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000dc9e5: RLP; add rsp, 0x38 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000dca7e: RLP; add rsp, 0x38 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000dcb1e: RLP; add rsp, 0x38 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000dcb85: RLP; mov edx, 0x100 ; test eax, eax ; cmovns edx, dword ptr [rsp] ; add rsp, 0x18 ; mov eax, edx ; ret
read: eax edx rflags rsp 
write: eax edx rflags rsp 
--------------------------------------------------------------------------------
000dcbc1: RLP; test eax, eax ; mov r12d, eax ; jne 0xdcc14
read: eax rflags 
write: r12d rflags 
--------------------------------------------------------------------------------
000dcbd9: RLP; lea rbp, [rax + 1] ; mov rdx, rbx ; mov rsi, r13 ; mov rdi, r14 ; cmp rbp, rbx ; cmovbe rdx, rbp ; call 0x8e3dc
read: r13 r14 rbp rbx rdx rflags rip rsp 
write: rbp rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000dcbf6: RLP; cmp rbp, rbx ; ja 0xdcc1c
read: rbp rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
000dcc90: RLP; test eax, eax ; js 0xdccdc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000dcca7: RLP; add rax, 1 ; mov rdx, rbp ; mov rsi, rbx ; cmp rax, rbp ; mov rdi, r12 ; cmovbe rdx, rax ; call 0x8e3dc
read: r12 rax rbp rbx rdx rflags rip rsp 
write: rax rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000dccc4: RLP; xor eax, eax ; add rsp, 0x190 ; pop rbx ; pop rbp ; pop r12 ; ret
read: eax rsp 
write: eax r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000dcd4d: RLP; mov qword ptr [rsp], rax ; mov r10, rcx ; mov eax, 0x17 ; syscall ; mov rdi, qword ptr [rsp] ; mov rdx, rax ; call 0xf081c
read: rax rcx rip rsp 
write: eax r10 rdi rdx rsp 
--------------------------------------------------------------------------------
000dcd6b: RLP; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xdcd7b
read: rax rdx rflags rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000dce12: RLP; lea r9, [rsp + 0x40] ; mov ebp, eax ; mov r8, qword ptr [rsp + 8] ; mov r10, qword ptr [rsp + 0x28] ; mov rdx, qword ptr [rsp + 0x20] ; mov eax, 0x10e ; mov rsi, qword ptr [rsp + 0x18] ; movsxd rdi, dword ptr [rsp + 0x14] ; syscall ; cmp rax, -0x1000 ; ja 0xdce6b
read: eax rax rflags 
write: eax ebp r10 r8 r9 rdi rdx rflags rsi 
--------------------------------------------------------------------------------
000dce50: RLP; mov eax, dword ptr [rsp + 8] ; jmp 0xdcde3
read: 
write: eax 
--------------------------------------------------------------------------------
000dcf1a: RLP; mov qword ptr [rsp], rax ; mov eax, 0x4a ; syscall ; mov rdi, qword ptr [rsp] ; mov rdx, rax ; call 0xf081c
read: rax rip rsp 
write: eax rdi rdx rsp 
--------------------------------------------------------------------------------
000dcf35: RLP; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xdcf45
read: rax rdx rflags rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000dcfba: RLP; mov qword ptr [rsp], rax ; mov eax, 0x4b ; syscall ; mov rdi, qword ptr [rsp] ; mov rdx, rax ; call 0xf081c
read: rax rip rsp 
write: eax rdi rdx rsp 
--------------------------------------------------------------------------------
000dcfd5: RLP; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xdcfe5
read: rax rdx rflags rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000dd09a: RLP; test eax, eax ; mov ebx, eax ; js 0xdd0cc
read: eax rflags 
write: ebx rflags 
--------------------------------------------------------------------------------
000dd0b7: RLP; movsxd rdi, ebx ; mov edx, eax ; mov eax, 3 ; syscall ; cmp edx, 4 ; je 0xdd1c4
read: eax ebx edx rflags 
write: eax edx rdi rflags 
--------------------------------------------------------------------------------
000dd0e1: RLP; test eax, eax ; js 0xdd0eb
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000dd19c: RLP; test eax, eax ; jne 0xdd1ac
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000dd20d: RLP; mov eax, dword ptr [rbp - 0xc0] ; ror eax, 0x10 ; cdqe ; jmp 0xdd0ed
read: eax 
write: eax rax rflags 
--------------------------------------------------------------------------------
000dd26a: RLP; test eax, eax ; mov ebx, eax ; js 0xdd2dc
read: eax rflags 
write: ebx rflags 
--------------------------------------------------------------------------------
000dd285: RLP; movsxd rdi, ebx ; mov edx, eax ; mov eax, 3 ; syscall ; xor eax, eax ; cmp edx, 4 ; setne al ; neg eax ; add rsp, 0x10 ; pop rbx ; ret
read: eax ebx edx rflags rsp 
write: al eax edx rbx rdi rflags rsp 
--------------------------------------------------------------------------------
000dd3b6: RLP; test eax, eax ; jns 0xdd3bd
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000dd3e3: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000dd406: RLP; xor edx, edx ; test eax, eax ; cmove rdx, rbx ; mov rax, rdx ; pop rbx ; ret
read: eax edx rbx rdx rflags rsp 
write: edx rax rbx rdx rflags rsp 
--------------------------------------------------------------------------------
000dd433: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000dd455: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000dd493: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000dd4f6: RLP; test eax, eax ; mov edx, 0xffffffff ; js 0xdd50d
read: eax rflags 
write: edx rflags 
--------------------------------------------------------------------------------
000dd558: RLP; add rsp, 0x18 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000dd6a2: RLP; test rax, rax ; lea rdx, [rip + 0x59264] ; je 0xdd6cc
read: rax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
000dd6df: RLP; test rax, rax ; lea rdx, [rip + 0x59224] ; jne 0xdd6ae
read: rax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
000dd6fe: RLP; test rax, rax ; lea rdx, [rip + 0x5920b] ; jne 0xdd6ae
read: rax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
000dd71d: RLP; test rax, rax ; lea rdx, [rip + 0x591ef] ; jne 0xdd6ae
read: rax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
000dd73c: RLP; lea rdx, [rip + 0x591d6] ; test rax, rax ; lea rax, [rip + 0x588ea] ; cmove rdx, rax ; jmp 0xdd6ae
read: rax rdx rflags 
write: rax rdx rflags 
--------------------------------------------------------------------------------
000dd7a2: RLP; mov rax, qword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; ret
read: rsp 
write: rax rbx rflags rsp 
--------------------------------------------------------------------------------
000dd7c2: RLP; test rax, rax ; je 0xdd800
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000dd7eb: RLP; test rax, rax ; je 0xdd800
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000dd822: RLP; test rax, rax ; setne al ; add rsp, 8 ; movzx eax, al ; ret
read: al rax rflags rsp 
write: al eax rflags rsp 
--------------------------------------------------------------------------------
000dd84c: RLP; test rax, rax ; mov rbx, rax ; je 0xdd884
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000dd86d: RLP; test rax, rax ; je 0xdd884
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000dd87e: RLP; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
000dd8a5: RLP; test rax, rax ; mov rbx, rax ; je 0xdd8ec
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000dd8cb: RLP; test eax, eax ; je 0xdd8fc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000dd8e7: RLP; test rax, rax ; jne 0xdd8bc
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000dd908: RLP; pop rbx ; pop rbp ; pop r12 ; ret
read: rsp 
write: r12 rbp rbx rsp 
--------------------------------------------------------------------------------
000dd935: RLP; test rax, rax ; mov rbx, rax ; je 0xdd97d
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000dd95c: RLP; test eax, eax ; je 0xdd98c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000dd978: RLP; test rax, rax ; jne 0xdd94c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000dd998: RLP; pop rbx ; pop rbp ; pop r12 ; ret
read: rsp 
write: r12 rbp rbx rsp 
--------------------------------------------------------------------------------
000dd9c9: RLP; mov qword ptr [rip + 0x28e608], 0 ; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000dd9f2: RLP; mov qword ptr [rip + 0x28cdc3], rax ; add rsp, 8 ; ret
read: rax rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000dda50: RLP; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
000dda84: RLP; mov rdx, qword ptr [rip + 0x28cd31] ; jmp 0xdda2f
read: 
write: rdx 
--------------------------------------------------------------------------------
000ddaa2: RLP; mov dword ptr [rip + 0x28e5d8], 2 ; mov qword ptr [rip + 0x28cd09], rax ; mov rdx, rax ; jmp 0xdda2f
read: rax 
write: rdx 
--------------------------------------------------------------------------------
000ddbb9: RLP; lea rcx, [rax + 0x12] ; mov rdx, rax ; mov rsi, rbx ; and rcx, 0xfffffffffffffff0 ; sub rsp, rcx ; mov rdi, rsp ; call 0x892cc
read: rax rbx rcx rip rsp 
write: rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000ddbd6: RLP; mov edx, 0x6563 ; mov byte ptr [rax + 2], 0 ; mov rsi, rsp ; mov word ptr [rax], dx ; mov rdi, r12 ; call 0x6ca9c
read: dx r12 rip rsp 
write: edx rdi rsi rsp 
--------------------------------------------------------------------------------
000ddbf1: RLP; test rax, rax ; je 0xddbfc
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ddc22: RLP; mov eax, 1 ; add rsp, 8 ; ret
read: rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
000ddc76: RLP; test rax, rax ; je 0xddd4c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ddc90: RLP; test rax, rax ; je 0xddd2e
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ddcfa: RLP; mov qword ptr [r14], rax ; lea rax, [rip + 0x56c0e] ; mov qword ptr [r14 + 8], rax ; jmp 0xdddce
read: rax 
write: rax 
--------------------------------------------------------------------------------
000ddd25: RLP; test rax, rax ; jne 0xddc9c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ddd42: RLP; test rax, rax ; jne 0xddd14
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ddd6e: RLP; test rbx, rbx ; mov qword ptr [r14], rax ; je 0xddcfd
read: rax rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
000dddca: RLP; mov qword ptr [r14 + 8], rax ; lea rax, [rip + 0x56b3d] ; mov qword ptr [r14 + 0x10], rax ; jmp 0xdde4c
read: rax 
write: rax 
--------------------------------------------------------------------------------
000dddeb: RLP; test rbx, rbx ; mov qword ptr [r14 + 8], rax ; je 0xdddce
read: rax rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
000dde48: RLP; mov qword ptr [r14 + 0x10], rax ; lea rax, [rip + 0x56abf] ; mov qword ptr [r14 + 0x18], rax ; jmp 0xddece
read: rax 
write: rax 
--------------------------------------------------------------------------------
000dde69: RLP; test rbx, rbx ; mov qword ptr [r14 + 0x10], rax ; je 0xdde4c
read: rax rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
000ddeca: RLP; mov qword ptr [r14 + 0x18], rax ; mov dword ptr [r14 + 0x20], 0 ; mov dword ptr [r14 + 0x24], 0 ; add rsp, 0x400 ; mov rax, r14 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: r14 rax rsp 
write: r12 r13 r14 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000ddf01: RLP; test rbx, rbx ; mov qword ptr [r14 + 0x18], rax ; je 0xddece
read: rax rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
000ddf27: RLP; test eax, eax ; je 0xddece
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ddf8f: RLP; test eax, eax ; jne 0xde16c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000de140: RLP; test eax, eax ; js 0xde16c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000de150: RLP; test eax, eax ; setne al ; lea rsp, [rbp - 0x28] ; movzx eax, al ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: al eax rflags rsp 
write: al eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000de193: RLP; lea rax, [rax*4 + 0x1f] ; mov esi, dword ptr [rbp - 0x48] ; mov rdi, r15 ; and rax, 0xfffffffffffffff0 ; sub rsp, rax ; mov edx, esi ; lea rax, [rsp + 0x1f] ; mov qword ptr [rbp - 0x38], rax ; and qword ptr [rbp - 0x38], 0xfffffffffffffff0 ; mov rax, qword ptr [rbp - 0x38] ; jmp 0xde1f6
read: esi r15 rax rsp 
write: edx esi rax rdi rflags rsp 
--------------------------------------------------------------------------------
000de223: RLP; lea rax, [rax*4 + 0x1f] ; mov esi, dword ptr [rbp - 0x48] ; and rax, 0xfffffffffffffff0 ; sub rsp, rax ; mov edx, esi ; lea rcx, [rsp + 0x1f] ; and rcx, 0xfffffffffffffff0 ; mov rax, rcx ; jmp 0xde281
read: esi rax rcx rsp 
write: edx esi rax rcx rflags rsp 
--------------------------------------------------------------------------------
000de2b0: RLP; lea rax, [rax*4 + 0x1f] ; mov r8d, dword ptr [rbp - 0x4c] ; mov rcx, qword ptr [rbp - 0x48] ; and rax, 0xfffffffffffffff0 ; sub rsp, rax ; mov edx, r8d ; lea r13, [rsp + 0x1f] ; and r13, 0xfffffffffffffff0 ; mov rax, r13 ; jmp 0xde312
read: r13 r8d rax rsp 
write: edx r13 r8d rax rcx rflags rsp 
--------------------------------------------------------------------------------
000de33c: RLP; lea rax, [rax*4 + 0x1f] ; mov edx, r12d ; mov rcx, qword ptr [rbp - 0x48] ; and rax, 0xfffffffffffffff0 ; sub rsp, rax ; lea r9, [rsp + 0x1f] ; and r9, 0xfffffffffffffff0 ; mov rax, r9 ; jmp 0xde392
read: r12d r9 rax rsp 
write: edx r9 rax rcx rflags rsp 
--------------------------------------------------------------------------------
000de4f6: RLP; mov rbx, qword ptr [rbx + 0x18] ; mov r12, rax ; jmp 0xde51e
read: rax 
write: r12 rbx 
--------------------------------------------------------------------------------
000de515: RLP; test rax, rax ; je 0xde55c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000de52d: RLP; test rax, rax ; je 0xde554
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000de72c: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000de959: RLP; mov eax, 1 ; add rsp, 8 ; ret
read: rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
000de983: RLP; test rax, rax ; mov qword ptr [rip + 0x28d7b7], rax ; je 0xde9a4
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000de9e1: RLP; test rax, rax ; je 0xdeab0
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000de9ff: RLP; test rax, rax ; je 0xdea4c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000dea8f: RLP; mov rdx, qword ptr [rip + 0x28d6ae] ; jmp 0xdea67
read: 
write: rdx 
--------------------------------------------------------------------------------
000deaa1: RLP; test eax, eax ; mov rdx, qword ptr [rip + 0x28d69a] ; jne 0xde9cc
read: eax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
000dead8: RLP; mov qword ptr [rip + 0x28d5c5], rax ; cmp byte ptr [rax], 0 ; mov rbx, rax ; jne 0xdec8f
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000deb58: RLP; movzx edx, byte ptr [rax] ; mov rbx, rax ; test dl, dl ; je 0xdec6f
read: dl rax rflags 
write: edx rbx rflags 
--------------------------------------------------------------------------------
000dec06: RLP; lea rcx, [rax + 1] ; xor edx, edx ; test rax, rax ; cmovne rdx, rcx ; mov qword ptr [rip + 0x28d4a2], rdx ; jmp 0xdeb4c
read: edx rax rcx rdx rflags 
write: edx rcx rdx rflags 
--------------------------------------------------------------------------------
000dec55: RLP; test rax, rax ; je 0xdecba
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000dec9b: RLP; mov qword ptr [rip + 0x28d40a], rax ; cmp byte ptr [rax], 0 ; mov rbx, rax ; jne 0xdecc6
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000decd2: RLP; mov rbx, rax ; jmp 0xdeb01
read: rax 
write: rbx 
--------------------------------------------------------------------------------
000decfe: RLP; cmp eax, -1 ; mov qword ptr [rip + 0x28d438], 0 ; setne al ; add rsp, 8 ; movzx eax, al ; ret
read: al eax rflags rsp 
write: al eax rflags rsp 
--------------------------------------------------------------------------------
000ded32: RLP; jmp 0xded4f
read: 
write: 
--------------------------------------------------------------------------------
000ded4b: RLP; test eax, eax ; je 0xded60
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ded58: RLP; test rax, rax ; mov rbx, rax ; jne 0xded3c
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000ded69: RLP; add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
read: rbx rsp 
write: rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000ded9d: RLP; mov rdi, qword ptr [rip + 0x28d3b8] ; mov qword ptr [rip + 0x28d3b5], 0 ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000dedb8: RLP; lea rsi, [rip + 0x55735] ; lea rdi, [rip + 0x57b98] ; mov qword ptr [rip + 0x28d38b], 0 ; call 0x6ca9c
read: rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
000dedda: RLP; test rax, rax ; mov rbp, rax ; je 0xdee26
read: rax rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
000dedee: RLP; mov rdx, rsp ; mov esi, eax ; mov edi, 1 ; call 0xd63ec
read: eax rip rsp 
write: edi esi rdx rsp 
--------------------------------------------------------------------------------
000dee01: RLP; cmp eax, -1 ; je 0xdee1a
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000dee26: RLP; lea rax, [rip + 0x55d19] ; mov qword ptr [rip + 0x28d348], rax ; lea rax, [rip + 0x57b2f] ; mov qword ptr [rip + 0x28d342], rax ; add rsp, 0x98 ; lea rax, [rip + 0x28d32c] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rax rsp 
write: r12 r13 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000dee6c: RLP; test rax, rax ; mov rbx, rax ; mov qword ptr [rip + 0x28d2e3], rax ; je 0xdee1a
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000deea3: RLP; test rax, rax ; mov r13, rax ; mov qword ptr [rip + 0x28d2b4], rax ; je 0xdefa0
read: rax rflags 
write: r13 rflags 
--------------------------------------------------------------------------------
000deed1: RLP; test rax, rax ; je 0xdef77
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000def8b: RLP; mov rax, qword ptr [rip + 0x28d1d2] ; add rsp, 0x98 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rsp 
write: r12 r13 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000defac: RLP; mov qword ptr [rip + 0x28d1a5], 0 ; jmp 0xdee1a
read: 
write: 
--------------------------------------------------------------------------------
000deff5: RLP; mov qword ptr [rip + 0x28d170], rax ; mov rdx, rax ; jmp 0xdefd0
read: rax 
write: rdx 
--------------------------------------------------------------------------------
000df024: RLP; mov rdi, qword ptr [rip + 0x28d131] ; mov qword ptr [rip + 0x28d12e], 0 ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000df03f: RLP; mov qword ptr [rip + 0x28d112], 0 ; mov qword ptr [rip + 0x28d117], 0 ; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000df06d: RLP; mov qword ptr [rip + 0x28d0f8], rax ; add rsp, 8 ; ret
read: rax rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000df0ab: RLP; test rax, rax ; mov rbx, rax ; je 0xdf26c
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000df0d4: RLP; mov rsi, r14 ; mov edi, eax ; call 0xdbd4c
read: eax r14 rip rsp 
write: edi rsi rsp 
--------------------------------------------------------------------------------
000df0e2: RLP; xor r12d, r12d ; test eax, eax ; je 0xdf18c
read: eax r12d rflags 
write: r12d rflags 
--------------------------------------------------------------------------------
000df105: RLP; mov rdi, rbp ; call 0x7680c
read: rbp rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000df111: RLP; lea rsi, [rip + 0x28d07c] ; lea rdi, [rip + 0x28d07d] ; mov rdx, rbx ; call 0x69e2c
read: rbx rip rsp 
write: rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000df12b: RLP; mov rdx, qword ptr [rip + 0x28d06a] ; test rdx, rdx ; je 0xdf14e
read: rdx rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
000df16f: RLP; mov rax, qword ptr [rip + 0x28d026] ; add rsp, 0x88 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: r12 r13 r14 r15 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000df1ed: RLP; mov rdx, r14 ; mov esi, 2 ; mov edi, eax ; call 0xdbc6c
read: eax r14 rip rsp 
write: edi esi rdx rsp 
--------------------------------------------------------------------------------
000df200: RLP; test eax, eax ; sete r12b ; jmp 0xdf0ed
read: eax rflags 
write: r12b rflags 
--------------------------------------------------------------------------------
000df22d: RLP; nop dword ptr [rax] ; mov rdi, rbx ; call 0x743fc
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000df240: RLP; mov rdx, rsp ; mov esi, 2 ; mov edi, eax ; call 0xdbc6c
read: eax rip rsp 
write: edi esi rdx rsp 
--------------------------------------------------------------------------------
000df253: RLP; jmp 0xdf157
read: 
write: 
--------------------------------------------------------------------------------
000df2a7: RLP; mov rdi, rbx ; call 0x2203c
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000df2db: RLP; add rax, 1 ; mov r12, rax ; mov eax, 0x20 ; cmove r12, rax ; xor ebx, ebx ; lea rax, [r12 + 0x1e] ; and rax, 0xfffffffffffffff0 ; sub rsp, rax ; lea r13, [rsp + 0xf] ; call 0xde93c
read: ebx r12 rax rflags rip rsp 
write: eax ebx r12 r13 rax rflags rsp 
--------------------------------------------------------------------------------
000df307: RLP; and r13, 0xfffffffffffffff0 ; mov rdx, r12 ; mov rsi, r13 ; mov edi, ebx ; call 0xd7f3c
read: ebx r12 r13 rip rsp 
write: edi r13 rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000df31c: RLP; test eax, eax ; je 0xdf344
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000df331: RLP; xor eax, eax ; lea rsp, [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
read: eax rsp 
write: eax r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000df35a: RLP; lea r12, [rax + 1] ; test rax, rax ; cmove r12, r13 ; jmp 0xdf382
read: r12 r13 rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
000df37b: RLP; test eax, eax ; je 0xdf39c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000df38b: RLP; test rax, rax ; jne 0xdf36c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000df3a5: RLP; mov eax, ebx ; nop dword ptr [rax + rax] ; jmp 0xdf333
read: ebx 
write: eax 
--------------------------------------------------------------------------------
000df3f3: RLP; add rsp, 0x80 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000df466: RLP; cmp eax, -1 ; jne 0xdf5d4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000df488: RLP; cmp r13d, 0x5b ; mov dword ptr fs:[rbx], r12d ; je 0xdf4b4
read: r12d r13d rflags 
write: rflags 
--------------------------------------------------------------------------------
000df5b8: RLP; cmp eax, -1 ; mov edi, eax ; mov dword ptr [rip + 0x289c31], eax ; jne 0xdf43c
read: eax rflags 
write: edi rflags 
--------------------------------------------------------------------------------
000df603: RLP; mov dword ptr [rip + 0x289be7], 0xffffffff ; mov dword ptr [rip + 0x28cc29], 0 ; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000df6a1: RLP; test rax, rax ; mov rbx, rax ; je 0xdf944
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000df6d0: RLP; mov rdi, r15 ; call 0x1f48c
read: r15 rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000df6dc: RLP; lea rsi, [rsp + 0x60] ; mov rdi, r15 ; call 0xa2c3c
read: r15 rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
000df6ed: RLP; mov r15, qword ptr [rbx + 0x28] ; mov rsi, qword ptr [rbx + 0x30] ; lea r8, [rip + 0x2883e0] ; lea rdx, [rip + 0x5727a] ; mov rcx, rax ; sub rsi, r15 ; mov rdi, r15 ; call 0xabbdc
read: r15 rax rip rsi rsp 
write: r15 r8 rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000df715: RLP; add r15, rax ; mov rdi, rbx ; mov qword ptr [rbx + 0x28], r15 ; call 0x6d20c
read: r15 rax rbx rip rsp 
write: r15 rdi rflags rsp 
--------------------------------------------------------------------------------
000df728: RLP; mov rdi, qword ptr [rip + 0x28cb05] ; mov r15, rax ; test rdi, rdi ; je 0xdfb5c
read: rax rdi rflags 
write: r15 rdi rflags 
--------------------------------------------------------------------------------
000df747: RLP; test byte ptr [rip + 0x28caee], 1 ; jne 0xdfacc
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000df7b8: RLP; mov rdi, rbx ; call 0x6bf5c
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000df7c4: RLP; mov rax, qword ptr [rsp + 0x10] ; test byte ptr [rip + 0x28ca6c], 0x20 ; je 0xdf834
read: rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000df82f: RLP; mov rax, qword ptr [rsp + 0x10] ; mov qword ptr [rsp + 0x40], rax ; mov qword ptr [rsp + 0x48], 0 ; mov esi, 1 ; xor eax, eax ; cmp dword ptr [rip + 0x28ef20], 0 ; je 0xdf85e
read: eax rax rflags 
write: eax esi rax rflags 
--------------------------------------------------------------------------------
000df87e: RLP; add rsp, 0x80 ; mov eax, dword ptr [rip + 0x28c9b5] ; test eax, eax ; je 0xdf9e4
read: eax rflags rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
000df8e8: RLP; add rsp, 0x80 ; mov rdi, qword ptr [rsp + 0x10] ; lea rax, [rsp + 0x20] ; cmp rdi, rax ; je 0xdf907
read: rax rdi rflags rsp 
write: rax rdi rflags rsp 
--------------------------------------------------------------------------------
000df907: RLP; add rsp, 0xa8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000df93c: RLP; jmp 0xdf665
read: 
write: 
--------------------------------------------------------------------------------
000df96b: RLP; lea r8, [rsp + 0x60] ; mov ecx, eax ; mov edi, 0x66666667 ; lea rsi, [r8 + 0xc] ; nop ; mov eax, ecx ; sub rsi, 1 ; imul edi ; mov eax, ecx ; sar eax, 0x1f ; sar edx, 2 ; sub edx, eax ; lea eax, [rdx + rdx*4] ; add eax, eax ; sub ecx, eax
read: eax ecx edi edx rsi 
write: eax ecx edi edx r8 rflags rsi 
--------------------------------------------------------------------------------
000df9bd: RLP; mov byte ptr [rax], 0x5d ; mov byte ptr [rax + 1], 0 ; add rax, 1 ; sub rax, rbx ; mov qword ptr [rsp + 0x10], rbx ; mov qword ptr [rsp + 0x18], rax ; mov rax, rbx ; jmp 0xdf7c9
read: rax rbx 
write: rax rflags 
--------------------------------------------------------------------------------
000df9ff: RLP; cmp dword ptr [rip + 0x2897f2], 1 ; mov eax, dword ptr [rip + 0x28c834] ; jne 0xdf8a0
read: rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000dfa3e: RLP; test rax, rax ; jns 0xdf8b5
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000dfa5e: RLP; mov esi, dword ptr [rip + 0x28c7d8] ; mov rdi, qword ptr [rip + 0x28c7c9] ; xor edx, edx ; or esi, 8 ; call 0xdf3fc
read: edx esi rip rsp 
write: edx esi rdi rflags rsp 
--------------------------------------------------------------------------------
000dfa79: RLP; mov ecx, dword ptr [rip + 0x28c7c1] ; test ecx, ecx ; je 0xdf8a8
read: ecx rflags 
write: ecx rflags 
--------------------------------------------------------------------------------
000dfaa5: RLP; test rax, rax ; jns 0xdf8b5
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000dfac4: RLP; jmp 0xdf8a8
read: 
write: 
--------------------------------------------------------------------------------
000dfad5: RLP; lea rsi, [rip + 0x56eab] ; mov edx, eax ; mov rdi, rbx ; xor eax, eax ; call 0x5212c
read: eax rbx rip rsp 
write: eax edx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000dfaec: RLP; jmp 0xdf754
read: 
write: 
--------------------------------------------------------------------------------
000dfb06: RLP; jmp 0xdf7b8
read: 
write: 
--------------------------------------------------------------------------------
000dfb25: RLP; test eax, eax ; mov ebx, eax ; js 0xdf8b5
read: eax rflags 
write: ebx rflags 
--------------------------------------------------------------------------------
000dfb4b: RLP; mov edi, ebx ; call 0xd711c
read: ebx rip rsp 
write: edi rsp 
--------------------------------------------------------------------------------
000dfb56: RLP; jmp 0xdf8b5
read: 
write: 
--------------------------------------------------------------------------------
000dfb8c: RLP; jmp 0xdf777
read: 
write: 
--------------------------------------------------------------------------------
000dfba2: RLP; jmp 0xdf790
read: 
write: 
--------------------------------------------------------------------------------
000dfbbc: RLP; mov rdi, rbx ; call 0x2203c
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000dfbd7: RLP; mov rdi, rbp ; call 0x2203c
read: rbp rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000dfc83: RLP; add rsp, 0xd8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000dfd16: RLP; add rsp, 0xd8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000dfd48: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000dfda3: RLP; add rsp, 0x80 ; mov esi, r10d ; mov rdi, r9 ; call 0xdf3fc
read: r10d r9 rip rsp 
write: esi rdi rflags rsp 
--------------------------------------------------------------------------------
000dfdb9: RLP; xor edi, edi ; call 0xdf3bc
read: edi rip rsp 
write: edi rflags rsp 
--------------------------------------------------------------------------------
000dfdc4: RLP; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
000dfdd8: RLP; mov rdi, rbx ; call 0x2203c
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000dfe2d: RLP; add rsp, 0x80 ; mov edi, dword ptr [rip + 0x28c406] ; test edi, edi ; je 0xdfe47
read: edi rflags rsp 
write: edi rflags rsp 
--------------------------------------------------------------------------------
000dfe47: RLP; xor edi, edi ; mov qword ptr [rip + 0x28c3e0], 0 ; mov dword ptr [rip + 0x28939a], 2 ; call 0xdf3bc
read: edi rip rsp 
write: edi rflags rsp 
--------------------------------------------------------------------------------
000dfe67: RLP; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
000dfe7b: RLP; mov rdi, rbx ; call 0x2203c
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000dff09: RLP; cmp eax, -1 ; mov ebx, eax ; je 0xdff33
read: eax rflags 
write: ebx rflags 
--------------------------------------------------------------------------------
000dff1d: RLP; cmp eax, -1 ; je 0xe002e
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000dff65: RLP; cmp eax, -1 ; mov ebp, eax ; je 0xe0035
read: eax rflags 
write: ebp rflags 
--------------------------------------------------------------------------------
000dff83: RLP; test eax, eax ; mov ebx, eax ; jne 0xe0035
read: eax rflags 
write: ebx rflags 
--------------------------------------------------------------------------------
000dffb5: RLP; mov esi, 1 ; mov edi, ebp ; call 0xd71bc
read: ebp rip rsp 
write: edi esi rsp 
--------------------------------------------------------------------------------
000dffc5: RLP; mov esi, 2 ; mov edi, ebp ; call 0xd71bc
read: ebp rip rsp 
write: edi esi rsp 
--------------------------------------------------------------------------------
000dffd5: RLP; cmp ebp, 2 ; jle 0xdff33
read: ebp rflags 
write: rflags 
--------------------------------------------------------------------------------
000dffe9: RLP; nop dword ptr [rax] ; jmp 0xdff33
read: 
write: 
--------------------------------------------------------------------------------
000e0004: RLP; jmp 0xdff2f
read: 
write: 
--------------------------------------------------------------------------------
000e010a: RLP; mov qword ptr [rsp], rax ; mov eax, 0x1a ; syscall ; mov rdi, qword ptr [rsp] ; mov rdx, rax ; call 0xf081c
read: rax rip rsp 
write: eax rdi rdx rsp 
--------------------------------------------------------------------------------
000e0125: RLP; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xe0135
read: rax rdx rflags rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000e02db: RLP; mov rax, qword ptr [rip + 0x28a4e2] ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
read: rsp 
write: r12 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000e0308: RLP; cmp eax, -1 ; movsd xmm1, qword ptr [rsp + 8] ; je 0xe032c
read: eax rflags 
write: rflags xmm1 
--------------------------------------------------------------------------------
000e0340: RLP; test rax, rax ; mov qword ptr [rip + 0x28a47a], rax ; je 0xe0313
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e037a: RLP; lea rax, [rip + 0x28becb] ; add rsp, 8 ; ret
read: rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000e03b7: RLP; mov rax, rbx ; pop rbx ; ret
read: rbx rsp 
write: rax rbx rsp 
--------------------------------------------------------------------------------
000e03f8: RLP; test eax, eax ; movsd xmm1, qword ptr [rsp + 8] ; jne 0xe04e4
read: eax rflags 
write: rflags xmm1 
--------------------------------------------------------------------------------
000e0440: RLP; movsxd rbp, eax ; cmp rbp, r13 ; jge 0xe056d
read: eax r13 rbp rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
000e05d6: RLP; mov edx, dword ptr [r14] ; xor eax, eax ; test edx, edx ; cmovns eax, dword ptr [r14] ; lea rdx, [r12 + rbp] ; cdqe ; sub rax, rbx ; mov byte ptr [rdx + rax], 0 ; jmp 0xe0494
read: eax edx rax rbx rflags 
write: eax edx rax rdx rflags 
--------------------------------------------------------------------------------
000e06a2: RLP; test eax, eax ; movsd xmm1, qword ptr [rsp + 8] ; je 0xe073c
read: eax rflags 
write: rflags xmm1 
--------------------------------------------------------------------------------
000e0764: RLP; xor ecx, ecx ; test eax, eax ; movsd xmm1, qword ptr [rsp + 8] ; jne 0xe078c
read: eax ecx rflags 
write: ecx rflags xmm1 
--------------------------------------------------------------------------------
000e07dd: RLP; test eax, eax ; je 0xe0774
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e088a: RLP; mov rax, qword ptr [rip + 0x289f3b] ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
read: rsp 
write: r12 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000e08bb: RLP; cmp eax, -1 ; fld xword ptr [rsp + 0x10] ; je 0xe08dc
read: eax rflags 
write: fpsw rflags 
--------------------------------------------------------------------------------
000e08ee: RLP; test rax, rax ; mov qword ptr [rip + 0x289ed4], rax ; je 0xe08c6
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e0931: RLP; lea rax, [rip + 0x28b964] ; add rsp, 0x18 ; ret
read: rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000e097f: RLP; add rsp, 0x10 ; mov rax, rbx ; pop rbx ; ret
read: rbx rsp 
write: rax rbx rflags rsp 
--------------------------------------------------------------------------------
000e09cb: RLP; test eax, eax ; fld xword ptr [rsp + 0x10] ; jne 0xe0aac
read: eax rflags 
write: fpsw rflags 
--------------------------------------------------------------------------------
000e0a0d: RLP; movsxd rbp, eax ; cmp rbp, r13 ; jge 0xe0b31
read: eax r13 rbp rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
000e0b9c: RLP; mov edx, dword ptr [r14] ; xor eax, eax ; test edx, edx ; cmovns eax, dword ptr [r14] ; lea rdx, [r12 + rbp] ; cdqe ; sub rax, rbx ; mov byte ptr [rdx + rax], 0 ; jmp 0xe0a5c
read: eax edx rax rbx rflags 
write: eax edx rax rdx rflags 
--------------------------------------------------------------------------------
000e0c65: RLP; test eax, eax ; fld xword ptr [rsp + 0x10] ; je 0xe0d04
read: eax rflags 
write: fpsw rflags 
--------------------------------------------------------------------------------
000e0d2b: RLP; xor edx, edx ; test eax, eax ; fld xword ptr [rsp + 0x10] ; jne 0xe0d54
read: eax edx rflags 
write: edx fpsw rflags 
--------------------------------------------------------------------------------
000e0dac: RLP; test eax, eax ; je 0xe0d3b
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e0e24: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000e0e49: RLP; mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
read: rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000e0e74: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000e0f33: RLP; test rax, rax ; mov qword ptr [rbx], rax ; setne al ; movzx eax, al ; pop rbx ; ret
read: al rax rflags rsp 
write: al eax rbx rflags rsp 
--------------------------------------------------------------------------------
000e0f75: RLP; mov qword ptr [rbx], 0 ; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
000e0fcd: RLP; test eax, eax ; mov ebp, eax ; lea edx, [rax - 1] ; je 0xe1193
read: eax rflags 
write: ebp edx rflags 
--------------------------------------------------------------------------------
000e10c4: RLP; test eax, eax ; mov ecx, dword ptr [rsp + 8] ; mov edx, dword ptr [rsp + 0xc] ; jne 0xe104c
read: eax rflags 
write: ecx edx rflags 
--------------------------------------------------------------------------------
000e1154: RLP; test eax, eax ; jne 0xe102e
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e11cf: RLP; mov rdi, qword ptr [rbx + 8] ; test rdi, rdi ; je 0xe11e9
read: rdi rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
000e11e9: RLP; mov rdi, rbx ; mov edx, r12d ; mov esi, 1 ; call rbp
read: r12d rbp rbx rsp 
write: edx esi rdi rsp 
--------------------------------------------------------------------------------
000e11fa: RLP; mov rdi, qword ptr [rbx + 0x10] ; test rdi, rdi ; je 0xe1214
read: rdi rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
000e1214: RLP; mov edx, r12d ; mov esi, 2 ; mov rdi, rbx ; call rbp
read: r12d rbp rbx rsp 
write: edx esi rdi rsp 
--------------------------------------------------------------------------------
000e1225: RLP; pop rbx ; pop rbp ; pop r12 ; ret
read: rsp 
write: r12 rbp rbx rsp 
--------------------------------------------------------------------------------
000e123e: RLP; jmp 0xe1225
read: 
write: 
--------------------------------------------------------------------------------
000e126e: RLP; mov rdi, qword ptr [rbx + 0x10] ; test rdi, rdi ; je 0xe1283
read: rdi rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
000e1283: RLP; mov rdi, qword ptr [rbx] ; call rbp
read: rbp rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000e128c: RLP; mov rdi, rbx ; call 0x1f46c
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000e1298: RLP; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000e1448: RLP; test eax, eax ; mov r15d, eax ; je 0xe14fe
read: eax rflags 
write: r15d rflags 
--------------------------------------------------------------------------------
000e147a: RLP; test r15d, r15d ; cmovns rbp, rbx ; mov rbx, qword ptr [rbp] ; test rbx, rbx ; je 0xe14a4
read: r15d rbp rbx rflags 
write: rbp rbx rflags 
--------------------------------------------------------------------------------
000e14b2: RLP; test rax, rax ; je 0xe151c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e14fe: RLP; add rsp, 0x28 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rbx rsp 
write: r12 r13 r14 r15 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000e1550: RLP; test eax, eax ; je 0xe1574
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e1612: RLP; test eax, eax ; mov r11d, eax ; je 0xe1694
read: eax rflags 
write: r11d rflags 
--------------------------------------------------------------------------------
000e1666: RLP; mov r11d, dword ptr [rbp - 0x50] ; mov r12, rax ; jmp 0xe15dc
read: rax 
write: r11d r12 
--------------------------------------------------------------------------------
000e17aa: RLP; lea rsp, [rbp - 0x28] ; mov rax, r13 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: r13 rsp 
write: r12 r13 r14 r15 rax rbp rbx rsp 
--------------------------------------------------------------------------------
000e1947: RLP; mov r11, qword ptr [rbp - 0x50] ; mov r12, rax ; mov r10, qword ptr [rbp - 0x48] ; mov rcx, qword ptr [rbp - 0x40] ; jmp 0xe18dc
read: rax 
write: r10 r11 r12 rcx 
--------------------------------------------------------------------------------
000e1a40: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000e1a62: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000e1ac1: RLP; test eax, eax ; jne 0xe1aa4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e1b07: RLP; add qword ptr [rbp], 1 ; mov rbx, rax ; jmp 0xe1ad3
read: rax 
write: rbx rflags 
--------------------------------------------------------------------------------
000e1b66: RLP; test eax, eax ; jne 0xe1b4c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e1bda: RLP; lea rbx, [rax + 1] ; xor r15d, r15d ; lea r12, [rbp - 0x40] ; lea r14, [rbp - 0x38] ; lea rax, [rbx*4] ; mov qword ptr [rbp - 0x48], rax ; add rax, 0x1e ; mov qword ptr [rbp - 0x50], rax ; jmp 0xe1c5b
read: r15d rax 
write: r12 r14 r15d rax rbx rflags 
--------------------------------------------------------------------------------
000e1c29: RLP; test rax, rax ; mov r15, rax ; je 0xe1cbc
read: rax rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
000e1c56: RLP; cmp rbx, rax ; jne 0xe1c7c
read: rax rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
000e1ca5: RLP; lea rsp, [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rsp 
--------------------------------------------------------------------------------
000e1cd6: RLP; lea rsp, [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rsp 
--------------------------------------------------------------------------------
000e1d2a: RLP; mov rsi, r12 ; mov rdi, rbp ; call 0xe1bac
read: r12 rbp rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
000e1d39: RLP; mov rsi, qword ptr [rbx] ; mov edi, 0xa ; call 0x6fedc
read: rip rsp 
write: edi rsi rsp 
--------------------------------------------------------------------------------
000e1d4a: RLP; pop rbx ; pop rbp ; pop r12 ; ret
read: rsp 
write: r12 rbp rbx rsp 
--------------------------------------------------------------------------------
000e1d66: RLP; test rbp, rbp ; je 0xe1d7d
read: rbp rflags 
write: rflags 
--------------------------------------------------------------------------------
000e1d7d: RLP; mov rdi, qword ptr [rbx] ; mov rax, qword ptr [rdi + 0x28] ; cmp rax, qword ptr [rdi + 0x30] ; jae 0xe1d9a
read: rax rflags 
write: rax rdi rflags 
--------------------------------------------------------------------------------
000e1da8: RLP; jmp 0xe1d4a
read: 
write: 
--------------------------------------------------------------------------------
000e1dfa: RLP; test r12, r12 ; je 0xe1e21
read: r12 rflags 
write: rflags 
--------------------------------------------------------------------------------
000e1e0e: RLP; mov rsi, qword ptr [rbx] ; lea rdi, [rip + 0x5ba78] ; call 0x6f93c
read: rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
000e1e21: RLP; mov rdi, qword ptr [rbx] ; lea rsi, [rip + 0x5ba71] ; xor eax, eax ; mov dword ptr fs:[rbp], r13d ; call 0x702ac
read: eax r13d rip rsp 
write: eax rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000e1e3b: RLP; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: rsp 
write: r12 r13 r14 rbp rbx rsp 
--------------------------------------------------------------------------------
000e1e5e: RLP; test r12, r12 ; je 0xe1e92
read: r12 rflags 
write: rflags 
--------------------------------------------------------------------------------
000e1e75: RLP; mov rcx, qword ptr [rbx] ; lea rdi, [rip + 0x52d08] ; mov edx, 2 ; mov esi, 1 ; call 0x76a3c
read: rip rsp 
write: edx esi rcx rdi rsp 
--------------------------------------------------------------------------------
000e1e92: RLP; mov rdi, qword ptr [rbx] ; lea rsi, [rip + 0x55265] ; xor eax, eax ; mov dword ptr fs:[rbp], r13d ; call 0x5212c
read: eax r13d rip rsp 
write: eax rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000e1eac: RLP; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: rsp 
write: r12 r13 r14 rbp rbx rsp 
--------------------------------------------------------------------------------
000e1f50: RLP; add rsp, 0xd8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000e1ff0: RLP; add rsp, 0xd8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000e2012: RLP; mov edi, ebx ; call 0x38aec
read: ebx rip rsp 
write: edi rsp 
--------------------------------------------------------------------------------
000e2032: RLP; mov edi, ebx ; call 0x38aec
read: ebx rip rsp 
write: edi rsp 
--------------------------------------------------------------------------------
000e2178: RLP; lea rsi, [rip + 0x54a87] ; mov rdx, rax ; xor edi, edi ; xor eax, eax ; call 0x6bcbc
read: eax edi rax rip rsp 
write: eax edi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000e218f: RLP; add rsp, 0x408 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000e21ea: RLP; lea r14, [rax + 1] ; lea rax, [rbp - 0x38] ; mov byte ptr [rbp - 0x50], 0 ; lea r12, [rbp - 0x40] ; mov qword ptr [rbp - 0x48], rax ; mov rax, r15 ; mov r15, r14 ; mov r14, rax ; jmp 0xe2222
read: r14 r15 rax 
write: r12 r14 r15 rax 
--------------------------------------------------------------------------------
000e2272: RLP; cmp r15, rax ; je 0xe220c
read: r15 rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e229e: RLP; cmp byte ptr [rbp - 0x50], 0 ; je 0xe22b0
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000e22b0: RLP; mov rax, qword ptr [rip + 0x286cb5] ; mov edx, dword ptr [rbp - 0x54] ; add dword ptr [rax], 1 ; test edx, edx ; jne 0xe232c
read: edx rflags 
write: edx rax rflags 
--------------------------------------------------------------------------------
000e22d5: RLP; mov rax, qword ptr [rip + 0x286ac0] ; mov rdi, qword ptr [rax] ; call 0x6c45c
read: rip rsp 
write: rax rdi rsp 
--------------------------------------------------------------------------------
000e22e8: RLP; mov eax, dword ptr [rbp - 0x58] ; test eax, eax ; jne 0xe23af
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e2329: RLP; jmp 0xe22b0
read: 
write: 
--------------------------------------------------------------------------------
000e2338: RLP; nop dword ptr [rax] ; jmp 0xe22c1
read: 
write: 
--------------------------------------------------------------------------------
000e2351: RLP; jmp 0xe22b0
read: 
write: 
--------------------------------------------------------------------------------
000e2362: RLP; jmp 0xe230b
read: 
write: 
--------------------------------------------------------------------------------
000e2374: RLP; test eax, eax ; mov rsi, qword ptr [rbp - 0x68] ; jne 0xe2237
read: eax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
000e239a: RLP; test rax, rax ; mov r14, rax ; mov rcx, qword ptr [rbp - 0x50] ; je 0xe23b7
read: rax rflags 
write: r14 rcx rflags 
--------------------------------------------------------------------------------
000e23c3: RLP; mov rax, qword ptr [rip + 0x2869d2] ; lea rdi, [rip + 0x5b7b3] ; mov rsi, qword ptr [rax] ; call 0x6f93c
read: rip rsp 
write: rax rdi rsi rsp 
--------------------------------------------------------------------------------
000e23dd: RLP; jmp 0xe22f3
read: 
write: 
--------------------------------------------------------------------------------
000e2475: RLP; mov rax, qword ptr [rip + 0x286ad0] ; mov rax, qword ptr [rax] ; test rax, rax ; je 0xe2534
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000e248e: RLP; lea rax, [rsp + 0xf0] ; lea rcx, [rsp + 8] ; mov esi, ebp ; mov rdx, r12 ; mov edi, ebx ; mov dword ptr [rsp + 8], 0x18 ; mov qword ptr [rsp + 0x10], rax ; lea rax, [rsp + 0x20] ; mov dword ptr [rsp + 0xc], 0x30 ; mov qword ptr [rsp + 0x18], rax ; call 0xe219c
read: ebp ebx r12 rax rip rsp 
write: edi esi rax rcx rdx rsp 
--------------------------------------------------------------------------------
000e24ca: RLP; mov esi, dword ptr [rip + 0x28c29c] ; test esi, esi ; je 0xe24f4
read: esi rflags 
write: esi rflags 
--------------------------------------------------------------------------------
000e24f4: RLP; add rsp, 0xd0 ; pop rbx ; pop rbp ; pop r12 ; ret
read: rsp 
write: r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000e2528: RLP; jmp 0xe2462
read: 
write: 
--------------------------------------------------------------------------------
000e2552: RLP; jmp 0xe248e
read: 
write: 
--------------------------------------------------------------------------------
000e2610: RLP; mov rax, qword ptr [rip + 0x286935] ; mov rax, qword ptr [rax] ; test rax, rax ; je 0xe2734
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000e2629: RLP; lea rdx, [rip + 0x5255b] ; lea rsi, [rip + 0x5437d] ; test rbx, rbx ; mov ecx, ebp ; cmove rsi, rdx ; xor edi, edi ; mov rdx, rbx ; xor eax, eax ; call 0x6bcbc
read: eax ebp edi rbx rdx rflags rip rsi rsp 
write: eax ecx edi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000e2650: RLP; lea rax, [rsp + 0x100] ; lea rcx, [rsp + 8] ; mov rdx, r14 ; mov esi, r13d ; mov edi, r12d ; mov dword ptr [rsp + 8], 0x28 ; mov qword ptr [rsp + 0x10], rax ; lea rax, [rsp + 0x20] ; mov dword ptr [rsp + 0xc], 0x30 ; mov qword ptr [rsp + 0x18], rax ; call 0xe219c
read: r12d r13d r14 rax rip rsp 
write: edi esi rax rcx rdx rsp 
--------------------------------------------------------------------------------
000e268e: RLP; mov r8d, dword ptr [rip + 0x28c0d7] ; test r8d, r8d ; je 0xe26ba
read: r8d rflags 
write: r8d rflags 
--------------------------------------------------------------------------------
000e26ba: RLP; add rsp, 0xd0 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: rsp 
write: r12 r13 r14 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000e26f0: RLP; jmp 0xe25fd
read: 
write: 
--------------------------------------------------------------------------------
000e2726: RLP; test eax, eax ; je 0xe26ba
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e2752: RLP; jmp 0xe2629
read: 
write: 
--------------------------------------------------------------------------------
000e27ef: RLP; test rax, rax ; mov r8, qword ptr [rsp] ; je 0xe282c
read: rax rflags 
write: r8 rflags 
--------------------------------------------------------------------------------
000e284f: RLP; mov rax, r14 ; add rax, qword ptr [rbp] ; mov edi, dword ptr [rsp + 0xc] ; sub rax, qword ptr [r15] ; mov rdx, r12 ; mov qword ptr [rbp], rax ; mov qword ptr [r15], r14 ; mov rsi, qword ptr [rbp] ; sub rdx, rsi ; call 0xd6a69
read: r12 r14 rax rdx rip rsi rsp 
write: edi rax rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000e2877: RLP; test eax, eax ; js 0xe2930
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e28a4: RLP; test rax, rax ; jne 0xe27f8
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e28ff: RLP; mov byte ptr [rbx], 0xa ; add r13, qword ptr [rbp] ; test rax, rax ; mov qword ptr [rbp], r13 ; jne 0xe2937
read: r13 rax rflags 
write: r13 rflags 
--------------------------------------------------------------------------------
000e292c: RLP; test eax, eax ; jns 0xe28e4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e29b0: RLP; test rax, rax ; mov rbp, rax ; je 0xe2a1a
read: rax rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
000e29f0: RLP; cmp eax, 1 ; je 0xe2a44
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e2a09: RLP; test rax, rax ; jne 0xe29dc
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e2a1a: RLP; mov rax, qword ptr [rsp + 8] ; cmp rax, -1 ; jne 0xe2a33
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000e2a4d: RLP; mov rbx, qword ptr [rsp + 8] ; mov ecx, eax ; lea eax, [rax + 0x3ff] ; test ecx, ecx ; cmovs ecx, eax ; sar ecx, 0xa ; mov rax, rbx ; movsxd rcx, ecx ; cqo ; idiv rcx ; mov qword ptr [rsp + 8], rax ; jmp 0xe2a0e
read: eax ecx rax rbx rcx rdx rflags 
write: eax ecx rax rbx rcx rdx rflags 
--------------------------------------------------------------------------------
000e2a9c: RLP; mov rcx, rax ; mov qword ptr [rbp - 0x68], rax ; mov rax, qword ptr [rip + 0x289882] ; cmp rcx, rax ; je 0xe2ca9
read: rax rcx rflags 
write: rax rcx rflags 
--------------------------------------------------------------------------------
000e2ac1: RLP; cmp eax, 1 ; lea rdi, [rip + 0x59231] ; mov esi, 0x80000 ; sbb r13, r13 ; and r13, 0xffffffffffffe200 ; lea rax, [r13 + 0x2010] ; add r13, 0x2000 ; sub rsp, rax ; xor eax, eax ; lea r12, [rsp + 0xf] ; and r12, 0xfffffffffffffff0 ; add r13, r12 ; mov qword ptr [rbp - 0x48], r13 ; mov qword ptr [rbp - 0x40], r13 ; call 0xd6819
read: eax r12 r13 rax rflags rip rsp 
write: eax esi r12 r13 rax rdi rflags rsp 
--------------------------------------------------------------------------------
000e2b0a: RLP; cmp eax, -1 ; mov dword ptr [rbp - 0x5c], eax ; je 0xe2c19
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e2b38: RLP; test rax, rax ; mov r15, rax ; je 0xe2bb0
read: rax rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
000e2b60: RLP; mov rdx, qword ptr [rbp - 0x38] ; mov r8, rax ; cmp r15, rdx ; je 0xe2cc6
read: r15 rax rdx rflags 
write: r8 rdx rflags 
--------------------------------------------------------------------------------
000e2c00: RLP; mov rcx, qword ptr [rbp - 0x38] ; cmp r15, rcx ; je 0xe2cc6
read: r15 rcx rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
000e2c38: RLP; cmp eax, -1 ; mov r15d, eax ; je 0xe2ccd
read: eax rflags 
write: r15d rflags 
--------------------------------------------------------------------------------
000e2c95: RLP; test rax, rax ; jne 0xe2c5c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e2ce9: RLP; cmp eax, -1 ; mov r15d, eax ; je 0xe2bbf
read: eax rflags 
write: r15d rflags 
--------------------------------------------------------------------------------
000e2d47: RLP; test rax, rax ; jne 0xe2d0c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e2d7a: RLP; test rax, rax ; mov rbx, rax ; je 0xe2e1d
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000e2da0: RLP; test rax, rax ; je 0xe2e04
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e2dd7: RLP; cmp rax, -1 ; je 0xe2d94
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e2df9: RLP; test rax, rax ; jne 0xe2da5
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e2e10: RLP; mov eax, ebp ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: ebp rsp 
write: eax r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000e2e26: RLP; jmp 0xe2e12
read: 
write: 
--------------------------------------------------------------------------------
000e2e44: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000e2e64: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000e2e8b: RLP; cmp rbx, rax ; je 0xe2f15
read: rax rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
000e2f15: RLP; test rax, rax ; je 0xe2f24
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e2f6a: RLP; cmp eax, 1 ; je 0xe2fa4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e2fda: RLP; cmp eax, 1 ; mov eax, 0 ; je 0xe3002
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e3036: RLP; test eax, eax ; mov r12d, eax ; js 0xe30d1
read: eax rflags 
write: r12d rflags 
--------------------------------------------------------------------------------
000e3059: RLP; movsxd rdi, r12d ; movsxd rdx, eax ; mov eax, 3 ; syscall ; test rdx, rdx ; mov eax, 0xffffffff ; jle 0xe30d6
read: eax r12d rdx rflags 
write: eax rdi rdx rflags 
--------------------------------------------------------------------------------
000e30c2: RLP; mov rax, qword ptr [rsp + 8] ; movsd qword ptr [rbp], xmm0 ; cmp rax, rbx ; jne 0xe309c
read: rax rbx rflags xmm0 
write: rax rflags 
--------------------------------------------------------------------------------
000e3417: RLP; test rax, rax ; je 0xe3444
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e3591: RLP; mov rdi, rax ; call 0xb319c
read: rax rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000e359d: RLP; mov rcx, qword ptr [rip + 0x2858c0] ; neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
read: eax rax 
write: eax rax rcx rflags 
--------------------------------------------------------------------------------
000e35ea: RLP; mov qword ptr [rsp], rax ; mov eax, 8 ; syscall ; mov rdi, qword ptr [rsp] ; mov rdx, rax ; call 0xf081c
read: rax rip rsp 
write: eax rdi rdx rsp 
--------------------------------------------------------------------------------
000e3605: RLP; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xe3615
read: rax rdx rflags rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000e363f: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000e37df: RLP; mov ecx, dword ptr [rsp + 0x14] ; mov ebx, eax ; mov r9d, 8 ; mov r8, qword ptr [rsp + 0x18] ; movsxd rdx, dword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 8] ; movsxd rdi, dword ptr [rsp + 4] ; movsxd r10, ecx ; mov ecx, 0x119 ; mov eax, ecx ; syscall ; cmp rax, -0x1000 ; mov rbp, rax ; ja 0xe382a
read: eax ecx rax rflags 
write: eax ebx ecx r10 r8 r9d rbp rdi rdx rflags rsi 
--------------------------------------------------------------------------------
000e3821: RLP; add rsp, 0x28 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
read: ebp rsp 
write: eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000e38c2: RLP; cmp rax, 8 ; setne al ; add rsp, 8 ; movzx eax, al ; neg eax ; ret
read: al eax rax rflags rsp 
write: al eax rflags rsp 
--------------------------------------------------------------------------------
000e38fc: RLP; cmp rax, 8 ; setne al ; add rsp, 0x18 ; movzx eax, al ; neg eax ; ret
read: al eax rax rflags rsp 
write: al eax rflags rsp 
--------------------------------------------------------------------------------
000e3bcd: RLP; mov qword ptr [rsp], rax ; mov r10, rcx ; mov eax, 0xe8 ; syscall ; mov rdi, qword ptr [rsp] ; mov rdx, rax ; call 0xf081c
read: rax rcx rip rsp 
write: eax r10 rdi rdx rsp 
--------------------------------------------------------------------------------
000e3beb: RLP; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xe3bfb
read: rax rdx rflags rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000e3f0d: RLP; mov qword ptr [rsp], rax ; mov r10, rcx ; mov eax, 0x113 ; syscall ; mov rdi, qword ptr [rsp] ; mov rdx, rax ; call 0xf081c
read: rax rcx rip rsp 
write: eax r10 rdi rdx rsp 
--------------------------------------------------------------------------------
000e3f2b: RLP; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xe3f3b
read: rax rdx rflags rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000e3fad: RLP; mov qword ptr [rsp], rax ; mov r10, rcx ; mov eax, 0x114 ; syscall ; mov rdi, qword ptr [rsp] ; mov rdx, rax ; call 0xf081c
read: rax rcx rip rsp 
write: eax r10 rdi rdx rsp 
--------------------------------------------------------------------------------
000e3fcb: RLP; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xe3fdb
read: rax rdx rflags rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000e407d: RLP; mov qword ptr [rsp], rax ; mov r10, rcx ; mov eax, 0x116 ; syscall ; mov rdi, qword ptr [rsp] ; mov rdx, rax ; call 0xf081c
read: rax rcx rip rsp 
write: eax r10 rdi rdx rsp 
--------------------------------------------------------------------------------
000e409b: RLP; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xe40ab
read: rax rdx rflags rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000e41da: RLP; mov qword ptr [rsp], rax ; mov eax, 0x130 ; syscall ; mov rdi, qword ptr [rsp] ; mov rdx, rax ; call 0xf081c
read: rax rip rsp 
write: eax rdi rdx rsp 
--------------------------------------------------------------------------------
000e41f5: RLP; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xe4205
read: rax rdx rflags rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000e42fa: RLP; mov qword ptr [rsp], rax ; mov eax, 0x2b ; syscall ; mov rdi, qword ptr [rsp] ; mov rdx, rax ; call 0xf081c
read: rax rip rsp 
write: eax rdi rdx rsp 
--------------------------------------------------------------------------------
000e4315: RLP; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xe4325
read: rax rdx rflags rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000e439a: RLP; mov qword ptr [rsp], rax ; mov eax, 0x2a ; syscall ; mov rdi, qword ptr [rsp] ; mov rdx, rax ; call 0xf081c
read: rax rip rsp 
write: eax rdi rdx rsp 
--------------------------------------------------------------------------------
000e43b5: RLP; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xe43c5
read: rax rdx rflags rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000e44fd: RLP; mov ecx, dword ptr [rsp + 0x1c] ; mov ebp, eax ; xor r9d, r9d ; xor r8d, r8d ; mov rdx, qword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 8] ; movsxd rdi, dword ptr [rsp + 0x18] ; mov eax, ebx ; movsxd r10, ecx ; syscall ; cmp rax, -0x1000 ; mov rbx, rax ; ja 0xe453f
read: eax ebx ecx r8d r9d rax rflags 
write: eax ebp ecx r10 r8d r9d rbx rdi rdx rflags rsi 
--------------------------------------------------------------------------------
000e4535: RLP; add rsp, 0x28 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
read: rbx rsp 
write: rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000e458d: RLP; mov qword ptr [rsp], rax ; mov r10, rcx ; mov eax, 0x2d ; syscall ; mov rdi, qword ptr [rsp] ; mov rdx, rax ; call 0xf081c
read: rax rcx rip rsp 
write: eax r10 rdi rdx rsp 
--------------------------------------------------------------------------------
000e45ab: RLP; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xe45bb
read: rax rdx rflags rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000e45fa: RLP; mov qword ptr [rsp], rax ; mov eax, 0x2f ; syscall ; mov rdi, qword ptr [rsp] ; mov rdx, rax ; call 0xf081c
read: rax rip rsp 
write: eax rdi rdx rsp 
--------------------------------------------------------------------------------
000e4615: RLP; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xe4625
read: rax rdx rflags rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000e469d: RLP; mov ecx, dword ptr [rsp + 0x1c] ; mov ebp, eax ; xor r9d, r9d ; xor r8d, r8d ; mov rdx, qword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 8] ; movsxd rdi, dword ptr [rsp + 0x18] ; mov eax, ebx ; movsxd r10, ecx ; syscall ; cmp rax, -0x1000 ; mov rbx, rax ; ja 0xe46df
read: eax ebx ecx r8d r9d rax rflags 
write: eax ebp ecx r10 r8d r9d rbx rdi rdx rflags rsi 
--------------------------------------------------------------------------------
000e46d5: RLP; add rsp, 0x28 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
read: rbx rsp 
write: rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000e472a: RLP; mov qword ptr [rsp], rax ; mov eax, 0x2e ; syscall ; mov rdi, qword ptr [rsp] ; mov rdx, rax ; call 0xf081c
read: rax rip rsp 
write: eax rdi rdx rsp 
--------------------------------------------------------------------------------
000e4745: RLP; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xe4755
read: rax rdx rflags rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000e479d: RLP; mov qword ptr [rsp], rax ; mov r10, rcx ; mov eax, 0x2c ; syscall ; mov rdi, qword ptr [rsp] ; mov rdx, rax ; call 0xf081c
read: rax rcx rip rsp 
write: eax r10 rdi rdx rsp 
--------------------------------------------------------------------------------
000e47bb: RLP; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xe47cb
read: rax rdx rflags rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000e48cb: RLP; test eax, eax ; mov dword ptr fs:[rbx], ebp ; jne 0xe48e4
read: eax ebp rflags 
write: rflags 
--------------------------------------------------------------------------------
000e4937: RLP; mov edx, eax ; cmp edx, -1 ; je 0xe4954
read: eax edx rflags 
write: edx rflags 
--------------------------------------------------------------------------------
000e499d: RLP; mov ebp, eax ; mov eax, 0x2f63 ; mov dword ptr [rsp + 0x10], 0x6f72702f ; mov word ptr [rsp + 0x14], ax ; lea rax, [r14 + 6] ; mov byte ptr [rsp + 0x16], 0 ; mov qword ptr [rsp + 8], rax ; jmp 0xe49f5
read: ax eax rax 
write: eax ebp rax 
--------------------------------------------------------------------------------
000e49dd: RLP; cmp eax, -1 ; mov r13d, 2 ; jne 0xe4a27
read: eax rflags 
write: r13d rflags 
--------------------------------------------------------------------------------
000e4a1c: RLP; cmp eax, -1 ; mov r13d, 5 ; je 0xe49e8
read: eax rflags 
write: r13d rflags 
--------------------------------------------------------------------------------
000e4a5d: RLP; mov esi, 4 ; mov rdi, r14 ; call 0xd6b3c
read: r14 rip rsp 
write: esi rdi rsp 
--------------------------------------------------------------------------------
000e4a6e: RLP; cmp eax, -1 ; jne 0xe49ff
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e4ae9: RLP; cmp eax, -1 ; je 0xe4af2
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e4b56: RLP; mov ecx, dword ptr [rsp + 0x1c] ; mov r8d, eax ; mov rdx, qword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 8] ; movsxd rdi, dword ptr [rsp + 0x18] ; mov eax, ebx ; movsxd r10, ecx ; syscall ; cmp rax, -0x1000 ; mov rbx, rax ; ja 0xe4b92
read: eax ebx ecx rax rflags 
write: eax ecx r10 r8d rbx rdi rdx rflags rsi 
--------------------------------------------------------------------------------
000e4b8a: RLP; add rsp, 0x20 ; mov eax, ebx ; pop rbx ; ret
read: ebx rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
000e4c0c: RLP; mov ecx, dword ptr [rsp + 0x14] ; mov r9d, eax ; mov r8, qword ptr [rsp + 0x18] ; mov edx, dword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 8] ; mov eax, ebx ; movsxd rdi, dword ptr [rsp + 4] ; movsxd r10, ecx ; syscall ; cmp rax, -0x1000 ; mov rbx, rax ; ja 0xe4c4c
read: eax ebx ecx rax rflags 
write: eax ecx edx r10 r8 r9d rbx rdi rflags rsi 
--------------------------------------------------------------------------------
000e4c44: RLP; add rsp, 0x20 ; mov eax, ebx ; pop rbx ; ret
read: ebx rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
000e4cc7: RLP; mov ecx, dword ptr [rsp + 0x1c] ; mov r8d, eax ; mov edx, dword ptr [rsp + 0x18] ; mov rsi, qword ptr [rsp + 0x10] ; movsxd rdi, dword ptr [rsp + 0xc] ; mov eax, ebx ; movsxd r10, ecx ; syscall ; cmp rax, -0x1000 ; mov rbx, rax ; ja 0xe4d02
read: eax ebx ecx rax rflags 
write: eax ecx edx r10 r8d rbx rdi rflags rsi 
--------------------------------------------------------------------------------
000e4cfa: RLP; add rsp, 0x20 ; mov eax, ebx ; pop rbx ; ret
read: ebx rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
000e4dae: RLP; test eax, eax ; js 0xe4dd4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e4e0d: RLP; mov qword ptr [rsp], rax ; mov r10, rcx ; mov eax, 0x45 ; syscall ; mov rdi, qword ptr [rsp] ; mov rdx, rax ; call 0xf081c
read: rax rcx rip rsp 
write: eax r10 rdi rdx rsp 
--------------------------------------------------------------------------------
000e4e2b: RLP; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xe4e3b
read: rax rdx rflags rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000e4e7d: RLP; mov qword ptr [rsp], rax ; mov r10, rcx ; mov eax, 0x46 ; syscall ; mov rdi, qword ptr [rsp] ; mov rdx, rax ; call 0xf081c
read: rax rcx rip rsp 
write: eax r10 rdi rdx rsp 
--------------------------------------------------------------------------------
000e4e9b: RLP; mov rax, rdx ; add rsp, 8 ; cmp rax, -0xfff ; jae 0xe4eab
read: rax rdx rflags rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000e50c4: RLP; test rax, rax ; mov rbx, rax ; je 0xe50dd
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000e50f9: RLP; test eax, eax ; mov r13d, eax ; js 0xe557c
read: eax rflags 
write: r13d rflags 
--------------------------------------------------------------------------------
000e5142: RLP; mov rax, qword ptr [rip + 0x2840e3] ; mov byte ptr [rbp - 0x6d0], 0 ; test rax, rax ; jne 0xe5441
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000e54b6: RLP; movabs rdi, 0x73646e6f636573 ; mov dword ptr [rbp - 0x69c], eax ; movsxd r9, r13d ; xor eax, eax ; mov qword ptr [rbp - 0x698], rdi ; mov edx, 3 ; mov word ptr [r12 + 0x24], ax ; mov dword ptr [r12 + 0x20], 0 ; lea rsi, [rbp - 0x430] ; mov byte ptr [r12 + 0x26], 0 ; mov rdi, r9 ; mov byte ptr [rbp - 0x689], 0x73 ; mov eax, 0x14 ; syscall ; jmp 0xe516a
read: ax eax r13d r9 rdi 
write: eax edx r9 rdi rflags rsi 
--------------------------------------------------------------------------------
000e5518: RLP; lea r13, [rax + 0x14] ; add rax, 0x23 ; and rax, 0xfffffffffffffff0 ; sub rsp, rax ; call 0xb3d6c
read: rax rip rsp 
write: r13 rax rflags rsp 
--------------------------------------------------------------------------------
000e5530: RLP; lea rdx, [rip + 0x5154f] ; mov r8d, eax ; mov rsi, r13 ; mov rdi, rsp ; mov rcx, rbx ; xor eax, eax ; call 0x5227c
read: eax r13 rbx rip rsp 
write: eax r8d rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000e554e: RLP; mov rdi, rsp ; xor eax, eax ; mov edx, 0x1b6 ; mov esi, 0x20241 ; call 0xd6819
read: eax rip rsp 
write: eax edx esi rdi rflags rsp 
--------------------------------------------------------------------------------
000e5566: RLP; cmp eax, -1 ; mov r13d, eax ; mov rsp, r12 ; jne 0xe5104
read: eax r12 rflags 
write: r13d rflags rsp 
--------------------------------------------------------------------------------
000e559b: RLP; lea rsi, [rip + 0x514ea] ; mov rdx, rax ; xor edi, edi ; xor eax, eax ; call 0x6bcbc
read: eax edi rax rip rsp 
write: eax edi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000e55b2: RLP; jmp 0xe5432
read: 
write: 
--------------------------------------------------------------------------------
000e55e3: RLP; mov qword ptr [rip + 0x283c2e], 3 ; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000e5620: RLP; mov qword ptr [rip + 0x283bf1], 0 ; jmp 0xe55ee
read: 
write: 
--------------------------------------------------------------------------------
000e56f5: RLP; test rax, rax ; je 0xe57d4
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e5794: RLP; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rsp 
write: r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000e57ee: RLP; mov qword ptr [rip + 0x283a4b], 0 ; mov qword ptr [rip + 0x283a18], 2 ; jmp 0xe5794
read: 
write: 
--------------------------------------------------------------------------------
000e5830: RLP; movsxd rbx, ebx ; mov qword ptr [rip + 0x2839e2], rbx ; pop rbx ; ret
read: ebx rbx rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
000e584f: RLP; cmp qword ptr [rip + 0x2839c5], 2 ; je 0xe5862
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000e5862: RLP; mov rdi, qword ptr [rip + 0x2839db] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000e5872: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000e5a93: RLP; test eax, eax ; js 0xe5be3
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e5ab2: RLP; test eax, eax ; js 0xe5be3
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e5b21: RLP; test eax, eax ; js 0xe5be3
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e5b3b: RLP; mov ecx, eax ; mov eax, 0xf4240 ; mov rsi, rsp ; cdq ; mov edi, 2 ; idiv ecx ; cdqe ; mov qword ptr [rsp + 0x18], rax ; mov rdx, qword ptr [rsp + 0x18] ; mov rax, qword ptr [rsp + 0x10] ; mov qword ptr [rsp + 8], rdx ; lea rdx, [rip + 0x286892] ; mov qword ptr [rsp], rax ; call 0xa60cc
read: eax ecx edx rax rdx rip rsp 
write: eax ecx edi edx rax rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000e5b77: RLP; add rsp, 0xc8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rsp 
write: r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000e5baf: RLP; test eax, eax ; js 0xe5be3
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e5bd5: RLP; add rsp, 0xc8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rsp 
write: r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000e5d22: RLP; ret
read: 
write: 
--------------------------------------------------------------------------------
000e5d45: RLP; ret
read: 
write: 
--------------------------------------------------------------------------------
000e5db9: RLP; mov rbp, rax ; test rbp, rbp ; je 0xe5ec0
read: rax rbp rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
000e5e67: RLP; mov rbp, rax ; jmp 0xe5dbc
read: rax 
write: rbp 
--------------------------------------------------------------------------------
000e5eb2: RLP; mov ecx, dword ptr [rip + 0x286584] ; mov r9, r15 ; jmp 0xe5de4
read: r15 
write: ecx r9 
--------------------------------------------------------------------------------
000e5f15: RLP; mov esi, eax ; mov eax, 0xf4240 ; cdq ; idiv esi ; movabs rdx, 0x431bde82d7b634db ; movsxd rcx, eax ; mov rax, rcx ; mul rdx ; shr rdx, 0x12 ; mov qword ptr [r12], rdx ; imul rdx, rdx, 0xf4240 ; sub rcx, rdx ; mov qword ptr [r12 + 8], rcx ; mov r8d, dword ptr [rip + 0x2864ec] ; test r8d, r8d
read: eax edx esi r8d rax rcx rdx 
write: eax edx esi r8d rax rcx rdx rflags 
--------------------------------------------------------------------------------
000e5fb2: RLP; mov r13d, dword ptr [rbp - 0x104] ; lea rax, [r14 + rbx*8 + 8] ; mov qword ptr [rbp - 0xf8], r14 ; mov qword ptr [rbp - 0x100], rax ; and r13d, 1 ; nop dword ptr [rax] ; mov rax, qword ptr [rbp - 0xf8] ; mov r12, qword ptr [rax] ; mov rcx, qword ptr [r12 + 0x18] ; cmp rcx, 1 ; jbe 0xe619a
read: r13d r14 rax rcx rflags 
write: r12 r13d rax rcx rflags 
--------------------------------------------------------------------------------
000e6137: RLP; test eax, eax ; jns 0xe60ec
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e614b: RLP; mov dword ptr [rip + 0x2862e7], 0 ; mov qword ptr [rip + 0x2862e4], 0 ; mov eax, 0xffffffff ; lea rsp, [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: rsp 
write: eax r12 r13 r14 r15 rbp rbx rsp 
--------------------------------------------------------------------------------
000e6196: RLP; test eax, eax ; js 0xe613b
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e6231: RLP; test eax, eax ; js 0xe6160
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e6287: RLP; lea rsp, [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rsp 
--------------------------------------------------------------------------------
000e62ef: RLP; test eax, eax ; js 0xe6160
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e630e: RLP; test eax, eax ; js 0xe6160
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e6326: RLP; lea rsp, [rbp - 0x28] ; xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: eax rsp 
write: eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000e6359: RLP; jmp 0xe61b6
read: 
write: 
--------------------------------------------------------------------------------
000e63d8: RLP; mov r9, qword ptr [rsp + 0x30] ; mov r8, qword ptr [rsp + 0x28] ; mov rdi, qword ptr [rsp + 0x20] ; mov rsi, qword ptr [rsp + 0x18] ; mov rdx, qword ptr [rsp + 0x10] ; mov rcx, qword ptr [rsp + 8] ; mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
read: rsp 
write: r8 r9 rax rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000e6449: RLP; mov r9, qword ptr [rsp + 0x30] ; mov r8, qword ptr [rsp + 0x28] ; mov rdi, qword ptr [rsp + 0x20] ; mov rsi, qword ptr [rsp + 0x18] ; mov rdx, qword ptr [rsp + 0x10] ; mov rcx, qword ptr [rsp + 8] ; mov rax, qword ptr [rsp] ; add rsp, 0x40 ; ret
read: rsp 
write: r8 r9 rax rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000e6d4d: RLP; mov r13, rax ; mov rax, qword ptr [rip + 0x282065] ; mov rax, qword ptr fs:[rax] ; mov r15, qword ptr [rax] ; mov rbx, qword ptr [r15 + 0x90] ; jmp 0xe6d7a
read: rax 
write: r13 r15 rax rbx 
--------------------------------------------------------------------------------
000e6d86: RLP; cmp r13, rax ; mov rbp, rax ; jne 0xe6d6c
read: r13 rax rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
000e6da0: RLP; test eax, eax ; jne 0xe6d6c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e6e7e: RLP; cmp byte ptr [rax + 1], 0 ; lea rbx, [rax + 1] ; je 0xe6ebc
read: rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000e6e97: RLP; test eax, eax ; jne 0xe6e6c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e76c0: RLP; mov r15, qword ptr [rbx] ; mov r13, rax ; mov rbx, qword ptr [r15 + 0x90] ; jmp 0xe76e2
read: rax 
write: r13 r15 rbx 
--------------------------------------------------------------------------------
000e76ee: RLP; cmp r13, rax ; mov rbp, rax ; jne 0xe76d4
read: r13 rax rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
000e7708: RLP; test eax, eax ; jne 0xe76d4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e77e6: RLP; cmp byte ptr [rax + 1], 0 ; lea rbx, [rax + 1] ; je 0xe7824
read: rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000e77ff: RLP; test eax, eax ; jne 0xe77d4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e78e0: RLP; add rsp, 0x80 ; lea r8, [rip + 0x284c2e] ; lea rdx, [rip + 0x282edf] ; lea rsi, [rip + 0x284c40] ; lea rdi, [rip + 0xc19] ; xor r9d, r9d ; mov ecx, 0x400 ; call 0x10522c
read: r9d rip rsp 
write: ecx r8 r9d rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000e7914: RLP; mov rdx, rax ; mov rax, qword ptr [rip + 0x281546] ; mov esi, dword ptr fs:[rax] ; cmp dword ptr [rip + 0x286e48], 0 ; je 0xe7935
read: rax rflags 
write: esi rax rdx rflags 
--------------------------------------------------------------------------------
000e7954: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x281502] ; mov dword ptr fs:[rax], esi ; mov rax, rdx ; add rsp, 8 ; ret
read: esi rdx rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000e79c9: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rip + 0x282e05] ; mov rcx, qword ptr [rip + 0x284c06] ; test rdx, rdx ; je 0xe7adc
read: rdx rflags rsp 
write: rcx rdx rflags rsp 
--------------------------------------------------------------------------------
000e7a17: RLP; cmp eax, 0x22 ; jne 0xe7acc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e7a48: RLP; test rax, rax ; jne 0xe79f4
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e7a59: RLP; mov rax, qword ptr [rip + 0x281404] ; mov qword ptr [rip + 0x282d71], 0 ; mov dword ptr fs:[rax], 0xc ; mov qword ptr [rsp + 8], 0 ; cmp dword ptr [rip + 0x286cee], 0 ; je 0xe7a8f
read: rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000e7aae: RLP; add rsp, 0x80 ; mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rsp 
write: r12 r13 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000e7af5: RLP; test rax, rax ; mov qword ptr [rip + 0x282cdd], rax ; je 0xe7a72
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e7b69: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rip + 0x284ad5] ; mov rcx, qword ptr [rip + 0x284ac6] ; test rdx, rdx ; je 0xe7c8c
read: rdx rflags rsp 
write: rcx rdx rflags rsp 
--------------------------------------------------------------------------------
000e7bb7: RLP; cmp eax, 0x22 ; jne 0xe7c6c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e7beb: RLP; test rax, rax ; jne 0xe7b94
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e7c06: RLP; mov qword ptr [rip + 0x284a3b], 0 ; mov dword ptr fs:[rbx], ebp ; mov edx, ebp ; mov qword ptr [rsp + 8], 0 ; cmp dword ptr [rip + 0x286b4a], 0 ; je 0xe7c33
read: ebp rflags 
write: edx rflags 
--------------------------------------------------------------------------------
000e7c52: RLP; add rsp, 0x80 ; mov dword ptr fs:[rbx], edx ; mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: edx rsp 
write: r12 r13 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000e7ca5: RLP; test rax, rax ; mov qword ptr [rip + 0x28499d], rax ; jne 0xe7cc0
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e7d02: RLP; test eax, eax ; jne 0xe7e9e
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e7d44: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rip + 0x282a92] ; test rdx, rdx ; je 0xe7eaf
read: rdx rflags rsp 
write: rdx rflags rsp 
--------------------------------------------------------------------------------
000e7d82: RLP; test eax, eax ; jne 0xe7e8c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e7db7: RLP; cmp eax, 0x22 ; jne 0xe7e14
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e7de4: RLP; test rax, rax ; jne 0xe7d6c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e7dff: RLP; mov rax, qword ptr [rsp + 8] ; mov dword ptr fs:[r13], r15d ; jmp 0xe7d6c
read: r15d 
write: rax 
--------------------------------------------------------------------------------
000e7e65: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x280ff1] ; mov dword ptr fs:[rax], edx ; mov rax, qword ptr [rsp + 0x18] ; add rsp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: edx rsp 
write: r12 r13 r14 r15 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000e7ec8: RLP; mov qword ptr [rip + 0x282915], rax ; mov rdx, rax ; jmp 0xe7d5b
read: rax 
write: rdx 
--------------------------------------------------------------------------------
000e7f3d: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rbx + 0x88] ; mov qword ptr [rdx + 8], r8 ; add dword ptr [rdx + 4], 1 ; mov rax, qword ptr [rbp + 8] ; mov rdx, qword ptr [rbp] ; lea rcx, [rip + 0x4c9b0] ; lea rsi, [rip + 0x4eb7e] ; mov rdi, rbx ; test rax, rax ; cmovne rcx, rax ; xor eax, eax ; call 0x5212c
read: eax r8 rax rbx rcx rflags rip rsp 
write: eax rax rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000e7f7e: RLP; mov rdx, qword ptr [rbp + 0x10] ; mov r13d, eax ; shr r13d, 0x1f ; mov r12d, r13d ; cmp rdx, -1 ; je 0xe8224
read: eax r13d rdx rflags 
write: r12d r13d rdx rflags 
--------------------------------------------------------------------------------
000e7fab: RLP; test eax, eax ; js 0xe825c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e80a0: RLP; cmp eax, 0x80000000 ; sbb r12d, -1 ; mov rax, qword ptr [rbx + 0x28] ; cmp rax, qword ptr [rbx + 0x30] ; jae 0xe832d
read: eax r12d rax rflags 
write: r12d rax rflags 
--------------------------------------------------------------------------------
000e8106: RLP; add rsp, 0x80 ; xor eax, eax ; test r12d, r12d ; setne al ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; neg eax ; pop r13 ; ret
read: eax r12d rflags rsp 
write: al eax r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000e8141: RLP; test eax, eax ; js 0xe8324
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e8177: RLP; test eax, eax ; js 0xe82d4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e81a9: RLP; test eax, eax ; js 0xe82fc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e81d9: RLP; test eax, eax ; js 0xe82ac
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e8209: RLP; test eax, eax ; js 0xe8284
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e824f: RLP; add eax, 1 ; jne 0xe7fbe
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e8276: RLP; add eax, 1 ; jne 0xe7fe5
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e829e: RLP; add eax, 1 ; jne 0xe800c
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e82c6: RLP; add eax, 1 ; jne 0xe8081
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e82ee: RLP; add eax, 1 ; jne 0xe8033
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e8316: RLP; add eax, 1 ; jne 0xe805a
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000e833e: RLP; add eax, 1 ; sete al ; movzx eax, al ; add r12d, eax ; jmp 0xe80c2
read: al eax r12d rflags 
write: al eax r12d rflags 
--------------------------------------------------------------------------------
000e83a0: RLP; add rsp, 0x80 ; lea r8, [rip + 0x284316] ; lea rcx, [rip + 0x284307] ; lea rdx, [rip + 0x284310] ; lea rsi, [rip + 0x1dec9] ; lea rdi, [rip + 0x4e72d] ; mov dword ptr [rsp + 8], 0 ; mov qword ptr [rsp], 0 ; xor r9d, r9d ; call 0x1053dc
read: r9d rip rsp 
write: r8 r9d rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000e83e6: RLP; mov rax, qword ptr [rip + 0x280a77] ; mov edx, dword ptr fs:[rax] ; cmp dword ptr [rip + 0x286379], 0 ; je 0xe8404
read: rflags 
write: edx rax rflags 
--------------------------------------------------------------------------------
000e8423: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x280a33] ; mov dword ptr fs:[rax], edx ; add rsp, 0x18 ; ret
read: edx rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000e848e: RLP; add rsp, 0x80 ; lea r8, [rip + 0x284228] ; lea rcx, [rip + 0x284219] ; lea rdx, [rip + 0x284222] ; lea rsi, [rip + 0x1dddb] ; lea rdi, [rip + 0x4e648] ; xor r9d, r9d ; call 0x10550c
read: r9d rip rsp 
write: r8 r9d rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000e84c4: RLP; mov rax, qword ptr [rip + 0x280999] ; mov edx, dword ptr fs:[rax] ; cmp dword ptr [rip + 0x28629b], 0 ; je 0xe84e2
read: rflags 
write: edx rax rflags 
--------------------------------------------------------------------------------
000e8501: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x280955] ; mov dword ptr fs:[rax], edx ; add rsp, 8 ; ret
read: edx rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000e856a: RLP; add rsp, 0x80 ; lea r8, [rip + 0x284144] ; mov qword ptr [rsp + 0x20], rdx ; mov qword ptr [rsp + 0x10], r9 ; lea rcx, [rip + 0x284143] ; lea r9, [rip + 0x284134] ; lea rdx, [rip + 0x1dcf5] ; lea rsi, [rip + 0x4e559] ; lea rdi, [rip + 0x4e564] ; mov qword ptr [rsp + 0x30], 0 ; mov qword ptr [rsp + 0x28], rbx ; mov qword ptr [rsp + 0x18], r10 ; mov dword ptr [rsp + 8], 0 ; mov qword ptr [rsp], 0 ; call 0x1055fc
read: r10 r9 rbx rdx rip rsp 
write: r8 r9 rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000e85d1: RLP; mov edx, eax ; mov rax, qword ptr [rip + 0x28088a] ; mov esi, dword ptr fs:[rax] ; cmp dword ptr [rip + 0x28618c], 0 ; je 0xe85f1
read: eax rflags 
write: edx esi rax rflags 
--------------------------------------------------------------------------------
000e8610: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x280846] ; mov dword ptr fs:[rax], esi ; add rsp, 0x40 ; mov eax, edx ; pop rbx ; ret
read: edx esi rsp 
write: eax rax rbx rflags rsp 
--------------------------------------------------------------------------------
000e86da: RLP; mov r8, r14 ; mov rcx, r13 ; mov rdx, r12 ; mov rsi, rbx ; mov rdi, rbp ; call qword ptr [rsp + 0x20]
read: r12 r13 r14 rbp rbx rsp 
write: r8 rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000e86f1: RLP; cmp eax, -2 ; mov r15d, eax ; jne 0xe8708
read: eax rflags 
write: r15d rflags 
--------------------------------------------------------------------------------
000e8729: RLP; test eax, eax ; je 0xe86cc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e87e0: RLP; test eax, eax ; jne 0xe882c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e887c: RLP; test rax, rax ; je 0xe8884
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e892d: RLP; mov edx, 0xffffffff ; cmp rax, rdx ; cmova rax, rdx ; cdqe ; mov qword ptr [rbp + 0x10], rax ; mov rax, qword ptr [rsp + 8] ; cmp rax, rbx ; je 0xe8bda
read: eax rax rbx rdx rflags 
write: edx rax rflags 
--------------------------------------------------------------------------------
000e8979: RLP; mov edx, 0xffffffff ; cmp rax, rdx ; cmova rax, rdx ; cdqe ; mov qword ptr [rbp + 0x18], rax ; mov rax, qword ptr [rsp + 8] ; cmp rax, rbx ; je 0xe8be7
read: eax rax rbx rdx rflags 
write: edx rax rflags 
--------------------------------------------------------------------------------
000e89cd: RLP; mov edx, 0xffffffff ; cmp rax, rdx ; cmova rax, rdx ; cdqe ; mov qword ptr [rbp + 0x20], rax ; mov rax, qword ptr [rsp + 8] ; cmp rax, rbx ; je 0xe8bf4
read: eax rax rbx rdx rflags 
write: edx rax rflags 
--------------------------------------------------------------------------------
000e8a52: RLP; mov edx, 0xffffffff ; cmp rax, rdx ; cmova rax, rdx ; mov rdx, qword ptr [rsp + 8] ; cdqe ; mov qword ptr [rbp + 0x28], rax ; cmp rdx, rbx ; je 0xe8c01
read: eax rax rbx rdx rflags 
write: edx rax rdx rflags 
--------------------------------------------------------------------------------
000e8aa8: RLP; mov edx, 0xffffffff ; cmp rax, rdx ; cmova rax, rdx ; cdqe ; mov qword ptr [rbp + 0x30], rax ; mov rax, qword ptr [rsp + 8] ; cmp rax, rbx ; je 0xe8c20
read: eax rax rbx rdx rflags 
write: edx rax rflags 
--------------------------------------------------------------------------------
000e8afc: RLP; mov edx, 0xffffffff ; cmp rax, rdx ; cmova rax, rdx ; cdqe ; mov qword ptr [rbp + 0x38], rax ; mov rax, qword ptr [rsp + 8] ; cmp rax, rbx ; jne 0xe8b20
read: eax rax rbx rdx rflags 
write: edx rax rflags 
--------------------------------------------------------------------------------
000e8b54: RLP; mov edx, 0xffffffff ; cmp rax, rdx ; cmova rax, rdx ; mov qword ptr [rbp + 0x40], rax ; mov rax, qword ptr [rsp + 8] ; cmp rax, rbx ; jne 0xe8b76
read: rax rbx rdx rflags 
write: edx rax rflags 
--------------------------------------------------------------------------------
000e8c67: RLP; cmp byte ptr [rbx], 0 ; mov rdi, rax ; mov eax, 0x22 ; je 0xe8c7c
read: rax rflags 
write: eax rdi rflags 
--------------------------------------------------------------------------------
000e8c9f: RLP; test eax, eax ; jle 0xe8cbc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e8d3c: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rbp + 0x88] ; mov qword ptr [rdx + 8], r8 ; add dword ptr [rdx + 4], 1 ; mov r15, qword ptr [rip + 0x28010b] ; add r15, qword ptr fs:[0] ; lea rbx, [r12 + r13 - 1] ; nop dword ptr [rax + rax] ; mov byte ptr [rbx], 0xff ; mov rdx, rbp ; mov esi, r13d ; mov rdi, r12 ; call 0x76abc
read: r12 r13d r15 r8 rbp rip rsp 
write: esi r15 rbx rdi rdx rflags rsp 
--------------------------------------------------------------------------------
000e8d81: RLP; test rax, rax ; je 0xe8e3c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e8ddf: RLP; test eax, eax ; je 0xe8d6c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e8e28: RLP; add rsp, 0x80 ; mov rax, qword ptr [rsp + 8] ; mov qword ptr [r14], rax ; xor eax, eax ; jmp 0xe8ea5
read: eax rax rsp 
write: eax rax rflags rsp 
--------------------------------------------------------------------------------
000e8e84: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x27ffd2] ; mov qword ptr [r14], 0 ; mov dword ptr fs:[rax], 0x22 ; mov eax, 0x22 ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: eax r12 r13 r14 r15 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000e8efa: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x27ff5c] ; mov qword ptr [r14], 0 ; mov dword ptr fs:[rax], 2 ; mov eax, 2 ; jmp 0xe8ea5
read: rsp 
write: eax rax rflags rsp 
--------------------------------------------------------------------------------
000e8f98: RLP; add rsp, 0x80 ; lea rdi, [rip + 0x4db79] ; xor eax, eax ; mov edx, 0x180 ; mov esi, 0x80041 ; call 0xd680c
read: eax rip rsp 
write: eax edx esi rdi rflags rsp 
--------------------------------------------------------------------------------
000e8fbb: RLP; cmp eax, -1 ; mov dword ptr [rip + 0x2802c0], eax ; je 0xe919b
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e9025: RLP; test eax, eax ; js 0xe917e
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e9064: RLP; test eax, eax ; js 0xe916b
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e907a: RLP; mov edi, dword ptr [rip + 0x280204] ; mov eax, 1 ; mov rdx, rsp ; mov esi, 7 ; mov qword ptr [rsp], 0 ; mov word ptr [rsp], ax ; xor eax, eax ; mov qword ptr [rsp + 8], 0 ; mov qword ptr [rsp + 0x10], 0 ; mov qword ptr [rsp + 0x18], 0 ; call 0xd6f3c
read: ax eax rip rsp 
write: eax edi esi rdx rflags rsp 
--------------------------------------------------------------------------------
000e90bf: RLP; xor edi, edi ; mov r12d, eax ; call 0xb2b3c
read: eax edi rip rsp 
write: edi r12d rflags rsp 
--------------------------------------------------------------------------------
000e90cd: RLP; xor edx, edx ; mov rsi, rbp ; mov edi, 2 ; call 0x361ac
read: edx rbp rip rsp 
write: edi edx rflags rsi rsp 
--------------------------------------------------------------------------------
000e90e0: RLP; xor edx, edx ; mov rsi, rbx ; mov edi, 0xe ; call 0x3617c
read: edx rbx rip rsp 
write: edi edx rflags rsi rsp 
--------------------------------------------------------------------------------
000e90f3: RLP; test r12d, r12d ; js 0xe914c
read: r12d rflags 
write: rflags 
--------------------------------------------------------------------------------
000e912b: RLP; add rsp, 0x80 ; mov eax, r12d ; add rsp, 0x260 ; pop rbx ; pop rbp ; pop r12 ; ret
read: r12d rsp 
write: eax r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000e915f: RLP; mov dword ptr [rip + 0x28011b], 0xffffffff ; jmp 0xe90f8
read: 
write: 
--------------------------------------------------------------------------------
000e917e: RLP; mov edi, dword ptr [rip + 0x280100] ; test edi, edi ; js 0xe919b
read: edi rflags 
write: edi rflags 
--------------------------------------------------------------------------------
000e9191: RLP; mov dword ptr [rip + 0x2800e9], 0xffffffff ; cmp dword ptr [rip + 0x2855ce], 0 ; je 0xe91af
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000e91ce: RLP; add rsp, 0x80 ; mov eax, 0xffffffff ; jmp 0xe9135
read: rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
000e923d: RLP; add rsp, 0x80 ; mov edi, dword ptr [rip + 0x28003a] ; call 0xd711c
read: rip rsp 
write: edi rflags rsp 
--------------------------------------------------------------------------------
000e9253: RLP; mov dword ptr [rip + 0x280027], 0xffffffff ; mov edx, eax ; cmp dword ptr [rip + 0x28550a], 0 ; je 0xe9273
read: eax rflags 
write: edx rflags 
--------------------------------------------------------------------------------
000e9292: RLP; add rsp, 0x80 ; mov eax, edx ; add rsp, 8 ; ret
read: edx rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
000e92f0: RLP; add rsp, 0x80 ; lea rdi, [rip + 0xa1e] ; lea r8, [rip + 0x2833f7] ; lea rdx, [rip + 0x2814e0] ; lea rsi, [rip + 0x283409] ; xor r9d, r9d ; mov ecx, 0x400 ; call 0x10522c
read: r9d rip rsp 
write: ecx r8 r9d rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000e9324: RLP; mov rdx, rax ; mov rax, qword ptr [rip + 0x27fb36] ; mov esi, dword ptr fs:[rax] ; cmp dword ptr [rip + 0x285438], 0 ; je 0xe9345
read: rax rflags 
write: esi rax rdx rflags 
--------------------------------------------------------------------------------
000e9364: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x27faf2] ; mov dword ptr fs:[rax], esi ; mov rax, rdx ; add rsp, 8 ; ret
read: esi rdx rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000e93d9: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rip + 0x28140d] ; mov rcx, qword ptr [rip + 0x28338e] ; test rdx, rdx ; je 0xe94ec
read: rdx rflags rsp 
write: rcx rdx rflags rsp 
--------------------------------------------------------------------------------
000e9427: RLP; cmp eax, 0x22 ; jne 0xe94dc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e9458: RLP; test rax, rax ; jne 0xe9404
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e9469: RLP; mov rax, qword ptr [rip + 0x27f9f4] ; mov qword ptr [rip + 0x281379], 0 ; mov dword ptr fs:[rax], 0xc ; mov qword ptr [rsp + 8], 0 ; cmp dword ptr [rip + 0x2852de], 0 ; je 0xe949f
read: rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000e94be: RLP; add rsp, 0x80 ; mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rsp 
write: r12 r13 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000e9505: RLP; test rax, rax ; mov qword ptr [rip + 0x2812e5], rax ; je 0xe9482
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e957b: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rip + 0x28323b] ; mov rcx, qword ptr [rip + 0x28322c] ; test rdx, rdx ; je 0xe96b0
read: rdx rflags rsp 
write: rcx rdx rflags rsp 
--------------------------------------------------------------------------------
000e95cf: RLP; test eax, eax ; je 0xe9694
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e960f: RLP; test rax, rax ; jne 0xe95ac
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e9624: RLP; mov qword ptr [rip + 0x283195], 0 ; mov dword ptr fs:[rbp], ebx ; mov edx, ebx ; mov qword ptr [rsp + 8], 0 ; cmp dword ptr [rip + 0x28512b], 0 ; je 0xe9652
read: ebx rflags 
write: edx rflags 
--------------------------------------------------------------------------------
000e9671: RLP; add rsp, 0x80 ; mov dword ptr fs:[rbp], edx ; mov rax, qword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: edx rsp 
write: r12 r13 r14 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000e96c9: RLP; test rax, rax ; mov qword ptr [rip + 0x2830f1], rax ; mov rdx, rax ; mov ecx, 0x400 ; jne 0xe9599
read: rax rflags 
write: ecx rdx rflags 
--------------------------------------------------------------------------------
000e9722: RLP; test eax, eax ; jne 0xe98be
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e9764: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rip + 0x28108a] ; test rdx, rdx ; je 0xe98cf
read: rdx rflags rsp 
write: rdx rflags rsp 
--------------------------------------------------------------------------------
000e97a2: RLP; test eax, eax ; jne 0xe98ac
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e97d7: RLP; cmp eax, 0x22 ; jne 0xe9834
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e9804: RLP; test rax, rax ; jne 0xe978c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e981f: RLP; mov rax, qword ptr [rsp + 8] ; mov dword ptr fs:[r13], r15d ; jmp 0xe978c
read: r15d 
write: rax 
--------------------------------------------------------------------------------
000e9885: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x27f5d1] ; mov dword ptr fs:[rax], edx ; mov rax, qword ptr [rsp + 0x18] ; add rsp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: edx rsp 
write: r12 r13 r14 r15 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000e98e8: RLP; mov qword ptr [rip + 0x280f0d], rax ; mov rdx, rax ; jmp 0xe977b
read: rax 
write: rdx 
--------------------------------------------------------------------------------
000e9961: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rbp + 0x88] ; mov qword ptr [rdx + 8], r8 ; add dword ptr [rdx + 4], 1 ; mov rcx, qword ptr [r13 + 8] ; lea rbx, [rip + 0x4af90] ; mov rdx, qword ptr [r13] ; lea rsi, [rip + 0x4d15a] ; mov rdi, rbp ; lea r12, [rip + 0x4d197] ; test rcx, rcx ; cmove rcx, rbx ; xor eax, eax ; call 0x5212c
read: eax r8 rbp rbx rcx rflags rip rsp 
write: eax r12 rbx rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000e99a9: RLP; mov r14, qword ptr [r13 + 0x10] ; mov r15d, eax ; mov eax, 1 ; shr r15d, 0x1f ; mov dword ptr [rsp + 0xc], r15d ; test r14, r14 ; jne 0xe99f8
read: eax r14 r15d rflags 
write: eax r14 r15d rflags 
--------------------------------------------------------------------------------
000e99ee: RLP; test eax, eax ; js 0xe9b04
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e9a5e: RLP; test eax, eax ; js 0xe9af4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e9ace: RLP; add rsp, 0x80 ; mov edx, dword ptr [rsp + 0xc] ; xor eax, eax ; test edx, edx ; setne al ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; neg eax ; pop r15 ; ret
read: eax edx rflags rsp 
write: al eax edx r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000e9b22: RLP; add eax, 1 ; sete al ; movzx eax, al ; add dword ptr [rsp + 0xc], eax ; jmp 0xe9a89
read: al eax rflags 
write: al eax rflags 
--------------------------------------------------------------------------------
000e9b45: RLP; add eax, 1 ; sete al ; movzx eax, al ; add dword ptr [rsp + 0xc], eax ; jmp 0xe9a19
read: al eax rflags 
write: al eax rflags 
--------------------------------------------------------------------------------
000e9ba0: RLP; add rsp, 0x80 ; lea r8, [rip + 0x282c6e] ; lea rcx, [rip + 0x282c5f] ; lea rdx, [rip + 0x282c68] ; lea rsi, [rip + 0x1c8e9] ; lea rdi, [rip + 0x4cf6b] ; mov dword ptr [rsp + 8], 0 ; mov qword ptr [rsp], 0 ; xor r9d, r9d ; call 0x1053dc
read: r9d rip rsp 
write: r8 r9d rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000e9be6: RLP; mov rax, qword ptr [rip + 0x27f277] ; mov edx, dword ptr fs:[rax] ; cmp dword ptr [rip + 0x284b79], 0 ; je 0xe9c04
read: rflags 
write: edx rax rflags 
--------------------------------------------------------------------------------
000e9c23: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x27f233] ; mov dword ptr fs:[rax], edx ; add rsp, 0x18 ; ret
read: edx rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000e9c8e: RLP; add rsp, 0x80 ; lea r8, [rip + 0x282b80] ; lea rcx, [rip + 0x282b71] ; lea rdx, [rip + 0x282b7a] ; lea rsi, [rip + 0x1c7fb] ; lea rdi, [rip + 0x4ce86] ; xor r9d, r9d ; call 0x10550c
read: r9d rip rsp 
write: r8 r9d rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000e9cc4: RLP; mov rax, qword ptr [rip + 0x27f199] ; mov edx, dword ptr fs:[rax] ; cmp dword ptr [rip + 0x284a9b], 0 ; je 0xe9ce2
read: rflags 
write: edx rax rflags 
--------------------------------------------------------------------------------
000e9d01: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x27f155] ; mov dword ptr fs:[rax], edx ; add rsp, 8 ; ret
read: edx rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000e9d6a: RLP; add rsp, 0x80 ; lea r8, [rip + 0x282a9c] ; mov qword ptr [rsp + 0x20], rdx ; mov qword ptr [rsp + 0x10], r9 ; lea rcx, [rip + 0x282a9b] ; lea r9, [rip + 0x282a8c] ; lea rdx, [rip + 0x1c715] ; lea rsi, [rip + 0x4cd97] ; lea rdi, [rip + 0x4cda2] ; mov qword ptr [rsp + 0x30], 0 ; mov qword ptr [rsp + 0x28], rbx ; mov qword ptr [rsp + 0x18], r10 ; mov dword ptr [rsp + 8], 0 ; mov qword ptr [rsp], 0 ; call 0x1055fc
read: r10 r9 rbx rdx rip rsp 
write: r8 r9 rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000e9dd1: RLP; mov edx, eax ; mov rax, qword ptr [rip + 0x27f08a] ; mov esi, dword ptr fs:[rax] ; cmp dword ptr [rip + 0x28498c], 0 ; je 0xe9df1
read: eax rflags 
write: edx esi rax rflags 
--------------------------------------------------------------------------------
000e9e10: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x27f046] ; mov dword ptr fs:[rax], esi ; add rsp, 0x40 ; mov eax, edx ; pop rbx ; ret
read: edx esi rsp 
write: eax rax rbx rflags rsp 
--------------------------------------------------------------------------------
000e9eda: RLP; mov r8, r14 ; mov rcx, r13 ; mov rdx, r12 ; mov rsi, rbx ; mov rdi, rbp ; call qword ptr [rsp + 0x20]
read: r12 r13 r14 rbp rbx rsp 
write: r8 rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000e9ef1: RLP; cmp eax, -2 ; mov r15d, eax ; jne 0xe9f08
read: eax rflags 
write: r15d rflags 
--------------------------------------------------------------------------------
000e9f29: RLP; test eax, eax ; je 0xe9ecc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000e9fe0: RLP; test eax, eax ; jne 0xea02c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ea0a0: RLP; test rax, rax ; je 0xea0a8
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ea12d: RLP; lea r15, [rax + 1] ; jmp 0xea263
read: 
write: r15 
--------------------------------------------------------------------------------
000ea37e: RLP; lea r15, [rax + 1] ; jmp 0xea08f
read: 
write: r15 
--------------------------------------------------------------------------------
000ea3dd: RLP; cmp byte ptr [r14], 0 ; mov rdi, rax ; mov eax, 0x22 ; je 0xea3fc
read: rax rflags 
write: eax rdi rflags 
--------------------------------------------------------------------------------
000ea421: RLP; test eax, eax ; jle 0xea43c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ea4bb: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rbp + 0x88] ; mov qword ptr [rdx + 8], r8 ; add dword ptr [rdx + 4], 1 ; mov rax, qword ptr [rip + 0x27e98c] ; add rax, qword ptr fs:[0] ; lea rbx, [r12 + r14 - 1] ; mov r13d, r14d ; mov qword ptr [rsp + 8], rax ; nop word ptr [rax + rax] ; mov byte ptr [rbx], 0xff ; mov rdx, rbp ; mov esi, r13d ; mov rdi, r12 ; call 0x76abc
read: r12 r13d r14d r8 rax rbp rip rsp 
write: esi r13d rax rbx rdi rdx rflags rsp 
--------------------------------------------------------------------------------
000ea509: RLP; test rax, rax ; je 0xea5d4
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ea572: RLP; test eax, eax ; je 0xea4f4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ea5bf: RLP; add rsp, 0x80 ; mov rax, qword ptr [rsp] ; mov qword ptr [r15], rax ; xor eax, eax ; jmp 0xea63d
read: eax rax rsp 
write: eax rax rflags rsp 
--------------------------------------------------------------------------------
000ea61c: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x27e83a] ; mov qword ptr [r15], 0 ; mov dword ptr fs:[rax], 0x22 ; mov eax, 0x22 ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: eax r12 r13 r14 r15 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000ea692: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x27e7c4] ; mov qword ptr [r15], 0 ; mov dword ptr fs:[rax], 2 ; mov eax, 2 ; jmp 0xea63d
read: rsp 
write: eax rax rflags rsp 
--------------------------------------------------------------------------------
000ea6e2: RLP; test rax, rax ; mov rbx, rax ; je 0xea72e
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000ea717: RLP; test rax, rax ; mov qword ptr [rbx + 0x30], rax ; je 0xea73a
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ea748: RLP; jmp 0xea72e
read: 
write: 
--------------------------------------------------------------------------------
000ea7b5: RLP; add r12, 1 ; cmp r12, r13 ; je 0xea7ee
read: r12 r13 rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
000ea813: RLP; test r12, r12 ; mov r15, rax ; jns 0xea826
read: r12 rax rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
000ea901: RLP; mov r15, rax ; test r15, r15 ; jne 0xea82f
read: r15 rax rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
000ea969: RLP; mov r8, qword ptr [rsp + 8] ; sub r8, qword ptr [rbp + 0x28] ; mov r9, r15 ; add r9, qword ptr [rbp + 0x38] ; mov rcx, qword ptr [rsp] ; mov qword ptr [rbp + 0x28], 0 ; add r8, rbx ; add rbx, rcx ; sub r9, r8 ; mov qword ptr [rbp + 0x38], r9 ; jmp 0xea851
read: r15 r8 r9 rbx rcx 
write: r8 r9 rbx rcx rflags 
--------------------------------------------------------------------------------
000ea9b0: RLP; add qword ptr [rbp + 0x38], r13 ; mov rdi, rbx ; mov rdx, r13 ; mov esi, 0x20 ; mov rbx, r12 ; mov r12, r13 ; call 0x891bc
read: r12 r13 rbx rip rsp 
write: esi r12 rbx rdi rdx rflags rsp 
--------------------------------------------------------------------------------
000ea9ce: RLP; mov qword ptr [rbp + 0x28], r13 ; mov r14, qword ptr [rbp + 0x38] ; jmp 0xea7f9
read: r13 
write: r14 
--------------------------------------------------------------------------------
000eaa57: RLP; mov rax, qword ptr [rbp + 0x18] ; lea rdx, [r12 + 1] ; mov byte ptr [r12], 0xa ; lea r8, [r12 + rax + 1] ; mov r12, rbx ; add r13, r8 ; mov rax, r8 ; sub r13, rbx ; sub rax, rdx ; mov rbx, rdx ; mov rcx, qword ptr [rbp + 0x18] ; cmp rcx, rax ; jg 0xeabae
read: r13 r8 rax rbx rcx rdx rflags 
write: r12 r13 r8 rax rbx rcx rdx rflags 
--------------------------------------------------------------------------------
000eab10: RLP; jmp 0xea7b5
read: 
write: 
--------------------------------------------------------------------------------
000eabe1: RLP; mov r8, qword ptr [rsp] ; mov rax, r14 ; add r14, 1 ; cmp rax, qword ptr [rbp + 0x18] ; jge 0xeaaab
read: r14 rax rflags 
write: r14 r8 rax rflags 
--------------------------------------------------------------------------------
000eac5e: RLP; mov r8, qword ptr [rsp] ; jmp 0xeaab4
read: 
write: r8 
--------------------------------------------------------------------------------
000eac90: RLP; mov r15, qword ptr [rbp + 0x30] ; mov r8, qword ptr [rsp] ; sub rbx, r15 ; mov rax, r8 ; mov r12, r15 ; add r13, rbx ; sub rax, r15 ; mov rbx, r15 ; jmp 0xeaa7c
read: r13 r15 r8 rax rbx 
write: r12 r13 r15 r8 rax rbx rflags 
--------------------------------------------------------------------------------
000eacec: RLP; mov r8, qword ptr [rsp] ; jmp 0xeabe5
read: 
write: r8 
--------------------------------------------------------------------------------
000ead1d: RLP; mov rdx, qword ptr [rbx + 0x38] ; mov rdi, qword ptr [rbx + 0x30] ; cmp rdx, rdi ; jbe 0xead49
read: rdi rdx rflags 
write: rdi rdx rflags 
--------------------------------------------------------------------------------
000ead45: RLP; mov rdi, qword ptr [rbx + 0x30] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000ead52: RLP; mov rdi, rbx ; call 0x1f46c
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000ead5e: RLP; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
000eada5: RLP; mov rcx, qword ptr [rbx + 0x30] ; mov rdx, qword ptr [rbx + 0x38] ; lea rsi, [rip + 0x4bdaf] ; mov rdi, qword ptr [rbx] ; xor eax, eax ; sub rdx, rcx ; call 0x6bcbc
read: eax rcx rdx rip rsp 
write: eax rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000eadc5: RLP; mov rdi, qword ptr [rbx + 0x30] ; mov rsi, qword ptr [rbx + 0x40] ; mov qword ptr [rbx + 0x20], 0 ; sub rsi, rdi ; mov qword ptr [rbx + 0x38], rdi ; cmp rbp, rsi ; jbe 0xead89
read: rbp rdi rflags rsi 
write: rdi rflags rsi 
--------------------------------------------------------------------------------
000eae10: RLP; test rax, rax ; je 0xeade6
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000eaea3: RLP; test eax, eax ; lea r12, [rsp + 8] ; je 0xeaf0e
read: eax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
000eaef0: RLP; movsxd rdi, eax ; cmp rbx, rdi ; ja 0xeaf2c
read: eax rbx rdi rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
000eaf0a: RLP; test eax, eax ; jne 0xeaeac
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000eaf7a: RLP; mov edx, eax ; xor eax, eax ; test edx, edx ; je 0xeaf9c
read: eax edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
000eaf95: RLP; add qword ptr [rbx + 0x38], rbp ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
read: rbp rsp 
write: r12 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000eafc6: RLP; mov rbx, rax ; xor eax, eax ; test rbx, rbx ; je 0xeafed
read: eax rax rbx rflags 
write: eax rbx rflags 
--------------------------------------------------------------------------------
000eafe2: RLP; cmp rbx, rax ; setne al ; movzx eax, al ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
read: al eax rax rbx rflags rsp 
write: al eax r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000eb03a: RLP; test eax, eax ; je 0xeb04c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000eb083: RLP; mov rax, qword ptr [rbx + 8] ; mov qword ptr [rbx + 8], rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: rbp rsp 
write: rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000eb0c3: RLP; mov rax, qword ptr [rbx + 0x10] ; mov qword ptr [rbx + 0x10], rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: rbp rsp 
write: rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000eb103: RLP; mov rax, qword ptr [rbx + 0x18] ; mov qword ptr [rbx + 0x18], rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: rbp rsp 
write: rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000eb13b: RLP; xor eax, eax ; cmp qword ptr [rbx + 0x28], 0 ; cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
read: eax rax rflags rsp 
write: eax rax rbx rflags rsp 
--------------------------------------------------------------------------------
000eb224: RLP; test eax, eax ; mov r9, qword ptr [rsp + 8] ; sete r8b ; jmp 0xeb201
read: eax rflags 
write: r8b r9 rflags 
--------------------------------------------------------------------------------
000eb33c: RLP; test rbx, rbx ; jne 0xeb32c
read: rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
000eb355: RLP; mov rdi, qword ptr [rbp + 0x10] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000eb362: RLP; mov rdi, rbp ; call 0x1f46c
read: rbp rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000eb36e: RLP; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000eb593: RLP; mov r12d, eax ; mov rax, qword ptr [rbx + 0x28] ; lea rsi, [rip - 0x365] ; xor ecx, ecx ; mov rdi, rbx ; mov rdx, qword ptr [rax + 0x30] ; call 0xeb14c
read: eax ecx rbx rip rsp 
write: ecx r12d rax rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000eb5b3: RLP; mov rcx, qword ptr [rbp] ; mov rdx, qword ptr [rbx] ; mov r14d, eax ; mov eax, dword ptr [rbp + 8] ; mov r15d, dword ptr [rcx + 0x18] ; mov r13d, dword ptr [rdx + 0x18] ; and r15d, 8 ; and r13d, 8 ; test eax, eax ; je 0xeb603
read: eax r13d r15d rflags 
write: eax r13d r14d r15d rcx rdx rflags 
--------------------------------------------------------------------------------
000eb65e: RLP; test eax, eax ; setne r15b ; test r13d, r13d ; je 0xeb68b
read: eax r13d rflags 
write: r15b rflags 
--------------------------------------------------------------------------------
000eb685: RLP; test eax, eax ; setne r13b ; cmp r15d, r13d ; je 0xeb69b
read: eax r13d r15d rflags 
write: r13b rflags 
--------------------------------------------------------------------------------
000eb6c6: RLP; jmp 0xeb43c
read: 
write: 
--------------------------------------------------------------------------------
000eb789: RLP; test eax, eax ; je 0xeb767
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000eb7b9: RLP; mov esi, dword ptr [rsp + 0xc] ; jmp 0xeb747
read: 
write: esi 
--------------------------------------------------------------------------------
000eb7f8: RLP; mov rsi, rbp ; mov rdx, rax ; mov edi, r12d ; call qword ptr [rbx + 0x28]
read: r12d rax rbp rsp 
write: edi rdx rsi rsp 
--------------------------------------------------------------------------------
000eb808: RLP; mov rbp, rax ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; ret
read: rax rbp rsp 
write: r12 rax rbp rbx rsp 
--------------------------------------------------------------------------------
000eb849: RLP; mov rcx, qword ptr [rbp + 0x20] ; mov rdx, rbx ; mov esi, 0x2000003 ; mov rdi, rax ; mov r14, rax ; call 0xeb7cc
read: rax rbx rip rsp 
write: esi r14 rcx rdi rdx rsp 
--------------------------------------------------------------------------------
000eb864: RLP; test rax, rax ; mov rbx, rax ; je 0xeb95c
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000eb8b6: RLP; mov r13, qword ptr [rbp + 8] ; movsxd rdx, dword ptr [rip + 0x27d9f3] ; mov r12, qword ptr [r13 + 0x38] ; mov rax, r12 ; sub rax, qword ptr [r13 + 0x30] ; cmp rax, qword ptr [r13 + 0x20] ; ja 0xeb99c
read: r12 rax rflags 
write: r12 r13 rax rdx rflags 
--------------------------------------------------------------------------------
000eb8ed: RLP; test rax, rax ; mov r15, rax ; je 0xeb91d
read: rax rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
000eb911: RLP; add qword ptr [r13 + 0x38], r15 ; mov r13, qword ptr [rbp + 8] ; mov r12, qword ptr [r13 + 0x38] ; mov rax, r12 ; sub rax, qword ptr [r13 + 0x30] ; mov r15, r13 ; cmp rax, qword ptr [r13 + 0x20] ; ja 0xeb9fc
read: r12 r13 r15 rax rflags 
write: r12 r13 r15 rax rflags 
--------------------------------------------------------------------------------
000eb96d: RLP; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000eb98b: RLP; test eax, eax ; je 0xeb915
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000eb9ad: RLP; mov r15, qword ptr [rbp + 8] ; mov eax, dword ptr [rip + 0x27d8fd] ; mov rdx, qword ptr [rsp + 8] ; mov r12, qword ptr [r15 + 0x38] ; mov rcx, qword ptr [r15 + 0x20] ; mov dword ptr [rsp + 4], eax ; mov rsi, r12 ; sub rsi, qword ptr [r15 + 0x30] ; mov qword ptr [r13 + 8], rdx ; cmp rsi, rcx ; jbe 0xeba6f
read: eax r12 rcx rdx rflags rsi 
write: eax r12 r15 rcx rdx rflags rsi 
--------------------------------------------------------------------------------
000eb9e8: RLP; mov r13, qword ptr [rbp + 8] ; movsxd rdx, dword ptr [rsp + 4] ; mov r12, qword ptr [r13 + 0x38] ; jmp 0xeb8dd
read: 
write: r12 r13 rdx 
--------------------------------------------------------------------------------
000eba08: RLP; mov r15, qword ptr [rbp + 8] ; mov r12, qword ptr [r15 + 0x38] ; cmp qword ptr [r15 + 0x40], r12 ; mov qword ptr [r13 + 8], 0 ; ja 0xeb943
read: r12 rflags 
write: r12 r15 rflags 
--------------------------------------------------------------------------------
000eba33: RLP; test eax, eax ; je 0xeb951
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000eba5d: RLP; test eax, eax ; je 0xeb8a3
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ebb34: RLP; mov rbp, qword ptr [rbx + 8] ; mov rax, qword ptr [rbp + 0x38] ; sub rax, qword ptr [rbp + 0x30] ; mov rdi, rbp ; cmp rax, qword ptr [rbp + 0x20] ; ja 0xebbec
read: rax rbp rflags 
write: rax rbp rdi rflags 
--------------------------------------------------------------------------------
000ebb8b: RLP; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: rsp 
write: r12 r13 r14 rbp rbx rsp 
--------------------------------------------------------------------------------
000ebbdd: RLP; test eax, eax ; je 0xebb7b
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ebbf5: RLP; mov rdi, qword ptr [rbx + 8] ; jmp 0xebb4d
read: 
write: rdi 
--------------------------------------------------------------------------------
000ebc15: RLP; test eax, eax ; je 0xebad9
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ebc69: RLP; test rax, rax ; mov qword ptr [rsp + 8], rax ; mov rbx, qword ptr [r15 + 0x20] ; je 0xebf2e
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000ebc8c: RLP; test r12d, r12d ; jne 0xebf1c
read: r12d rflags 
write: rflags 
--------------------------------------------------------------------------------
000ebcd4: RLP; mov qword ptr [rsp + 0x18], rax ; mov rax, qword ptr [r15 + 0x28] ; mov edi, 0x2000001 ; mov rdx, qword ptr [rsp + 0x18] ; mov rsi, qword ptr [rsp + 8] ; call rax
read: rax rsp 
write: edi rax rdx rsi rsp 
--------------------------------------------------------------------------------
000ebcf2: RLP; mov rcx, rax ; test rcx, rcx ; je 0xec08c
read: rax rcx rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
000ebd58: RLP; test eax, eax ; mov rcx, qword ptr [rsp + 0x20] ; jne 0xebfec
read: eax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
000ebdbb: RLP; cmp byte ptr [rsp + 0x17], 0 ; je 0xebdd7
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000ebdd7: RLP; test r12d, r12d ; je 0xebea6
read: r12d rflags 
write: rflags 
--------------------------------------------------------------------------------
000ebdff: RLP; test rax, rax ; mov r15, rax ; je 0xebea6
read: rax rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
000ebe35: RLP; test rax, rax ; mov r14, rax ; je 0xebe6c
read: rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
000ebe5e: RLP; test eax, eax ; jne 0xec0f8
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ebe78: RLP; mov rax, qword ptr [rbp + 0x38] ; sub rax, qword ptr [rbp + 0x30] ; cmp rax, qword ptr [rbp + 0x20] ; ja 0xec114
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000ebefc: RLP; mov rdi, qword ptr [rbx] ; or r14d, eax ; test rdi, rdi ; jne 0xebecc
read: eax r14d rdi rflags 
write: r14d rdi rflags 
--------------------------------------------------------------------------------
000ebf4c: RLP; cmp r12d, 1 ; mov qword ptr [rsp + 0x18], rax ; mov byte ptr [rsp + 0x17], 0 ; sbb edi, edi ; mov rax, qword ptr [r15 + 0x28] ; mov byte ptr [rsp + 0x20], 0 ; add edi, 0x2000002 ; jmp 0xebce2
read: edi r12d rax rflags 
write: edi rax rflags 
--------------------------------------------------------------------------------
000ebf85: RLP; test rax, rax ; mov r14, rax ; mov rcx, qword ptr [rsp + 0x20] ; je 0xebd65
read: rax rflags 
write: r14 rcx rflags 
--------------------------------------------------------------------------------
000ebfb8: RLP; test eax, eax ; mov rcx, qword ptr [rsp + 0x20] ; je 0xebd65
read: eax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
000ec006: RLP; mov rax, r14 ; add rax, qword ptr [rbp + 0x38] ; mov rcx, qword ptr [rsp + 0x20] ; mov qword ptr [rbp + 0x38], rax ; sub rax, qword ptr [rbp + 0x30] ; cmp rax, qword ptr [rbp + 0x20] ; jbe 0xebd77
read: r14 rax rflags 
write: rax rcx rflags 
--------------------------------------------------------------------------------
000ec035: RLP; mov rcx, qword ptr [rsp + 0x20] ; jmp 0xebd77
read: 
write: rcx 
--------------------------------------------------------------------------------
000ec055: RLP; test rax, rax ; mov qword ptr [rsp + 8], rax ; mov byte ptr [rsp + 0x20], 1 ; setne byte ptr [rsp + 0x17] ; jmp 0xebcc4
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ec0b2: RLP; test eax, eax ; mov rcx, qword ptr [rsp + 0x28] ; je 0xebd1c
read: eax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
000ec0e2: RLP; test eax, eax ; mov rcx, qword ptr [rsp + 0x20] ; je 0xebda2
read: eax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
000ec10b: RLP; add qword ptr [rbp + 0x38], r14 ; jmp 0xebe6c
read: r14 
write: rflags 
--------------------------------------------------------------------------------
000ec120: RLP; jmp 0xebe8a
read: 
write: 
--------------------------------------------------------------------------------
000ec157: RLP; test eax, eax ; je 0xebea0
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ec179: RLP; test eax, eax ; je 0xebe29
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ec24a: RLP; mov rax, qword ptr [rbx + 0x38] ; mov rsi, qword ptr [rsp + 8] ; jmp 0xec1e9
read: 
write: rax rsi 
--------------------------------------------------------------------------------
000ec26d: RLP; test eax, eax ; je 0xec22d
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ec28d: RLP; test eax, eax ; je 0xec22d
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ec2ed: RLP; and ebx, 1 ; mov r13, rax ; jne 0xec35c
read: ebx rax rflags 
write: ebx r13 rflags 
--------------------------------------------------------------------------------
000ec301: RLP; lea rsi, [rax + 6] ; mov rdi, r12 ; call 0xec1cc
read: r12 rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
000ec311: RLP; mov edx, dword ptr [rbp + 8] ; lea rsi, [rip + 0x4a858] ; mov rcx, r13 ; mov rdi, r12 ; xor eax, eax ; call 0xeae2c
read: eax r12 r13 rip rsp 
write: eax edx rcx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000ec32c: RLP; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: eax rsp 
write: eax r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000ec377: RLP; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: eax rsp 
write: eax r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000ec3d3: RLP; mov rcx, r14 ; mov rdx, r12 ; mov esi, 0x2000006 ; mov rdi, rax ; mov qword ptr [rsp + 0x28], rax ; call 0xeb7cc
read: r12 r14 rax rip rsp 
write: esi rcx rdi rdx rsp 
--------------------------------------------------------------------------------
000ec3ef: RLP; test rax, rax ; mov qword ptr [rsp + 0x18], rax ; je 0xec5bc
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ec40e: RLP; cmp byte ptr [rax], 0 ; mov r12, rax ; jne 0xec51c
read: rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
000ec438: RLP; mov rdi, qword ptr [rbp + 0x38] ; mov rcx, r12 ; sub rcx, r14 ; lea rax, [rdi + rcx] ; cmp qword ptr [rbp + 0x40], rax ; jae 0xec46d
read: r12 r14 rax rcx rflags 
write: rax rcx rdi rflags 
--------------------------------------------------------------------------------
000ec460: RLP; test eax, eax ; mov rcx, qword ptr [rsp + 0x10] ; je 0xec48a
read: eax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
000ec481: RLP; mov rcx, qword ptr [rsp + 0x10] ; add qword ptr [rbp + 0x38], rcx ; mov rax, qword ptr [rsp + 0x18] ; cmp qword ptr [rsp + 0x28], rax ; je 0xec4a2
read: rax rcx rflags 
write: rax rcx rflags 
--------------------------------------------------------------------------------
000ec4a2: RLP; test rbx, rbx ; jne 0xec4cf
read: rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
000ec4c9: RLP; test eax, eax ; sete r15b ; mov rdi, qword ptr [rbx] ; test rdi, rdi ; jne 0xec4ac
read: eax rdi rflags 
write: r15b rdi rflags 
--------------------------------------------------------------------------------
000ec556: RLP; mov edx, dword ptr [rsp + 0xc] ; mov r12, rax ; add edx, 1 ; cmp edx, dword ptr [rsp + 0x10] ; jne 0xec53c
read: edx rax rflags 
write: edx r12 rflags 
--------------------------------------------------------------------------------
000ec667: RLP; add rax, 0x1f ; mov r15, qword ptr [r13] ; shl r14, 4 ; and rax, 0xfffffffffffffff0 ; sub rsp, rax ; lea r12, [rsp + 0xf] ; add r14, r15 ; and r12, 0xfffffffffffffff0 ; mov qword ptr [rbp - 0x38], r12 ; nop ; mov rax, qword ptr [r15 + 0x28] ; lea rsi, [rip - 0xbb] ; mov rdi, r15 ; mov rcx, rbx ; add r15, 0x30
read: r12 r14 r15 rax rbx rsp 
write: r12 r14 r15 rax rcx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000ec6ae: RLP; cmp r15, r14 ; jne 0xec68c
read: r14 r15 rflags 
write: rflags 
--------------------------------------------------------------------------------
000ec707: RLP; cmp rbx, r14 ; jne 0xec6e4
read: r14 rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
000ec7be: RLP; and r12d, 1 ; mov rcx, rax ; mov rdx, qword ptr [rbx] ; je 0xec80c
read: r12d rax rflags 
write: r12d rcx rdx rflags 
--------------------------------------------------------------------------------
000ec7e4: RLP; cmp rbx, r13 ; jne 0xec775
read: r13 rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
000ec822: RLP; jmp 0xec76c
read: 
write: 
--------------------------------------------------------------------------------
000ec858: RLP; jmp 0xec76c
read: 
write: 
--------------------------------------------------------------------------------
000ec881: RLP; jmp 0xec6c0
read: 
write: 
--------------------------------------------------------------------------------
000ec8ba: RLP; mov rsi, rbp ; mov rdx, rax ; mov rdi, rbx ; xor eax, eax ; call 0xeae2c
read: eax rax rbp rbx rip rsp 
write: eax rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000ec8ce: RLP; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000ec8f5: RLP; mov rcx, qword ptr [rsp + 8] ; mov rdx, rax ; mov rdi, rbx ; xor eax, eax ; mov rsi, rcx ; call 0xeae2c
read: eax rax rbx rcx rip rsp 
write: eax rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000ec90e: RLP; jmp 0xec8ce
read: 
write: 
--------------------------------------------------------------------------------
000ec94c: RLP; test rax, rax ; mov rbp, rax ; je 0xece77
read: rax rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
000ec9f4: RLP; lea edi, [r13 + 1] ; mov r12, rax ; mov qword ptr [rbp], rax ; call 0x1f3cc
read: rax rip rsp 
write: edi r12 rsp 
--------------------------------------------------------------------------------
000eca08: RLP; test r12, r12 ; mov qword ptr [rbp + 0x10], rax ; je 0xecf21
read: r12 rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ecb5b: RLP; mov rsi, rax ; sar r13, 5 ; test rax, rax ; je 0xecb9c
read: r13 rax rflags 
write: r13 rflags rsi 
--------------------------------------------------------------------------------
000ecba8: RLP; mov rdx, qword ptr [rbp + 0x18] ; mov r13, rax ; test rdx, rdx ; jne 0xecbbf
read: rax rdx rflags 
write: r13 rdx rflags 
--------------------------------------------------------------------------------
000ecc19: RLP; cmp qword ptr [r15], 0 ; jne 0xecb2c
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000ecc53: RLP; mov rdi, qword ptr [rbp + 0x10] ; mov qword ptr [rsp + 8], rax ; mov qword ptr [rsp + 0x10], rdi ; call 0x856dc
read: rax rdi rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000ecc6a: RLP; mov edi, eax ; mov r12, rdi ; mov qword ptr [rsp + 0x18], rdi ; mov rdi, qword ptr [r13 + 0x10] ; call 0x856dc
read: eax rdi rip rsp 
write: edi r12 rdi rsp 
--------------------------------------------------------------------------------
000ecc81: RLP; lea rdi, [r12 + rax + 1] ; call 0x1f3cc
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000ecc8f: RLP; test rax, rax ; mov r12, rax ; je 0xecf5f
read: rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
000ecce2: RLP; mov r8d, dword ptr [rsp + 0x34] ; mov rsi, qword ptr [rsp + 0x20] ; mov rdi, rax ; lea rdx, [r8 + r8*2] ; shl rdx, 4 ; call 0x8e3dc
read: rax rdx rip rsp 
write: r8d rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000ecd00: RLP; mov rdx, qword ptr [rsp + 0x18] ; mov rsi, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call 0x8e3dc
read: r12 rip rsp 
write: rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000ecd16: RLP; lea ecx, [r14 - 1] ; mov rdx, r12 ; mov rax, qword ptr [rsp + 8] ; sub rdx, qword ptr [rsp + 0x10] ; lea rdi, [rcx + rcx*2 + 3] ; shl rdi, 4 ; add rdi, rax ; nop word ptr [rax + rax] ; add qword ptr [rax + 0x10], rdx ; add rax, 0x30 ; cmp rax, rdi ; jne 0xecd3c
read: r12 rax rdi rdx rflags 
write: ecx rax rdi rdx rflags 
--------------------------------------------------------------------------------
000ece05: RLP; mov rdi, qword ptr [rbp + 0x10] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000ece12: RLP; mov rax, qword ptr [rsp + 8] ; mov qword ptr [rbp + 0x10], r12 ; mov qword ptr [rbp], rax ; mov eax, dword ptr [rsp + 0x30] ; mov dword ptr [rbp + 8], eax ; jmp 0xecc09
read: eax r12 rax 
write: eax rax 
--------------------------------------------------------------------------------
000ecff6: RLP; test eax, eax ; je 0xed014
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ed04e: RLP; test rax, rax ; setne bpl ; test rbx, rbx ; je 0xed08d
read: rax rbx rflags 
write: bpl rflags 
--------------------------------------------------------------------------------
000ed081: RLP; mov rdx, qword ptr [rbx - 0x20] ; add rbp, rax ; test rdx, rdx ; jne 0xed06c
read: rax rbp rdx rflags 
write: rbp rdx rflags 
--------------------------------------------------------------------------------
000ed14b: RLP; test rbx, rbx ; je 0xed25c
read: rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
000ed16d: RLP; test r12, r12 ; je 0xed1e2
read: r12 rflags 
write: rflags 
--------------------------------------------------------------------------------
000ed1b2: RLP; test eax, eax ; js 0xed2bc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ed1d4: RLP; mov rdi, qword ptr [rsp + 8] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000ed1e2: RLP; test r13d, r13d ; jne 0xed26c
read: r13d rflags 
write: rflags 
--------------------------------------------------------------------------------
000ed206: RLP; mov rdi, rbp ; call 0x6a04c
read: rbp rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000ed212: RLP; test r14d, r14d ; je 0xed22a
read: r14d rflags 
write: rflags 
--------------------------------------------------------------------------------
000ed282: RLP; lea rsi, [rip + 0x4997d] ; mov rdx, rax ; mov rdi, rbp ; xor eax, eax ; call 0x6bcbc
read: eax rax rbp rip rsp 
write: eax rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000ed29a: RLP; jmp 0xed1eb
read: 
write: 
--------------------------------------------------------------------------------
000ed2e5: RLP; jmp 0xed206
read: 
write: 
--------------------------------------------------------------------------------
000ed337: RLP; lea rdi, [rip + 0x498a2] ; call 0x3819c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000ed347: RLP; test rax, rax ; je 0xed524
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ed4b4: RLP; test eax, eax ; jne 0xed454
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ed503: RLP; mov r9, r15 ; mov r8d, ebx ; jmp 0xedacc
read: ebx r15 
write: r8d r9 
--------------------------------------------------------------------------------
000ed53f: RLP; test rax, rax ; mov r13, rax ; je 0xee6c6
read: rax rflags 
write: r13 rflags 
--------------------------------------------------------------------------------
000ed7f3: RLP; test r14, r14 ; mov rsi, qword ptr [r12] ; je 0xee49b
read: r14 rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
000ed815: RLP; mov rdi, rax ; mov r13, rax ; call 0x856dc
read: rax rip rsp 
write: r13 rdi rsp 
--------------------------------------------------------------------------------
000ed824: RLP; test rax, rax ; mov r8, rax ; je 0xed7c4
read: rax rflags 
write: r8 rflags 
--------------------------------------------------------------------------------
000ed850: RLP; test eax, eax ; mov r8, qword ptr [rbp - 0xb0] ; je 0xed7c4
read: eax rflags 
write: r8 rflags 
--------------------------------------------------------------------------------
000ed87d: RLP; mov r8, qword ptr [rbp - 0xb0] ; add qword ptr [r15 + 0x38], r8 ; cmp r12, rbx ; jne 0xed7d1
read: r12 r8 rbx rflags 
write: r8 rflags 
--------------------------------------------------------------------------------
000ed973: RLP; mov rdx, qword ptr [r14] ; mov r12, rax ; mov rcx, r14 ; mov esi, 0x2000005 ; mov rdi, r12 ; call 0xeb7cc
read: r12 r14 rax rip rsp 
write: esi r12 rcx rdi rdx rsp 
--------------------------------------------------------------------------------
000ed98d: RLP; test rax, rax ; mov rbx, rax ; je 0xeda3c
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000ed9c7: RLP; test rax, rax ; mov r15, rax ; je 0xee740
read: rax rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
000ed9f0: RLP; test eax, eax ; je 0xee740
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000eda0b: RLP; mov rax, r15 ; add rax, qword ptr [r13 + 0x38] ; mov qword ptr [r13 + 0x38], rax ; cmp qword ptr [r13 + 0x40], rax ; jbe 0xee6fd
read: r15 rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000eda3c: RLP; mov ebx, 1 ; test byte ptr [rbp - 0x84], 0x20 ; jne 0xedcdd
read: rflags 
write: ebx rflags 
--------------------------------------------------------------------------------
000eda6b: RLP; mov rdi, qword ptr [rbp - 0x90] ; test rdi, rdi ; je 0xeda80
read: rdi rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
000eda80: RLP; mov rdi, r13 ; call 0xead0c
read: r13 rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000eda8c: RLP; lea rsp, [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rsp 
--------------------------------------------------------------------------------
000edac5: RLP; mov r8d, dword ptr [rbp - 0x78] ; mov r9, r15 ; mov rdi, qword ptr [rbp - 0x80] ; mov rcx, rax ; xor edx, edx ; xor esi, esi ; xor eax, eax ; call 0xed0ac
read: eax edx esi r15 rax rip rsp 
write: eax edx esi r8d r9 rcx rdi rflags rsp 
--------------------------------------------------------------------------------
000edae2: RLP; movzx esi, byte ptr [r13] ; mov r15, r13 ; cmp sil, 0x2c ; jne 0xed364
read: r13 rflags sil 
write: esi r15 rflags 
--------------------------------------------------------------------------------
000edb77: RLP; mov dword ptr [rbp - 0x98], eax ; jmp 0xedb88
read: eax 
write: 
--------------------------------------------------------------------------------
000edc58: RLP; mov rdx, r12 ; mov rsi, rax ; mov rdi, r13 ; xor eax, eax ; call 0xeae2c
read: eax r12 r13 rax rip rsp 
write: eax rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000edc6c: RLP; jmp 0xeda5b
read: 
write: 
--------------------------------------------------------------------------------
000edcc0: RLP; mov r8, r13 ; mov rcx, rax ; xor edx, edx ; xor esi, esi ; mov rdi, r14 ; xor eax, eax ; call 0xed0ac
read: eax edx esi r13 r14 rax rip rsp 
write: eax edx esi r8 rcx rdi rflags rsp 
--------------------------------------------------------------------------------
000edcd8: RLP; jmp 0xed524
read: 
write: 
--------------------------------------------------------------------------------
000edcfd: RLP; or ebx, eax ; jmp 0xeda4e
read: eax ebx 
write: ebx rflags 
--------------------------------------------------------------------------------
000edd16: RLP; mov rbx, qword ptr [rax] ; mov r12d, dword ptr [rax + 8] ; lea rdx, [rip + 0x48ee7] ; mov qword ptr [rbp - 0x90], rax ; mov esi, r12d ; mov rdi, rbx ; call 0xecf8c
read: r12d rax rbx rip rsp 
write: esi r12d rbx rdi rdx rsp 
--------------------------------------------------------------------------------
000edd3a: RLP; test rax, rax ; je 0xedd46
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000edd5c: RLP; test rax, rax ; je 0xedd68
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000edd8c: RLP; jmp 0xed563
read: 
write: 
--------------------------------------------------------------------------------
000eddb6: RLP; mov rdx, qword ptr [rbp - 0xa0] ; mov rsi, rax ; mov rdi, r13 ; xor eax, eax ; mov rcx, rdx ; call 0xeae2c
read: eax r13 rax rdx rip rsp 
write: eax rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000eddd1: RLP; jmp 0xed58c
read: 
write: 
--------------------------------------------------------------------------------
000eddf6: RLP; or ebx, eax ; jmp 0xed57f
read: eax ebx 
write: ebx rflags 
--------------------------------------------------------------------------------
000ede19: RLP; lea rcx, [rax + 0x1e] ; mov rdx, rax ; xor esi, esi ; and rcx, 0xfffffffffffffff0 ; sub rsp, rcx ; lea rdi, [rsp + 0xf] ; mov qword ptr [rbp - 0x78], rdi ; and qword ptr [rbp - 0x78], 0xfffffffffffffff0 ; mov rdi, qword ptr [rbp - 0x78] ; call 0x891bc
read: esi rax rcx rdi rip rsp 
write: esi rcx rdi rdx rflags rsp 
--------------------------------------------------------------------------------
000ede44: RLP; lea rax, [rbp - 0x60] ; mov qword ptr [rbp - 0x80], r14 ; mov r14, r13 ; mov qword ptr [rbp - 0x98], rax ; jmp 0xedf4f
read: r13 r14 rax 
write: r14 rax 
--------------------------------------------------------------------------------
000ede91: RLP; mov rcx, qword ptr [rbp - 0xa0] ; lea rsi, [rip + 0x48d78] ; mov rdx, rax ; mov rdi, r14 ; xor eax, eax ; call 0xeae2c
read: eax r14 rax rip rsp 
write: eax rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000edeb0: RLP; mov rax, qword ptr [r14 + 0x38] ; sub rax, qword ptr [r14 + 0x30] ; cmp rax, qword ptr [r14 + 0x20] ; movsxd r13, dword ptr [rip + 0x27b3f5] ; ja 0xedff3
read: rax rflags 
write: r13 rax rflags 
--------------------------------------------------------------------------------
000edf11: RLP; mov rdx, qword ptr [r14 + 0x38] ; mov r13d, eax ; mov rax, rdx ; sub rax, qword ptr [r14 + 0x30] ; cmp rax, qword ptr [r14 + 0x20] ; ja 0xedf94
read: eax rax rdx rflags 
write: r13d rax rdx rflags 
--------------------------------------------------------------------------------
000edf74: RLP; jmp 0xede5c
read: 
write: 
--------------------------------------------------------------------------------
000edf8a: RLP; test eax, eax ; je 0xedf44
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000edfa6: RLP; mov rdx, qword ptr [r14 + 0x38] ; mov qword ptr [r14 + 0x18], r15 ; mov rax, rdx ; sub rax, qword ptr [r14 + 0x30] ; cmp rax, qword ptr [r14 + 0x20] ; jbe 0xedf2f
read: r15 rax rdx rflags 
write: rax rdx rflags 
--------------------------------------------------------------------------------
000edfcb: RLP; mov rdx, qword ptr [r14 + 0x38] ; jmp 0xedf2f
read: 
write: rdx 
--------------------------------------------------------------------------------
000edfe7: RLP; or dword ptr [rbp - 0x84], 2 ; jmp 0xedef2
read: 
write: rflags 
--------------------------------------------------------------------------------
000edfff: RLP; jmp 0xedec9
read: 
write: 
--------------------------------------------------------------------------------
000ee01e: RLP; mov rdi, rax ; mov r13, rax ; call 0x856dc
read: rax rip rsp 
write: r13 rdi rsp 
--------------------------------------------------------------------------------
000ee02d: RLP; test rax, rax ; mov rcx, rax ; je 0xedef2
read: rax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
000ee05d: RLP; test eax, eax ; mov rcx, qword ptr [rbp - 0xa8] ; je 0xedef2
read: eax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
000ee086: RLP; mov rcx, qword ptr [rbp - 0xa8] ; add qword ptr [r14 + 0x38], rcx ; jmp 0xedef2
read: rcx 
write: rcx rflags 
--------------------------------------------------------------------------------
000ee13d: RLP; mov rbx, rax ; mov rax, qword ptr [rbp - 0x78] ; mov esi, dword ptr [r12 + 8] ; mov rcx, r14 ; mov rdi, rbx ; mov rdx, qword ptr [rax + 0x28] ; call 0xeb7cc
read: r14 rax rbx rip rsp 
write: esi rax rbx rcx rdi rdx rsp 
--------------------------------------------------------------------------------
000ee15c: RLP; test rax, rax ; mov r12, rax ; je 0xee225
read: rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
000ee1d4: RLP; test rax, rax ; mov r13, rax ; je 0xee214
read: rax rflags 
write: r13 rflags 
--------------------------------------------------------------------------------
000ee1f9: RLP; test eax, eax ; je 0xee214
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ee210: RLP; add qword ptr [r15 + 0x38], r13 ; cmp rbx, r12 ; je 0xee225
read: r12 r13 rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
000ee225: RLP; mov rax, qword ptr [r15 + 0x38] ; mov rdx, rax ; sub rdx, qword ptr [r15 + 0x30] ; cmp rdx, qword ptr [r15 + 0x20] ; ja 0xee4dd
read: rax rdx rflags 
write: rax rdx rflags 
--------------------------------------------------------------------------------
000ee2e2: RLP; mov rdx, qword ptr [r13] ; lea rsi, [rip + 0x48949] ; xor eax, eax ; mov rdi, r15 ; call 0xeae2c
read: eax r15 rip rsp 
write: eax rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000ee2fb: RLP; test r14, r14 ; je 0xee4a2
read: r14 rflags 
write: rflags 
--------------------------------------------------------------------------------
000ee331: RLP; jmp 0xee2b4
read: 
write: 
--------------------------------------------------------------------------------
000ee346: RLP; mov rax, qword ptr [r15 + 0x38] ; cmp rax, qword ptr [r15 + 0x40] ; jae 0xee531
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000ee3ee: RLP; jmp 0xee105
read: 
write: 
--------------------------------------------------------------------------------
000ee406: RLP; mov eax, dword ptr [r12 + 0x18] ; mov r11, qword ptr [rbp - 0x98] ; mov esi, eax ; and esi, 8 ; jmp 0xed6d9
read: eax esi 
write: eax esi r11 rflags 
--------------------------------------------------------------------------------
000ee428: RLP; mov rax, qword ptr [r15 + 0x38] ; sub rax, qword ptr [r15 + 0x30] ; cmp rax, qword ptr [r15 + 0x20] ; mov qword ptr [r15 + 8], rbx ; jbe 0xed911
read: rax rbx rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000ee44a: RLP; jmp 0xed911
read: 
write: 
--------------------------------------------------------------------------------
000ee45b: RLP; nop ; jmp 0xed8aa
read: 
write: 
--------------------------------------------------------------------------------
000ee474: RLP; mov rcx, qword ptr [r15 + 0x38] ; mov r8, qword ptr [r15 + 0x20] ; sub rcx, qword ptr [r15 + 0x30] ; mov r11, qword ptr [rbp - 0x98] ; jmp 0xed62c
read: rcx 
write: r11 r8 rcx rflags 
--------------------------------------------------------------------------------
000ee4b6: RLP; jmp 0xed795
read: 
write: 
--------------------------------------------------------------------------------
000ee4cc: RLP; test eax, eax ; je 0xee257
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ee4e9: RLP; mov rax, qword ptr [r15 + 0x38] ; jmp 0xee23a
read: 
write: rax 
--------------------------------------------------------------------------------
000ee4fe: RLP; jmp 0xee27d
read: 
write: 
--------------------------------------------------------------------------------
000ee51a: RLP; test eax, eax ; mov edx, dword ptr [rbp - 0x88] ; je 0xee37c
read: eax rflags 
write: edx rflags 
--------------------------------------------------------------------------------
000ee542: RLP; test eax, eax ; je 0xee35f
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ee57a: RLP; test eax, eax ; je 0xee1c8
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ee5b8: RLP; xor edx, edx ; cmp qword ptr [r15 + 0x28], 0 ; mov rcx, qword ptr [r15 + 0x38] ; cmovns rdx, qword ptr [r15 + 0x28] ; sub rcx, qword ptr [r15 + 0x30] ; cmp rcx, qword ptr [r15 + 0x20] ; mov r13d, dword ptr [rip + 0x27acd9] ; movsxd rax, r13d ; jbe 0xee199
read: edx r13d rcx rdx rflags 
write: edx r13d rax rcx rdx rflags 
--------------------------------------------------------------------------------
000ee5f9: RLP; mov rcx, qword ptr [r15 + 0x38] ; sub rcx, qword ptr [r15 + 0x30] ; cmp rcx, qword ptr [r15 + 0x20] ; mov rax, qword ptr [rbp - 0xb0] ; mov r13d, dword ptr [rip + 0x27ac9d] ; mov edx, dword ptr [rbp - 0x98] ; mov qword ptr [r15 + 8], rax ; jbe 0xee772
read: rax rcx rflags 
write: edx r13d rax rcx rflags 
--------------------------------------------------------------------------------
000ee62f: RLP; mov esi, dword ptr [rip + 0x27ac7b] ; movsxd rax, r13d ; mov edx, dword ptr [rbp - 0x98] ; jmp 0xee1a0
read: r13d 
write: edx esi rax 
--------------------------------------------------------------------------------
000ee657: RLP; jmp 0xee1c8
read: 
write: 
--------------------------------------------------------------------------------
000ee66d: RLP; test eax, eax ; je 0xee1c8
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ee68f: RLP; test eax, eax ; je 0xedc35
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ee6ba: RLP; jmp 0xee257
read: 
write: 
--------------------------------------------------------------------------------
000ee6d6: RLP; jmp 0xeda8c
read: 
write: 
--------------------------------------------------------------------------------
000ee6ec: RLP; test eax, eax ; je 0xee0c0
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ee70e: RLP; test eax, eax ; je 0xeda2b
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ee736: RLP; xor edx, edx ; mov r12, rax ; jmp 0xed979
read: edx rax 
write: edx r12 rflags 
--------------------------------------------------------------------------------
000ee75a: RLP; test eax, eax ; je 0xed9bb
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ee7a7: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000ee7ee: RLP; test byte ptr [rbx + 0x1c], 0x20 ; jne 0xee804
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000ee841: RLP; jmp 0xee7f4
read: 
write: 
--------------------------------------------------------------------------------
000ee8df: RLP; lea rax, [rsp + 0x100] ; mov rsi, qword ptr [rsp + 8] ; lea rdx, [rsp + 0x18] ; lea rdi, [rsp + 0x10] ; mov dword ptr [rsp + 0x18], 0x10 ; mov dword ptr [rsp + 0x1c], 0x30 ; mov qword ptr [rsp + 0x20], rax ; lea rax, [rsp + 0x30] ; mov qword ptr [rsp + 0x28], rax ; call 0x7511c
read: rax rip rsp 
write: rax rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000ee91e: RLP; test eax, eax ; js 0xee984
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ee949: RLP; mov rdi, qword ptr [rsp + 0x10] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000ee957: RLP; mov rdi, rbx ; mov edx, 0x104 ; mov rsi, rbp ; call 0xee7ac
read: rbp rbx rip rsp 
write: edx rdi rsi rsp 
--------------------------------------------------------------------------------
000ee96b: RLP; mov rdi, rbp ; call 0x6a04c
read: rbp rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000ee977: RLP; add rsp, 0xe8 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000eea4c: RLP; add qword ptr [rbx + 0x18], 1 ; mov rdi, qword ptr [rbp] ; test rdi, rdi ; jne 0xeea3c
read: rdi rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
000eeaae: RLP; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
read: eax rsp 
write: eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000eead7: RLP; test rax, rax ; mov qword ptr [rbx + 0x40], rax ; je 0xeeb9c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000eeb37: RLP; mov dword ptr [rip + 0x27dd03], eax ; jmp 0xeeb52
read: eax 
write: 
--------------------------------------------------------------------------------
000eeb52: RLP; mov eax, dword ptr [rip + 0x27dce8] ; lea edx, [rax - 1] ; test eax, eax ; mov dword ptr [rip + 0x27dcdd], edx ; jg 0xeeb44
read: eax edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
000eeb91: RLP; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
read: eax rsp 
write: eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000eecb8: RLP; test eax, eax ; je 0xeed6c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000eeea7: RLP; mov rdi, qword ptr [rbp] ; test rdi, rdi ; jne 0xeee8c
read: rdi rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
000eeefc: RLP; test byte ptr [rbx + 0x1c], 0x20 ; je 0xeef6b
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000eef31: RLP; jmp 0xeeefc
read: 
write: 
--------------------------------------------------------------------------------
000eef58: RLP; mov rdi, rbx ; mov rsi, rax ; xor eax, eax ; call 0xee84c
read: eax rax rbx rip rsp 
write: eax rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000eef69: RLP; jmp 0xeeefc
read: 
write: 
--------------------------------------------------------------------------------
000ef013: RLP; mov rax, qword ptr [rbp - 0x140] ; mov r14, qword ptr [rbp - 0x138] ; lea rbx, [rax + 1] ; mov rax, qword ptr [rbp - 0x148] ; lea rsi, [rbx + rbx*8] ; lea rcx, [rsi + rax*4 + 4] ; mov rax, qword ptr [rbp - 0x150] ; add rcx, r14 ; shl rcx, 3 ; lea rdi, [rcx + rax + 1] ; mov qword ptr [rbp - 0x170], rsi ; mov qword ptr [rbp - 0x158], rcx ; mov r15d, 0xc ; call 0x1f3cc
read: r14 rcx rip rsi rsp 
write: r14 r15d rax rbx rcx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000ef065: RLP; test rax, rax ; mov qword ptr [rbp - 0x40], rax ; je 0xef424
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ef132: RLP; mov r9, qword ptr [rbp - 0x170] ; lea rax, [rbp - 0x110] ; test r12b, 8 ; mov qword ptr [rbp - 0x128], rbx ; mov qword ptr [rbp - 0x118], r15 ; mov qword ptr [rbp - 0x158], rax ; mov qword ptr [rbp - 0x130], rax ; mov qword ptr [rbp - 0x120], r9 ; je 0xef45c
read: r12b r15 r9 rax rbx rflags 
write: r9 rax rflags 
--------------------------------------------------------------------------------
000ef1ba: RLP; mov r8, qword ptr [rbp - 0x110] ; mov r13, qword ptr [rbp - 0xc0] ; mov rsi, rax ; mov qword ptr [rbp - 0xb8], rax ; mov rbx, qword ptr [rbp - 0x158] ; xor eax, eax ; mov ecx, 0xc ; cmp rsi, r13 ; mov dword ptr [rbp - 0xa8], 1 ; lea rdx, [rbx + 0x70] ; mov rdi, rdx ; rep stosq qword ptr [rdi], rax ; mov eax, dword ptr [rbp - 0x164] ; mov qword ptr [rbp - 0xa0], r8 ; mov dword ptr [rbp - 0x84], r12d
read: eax r12d r13 r8 rax rcx rdi rdx rflags rsi 
write: eax ecx r13 r8 rbx rcx rdi rdx rflags rsi 
--------------------------------------------------------------------------------
000ef31c: RLP; mov ebx, eax ; mov r14d, dword ptr [rbp - 0xf8] ; cmp ebx, -1 ; mov dword ptr [rbp - 0x88], r14d ; je 0xef674
read: eax ebx r14d rflags 
write: ebx r14d rflags 
--------------------------------------------------------------------------------
000ef369: RLP; test rax, rax ; je 0xefc6c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ef3dc: RLP; mov r15d, eax ; mov rax, qword ptr [rbp - 0x68] ; mov qword ptr [r14 + 0x40], rax ; cmp r15d, 7 ; je 0xef876
read: eax r15d rax rflags 
write: r15d rax rflags 
--------------------------------------------------------------------------------
000ef58b: RLP; mov r15d, eax ; mov rax, qword ptr [rbp - 0x68] ; mov qword ptr [r13 + 0x40], rax ; add r13, 0x48 ; cmp r13, qword ptr [rbp - 0xb8] ; jae 0xef40c
read: eax r13 rax rflags 
write: r13 r15d rax rflags 
--------------------------------------------------------------------------------
000ef758: RLP; mov r15d, eax ; mov rax, qword ptr [rbp - 0x68] ; mov rdx, qword ptr [rbp - 0xc0] ; mov qword ptr [r12 + 0x40], rax ; sub r12, 0x48 ; mov rax, rdx ; cmp r12, rdx ; jae 0xef70c
read: eax r12 rax rdx rflags 
write: r12 r15d rax rdx rflags 
--------------------------------------------------------------------------------
000ef7d8: RLP; mov rax, qword ptr [rbp - 0x68] ; mov qword ptr [r12 + 0x40], rax ; sub r12, 0x48 ; cmp r12, qword ptr [rbp - 0xc0] ; jae 0xef79c
read: r12 rax rflags 
write: r12 rax rflags 
--------------------------------------------------------------------------------
000ef808: RLP; jmp 0xef424
read: 
write: 
--------------------------------------------------------------------------------
000ef866: RLP; mov r15d, eax ; mov rax, qword ptr [rbp - 0x68] ; mov qword ptr [r14 + 0x40], rax ; jmp 0xef3e7
read: eax rax 
write: r15d rax 
--------------------------------------------------------------------------------
000ef8ce: RLP; mov rsi, qword ptr [r12] ; mov rcx, qword ptr [rbp - 0x158] ; lea rdx, [rip + 0x46756] ; test rsi, rsi ; lea rdi, [rcx + 0x70] ; mov rcx, rax ; cmovne rdx, rsi ; lea rsi, [rip + 0x47385] ; xor eax, eax ; call 0xee84c
read: eax rax rdx rflags rip rsi rsp 
write: eax rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000ef900: RLP; cmp ebx, 1 ; je 0xef6bd
read: ebx rflags 
write: rflags 
--------------------------------------------------------------------------------
000ef92c: RLP; mov r12, qword ptr [rbp - 0xc0] ; mov rcx, qword ptr [rbp - 0xb8] ; mov rax, qword ptr [rbp - 0x158] ; cmp r12, rcx ; lea r13, [rax + 0x70] ; jae 0xefdd0
read: r12 rcx rflags 
write: r12 r13 rax rcx rflags 
--------------------------------------------------------------------------------
000ef990: RLP; mov rax, qword ptr [rbp - 0x68] ; mov rcx, qword ptr [rbp - 0xb8] ; mov qword ptr [r12 + 0x40], rax ; add r12, 0x48 ; cmp r12, rcx ; jb 0xef954
read: r12 rax rcx rflags 
write: r12 rax rcx rflags 
--------------------------------------------------------------------------------
000ef9c5: RLP; mov ebx, eax ; jmp 0xef31e
read: eax 
write: ebx 
--------------------------------------------------------------------------------
000efa5a: RLP; mov r15d, eax ; mov rax, qword ptr [rbp - 0x68] ; cmp r15d, 7 ; mov qword ptr [rbx - 8], rax ; je 0xefdf2
read: eax r15d rax rflags 
write: r15d rax rflags 
--------------------------------------------------------------------------------
000efb5d: RLP; mov r15d, eax ; mov rax, qword ptr [rbp - 0x68] ; mov rcx, qword ptr [rbp - 0xb8] ; mov qword ptr [r13 + 0x40], rax ; add r13, 0x48 ; cmp r13, rcx ; jb 0xefb0c
read: eax r13 rax rcx rflags 
write: r13 r15d rax rcx rflags 
--------------------------------------------------------------------------------
000efbf8: RLP; mov r15d, eax ; mov rax, qword ptr [rbp - 0x68] ; mov qword ptr [r12 + 0x40], rax ; sub r12, 0x48 ; cmp r12, qword ptr [rbp - 0xc0] ; jae 0xefbac
read: eax r12 rax rflags 
write: r12 r15d rax rflags 
--------------------------------------------------------------------------------
000efc8c: RLP; mov rcx, qword ptr [rbp - 0x158] ; lea rsi, [rip + 0x46fd8] ; mov edx, ebx ; lea rdi, [rcx + 0x70] ; mov rcx, rax ; xor eax, eax ; call 0xee84c
read: eax ebx rax rip rsp 
write: eax edx rcx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000efcae: RLP; jmp 0xef900
read: 
write: 
--------------------------------------------------------------------------------
000efd14: RLP; lea rdx, [rax + 1] ; test rax, rax ; cmove rdx, r12 ; mov qword ptr [rbp - 0x60], rdx ; jmp 0xef286
read: r12 rax rdx rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
000efdb6: RLP; mov rdi, qword ptr [rbp - 0x58] ; mov rsi, rax ; mov rdx, r12 ; xor eax, eax ; call 0x5212c
read: eax r12 rax rip rsp 
write: eax rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000efdcb: RLP; jmp 0xef90f
read: 
write: 
--------------------------------------------------------------------------------
000efe35: RLP; cmp qword ptr [rbp - 0xb8], rbx ; mov r15d, eax ; mov rax, qword ptr [rbp - 0x68] ; mov qword ptr [rbx - 8], rax ; jbe 0xefe64
read: eax rax rbx rflags 
write: r15d rax rflags 
--------------------------------------------------------------------------------
000efeec: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000efff2: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f0032: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f0072: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f00b2: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f00f2: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f0132: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f0172: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f01b2: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f01f2: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f0232: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f0272: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f02b2: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f02f2: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f0332: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f0372: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f03b2: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f03f2: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f0432: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f0472: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f04b2: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f04f2: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f0562: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f05a2: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f05e2: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f0622: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f0662: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f06a2: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f06e2: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f0722: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f0762: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f0819: RLP; hlt ; nop ; nop dword ptr [rax - 0x56] ; test edi, 2 ; jne 0xf084f
read: edi rflags 
write: rflags 
--------------------------------------------------------------------------------
000f089a: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f08cd: RLP; lea rdx, [rip + 0x27dce8] ; xor eax, eax ; nop word ptr [rax + rax] ; mov rcx, qword ptr [rbx + rax*8] ; xor rcx, qword ptr fs:[0x30] ; rol rcx, 0x11 ; mov qword ptr [rdx + rax*8], rcx ; add rax, 1 ; cmp rax, 0x36 ; jne 0xf08dc
read: eax rax rcx rflags 
write: eax rax rcx rdx rflags 
--------------------------------------------------------------------------------
000f096d: RLP; add rsp, 0x80 ; lea rax, [rip + 0x27bf01] ; lea r9, [rax + 0x30] ; xor r8d, r8d ; jmp 0xf099e
read: r8d rsp 
write: r8d r9 rax rflags rsp 
--------------------------------------------------------------------------------
000f0a35: RLP; add rsp, 0x80 ; cmp r8, 1 ; sbb eax, eax ; add rsp, 0x10 ; pop rbx ; pop rbp ; and eax, 0xc ; pop r12 ; ret
read: eax r8 rflags rsp 
write: eax r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000f0a78: RLP; test rax, rax ; je 0xf0a9e
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f0b51: RLP; add rsp, 0x80 ; xor r8d, r8d ; jmp 0xf0b72
read: r8d rsp 
write: r8d rflags rsp 
--------------------------------------------------------------------------------
000f0bdc: RLP; add rsp, 0x80 ; test r8, r8 ; je 0xf0b0d
read: r8 rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f0ca1: RLP; cmp eax, -1 ; mov ebx, eax ; je 0xf0d9c
read: eax rflags 
write: ebx rflags 
--------------------------------------------------------------------------------
000f0cbf: RLP; test rax, rax ; mov r12, rax ; jle 0xf0d90
read: rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
000f0ce6: RLP; test rax, rax ; mov rdx, rax ; je 0xf0d90
read: rax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
000f0d9b: RLP; nop ; mov rax, qword ptr [rip + 0x27c3e1] ; add rsp, 0x1000 ; pop rbx ; pop rbp ; pop r12 ; ret
read: rsp 
write: r12 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000f0de8: RLP; jmp 0xf0d9c
read: 
write: 
--------------------------------------------------------------------------------
000f0e91: RLP; cmp rax, -0x1000 ; jbe 0xf0eaa
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f0f99: RLP; mov rcx, qword ptr [rsp + 0x18] ; mov r8d, eax ; mov rdx, qword ptr [rsp + 0x10] ; movsxd rsi, dword ptr [rsp + 0xc] ; mov rdi, rbx ; mov eax, 0xe6 ; mov r10, rcx ; syscall ; mov edi, r8d ; mov ebx, eax ; call 0xf081c
read: eax r8d rbx rcx rip rsp 
write: eax ebx edi r10 r8d rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000f0fc6: RLP; jmp 0xf0f6c
read: 
write: 
--------------------------------------------------------------------------------
000f100d: RLP; mov rdi, r12 ; mov qword ptr [r13], rax ; call qword ptr [rip + 0x27c182]
read: r12 rax rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000f101e: RLP; mov edx, dword ptr [rbx + 0x10] ; test edx, edx ; jle 0xf1036
read: edx rflags 
write: edx rflags 
--------------------------------------------------------------------------------
000f1099: RLP; test rax, rax ; mov qword ptr [rip + 0x27c0f1], rax ; je 0xf110e
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f10b8: RLP; mov rdi, qword ptr [rip + 0x27c0d5] ; lea rsi, [rip + 0x45c6b] ; mov qword ptr [rip + 0x27c0df], rax ; call 0x11c3dc
read: rax rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
000f10d6: RLP; test rax, rax ; mov qword ptr [rip + 0x27c0c4], rax ; je 0xf1114
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f10f9: RLP; lea rdx, [rip - 0x134] ; test rax, rax ; cmovne rdx, rax ; mov qword ptr [rip + 0x27c08e], rdx ; pop rbp ; ret
read: rax rdx rflags rsp 
write: rbp rdx rflags rsp 
--------------------------------------------------------------------------------
000f118a: RLP; mov eax, dword ptr [rbp - 0x20] ; cmp eax, 1 ; jle 0xf11ec
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000f11d4: RLP; mov rax, qword ptr [rip + 0x27bfd1] ; test rax, rax ; jne 0xf1175
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000f120d: RLP; or dword ptr [rip + 0x27bf78], 2 ; jmp 0xf1169
read: 
write: rflags 
--------------------------------------------------------------------------------
000f12ba: RLP; mov rdi, qword ptr [r14 + 0x10] ; mov rdx, rax ; test rdi, rdi ; je 0xf14cc
read: rax rdi rflags 
write: rdi rdx rflags 
--------------------------------------------------------------------------------
000f12d7: RLP; mov rdx, qword ptr [rbp - 0x58] ; lea rbx, [rbx + rdx + 0x2b] ; add r14, 0x20 ; add r15, 4 ; add rbx, rax ; mov rax, qword ptr [rbp - 0x38] ; mov rax, qword ptr [rax] ; mov qword ptr [r14 - 0x18], rax ; cmp r14, qword ptr [rbp - 0x48] ; je 0xf132d
read: r14 r15 rax rbx rflags 
write: r14 r15 rax rbx rdx rflags 
--------------------------------------------------------------------------------
000f1313: RLP; test eax, eax ; mov dword ptr [r12 + r15], eax ; jne 0xf12a4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f1349: RLP; test rax, rax ; mov qword ptr [rbp - 0x48], rax ; je 0xf145e
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f13e7: RLP; add eax, 1 ; cdqe ; add r12, rax ; add rbx, 4 ; add r13, 0x20 ; cmp rbx, qword ptr [rbp - 0x50] ; je 0xf144e
read: eax r12 r13 rax rbx rflags 
write: eax r12 r13 rax rbx rflags 
--------------------------------------------------------------------------------
000f1440: RLP; add eax, 1 ; cdqe ; add r12, rax ; cmp rbx, qword ptr [rbp - 0x50] ; jne 0xf13fd
read: eax r12 rax rbx rflags 
write: eax r12 rax rflags 
--------------------------------------------------------------------------------
000f14bd: RLP; add eax, 1 ; cdqe ; add r12, rax ; jmp 0xf13ef
read: eax r12 rax 
write: eax r12 rax rflags 
--------------------------------------------------------------------------------
000f1597: RLP; mov rdi, qword ptr [rsp + 0x90] ; mov qword ptr [rsp + 0xa8], rax ; test rdi, rdi ; je 0xf17c4
read: rax rdi rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
000f15ed: RLP; mov qword ptr [rsp + 0xc8], rax ; mov rax, qword ptr [rsp + 0x98] ; mov r8d, 6 ; mov qword ptr [rsp + 0x40], 5 ; mov qword ptr [rsp + 0x38], 4 ; mov edx, 3 ; mov rdi, qword ptr [rbx] ; mov rcx, rdx ; shl rcx, 4 ; cmp rdi, rax ; jb 0xf17a4
read: rax rcx rdi rdx rflags 
write: edx r8d rax rcx rdi rflags 
--------------------------------------------------------------------------------
000f1669: RLP; mov rdx, qword ptr [rsp + 0x38] ; mov rcx, qword ptr [rsp + 0x30] ; mov r8, qword ptr [rsp + 0x48] ; shl rdx, 4 ; sub rcx, rax ; mov qword ptr [rsp + rdx + 0xa0], rax ; mov rax, qword ptr [rsp + 0x40] ; mov qword ptr [rsp + rdx + 0xa8], rcx ; lea rdx, [rip + 0x43677] ; shl rax, 4 ; mov qword ptr [rsp + rax + 0xa0], rdx ; mov qword ptr [rsp + rax + 0xa8], 1 ; nop word ptr [rax + rax] ; mov rdi, qword ptr [rbx] ; mov rax, r8
read: r8 rax rcx rdx 
write: r8 rax rcx rdi rdx rflags 
--------------------------------------------------------------------------------
000f1700: RLP; mov rcx, r14 ; mov rsi, qword ptr [rsp + 0x18] ; mov edi, dword ptr [rsp + 0xc] ; mov qword ptr [rsp + rbp + 0xa0], rax ; sub rcx, rax ; lea rax, [rip + 0x45662] ; mov edx, r13d ; mov qword ptr [rsp + rbp + 0xa8], rcx ; mov qword ptr [rsp + r12 + 0xa8], 2 ; mov qword ptr [rsp + r12 + 0xa0], rax ; call 0xdc70c
read: r13d r14 rax rcx rip rsp 
write: edi edx rax rcx rflags rsi rsp 
--------------------------------------------------------------------------------
000f1746: RLP; cmp rbx, qword ptr [rsp + 0x10] ; je 0xf178c
read: rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
000f1765: RLP; test eax, eax ; jne 0xf156c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f1872: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f1d22: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f1d52: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f1df1: RLP; add rsp, 0xd8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f1e60: RLP; lea rax, [rip + 0x276ab5] ; lea rdx, [r12 - 1] ; mov byte ptr [rbx], 0 ; mov rcx, rbx ; mov rsi, rbx ; mov rdi, rsp ; mov qword ptr [rsp + 0xd8], rax ; mov rbp, rsp ; call 0x7aedc
read: rax rbx rip rsp 
write: rax rbp rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000f1e8c: RLP; test r15d, r15d ; jle 0xf1e96
read: r15d rflags 
write: rflags 
--------------------------------------------------------------------------------
000f1ea8: RLP; mov rdx, qword ptr [rsp + 0x28] ; mov byte ptr [rdx], 0 ; add rsp, 0xf8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rdx rflags rsp 
--------------------------------------------------------------------------------
000f1f4c: RLP; add rsp, 0xd8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f1fbd: RLP; lea rax, [rip + 0x276498] ; test r14d, r14d ; mov qword ptr [rsp + 0xd8], rax ; mov byte ptr [rbp], 0 ; jle 0xf1fda
read: r14d rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000f1fef: RLP; mov rdi, rbx ; mov rdx, r13 ; mov rsi, r12 ; call 0x4797c
read: r12 r13 rbx rip rsp 
write: rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000f2001: RLP; add rbx, 0xf0 ; cmp qword ptr [rsp + 0x38], rbx ; je 0xf2017
read: rbx rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000f2108: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rbx + 0x88] ; mov qword ptr [rdx + 8], r10 ; add dword ptr [rdx + 4], 1 ; test r12d, r12d ; jle 0xf212b
read: r10 r12d rflags rsp 
write: rdx rflags rsp 
--------------------------------------------------------------------------------
000f2167: RLP; test r12d, r12d ; mov edx, eax ; jle 0xf2176
read: eax r12d rflags 
write: edx rflags 
--------------------------------------------------------------------------------
000f21be: RLP; add rsp, 0x80 ; add rsp, 0xd0 ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
read: edx rsp 
write: eax r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000f2229: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
000f22ea: RLP; add rsp, 0x80 ; mov r8, qword ptr [rbx + 0x88] ; mov qword ptr [r8 + 8], rdx ; add dword ptr [r8 + 4], 1 ; test ebp, ebp ; jle 0xf2309
read: ebp rdx rflags rsp 
write: r8 rflags rsp 
--------------------------------------------------------------------------------
000f2344: RLP; test ebp, ebp ; mov esi, eax ; mov edx, dword ptr [rbx + 0x74] ; jle 0xf2353
read: eax ebp rflags 
write: edx esi rflags 
--------------------------------------------------------------------------------
000f239d: RLP; add rsp, 0x80 ; add rsp, 0xd8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
read: esi rsp 
write: eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000f2406: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
000f2491: RLP; add rsp, 0x80 ; mov r8, qword ptr [rbx + 0x88] ; mov rdi, qword ptr [rbp] ; mov qword ptr [r8 + 8], r13 ; add dword ptr [r8 + 4], 1 ; test r12d, r12d ; jle 0xf24b5
read: r12d r13 rflags rsp 
write: r8 rdi rflags rsp 
--------------------------------------------------------------------------------
000f24c1: RLP; test r12d, r12d ; mov edx, eax ; jle 0xf24d0
read: eax r12d rflags 
write: edx rflags 
--------------------------------------------------------------------------------
000f2518: RLP; add rsp, 0x80 ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: edx rsp 
write: eax r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000f258a: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
000f25fe: RLP; add rsp, 0x80 ; mov r8, qword ptr [rbx + 0x88] ; mov qword ptr [r8 + 8], r12 ; add dword ptr [r8 + 4], 1 ; test ebp, ebp ; jle 0xf261d
read: ebp r12 rflags rsp 
write: r8 rflags rsp 
--------------------------------------------------------------------------------
000f262c: RLP; test ebp, ebp ; mov esi, eax ; mov edx, dword ptr [rbx + 0x74] ; jle 0xf263b
read: eax ebp rflags 
write: edx esi rflags 
--------------------------------------------------------------------------------
000f2685: RLP; add rsp, 0x80 ; pop rbx ; pop rbp ; mov eax, esi ; pop r12 ; ret
read: esi rsp 
write: eax r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000f26e9: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
000f2774: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rbx + 0x88] ; mov rdi, qword ptr [rip + 0x277f8b] ; mov qword ptr [rdx + 8], r8 ; add dword ptr [rdx + 4], 1 ; mov rax, qword ptr [rdi + 8] ; cmp rax, qword ptr [rdi + 0x10] ; jae 0xf2884
read: r8 rax rflags rsp 
write: rax rdi rdx rflags rsp 
--------------------------------------------------------------------------------
000f27ec: RLP; mov rdx, qword ptr [rip + 0x277f21] ; add rax, 1 ; mov ecx, dword ptr [rdx] ; test cl, 0x20 ; jne 0xf289c
read: cl rax rflags 
write: ecx rax rdx rflags 
--------------------------------------------------------------------------------
000f285a: RLP; add rsp, 0x80 ; add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rbp rsp 
write: r12 r13 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000f288d: RLP; cmp eax, -1 ; jne 0xf27aa
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f28fa: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
000f296f: RLP; test rax, rax ; mov rbx, rax ; je 0xf2b04
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000f29fd: RLP; test rax, rax ; jle 0xf2acc
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f2a1e: RLP; mov r12, rax ; mov rax, qword ptr [rsp + 0x30] ; cmp rax, qword ptr [rsp + 0x20] ; je 0xf2acc
read: rax rflags 
write: r12 rax rflags 
--------------------------------------------------------------------------------
000f2a56: RLP; mov rdx, qword ptr [rsp + 0x38] ; cmp rdx, qword ptr [rsp + 0x30] ; je 0xf2acc
read: rdx rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
000f2ad8: RLP; mov rdi, qword ptr [rsp + 0x20] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000f2ae6: RLP; test rbp, rbp ; jne 0xf2b1c
read: rbp rflags 
write: rflags 
--------------------------------------------------------------------------------
000f2bbc: RLP; add rsp, 0x80 ; mov r8, qword ptr [rbx + 0x88] ; mov ecx, dword ptr [rbx] ; mov qword ptr [r8 + 8], r9 ; add dword ptr [r8 + 4], 1 ; movsxd rdx, edx ; mov r13d, ecx ; and ecx, 0xffffffdf ; sub rdx, 1 ; and r13d, 0x20 ; mov dword ptr [rbx], ecx ; cmp rdx, r12 ; mov r8d, 1 ; mov ecx, 0xa ; cmova rdx, r12
read: ecx edx r12 r13d r9 rdx rflags rsp 
write: ecx r13d r8 r8d rdx rflags rsp 
--------------------------------------------------------------------------------
000f2c09: RLP; test rax, rax ; mov edx, dword ptr [rbx] ; jne 0xf2c7c
read: rax rflags 
write: edx rflags 
--------------------------------------------------------------------------------
000f2c62: RLP; add rsp, 0x80 ; mov rax, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rbp rsp 
write: r12 r13 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000f2cfe: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
000f2d71: RLP; test rax, rax ; mov edx, dword ptr [rbx] ; jne 0xf2d94
read: rax rflags 
write: edx rflags 
--------------------------------------------------------------------------------
000f2e22: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f2e52: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f2e85: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f2ebd: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f2f22: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f2f4d: RLP; test rax, rax ; je 0xf2f5c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f2f92: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f2fc6: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f306f: RLP; add rsp, 0x80 ; mov rdx, qword ptr [r13 + 0x88] ; mov qword ptr [rdx + 8], r8 ; add dword ptr [rdx + 4], 1 ; mov rdx, rbx ; mov rsi, r9 ; mov rdi, r13 ; call 0x7994c
read: r13 r8 r9 rbx rip rsp 
write: rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000f3097: RLP; test dword ptr [r13], 0x8000 ; mov rdx, rax ; jne 0xf30ec
read: rax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
000f30e0: RLP; add rsp, 0x80 ; nop dword ptr [rax + rax] ; cmp rbx, rdx ; mov rax, r12 ; je 0xf30fc
read: r12 rbx rdx rflags rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000f318c: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
000f31e6: RLP; mov rdx, rax ; mov rax, r12 ; cmp rbx, rdx ; je 0xf31ca
read: r12 rax rbx rdx rflags 
write: rax rdx rflags 
--------------------------------------------------------------------------------
000f324d: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f32c6: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f32f6: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f3326: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f33a2: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f3592: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f35c2: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f365c: RLP; add rsp, 0xd8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f36d3: RLP; mov esi, 1 ; mov rdi, rbx ; call 0x73bdc
read: rbx rip rsp 
write: esi rdi rsp 
--------------------------------------------------------------------------------
000f36e4: RLP; test r15d, r15d ; mov dword ptr [r12], 0 ; jle 0xf36f9
read: r15d rflags 
write: rflags 
--------------------------------------------------------------------------------
000f370f: RLP; mov rdx, r14 ; mov rdi, rbx ; mov rsi, r13 ; call 0x525dc
read: r13 r14 rbx rip rsp 
write: rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000f3721: RLP; mov rdx, qword ptr [rsp + 0x1f0] ; add rbx, 0xf0 ; cmp qword ptr [rdx + 0x30], rbx ; je 0xf3752
read: rbx rflags 
write: rbx rdx rflags 
--------------------------------------------------------------------------------
000f3828: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rbx + 0x88] ; mov qword ptr [rdx + 8], r10 ; add dword ptr [rdx + 4], 1 ; test r12d, r12d ; jle 0xf384b
read: r10 r12d rflags rsp 
write: rdx rflags rsp 
--------------------------------------------------------------------------------
000f3887: RLP; test r12d, r12d ; mov edx, eax ; jle 0xf3896
read: eax r12d rflags 
write: edx rflags 
--------------------------------------------------------------------------------
000f38de: RLP; add rsp, 0x80 ; add rsp, 0xd0 ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
read: edx rsp 
write: eax r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000f3949: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
000f3a0a: RLP; add rsp, 0x80 ; mov r8, qword ptr [rbx + 0x88] ; mov qword ptr [r8 + 8], rdx ; add dword ptr [r8 + 4], 1 ; test ebp, ebp ; jle 0xf3a29
read: ebp rdx rflags rsp 
write: r8 rflags rsp 
--------------------------------------------------------------------------------
000f3a64: RLP; test ebp, ebp ; mov esi, eax ; mov edx, dword ptr [rbx + 0x74] ; jle 0xf3a73
read: eax ebp rflags 
write: edx esi rflags 
--------------------------------------------------------------------------------
000f3abd: RLP; add rsp, 0x80 ; add rsp, 0xd8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
read: esi rsp 
write: eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000f3b26: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
000f3bb1: RLP; add rsp, 0x80 ; mov r8, qword ptr [rbx + 0x88] ; mov rdi, qword ptr [rbp] ; mov qword ptr [r8 + 8], r13 ; add dword ptr [r8 + 4], 1 ; test r12d, r12d ; jle 0xf3bd5
read: r12d r13 rflags rsp 
write: r8 rdi rflags rsp 
--------------------------------------------------------------------------------
000f3be1: RLP; test r12d, r12d ; mov edx, eax ; jle 0xf3bf0
read: eax r12d rflags 
write: edx rflags 
--------------------------------------------------------------------------------
000f3c38: RLP; add rsp, 0x80 ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: edx rsp 
write: eax r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000f3caa: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
000f3d1e: RLP; add rsp, 0x80 ; mov r8, qword ptr [rbx + 0x88] ; mov qword ptr [r8 + 8], r12 ; add dword ptr [r8 + 4], 1 ; test ebp, ebp ; jle 0xf3d3d
read: ebp r12 rflags rsp 
write: r8 rflags rsp 
--------------------------------------------------------------------------------
000f3d4c: RLP; test ebp, ebp ; mov esi, eax ; mov edx, dword ptr [rbx + 0x74] ; jle 0xf3d5b
read: eax ebp rflags 
write: edx esi rflags 
--------------------------------------------------------------------------------
000f3da5: RLP; add rsp, 0x80 ; pop rbx ; pop rbp ; mov eax, esi ; pop r12 ; ret
read: esi rsp 
write: eax r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000f3e09: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
000f3e8c: RLP; add rsp, 0x80 ; mov r8, qword ptr [rbx + 0x88] ; mov ecx, dword ptr [rbx] ; mov qword ptr [r8 + 8], r9 ; add dword ptr [r8 + 4], 1 ; movsxd rdx, edx ; mov r13d, ecx ; and ecx, 0xffffffdf ; sub rdx, 1 ; and r13d, 0x20 ; mov dword ptr [rbx], ecx ; cmp rdx, r12 ; mov r8d, 1 ; mov ecx, 0xa ; cmova rdx, r12
read: ecx edx r12 r13d r9 rdx rflags rsp 
write: ecx r13d r8 r8d rdx rflags rsp 
--------------------------------------------------------------------------------
000f3ed9: RLP; test rax, rax ; mov edx, dword ptr [rbx] ; jne 0xf3f4c
read: rax rflags 
write: edx rflags 
--------------------------------------------------------------------------------
000f3f32: RLP; add rsp, 0x80 ; mov rax, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rbp rsp 
write: r12 r13 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000f3fd6: RLP; add rsp, 0x80 ; mov rdi, rsi ; call 0x2203c
read: rip rsi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
000f4041: RLP; test rax, rax ; mov edx, dword ptr [rbx] ; jne 0xf4064
read: rax rflags 
write: edx rflags 
--------------------------------------------------------------------------------
000f40b2: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f40ed: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f4122: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f4152: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f4182: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f41c6: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f41f2: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f4222: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f4252: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f4282: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f42ca: RLP; add rsp, 0x28 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f430a: RLP; add rsp, 0x28 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f43a6: RLP; add rsp, 0xd8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f43eb: RLP; test rax, rax ; mov rbx, rax ; je 0xf4554
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000f441e: RLP; lea rax, [rip + 0x274337] ; mov rcx, rbx ; mov edx, 0x64 ; mov rsi, rbx ; mov rdi, rsp ; mov rbp, rsp ; mov qword ptr [rsp + 0xd8], rax ; call 0x7aedc
read: rax rbx rip rsp 
write: edx rax rbp rcx rdi rsi rsp 
--------------------------------------------------------------------------------
000f4447: RLP; mov rax, qword ptr [rip + 0x2749e6] ; and dword ptr [rsp], 0xfffffffe ; test r15d, r15d ; mov qword ptr [rsp + 0xe0], rax ; mov rax, qword ptr [rip + 0x274b30] ; mov qword ptr [rsp + 0xe8], rax ; jle 0xf4473
read: r15d rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000f4485: RLP; test eax, eax ; mov ebp, eax ; js 0xf453c
read: eax rflags 
write: ebp rflags 
--------------------------------------------------------------------------------
000f44c1: RLP; mov rdx, rax ; mov qword ptr [r12], rax ; test rdx, rdx ; je 0xf452d
read: rax rdx rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
000f44f8: RLP; test rax, rax ; mov qword ptr [r12], rax ; je 0xf44b0
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f4518: RLP; mov rdi, r13 ; call 0x1f46c
read: r13 rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000f4524: RLP; mov rdx, qword ptr [r12] ; test rdx, rdx ; jne 0xf44cd
read: rdx rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
000f454a: RLP; mov eax, ebp ; jmp 0xf44d3
read: ebp 
write: eax 
--------------------------------------------------------------------------------
000f45f6: RLP; add rsp, 0xd8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f465b: RLP; lea rax, [rip + 0x27403a] ; mov rdi, rsp ; mov qword ptr [rsp + 0xd8], rax ; call 0x77edc
read: rax rip rsp 
write: rax rdi rsp 
--------------------------------------------------------------------------------
000f4676: RLP; mov esi, ebp ; mov rdi, rsp ; call 0x786dc
read: ebp rip rsp 
write: esi rdi rsp 
--------------------------------------------------------------------------------
000f4684: RLP; test rax, rax ; je 0xf46db
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f46b3: RLP; mov ebp, eax ; mov rax, qword ptr [rsp + 0xd8] ; xor esi, esi ; mov rdi, rbx ; call qword ptr [rax + 0x10]
read: eax esi rbx rsp 
write: ebp esi rax rdi rflags rsp 
--------------------------------------------------------------------------------
000f46c9: RLP; mov eax, ebp ; add rsp, 0x230 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: ebp rsp 
write: eax r12 r13 r14 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000f46e7: RLP; mov eax, 0xffffffff ; jmp 0xf46cb
read: 
write: eax 
--------------------------------------------------------------------------------
000f4749: RLP; lea rax, [rip + 0x271bec] ; mov rcx, qword ptr [rbx + 0x18] ; mov rsi, qword ptr [rbx + 0x10] ; mov qword ptr [rsp + 0xe8], rax ; mov rax, qword ptr [rbx + 0x20] ; mov rdi, rcx ; sub rdi, rsi ; sub rax, rcx ; add edi, eax ; jne 0xf482c
read: eax edi rax rcx rdi rflags rsi 
write: edi rax rcx rdi rflags rsi 
--------------------------------------------------------------------------------
000f47a3: RLP; mov rdx, qword ptr [rsp + 0x30] ; mov rax, qword ptr [rsp + 0x40] ; sub rax, rdx ; cmp r15, rax ; jne 0xf487a
read: r15 rax rdx rflags 
write: rax rdx rflags 
--------------------------------------------------------------------------------
000f4803: RLP; mov rdx, qword ptr [rsp + 0x38] ; sub rdx, qword ptr [rsp + 0x40] ; add qword ptr [rbx + 0x18], rdx ; add rsp, 0x108 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rdx rsp 
write: r12 r13 r14 r15 rbp rbx rdx rflags rsp 
--------------------------------------------------------------------------------
000f484d: RLP; mov rcx, qword ptr [rbx + 0x18] ; mov edx, dword ptr [rbx + 0x20] ; sub edx, ecx ; jmp 0xf4781
read: ecx edx 
write: edx rcx rflags 
--------------------------------------------------------------------------------
000f4946: RLP; add rsp, 0xd8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f4974: RLP; mov eax, dword ptr [rbx + 0x40] ; test eax, eax ; jne 0xf4994
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000f49a8: RLP; jmp 0xf497b
read: 
write: 
--------------------------------------------------------------------------------
000f4a31: RLP; nop ; mov rdi, r10 ; mov esi, ebx ; mov rbx, qword ptr [rdi] ; mov r12, qword ptr [rdi + 0x10] ; mov r13, qword ptr [rdi + 0x18] ; mov r14, qword ptr [rdi + 0x20] ; mov r15, qword ptr [rdi + 0x28] ; mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; jmp rdx
read: ebx esi r10 r8 r9 rdx 
write: eax esi r12 r13 r14 r15 rbp rbx rdi rsp 
--------------------------------------------------------------------------------
000f4a96: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f4ac6: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f4b3f: RLP; jmp 0xf4b14
read: 
write: 
--------------------------------------------------------------------------------
000f4b90: RLP; add rsp, 0x80 ; cmp qword ptr [rip + 0x27862d], 0 ; je 0xf4be4
read: rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f4bd4: RLP; add rsp, 0x80 ; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f4bf9: RLP; test rax, rax ; mov qword ptr [rip + 0x2785c9], rax ; je 0xf4c60
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f4c18: RLP; mov rdi, qword ptr [rip + 0x2785ad] ; lea rsi, [rip + 0x421ff] ; mov qword ptr [rip + 0x278597], rax ; call 0x11c3dc
read: rax rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
000f4c36: RLP; cmp qword ptr [rip + 0x278586], 0 ; mov qword ptr [rip + 0x278577], rax ; je 0xf4c50
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f4c60: RLP; mov qword ptr [rip + 0x278561], 1 ; jmp 0xf4ba1
read: 
write: 
--------------------------------------------------------------------------------
000f4cc6: RLP; movzx r8d, byte ptr [rax] ; cmp r8b, 0x2e ; je 0xf4d2c
read: r8b rflags 
write: r8d rflags 
--------------------------------------------------------------------------------
000f4d19: RLP; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rsp 
write: r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000f4d3e: RLP; mov rdx, qword ptr [rip + 0x278487] ; jmp 0xf4cfb
read: 
write: rdx 
--------------------------------------------------------------------------------
000f4d90: RLP; add rsp, 0x28 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f4db9: RLP; mov rcx, qword ptr [rip + 0x27840c] ; mov edx, dword ptr [rsp + 0x1c] ; mov rsi, qword ptr [rsp + 0x10] ; mov rdi, qword ptr [rsp + 8] ; jmp 0xf4d7b
read: 
write: edx rcx rdi rsi 
--------------------------------------------------------------------------------
000f4ef6: RLP; lea rdx, [rip + 0x41f42] ; mov dword ptr [rsp], ebx ; mov r9d, r14d ; lea rbp, [rax + 0x58] ; mov r8d, r13d ; mov ecx, r12d ; mov esi, 0x12 ; xor eax, eax ; mov rdi, rbp ; call 0x5227c
read: eax ebx r12d r13d r14d rbp rip rsp 
write: eax ecx esi r8d r9d rbp rdi rdx rflags rsp 
--------------------------------------------------------------------------------
000f4f23: RLP; add rsp, 0x10 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: rbp rsp 
write: r12 r13 r14 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000f516d: RLP; add rsp, 0x80 ; mov r8, qword ptr [rip + 0x275689] ; mov r9, qword ptr [rip + 0x27807a] ; test r8, r8 ; je 0xf52ac
read: r8 rflags rsp 
write: r8 r9 rflags rsp 
--------------------------------------------------------------------------------
000f51cd: RLP; cmp eax, 0x22 ; jne 0xf529c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f5209: RLP; test rax, rax ; jne 0xf519c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f521a: RLP; mov rax, qword ptr [rip + 0x273c43] ; mov qword ptr [rip + 0x2755d8], 0 ; mov dword ptr fs:[rax], 0xc ; mov qword ptr [rsp + 0x28], 0 ; cmp dword ptr [rip + 0x27952d], 0 ; je 0xf5250
read: rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000f526f: RLP; add rsp, 0x80 ; mov eax, dword ptr [rsp + 0x24] ; test eax, eax ; je 0xf5288
read: eax rflags rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
000f52c5: RLP; test rax, rax ; mov qword ptr [rip + 0x275535], rax ; mov r8, rax ; mov r9d, 0x400 ; jne 0xf518b
read: rax rflags 
write: r8 r9d rflags 
--------------------------------------------------------------------------------
000f53ee: RLP; test eax, eax ; jne 0xf54ec
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f5404: RLP; mov qword ptr [rsp + 8], rbx ; mov qword ptr [rsp], r15 ; mov rcx, r12 ; mov r9, qword ptr [rsp + 0x20] ; mov r8, qword ptr [rsp + 0x18] ; mov esi, ebp ; mov edx, dword ptr [rsp + 0x14] ; mov rdi, r14 ; call qword ptr [rsp + 0x40]
read: ebp r12 r14 r15 rbx rsp 
write: edx esi r8 r9 rcx rdi rsp 
--------------------------------------------------------------------------------
000f542b: RLP; cmp eax, -2 ; mov r13d, eax ; jne 0xf53cc
read: eax rflags 
write: r13d rflags 
--------------------------------------------------------------------------------
000f54df: RLP; test eax, eax ; jns 0xf5482
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f550d: RLP; mov rdi, r12 ; call 0x103e0c
read: r12 rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000f5519: RLP; xor eax, eax ; mov rbx, qword ptr [rsp + 0x38] ; mov dword ptr fs:[rbx], eax ; add rsp, 0x58 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: eax rsp 
write: eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000f5554: RLP; test eax, eax ; jne 0xf5325
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f55b0: RLP; test eax, eax ; mov r15d, eax ; je 0xf55de
read: eax rflags 
write: r15d rflags 
--------------------------------------------------------------------------------
000f55f4: RLP; cmp eax, -1 ; je 0xf56b4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f5672: RLP; jmp 0xf560a
read: 
write: 
--------------------------------------------------------------------------------
000f572f: RLP; add rsp, 0x80 ; cmp qword ptr [rip + 0x2750ce], 0 ; je 0xf58bc
read: rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f578a: RLP; test eax, eax ; jne 0xf584c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f57d6: RLP; cmp eax, 0x22 ; jne 0xf58ac
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f580c: RLP; test rax, rax ; jne 0xf57ac
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f5821: RLP; mov rax, qword ptr [rip + 0x27363c] ; mov qword ptr [rip + 0x274fd9], 0 ; mov dword ptr fs:[rax], 0xc ; mov qword ptr [rsp + 0x28], 0 ; nop word ptr [rax + rax] ; cmp dword ptr [rip + 0x278f1d], 0 ; je 0xf5860
read: rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000f587f: RLP; add rsp, 0x80 ; mov eax, dword ptr [rsp + 0x24] ; test eax, eax ; je 0xf5898
read: eax rflags rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
000f58d5: RLP; test rax, rax ; mov qword ptr [rip + 0x274f2d], rax ; je 0xf583a
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f5943: RLP; add rsp, 0x80 ; cmp qword ptr [rip + 0x274ec2], 0 ; je 0xf5acc
read: rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f599a: RLP; test eax, eax ; jne 0xf5a5c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f59e9: RLP; cmp eax, 0x22 ; jne 0xf5abc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f5a1f: RLP; test rax, rax ; jne 0xf59bc
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f5a34: RLP; mov rax, qword ptr [rip + 0x273429] ; mov qword ptr [rip + 0x274dce], 0 ; mov dword ptr fs:[rax], 0xc ; mov qword ptr [rsp + 0x28], 0 ; nop word ptr [rax + rax] ; cmp dword ptr [rip + 0x278d0d], 0 ; je 0xf5a70
read: rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000f5a8f: RLP; add rsp, 0x80 ; mov eax, dword ptr [rsp + 0x24] ; test eax, eax ; je 0xf5aa8
read: eax rflags rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
000f5ae5: RLP; test rax, rax ; mov qword ptr [rip + 0x274d25], rax ; je 0xf5a4d
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f5b59: RLP; cmp eax, -1 ; je 0xf5d14
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f5cab: RLP; test eax, eax ; jne 0xf5d84
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f5cc1: RLP; mov r8, r14 ; mov qword ptr [rsp], rbx ; mov r9, r15 ; mov rcx, qword ptr [rsp + 0x38] ; mov rdx, rbp ; mov esi, r13d ; mov rdi, r12 ; call qword ptr [rsp + 0x50]
read: r12 r13d r14 r15 rbp rbx rsp 
write: esi r8 r9 rcx rdi rdx rsp 
--------------------------------------------------------------------------------
000f5ce1: RLP; cmp eax, -2 ; mov r8d, eax ; mov dword ptr [rsp + 0x4c], eax ; jne 0xf5c8c
read: eax rflags 
write: r8d rflags 
--------------------------------------------------------------------------------
000f5d72: RLP; test eax, eax ; jns 0xf5bd1
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f5daa: RLP; mov r8d, dword ptr [rsp + 0x4c] ; cmp r8d, 1 ; ja 0xf5bb4
read: r8d rflags 
write: r8d rflags 
--------------------------------------------------------------------------------
000f5e58: RLP; test eax, eax ; jne 0xf5ea7
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f5eeb: RLP; mov eax, dword ptr [rsp + 0x18] ; jmp 0xf5e69
read: 
write: eax 
--------------------------------------------------------------------------------
000f5f58: RLP; cmp eax, -1 ; je 0xf6104
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f60a1: RLP; test eax, eax ; jne 0xf616c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f60b7: RLP; mov r8, r14 ; mov r9, rbx ; mov rcx, r13 ; mov rdx, qword ptr [rsp + 0x38] ; mov rsi, rbp ; mov rdi, r12 ; call qword ptr [rsp + 0x50]
read: r12 r13 r14 rbp rbx rsp 
write: r8 r9 rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000f60d3: RLP; cmp eax, -2 ; mov r8d, eax ; mov dword ptr [rsp + 0x4c], eax ; jne 0xf6084
read: eax rflags 
write: r8d rflags 
--------------------------------------------------------------------------------
000f615e: RLP; test eax, eax ; jns 0xf5fd0
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f6192: RLP; mov r8d, dword ptr [rsp + 0x4c] ; cmp r8d, 1 ; ja 0xf5fb3
read: r8d rflags 
write: r8d rflags 
--------------------------------------------------------------------------------
000f6238: RLP; test eax, eax ; jne 0xf6287
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f62cb: RLP; mov eax, dword ptr [rsp + 0x20] ; jmp 0xf6249
read: 
write: eax 
--------------------------------------------------------------------------------
000f6320: RLP; add rsp, 0x80 ; mov r9, qword ptr [rip + 0x272b26] ; add r9, qword ptr fs:[0] ; lea r8, [rip + 0x276f9e] ; lea rdx, [rip + 0x2744d7] ; lea rsi, [rip + 0x276fb0] ; lea rdi, [rip + 0x229] ; mov ecx, 0x400 ; call 0x10522c
read: r9 rip rsp 
write: ecx r8 r9 rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000f6361: RLP; mov rdx, rax ; mov rax, qword ptr [rip + 0x272af9] ; mov esi, dword ptr fs:[rax] ; cmp dword ptr [rip + 0x2783fb], 0 ; je 0xf6382
read: rax rflags 
write: esi rax rdx rflags 
--------------------------------------------------------------------------------
000f63a1: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x272ab5] ; mov dword ptr fs:[rax], esi ; mov rax, rdx ; add rsp, 8 ; ret
read: esi rdx rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000f6403: RLP; add rsp, 0x80 ; lea rax, [rip + 0x276f17] ; lea r8, [rip + 0x276f1c] ; lea rcx, [rip + 0x276f0d] ; lea rdx, [rip + 0x276f16] ; lea rsi, [rip + 0xfb1f] ; lea rdi, [rip + 0x40a37] ; mov qword ptr [rsp], rax ; mov dword ptr [rsp + 8], 1 ; call 0x1053dc
read: rax rip rsp 
write: r8 rax rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000f6449: RLP; mov rax, qword ptr [rip + 0x272a14] ; mov edx, dword ptr fs:[rax] ; cmp dword ptr [rip + 0x278316], 0 ; je 0xf6467
read: rflags 
write: edx rax rflags 
--------------------------------------------------------------------------------
000f6486: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x2729d0] ; mov dword ptr fs:[rax], edx ; add rsp, 0x18 ; ret
read: edx rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000f64ee: RLP; add rsp, 0x80 ; lea r8, [rip + 0x276e38] ; lea rcx, [rip + 0x276e29] ; lea rdx, [rip + 0x276e32] ; lea rsi, [rip + 0xfa3b] ; lea rdi, [rip + 0x4095e] ; mov r9d, 1 ; call 0x10550c
read: rip rsp 
write: r8 r9d rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000f6527: RLP; mov rax, qword ptr [rip + 0x272936] ; mov edx, dword ptr fs:[rax] ; cmp dword ptr [rip + 0x278238], 0 ; je 0xf6545
read: rflags 
write: edx rax rflags 
--------------------------------------------------------------------------------
000f6564: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x2728f2] ; mov dword ptr fs:[rax], edx ; add rsp, 8 ; ret
read: edx rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000f65ca: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x27287c] ; add rax, qword ptr fs:[0] ; lea r8, [rip + 0x276d44] ; mov qword ptr [rsp + 0x20], rdx ; mov qword ptr [rsp + 0x10], r9 ; lea rcx, [rip + 0x276d43] ; lea r9, [rip + 0x276d34] ; lea rdx, [rip + 0xf945] ; lea rsi, [rip + 0x4085d] ; lea rdi, [rip + 0x4086c] ; mov qword ptr [rsp + 0x28], rbx ; mov qword ptr [rsp + 0x18], r10 ; mov qword ptr [rsp + 0x30], rax ; lea rax, [rip + 0x276cfd]
read: r10 r9 rax rbx rdx rsp 
write: r8 r9 rax rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000f6640: RLP; mov edx, eax ; mov rax, qword ptr [rip + 0x27281b] ; mov esi, dword ptr fs:[rax] ; cmp dword ptr [rip + 0x27811d], 0 ; je 0xf6660
read: eax rflags 
write: edx esi rax rflags 
--------------------------------------------------------------------------------
000f667f: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x2727d7] ; mov dword ptr fs:[rax], esi ; add rsp, 0x40 ; mov eax, edx ; pop rbx ; ret
read: edx esi rsp 
write: eax rax rbx rflags rsp 
--------------------------------------------------------------------------------
000f66f8: RLP; add rsp, 0x80 ; mov rcx, qword ptr [rip + 0x27411e] ; mov r8, qword ptr [rip + 0x276c57] ; test rcx, rcx ; je 0xf683c
read: rcx rflags rsp 
write: r8 rcx rflags rsp 
--------------------------------------------------------------------------------
000f6756: RLP; cmp eax, 0x22 ; jne 0xf682c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f6792: RLP; test rax, rax ; jne 0xf672c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f67a3: RLP; mov rax, qword ptr [rip + 0x2726ba] ; mov qword ptr [rip + 0x27406f], 0 ; mov dword ptr fs:[rax], 0xc ; mov qword ptr [rsp + 0x18], 0 ; nop dword ptr [rax] ; cmp dword ptr [rip + 0x277f9d], 0 ; je 0xf67e0
read: rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000f67ff: RLP; add rsp, 0x80 ; mov eax, dword ptr [rsp + 0x14] ; test eax, eax ; je 0xf6818
read: eax rflags rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
000f6855: RLP; test rax, rax ; mov qword ptr [rip + 0x273fc5], rax ; mov rcx, rax ; mov r8d, 0x400 ; jne 0xf6716
read: rax rflags 
write: r8d rcx rflags 
--------------------------------------------------------------------------------
000f6956: RLP; test eax, eax ; jne 0xf69ec
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f696c: RLP; mov qword ptr [rsp], rbx ; mov r9, r15 ; mov r8, r14 ; mov rcx, r13 ; mov rdx, rbp ; mov esi, dword ptr [rsp + 0xc] ; mov edi, dword ptr [rsp + 8] ; call qword ptr [rsp + 0x30]
read: r13 r14 r15 rbp rbx rsp 
write: edi esi r8 r9 rcx rdx rsp 
--------------------------------------------------------------------------------
000f698c: RLP; cmp eax, -2 ; mov r12d, eax ; jne 0xf6934
read: eax rflags 
write: r12d rflags 
--------------------------------------------------------------------------------
000f6a58: RLP; test eax, eax ; mov r15d, eax ; je 0xf6a86
read: eax rflags 
write: r15d rflags 
--------------------------------------------------------------------------------
000f6a9c: RLP; cmp eax, -1 ; je 0xf6b1c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f6ba3: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rip + 0x273c7b] ; mov rcx, qword ptr [rip + 0x2767ec] ; test rdx, rdx ; je 0xf6cdc
read: rdx rflags rsp 
write: rcx rdx rflags rsp 
--------------------------------------------------------------------------------
000f6bfa: RLP; cmp eax, 0x22 ; jne 0xf6ccc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f6c36: RLP; test rax, rax ; jne 0xf6bd4
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f6c47: RLP; mov rax, qword ptr [rip + 0x272216] ; mov qword ptr [rip + 0x273bd3], 0 ; mov dword ptr fs:[rax], 0xc ; mov qword ptr [rsp + 8], 0 ; nop dword ptr [rax] ; cmp dword ptr [rip + 0x277afd], 0 ; je 0xf6c80
read: rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000f6c9f: RLP; add rsp, 0x80 ; mov eax, dword ptr [rsp + 4] ; test eax, eax ; je 0xf6cb8
read: eax rflags rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
000f6cf5: RLP; test rax, rax ; mov qword ptr [rip + 0x273b2d], rax ; mov rdx, rax ; mov ecx, 0x400 ; jne 0xf6bc1
read: rax rflags 
write: ecx rdx rflags 
--------------------------------------------------------------------------------
000f6d60: RLP; add rsp, 0x80 ; mov r9, qword ptr [rip + 0x2720e6] ; add r9, qword ptr fs:[0] ; lea r8, [rip + 0x27663e] ; lea rdx, [rip + 0x273aaf] ; lea rsi, [rip + 0x276640] ; lea rdi, [rip + 0x229] ; mov ecx, 0x400 ; call 0x10522c
read: r9 rip rsp 
write: ecx r8 r9 rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000f6da1: RLP; mov rdx, rax ; mov rax, qword ptr [rip + 0x2720b9] ; mov esi, dword ptr fs:[rax] ; cmp dword ptr [rip + 0x2779bb], 0 ; je 0xf6dc2
read: rax rflags 
write: esi rax rdx rflags 
--------------------------------------------------------------------------------
000f6de1: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x272075] ; mov dword ptr fs:[rax], esi ; mov rax, rdx ; add rsp, 8 ; ret
read: esi rdx rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000f6e43: RLP; add rsp, 0x80 ; lea rax, [rip + 0x27659f] ; lea r8, [rip + 0x2765a4] ; lea rcx, [rip + 0x276595] ; lea rdx, [rip + 0x27659e] ; lea rsi, [rip + 0xf16f] ; lea rdi, [rip + 0x40029] ; mov qword ptr [rsp], rax ; mov dword ptr [rsp + 8], 1 ; call 0x1053dc
read: rax rip rsp 
write: r8 rax rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000f6e89: RLP; mov rax, qword ptr [rip + 0x271fd4] ; mov edx, dword ptr fs:[rax] ; cmp dword ptr [rip + 0x2778d6], 0 ; je 0xf6ea7
read: rflags 
write: edx rax rflags 
--------------------------------------------------------------------------------
000f6ec6: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x271f90] ; mov dword ptr fs:[rax], edx ; add rsp, 0x18 ; ret
read: edx rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000f6f2e: RLP; add rsp, 0x80 ; lea r8, [rip + 0x2764c0] ; lea rcx, [rip + 0x2764b1] ; lea rdx, [rip + 0x2764ba] ; lea rsi, [rip + 0xf08b] ; lea rdi, [rip + 0x3ff4f] ; mov r9d, 1 ; call 0x10550c
read: rip rsp 
write: r8 r9d rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000f6f67: RLP; mov rax, qword ptr [rip + 0x271ef6] ; mov edx, dword ptr fs:[rax] ; cmp dword ptr [rip + 0x2777f8], 0 ; je 0xf6f85
read: rflags 
write: edx rax rflags 
--------------------------------------------------------------------------------
000f6fa4: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x271eb2] ; mov dword ptr fs:[rax], edx ; add rsp, 8 ; ret
read: edx rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000f700a: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x271e3c] ; add rax, qword ptr fs:[0] ; lea r8, [rip + 0x2763cc] ; mov qword ptr [rsp + 0x20], rdx ; mov qword ptr [rsp + 0x10], r9 ; lea rcx, [rip + 0x2763cb] ; lea r9, [rip + 0x2763bc] ; lea rdx, [rip + 0xef95] ; lea rsi, [rip + 0x3fe4f] ; lea rdi, [rip + 0x3fe5c] ; mov qword ptr [rsp + 0x28], rbx ; mov qword ptr [rsp + 0x18], r10 ; mov qword ptr [rsp + 0x30], rax ; lea rax, [rip + 0x276385]
read: r10 r9 rax rbx rdx rsp 
write: r8 r9 rax rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000f7080: RLP; mov edx, eax ; mov rax, qword ptr [rip + 0x271ddb] ; mov esi, dword ptr fs:[rax] ; cmp dword ptr [rip + 0x2776dd], 0 ; je 0xf70a0
read: eax rflags 
write: edx esi rax rflags 
--------------------------------------------------------------------------------
000f70bf: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x271d97] ; mov dword ptr fs:[rax], esi ; add rsp, 0x40 ; mov eax, edx ; pop rbx ; ret
read: edx esi rsp 
write: eax rax rbx rflags rsp 
--------------------------------------------------------------------------------
000f71ae: RLP; test eax, eax ; jne 0xf723c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f71c4: RLP; mov r9, rbx ; mov r8, r15 ; mov rcx, r14 ; mov rdx, r13 ; mov rsi, rbp ; mov rdi, qword ptr [rsp + 8] ; call qword ptr [rsp + 0x30]
read: r13 r14 r15 rbp rbx rsp 
write: r8 r9 rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000f71e0: RLP; cmp eax, -2 ; mov r12d, eax ; jne 0xf718c
read: eax rflags 
write: r12d rflags 
--------------------------------------------------------------------------------
000f72a8: RLP; test eax, eax ; mov r15d, eax ; je 0xf72d6
read: eax rflags 
write: r15d rflags 
--------------------------------------------------------------------------------
000f72ec: RLP; cmp eax, -1 ; je 0xf736c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f73e8: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rip + 0x273446] ; mov rcx, qword ptr [rip + 0x276047] ; test rdx, rdx ; je 0xf74fc
read: rdx rflags rsp 
write: rcx rdx rflags rsp 
--------------------------------------------------------------------------------
000f7436: RLP; cmp eax, 0x22 ; jne 0xf74ec
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f7467: RLP; test rax, rax ; jne 0xf7414
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f7478: RLP; mov rax, qword ptr [rip + 0x2719e5] ; mov qword ptr [rip + 0x2733b2], 0 ; mov dword ptr fs:[rax], 0xc ; mov qword ptr [rsp + 8], 0 ; cmp dword ptr [rip + 0x2772cf], 0 ; je 0xf74ae
read: rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000f74cd: RLP; add rsp, 0x80 ; mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rsp 
write: r12 r13 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000f7515: RLP; test rax, rax ; mov qword ptr [rip + 0x27331d], rax ; je 0xf7491
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f75ea: RLP; mov r8, r14 ; mov rcx, r13 ; mov rdx, r12 ; mov rsi, rbx ; mov edi, ebp ; call qword ptr [rsp + 0x20]
read: ebp r12 r13 r14 rbx rsp 
write: edi r8 rcx rdx rsi rsp 
--------------------------------------------------------------------------------
000f7600: RLP; cmp eax, -2 ; mov r15d, eax ; jne 0xf7617
read: eax rflags 
write: r15d rflags 
--------------------------------------------------------------------------------
000f7638: RLP; test eax, eax ; je 0xf75dc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f76f0: RLP; test eax, eax ; jne 0xf773c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f77b0: RLP; add rsp, 0x80 ; lea r8, [rip + 0x275cae] ; lea rdx, [rip + 0x27307f] ; lea rsi, [rip + 0x275cb0] ; lea rdi, [rip + 0x239] ; xor r9d, r9d ; mov ecx, 0x400 ; call 0x10522c
read: r9d rip rsp 
write: ecx r8 r9d rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000f77e4: RLP; mov rdx, rax ; mov rax, qword ptr [rip + 0x271676] ; mov esi, dword ptr fs:[rax] ; cmp dword ptr [rip + 0x276f78], 0 ; je 0xf7805
read: rax rflags 
write: esi rax rdx rflags 
--------------------------------------------------------------------------------
000f7824: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x271632] ; mov dword ptr fs:[rax], esi ; mov rax, rdx ; add rsp, 8 ; ret
read: esi rdx rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000f7893: RLP; add rsp, 0x80 ; lea rax, [rip + 0x275bff] ; lea r8, [rip + 0x275c04] ; lea rcx, [rip + 0x275bf5] ; lea rdx, [rip + 0x275bfe] ; lea rsi, [rip + 0xe58f] ; lea rdi, [rip + 0x3f61b] ; mov qword ptr [rsp], rax ; mov dword ptr [rsp + 8], 0 ; call 0x1053dc
read: rax rip rsp 
write: r8 rax rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000f78d9: RLP; mov rax, qword ptr [rip + 0x271584] ; mov edx, dword ptr fs:[rax] ; cmp dword ptr [rip + 0x276e86], 0 ; je 0xf78f7
read: rflags 
write: edx rax rflags 
--------------------------------------------------------------------------------
000f7916: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x271540] ; mov dword ptr fs:[rax], edx ; add rsp, 0x18 ; ret
read: edx rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000f797e: RLP; add rsp, 0x80 ; lea r8, [rip + 0x275b20] ; lea rcx, [rip + 0x275b11] ; lea rdx, [rip + 0x275b1a] ; lea rsi, [rip + 0xe4ab] ; lea rdi, [rip + 0x3f543] ; xor r9d, r9d ; call 0x10550c
read: r9d rip rsp 
write: r8 r9d rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000f79b4: RLP; mov rax, qword ptr [rip + 0x2714a9] ; mov edx, dword ptr fs:[rax] ; cmp dword ptr [rip + 0x276dab], 0 ; je 0xf79d2
read: rflags 
write: edx rax rflags 
--------------------------------------------------------------------------------
000f79f1: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x271465] ; mov dword ptr fs:[rax], edx ; add rsp, 8 ; ret
read: edx rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000f7a5a: RLP; add rsp, 0x80 ; lea rax, [rip + 0x275a38] ; mov qword ptr [rsp + 0x20], rdx ; mov qword ptr [rsp + 0x10], r9 ; lea r8, [rip + 0x275a2b] ; lea r9, [rip + 0x275a2c] ; lea rcx, [rip + 0x275a2d] ; lea rdx, [rip + 0xe3be] ; lea rsi, [rip + 0x3f44a] ; lea rdi, [rip + 0x3f45b] ; mov qword ptr [rsp + 0x30], 0 ; mov qword ptr [rsp + 0x28], rbx ; mov qword ptr [rsp + 0x18], r10 ; mov dword ptr [rsp + 8], 0 ; mov qword ptr [rsp], rax
read: r10 r9 rax rbx rdx rsp 
write: r8 r9 rax rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000f7ac4: RLP; mov edx, eax ; mov rax, qword ptr [rip + 0x271397] ; mov esi, dword ptr fs:[rax] ; cmp dword ptr [rip + 0x276c99], 0 ; je 0xf7ae4
read: eax rflags 
write: edx esi rax rflags 
--------------------------------------------------------------------------------
000f7b03: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x271353] ; mov dword ptr fs:[rax], esi ; add rsp, 0x40 ; mov eax, edx ; pop rbx ; ret
read: edx esi rsp 
write: eax rax rbx rflags rsp 
--------------------------------------------------------------------------------
000f7b69: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rip + 0x272cd5] ; mov rcx, qword ptr [rip + 0x275956] ; test rdx, rdx ; je 0xf7c7c
read: rdx rflags rsp 
write: rcx rdx rflags rsp 
--------------------------------------------------------------------------------
000f7bb7: RLP; cmp eax, 0x22 ; jne 0xf7c6c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f7be8: RLP; test rax, rax ; jne 0xf7b94
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f7bf9: RLP; mov rax, qword ptr [rip + 0x271264] ; mov qword ptr [rip + 0x272c41], 0 ; mov dword ptr fs:[rax], 0xc ; mov qword ptr [rsp + 8], 0 ; cmp dword ptr [rip + 0x276b4e], 0 ; je 0xf7c2f
read: rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000f7c4e: RLP; add rsp, 0x80 ; mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rsp 
write: r12 r13 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000f7c95: RLP; test rax, rax ; mov qword ptr [rip + 0x272bad], rax ; je 0xf7c12
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f7d6a: RLP; mov r8, r14 ; mov rcx, r13 ; mov rdx, r12 ; mov rsi, rbx ; mov rdi, rbp ; call qword ptr [rsp + 0x20]
read: r12 r13 r14 rbp rbx rsp 
write: r8 rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000f7d81: RLP; cmp eax, -2 ; mov r15d, eax ; jne 0xf7d98
read: eax rflags 
write: r15d rflags 
--------------------------------------------------------------------------------
000f7db9: RLP; test eax, eax ; je 0xf7d5c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f7e70: RLP; test eax, eax ; jne 0xf7ebc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f7f3e: RLP; add rsp, 0x80 ; mov rcx, qword ptr [rip + 0x272908] ; mov r8, qword ptr [rip + 0x2755c9] ; test rcx, rcx ; je 0xf805c
read: rcx rflags rsp 
write: r8 rcx rflags rsp 
--------------------------------------------------------------------------------
000f7f92: RLP; cmp eax, 0x22 ; jne 0xf804c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f7fc3: RLP; test rax, rax ; jne 0xf7f6c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f7fd4: RLP; mov rax, qword ptr [rip + 0x270e89] ; mov qword ptr [rip + 0x27286e], 0 ; mov dword ptr fs:[rax], 0xc ; mov qword ptr [rsp + 8], 0 ; cmp dword ptr [rip + 0x276773], 0 ; je 0xf800a
read: rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000f8029: RLP; add rsp, 0x80 ; mov rax, qword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: rsp 
write: r12 r13 r14 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000f8075: RLP; test rax, rax ; mov qword ptr [rip + 0x2727d5], rax ; je 0xf7fed
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f817a: RLP; mov r9, r15 ; mov r8, r14 ; mov rcx, r13 ; mov rdx, rbx ; mov rsi, r12 ; mov rdi, qword ptr [rsp + 8] ; call qword ptr [rsp + 0x30]
read: r12 r13 r14 r15 rbx rsp 
write: r8 r9 rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000f8196: RLP; cmp eax, -2 ; mov ebp, eax ; jne 0xf81ac
read: eax rflags 
write: ebp rflags 
--------------------------------------------------------------------------------
000f81ce: RLP; test eax, eax ; je 0xf816c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f824e: RLP; test eax, eax ; jns 0xf81fe
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f82c8: RLP; test eax, eax ; jne 0xf832c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f83ad: RLP; add rsp, 0x80 ; mov rcx, qword ptr [rip + 0x2724a1] ; mov r8, qword ptr [rip + 0x2751ba] ; test rcx, rcx ; je 0xf84c4
read: rcx rflags rsp 
write: r8 rcx rflags rsp 
--------------------------------------------------------------------------------
000f8401: RLP; cmp eax, 0x22 ; jne 0xf84b4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f8432: RLP; test rax, rax ; jne 0xf83dc
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f8443: RLP; mov rax, qword ptr [rip + 0x270a1a] ; mov qword ptr [rip + 0x272407], 0 ; mov dword ptr fs:[rax], 0xc ; mov qword ptr [rsp + 8], 0 ; cmp dword ptr [rip + 0x276304], 0 ; je 0xf8479
read: rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000f8498: RLP; add rsp, 0x80 ; mov rax, qword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: rsp 
write: r12 r13 r14 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000f84dd: RLP; test rax, rax ; mov qword ptr [rip + 0x272375], rax ; je 0xf845c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f85d2: RLP; mov r9, r15 ; mov r8, r14 ; mov rcx, r13 ; mov rdx, rbx ; mov rsi, r12 ; mov edi, dword ptr [rsp + 0xc] ; call qword ptr [rsp + 0x30]
read: r12 r13 r14 r15 rbx rsp 
write: edi r8 r9 rcx rdx rsi rsp 
--------------------------------------------------------------------------------
000f85ed: RLP; cmp eax, -2 ; mov ebp, eax ; jne 0xf8603
read: eax rflags 
write: ebp rflags 
--------------------------------------------------------------------------------
000f8625: RLP; test eax, eax ; je 0xf85c4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f86a5: RLP; test eax, eax ; jns 0xf8655
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f8728: RLP; test eax, eax ; jne 0xf878c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f8800: RLP; add rsp, 0x80 ; lea r8, [rip + 0x274dae] ; lea rdx, [rip + 0x27204f] ; lea rsi, [rip + 0x274dc0] ; lea rdi, [rip + 0x239] ; xor r9d, r9d ; mov ecx, 0x400 ; call 0x10522c
read: r9d rip rsp 
write: ecx r8 r9d rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000f8834: RLP; mov rdx, rax ; mov rax, qword ptr [rip + 0x270626] ; mov esi, dword ptr fs:[rax] ; cmp dword ptr [rip + 0x275f28], 0 ; je 0xf8855
read: rax rflags 
write: esi rax rdx rflags 
--------------------------------------------------------------------------------
000f8874: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x2705e2] ; mov dword ptr fs:[rax], esi ; mov rax, rdx ; add rsp, 8 ; ret
read: esi rdx rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000f88e3: RLP; add rsp, 0x80 ; lea rax, [rip + 0x274d17] ; lea r8, [rip + 0x274d1c] ; lea rcx, [rip + 0x274d0d] ; lea rdx, [rip + 0x274d16] ; lea rsi, [rip + 0xd5bf] ; lea rdi, [rip + 0x3e622] ; mov qword ptr [rsp], rax ; mov dword ptr [rsp + 8], 0 ; call 0x1053dc
read: rax rip rsp 
write: r8 rax rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000f8929: RLP; mov rax, qword ptr [rip + 0x270534] ; mov edx, dword ptr fs:[rax] ; cmp dword ptr [rip + 0x275e36], 0 ; je 0xf8947
read: rflags 
write: edx rax rflags 
--------------------------------------------------------------------------------
000f8966: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x2704f0] ; mov dword ptr fs:[rax], edx ; add rsp, 0x18 ; ret
read: edx rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000f89ce: RLP; add rsp, 0x80 ; lea r8, [rip + 0x274c38] ; lea rcx, [rip + 0x274c29] ; lea rdx, [rip + 0x274c32] ; lea rsi, [rip + 0xd4db] ; lea rdi, [rip + 0x3e549] ; xor r9d, r9d ; call 0x10550c
read: r9d rip rsp 
write: r8 r9d rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000f8a04: RLP; mov rax, qword ptr [rip + 0x270459] ; mov edx, dword ptr fs:[rax] ; cmp dword ptr [rip + 0x275d5b], 0 ; je 0xf8a22
read: rflags 
write: edx rax rflags 
--------------------------------------------------------------------------------
000f8a41: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x270415] ; mov dword ptr fs:[rax], edx ; add rsp, 8 ; ret
read: edx rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000f8aaa: RLP; add rsp, 0x80 ; lea rax, [rip + 0x274b50] ; mov qword ptr [rsp + 0x20], rdx ; mov qword ptr [rsp + 0x10], r9 ; lea r8, [rip + 0x274b43] ; lea r9, [rip + 0x274b44] ; lea rcx, [rip + 0x274b45] ; lea rdx, [rip + 0xd3ee] ; lea rsi, [rip + 0x3e451] ; lea rdi, [rip + 0x3e460] ; mov qword ptr [rsp + 0x30], 0 ; mov qword ptr [rsp + 0x28], rbx ; mov qword ptr [rsp + 0x18], r10 ; mov dword ptr [rsp + 8], 0 ; mov qword ptr [rsp], rax
read: r10 r9 rax rbx rdx rsp 
write: r8 r9 rax rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000f8b14: RLP; mov edx, eax ; mov rax, qword ptr [rip + 0x270347] ; mov esi, dword ptr fs:[rax] ; cmp dword ptr [rip + 0x275c49], 0 ; je 0xf8b34
read: eax rflags 
write: edx esi rax rflags 
--------------------------------------------------------------------------------
000f8b53: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x270303] ; mov dword ptr fs:[rax], esi ; add rsp, 0x40 ; mov eax, edx ; pop rbx ; ret
read: edx esi rsp 
write: eax rax rbx rflags rsp 
--------------------------------------------------------------------------------
000f8bb0: RLP; add rsp, 0x80 ; lea r8, [rip + 0x274a6e] ; lea rdx, [rip + 0x271ca7] ; lea rsi, [rip + 0x274a70] ; lea rdi, [rip + 0x579] ; xor r9d, r9d ; mov ecx, 0x400 ; call 0x10522c
read: r9d rip rsp 
write: ecx r8 r9d rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000f8be4: RLP; mov rdx, rax ; mov rax, qword ptr [rip + 0x270276] ; mov esi, dword ptr fs:[rax] ; cmp dword ptr [rip + 0x275b78], 0 ; je 0xf8c05
read: rax rflags 
write: esi rax rdx rflags 
--------------------------------------------------------------------------------
000f8c24: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x270232] ; mov dword ptr fs:[rax], esi ; mov rax, rdx ; add rsp, 8 ; ret
read: esi rdx rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000f8c99: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rip + 0x271bcd] ; mov rcx, qword ptr [rip + 0x2749c6] ; test rdx, rdx ; je 0xf8dac
read: rdx rflags rsp 
write: rcx rdx rflags rsp 
--------------------------------------------------------------------------------
000f8ce7: RLP; cmp eax, 0x22 ; jne 0xf8d9c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f8d18: RLP; test rax, rax ; jne 0xf8cc4
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f8d29: RLP; mov rax, qword ptr [rip + 0x270134] ; mov qword ptr [rip + 0x271b39], 0 ; mov dword ptr fs:[rax], 0xc ; mov qword ptr [rsp + 8], 0 ; cmp dword ptr [rip + 0x275a1e], 0 ; je 0xf8d5f
read: rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000f8d7e: RLP; add rsp, 0x80 ; mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rsp 
write: r12 r13 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000f8dc5: RLP; test rax, rax ; mov qword ptr [rip + 0x271aa5], rax ; je 0xf8d42
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f8e38: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rip + 0x271a36] ; mov rcx, qword ptr [rip + 0x274857] ; test rdx, rdx ; je 0xf8f4c
read: rdx rflags rsp 
write: rcx rdx rflags rsp 
--------------------------------------------------------------------------------
000f8e86: RLP; cmp eax, 0x22 ; jne 0xf8f3c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f8eb7: RLP; test rax, rax ; jne 0xf8e64
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f8ec8: RLP; mov rax, qword ptr [rip + 0x26ff95] ; mov qword ptr [rip + 0x2719a2], 0 ; mov dword ptr fs:[rax], 0xc ; mov qword ptr [rsp + 8], 0 ; cmp dword ptr [rip + 0x27587f], 0 ; je 0xf8efe
read: rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000f8f1d: RLP; add rsp, 0x80 ; mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rsp 
write: r12 r13 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000f8f65: RLP; test rax, rax ; mov qword ptr [rip + 0x27190d], rax ; je 0xf8ee1
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f8fd3: RLP; add rsp, 0x80 ; lea rax, [rip + 0x2746d7] ; lea r8, [rip + 0x2746dc] ; lea rcx, [rip + 0x2746cd] ; lea rdx, [rip + 0x2746d6] ; lea rsi, [rip + 0xd18f] ; lea rdi, [rip + 0x3df55] ; mov qword ptr [rsp], rax ; mov dword ptr [rsp + 8], 0 ; call 0x1053dc
read: rax rip rsp 
write: r8 rax rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000f9019: RLP; mov rax, qword ptr [rip + 0x26fe44] ; mov edx, dword ptr fs:[rax] ; cmp dword ptr [rip + 0x275746], 0 ; je 0xf9037
read: rflags 
write: edx rax rflags 
--------------------------------------------------------------------------------
000f9056: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x26fe00] ; mov dword ptr fs:[rax], edx ; add rsp, 0x18 ; ret
read: edx rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000f90be: RLP; add rsp, 0x80 ; lea r8, [rip + 0x2745f8] ; lea rcx, [rip + 0x2745e9] ; lea rdx, [rip + 0x2745f2] ; lea rsi, [rip + 0xd0ab] ; lea rdi, [rip + 0x3de7b] ; xor r9d, r9d ; call 0x10550c
read: r9d rip rsp 
write: r8 r9d rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000f90f4: RLP; mov rax, qword ptr [rip + 0x26fd69] ; mov edx, dword ptr fs:[rax] ; cmp dword ptr [rip + 0x27566b], 0 ; je 0xf9112
read: rflags 
write: edx rax rflags 
--------------------------------------------------------------------------------
000f9131: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x26fd25] ; mov dword ptr fs:[rax], edx ; add rsp, 8 ; ret
read: edx rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000f919a: RLP; add rsp, 0x80 ; lea rax, [rip + 0x274510] ; mov qword ptr [rsp + 0x20], rdx ; mov qword ptr [rsp + 0x10], r9 ; lea r8, [rip + 0x274503] ; lea r9, [rip + 0x274504] ; lea rcx, [rip + 0x274505] ; lea rdx, [rip + 0xcfbe] ; lea rsi, [rip + 0x3dd84] ; lea rdi, [rip + 0x3dd91] ; mov qword ptr [rsp + 0x30], 0 ; mov qword ptr [rsp + 0x28], rbx ; mov qword ptr [rsp + 0x18], r10 ; mov dword ptr [rsp + 8], 0 ; mov qword ptr [rsp], rax
read: r10 r9 rax rbx rdx rsp 
write: r8 r9 rax rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000f9204: RLP; mov edx, eax ; mov rax, qword ptr [rip + 0x26fc57] ; mov esi, dword ptr fs:[rax] ; cmp dword ptr [rip + 0x275559], 0 ; je 0xf9224
read: eax rflags 
write: edx esi rax rflags 
--------------------------------------------------------------------------------
000f9243: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x26fc13] ; mov dword ptr fs:[rax], esi ; add rsp, 0x40 ; mov eax, edx ; pop rbx ; ret
read: edx esi rsp 
write: eax rax rbx rflags rsp 
--------------------------------------------------------------------------------
000f930a: RLP; mov r8, r14 ; mov rcx, r13 ; mov rdx, r12 ; mov rsi, rbx ; mov rdi, rbp ; call qword ptr [rsp + 0x20]
read: r12 r13 r14 rbp rbx rsp 
write: r8 rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000f9321: RLP; cmp eax, -2 ; mov r15d, eax ; jne 0xf9338
read: eax rflags 
write: r15d rflags 
--------------------------------------------------------------------------------
000f9359: RLP; test eax, eax ; je 0xf92fc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f9410: RLP; test eax, eax ; jne 0xf945c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f953a: RLP; mov r8, r14 ; mov rcx, r13 ; mov rdx, r12 ; mov rsi, rbx ; mov edi, ebp ; call qword ptr [rsp + 0x20]
read: ebp r12 r13 r14 rbx rsp 
write: edi r8 rcx rdx rsi rsp 
--------------------------------------------------------------------------------
000f9550: RLP; cmp eax, -2 ; mov r15d, eax ; jne 0xf9567
read: eax rflags 
write: r15d rflags 
--------------------------------------------------------------------------------
000f9588: RLP; test eax, eax ; je 0xf952c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f9640: RLP; test eax, eax ; jne 0xf968c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f96d4: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f9871: RLP; lea rsi, [rip + 0x3d721] ; xor r9d, r9d ; xor edx, edx ; mov r8d, eax ; mov rcx, r13 ; mov rdi, r14 ; mov ebx, eax ; call 0x10506c
read: eax edx r13 r14 r9d rip rsp 
write: ebx edx r8d r9d rcx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000f9891: RLP; test eax, eax ; je 0xf9854
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f98ec: RLP; test eax, eax ; je 0xf9902
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f9b04: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000f9b4d: RLP; add rsp, 0x10 ; mov rax, rbx ; pop rbx ; ret
read: rbx rsp 
write: rax rbx rflags rsp 
--------------------------------------------------------------------------------
000f9bf1: RLP; lea rsi, [rip + 0x3d3c0] ; xor r9d, r9d ; xor edx, edx ; mov r8d, eax ; mov rcx, r13 ; mov rdi, r14 ; mov ebx, eax ; call 0x10506c
read: eax edx r13 r14 r9d rip rsp 
write: ebx edx r8d r9d rcx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000f9c11: RLP; test eax, eax ; je 0xf9bd4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f9c47: RLP; xor eax, eax ; jmp 0xf9c1f
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
000f9c6b: RLP; test eax, eax ; je 0xf9c81
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f9cd5: RLP; test eax, eax ; jne 0xf9d3c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f9d0b: RLP; test rax, rax ; je 0xf9d5f
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f9d2d: RLP; add rsp, 0x90 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
read: rbp rsp 
write: r12 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000f9d5a: RLP; test rax, rax ; jne 0xf9d10
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f9d8f: RLP; test rax, rax ; mov rbx, rax ; je 0xf9e54
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000f9da7: RLP; mov rdx, rsp ; mov esi, eax ; mov edi, 1 ; call 0xd63ec
read: eax rip rsp 
write: edi esi rdx rsp 
--------------------------------------------------------------------------------
000f9dba: RLP; test eax, eax ; js 0xf9e7c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000f9deb: RLP; jmp 0xf9d0b
read: 
write: 
--------------------------------------------------------------------------------
000f9e23: RLP; jmp 0xf9d0b
read: 
write: 
--------------------------------------------------------------------------------
000f9e48: RLP; jmp 0xf9d0b
read: 
write: 
--------------------------------------------------------------------------------
000f9e70: RLP; jmp 0xf9d0b
read: 
write: 
--------------------------------------------------------------------------------
000f9e98: RLP; jmp 0xf9d0b
read: 
write: 
--------------------------------------------------------------------------------
000f9f3e: RLP; test rax, rax ; jle 0xfa0d6
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fa09d: RLP; add rsp, 0xf8 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: ebx rsp 
write: eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000fa0c2: RLP; test eax, eax ; sete al ; movzx eax, al ; test eax, eax ; jg 0xfa08d
read: al eax rflags 
write: al eax rflags 
--------------------------------------------------------------------------------
000fa17d: RLP; test eax, eax ; jne 0xfa19a
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fa192: RLP; test eax, eax ; je 0xfa2d0
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fa1d0: RLP; test eax, eax ; mov r14d, eax ; jne 0xf9f2c
read: eax rflags 
write: r14d rflags 
--------------------------------------------------------------------------------
000fa243: RLP; test eax, eax ; jne 0xfa21c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fa264: RLP; jmp 0xfa28d
read: 
write: 
--------------------------------------------------------------------------------
000fa28a: RLP; mov r14d, eax ; test r14d, r14d ; js 0xfa0d6
read: eax r14d rflags 
write: r14d rflags 
--------------------------------------------------------------------------------
000fa2c8: RLP; mov r14d, eax ; neg r14d ; jmp 0xfa28d
read: eax r14d 
write: r14d rflags 
--------------------------------------------------------------------------------
000fa2f4: RLP; jmp 0xfa28d
read: 
write: 
--------------------------------------------------------------------------------
000fa30c: RLP; jmp 0xfa0ca
read: 
write: 
--------------------------------------------------------------------------------
000fa32e: RLP; neg eax ; jmp 0xfa0ca
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
000fa347: RLP; test eax, eax ; sete al ; movzx eax, al ; neg eax ; jmp 0xfa0ce
read: al eax rflags 
write: al eax rflags 
--------------------------------------------------------------------------------
000fa3ce: RLP; lea rdx, [rax + 0x1e] ; lea rsi, [rbp - 0x60] ; lea r8, [rbp - 0x68] ; mov rcx, rax ; mov rdi, rbx ; and rdx, 0xfffffffffffffff0 ; sub rsp, rdx ; lea rdx, [rsp + 0xf] ; and rdx, 0xfffffffffffffff0 ; call 0xb1ddc
read: rax rbx rdx rip rsp 
write: r8 rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000fa3f9: RLP; test eax, eax ; mov r9d, dword ptr [rbp - 0x88] ; jne 0xfa4f9
read: eax rflags 
write: r9d rflags 
--------------------------------------------------------------------------------
000fa42c: RLP; mov rdi, rax ; lea rax, [rax + 0x27] ; mov ecx, 0x10 ; xor edx, edx ; mov rsi, qword ptr [rbp - 0x88] ; div rcx ; mov rdx, rdi ; shl rax, 4 ; sub rsp, rax ; lea rcx, [rsp + 0xf] ; and rcx, 0xfffffffffffffff0 ; mov rdi, rcx ; mov qword ptr [rbp - 0x88], rcx ; call 0x892cc
read: edx rax rcx rdi rdx rip rsp 
write: ecx edx rax rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000fa46a: RLP; movabs rcx, 0x7374736f68722e2f ; mov byte ptr [rax + 8], 0 ; mov qword ptr [rax], rcx ; call 0xb3dcc
read: rcx rip rsp 
write: rcx rsp 
--------------------------------------------------------------------------------
000fa484: RLP; mov r13d, eax ; mov rax, qword ptr [rbp - 0x68] ; mov edi, dword ptr [rax + 0x10] ; call 0xdc9ec
read: eax rip rsp 
write: edi r13d rax rsp 
--------------------------------------------------------------------------------
000fa497: RLP; mov rax, qword ptr [rbp - 0x68] ; mov rcx, qword ptr [rbp - 0x88] ; mov esi, dword ptr [rax + 0x10] ; mov rdi, rcx ; call 0xf9cac
read: rcx rip rsp 
write: esi rax rcx rdi rsp 
--------------------------------------------------------------------------------
000fa4b1: RLP; test rax, rax ; je 0xfa4ea
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fa4d7: RLP; mov r10, qword ptr [rbp - 0x78] ; mov r12d, eax ; mov rdi, r10 ; call 0x6bf5c
read: eax r10 rip rsp 
write: r10 r12d rdi rsp 
--------------------------------------------------------------------------------
000fa4ea: RLP; mov edi, r13d ; call 0xdc9ec
read: r13d rip rsp 
write: edi rsp 
--------------------------------------------------------------------------------
000fa4f6: RLP; mov r9d, r12d ; lea rsp, [rbp - 0x28] ; mov eax, r9d ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: r12d r9d rsp 
write: eax r12 r13 r14 r15 r9d rbp rbx rsp 
--------------------------------------------------------------------------------
000fa51e: RLP; test rax, rax ; je 0xfa39d
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fa54b: RLP; mov r11, qword ptr [rbp - 0x88] ; mov r12d, eax ; mov rdi, r11 ; call 0x6bf5c
read: eax r11 rip rsp 
write: r11 r12d rdi rsp 
--------------------------------------------------------------------------------
000fa561: RLP; xor r9d, r9d ; test r12d, r12d ; jne 0xfa3a3
read: r12d r9d rflags 
write: r9d rflags 
--------------------------------------------------------------------------------
000fa5c3: RLP; test eax, eax ; mov ebp, eax ; js 0xfa6ec
read: eax rflags 
write: ebp rflags 
--------------------------------------------------------------------------------
000fa651: RLP; test eax, eax ; js 0xfa60c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fa6bf: RLP; mov eax, 0xffffffff ; jmp 0xfa66f
read: 
write: eax 
--------------------------------------------------------------------------------
000fa6d7: RLP; mov rax, qword ptr [rip + 0x26e786] ; mov dword ptr fs:[rax], 0xb ; mov eax, 0xffffffff ; jmp 0xfa66f
read: 
write: eax rax 
--------------------------------------------------------------------------------
000fa75f: RLP; mov ecx, 6 ; mov r14d, eax ; mov rdi, rbp ; xor eax, eax ; lea rdx, [rip + 0x3b6eb] ; mov esi, 8 ; rep stosq qword ptr [rdi], rax ; mov dword ptr [rsp + 0xc4], r12d ; lea r12, [rsp + 0x60] ; mov dword ptr [rsp + 0xc0], 2 ; ror bx, 8 ; mov rdi, r12 ; movzx ecx, bx ; mov dword ptr [rsp + 0xc8], 1 ; call 0x5227c
read: bx eax r12 r12d rax rbp rcx rdi rflags rip rsp 
write: bx eax ecx esi r12 r14d rcx rdi rdx rflags rsp 
--------------------------------------------------------------------------------
000fa7b1: RLP; mov rax, qword ptr [rsp + 0x20] ; lea rcx, [rsp + 0x68] ; mov rdx, rbp ; mov rsi, r12 ; mov rdi, qword ptr [rax] ; call 0xd01ec
read: r12 rbp rip rsp 
write: rax rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000fa7cd: RLP; test eax, eax ; jne 0xfaa4c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fa80f: RLP; mov rax, qword ptr [rsp + 0x68] ; mov rdi, qword ptr [rax + 0x20] ; call 0x853ec
read: rip rsp 
write: rax rdi rsp 
--------------------------------------------------------------------------------
000fa821: RLP; test rax, rax ; mov qword ptr [rip + 0x270059], rax ; je 0xfb1cd
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fa857: RLP; mov dword ptr [rsp + 0x4c], eax ; lea rax, [rsp + 0x58] ; mov dword ptr [rsp + 0x58], 0x3ff ; mov dword ptr [rsp + 0x48], 1 ; mov qword ptr [rsp + 0x10], rax ; lea rax, [rsp + 0x120] ; mov qword ptr [rsp + 0x18], rax ; nop word ptr cs:[rax + rax] ; movzx esi, word ptr [rbx + 4] ; mov rdi, qword ptr [rsp + 0x10] ; call 0xfa57c
read: eax rax rip rsp 
write: esi rax rdi rsp 
--------------------------------------------------------------------------------
000fa89e: RLP; test eax, eax ; mov ebp, eax ; js 0xfaadc
read: eax rflags 
write: ebp rflags 
--------------------------------------------------------------------------------
000fa8bd: RLP; mov edx, dword ptr [rbx + 0x10] ; mov rsi, qword ptr [rbx + 0x18] ; mov edi, ebp ; call 0xe436c
read: ebp rip rsp 
write: edi edx rsi rsp 
--------------------------------------------------------------------------------
000fa8cf: RLP; test eax, eax ; jns 0xfab2c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fa8e2: RLP; mov r15, qword ptr [rip + 0x26e57b] ; mov ebp, dword ptr fs:[r15] ; cmp ebp, 0x62 ; je 0xfaa94
read: ebp rflags 
write: ebp r15 rflags 
--------------------------------------------------------------------------------
000fa93e: RLP; lea rsi, [rip + 0x3c765] ; lea rdi, [rip + 0x3a061] ; mov edx, 5 ; call 0x2f4bc
read: rip rsp 
write: edx rdi rsi rsp 
--------------------------------------------------------------------------------
000fa95a: RLP; mov rdi, qword ptr [rsp + 0x18] ; mov rsi, rax ; mov rdx, r12 ; xor eax, eax ; call 0x523bc
read: eax r12 rax rip rsp 
write: eax rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000fa970: RLP; test eax, eax ; js 0xfa9a1
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fa990: RLP; mov rdi, qword ptr [rsp + 0x120] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000fa9a1: RLP; xor edi, edi ; mov dword ptr fs:[r15], ebp ; call 0x694fc
read: ebp edi rip rsp 
write: edi rflags rsp 
--------------------------------------------------------------------------------
000fa9b0: RLP; mov rbx, qword ptr [rbx + 0x28] ; xor r9d, r9d ; xor r8d, r8d ; mov ecx, 0x2e ; mov rdx, r12 ; mov esi, dword ptr [rbx + 0x10] ; mov rdi, qword ptr [rbx + 0x18] ; mov dword ptr [rsp], 1 ; call 0xfdb6c
read: r12 r8d r9d rip rsp 
write: ecx esi r8d r9d rbx rdi rdx rflags rsp 
--------------------------------------------------------------------------------
000fa9d9: RLP; lea rsi, [rip + 0x3c6e2] ; lea rdi, [rip + 0x39fc6] ; mov edx, 5 ; call 0x2f4bc
read: rip rsp 
write: edx rdi rsi rsp 
--------------------------------------------------------------------------------
000fa9f5: RLP; mov rdi, qword ptr [rsp + 0x18] ; mov rsi, rax ; mov rdx, r12 ; xor eax, eax ; call 0x523bc
read: eax r12 rax rip rsp 
write: eax rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000faa0b: RLP; test eax, eax ; js 0xfa88c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000faa2f: RLP; mov rdi, qword ptr [rsp + 0x120] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000faa40: RLP; jmp 0xfa88c
read: 
write: 
--------------------------------------------------------------------------------
000faa7a: RLP; mov eax, 0xffffffff ; add rsp, 0x1f8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000faac3: RLP; xor r13d, r13d ; shl dword ptr [rsp + 0x48], 1 ; mov rbx, qword ptr [rsp + 0x68] ; jmp 0xfa88c
read: r13d 
write: r13d rbx rflags 
--------------------------------------------------------------------------------
000fab01: RLP; mov edi, dword ptr [rsp + 0x4c] ; call 0x3646c
read: rip rsp 
write: edi rsp 
--------------------------------------------------------------------------------
000fab0e: RLP; mov rdi, qword ptr [rsp + 0x68] ; call 0xd019c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000fab1c: RLP; mov eax, 0xffffffff ; jmp 0xfaa7f
read: 
write: eax 
--------------------------------------------------------------------------------
000fab4f: RLP; mov r12d, eax ; mov eax, dword ptr [rbx + 0x10] ; test r12d, r12d ; mov dword ptr [rsp + 0x5c], eax ; js 0xfaea8
read: eax r12d rflags 
write: eax r12d rflags 
--------------------------------------------------------------------------------
000fab78: RLP; mov ecx, dword ptr [rsp + 0x58] ; lea rdx, [rip + 0x3b2db] ; mov esi, 8 ; mov rdi, rbx ; xor eax, eax ; call 0x5227c
read: eax rbx rip rsp 
write: eax ecx esi rdi rdx rflags rsp 
--------------------------------------------------------------------------------
000fab96: RLP; mov rdx, rbx ; mov ecx, dword ptr [rdx] ; add rdx, 4 ; lea eax, [rcx - 0x1010101] ; not ecx ; and eax, ecx ; and eax, 0x80808080 ; je 0xfab99
read: eax ecx rbx rdx rflags 
write: eax ecx rdx rflags 
--------------------------------------------------------------------------------
000fabe0: RLP; mov rcx, rbx ; mov esi, dword ptr [rcx] ; add rcx, 4 ; lea edx, [rsi - 0x1010101] ; not esi ; and edx, esi ; and edx, 0x80808080 ; je 0xfabe3
read: edx esi rbx rcx rflags 
write: edx esi rcx rflags 
--------------------------------------------------------------------------------
000fac60: RLP; test eax, eax ; jle 0xfb088
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000faca5: RLP; cmp eax, -1 ; je 0xfac8c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000facd8: RLP; test r14d, r14d ; js 0xfb1ac
read: r14d rflags 
write: rflags 
--------------------------------------------------------------------------------
000fad1c: RLP; add rax, 1 ; mov qword ptr [rsp + 0xf8], rax ; mov rax, qword ptr [rsp + 0x38] ; mov rdi, rax ; mov qword ptr [rsp + 0x100], rax ; call 0x856dc
read: rax rip rsp 
write: rax rdi rflags rsp 
--------------------------------------------------------------------------------
000fad41: RLP; add rax, 1 ; mov qword ptr [rsp + 0x108], rax ; mov rax, qword ptr [rsp + 0x40] ; mov rdi, rax ; mov qword ptr [rsp + 0x110], rax ; call 0x856dc
read: rax rip rsp 
write: rax rdi rflags rsp 
--------------------------------------------------------------------------------
000fad66: RLP; add rax, 1 ; mov qword ptr [rsp + 0x118], rax ; jmp 0xfad8d
read: rax 
write: rax rflags 
--------------------------------------------------------------------------------
000fada0: RLP; cmp rax, -1 ; je 0xfad7c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fadc7: RLP; lea rsi, [rip + 0x3be3a] ; mov rdx, rax ; xor edi, edi ; xor eax, eax ; call 0x6bcbc
read: eax edi rax rip rsp 
write: eax edi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000fadde: RLP; jmp 0xfab01
read: 
write: 
--------------------------------------------------------------------------------
000fadf7: RLP; lea rsi, [rip + 0x3c265] ; mov rdx, rax ; xor edi, edi ; xor eax, eax ; call 0x6bcbc
read: eax edi rax rip rsp 
write: eax edi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000fae0e: RLP; mov eax, 0xffffffff ; jmp 0xfaa7f
read: 
write: eax 
--------------------------------------------------------------------------------
000fae55: RLP; lea rdi, [rsp + 0x120] ; mov rsi, rax ; xor eax, eax ; call 0x523bc
read: eax rax rip rsp 
write: eax rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000fae6b: RLP; test eax, eax ; js 0xfae9c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fae8b: RLP; mov rdi, qword ptr [rsp + 0x120] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000fae9c: RLP; mov edi, r12d ; call 0xd711c
read: r12d rip rsp 
write: edi rsp 
--------------------------------------------------------------------------------
000faea8: RLP; mov edi, ebp ; call 0xd711c
read: ebp rip rsp 
write: edi rsp 
--------------------------------------------------------------------------------
000faeb3: RLP; jmp 0xfab01
read: 
write: 
--------------------------------------------------------------------------------
000faeca: RLP; mov edi, dword ptr fs:[r15] ; lea rsi, [rsp + 0x120] ; mov edx, 0xc8 ; call 0x8552c
read: rip rsp 
write: edi edx rsi rsp 
--------------------------------------------------------------------------------
000faee4: RLP; mov rcx, rax ; mov rax, qword ptr [rsp + 0x20] ; lea rsi, [rip + 0x3b84d] ; xor edi, edi ; mov rdx, qword ptr [rax] ; xor eax, eax ; call 0x6bcbc
read: eax edi rax rip rsp 
write: eax edi rax rcx rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000faf03: RLP; mov edi, dword ptr [rsp + 0x4c] ; call 0x3646c
read: rip rsp 
write: edi rsp 
--------------------------------------------------------------------------------
000faf10: RLP; jmp 0xfab1c
read: 
write: 
--------------------------------------------------------------------------------
000faf40: RLP; cmp rax, -1 ; je 0xfaf1c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000faf64: RLP; mov rdi, qword ptr [rsp + 0x68] ; call 0xd019c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000faf72: RLP; mov eax, ebp ; jmp 0xfaa7f
read: ebp 
write: eax 
--------------------------------------------------------------------------------
000faf92: RLP; cmp byte ptr [rsp + 0x5c], 0xa ; je 0xfafb2
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000fafac: RLP; cmp rax, 1 ; je 0xfaf7c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fafce: RLP; jmp 0xfaea8
read: 
write: 
--------------------------------------------------------------------------------
000fafef: RLP; mov dword ptr [rsp + 0x58], 0 ; jmp 0xfacfb
read: 
write: 
--------------------------------------------------------------------------------
000fb03c: RLP; test eax, eax ; js 0xfafb2
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fb05d: RLP; mov rdi, qword ptr [rsp + 0x70] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000fb06b: RLP; jmp 0xfafb2
read: 
write: 
--------------------------------------------------------------------------------
000fb0c4: RLP; mov rdi, r13 ; mov rsi, rax ; xor eax, eax ; call 0x523bc
read: eax r13 rax rip rsp 
write: eax rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000fb0d5: RLP; test eax, eax ; jns 0xfae6f
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fb10a: RLP; lea rdi, [rsp + 0xf0] ; mov rsi, rax ; xor eax, eax ; call 0x523bc
read: eax rax rip rsp 
write: eax rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000fb120: RLP; test eax, eax ; js 0xfafb2
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fb144: RLP; mov rdi, qword ptr [rsp + 0xf0] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000fb155: RLP; jmp 0xfafb2
read: 
write: 
--------------------------------------------------------------------------------
000fb17e: RLP; mov rdi, r13 ; mov rsi, rax ; xor eax, eax ; call 0x523bc
read: eax r13 rax rip rsp 
write: eax rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000fb18f: RLP; test eax, eax ; jns 0xfae6f
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fb1c0: RLP; mov dword ptr [rsp + 0x58], 0 ; jmp 0xfaea8
read: 
write: 
--------------------------------------------------------------------------------
000fb1e9: RLP; lea rsi, [rip + 0x3ba18] ; mov rdx, rax ; xor edi, edi ; xor eax, eax ; call 0x6bcbc
read: eax edi rax rip rsp 
write: eax edi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000fb200: RLP; mov eax, 0xffffffff ; jmp 0xfaa7f
read: 
write: eax 
--------------------------------------------------------------------------------
000fb240: RLP; lea rdi, [rsp + 0x70] ; mov rsi, rax ; xor eax, eax ; mov rdx, rbx ; call 0x523bc
read: eax rax rbx rip rsp 
write: eax rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000fb256: RLP; test eax, eax ; jns 0xfb044
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fb287: RLP; add rsp, 0x18 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000fb2a2: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000fb2f6: RLP; test eax, eax ; jne 0xfb371
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fb331: RLP; test eax, eax ; jne 0xfb30c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fb345: RLP; mov eax, ebx ; add rsp, 0x40 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: ebx rsp 
write: eax r12 r13 r14 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000fb393: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000fb407: RLP; sub rsp, -0x80 ; pop rbx ; ret
read: rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
000fb45c: RLP; add rsp, 0x18 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000fb4b2: RLP; add rsp, 0x18 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000fb520: RLP; lea rdx, [rsp + 0xa0] ; xor eax, eax ; mov ecx, 6 ; movzx ebx, bx ; mov rsi, r12 ; mov byte ptr [rsp + 0x7f], 0 ; mov rdi, rdx ; rep stosq qword ptr [rdi], rax ; mov rdi, qword ptr [r13] ; lea rcx, [rsp + 0x58] ; mov dword ptr [rsp + 0xa4], ebx ; mov dword ptr [rsp + 0xa8], 1 ; mov dword ptr [rsp + 0xa0], 2 ; call 0xd01ec
read: bx eax ebx r12 rax rcx rdi rdx rflags rip rsp 
write: eax ebx ecx rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000fb56f: RLP; test eax, eax ; jne 0xfb9c0
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fb597: RLP; mov rax, qword ptr [rsp + 0x58] ; mov rdi, qword ptr [rax + 0x20] ; call 0x853ec
read: rip rsp 
write: rax rdi rsp 
--------------------------------------------------------------------------------
000fb5a9: RLP; test rax, rax ; mov qword ptr [rip + 0x26f2d9], rax ; je 0xfba63
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fb5e3: RLP; mov rax, qword ptr [rsp + 0x58] ; xor edx, edx ; mov esi, dword ptr [rax + 8] ; mov edi, dword ptr [rax + 4] ; call 0xe483c
read: edx rip rsp 
write: edi edx esi rax rflags rsp 
--------------------------------------------------------------------------------
000fb5f9: RLP; test eax, eax ; mov r15d, eax ; js 0xfb684
read: eax rflags 
write: r15d rflags 
--------------------------------------------------------------------------------
000fb61c: RLP; test eax, eax ; jns 0xfb69c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fb642: RLP; mov edi, ebp ; add ebp, ebp ; call 0xb2b6c
read: ebp rip rsp 
write: ebp edi rflags rsp 
--------------------------------------------------------------------------------
000fb64f: RLP; jmp 0xfb5e3
read: 
write: 
--------------------------------------------------------------------------------
000fb666: RLP; mov eax, 0xffffffff ; add rsp, 0x1d8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000fb694: RLP; mov eax, 0xffffffff ; jmp 0xfb66b
read: 
write: eax 
--------------------------------------------------------------------------------
000fb6bb: RLP; test eax, eax ; mov ebx, eax ; js 0xfbaaf
read: eax rflags 
write: ebx rflags 
--------------------------------------------------------------------------------
000fb6dd: RLP; lea rdx, [rsp + 0x50] ; mov rsi, rbp ; mov edi, ebx ; mov dword ptr [rsp + 0x50], 0x80 ; call 0xe440c
read: ebx rbp rip rsp 
write: edi rdx rsi rsp 
--------------------------------------------------------------------------------
000fb6f8: RLP; test eax, eax ; js 0xfba8f
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fb711: RLP; cmp eax, dword ptr [rsp + 0x50] ; jne 0xfba45
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fb73d: RLP; xor ecx, ecx ; xor edx, edx ; test eax, eax ; mov word ptr [rsp + 0x3e], cx ; je 0xfb9a3
read: cx eax ecx edx rflags 
write: ecx edx rflags 
--------------------------------------------------------------------------------
000fb773: RLP; mov rdx, r12 ; mov ecx, dword ptr [rdx] ; add rdx, 4 ; lea eax, [rcx - 0x1010101] ; not ecx ; and eax, ecx ; and eax, 0x80808080 ; je 0xfb776
read: eax ecx r12 rdx rflags 
write: eax ecx rdx rflags 
--------------------------------------------------------------------------------
000fb7c8: RLP; lea rax, [rsp + 0x54] ; mov dword ptr [rsp + 0x54], 0x80 ; mov qword ptr [rsp + 0x28], rax ; jmp 0xfb7ed
read: rax 
write: rax 
--------------------------------------------------------------------------------
000fb800: RLP; cmp eax, -1 ; je 0xfb7dc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fb814: RLP; mov edx, dword ptr [rsp + 0x28] ; test edx, edx ; js 0xfb9d5
read: edx rflags 
write: edx rflags 
--------------------------------------------------------------------------------
000fb839: RLP; mov rdi, qword ptr [rsp + 0x40] ; add rax, 1 ; mov qword ptr [rsp + 0x158], rax ; mov qword ptr [rsp + 0x160], rdi ; call 0x856dc
read: rax rdi rip rsp 
write: rax rdi rflags rsp 
--------------------------------------------------------------------------------
000fb85b: RLP; add rax, 1 ; mov qword ptr [rsp + 0x168], rax ; mov rax, qword ptr [rsp + 0x20] ; mov rdi, rax ; mov qword ptr [rsp + 0x170], rax ; call 0x856dc
read: rax rip rsp 
write: rax rdi rflags rsp 
--------------------------------------------------------------------------------
000fb880: RLP; add rax, 1 ; mov qword ptr [rsp + 0x178], rax ; jmp 0xfb8a1
read: rax 
write: rax rflags 
--------------------------------------------------------------------------------
000fb8b5: RLP; cmp rax, -1 ; je 0xfb894
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fb8d0: RLP; mov rdi, qword ptr [rsp + 0x40] ; cmp rdi, qword ptr [rsp + 0x18] ; je 0xfb8e5
read: rdi rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
000fb8e5: RLP; mov rsi, qword ptr [rsp + 0x30] ; mov edx, 1 ; mov edi, r15d ; call 0xd6a5c
read: r15d rip rsp 
write: edi edx rsi rsp 
--------------------------------------------------------------------------------
000fb8fb: RLP; cmp rax, 1 ; jne 0xfba7d
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fb91d: RLP; mov eax, r15d ; jmp 0xfb66b
read: r15d 
write: eax 
--------------------------------------------------------------------------------
000fb942: RLP; cmp byte ptr [rsp + 0x80], 0xa ; je 0xfb96b
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000fb965: RLP; cmp rax, 1 ; je 0xfb92c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fb97f: RLP; mov edi, r15d ; call 0xd711c
read: r15d rip rsp 
write: edi rsp 
--------------------------------------------------------------------------------
000fb98b: RLP; mov rdi, qword ptr [rsp + 0x58] ; call 0xd019c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000fb999: RLP; mov eax, 0xffffffff ; jmp 0xfb66b
read: 
write: eax 
--------------------------------------------------------------------------------
000fb9b3: RLP; mov word ptr [rsp + 0x3e], ax ; movzx edx, ax ; jmp 0xfb74e
read: ax 
write: edx 
--------------------------------------------------------------------------------
000fb9d5: RLP; lea rdi, [rip + 0x3b751] ; call 0x694fc
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000fb9e5: RLP; jmp 0xfb97f
read: 
write: 
--------------------------------------------------------------------------------
000fba2c: RLP; lea rax, [rsp + 0x80] ; xor esi, esi ; mov word ptr [rsp + 0x3e], si ; mov qword ptr [rsp + 0x30], rax ; jmp 0xfb823
read: esi rax si 
write: esi rax rflags 
--------------------------------------------------------------------------------
000fba5e: RLP; jmp 0xfb97f
read: 
write: 
--------------------------------------------------------------------------------
000fba73: RLP; mov eax, 0xffffffff ; jmp 0xfb66b
read: 
write: eax 
--------------------------------------------------------------------------------
000fba8a: RLP; jmp 0xfb96b
read: 
write: 
--------------------------------------------------------------------------------
000fba9f: RLP; mov edi, ebx ; call 0xd711c
read: ebx rip rsp 
write: edi rsp 
--------------------------------------------------------------------------------
000fbaaa: RLP; jmp 0xfb97f
read: 
write: 
--------------------------------------------------------------------------------
000fbabb: RLP; mov eax, 0xffffffff ; jmp 0xfb66b
read: 
write: eax 
--------------------------------------------------------------------------------
000fbae4: RLP; add rsp, 0x18 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000fbbbe: RLP; cmp eax, -1 ; jne 0xfbc5e
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fbc06: RLP; test eax, eax ; je 0xfbc84
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fbc9b: RLP; cmp eax, -1 ; je 0xfbbcc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fbcb5: RLP; cmp eax, -1 ; nop dword ptr [rax] ; je 0xfbc7c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fbcd3: RLP; mov rdi, qword ptr [rip + 0x271aea] ; jmp 0xfbb5c
read: 
write: rdi 
--------------------------------------------------------------------------------
000fbce8: RLP; mov rdi, qword ptr [rip + 0x271ad5] ; jmp 0xfbc3e
read: 
write: rdi 
--------------------------------------------------------------------------------
000fbd31: RLP; test rax, rax ; mov r14, rax ; je 0xfc1de
read: rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
000fbd49: RLP; add rax, 0x26 ; mov rsi, r14 ; and rax, 0xfffffffffffffff0 ; sub rsp, rax ; lea r12, [rsp + 0xf] ; and r12, 0xfffffffffffffff0 ; mov rdi, r12 ; call 0x898ec
read: r12 r14 rax rip rsp 
write: r12 rax rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000fbd6c: RLP; movabs rcx, 0x637274656e2e2f ; lea rsi, [rip + 0x38777] ; mov rdi, r12 ; mov qword ptr [rax], rcx ; call 0x6ca9c
read: r12 rcx rip rsp 
write: rcx rdi rsi rsp 
--------------------------------------------------------------------------------
000fbd8c: RLP; test rax, rax ; mov qword ptr [rip + 0x271a2e], rax ; je 0xfc01c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fbdba: RLP; test eax, eax ; js 0xfc04c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fbdda: RLP; xor r15d, r15d ; mov qword ptr [rbp - 0x4d0], rax ; mov r12d, 0xa ; call 0xfbaec
read: r15d rax rip rsp 
write: r12d r15d rflags rsp 
--------------------------------------------------------------------------------
000fbdf3: RLP; test eax, eax ; je 0xfbeb4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fbe17: RLP; cmp eax, 0xa ; nop ; jne 0xfbdea
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fbe35: RLP; test eax, eax ; jne 0xfc0dd
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fbe4d: RLP; cmp eax, 1 ; jbe 0xfbeb4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fbe77: RLP; test eax, eax ; nop dword ptr [rax] ; je 0xfbe44
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fbe9a: RLP; test eax, eax ; jne 0xfbdea
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fbeab: RLP; cmp eax, 1 ; ja 0xfbe52
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fbec6: RLP; lea rsp, [rbp - 0x28] ; mov eax, ebx ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: ebx rsp 
write: eax r12 r13 r14 r15 rbp rbx rsp 
--------------------------------------------------------------------------------
000fbf01: RLP; lea rsi, [rip + 0x271854] ; mov rdi, rax ; xor eax, eax ; call 0xe1f5c
read: eax rax rip rsp 
write: eax rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000fbf16: RLP; jmp 0xfbe44
read: 
write: 
--------------------------------------------------------------------------------
000fbf3d: RLP; mov rdx, r14 ; mov esi, eax ; mov edi, 1 ; call 0xd63ec
read: eax r14 rip rsp 
write: edi esi rdx rsp 
--------------------------------------------------------------------------------
000fbf50: RLP; test eax, eax ; js 0xfbf61
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fbf6a: RLP; test eax, eax ; je 0xfbe44
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fbfd3: RLP; test rax, rax ; mov rdi, rax ; mov rdx, qword ptr [rbp - 0x4d8] ; je 0xfc1e8
read: rax rflags 
write: rdi rdx rflags 
--------------------------------------------------------------------------------
000fbffa: RLP; mov qword ptr [r13], rax ; jmp 0xfbe44
read: rax 
write: 
--------------------------------------------------------------------------------
000fc044: RLP; jmp 0xfbec6
read: 
write: 
--------------------------------------------------------------------------------
000fc0ae: RLP; test rax, rax ; mov rdi, rax ; mov rdx, qword ptr [rbp - 0x4d8] ; je 0xfc1e8
read: rax rflags 
write: rdi rdx rflags 
--------------------------------------------------------------------------------
000fc0d5: RLP; mov qword ptr [rbx], rax ; jmp 0xfbe44
read: rax 
write: 
--------------------------------------------------------------------------------
000fc0f2: RLP; test rax, rax ; je 0xfbdea
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fc115: RLP; test eax, eax ; mov rdx, qword ptr [rbp - 0x4d8] ; jne 0xfbdea
read: eax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
000fc14b: RLP; test eax, eax ; mov rcx, qword ptr [rbp - 0x4d8] ; jne 0xfbdea
read: eax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
000fc18c: RLP; mov rdi, rax ; xor eax, eax ; call 0xe1f5c
read: eax rax rip rsp 
write: eax rdi rflags rsp 
--------------------------------------------------------------------------------
000fc19a: RLP; lea rsi, [rip + 0x3fecb] ; mov edx, 5 ; lea rdi, [rip + 0x38800] ; mov ebx, 0xffffffff ; call 0x2f4bc
read: rip rsp 
write: ebx edx rdi rsi rsp 
--------------------------------------------------------------------------------
000fc1bb: RLP; mov rdi, rax ; xor eax, eax ; call 0xe1f5c
read: eax rax rip rsp 
write: eax rdi rflags rsp 
--------------------------------------------------------------------------------
000fc1c9: RLP; mov rdi, qword ptr [rip + 0x2715f4] ; call 0x6bf5c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000fc1d9: RLP; jmp 0xfbec6
read: 
write: 
--------------------------------------------------------------------------------
000fc22c: RLP; test rax, rax ; je 0xfc23a
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fc23a: RLP; mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
000fc297: RLP; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
000fc2b2: RLP; test eax, eax ; mov rdx, -1 ; jne 0xfc2c0
read: eax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
000fc31e: RLP; mov rsi, r14 ; mov rdi, r15 ; call 0xfc24c
read: r14 r15 rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
000fc32d: RLP; test eax, eax ; jne 0xfc456
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fc355: RLP; mov rsi, rbx ; mov rdi, r13 ; call qword ptr [rsp + 0x10]
read: r13 rbx rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
000fc363: RLP; lea rsi, [rip + 0x3adfa] ; xor r9d, r9d ; xor edx, edx ; mov r8d, eax ; mov rcx, r15 ; mov rdi, r14 ; mov ebp, eax ; mov r12, qword ptr [rbx + 0x50] ; call 0x10506c
read: eax edx r14 r15 r9d rip rsp 
write: ebp edx r12 r8d r9d rcx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000fc387: RLP; test eax, eax ; je 0xfc3ec
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fc397: RLP; lea rdi, [rax + 9] ; lea r14, [rax + 1] ; call 0x1f3cc
read: rip rsp 
write: r14 rdi rsp 
--------------------------------------------------------------------------------
000fc3a8: RLP; test rax, rax ; mov r12, rax ; je 0xfc434
read: rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
000fc3d0: RLP; xor eax, eax ; cmp ebp, 1 ; mov qword ptr [rbx + 0x40], r12 ; sete al ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: eax ebp r12 rflags rsp 
write: al eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000fc408: RLP; test rax, rax ; mov rbp, rax ; je 0xfc33c
read: rax rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
000fc420: RLP; mov rdi, rbx ; call rbp
read: rbp rbx rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000fc429: RLP; jmp 0xfc33c
read: 
write: 
--------------------------------------------------------------------------------
000fc4cb: RLP; lea rdi, [rax + 1] ; mov qword ptr [rbx + 0x30], rdi ; cmp byte ptr [rax + 1], 0 ; mov rax, rbp ; cmovne rax, rdi ; xor esi, esi ; mov qword ptr [rbx + 0x10], rax ; call 0x9023c
read: esi rax rbp rdi rflags rip rsp 
write: esi rax rdi rflags rsp 
--------------------------------------------------------------------------------
000fc4ed: RLP; lea rdi, [rax + 1] ; mov qword ptr [rbx + 0x30], rdi ; cmp byte ptr [rax + 1], 0 ; cmovne rbp, rdi ; xor esi, esi ; mov qword ptr [rbx + 0x18], rbp ; call 0x9023c
read: esi rbp rdi rflags rip rsp 
write: esi rbp rdi rflags rsp 
--------------------------------------------------------------------------------
000fc50c: RLP; add rax, 1 ; mov qword ptr [rbx + 0x30], rax ; mov eax, 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: rax rsp 
write: eax rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000fc55c: RLP; mov rdi, qword ptr [rbp] ; test rdi, rdi ; jne 0xfc54c
read: rdi rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
000fc583: RLP; mov rdi, qword ptr [rbx] ; test rdi, rdi ; jne 0xfc574
read: rdi rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
000fc5bd: RLP; mov rdx, qword ptr [rip + 0x26c8a0] ; add rdx, qword ptr fs:[0] ; mov rsi, rbx ; mov rdi, rbp ; call 0xfc2ec
read: rbp rbx rdx rip rsp 
write: rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000fc5dc: RLP; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000fc630: RLP; add rsp, 0x80 ; mov eax, dword ptr [rip + 0x272373] ; cmp eax, 0 ; jle 0xfc6dc
read: eax rflags rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
000fc678: RLP; test eax, eax ; mov edx, eax ; js 0xfc6c2
read: eax rflags 
write: edx rflags 
--------------------------------------------------------------------------------
000fc6b1: RLP; add rsp, 0x80 ; mov eax, edx ; pop rbx ; ret
read: edx rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
000fc6d5: RLP; mov edx, eax ; jmp 0xfc67e
read: eax 
write: edx 
--------------------------------------------------------------------------------
000fc6fd: RLP; lea rsi, [rbx + 0x48] ; lea rdi, [rbx + 0x40] ; call 0xfc52c
read: rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
000fc70e: RLP; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
000fc760: RLP; add rsp, 0x80 ; lea rdi, [rip + 0x27108e] ; call 0xfc1fc
read: rip rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
000fc777: RLP; lea rsi, [rip + 0x2710c6] ; lea rdi, [rip + 0x2710b7] ; call 0xfc52c
read: rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
000fc78e: RLP; cmp dword ptr [rip + 0x271fdb], 0 ; je 0xfc7a2
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000fc7c1: RLP; add rsp, 0x80 ; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000fc839: RLP; test rax, rax ; mov r13, rax ; je 0xfc9b7
read: rax rflags 
write: r13 rflags 
--------------------------------------------------------------------------------
000fc861: RLP; mov rcx, r14 ; mov rdx, qword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 8] ; mov rdi, rbx ; call r13
read: r13 r14 rbx rsp 
write: rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000fc878: RLP; cmp eax, 2 ; je 0xfc94c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fc8b4: RLP; test eax, eax ; je 0xfc855
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fc8e1: RLP; test eax, eax ; je 0xfc855
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fc8fd: RLP; lea rdi, [rax + 9] ; mov qword ptr [rsp + 0x38], rax ; call 0x1f3cc
read: rax rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000fc90f: RLP; test rax, rax ; mov rbp, rax ; mov rdx, qword ptr [rsp + 0x38] ; je 0xfc9b7
read: rax rflags 
write: rbp rdx rflags 
--------------------------------------------------------------------------------
000fc93e: RLP; mov qword ptr [rbx + 0x48], rbp ; jmp 0xfc855
read: rbp 
write: 
--------------------------------------------------------------------------------
000fc985: RLP; mov rdi, qword ptr [rbx + 0x48] ; test rdi, rdi ; jne 0xfc95c
read: rdi rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
000fc9ab: RLP; test rax, rax ; mov r13, rax ; jne 0xfc855
read: rax rflags 
write: r13 rflags 
--------------------------------------------------------------------------------
000fca5d: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x26c3f9] ; add rax, qword ptr fs:[0] ; lea rcx, [rip + 0x270d81] ; mov r9, r8 ; mov rsi, rbp ; mov r8, r12 ; mov rdi, rbx ; mov qword ptr [rsp], rax ; call 0xfc7dc
read: r12 r8 rax rbp rbx rip rsp 
write: r8 r9 rax rcx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000fca94: RLP; mov edx, eax ; cmp dword ptr [rip + 0x271cd3], 0 ; je 0xfcaaa
read: eax rflags 
write: edx rflags 
--------------------------------------------------------------------------------
000fcac9: RLP; add rsp, 0x80 ; add rsp, 0x10 ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
read: edx rsp 
write: eax r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000fcb81: RLP; test eax, eax ; je 0xfcbf4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fcba4: RLP; test rax, rax ; mov rbp, rax ; je 0xfcbc1
read: rax rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
000fcbb8: RLP; mov rdi, r12 ; call rbp
read: r12 rbp rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000fcbc1: RLP; test r14d, r14d ; jne 0xfce83
read: r14d rflags 
write: rflags 
--------------------------------------------------------------------------------
000fcbec: RLP; test eax, eax ; jne 0xfce4a
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fcc14: RLP; mov rsi, r12 ; mov rdi, qword ptr [rsp + 0x10] ; call qword ptr [rsp + 0x50]
read: r12 rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
000fcc24: RLP; cmp eax, 1 ; mov ebx, eax ; jne 0xfcb8c
read: eax rflags 
write: ebx rflags 
--------------------------------------------------------------------------------
000fcc47: RLP; test rax, rax ; mov rbp, rax ; je 0xfcb8c
read: rax rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
000fcc70: RLP; mov rcx, r14 ; mov edx, 0x400 ; mov rsi, qword ptr [rsp] ; mov rdi, r12 ; call rbp
read: r12 r14 rbp rsp 
write: edx rcx rdi rsi rsp 
--------------------------------------------------------------------------------
000fcc85: RLP; cmp eax, 1 ; jne 0xfce42
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fccb4: RLP; test eax, eax ; jne 0xfcc64
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fccd5: RLP; test eax, eax ; jne 0xfcc64
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fccf6: RLP; test eax, eax ; jne 0xfcc64
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fcd44: RLP; test eax, eax ; js 0xfcb24
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fcd8c: RLP; test eax, eax ; je 0xfcc64
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fcdc1: RLP; test eax, eax ; je 0xfcc64
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fcde2: RLP; test eax, eax ; je 0xfcc64
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fcdf6: RLP; lea rdx, [rax + 1] ; lea rdi, [rax + 9] ; mov qword ptr [rsp + 0x48], rdx ; call 0x1f3cc
read: rdx rip rsp 
write: rdi rdx rsp 
--------------------------------------------------------------------------------
000fce0c: RLP; test rax, rax ; mov rbx, rax ; je 0xfcebc
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
000fce35: RLP; mov qword ptr [rsp + 0xa8], rbx ; jmp 0xfcc64
read: rbx 
write: 
--------------------------------------------------------------------------------
000fcea2: RLP; mov eax, dword ptr [rsp] ; jmp 0xfcd4c
read: 
write: eax 
--------------------------------------------------------------------------------
000fcf02: RLP; mov qword ptr [rip + 0x26d98b], rax ; add rsp, 8 ; ret
read: rax rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000fcf65: RLP; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000fcf99: RLP; mov rcx, qword ptr [rip + 0x26d8f4] ; mov rdx, qword ptr [rsp + 8] ; jmp 0xfcf47
read: 
write: rcx rdx 
--------------------------------------------------------------------------------
000fcfbf: RLP; mov dword ptr [rip + 0x27088f], 2 ; mov qword ptr [rip + 0x26d8c4], rax ; mov rcx, rax ; mov rdx, qword ptr [rsp + 8] ; jmp 0xfcf47
read: rax 
write: rcx rdx 
--------------------------------------------------------------------------------
000fd040: RLP; add rsp, 0x80 ; lea r8, [rip + 0x27081e] ; lea rcx, [rip + 0x27080f] ; lea rdx, [rip + 0x270818] ; lea rsi, [rip + 0x93c9] ; lea rdi, [rip + 0x3a161] ; mov dword ptr [rsp + 8], 0 ; mov qword ptr [rsp], 0 ; xor r9d, r9d ; call 0x1053dc
read: r9d rip rsp 
write: r8 r9d rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000fd086: RLP; mov rax, qword ptr [rip + 0x26bdd7] ; mov edx, dword ptr fs:[rax] ; cmp dword ptr [rip + 0x2716d9], 0 ; je 0xfd0a4
read: rflags 
write: edx rax rflags 
--------------------------------------------------------------------------------
000fd0c3: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x26bd93] ; mov dword ptr fs:[rax], edx ; add rsp, 0x18 ; ret
read: edx rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000fd12e: RLP; add rsp, 0x80 ; lea r8, [rip + 0x270730] ; lea rcx, [rip + 0x270721] ; lea rdx, [rip + 0x27072a] ; lea rsi, [rip + 0x92db] ; lea rdi, [rip + 0x3a07f] ; xor r9d, r9d ; call 0x10550c
read: r9d rip rsp 
write: r8 r9d rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000fd164: RLP; mov rax, qword ptr [rip + 0x26bcf9] ; mov edx, dword ptr fs:[rax] ; cmp dword ptr [rip + 0x2715fb], 0 ; je 0xfd182
read: rflags 
write: edx rax rflags 
--------------------------------------------------------------------------------
000fd1a1: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x26bcb5] ; mov dword ptr fs:[rax], edx ; add rsp, 8 ; ret
read: edx rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000fd20a: RLP; add rsp, 0x80 ; lea r8, [rip + 0x27064c] ; mov qword ptr [rsp + 0x20], rdx ; mov qword ptr [rsp + 0x10], r9 ; lea rcx, [rip + 0x27064b] ; lea r9, [rip + 0x27063c] ; lea rdx, [rip + 0x91f5] ; lea rsi, [rip + 0x39f8d] ; lea rdi, [rip + 0x39f9e] ; mov qword ptr [rsp + 0x30], 0 ; mov qword ptr [rsp + 0x28], rbx ; mov qword ptr [rsp + 0x18], r10 ; mov dword ptr [rsp + 8], 0 ; mov qword ptr [rsp], 0 ; call 0x1055fc
read: r10 r9 rbx rdx rip rsp 
write: r8 r9 rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000fd271: RLP; mov edx, eax ; mov rax, qword ptr [rip + 0x26bbea] ; mov esi, dword ptr fs:[rax] ; cmp dword ptr [rip + 0x2714ec], 0 ; je 0xfd291
read: eax rflags 
write: edx esi rax rflags 
--------------------------------------------------------------------------------
000fd2b0: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x26bba6] ; mov dword ptr fs:[rax], esi ; add rsp, 0x40 ; mov eax, edx ; pop rbx ; ret
read: edx esi rsp 
write: eax rax rbx rflags rsp 
--------------------------------------------------------------------------------
000fd310: RLP; add rsp, 0x80 ; lea r8, [rip + 0x27055e] ; lea rdx, [rip + 0x26d577] ; lea rsi, [rip + 0x270570] ; lea rdi, [rip - 0x177] ; xor r9d, r9d ; mov ecx, 0x400 ; call 0x10522c
read: r9d rip rsp 
write: ecx r8 r9d rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000fd344: RLP; mov rdx, rax ; mov rax, qword ptr [rip + 0x26bb16] ; mov esi, dword ptr fs:[rax] ; cmp dword ptr [rip + 0x271418], 0 ; je 0xfd365
read: rax rflags 
write: esi rax rdx rflags 
--------------------------------------------------------------------------------
000fd384: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x26bad2] ; mov dword ptr fs:[rax], esi ; mov rax, rdx ; add rsp, 8 ; ret
read: esi rdx rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
000fd3f9: RLP; add rsp, 0x80 ; mov rdx, qword ptr [rip + 0x26d49d] ; mov rcx, qword ptr [rip + 0x2704ee] ; test rdx, rdx ; je 0xfd50c
read: rdx rflags rsp 
write: rcx rdx rflags rsp 
--------------------------------------------------------------------------------
000fd447: RLP; cmp eax, 0x22 ; jne 0xfd4fc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fd478: RLP; test rax, rax ; jne 0xfd424
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fd489: RLP; mov rax, qword ptr [rip + 0x26b9d4] ; mov qword ptr [rip + 0x26d409], 0 ; mov dword ptr fs:[rax], 0xc ; mov qword ptr [rsp + 8], 0 ; cmp dword ptr [rip + 0x2712be], 0 ; je 0xfd4bf
read: rflags 
write: rax rflags 
--------------------------------------------------------------------------------
000fd4de: RLP; add rsp, 0x80 ; mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rsp 
write: r12 r13 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000fd525: RLP; test rax, rax ; mov qword ptr [rip + 0x26d375], rax ; je 0xfd4a2
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fd5fa: RLP; mov r8, r14 ; mov rcx, r13 ; mov rdx, r12 ; mov rsi, rbx ; mov rdi, rbp ; call qword ptr [rsp + 0x20]
read: r12 r13 r14 rbp rbx rsp 
write: r8 rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
000fd611: RLP; cmp eax, -2 ; mov r15d, eax ; jne 0xfd628
read: eax rflags 
write: r15d rflags 
--------------------------------------------------------------------------------
000fd649: RLP; test eax, eax ; je 0xfd5ec
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fd700: RLP; test eax, eax ; jne 0xfd74c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fd7db: RLP; add rsp, 0x80 ; mov eax, dword ptr [rip + 0x27013c] ; test eax, eax ; je 0xfd84c
read: eax rflags rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
000fd81f: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x26d07f] ; lea rsp, [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: rsp 
write: r12 r13 r14 r15 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000fd8f6: RLP; test eax, eax ; jne 0xfd88c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fd914: RLP; test rax, rax ; je 0xfd93c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fd926: RLP; mov qword ptr [rip + 0x26cf7f], rax ; jmp 0xfd7ec
read: rax 
write: 
--------------------------------------------------------------------------------
000fd992: RLP; test eax, eax ; jne 0xfd94c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fd9a7: RLP; test rax, rax ; jne 0xfd919
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fda0c: RLP; mov r14, rax ; jmp 0xfda63
read: rax 
write: r14 
--------------------------------------------------------------------------------
000fda7f: RLP; test eax, eax ; jne 0xfda14
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fda9d: RLP; test rax, rax ; jne 0xfd919
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fdb38: RLP; test eax, eax ; jne 0xfdac4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fdb5a: RLP; test rax, rax ; jne 0xfd919
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fdcb6: RLP; nop word ptr [rax + rax] ; cmp byte ptr [rbp - 0x205], 0 ; je 0xfdcd4
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
000fdd57: RLP; jmp 0xfdc5c
read: 
write: 
--------------------------------------------------------------------------------
000fde2d: RLP; cmp eax, 0x22 ; je 0xfddbc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fde6d: RLP; jmp 0xfdcbc
read: 
write: 
--------------------------------------------------------------------------------
000fdea9: RLP; add eax, 1 ; cmp ebx, eax ; jae 0xfdcbc
read: eax ebx rflags 
write: eax rflags 
--------------------------------------------------------------------------------
000fdfac: RLP; test eax, eax ; jne 0xfdf2c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fe02c: RLP; test eax, eax ; mov r10d, dword ptr [rbp - 0x210] ; je 0xfe227
read: eax rflags 
write: r10d rflags 
--------------------------------------------------------------------------------
000fe0a8: RLP; mov r10d, dword ptr [rbp - 0x210] ; mov r14, rax ; test r14, r14 ; jne 0xfdc62
read: r14 rax rflags 
write: r10d r14 rflags 
--------------------------------------------------------------------------------
000fe0e6: RLP; test eax, eax ; jne 0xfdd35
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fe10b: RLP; mov r10d, 0x400 ; jmp 0xfdc62
read: 
write: r10d 
--------------------------------------------------------------------------------
000fe1f4: RLP; test eax, eax ; jne 0xfe16c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fe25e: RLP; lea rdx, [rax + 1] ; add rax, 0x1f ; mov r8, qword ptr [rbp - 0x218] ; and rax, 0xfffffffffffffff0 ; sub rsp, rax ; lea rdi, [rsp + 0x1f] ; mov rsi, r8 ; and rdi, 0xfffffffffffffff0 ; call 0x8e3dc
read: r8 rax rdi rip rsp 
write: r8 rax rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
000fe289: RLP; mov rcx, qword ptr [rbp - 0x210] ; mov r8, qword ptr [rbp - 0x218] ; mov qword ptr [rcx], rax ; mov rdi, r8 ; call 0x1f46c
read: r8 rax rip rsp 
write: r8 rcx rdi rsp 
--------------------------------------------------------------------------------
000fe2a6: RLP; mov rax, qword ptr [rbp - 0x1e8] ; mov r10d, dword ptr [rbp - 0x21c] ; mov r14, qword ptr [rax] ; mov rdi, r14 ; mov dword ptr [rbp - 0x210], r10d ; call 0x856dc
read: r10d r14 rip rsp 
write: r10d r14 rax rdi rsp 
--------------------------------------------------------------------------------
000fe2ca: RLP; lea rdx, [rax + 1] ; mov eax, dword ptr [rbp - 0x1f4] ; cmp rdx, rax ; ja 0xfe0bc
read: rax rdx rflags 
write: eax rdx rflags 
--------------------------------------------------------------------------------
000fe2ec: RLP; mov r10d, dword ptr [rbp - 0x210] ; jmp 0xfdc62
read: 
write: r10d 
--------------------------------------------------------------------------------
000fe308: RLP; test rax, rax ; mov r10d, dword ptr [rbp - 0x210] ; je 0xfe35b
read: rax rflags 
write: r10d rflags 
--------------------------------------------------------------------------------
000fe334: RLP; test rax, rax ; mov r10d, dword ptr [rbp - 0x210] ; je 0xfdff0
read: rax rflags 
write: r10d rflags 
--------------------------------------------------------------------------------
000fe382: RLP; mov ecx, dword ptr [r15 + 0x18] ; mov r14, rax ; mov r10d, dword ptr [rbp - 0x210] ; test ecx, ecx ; je 0xfe0b2
read: ecx rax rflags 
write: ecx r10d r14 rflags 
--------------------------------------------------------------------------------
000fe3ba: RLP; mov r8, rax ; mov eax, dword ptr [r15 + 8] ; mov byte ptr [rbp - 0x1c0], 0x25 ; mov byte ptr [rbp - 0x1bf], 0 ; mov r10d, dword ptr [rbp - 0x210] ; mov ecx, dword ptr [rbp - 0x21c] ; and eax, 0xc0ff ; cmp eax, 0x80fe ; je 0xfe4d8
read: eax rax rflags 
write: eax ecx r10d r8 rflags 
--------------------------------------------------------------------------------
000fe435: RLP; mov r10d, dword ptr [rbp - 0x21c] ; mov r8, qword ptr [rbp - 0x228] ; add eax, 1 ; cdqe ; lea rdx, [rax + r8 + 1] ; cmp qword ptr [rbp - 0x218], rdx ; jb 0xfe0bc
read: eax rdx rflags 
write: eax r10d r8 rax rdx rflags 
--------------------------------------------------------------------------------
000fe47a: RLP; mov r10d, dword ptr [rbp - 0x218] ; jmp 0xfe0b2
read: 
write: r10d 
--------------------------------------------------------------------------------
000fe509: RLP; test rax, rax ; mov ecx, dword ptr [rbp - 0x21c] ; mov r10d, dword ptr [rbp - 0x228] ; mov r8, qword ptr [rbp - 0x230] ; je 0xfe405
read: rax rflags 
write: ecx r10d r8 rflags 
--------------------------------------------------------------------------------
000fe564: RLP; test eax, eax ; mov ebx, eax ; js 0xfe5dc
read: eax rflags 
write: ebx rflags 
--------------------------------------------------------------------------------
000fe57e: RLP; xor eax, eax ; mov rdx, rsp ; mov esi, 0x8933 ; mov edi, ebx ; call 0xdc63c
read: eax ebx rip rsp 
write: eax edi esi rdx rflags rsp 
--------------------------------------------------------------------------------
000fe593: RLP; test eax, eax ; js 0xfe5b4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fe611: RLP; mov rdi, qword ptr [rbx + 8] ; test rdi, rdi ; jne 0xfe604
read: rdi rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
000fe62c: RLP; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000fe689: RLP; test eax, eax ; js 0xfe907
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fe6a5: RLP; test eax, eax ; js 0xfe88f
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fe750: RLP; test rax, rax ; mov r15, rax ; je 0xfe8f4
read: rax rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
000fe89b: RLP; mov rdi, r12 ; call 0xfed8c
read: r12 rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000fe8a7: RLP; add rsp, 0x38 ; mov rax, r15 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: r15 rsp 
write: r12 r13 r14 r15 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000fe8cf: RLP; mov r8, qword ptr [rsp + 8] ; test rax, rax ; mov qword ptr [r8 + 8], rax ; jne 0xfe859
read: rax rflags 
write: r8 rflags 
--------------------------------------------------------------------------------
000fe8f4: RLP; mov rax, qword ptr [rip + 0x26a569] ; xor r15d, r15d ; mov dword ptr fs:[rax], 0x69 ; jmp 0xfe88f
read: r15d 
write: r15d rax rflags 
--------------------------------------------------------------------------------
000fe926: RLP; test rax, rax ; mov r15, rax ; je 0xfe8f4
read: rax rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
000fe956: RLP; test eax, eax ; mov ebx, eax ; js 0xfe9c0
read: eax rflags 
write: ebx rflags 
--------------------------------------------------------------------------------
000fe975: RLP; movsxd rdi, ebx ; mov edx, eax ; mov eax, 3 ; syscall ; test edx, edx ; js 0xfe9ac
read: eax ebx edx rflags 
write: eax edx rdi rflags 
--------------------------------------------------------------------------------
000fe999: RLP; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
read: rsp 
write: r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000fea6b: RLP; test rbx, rbx ; jne 0xfea5c
read: rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
000feb4b: RLP; cmp rax, -1 ; je 0xfeb1c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000febbd: RLP; cmp rax, -1 ; mov r8, rax ; je 0xfeb9c
read: rax rflags 
write: r8 rflags 
--------------------------------------------------------------------------------
000fecd6: RLP; test rax, rax ; je 0xfec7c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fed03: RLP; mov r9, qword ptr [rbp - 0xa0] ; cmp qword ptr [rbx + 0x10], 0 ; mov r8, qword ptr [rbp - 0x98] ; mov ecx, dword ptr [rbp - 0xa4] ; mov qword ptr [r9 + 8], rax ; mov eax, dword ptr [rbx + 8] ; mov qword ptr [r9 + 0x10], r8 ; mov dword ptr [r9 + 0x18], eax ; je 0xfed3d
read: eax r8 rax rflags 
write: eax ecx r8 r9 rflags 
--------------------------------------------------------------------------------
000fed54: RLP; mov esi, dword ptr [rbp - 0x98] ; mov dword ptr [rbx + 8], eax ; jmp 0xfeabe
read: eax 
write: esi 
--------------------------------------------------------------------------------
000fedbe: RLP; test eax, eax ; mov dword ptr [rbx], eax ; js 0xfee2c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fedf7: RLP; test eax, eax ; js 0xfee3c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fee16: RLP; test eax, eax ; js 0xfee3c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fee48: RLP; mov eax, 0xffffffff ; jmp 0xfee23
read: 
write: eax 
--------------------------------------------------------------------------------
000feebe: RLP; test eax, eax ; js 0xff9ed
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000feed7: RLP; test eax, eax ; js 0xff057
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000feef5: RLP; test eax, eax ; js 0xff057
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fefc7: RLP; mov rdi, r14 ; call 0xfed8c
read: r14 rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
000fefd3: RLP; mov eax, ebx ; lea rsp, [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: ebx rsp 
write: eax r12 r13 r14 r15 rbp rbx rsp 
--------------------------------------------------------------------------------
000ff09e: RLP; test rax, rax ; mov r14, rax ; mov qword ptr [rbp - 0x60], rax ; je 0xff057
read: rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
000ff0f1: RLP; mov qword ptr [rbp - 0x88], rbx ; mov dword ptr [rbp - 0x78], 0 ; nop dword ptr [rax + rax] ; mov r8, qword ptr [r12 + 8] ; mov rbx, qword ptr [r12 + 0x10] ; test r8, r8 ; je 0xff3d7
read: r8 rbx rflags 
write: r8 rbx rflags 
--------------------------------------------------------------------------------
000ff1dd: RLP; cmp eax, -1 ; je 0xffa23
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ff492: RLP; mov r9, qword ptr [rbp - 0x58] ; mov byte ptr [rax], 0 ; jmp 0xff2fc
read: 
write: r9 
--------------------------------------------------------------------------------
000ff5ab: RLP; cmp eax, -1 ; mov r8, qword ptr [rbp - 0x58] ; je 0xffa23
read: eax rflags 
write: r8 rflags 
--------------------------------------------------------------------------------
000ff677: RLP; mov rbx, qword ptr [rbp - 0x58] ; nop ; movzx eax, word ptr [r15] ; add eax, 3 ; and eax, 0x1fffc ; sub r12, rax ; add r15, rax ; cmp r12, 3 ; jbe 0xff7be
read: eax r12 r15 rax rflags 
write: eax r12 r15 rbx rflags 
--------------------------------------------------------------------------------
000ff6f6: RLP; mov rcx, qword ptr [rbp - 0x58] ; mov byte ptr [r14 + 0x43], cl ; mov eax, dword ptr [r13 + 0x14] ; mov dword ptr [r14 + 0x3c], eax ; movzx eax, word ptr [r13 + 0x12] ; mov word ptr [r14 + 0x40], ax ; lea rax, [r14 + 0x38] ; mov qword ptr [r14 + 0x18], rax ; jmp 0xff67c
read: ax cl eax rax 
write: eax rax rcx 
--------------------------------------------------------------------------------
000ff74c: RLP; mov byte ptr [rax], 0 ; jmp 0xff67c
read: 
write: 
--------------------------------------------------------------------------------
000ff78b: RLP; mov rcx, qword ptr [rbp - 0x58] ; mov byte ptr [r14 + 0x8b], cl ; mov eax, dword ptr [r13 + 0x14] ; mov dword ptr [r14 + 0x84], eax ; movzx eax, word ptr [r13 + 0x12] ; mov word ptr [r14 + 0x88], ax ; mov rax, qword ptr [rbp - 0xa8] ; mov qword ptr [r14 + 0x28], rax ; jmp 0xff67c
read: ax cl eax rax 
write: eax rax rcx 
--------------------------------------------------------------------------------
000ff89f: RLP; mov r9, qword ptr [rbp - 0x58] ; jmp 0xff2fc
read: 
write: r9 
--------------------------------------------------------------------------------
000ff8c6: RLP; mov r9, qword ptr [rbp - 0x58] ; jmp 0xff2fc
read: 
write: r9 
--------------------------------------------------------------------------------
000ff919: RLP; mov r9, qword ptr [rbp - 0x58] ; jmp 0xff2fc
read: 
write: r9 
--------------------------------------------------------------------------------
000ff9cd: RLP; cmp eax, -1 ; je 0xffa23
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ffa35: RLP; jmp 0xfefb7
read: 
write: 
--------------------------------------------------------------------------------
000ffa58: RLP; cmp eax, -0xb ; je 0xffa4c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ffa7d: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000ffadf: RLP; mov rax, qword ptr [rbp] ; add rax, rbx ; mov qword ptr [rbp], rax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: rax rbx rsp 
write: rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000ffb4f: RLP; mov rbp, qword ptr [rbx] ; movsxd rsi, r12d ; mov rdi, rbx ; add rsi, rbp ; mov qword ptr [rbx], rsi ; neg esi ; and esi, 7 ; call 0xffa8c
read: esi r12d rbp rbx rip rsi rsp 
write: esi rbp rdi rflags rsi rsp 
--------------------------------------------------------------------------------
000ffb6c: RLP; mov rdx, qword ptr [rbx] ; test dl, 7 ; jne 0xffba8
read: dl rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
000ffc95: RLP; test rax, rax ; je 0xffcbc
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ffcac: RLP; xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: eax rsp 
write: eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000ffcdd: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
000ffd50: RLP; test eax, eax ; jne 0xffd84
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ffd6b: RLP; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
read: rsp 
write: r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
000ffe2a: RLP; test eax, eax ; je 0xffe3c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000ffe53: RLP; test eax, eax ; je 0xffe34
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
000fff2b: RLP; test eax, eax ; mov ecx, eax ; jne 0xfff6b
read: eax rflags 
write: ecx rflags 
--------------------------------------------------------------------------------
000fff61: RLP; mov eax, dword ptr [rbx + 0xc] ; mov ecx, dword ptr [rbp - 0x44] ; mov dword ptr [r12], eax ; test r13d, r13d ; mov eax, ecx ; je 0xfff84
read: eax ecx r13d rflags 
write: eax ecx rflags 
--------------------------------------------------------------------------------
000fff93: RLP; mov eax, dword ptr [rbp - 0x44] ; lea rsp, [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: rsp 
write: eax r12 r13 r14 r15 rbp rbx rsp 
--------------------------------------------------------------------------------
000fffba: RLP; test eax, eax ; mov r10d, dword ptr [rbp - 0x44] ; mov esi, dword ptr [rbp - 0x48] ; mov edx, dword ptr [rbp - 0x4c] ; jne 0xffee7
read: eax rflags 
write: edx esi r10d rflags 
--------------------------------------------------------------------------------
000fffe2: RLP; test rax, rax ; mov rbx, rax ; je 0xffffc
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
00100074: RLP; mov r8d, r12d ; mov rcx, rbx ; mov edx, 0x29 ; xor esi, esi ; mov edi, r13d ; call 0xe47dc
read: esi r12d r13d rbx rip rsp 
write: edi edx esi r8d rcx rflags rsp 
--------------------------------------------------------------------------------
0010008d: RLP; lea rsp, [rbp - 0x20] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
read: rsp 
write: r12 r13 r14 rbp rbx rsp 
--------------------------------------------------------------------------------
001000b4: RLP; test eax, eax ; mov edx, dword ptr [rbp - 0x24] ; mov ecx, dword ptr [rbp - 0x28] ; mov r8d, dword ptr [rbp - 0x2c] ; mov rsi, qword ptr [rbp - 0x38] ; jne 0x10003c
read: eax rflags 
write: ecx edx r8d rflags rsi 
--------------------------------------------------------------------------------
001000e4: RLP; test rax, rax ; mov rbx, rax ; mov edx, dword ptr [rbp - 0x24] ; mov ecx, dword ptr [rbp - 0x28] ; mov r8d, dword ptr [rbp - 0x2c] ; mov rsi, qword ptr [rbp - 0x38] ; je 0x100151
read: rax rflags 
write: ecx edx r8d rbx rflags rsi 
--------------------------------------------------------------------------------
00100119: RLP; mov r8d, r12d ; mov rcx, rbx ; mov edi, r13d ; mov edx, 0x29 ; xor esi, esi ; call 0xe47dc
read: esi r12d r13d rbx rip rsp 
write: edi edx esi r8d rcx rflags rsp 
--------------------------------------------------------------------------------
00100132: RLP; mov rdi, rbx ; mov r12d, eax ; call 0x1f46c
read: eax rbx rip rsp 
write: r12d rdi rsp 
--------------------------------------------------------------------------------
00100141: RLP; lea rsp, [rbp - 0x20] ; mov eax, r12d ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
read: r12d rsp 
write: eax r12 r13 r14 rbp rbx rsp 
--------------------------------------------------------------------------------
00100250: RLP; mov eax, dword ptr [r12] ; mov ecx, dword ptr [rbp - 0x44] ; movzx edi, word ptr [r15] ; mov dword ptr [rbx + 0x8c], eax ; mov esi, ecx ; call 0x10015c
read: eax ecx rip rsp 
write: eax ecx edi esi rsp 
--------------------------------------------------------------------------------
0010026c: RLP; cmp eax, -1 ; je 0x10032c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010028f: RLP; test eax, eax ; mov r14d, eax ; je 0x1002b4
read: eax rflags 
write: r14d rflags 
--------------------------------------------------------------------------------
001002ee: RLP; mov eax, dword ptr [rbx + 0x8c] ; test r13d, r13d ; mov dword ptr [r12], eax ; mov eax, r14d ; jne 0x10029e
read: eax r13d r14d rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00100310: RLP; mov eax, dword ptr [rbp - 0x44] ; lea rsp, [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: rsp 
write: eax r12 r13 r14 r15 rbp rbx rsp 
--------------------------------------------------------------------------------
00100354: RLP; test eax, eax ; mov esi, dword ptr [rbp - 0x44] ; mov ecx, dword ptr [rbp - 0x48] ; jne 0x10021b
read: eax rflags 
write: ecx esi rflags 
--------------------------------------------------------------------------------
00100374: RLP; test rax, rax ; mov rbx, rax ; je 0x10038a
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
00100410: RLP; mov r8d, dword ptr [rbp - 0x38] ; mov r9d, dword ptr [rbp - 0x3c] ; lea rdi, [rbx + 0x90] ; mov rsi, qword ptr [rbp + 0x10] ; mov rdx, r12 ; mov dword ptr [rbx + 0x88], r8d ; mov dword ptr [rbx + 0x8c], r9d ; call 0x8e3dc
read: r12 r8d r9d rip rsp 
write: r8d r9d rdi rdx rsi rsp 
--------------------------------------------------------------------------------
0010043d: RLP; mov ecx, dword ptr [rbp - 0x34] ; movzx edi, word ptr [r15] ; mov esi, ecx ; call 0x10015c
read: ecx rip rsp 
write: ecx edi esi rsp 
--------------------------------------------------------------------------------
0010044f: RLP; cmp eax, -1 ; je 0x100484
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010046d: RLP; test r14d, r14d ; je 0x100497
read: r14d rflags 
write: rflags 
--------------------------------------------------------------------------------
001004a6: RLP; mov eax, dword ptr [rbp - 0x34] ; lea rsp, [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: rsp 
write: eax r12 r13 r14 r15 rbp rbx rsp 
--------------------------------------------------------------------------------
001004d2: RLP; test eax, eax ; mov esi, dword ptr [rbp - 0x34] ; mov ecx, dword ptr [rbp - 0x38] ; mov r8d, dword ptr [rbp - 0x3c] ; mov r9d, dword ptr [rbp - 0x44] ; jne 0x1003d3
read: eax rflags 
write: ecx esi r8d r9d rflags 
--------------------------------------------------------------------------------
00100502: RLP; test rax, rax ; mov rbx, rax ; je 0x100520
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
0010055e: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00100646: RLP; movsxd rax, ebp ; add r13, rax ; mov rax, qword ptr [rsp + 0x30] ; mov byte ptr [r13], r14b ; mov byte ptr [r13 + 1], bl ; add r13, 2 ; mov qword ptr [rax], r13 ; lea eax, [rbp + rbx + 2] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: bl ebp r13 r14b rax rsp 
write: eax r12 r13 r14 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
001006c4: RLP; mov eax, ebx ; pop rbx ; ret
read: ebx rsp 
write: eax rbx rsp 
--------------------------------------------------------------------------------
001006fe: RLP; add rsp, 8 ; lea eax, [rbx + rbp] ; pop rbx ; pop rbp ; ret
read: rsp 
write: eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00100831: RLP; add rsp, 8 ; lea eax, [rbx + rbp] ; pop rbx ; pop rbp ; ret
read: rsp 
write: eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010089e: RLP; mov rax, rbp ; mov byte ptr [rbx + 2], 0 ; shl rax, 4 ; shr rax, 3 ; mov byte ptr [rbx + 1], al ; mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: al rax rbp rbx rsp 
write: rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010094d: RLP; movzx edi, byte ptr [rbx + 1] ; shl edi, 3 ; movsxd rdi, edi ; shr rdi, 4 ; mov r12d, edi ; sar r12d, 1 ; je 0x1009b8
read: edi r12d rdi rflags 
write: edi r12d rdi rflags 
--------------------------------------------------------------------------------
00100ac2: RLP; xor r11d, r11d ; mov qword ptr [rbp - 0xb0], 0 ; mov dword ptr [rbp - 0x88], eax ; mov word ptr [rbp - 0x7f], r11w ; mov byte ptr [rbp - 0x80], 0 ; mov byte ptr [rbx + 0x13], 0 ; mov dword ptr [rbp - 0xa8], 0 ; mov word ptr [rbp - 0xb0], r13w ; mov r13, rsp ; sub rsp, 0x1010 ; lea rax, [rsp + 0xf] ; mov qword ptr [rbp - 0xb8], rax ; and qword ptr [rbp - 0xb8], 0xfffffffffffffff0 ; sub r13, rsp ; mov rax, qword ptr [rbp - 0xb8]
read: eax r11d r11w r13 r13w rax rsp 
write: r11d r13 rax rflags rsp 
--------------------------------------------------------------------------------
00100b7c: RLP; cmp rax, -1 ; je 0x100b4c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00100c2e: RLP; cmp rax, -1 ; je 0x100c0c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00100ecb: RLP; jmp 0x100eac
read: 
write: 
--------------------------------------------------------------------------------
00100f3e: RLP; test rax, rax ; mov r12, rax ; je 0x100ea5
read: rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
00100f53: RLP; mov dword ptr [r12], eax ; movzx eax, byte ptr [rbp - 0xd2] ; mov rdi, r15 ; mov qword ptr [r12 + 0x10], rbx ; mov dword ptr [r12 + 4], 2 ; mov byte ptr [r12 + 9], 1 ; mov byte ptr [r12 + 8], al ; lea rax, [rbx + rbx*2 - 3] ; lea rbx, [r12 + rax*8 + 0x18] ; jmp 0x100f98
read: al eax r15 rbx 
write: eax rax rbx rdi 
--------------------------------------------------------------------------------
00100fc1: RLP; jmp 0x100f8c
read: 
write: 
--------------------------------------------------------------------------------
00100ff7: RLP; test eax, eax ; mov r9, qword ptr [rbp - 0xe8] ; mov r8d, dword ptr [rbp - 0xd8] ; mov ecx, dword ptr [rbp - 0xec] ; mov rdx, qword ptr [rbp - 0xf8] ; jne 0x100e14
read: eax rflags 
write: ecx r8d r9 rdx rflags 
--------------------------------------------------------------------------------
00101043: RLP; test rax, rax ; mov r9, qword ptr [rbp - 0xe8] ; mov r8d, dword ptr [rbp - 0xd8] ; mov ecx, dword ptr [rbp - 0xec] ; mov rdx, qword ptr [rbp - 0xf8] ; je 0x100e9c
read: rax rflags 
write: ecx r8d r9 rdx rflags 
--------------------------------------------------------------------------------
001010e4: RLP; add rsp, 0x80 ; cmp qword ptr [rip + 0x26c841], 0 ; je 0x101106
read: rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
001010fe: RLP; test eax, eax ; jne 0x101224
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010111b: RLP; test eax, eax ; mov r14d, eax ; js 0x1012c3
read: eax rflags 
write: r14d rflags 
--------------------------------------------------------------------------------
00101162: RLP; test eax, eax ; je 0x101244
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001011c1: RLP; add rsp, 0x80 ; test r8, r8 ; je 0x10127c
read: r8 rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00101258: RLP; test eax, eax ; jne 0x10116a
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00101270: RLP; mov r8, rax ; jmp 0x10116d
read: rax 
write: r8 
--------------------------------------------------------------------------------
001012a8: RLP; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00101340: RLP; add rsp, 0x80 ; mov eax, dword ptr [rdx - 0x14] ; test eax, eax ; je 0x101394
read: eax rflags rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
00101381: RLP; add rsp, 0x80 ; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
001013a0: RLP; jmp 0x10134e
read: 
write: 
--------------------------------------------------------------------------------
001013f7: RLP; mov edi, 0x10 ; test eax, eax ; mov qword ptr [rbp - 0xb0], 0 ; mov ebx, eax ; mov dword ptr [rbp - 0xa8], 0 ; mov word ptr [rbp - 0xb0], di ; mov dword ptr [rbp - 0xb4], 0xc ; js 0x10143f
read: di eax rflags 
write: ebx edi rflags 
--------------------------------------------------------------------------------
0010143b: RLP; test eax, eax ; je 0x101454
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00101469: RLP; test eax, eax ; jne 0x10143f
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001014b2: RLP; sub rsp, 0x1010 ; mov dword ptr [rbp - 0x88], eax ; xor ecx, ecx ; lea rax, [rsp + 0xf] ; mov esi, 0x10 ; mov word ptr [rbp - 0x7f], cx ; mov qword ptr [r14], 0 ; mov byte ptr [rbp - 0x80], 0 ; mov qword ptr [rbp - 0xe0], rax ; and qword ptr [rbp - 0xe0], 0xfffffffffffffff0 ; mov rax, qword ptr [rbp - 0xe0] ; mov byte ptr [r12 + 0x13], 0 ; mov dword ptr [r14 + 8], 0 ; mov word ptr [rbp - 0xb0], si ; mov qword ptr [rbp - 0x98], 0x1000
read: cx eax ecx rax rsp si 
write: ecx esi rax rflags rsp 
--------------------------------------------------------------------------------
0010154b: RLP; cmp rax, -1 ; je 0x10151c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
001015cd: RLP; cmp rax, -1 ; je 0x1015ac
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00101763: RLP; test eax, eax ; mov r14, rsp ; js 0x10180c
read: eax rflags rsp 
write: r14 rflags 
--------------------------------------------------------------------------------
0010178d: RLP; test rax, rax ; je 0x10181c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
001017b0: RLP; test eax, eax ; js 0x10181c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001017de: RLP; mov dword ptr [r13], r14d ; movsxd r14, r14d ; mov rdi, qword ptr [rsp + 8] ; lea rsi, [r14 + r14*4] ; shl rsi, 3 ; call 0x1f3ac
read: r14d rip rsi rsp 
write: r14 rdi rflags rsi rsp 
--------------------------------------------------------------------------------
001017fb: RLP; mov qword ptr [r12], rax ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: rax rsp 
write: r12 r13 r14 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010182a: RLP; cmp ebp, ebx ; je 0x101839
read: ebp ebx rflags 
write: rflags 
--------------------------------------------------------------------------------
00101839: RLP; mov dword ptr [r13], 0 ; mov qword ptr [r12], 0 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: rsp 
write: r12 r13 r14 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00101865: RLP; test eax, eax ; mov ebp, eax ; js 0x101839
read: eax rflags 
write: ebp rflags 
--------------------------------------------------------------------------------
001018a9: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
001018d7: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
001018f8: RLP; jmp 0x1018a9
read: 
write: 
--------------------------------------------------------------------------------
0010192d: RLP; mov qword ptr [rsp + 8], rax ; lea rax, [rip + 0x3324e] ; mov qword ptr [rsp + 0x18], 2 ; mov qword ptr [rsp + 0x10], rax ; mov rax, qword ptr [rip + 0x267506] ; mov edi, dword ptr fs:[rax] ; call 0x10187c
read: rax rip rsp 
write: edi rax rsp 
--------------------------------------------------------------------------------
0010195a: RLP; mov rdi, rax ; mov qword ptr [rbx], rax ; call 0x856dc
read: rax rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
00101969: RLP; lea rdx, [rbx + 0x10] ; mov qword ptr [rbx + 8], rax ; lea rax, [rip + 0x32aad] ; mov qword ptr [rbx + 0x18], 1 ; mov rsi, rbp ; mov edi, 2 ; sub rdx, rbp ; mov qword ptr [rbx + 0x10], rax ; mov eax, 0x14 ; sar rdx, 4 ; add rdx, 1 ; syscall ; add rsp, 0x48 ; pop rbx ; pop rbp
read: rax rbp rdx rsp 
write: eax edi rax rbp rbx rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00101a2c: RLP; cmp rax, rbx ; ja 0x101a6c
read: rax rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
00101b00: RLP; mov edx, 0xffffffff ; test eax, eax ; cmovne edx, dword ptr [rsp] ; add rsp, 0x18 ; mov eax, edx ; ret
read: eax edx rflags rsp 
write: eax edx rflags rsp 
--------------------------------------------------------------------------------
00101b53: RLP; cdqe ; cmp rax, rbp ; jae 0x101b7c
read: eax rax rbp rflags 
write: rax rflags 
--------------------------------------------------------------------------------
00101b69: RLP; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
read: rsp 
write: r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00101d24: RLP; cdqe ; add rax, r14 ; cmp rbx, 8 ; jne 0x101ce4
read: eax r14 rax rbx rflags 
write: rax rflags 
--------------------------------------------------------------------------------
00101d6b: RLP; add rsp, 0x78 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00101dc1: RLP; add rsp, 0x78 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00101e54: RLP; test rax, rax ; je 0x101d8c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00102001: RLP; test rax, rax ; je 0x102154
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00102123: RLP; add rsp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
001021f7: RLP; test eax, eax ; mov qword ptr [rsp + 0x18], rbx ; jg 0x10206a
read: eax rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
00102477: RLP; test eax, eax ; je 0x102583
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001024f0: RLP; cmp eax, 0xf ; jg 0x10256c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00102528: RLP; mov edx, 0x1e ; cmp eax, 0x1e ; cmovle edx, eax ; mov dword ptr [r12], edx ; jmp 0x102494
read: eax edx rflags 
write: edx rflags 
--------------------------------------------------------------------------------
00102550: RLP; mov edx, 5 ; cmp eax, 5 ; cmovle edx, eax ; mov dword ptr [r12 + 4], edx ; jmp 0x102494
read: eax edx rflags 
write: edx rflags 
--------------------------------------------------------------------------------
0010269f: RLP; test rax, rax ; je 0x102e52
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
001026c3: RLP; movzx eax, byte ptr [rbx + 0x80] ; mov byte ptr [rbx + 0x17f], 0 ; lea rdx, [rbx + 0x50] ; mov qword ptr [rbx + 0x48], rbp ; test al, al ; je 0x102f9f
read: al rbp rflags 
write: eax rdx rflags 
--------------------------------------------------------------------------------
00102776: RLP; test rax, rax ; mov qword ptr [rsp + 0x10], rax ; je 0x102dc7
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
001027ec: RLP; test rax, rax ; je 0x102d7c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010287b: RLP; movzx eax, byte ptr [rbx + 0x80] ; mov byte ptr [rbx + 0x17f], 0 ; test al, al ; jne 0x1028a7
read: al rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00102933: RLP; mov byte ptr [rbx + 0x17f], 0 ; mov esi, 0xa ; mov rdi, rbp ; call 0x83a5c
read: rbp rip rsp 
write: esi rdi rsp 
--------------------------------------------------------------------------------
0010294b: RLP; test rax, rax ; je 0x102953
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00102a50: RLP; test rax, rax ; mov rbp, rax ; je 0x102a5b
read: rax rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
00102a7c: RLP; test eax, eax ; jle 0x1027d4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00102a92: RLP; test rax, rax ; mov r12, rax ; je 0x1027d4
read: rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
00102bf2: RLP; test rax, rax ; je 0x102bb4
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00102c0c: RLP; test eax, eax ; je 0x102cc7
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00102c3d: RLP; test rax, rax ; je 0x102cec
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00102cb4: RLP; test eax, eax ; je 0x102cec
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00102d4f: RLP; jmp 0x1027d4
read: 
write: 
--------------------------------------------------------------------------------
00102dc7: RLP; mov esi, dword ptr [rbx + 0x10] ; test esi, esi ; je 0x102fb9
read: esi rflags 
write: esi rflags 
--------------------------------------------------------------------------------
00102e0a: RLP; test rax, rax ; je 0x102e1e
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00102e1e: RLP; or qword ptr [rbx + 8], 1 ; add rsp, 0x2078 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: eax rsp 
write: eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00102e7d: RLP; test eax, eax ; jne 0x102ddf
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00102e96: RLP; test rax, rax ; je 0x102ddf
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00102eb3: RLP; jmp 0x102ddf
read: 
write: 
--------------------------------------------------------------------------------
00102ed6: RLP; mov word ptr [rbx + 0x44], ax ; jmp 0x1025da
read: ax 
write: 
--------------------------------------------------------------------------------
00102f5f: RLP; test eax, eax ; je 0x102a17
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00102fcc: RLP; mov edx, 2 ; mov ecx, 0x3500 ; mov dword ptr [rbx + 0x18], eax ; mov word ptr [rbx + 0x14], dx ; mov word ptr [rbx + 0x16], cx ; mov dword ptr [rbx + 0x10], 1 ; jmp 0x102dd2
read: cx dx eax 
write: ecx edx 
--------------------------------------------------------------------------------
0010301b: RLP; mov dword ptr [r12 + 0x18], eax ; mov rax, qword ptr [rsp + 0x58] ; cmp byte ptr [rax], 0 ; jne 0x102ad5
read: eax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
0010304f: RLP; test eax, eax ; mov dword ptr [r12 + 0x18], eax ; mov rdi, rbp ; je 0x103008
read: eax rbp rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
0010307f: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0010309d: RLP; add rsp, 8 ; movzx eax, ax ; ret
read: ax rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
0010314d: RLP; mov qword ptr [rbp + rbx*2 + 0x218], 0 ; jmp 0x103118
read: 
write: 
--------------------------------------------------------------------------------
00103172: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00103208: RLP; movsxd r15, dword ptr [rbp + 0x18] ; mov rsi, rax ; mov r13, rax ; sub rsi, rbx ; cmp r15d, 3 ; jg 0x1032df
read: r15d rax rbx rflags rsi 
write: r13 r15 rflags rsi 
--------------------------------------------------------------------------------
00103235: RLP; mov qword ptr [rbp + r15*8 + 0x20], rax ; mov rax, qword ptr [rip + 0x265bbb] ; movzx r8d, byte ptr [r13] ; mov rdx, qword ptr fs:[rax] ; movsx rax, r8b ; test byte ptr [rdx + rax*2 + 1], 0x20 ; je 0x10326f
read: r8b rax rflags 
write: r8d rax rdx rflags 
--------------------------------------------------------------------------------
001032fb: RLP; mov rdx, qword ptr [rsp + 8] ; lea rdi, [rsp + 0x18] ; mov rsi, rax ; mov r8d, 4 ; xor eax, eax ; mov ecx, r14d ; call 0x523bc
read: eax r14d rax rip rsp 
write: eax ecx r8d rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0010331c: RLP; test eax, eax ; js 0x103347
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00103339: RLP; mov rdi, qword ptr [rsp + 0x18] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
00103347: RLP; xor eax, eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: eax rsp 
write: eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00103374: RLP; mov rdx, qword ptr [rsp + 8] ; lea rdi, [rsp + 0x18] ; mov rsi, rax ; mov ecx, r14d ; xor eax, eax ; call 0x523bc
read: eax r14d rax rip rsp 
write: eax ecx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0010338f: RLP; test eax, eax ; jns 0x103320
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001033b6: RLP; mov rdx, rax ; mov rbx, rax ; sub rdx, rbp ; cmp rdx, 3 ; je 0x103424
read: rax rbp rdx rflags 
write: rbx rdx rflags 
--------------------------------------------------------------------------------
00103417: RLP; test eax, eax ; jne 0x1033e2
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00103437: RLP; test eax, eax ; je 0x10344c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010349d: RLP; test eax, eax ; jne 0x1034bc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001034d4: RLP; test eax, eax ; jne 0x1034fc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00103518: RLP; lea rdi, [rsp + 8] ; mov rsi, rax ; mov r8, rbx ; xor eax, eax ; mov ecx, r13d ; mov rdx, r12 ; call 0x523bc
read: eax r12 r13d rax rbx rip rsp 
write: eax ecx r8 rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00103534: RLP; test eax, eax ; js 0x10355f
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00103551: RLP; mov rdi, qword ptr [rsp + 8] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0010355f: RLP; xor eax, eax ; jmp 0x1034af
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
001035a2: RLP; test rax, rax ; mov rsi, rax ; lea rax, [rip + 0x33da7] ; cmovne rax, rsi ; lea rsi, [rip + 0x30f3a] ; mov rdi, rax ; mov qword ptr [rsp + 0x10], rax ; call 0x6ca9c
read: rax rflags rip rsi rsp 
write: rax rdi rflags rsi rsp 
--------------------------------------------------------------------------------
001035cb: RLP; test rax, rax ; mov qword ptr [rsp + 8], rax ; je 0x10383d
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00103612: RLP; test rax, rax ; je 0x10382f
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00103631: RLP; mov byte ptr [rax], 0 ; mov rax, qword ptr [rip + 0x2657c1] ; mov rbx, rbp ; mov r14, qword ptr fs:[rax] ; movzx eax, byte ptr [rsp + 0x30] ; movsx rdx, al ; test byte ptr [r14 + rdx*2 + 1], 0x20 ; je 0x10366f
read: al rbp rflags 
write: eax r14 rax rbx rdx rflags 
--------------------------------------------------------------------------------
0010368a: RLP; mov r15, rax ; mov r13, rax ; sub r15, rbx ; nop word ptr [rax + rax] ; mov rdx, r15 ; mov rsi, r12 ; mov rdi, rbx ; call 0x8bd2c
read: r12 r15 rax rbx rip rsp 
write: r13 r15 rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
001036ae: RLP; test eax, eax ; jne 0x1036f3
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010371f: RLP; mov ecx, dword ptr [rsp + 4] ; mov rdx, qword ptr [rsp + 0x10] ; mov rsi, rax ; mov rdi, qword ptr [rsp + 0x18] ; xor eax, eax ; mov r8, rbx ; call 0x523bc
read: eax rax rbx rip rsp 
write: eax ecx r8 rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0010373e: RLP; test eax, eax ; js 0x1035fc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010375f: RLP; mov rdi, qword ptr [rsp + 0x28] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0010376d: RLP; jmp 0x1035fc
read: 
write: 
--------------------------------------------------------------------------------
001037c5: RLP; mov rbx, rax ; test rbx, rbx ; je 0x1035fc
read: rax rbx rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
0010383d: RLP; lea rdi, [rip + 0x33b32] ; call 0x3819c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0010384d: RLP; test rax, rax ; je 0x10385e
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010385e: RLP; lea rdi, [rip + 0x33b24] ; call 0x3819c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0010386e: RLP; test rax, rax ; je 0x103890
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00103890: RLP; lea rdi, [rip + 0x33aff] ; call 0x3819c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
001038a0: RLP; test rax, rax ; je 0x1038c2
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
001038c2: RLP; lea rdi, [rip + 0x33adc] ; call 0x3819c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
001038d2: RLP; test rax, rax ; je 0x1038ef
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
001038ef: RLP; lea rdi, [rip + 0x33ac7] ; call 0x3819c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
001038ff: RLP; test rax, rax ; je 0x10392a
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010392a: RLP; mov rax, qword ptr [rip + 0x2654fb] ; mov dword ptr [rax], 1 ; add rsp, 0x138 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: r12 r13 r14 r15 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010395e: RLP; mov rbx, rax ; jmp 0x1037c8
read: rax 
write: rbx 
--------------------------------------------------------------------------------
00103972: RLP; mov rbx, rax ; jmp 0x1037c8
read: rax 
write: rbx 
--------------------------------------------------------------------------------
001039ad: RLP; or dword ptr [rip + 0x26a20c], 2 ; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
001039e4: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00103aec: RLP; test eax, eax ; mov r13d, eax ; js 0x103a14
read: eax rflags 
write: r13d rflags 
--------------------------------------------------------------------------------
00103b33: RLP; add rsp, 0x80 ; mov esi, dword ptr [rip + 0x2657a4] ; test esi, esi ; jle 0x103b6c
read: esi rflags rsp 
write: esi rflags rsp 
--------------------------------------------------------------------------------
00103b50: RLP; mov r9d, dword ptr [rip + 0x26578d] ; test r9d, r9d ; je 0x103a14
read: r9d rflags 
write: r9d rflags 
--------------------------------------------------------------------------------
00103b82: RLP; mov r8, qword ptr [rsp + 0x38] ; test r8, r8 ; mov qword ptr [rsp + 8], r8 ; je 0x103d20
read: r8 rflags 
write: r8 rflags 
--------------------------------------------------------------------------------
00103bab: RLP; test rax, rax ; mov qword ptr [rip + 0x266cff], rax ; je 0x103d2f
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00103c69: RLP; test eax, eax ; mov rdi, qword ptr [rip + 0x266c42] ; mov r11, qword ptr [rsp + 0x10] ; mov r10, qword ptr [rsp + 0x18] ; js 0x103c00
read: eax rflags 
write: r10 r11 rdi rflags 
--------------------------------------------------------------------------------
00103cb5: RLP; test rax, rax ; mov qword ptr [rip + 0x266bf5], rax ; je 0x103d34
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00103ccf: RLP; mov rax, qword ptr [rip + 0x26518e] ; mov dword ptr [rip + 0x265607], r14d ; mov dword ptr fs:[rax], r15d ; cmp dword ptr [rip + 0x26aa88], 0 ; je 0x103cf5
read: r14d r15d rflags 
write: rax rflags 
--------------------------------------------------------------------------------
00103d14: RLP; add rsp, 0x80 ; jmp 0x103b44
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00103d7c: RLP; mov r12, qword ptr [rip + 0x2650a9] ; mov r13d, dword ptr [r12 + 0x18] ; test r13d, r13d ; jle 0x103dd9
read: r13d rflags 
write: r12 r13d rflags 
--------------------------------------------------------------------------------
00103dad: RLP; cmp rbp, rax ; jbe 0x103dd0
read: rax rbp rflags 
write: rflags 
--------------------------------------------------------------------------------
00103dcc: RLP; test eax, eax ; je 0x103dec
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00103e39: RLP; mov rax, qword ptr [rbp + 8] ; mov rdi, qword ptr [rax] ; test rdi, rdi ; je 0x103e66
read: rdi rflags 
write: rax rdi rflags 
--------------------------------------------------------------------------------
00103e55: RLP; mov rax, qword ptr [rbp + 8] ; mov rdi, qword ptr [rax + rbx] ; add rbx, 8 ; test rdi, rdi ; jne 0x103e4c
read: rbx rdi rflags 
write: rax rbx rdi rflags 
--------------------------------------------------------------------------------
00103e95: RLP; mov rdi, qword ptr [rax] ; mov ecx, dword ptr [rdi] ; test ecx, ecx ; jne 0x103ea4
read: ecx rflags 
write: ecx rdi rflags 
--------------------------------------------------------------------------------
00103ed3: RLP; mov word ptr [rbx + 0x44], ax ; cmp dword ptr fs:[0x18], 0 ; je 0x103ee3
read: ax rflags 
write: rflags 
--------------------------------------------------------------------------------
00103efe: RLP; mov esi, 1 ; mov rdi, qword ptr [rax] ; call 0x1025ac
read: rip rsp 
write: esi rdi rsp 
--------------------------------------------------------------------------------
00103f0f: RLP; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
00103f2c: RLP; mov rax, qword ptr fs:[0] ; add rax, qword ptr [rip + 0x2650b0] ; nop dword ptr [rax - 0x34] ; mov rbx, qword ptr [rax] ; jmp 0x103ec3
read: rax 
write: rax rbx rflags 
--------------------------------------------------------------------------------
00103f40: RLP; mov rbx, qword ptr [rax] ; jmp 0x103ec3
read: 
write: rbx 
--------------------------------------------------------------------------------
00103f85: RLP; mov rdi, rbx ; mov esi, 1 ; call 0x1025ac
read: rbx rip rsp 
write: esi rdi rsp 
--------------------------------------------------------------------------------
00103f96: RLP; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
00103fd2: RLP; mov word ptr [rbx + 0x44], ax ; jmp 0x103f85
read: ax 
write: 
--------------------------------------------------------------------------------
00103fe5: RLP; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
00104042: RLP; mov qword ptr [rsp + 0x18], r12 ; mov dword ptr [rsp + 0x14], eax ; mov rdx, rsp ; movsxd rdi, dword ptr [rsp + 0x10] ; movsxd rsi, ebp ; mov eax, 0x81 ; syscall ; cmp rax, -0x1000 ; ja 0x10406e
read: eax ebp r12 rax rflags rsp 
write: eax rdi rdx rflags rsi 
--------------------------------------------------------------------------------
001040a8: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0010415b: RLP; test rax, rax ; mov r15, rax ; je 0x1044b8
read: rax rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
0010417d: RLP; mov byte ptr [rax], 0 ; mov dword ptr [r15 + 8], 0 ; mov dword ptr [r15 + 0xc], 0 ; mov dword ptr [r15 + 0x10], 0 ; mov dword ptr [r15 + 0x14], 1 ; mov dword ptr [r15 + 0x18], 1 ; mov qword ptr [r15 + 0x20], 0 ; mov qword ptr [r15 + 0x28], 0 ; mov qword ptr [r15], 0 ; movzx eax, byte ptr [rbx] ; movsx rdx, al ; test byte ptr [r12 + rdx*2 + 1], 0x20 ; je 0x1041e8
read: al rflags 
write: eax rdx rflags 
--------------------------------------------------------------------------------
001042da: RLP; test eax, eax ; je 0x104310
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001042f6: RLP; test eax, eax ; jne 0x1044ac
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001043b7: RLP; test eax, eax ; jne 0x1044ac
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00104444: RLP; test eax, eax ; je 0x1044dc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00104464: RLP; test eax, eax ; jne 0x1044ac
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00104491: RLP; test eax, eax ; jne 0x1044ac
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001044b8: RLP; mov rax, qword ptr [rsp + 0x18] ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: r12 r13 r14 r15 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00104528: RLP; mov rbp, qword ptr [rbx] ; mov rdi, rbx ; call 0x1f46c
read: rbx rip rsp 
write: rbp rdi rsp 
--------------------------------------------------------------------------------
00104537: RLP; test rbp, rbp ; jne 0x10450c
read: rbp rflags 
write: rflags 
--------------------------------------------------------------------------------
0010454c: RLP; test rbx, rbx ; je 0x104556
read: rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
001045ed: RLP; test eax, eax ; jne 0x1045cc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00104615: RLP; mov rcx, qword ptr [rip + 0x264848] ; add rax, 0x1c ; mov rsi, r12 ; and rax, 0xfffffffffffffff0 ; sub rsp, rax ; movabs rax, 0x5f73736e62696c ; mov ecx, dword ptr fs:[rcx] ; lea rdi, [rsp + 7] ; mov qword ptr [rsp], rax ; mov dword ptr [rbp - 0x34], ecx ; call 0x898ec
read: ecx r12 rax rip rsp 
write: ecx rax rcx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
0010464c: RLP; mov ecx, 0x322e ; mov dword ptr [rax], 0x6f732e ; mov byte ptr [rax + 5], 0 ; mov word ptr [rax + 3], cx ; mov r15, qword ptr [rbx + 0x20] ; mov esi, 0x80000001 ; mov rdi, rsp ; call 0x11c37c
read: cx rip rsp 
write: ecx esi r15 rdi rsp 
--------------------------------------------------------------------------------
00104674: RLP; mov qword ptr [r15 + 8], rax ; mov rax, qword ptr [rbx + 0x20] ; cmp qword ptr [rax + 8], 0 ; je 0x10478a
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
001046be: RLP; test rax, rax ; mov qword ptr [r12], rax ; je 0x1047ad
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00104713: RLP; xor edx, edx ; add rax, 0x1a ; mov rsi, r12 ; div r14 ; shl rax, 4 ; sub rsp, rax ; lea rdi, [rsp + 5] ; mov dword ptr [rsp], 0x73736e5f ; mov byte ptr [rsp + 4], 0x5f ; call 0x898ec
read: edx r12 r14 rax rdx rip rsp 
write: edx rax rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00104740: RLP; mov edx, 0x74 ; mov dword ptr [rax], 0x696e695f ; mov rsi, rsp ; mov word ptr [rax + 4], dx ; mov rax, qword ptr [rbx + 0x20] ; mov rdi, qword ptr [rax + 8] ; call 0x11c3dc
read: dx rip rsp 
write: edx rax rdi rsi rsp 
--------------------------------------------------------------------------------
00104763: RLP; test rax, rax ; je 0x104782
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00104782: RLP; mov rsp, r15 ; jmp 0x104690
read: r15 
write: rsp 
--------------------------------------------------------------------------------
00104813: RLP; add rsp, 0x80 ; cmp qword ptr [rbx], 0 ; je 0x10486c
read: rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00104853: RLP; add rsp, 0x80 ; add rsp, 0x58 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: eax rsp 
write: eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010489c: RLP; test eax, eax ; jne 0x1048a7
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001048e8: RLP; add rsp, 0x80 ; xor eax, eax ; cmp qword ptr [rbx], 0 ; sete al ; add rsp, 0x58 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; neg eax ; pop r15 ; ret
read: eax rflags rsp 
write: al eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010492c: RLP; test eax, eax ; jne 0x104937
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00104961: RLP; test rax, rax ; mov qword ptr [rbx], rax ; je 0x1048b5
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010497b: RLP; test rax, rax ; je 0x1048b5
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
001049bc: RLP; test rax, rax ; mov r14, rax ; je 0x104bd2
read: rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
001049dc: RLP; test rax, rax ; mov qword ptr [rsp + 0x38], rax ; je 0x104bc6
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00104a4a: RLP; test rax, rax ; js 0x104b91
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00104a74: RLP; mov byte ptr [rax], 0 ; mov rsi, qword ptr [rsp + 0x40] ; movzx eax, byte ptr [rsi] ; test al, al ; je 0x104a2c
read: al rflags 
write: eax rflags rsi 
--------------------------------------------------------------------------------
00104b10: RLP; lea rdx, [rax + 1] ; lea rdi, [rax + 0x11] ; mov qword ptr [rsp + 0x20], rdx ; call 0x1f3cc
read: rdx rip rsp 
write: rdi rdx rsp 
--------------------------------------------------------------------------------
00104b26: RLP; test rax, rax ; je 0x104a2c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00104b4b: RLP; mov rdi, qword ptr [rsp + 0x18] ; call 0x1040bc
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
00104b59: RLP; mov rcx, qword ptr [rsp + 0x30] ; mov qword ptr [rcx + 8], rax ; mov rax, qword ptr [rsp + 0x10] ; mov qword ptr [rcx], 0 ; test rax, rax ; je 0x104bbf
read: rax rflags 
write: rax rcx rflags 
--------------------------------------------------------------------------------
00104b9f: RLP; mov rdi, r14 ; call 0x6bf5c
read: r14 rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
00104bab: RLP; mov rax, qword ptr [rsp + 0x38] ; mov qword ptr [rip + 0x26928d], rax ; mov r15, rax ; jmp 0x10487f
read: rax 
write: r15 rax 
--------------------------------------------------------------------------------
00104bd2: RLP; mov qword ptr [rip + 0x269267], 0 ; jmp 0x104940
read: 
write: 
--------------------------------------------------------------------------------
00104c10: RLP; test eax, eax ; jne 0x104c3f
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00104c2d: RLP; mov rax, qword ptr [rsp + 8] ; mov rdi, qword ptr [rax] ; test rdi, rdi ; mov qword ptr [rsp + 8], rdi ; jne 0x104c24
read: rdi rflags 
write: rax rdi rflags 
--------------------------------------------------------------------------------
00104c7b: RLP; test eax, eax ; je 0x104cb4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00104cd4: RLP; test rax, rax ; mov rdx, rax ; je 0x104c8f
read: rax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
00104d18: RLP; add rsp, 0x80 ; lea rax, [rbx + rbx*2] ; mov rax, qword ptr [r12 + rax*8] ; mov qword ptr [rax], rdx ; lea rax, [rip + 0x269ab3] ; mov byte ptr [rax + rbx], 1 ; cmp dword ptr [rip + 0x269a34], 0 ; je 0x104d49
read: rdx rflags rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
00104d68: RLP; add rsp, 0x80 ; add rsp, 8 ; xor ebp, ebp ; pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
read: ebp rsp 
write: eax ebp r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00104de4: RLP; add rsp, 0x80 ; lea r14, [r12 + 0x28] ; lea r13, [rbp - 0x38] ; lea rdx, [rip - 0xd6f] ; mov rsi, r14 ; mov rdi, r13 ; call 0xe13dc
read: r13 r14 rip rsp 
write: r13 r14 rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00104e0a: RLP; test rax, rax ; mov rbx, rax ; je 0x104f64
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
00104e62: RLP; add rsp, 0x80 ; lea rsp, [rbp - 0x28] ; mov rax, rdx ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: rdx rsp 
write: r12 r13 r14 r15 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00104e8a: RLP; test rax, rax ; mov r15, rax ; je 0x104f6c
read: rax rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
00104eac: RLP; test eax, eax ; jne 0x104f6c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00104edb: RLP; mov r13, qword ptr [rbp - 0x38] ; mov rbx, rax ; mov rdi, r13 ; call 0x856dc
read: r13 rax rip rsp 
write: r13 rbx rdi rsp 
--------------------------------------------------------------------------------
00104eee: RLP; lea rax, [rbx + rax + 0x16] ; mov rsi, r14 ; and rax, 0xfffffffffffffff0 ; sub rsp, rax ; lea rdi, [rsp + 5] ; mov dword ptr [rsp], 0x73736e5f ; mov byte ptr [rsp + 4], 0x5f ; call 0x898ec
read: r14 rax rip rsp 
write: rax rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00104f17: RLP; lea rdi, [rax + 1] ; mov rsi, r13 ; mov byte ptr [rax], 0x5f ; call 0x8510c
read: r13 rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
00104f2a: RLP; mov rax, qword ptr [r12 + 0x20] ; mov rsi, rsp ; mov rdi, qword ptr [rax + 8] ; call 0x11c3dc
read: rip rsp 
write: rax rdi rsi rsp 
--------------------------------------------------------------------------------
00104f3f: RLP; mov rsp, qword ptr [rbp - 0x40] ; mov rdx, rax ; mov rax, rdx ; xor rax, qword ptr fs:[0x30] ; rol rax, 0x11 ; mov qword ptr [r15 + 8], rax ; jmp 0x104e2f
read: rax rdx 
write: rax rdx rflags rsp 
--------------------------------------------------------------------------------
00104f82: RLP; mov rdi, r15 ; call 0x1f46c
read: r15 rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
00104f8e: RLP; xor edx, edx ; jmp 0x104e2f
read: edx 
write: edx rflags 
--------------------------------------------------------------------------------
00104fc2: RLP; test rax, rax ; mov qword ptr [rbp], rax ; je 0x10505c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00104ffa: RLP; test rax, rax ; mov qword ptr [rbp], rax ; jne 0x104fd4
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00105017: RLP; test rax, rax ; mov qword ptr [rbp], rax ; je 0x104fd9
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
001050c3: RLP; test rax, rax ; mov qword ptr [rbp], rax ; je 0x1050dc
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
001050f0: RLP; test rax, rax ; mov qword ptr [rbp], rax ; jne 0x1050cc
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
001051a6: RLP; lea rsi, [rip + 0x3712f] ; lea rdi, [rip + 0x316d4] ; call 0x104bec
read: rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
001051bd: RLP; lea rsi, [rip + 0x31459] ; lea rdi, [rip + 0x3146e] ; call 0x104bec
read: rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
001051d4: RLP; lea rdi, [rip + 0x322a7] ; xor esi, esi ; call 0x104bec
read: esi rip rsp 
write: esi rdi rflags rsp 
--------------------------------------------------------------------------------
001051e6: RLP; mov dword ptr [rip + 0x26975c], 0xffffffff ; mov dword ptr [rip + 0x269772], 0xffffffff ; mov dword ptr [rip + 0x269778], 0xffffffff ; mov dword ptr [rip + 0x26979e], 0xffffffff ; mov dword ptr [rip + 0x269798], 0xffffffff ; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00105287: RLP; cmp eax, 0x22 ; jne 0x1052ec
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001052af: RLP; test rax, rax ; jne 0x10526c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
001052cb: RLP; mov dword ptr fs:[rbx], ebp ; mov qword ptr [r12], 0 ; xor eax, eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: eax ebp rsp 
write: eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010531b: RLP; mov rcx, qword ptr [rsp + 8] ; test rax, rax ; mov qword ptr [r12], rax ; mov rsi, rax ; mov rdx, rcx ; jne 0x10525c
read: rax rcx rflags 
write: rcx rdx rflags rsi 
--------------------------------------------------------------------------------
00105372: RLP; add rsp, 0x10 ; pop rbx ; ret
read: rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
001053b6: RLP; test eax, eax ; mov rdx, -1 ; mov r8, qword ptr [rsp + 8] ; jne 0x1053c9
read: eax rflags 
write: r8 rdx rflags 
--------------------------------------------------------------------------------
00105425: RLP; cmp eax, -1 ; je 0x1054ec
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00105452: RLP; nop word ptr cs:[rax + rax] ; test eax, eax ; jne 0x1054b4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00105479: RLP; mov edi, dword ptr [rbp] ; call qword ptr [rsp + 0x10]
read: rsp 
write: edi rsp 
--------------------------------------------------------------------------------
00105484: RLP; mov r8d, eax ; mov rcx, qword ptr [rsp] ; xor r9d, r9d ; xor edx, edx ; mov rsi, r15 ; mov rdi, rbx ; call 0x10506c
read: eax edx r15 r9d rbx rip rsp 
write: edx r8d r9d rcx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
0010549f: RLP; cmp r13, r12 ; jne 0x10545c
read: r12 r13 rflags 
write: rflags 
--------------------------------------------------------------------------------
001054dd: RLP; xor edi, edi ; call qword ptr [rsp + 0x10]
read: edi rsp 
write: edi rflags rsp 
--------------------------------------------------------------------------------
001054e7: RLP; mov r8d, eax ; jmp 0x105487
read: eax 
write: r8d 
--------------------------------------------------------------------------------
00105548: RLP; cmp eax, -1 ; je 0x1055dc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010556f: RLP; test eax, eax ; mov r13, rsp ; je 0x10559d
read: eax rflags rsp 
write: r13 rflags 
--------------------------------------------------------------------------------
00105599: RLP; test eax, eax ; jne 0x1055ba
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001055aa: RLP; call qword ptr [rsp]
read: rsp 
write: rsp 
--------------------------------------------------------------------------------
001055b1: RLP; mov rax, qword ptr [rbp] ; cmp qword ptr [rbx], rax ; jne 0x10557c
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
00105647: RLP; cmp eax, -1 ; mov r8, qword ptr [rsp + 0x10] ; je 0x105890
read: eax rflags 
write: r8 rflags 
--------------------------------------------------------------------------------
00105672: RLP; test eax, eax ; jne 0x1058c2
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001056c2: RLP; mov r8, qword ptr [rsp + 0x20] ; mov rcx, qword ptr [rsp + 0x28] ; mov rdx, qword ptr [rsp + 0xb0] ; mov rsi, qword ptr [rsp + 0xa8] ; mov rdi, qword ptr [rsp + 0xa0] ; call qword ptr [rsp + 0x30]
read: rsp 
write: r8 rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
001056ec: RLP; cmp eax, -2 ; mov ebx, eax ; je 0x1057dc
read: eax rflags 
write: ebx rflags 
--------------------------------------------------------------------------------
00105711: RLP; cmp r12, r13 ; je 0x1057bc
read: r12 r13 rflags 
write: rflags 
--------------------------------------------------------------------------------
00105774: RLP; test eax, eax ; jne 0x1057d4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00105795: RLP; mov rax, qword ptr [rsp + 0x90] ; mov edi, dword ptr [rax] ; call qword ptr [rsp + 0x40]
read: rsp 
write: edi rax rsp 
--------------------------------------------------------------------------------
001057a7: RLP; cmp eax, 1 ; mov ebx, eax ; setne al ; test al, al ; jne 0x1056f7
read: al eax rflags 
write: al ebx rflags 
--------------------------------------------------------------------------------
00105855: RLP; xor edi, edi ; call qword ptr [rsp + 0x40]
read: edi rsp 
write: edi rflags rsp 
--------------------------------------------------------------------------------
0010585f: RLP; cmp eax, 1 ; mov ebx, eax ; setne al ; jmp 0x1057af
read: eax rflags 
write: al ebx rflags 
--------------------------------------------------------------------------------
0010591b: RLP; cmp eax, -1 ; je 0x105bf4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010598a: RLP; test rbp, rbp ; lea rdx, [rax + 0x29] ; je 0x105c64
read: rbp rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
001059b0: RLP; mov r13, qword ptr [r13] ; movzx r8d, byte ptr [rbx] ; lea rax, [r13 + 0x10] ; mov qword ptr [rsp + 0x10], rax ; lea rax, [r13 + 0x20] ; mov qword ptr [rsp + 0x18], rax ; lea rax, [r13 + 0x28] ; mov qword ptr [rsp + 0x20], rax ; movsx eax, r8b ; sub eax, 0x30 ; cmp eax, 9 ; ja 0x105a0a
read: eax r8b rax rflags 
write: eax r13 r8d rax rflags 
--------------------------------------------------------------------------------
00105a41: RLP; test rax, rax ; mov r8d, dword ptr [rsp + 0x28] ; mov edx, dword ptr [rsp + 0x2c] ; je 0x105bdc
read: rax rflags 
write: edx r8d rflags 
--------------------------------------------------------------------------------
00105acd: RLP; test eax, eax ; jle 0x105ba8
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00105ae6: RLP; mov rbx, qword ptr [rsp + 8] ; mov qword ptr [rbx], rax ; mov rax, qword ptr [rsp + 0x18] ; mov qword ptr [r13 + 0x20], 0 ; mov qword ptr [rbx + 8], rax ; mov rax, qword ptr [rsp + 0x10] ; mov qword ptr [r13 + 0x10], r13 ; mov qword ptr [r13 + 0x18], 0 ; mov dword ptr [rbx + 0x10], 0xa ; mov dword ptr [rbx + 0x14], 0x10 ; mov qword ptr [rbx + 0x18], rax ; jmp 0x105d11
read: r13 rax 
write: rax rbx 
--------------------------------------------------------------------------------
00105b98: RLP; test eax, eax ; setg al ; movzx eax, al ; test eax, eax ; jne 0x105cac
read: al eax rflags 
write: al eax rflags 
--------------------------------------------------------------------------------
00105c45: RLP; test rax, rax ; mov rdx, qword ptr [rsp + 0x10] ; je 0x105ddc
read: rax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
00105cbd: RLP; mov rsi, qword ptr [rsp + 8] ; cmp dword ptr [rsp + 0x78], 2 ; mov qword ptr [rsi], rax ; mov rax, qword ptr [rsp + 0x18] ; mov qword ptr [r13 + 0x20], 0 ; mov qword ptr [rsi + 8], rax ; mov rax, qword ptr [rsp + 0x10] ; mov qword ptr [r13 + 0x10], r13 ; mov qword ptr [r13 + 0x18], 0 ; mov qword ptr [rsi + 0x18], rax ; je 0x105d75
read: r13 rax rflags 
write: rax rflags rsi 
--------------------------------------------------------------------------------
00105d70: RLP; jmp 0x105ba0
read: 
write: 
--------------------------------------------------------------------------------
00105df4: RLP; cmp qword ptr [rsp + 0x80], 0 ; mov qword ptr [r13], 0 ; mov qword ptr [rbp], 0 ; mov dword ptr fs:[rbx], r12d ; je 0x105bbf
read: r12d rflags 
write: rflags 
--------------------------------------------------------------------------------
00105e8a: RLP; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rsp 
write: r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00105eb7: RLP; test eax, eax ; js 0x105ec4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00105f0a: RLP; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rsp 
write: r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00105f37: RLP; test eax, eax ; js 0x105f44
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00105f8a: RLP; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rsp 
write: r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00105fbc: RLP; test eax, eax ; js 0x105fc9
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010601a: RLP; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rsp 
write: r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010604c: RLP; test eax, eax ; js 0x106059
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001060aa: RLP; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rsp 
write: r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
001060dc: RLP; test eax, eax ; js 0x1060e9
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010613a: RLP; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rsp 
write: r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010616c: RLP; test eax, eax ; js 0x106179
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001061ca: RLP; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rsp 
write: r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
001061f7: RLP; test eax, eax ; js 0x106204
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010624a: RLP; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rsp 
write: r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00106277: RLP; test eax, eax ; js 0x106284
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001062ca: RLP; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rsp 
write: r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00106301: RLP; test eax, eax ; js 0x10630e
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010635a: RLP; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rsp 
write: r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00106387: RLP; test eax, eax ; js 0x106394
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001063da: RLP; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rsp 
write: r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010640c: RLP; test eax, eax ; js 0x106419
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010646a: RLP; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rsp 
write: r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00106497: RLP; test eax, eax ; js 0x1064a4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001064ea: RLP; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rsp 
write: r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00106521: RLP; test eax, eax ; js 0x10652e
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00106563: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0010661c: RLP; lea rsi, [rip + 0x267859] ; mov rdi, rsp ; call 0x10826c
read: rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
0010662f: RLP; lea rsi, [rip + 0x26785e] ; mov rdi, rsp ; call 0x10826c
read: rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
00106642: RLP; mov rax, qword ptr [rsp + 8] ; mov rdi, rsp ; call qword ptr [rax + 0x20]
read: rsp 
write: rax rdi rsp 
--------------------------------------------------------------------------------
00106651: RLP; mov dword ptr [rip + 0x267881], eax ; mov rax, qword ptr [rsp + 8] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x10666e
read: eax rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
0010666e: RLP; add rsp, 0x30 ; pop rbx ; ret
read: rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
001066b5: RLP; or dword ptr [rip + 0x2677a0], 2 ; lea rax, [rip + 0x2677b9] ; add rsp, 8 ; ret
read: rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
001066f4: RLP; lea rax, [rip + 0x267781] ; add rsp, 8 ; ret
read: rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
00106725: RLP; test eax, eax ; jne 0x10673c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00106751: RLP; test eax, eax ; je 0x106729
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00106765: RLP; test eax, eax ; je 0x106729
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00106779: RLP; test eax, eax ; je 0x106729
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001067a3: RLP; test eax, eax ; setne al ; movzx eax, al ; jmp 0x10672b
read: al eax rflags 
write: al eax rflags 
--------------------------------------------------------------------------------
0010683d: RLP; add rsp, 0x80 ; test ebp, ebp ; mov r12d, 0x3ff ; mov edx, 0xffffffff ; jle 0x10696e
read: ebp rflags rsp 
write: edx r12d rflags rsp 
--------------------------------------------------------------------------------
001068bd: RLP; test eax, eax ; mov edx, eax ; js 0x106864
read: eax rflags 
write: edx rflags 
--------------------------------------------------------------------------------
00106958: RLP; add rsp, 0x80 ; add rsp, 0x10 ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: edx rsp 
write: eax r12 r13 r14 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010697f: RLP; mov edx, 0x4d4873ed ; mov ecx, eax ; imul edx ; mov eax, ecx ; sar eax, 0x1f ; sar edx, 7 ; sub edx, eax ; imul edx, edx, 0x1a8 ; sub ecx, edx ; lea eax, [rcx + 0x258] ; mov word ptr [rip + 0x267535], ax ; jmp 0x1067f3
read: ax eax ecx edx 
write: eax ecx edx rflags 
--------------------------------------------------------------------------------
00106a55: RLP; mov rdi, qword ptr [rax + 0xb8] ; mov eax, 0x10 ; test rdi, rdi ; je 0x106a7c
read: rdi rflags 
write: eax rdi rflags 
--------------------------------------------------------------------------------
00106a7c: RLP; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00106aca: RLP; mov rbx, qword ptr [rax + 0xb8] ; test rbx, rbx ; je 0x106c5c
read: rbx rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
00106b1f: RLP; test eax, eax ; je 0x106c56
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00106b39: RLP; test eax, eax ; je 0x106c56
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00106b52: RLP; test eax, eax ; je 0x106c56
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00106b68: RLP; mov edi, 1 ; call 0x111efc
read: rip rsp 
write: edi rsp 
--------------------------------------------------------------------------------
00106b76: RLP; mov rax, qword ptr [rbx + 0x20] ; xor esi, esi ; mov rdi, rbp ; mov dword ptr [rbx + 0x18], 1 ; call qword ptr [rax + 0x28]
read: esi rbp rsp 
write: esi rax rdi rflags rsp 
--------------------------------------------------------------------------------
00106b8d: RLP; mov rax, qword ptr [rip + 0x267358] ; mov rsi, r13 ; mov rdi, rbp ; mov qword ptr [rsp + 0x78], rax ; mov rax, qword ptr [rip + 0x26734e] ; mov qword ptr [rsp + 0x80], rax ; mov rax, qword ptr [rip + 0x267347] ; mov qword ptr [rsp + 0x88], rax ; mov rax, qword ptr [rsp + 0x28] ; mov qword ptr [rsp + 0x98], rax ; mov rax, qword ptr [rsp + 0x20] ; mov qword ptr [rsp + 0xa0], rax ; call 0x10837c
read: r13 rax rbp rip rsp 
write: rax rdi rsi rsp 
--------------------------------------------------------------------------------
00106be0: RLP; test eax, eax ; je 0x106c94
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00106bf9: RLP; mov r15d, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [r12] ; test r15d, r15d ; mov rax, qword ptr [rdi + 0x38] ; je 0x106c74
read: r15d rflags 
write: r15d rax rdi rflags 
--------------------------------------------------------------------------------
00106c12: RLP; test eax, eax ; je 0x106c8c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00106c2d: RLP; mov rax, qword ptr [rbx + 0x20] ; add qword ptr [rbx + 0x22a8], 1 ; mov rdi, rbp ; mov edx, dword ptr [rbx + 0x22c0] ; mov rsi, qword ptr [rsp + 8] ; call qword ptr [rax + 0x18]
read: rbp rsp 
write: edx rax rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00106c4e: RLP; test eax, eax ; jne 0x106b0c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00106c82: RLP; test eax, eax ; jne 0x106c9c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00106cb4: RLP; test eax, eax ; cmovne r13d, r15d ; cmp qword ptr [rsp + 0x80], 0 ; je 0x106c5c
read: eax r13d r15d rflags 
write: r13d rflags 
--------------------------------------------------------------------------------
00106cdb: RLP; jmp 0x106c5c
read: 
write: 
--------------------------------------------------------------------------------
00106d09: RLP; mov rbx, qword ptr [rax + 0xb8] ; mov rbp, rax ; test rbx, rbx ; je 0x106e04
read: rax rbx rflags 
write: rbp rbx rflags 
--------------------------------------------------------------------------------
00106d55: RLP; mov rsi, rsp ; mov rdi, rbp ; call 0x1083ec
read: rbp rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
00106d64: RLP; test eax, eax ; je 0x106dd4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00106d76: RLP; mov dword ptr [rbx + 0x22c0], eax ; mov rax, qword ptr [rbx + 0x20] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x106d92
read: eax rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
00106d92: RLP; lea rsi, [rbx + 0x48] ; mov ecx, 2 ; mov edx, 0x2260 ; mov rdi, rbp ; call 0x11493c
read: rbp rip rsp 
write: ecx edx rdi rsi rsp 
--------------------------------------------------------------------------------
00106dac: RLP; lea rax, [rip + 0x25f8c9] ; mov qword ptr [rbx + 8], rax ; call 0x10667c
read: rax rip rsp 
write: rax rsp 
--------------------------------------------------------------------------------
00106dc0: RLP; mov qword ptr [rbx], rax ; mov rax, rbx ; add rsp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rax rbx rsp 
write: r12 r13 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00106df0: RLP; mov rdi, rax ; call 0x694fc
read: rax rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
00106dfc: RLP; jmp 0x106d68
read: 
write: 
--------------------------------------------------------------------------------
00106e17: RLP; test rax, rax ; mov rbx, rax ; je 0x106e2b
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
00106e80: RLP; mov r12, rax ; mov rax, qword ptr [rax + 0xc0] ; test rax, rax ; mov qword ptr [rbp - 0x78], rax ; je 0x1070e1
read: rax rflags 
write: r12 rax rflags 
--------------------------------------------------------------------------------
00106edd: RLP; mov dword ptr [r14 + 8], 0xffffffff ; mov r14, qword ptr [rbp - 0x78] ; mov rdi, qword ptr [r14] ; test rdi, rdi ; je 0x106f03
read: rdi rflags 
write: r14 rdi rflags 
--------------------------------------------------------------------------------
00106efc: RLP; mov qword ptr [r14], 0 ; sub rsp, 0x410 ; mov r15d, 0x400 ; lea r14, [rbp - 0x6c] ; lea rdx, [rsp + 0x1f] ; lea r13, [rbp - 0x68] ; lea r12, [rbp - 0x50] ; and rdx, 0xfffffffffffffff0 ; jmp 0x106f5a
read: rdx rsp 
write: r12 r13 r14 r15d rdx rflags rsp 
--------------------------------------------------------------------------------
00106f72: RLP; test eax, eax ; jne 0x106f7f
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00106fb9: RLP; mov r14, qword ptr [rbp - 0x78] ; xor edx, edx ; mov rsi, qword ptr [rbp - 0x80] ; mov word ptr [rbp - 0x5e], dx ; mov rdx, qword ptr [rbp - 0x88] ; mov eax, 2 ; xor r8d, r8d ; mov ecx, 5 ; mov rdi, r12 ; lea r9, [r14 + 8] ; mov word ptr [rbp - 0x60], ax ; call 0x11028c
read: ax dx edx r12 r8d rip rsp 
write: eax ecx edx r14 r8d r9 rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00106fef: RLP; test rax, rax ; mov qword ptr [r14], rax ; je 0x1070ca
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010702f: RLP; mov rax, qword ptr [r14 + 0x28] ; mov byte ptr [rax + 0xff], 0 ; mov rax, qword ptr [rbp - 0x78] ; mov r9, qword ptr [rbp + 0x18] ; mov r8, qword ptr [rbp + 0x10] ; mov rcx, qword ptr [rbp - 0xa0] ; mov rdx, qword ptr [rbp - 0x98] ; mov rsi, qword ptr [rbp - 0x90] ; mov rdi, qword ptr [rax] ; mov rax, qword ptr [rdi + 8] ; mov qword ptr [rsp], 0x19 ; mov qword ptr [rsp + 8], 0 ; call qword ptr [rax]
read: rsp 
write: r8 r9 rax rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
00107079: RLP; test eax, eax ; je 0x106f8a
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001070bd: RLP; test eax, eax ; je 0x10703a
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001070d5: RLP; mov eax, dword ptr [rax] ; nop dword ptr [rax + rax] ; jmp 0x106f8a
read: 
write: eax 
--------------------------------------------------------------------------------
001070f4: RLP; test rax, rax ; mov qword ptr [rbp - 0x78], rax ; je 0x10712f
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00107118: RLP; mov rsi, qword ptr [rbp - 0x78] ; mov qword ptr [rsi + 0x28], rax ; mov byte ptr [rax], 0 ; mov dword ptr [rsi + 8], 0xffffffff ; jmp 0x106ea6
read: rax 
write: rsi 
--------------------------------------------------------------------------------
0010714a: RLP; mov rbx, qword ptr [rax + 0xc0] ; test rbx, rbx ; je 0x107175
read: rbx rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
00107169: RLP; mov rdi, rbx ; call 0x1f46c
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
00107175: RLP; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
00107199: RLP; mov dword ptr [rip + 0x266d45], eax ; add rsp, 8 ; ret
read: eax rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00107242: RLP; test eax, eax ; jne 0x10724f
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00107288: RLP; xor edx, edx ; mov ecx, dword ptr [rbp - 0x84] ; mov rsi, qword ptr [rbp - 0x78] ; mov word ptr [rbp - 0x5e], dx ; mov rdx, qword ptr [rbp - 0x80] ; mov eax, 2 ; mov rdi, rbx ; mov word ptr [rbp - 0x60], ax ; call 0x11136c
read: ax dx edx rbx rip rsp 
write: eax ecx edx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
001072b1: RLP; lea rsp, [rbp - 0x28] ; movzx eax, ax ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: ax rsp 
write: eax r12 r13 r14 r15 rbp rbx rsp 
--------------------------------------------------------------------------------
001072e6: RLP; test eax, eax ; jne 0x107381
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00107359: RLP; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
read: ebx rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
00107377: RLP; xor ebx, ebx ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
read: ebx rsp 
write: eax ebx rbx rflags rsp 
--------------------------------------------------------------------------------
00107391: RLP; mov edi, 1 ; call 0x38aec
read: rip rsp 
write: edi rsp 
--------------------------------------------------------------------------------
001073d1: RLP; test eax, eax ; jne 0x1073ec
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00107424: RLP; test rax, rax ; mov rbx, rax ; je 0x1073d5
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
00107481: RLP; test eax, eax ; jne 0x1074ac
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00107493: RLP; mov eax, dword ptr [rsp + 0x1c] ; add rsp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: rsp 
write: eax r12 r13 r14 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
001074c8: RLP; mov rdi, rbx ; mov rsi, rax ; call 0x10e98c
read: rax rbx rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
001074d7: RLP; mov dword ptr [rsp + 0x1c], 0 ; jmp 0x107485
read: 
write: 
--------------------------------------------------------------------------------
00107517: RLP; test eax, eax ; jne 0x10752c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00107564: RLP; test rax, rax ; mov rbx, rax ; je 0x10751b
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
001075c9: RLP; mov rax, qword ptr [rbx + 8] ; mov rdi, rbx ; call qword ptr [rax + 0x20]
read: rbx rsp 
write: rax rdi rsp 
--------------------------------------------------------------------------------
001075d7: RLP; mov eax, dword ptr [rsp + 0x1c] ; add rsp, 0x50 ; pop rbx ; pop rbp ; pop r12 ; ret
read: rsp 
write: eax r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00107616: RLP; lea rcx, [rsp + 0x14] ; mov r9d, 0x1f4 ; mov r8d, 0x32 ; mov edx, 2 ; mov esi, 0x186a0 ; mov rdi, rbx ; mov r12d, eax ; mov dword ptr [rsp + 0x14], eax ; call 0x10f1fc
read: eax rbx rip rsp 
write: edx esi r12d r8d r9d rcx rdi rsp 
--------------------------------------------------------------------------------
00107644: RLP; test rax, rax ; mov rbp, rax ; je 0x107696
read: rax rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
00107684: RLP; test eax, eax ; jne 0x1076c4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00107696: RLP; cmp r12d, -1 ; je 0x1076a9
read: r12d rflags 
write: rflags 
--------------------------------------------------------------------------------
001076a9: RLP; xor eax, eax ; mov word ptr [rbx + 2], ax ; mov rax, qword ptr [rsp + 0x18] ; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
read: ax eax rsp 
write: eax r12 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
001076e0: RLP; mov rdi, rbp ; mov rsi, rax ; call 0x10e98c
read: rax rbp rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
001076ef: RLP; jmp 0x107688
read: 
write: 
--------------------------------------------------------------------------------
00107715: RLP; test eax, eax ; jne 0x10772c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010773c: RLP; test eax, eax ; je 0x107719
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00107750: RLP; test eax, eax ; je 0x107719
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00107764: RLP; jmp 0x10771b
read: 
write: 
--------------------------------------------------------------------------------
001077b0: RLP; test eax, eax ; je 0x107824
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001077dd: RLP; test eax, eax ; je 0x107824
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00107813: RLP; test eax, eax ; je 0x107824
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010787e: RLP; test eax, eax ; jne 0x10788c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010789c: RLP; test eax, eax ; je 0x107882
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001078b8: RLP; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
001078eb: RLP; test eax, eax ; jne 0x107904
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00107914: RLP; test eax, eax ; je 0x1078ef
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00107928: RLP; test eax, eax ; je 0x1078ef
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00107943: RLP; lea rsi, [rsp + 8] ; mov rdi, rbx ; mov r12d, eax ; call 0x113a7c
read: eax rbx rip rsp 
write: r12d rdi rsi rsp 
--------------------------------------------------------------------------------
00107957: RLP; test eax, eax ; je 0x1078ef
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00107969: RLP; mov rsi, qword ptr [rbp + 0x20] ; mov r13d, eax ; mov rdi, rbx ; xor eax, eax ; call qword ptr [rbp + 0x28]
read: eax rbx rsp 
write: eax r13d rdi rflags rsi rsp 
--------------------------------------------------------------------------------
0010797c: RLP; test eax, eax ; je 0x1078ef
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00107992: RLP; mov edx, eax ; mov r14d, eax ; mov rax, qword ptr [rbx + 8] ; sub rdx, r13 ; mov esi, r12d ; mov rdi, rbx ; mov qword ptr [rbp + 0x18], rdx ; call qword ptr [rax + 0x28]
read: eax r12d r13 rbx rdx rsp 
write: edx esi r14d rax rdi rdx rflags rsp 
--------------------------------------------------------------------------------
001079af: RLP; lea rsi, [rbp + 0x18] ; mov rdi, rbx ; call 0x113a7c
read: rbx rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
001079bf: RLP; test eax, eax ; je 0x1078ef
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001079d8: RLP; mov eax, 1 ; jmp 0x1078f1
read: 
write: eax 
--------------------------------------------------------------------------------
00107a4c: RLP; mov rbx, rax ; mov eax, 0x10 ; test rbx, rbx ; je 0x107afc
read: rax rbx rflags 
write: eax rbx rflags 
--------------------------------------------------------------------------------
00107ae6: RLP; mov rdx, qword ptr [rbx + 8] ; mov dword ptr [rsp + 0x18], eax ; mov rdi, rbx ; call qword ptr [rdx + 0x20]
read: eax rbx rsp 
write: rdi rdx rsp 
--------------------------------------------------------------------------------
00107af8: RLP; mov eax, dword ptr [rsp + 0x18] ; xor edx, edx ; mov word ptr [rbp + 2], dx ; add rsp, 0x88 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: dx edx rsp 
write: eax edx r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00107b50: RLP; mov edx, 0x11 ; mov esi, 2 ; mov edi, 2 ; mov rbx, rax ; mov dword ptr [rsp + 0x7c], 1 ; call 0xe483c
read: rax rip rsp 
write: edi edx esi rbx rsp 
--------------------------------------------------------------------------------
00107b73: RLP; test eax, eax ; mov r15d, eax ; mov edx, 5 ; lea rsi, [rip + 0x347a8] ; js 0x107de8
read: eax rflags 
write: edx r15d rflags rsi 
--------------------------------------------------------------------------------
00107baa: RLP; test eax, eax ; js 0x107ddc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00107be2: RLP; test eax, eax ; jne 0x107f5c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00107c61: RLP; mov r8d, 0x6f00 ; mov edi, 2 ; mov qword ptr [rsp + 0x90], 0 ; mov qword ptr [rsp + 0x98], 0 ; mov word ptr [rsp + 0x92], r8w ; mov word ptr [rsp + 0x90], di ; call 0x10d3ec
read: di r8w rip rsp 
write: edi r8d rsp 
--------------------------------------------------------------------------------
00107c9e: RLP; mov qword ptr [rsp + 0x1a8], 5 ; mov qword ptr [rsp + 0x1a0], 2 ; xor ecx, ecx ; mov qword ptr [rsp + 0x198], 0x186a0 ; mov qword ptr [rsp + 0x190], 2 ; mov edx, 0x578 ; mov qword ptr [rsp + 0x28], rax ; mov qword ptr [rsp + 0x180], rax ; mov rax, qword ptr [rbx] ; mov dword ptr [rsp + 0x188], 0 ; mov qword ptr [rsp + 0x1b0], rax ; mov rax, qword ptr [rbx + 8] ; mov qword ptr [rsp + 0x108], r14 ; lea r14, [rsp + 0xd0] ; mov qword ptr [rsp + 0x1b8], rax
read: ecx r14 rax 
write: ecx edx r14 rax rflags 
--------------------------------------------------------------------------------
00107dad: RLP; lea rax, [rsp + 0x180] ; mov rdi, r14 ; mov rsi, rax ; mov qword ptr [rsp + 0x10], rax ; call 0x10859c
read: r14 rax rip rsp 
write: rax rdi rsi rsp 
--------------------------------------------------------------------------------
00107dc9: RLP; test eax, eax ; jne 0x107e3c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00107dfd: RLP; mov rdi, rax ; call 0x694fc
read: rax rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
00107e09: RLP; mov edi, r15d ; call 0xd711c
read: r15d rip rsp 
write: edi rsp 
--------------------------------------------------------------------------------
00107e15: RLP; mov rdx, qword ptr [rbx + 0x38] ; mov rdi, rbx ; call qword ptr [rdx + 0x20]
read: rbx rsp 
write: rdi rdx rsp 
--------------------------------------------------------------------------------
00107e23: RLP; add rsp, 0x29c8 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: ebp rsp 
write: eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00107e50: RLP; test eax, eax ; je 0x107dcd
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00107e6a: RLP; mov dword ptr [rsp + 0x44], eax ; mov rax, qword ptr [rsp + 0xd8] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x107e88
read: eax rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
00107e88: RLP; lea rax, [rsp + 0x130] ; mov dword ptr [rsp + 0x40], 0xfa0 ; mov qword ptr [rsp + 0x58], rbx ; mov qword ptr [rsp + 0x68], r14 ; mov rsi, rax ; mov qword ptr [rsp + 0x48], rax ; mov eax, dword ptr [rsp + 0x1c] ; sub eax, 1 ; lea rax, [rsi + rax*4 + 4] ; lea rsi, [rsp + 0x90] ; mov qword ptr [rsp + 0x50], rsi ; lea rsi, [rsp + 0xb0] ; mov r12, rax ; mov qword ptr [rsp + 0x30], rsi ; lea rsi, [rsp + 0x80]
read: eax r14 rax rbx rsi 
write: eax r12 rax rflags rsi 
--------------------------------------------------------------------------------
00107f3c: RLP; cmp rax, r13 ; je 0x107f0c
read: r13 rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00107f6c: RLP; mov dword ptr [rsp + 0x1c], 0 ; jmp 0x107c61
read: 
write: 
--------------------------------------------------------------------------------
00107ff0: RLP; cmp eax, -1 ; je 0x10813c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00108071: RLP; test eax, eax ; js 0x10803c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010809e: RLP; mov rsi, qword ptr [rsp + 0x10] ; mov rdi, rbx ; call 0x10837c
read: rbx rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
001080af: RLP; test eax, eax ; je 0x1080c4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001080f4: RLP; xor eax, eax ; mov rsi, qword ptr [rsp + 0x2a00] ; mov rdi, rbx ; mov rcx, qword ptr [rsp + 8] ; call rcx
read: eax rbx rcx rsp 
write: eax rcx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
0010810c: RLP; mov rax, qword ptr [rsp + 0xd8] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x108126
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
00108126: RLP; test r14d, r14d ; je 0x107f90
read: r14d rflags 
write: rflags 
--------------------------------------------------------------------------------
00108173: RLP; mov rdi, rax ; call 0x694fc
read: rax rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0010817f: RLP; jmp 0x107e09
read: 
write: 
--------------------------------------------------------------------------------
001081df: RLP; mov r14d, eax ; jmp 0x1080c4
read: eax 
write: r14d 
--------------------------------------------------------------------------------
00108206: RLP; test eax, eax ; je 0x108228
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00108225: RLP; mov r12d, eax ; pop rbx ; pop rbp ; mov eax, r12d ; pop r12 ; ret
read: eax r12d rsp 
write: eax r12 r12d rbp rbx rsp 
--------------------------------------------------------------------------------
00108244: RLP; test eax, eax ; je 0x108228
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00108258: RLP; mov r12d, eax ; jmp 0x108228
read: eax 
write: r12d 
--------------------------------------------------------------------------------
00108285: RLP; xor edx, edx ; test eax, eax ; je 0x1082a6
read: eax edx rflags 
write: edx rflags 
--------------------------------------------------------------------------------
001082a4: RLP; mov edx, eax ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
read: eax edx rsp 
write: eax edx rbp rbx rflags rsp 
--------------------------------------------------------------------------------
001082d5: RLP; test eax, eax ; jne 0x1082ec
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001082fc: RLP; test eax, eax ; je 0x1082d9
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010831c: RLP; mov edx, eax ; xor eax, eax ; test edx, edx ; je 0x1082db
read: eax edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
00108334: RLP; jmp 0x1082db
read: 
write: 
--------------------------------------------------------------------------------
0010834c: RLP; jmp 0x1082db
read: 
write: 
--------------------------------------------------------------------------------
00108372: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00108395: RLP; test eax, eax ; jne 0x1083ac
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001083bc: RLP; test eax, eax ; je 0x108399
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001083e4: RLP; jmp 0x10839b
read: 
write: 
--------------------------------------------------------------------------------
00108425: RLP; test eax, eax ; je 0x108411
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00108439: RLP; test eax, eax ; je 0x108411
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010844d: RLP; test eax, eax ; je 0x108411
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00108461: RLP; test eax, eax ; je 0x108411
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00108475: RLP; jmp 0x108413
read: 
write: 
--------------------------------------------------------------------------------
001085fc: RLP; test eax, eax ; je 0x1085cc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00108610: RLP; test eax, eax ; je 0x1085cc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010862b: RLP; test eax, eax ; je 0x1085cc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00108646: RLP; test eax, eax ; je 0x1085cc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010865a: RLP; test eax, eax ; je 0x1085cc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00108672: RLP; test eax, eax ; je 0x1085cc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010868a: RLP; test eax, eax ; je 0x1085cc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001086a2: RLP; jmp 0x1085ce
read: 
write: 
--------------------------------------------------------------------------------
001086bf: RLP; test rax, rax ; je 0x1085ed
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010875d: RLP; test rax, rax ; je 0x1088eb
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00108779: RLP; mov rax, qword ptr [rbp + 8] ; mov esi, 8 ; mov rdi, rbp ; call qword ptr [rax + 0x30]
read: rbp rsp 
write: esi rax rdi rsp 
--------------------------------------------------------------------------------
0010878c: RLP; test rax, rax ; je 0x10892b
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
001087de: RLP; test rax, rax ; je 0x10890b
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
001087fa: RLP; mov eax, 1 ; jmp 0x1085ce
read: 
write: eax 
--------------------------------------------------------------------------------
00108827: RLP; test rax, rax ; je 0x1085dc
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
001088c6: RLP; jmp 0x1088a9
read: 
write: 
--------------------------------------------------------------------------------
001088da: RLP; mov rcx, rax ; mov eax, dword ptr [rbx + 0x40] ; add eax, 3 ; and eax, 0xfffffffc ; add rcx, rax ; jmp 0x108893
read: eax rax rcx 
write: eax rcx rflags 
--------------------------------------------------------------------------------
001088fe: RLP; test eax, eax ; jne 0x108779
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010891e: RLP; test eax, eax ; setne al ; movzx eax, al ; jmp 0x1085ce
read: al eax rflags 
write: al eax rflags 
--------------------------------------------------------------------------------
0010893b: RLP; test eax, eax ; je 0x1085cc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00108953: RLP; test eax, eax ; je 0x1085cc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00108970: RLP; mov qword ptr [rbx + 0x38], rax ; jmp 0x108747
read: rax 
write: 
--------------------------------------------------------------------------------
00108985: RLP; mov qword ptr [rbx + 0x50], rax ; jmp 0x1087c8
read: rax 
write: 
--------------------------------------------------------------------------------
001089fe: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00108a5c: RLP; mov rax, qword ptr [rsp + 0x18] ; mov esi, r12d ; mov rdi, rbp ; call qword ptr [rax + 0x30]
read: r12d rbp rsp 
write: esi rax rdi rsp 
--------------------------------------------------------------------------------
00108a6e: RLP; test rax, rax ; je 0x108b8c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00108aac: RLP; add rsp, 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: ebx rsp 
write: eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00108aef: RLP; mov rcx, qword ptr [rsp] ; mov rax, qword ptr [rbx + 8] ; mov edi, r14d ; mov r8, qword ptr [rsp + 8] ; add rdi, rcx ; mov byte ptr [rax + r8], 0 ; mov eax, dword ptr [rdi] ; bswap eax ; mov dword ptr [rbx + 0x10], eax ; mov eax, dword ptr [rdi + 4] ; bswap eax ; mov dword ptr [rbx + 0x14], eax ; mov edx, dword ptr [rdi + 8] ; bswap edx ; cmp edx, 0x10
read: eax edx r14d rcx rdi 
write: eax edi edx r8 rax rcx rdi rflags 
--------------------------------------------------------------------------------
00108b9b: RLP; test eax, eax ; jne 0x108b5a
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00108bb6: RLP; jmp 0x108a90
read: 
write: 
--------------------------------------------------------------------------------
00108c25: RLP; mov rdi, qword ptr [rax + 0xf0] ; xor eax, eax ; test rdi, rdi ; je 0x108c4d
read: eax rdi rflags 
write: eax rdi rflags 
--------------------------------------------------------------------------------
00108c4d: RLP; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00108c75: RLP; mov rdi, qword ptr [rax + 0xf0] ; xor eax, eax ; test rdi, rdi ; je 0x108c93
read: eax rdi rflags 
write: eax rdi rflags 
--------------------------------------------------------------------------------
00108c93: RLP; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00108cb0: RLP; mov rbx, qword ptr [rax + 0xf0] ; test rbx, rbx ; je 0x108cf3
read: rbx rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
00108ce0: RLP; mov rsi, r12 ; mov rdi, rbp ; call 0x10837c
read: r12 rbp rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
00108cef: RLP; test eax, eax ; jne 0x108cfc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00108d0d: RLP; pop rbx ; pop rbp ; mov eax, 1 ; pop r12 ; ret
read: rsp 
write: eax r12 rbp rbx rsp 
--------------------------------------------------------------------------------
00108d32: RLP; mov rdx, qword ptr [rax + 0xf0] ; xor eax, eax ; test rdx, rdx ; je 0x108d7b
read: eax rdx rflags 
write: eax rdx rflags 
--------------------------------------------------------------------------------
00108d64: RLP; mov rsi, rbp ; mov rdi, rbx ; call 0x10859c
read: rbp rbx rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
00108d73: RLP; test eax, eax ; setne al ; movzx eax, al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: al eax rflags rsp 
write: al eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00108d9a: RLP; mov rbx, qword ptr [rax + 0xf0] ; test rbx, rbx ; je 0x108dfc
read: rbx rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
00108df2: RLP; lea rax, [rbx + 0x2260] ; pop rbx ; ret
read: rsp 
write: rax rbx rsp 
--------------------------------------------------------------------------------
00108e0f: RLP; test rax, rax ; mov rbx, rax ; jne 0x108da6
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
00108e54: RLP; mov rbx, qword ptr [rax + 0xf8] ; mov ebp, r14d ; test rbx, rbx ; jne 0x108e79
read: r14d rbx rflags 
write: ebp rbx rflags 
--------------------------------------------------------------------------------
00108e9c: RLP; mov rax, qword ptr [r13 + 8] ; mov rsi, qword ptr [rbx + 0x10] ; mov rdx, rbp ; mov rdi, r13 ; call qword ptr [rax + 0x10]
read: r13 rbp rsp 
write: rax rdi rdx rsi rsp 
--------------------------------------------------------------------------------
00108eb1: RLP; test eax, eax ; je 0x108fbf
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00108ec2: RLP; test rax, rax ; je 0x108fe4
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00108ede: RLP; test eax, eax ; jne 0x108fcd
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00108f05: RLP; lea rdi, [rsp + 8] ; mov edx, ebx ; jmp 0x108f38
read: ebx 
write: edx rdi 
--------------------------------------------------------------------------------
00108f30: RLP; lea rdi, [rsp + 8] ; mov edx, r14d ; mov rsi, rax ; xor eax, eax ; call 0x523bc
read: eax r14d rax rip rsp 
write: eax edx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00108f46: RLP; test eax, eax ; js 0x108fb4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00108f68: RLP; mov rdi, qword ptr [rsp + 8] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
00108f76: RLP; mov edi, 1 ; call 0x38aec
read: rip rsp 
write: edi rsp 
--------------------------------------------------------------------------------
00108f99: RLP; test eax, eax ; je 0x108ff6
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00108fcb: RLP; jmp 0x108f9d
read: 
write: 
--------------------------------------------------------------------------------
00108fe2: RLP; jmp 0x108f9d
read: 
write: 
--------------------------------------------------------------------------------
00109010: RLP; mov edi, 1 ; call 0x38aec
read: rip rsp 
write: edi rsp 
--------------------------------------------------------------------------------
00109054: RLP; cmp qword ptr [rax + 0x100], 0 ; mov r12, rax ; je 0x1091ac
read: rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
00109074: RLP; mov rdi, qword ptr [r12 + 0x100] ; lea rcx, [rip - 0x267] ; mov r8d, 0x11 ; mov rdx, r15 ; mov rsi, rbx ; call 0x11181c
read: r15 rbx rip rsp 
write: r8d rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
00109098: RLP; test eax, eax ; jne 0x10910c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001090b8: RLP; lea rdi, [rsp + 0x18] ; mov rsi, rax ; mov rcx, r15 ; xor eax, eax ; mov rdx, rbx ; call 0x523bc
read: eax r15 rax rbx rip rsp 
write: eax rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
001090d1: RLP; test eax, eax ; js 0x10919d
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001090fc: RLP; mov rdi, qword ptr [rsp + 0x18] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0010910a: RLP; jmp 0x10914f
read: 
write: 
--------------------------------------------------------------------------------
0010911a: RLP; test rax, rax ; je 0x10920c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00109180: RLP; lea rdi, [rsp + 0x18] ; xor edx, edx ; mov rsi, rax ; xor eax, eax ; call 0x523bc
read: eax edx rax rip rsp 
write: eax edx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00109195: RLP; test eax, eax ; jns 0x1090d9
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001091ba: RLP; test rax, rax ; mov qword ptr [r12 + 0x100], rax ; mov edx, 5 ; lea rsi, [rip + 0x331fb] ; jne 0x109065
read: rax rflags 
write: edx rflags rsi 
--------------------------------------------------------------------------------
001091ec: RLP; mov rdi, rax ; call 0x853ec
read: rax rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
001091f8: RLP; mov qword ptr [rsp + 0x18], rax ; mov rdx, rax ; jmp 0x1090de
read: rax 
write: rdx 
--------------------------------------------------------------------------------
00109253: RLP; mov edx, eax ; xor eax, eax ; test edx, edx ; je 0x10923a
read: eax edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
00109284: RLP; add rsp, 0x10 ; pop rbx ; ret
read: rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
001092cb: RLP; test eax, eax ; jne 0x10932c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001092fa: RLP; xor edx, edx ; test eax, eax ; jne 0x10930c
read: eax edx rflags 
write: edx rflags 
--------------------------------------------------------------------------------
0010931f: RLP; xor edx, edx ; test eax, eax ; setne dl ; mov eax, edx ; jmp 0x109302
read: eax edx rflags 
write: dl eax edx rflags 
--------------------------------------------------------------------------------
0010933c: RLP; test eax, eax ; je 0x1092cf
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001093eb: RLP; cmp eax, -1 ; je 0x10940c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00109478: RLP; test eax, eax ; jne 0x10942c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001094a2: RLP; mov rdi, rbx ; call 0x1f46c
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
001094ae: RLP; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
001094df: RLP; mov rdx, rax ; mov eax, 0xffffffff ; cmp rdx, -1 ; je 0x109503
read: rax rdx rflags 
write: eax rdx rflags 
--------------------------------------------------------------------------------
00109547: RLP; mov edx, eax ; sub edx, r12d ; cmp eax, -1 ; je 0x10955c
read: eax edx r12d rflags 
write: edx rflags 
--------------------------------------------------------------------------------
001095ef: RLP; test eax, eax ; jne 0x1095d0
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00109625: RLP; add qword ptr [rbx + 0x58], r12 ; test ebp, ebp ; jg 0x1095d4
read: ebp r12 rflags 
write: rflags 
--------------------------------------------------------------------------------
0010965b: RLP; test eax, eax ; je 0x10968c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001096d2: RLP; test eax, eax ; jne 0x1096b3
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00109707: RLP; test eax, eax ; je 0x1096d6
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010976a: RLP; xor edx, edx ; test eax, eax ; je 0x10977a
read: eax edx rflags 
write: edx rflags 
--------------------------------------------------------------------------------
001097f7: RLP; xor edx, edx ; test eax, eax ; je 0x10980a
read: eax edx rflags 
write: edx rflags 
--------------------------------------------------------------------------------
00109894: RLP; xor edx, edx ; cmp ebp, eax ; jne 0x1098ac
read: eax ebp edx rflags 
write: edx rflags 
--------------------------------------------------------------------------------
00109915: RLP; mov edx, eax ; xor eax, eax ; test edx, edx ; je 0x1098eb
read: eax edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
00109985: RLP; mov edx, eax ; xor eax, eax ; test edx, edx ; je 0x10995c
read: eax edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
001099ea: RLP; mov rdi, rbp ; add rdi, qword ptr [r12 + 0x20] ; mov r14, qword ptr [r12 + 0x28] ; cmp rdi, r14 ; mov qword ptr [r12 + 0x20], rdi ; jne 0x1099c4
read: r14 rbp rdi rflags 
write: r14 rdi rflags 
--------------------------------------------------------------------------------
00109a33: RLP; test eax, eax ; jne 0x1099b5
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00109a82: RLP; cmp ebp, 0x63 ; mov rbx, rax ; mov edx, dword ptr [rsp + 0xc] ; jbe 0x109b5c
read: ebp rax rflags 
write: edx rbx rflags 
--------------------------------------------------------------------------------
00109abd: RLP; test rax, rax ; mov rbp, rax ; je 0x109b6c
read: rax rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
00109b88: RLP; lea rdx, [rip + 0x2da46] ; lea rsi, [rip + 0x2d0e6] ; mov rcx, rax ; xor edi, edi ; xor eax, eax ; call 0x6bcbc
read: eax edi rax rip rsp 
write: eax edi rcx rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00109ba6: RLP; mov rdi, rbx ; call 0x1f46c
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
00109bb2: RLP; mov rdi, rbp ; call 0x1f46c
read: rbp rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
00109bbe: RLP; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00109c18: RLP; test eax, eax ; jne 0x109bf4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00109c30: RLP; test eax, eax ; jne 0x109be5
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00109c8a: RLP; test eax, eax ; jne 0x109c64
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00109ca8: RLP; test eax, eax ; jne 0x109c55
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00109d39: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00109dbf: RLP; lea rsi, [rip + 0x2d81d] ; xor r9d, r9d ; xor edx, edx ; mov r8d, eax ; mov rcx, r14 ; mov rdi, r15 ; mov ebx, eax ; call 0x10506c
read: eax edx r14 r15 r9d rip rsp 
write: ebx edx r8d r9d rcx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00109ddf: RLP; test eax, eax ; je 0x109dac
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00109e18: RLP; test eax, eax ; je 0x109e2f
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00109ed3: RLP; mov rcx, qword ptr [rsp + 8] ; lea rsi, [rip + 0x2d711] ; xor r9d, r9d ; xor edx, edx ; mov r8d, eax ; mov rdi, r15 ; mov ebx, eax ; call 0x10506c
read: eax edx r15 r9d rip rsp 
write: ebx edx r8d r9d rcx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00109ef5: RLP; test eax, eax ; je 0x109ebc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00109f35: RLP; test eax, eax ; je 0x109f4c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00109f85: RLP; test eax, eax ; je 0x109fdc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00109fa9: RLP; test eax, eax ; setne al ; add rsp, 8 ; pop rbx ; movzx eax, al ; pop rbp ; ret
read: al eax rflags rsp 
write: al eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00109fd1: RLP; test eax, eax ; jne 0x109fec
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010a001: RLP; test eax, eax ; lea rsi, [rbx + 0x18] ; je 0x109fdc
read: eax rflags 
write: rflags rsi 
--------------------------------------------------------------------------------
0010a02a: RLP; xor edx, edx ; test eax, eax ; je 0x10a049
read: eax edx rflags 
write: edx rflags 
--------------------------------------------------------------------------------
0010a042: RLP; xor edx, edx ; test eax, eax ; setne dl ; add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
read: eax edx rflags rsp 
write: dl eax edx rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010a16e: RLP; mov edx, eax ; mov ecx, dword ptr [rsp + 4] ; mov eax, 2 ; test edx, edx ; mov r8, qword ptr [rsp + 8] ; jne 0x10a1bc
read: eax edx rflags 
write: eax ecx edx r8 rflags 
--------------------------------------------------------------------------------
0010a259: RLP; mov edx, eax ; mov ecx, dword ptr [rsp + 0xc] ; mov eax, 2 ; test edx, edx ; je 0x10a1eb
read: eax edx rflags 
write: eax ecx edx rflags 
--------------------------------------------------------------------------------
0010aaab: RLP; mov rax, qword ptr [rsp + 0x20] ; mov rcx, qword ptr [rsp + 0x28] ; mov rdx, rax ; mov byte ptr [rbx - 8], al ; mov byte ptr [rbx - 4], cl ; shr rdx, 8 ; mov r15d, eax ; mov edi, ecx ; mov byte ptr [rbx - 7], dl ; mov r11d, edx ; mov rdx, rax ; shr rdx, 0x10 ; mov byte ptr [rbx - 6], dl ; mov r10d, edx ; mov rdx, rax
read: al cl dl eax ecx edx rax rdx 
write: edi r10d r11d r15d rax rcx rdx rflags 
--------------------------------------------------------------------------------
0010aca5: RLP; test r12d, r12d ; jne 0x10abd4
read: r12d rflags 
write: rflags 
--------------------------------------------------------------------------------
0010adbd: RLP; test eax, eax ; setne al ; add rsp, 8 ; movzx eax, al ; ret
read: al eax rflags rsp 
write: al eax rflags rsp 
--------------------------------------------------------------------------------
0010ade2: RLP; test eax, eax ; setne al ; add rsp, 8 ; movzx eax, al ; ret
read: al eax rflags rsp 
write: al eax rflags rsp 
--------------------------------------------------------------------------------
0010ae12: RLP; test eax, eax ; setne al ; add rsp, 8 ; movzx eax, al ; ret
read: al eax rflags rsp 
write: al eax rflags rsp 
--------------------------------------------------------------------------------
0010ae4a: RLP; test eax, eax ; je 0x10ae66
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010ae5e: RLP; test eax, eax ; setne al ; movzx eax, al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: al eax rflags rsp 
write: al eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010ae9a: RLP; test eax, eax ; je 0x10aeb2
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010aeae: RLP; test eax, eax ; jne 0x10aebc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010aecc: RLP; test eax, eax ; setne al ; add rsp, 8 ; pop rbx ; movzx eax, al ; pop rbp ; ret
read: al eax rflags rsp 
write: al eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010aef5: RLP; mov edx, eax ; xor eax, eax ; test edx, edx ; je 0x10af08
read: eax edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
0010af24: RLP; test eax, eax ; setne al ; add rsp, 8 ; pop rbx ; movzx eax, al ; pop rbp ; ret
read: al eax rflags rsp 
write: al eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010af55: RLP; test eax, eax ; jne 0x10af6c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010af7c: RLP; test eax, eax ; je 0x10af59
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010afa6: RLP; test eax, eax ; setne al ; add rsp, 8 ; pop rbx ; movzx eax, al ; pop rbp ; ret
read: al eax rflags rsp 
write: al eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010afd5: RLP; mov edx, eax ; xor eax, eax ; test edx, edx ; je 0x10afe8
read: eax edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
0010b004: RLP; test eax, eax ; setne al ; add rsp, 8 ; pop rbx ; movzx eax, al ; pop rbp ; ret
read: al eax rflags rsp 
write: al eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010b03a: RLP; test eax, eax ; je 0x10b057
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010b053: RLP; test eax, eax ; jne 0x10b064
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010b079: RLP; test eax, eax ; setne al ; add rsp, 8 ; pop rbx ; movzx eax, al ; pop rbp ; ret
read: al eax rflags rsp 
write: al eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010b0a5: RLP; mov edx, eax ; xor eax, eax ; test edx, edx ; je 0x10b0b8
read: eax edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
0010b0d4: RLP; test eax, eax ; setne al ; add rsp, 8 ; pop rbx ; movzx eax, al ; pop rbp ; ret
read: al eax rflags rsp 
write: al eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010b10f: RLP; test eax, eax ; js 0x10b294
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010b125: RLP; test eax, eax ; js 0x10b266
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010b136: RLP; cmp eax, -1 ; mov ebx, eax ; je 0x10b24c
read: eax rflags 
write: ebx rflags 
--------------------------------------------------------------------------------
0010b154: RLP; mov edi, dword ptr [rsp] ; call 0xd718c
read: rip rsp 
write: edi rsp 
--------------------------------------------------------------------------------
0010b160: RLP; mov edi, 1 ; call 0xd711c
read: rip rsp 
write: edi rsp 
--------------------------------------------------------------------------------
0010b16e: RLP; mov edi, dword ptr [rsp + 0x14] ; call 0xd718c
read: rip rsp 
write: edi rsp 
--------------------------------------------------------------------------------
0010b17b: RLP; mov r12, qword ptr [rip + 0x25dc1a] ; mov rdi, qword ptr [r12] ; call 0x6c45c
read: rip rsp 
write: r12 rdi rsp 
--------------------------------------------------------------------------------
0010b18f: RLP; call 0x10717c
read: rip rsp 
write: rsp 
--------------------------------------------------------------------------------
0010b198: RLP; lea ebx, [rax - 1] ; cmp ebx, 2 ; jle 0x10b1b7
read: ebx rflags 
write: ebx rflags 
--------------------------------------------------------------------------------
0010b1b2: RLP; cmp ebx, 2 ; jne 0x10b1a4
read: ebx rflags 
write: rflags 
--------------------------------------------------------------------------------
0010b1c4: RLP; xor edx, edx ; mov rsi, rbp ; mov rdi, rbp ; xor eax, eax ; call 0xb36bc
read: eax edx rbp rip rsp 
write: eax edx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
0010b1d7: RLP; lea rdi, [rip + 0x2b6ce] ; call 0x694fc
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0010b1e7: RLP; mov edi, 0xffffffff ; call 0xb319c
read: rip rsp 
write: edi rsp 
--------------------------------------------------------------------------------
0010b208: RLP; mov edi, dword ptr [rsp] ; mov qword ptr [r13], rax ; call 0xd711c
read: rax rip rsp 
write: edi rsp 
--------------------------------------------------------------------------------
0010b218: RLP; mov edi, dword ptr [rsp + 0x10] ; lea rsi, [rip + 0x2b445] ; call 0x6c1fc
read: rip rsp 
write: edi rsi rsp 
--------------------------------------------------------------------------------
0010b22c: RLP; mov edi, dword ptr [rsp + 0x14] ; mov qword ptr [r12], rax ; call 0xd711c
read: rax rip rsp 
write: edi rsp 
--------------------------------------------------------------------------------
0010b23d: RLP; mov eax, ebx ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: ebx rsp 
write: eax r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010b259: RLP; mov edi, dword ptr [rsp + 0x14] ; call 0xd711c
read: rip rsp 
write: edi rsp 
--------------------------------------------------------------------------------
0010b266: RLP; mov edi, dword ptr [rsp] ; call 0xd711c
read: rip rsp 
write: edi rsp 
--------------------------------------------------------------------------------
0010b272: RLP; mov edi, dword ptr [rsp + 4] ; call 0xd711c
read: rip rsp 
write: edi rsp 
--------------------------------------------------------------------------------
0010b27f: RLP; add rsp, 0x28 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rsp 
write: eax r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010b2d2: RLP; test eax, eax ; mov ebp, eax ; js 0x10b464
read: eax rflags 
write: ebp rflags 
--------------------------------------------------------------------------------
0010b30d: RLP; test eax, eax ; js 0x10b485
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010b32a: RLP; mov rbx, qword ptr [rip + 0x25db33] ; mov r12, rax ; mov r13d, eax ; mov r15d, dword ptr fs:[rbx] ; mov edi, ebp ; call 0xd711c
read: eax ebp rax rip rsp 
write: edi r12 r13d r15d rbx rsp 
--------------------------------------------------------------------------------
0010b346: RLP; test r12d, r12d ; mov dword ptr fs:[rbx], r15d ; js 0x10b464
read: r12d r15d rflags 
write: rflags 
--------------------------------------------------------------------------------
0010b3af: RLP; test eax, eax ; js 0x10b485
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010b410: RLP; test eax, eax ; js 0x10b3f4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010b43d: RLP; mov r12, rax ; mov r13d, eax ; jmp 0x10b337
read: eax rax 
write: r12 r13d 
--------------------------------------------------------------------------------
0010b45a: RLP; mov dword ptr fs:[rbx], r12d ; nop word ptr [rax + rax] ; add rsp, 0x38 ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: r12d rsp 
write: eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010b4d0: RLP; cmp qword ptr [rax + 0xd0], 0 ; mov r12, rax ; je 0x10b7cc
read: rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
0010b599: RLP; mov r8d, dword ptr [rsp] ; cmp eax, 1 ; jg 0x10b824
read: eax rflags 
write: r8d rflags 
--------------------------------------------------------------------------------
0010b657: RLP; mov rsi, qword ptr [rsp + 8] ; lea rdx, [rax + 1] ; mov rdi, rbx ; call 0x88bbc
read: rbx rip rsp 
write: rdi rdx rsi rsp 
--------------------------------------------------------------------------------
0010b66c: RLP; test eax, eax ; mov r10d, dword ptr [rsp + 0x1c] ; mov r9d, dword ptr [rsp + 0x20] ; mov r8d, dword ptr [rsp + 0x24] ; mov rcx, qword ptr [rsp + 0x28] ; jne 0x10b60c
read: eax rflags 
write: r10d r8d r9d rcx rflags 
--------------------------------------------------------------------------------
0010b6f9: RLP; mov ecx, dword ptr [rsp] ; mov rax, qword ptr [rsp + 0x50] ; mov r11d, dword ptr [rsp + 0x18] ; mov r8d, dword ptr [rsp + 8] ; mov r10d, dword ptr [rsp + 0x10] ; mov edx, dword ptr [rsp + 0x1c] ; sub rax, rcx ; mov esi, r11d ; cmp rax, rsi ; mov qword ptr [rsp + 0x50], rax ; setge cl ; cmp rax, rsi ; jne 0x10b735
read: r11d rax rcx rflags rsi 
write: cl ecx edx esi r10d r11d r8d rax rflags 
--------------------------------------------------------------------------------
0010b79e: RLP; mov rax, qword ptr [rbp + 8] ; mov rcx, qword ptr [rsp] ; mov byte ptr [rax + rcx], 0 ; lea rax, [r14 + 3] ; and eax, 0xfffffffc ; lea rdx, [r15 + rax] ; mov eax, dword ptr [rdx] ; mov dword ptr [rbp + 0x10], eax ; mov eax, dword ptr [rdx + 4] ; mov dword ptr [rbp + 0x14], eax ; mov eax, dword ptr [rdx + 8] ; mov dword ptr [rbp + 0x18], eax ; jmp 0x10b518
read: eax 
write: eax rax rcx rdx rflags 
--------------------------------------------------------------------------------
0010b7df: RLP; test rax, rax ; mov qword ptr [r12 + 0xd0], rax ; je 0x10b824
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010b7fa: RLP; xor edx, edx ; mov qword ptr [r12 + 0xd8], rax ; nop dword ptr [rax + rax] ; mov dword ptr [rax + rdx*4], edx ; add rdx, 1 ; cmp rdx, 0x40 ; jne 0x10b80c
read: edx rax rdx rflags 
write: edx rdx rflags 
--------------------------------------------------------------------------------
0010b856: RLP; test eax, eax ; mov r9d, dword ptr [rsp] ; mov ecx, dword ptr [rsp + 8] ; mov r8d, dword ptr [rsp + 0x18] ; je 0x10b74c
read: eax rflags 
write: ecx r8d r9d rflags 
--------------------------------------------------------------------------------
0010b8d8: RLP; test eax, eax ; js 0x10b74c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010b93b: RLP; xor r8d, r8d ; jmp 0x10b59d
read: r8d 
write: r8d rflags 
--------------------------------------------------------------------------------
0010b9ee: RLP; cmp eax, 1 ; mov r10d, dword ptr [rsp + 8] ; mov r11d, dword ptr [rsp + 0x18] ; mov r8d, dword ptr [rsp + 0x10] ; jg 0x10b824
read: eax rflags 
write: r10d r11d r8d rflags 
--------------------------------------------------------------------------------
0010ba98: RLP; mov r13, qword ptr [rbp + 8] ; or r12, 0xffffffffffffffff ; xor eax, eax ; mov rcx, r12 ; mov rdi, r13 ; repne scasb al, byte ptr [rdi] ; mov rbp, rcx ; not rbp ; mov edi, ebp ; call 0x1f3cc
read: al eax ebp r12 r13 rbp rcx rdi rflags rip rsp 
write: eax edi r12 r13 rbp rcx rdi rflags rsp 
--------------------------------------------------------------------------------
0010babb: RLP; test rax, rax ; mov qword ptr [rbx + 8], rax ; je 0x10b824
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010bada: RLP; mov rax, qword ptr [r14] ; mov qword ptr [rbx], rax ; mov eax, dword ptr [rsp] ; mov dword ptr [rbx + 0x10], eax ; mov rax, qword ptr [rbx + 0x20] ; test rax, rax ; je 0x10bb4e
read: eax rax rflags 
write: eax rax rflags 
--------------------------------------------------------------------------------
0010bb92: RLP; lea r10, [rbx + rbx*4] ; mov r9, rax ; mov rax, qword ptr [rax + 0xd0] ; shl r10, 3 ; mov rbx, qword ptr [rax + r10 + 0x20] ; test rbx, rbx ; je 0x10bc26
read: r10 rax rbx rflags 
write: r10 r9 rax rbx rflags 
--------------------------------------------------------------------------------
0010bc4e: RLP; test eax, eax ; mov r9, qword ptr [rsp] ; mov r10, qword ptr [rsp + 8] ; jne 0x10bd4c
read: eax rflags 
write: r10 r9 rflags 
--------------------------------------------------------------------------------
0010bc9d: RLP; test eax, eax ; mov r9, qword ptr [rsp] ; mov r10, qword ptr [rsp + 8] ; jne 0x10bcbc
read: eax rflags 
write: r10 r9 rflags 
--------------------------------------------------------------------------------
0010bd33: RLP; mov r9, qword ptr [rsp] ; mov r10, qword ptr [rsp + 8] ; mov rax, qword ptr [r9 + 0xd0] ; mov qword ptr [rax + r10 + 0x20], 0 ; cmp dword ptr [rsp + 0x1c], 0x10000 ; mov ebp, 0x10000 ; mov qword ptr [rsp + 8], r10 ; cmovge ebp, dword ptr [rsp + 0x1c] ; mov qword ptr [rsp], r9 ; movsxd rax, ebp ; lea rdi, [rax*4 + 0x10] ; call 0x1f3cc
read: ebp r10 r9 rflags rip rsp 
write: ebp r10 r9 rax rdi rflags rsp 
--------------------------------------------------------------------------------
0010bd7b: RLP; test rax, rax ; mov rbx, rax ; mov r9, qword ptr [rsp] ; mov r10, qword ptr [rsp + 8] ; je 0x10bc64
read: rax rflags 
write: r10 r9 rbx rflags 
--------------------------------------------------------------------------------
0010be17: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0010be61: RLP; mov rdi, rbx ; call 0x1f46c
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0010be6d: RLP; mov rdi, rbp ; call 0x1f46c
read: rbp rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0010be79: RLP; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010be8f: RLP; jmp 0x10be44
read: 
write: 
--------------------------------------------------------------------------------
0010c16c: RLP; test eax, eax ; mov r14d, r14d ; je 0x10c31c
read: eax r14d rflags 
write: r14d rflags 
--------------------------------------------------------------------------------
0010c18d: RLP; test eax, eax ; je 0x10c31c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010c1a7: RLP; test eax, eax ; je 0x10c31c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010c1c4: RLP; test eax, eax ; je 0x10c31c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010c1db: RLP; test eax, eax ; je 0x10c34c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010c24c: RLP; test eax, eax ; je 0x10c2cc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010c25f: RLP; test eax, eax ; jne 0x10c284
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010c2a0: RLP; mov eax, dword ptr [rbx + 0x90] ; test eax, eax ; je 0x10c364
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0010c2c4: RLP; test eax, eax ; jne 0x10c128
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010c341: RLP; mov eax, dword ptr [rbx + 0x90] ; jmp 0x10c26d
read: 
write: eax 
--------------------------------------------------------------------------------
0010c378: RLP; test eax, eax ; jne 0x10c3c2
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010c3b7: RLP; mov eax, dword ptr [rbx + 0x90] ; jmp 0x10c26d
read: 
write: eax 
--------------------------------------------------------------------------------
0010c3d7: RLP; test eax, eax ; jne 0x10c390
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010c42c: RLP; and rbx, 0xfffffffffffffff0 ; mov dword ptr [rbp - 0x84], eax ; call 0xb3dcc
read: eax rbx rip rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
0010c43f: RLP; mov r15d, eax ; call 0xb3dec
read: eax rip rsp 
write: r15d rsp 
--------------------------------------------------------------------------------
0010c44b: RLP; mov edx, dword ptr [rbp - 0x84] ; mov dword ptr [rbx + 0x18], eax ; lea rax, [rbp - 0x80] ; mov dword ptr [rbx + 0x14], r15d ; mov dword ptr [rbx + 8], 1 ; mov dword ptr [rbx + 0xc], 2 ; mov qword ptr [rbx], 0x1c ; mov dword ptr [rbx + 0x10], edx ; mov qword ptr [rbp - 0x50], rbx ; lea rbx, [rbp - 0x70] ; mov qword ptr [rbp - 0x80], r13 ; mov qword ptr [rbp - 0x78], r14 ; mov qword ptr [rbp - 0x60], rax ; mov qword ptr [rbp - 0x58], 1 ; mov qword ptr [rbp - 0x70], 0
read: eax edx r13 r14 r15d rax rbx 
write: edx rax rbx 
--------------------------------------------------------------------------------
0010c4d2: RLP; test eax, eax ; js 0x10c4b4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010c54e: RLP; cmp eax, -1 ; jne 0x10c52c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010c618: RLP; cmp eax, -1 ; je 0x10c72c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010c6a3: RLP; test eax, eax ; je 0x10c6bf
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010c6cf: RLP; test eax, eax ; mov edx, eax ; js 0x10c6ac
read: eax rflags 
write: edx rflags 
--------------------------------------------------------------------------------
0010c7b2: RLP; mov edi, 0x18 ; mov r14, rax ; call 0x1f3cc
read: rax rip rsp 
write: edi r14 rsp 
--------------------------------------------------------------------------------
0010c7c3: RLP; test r14, r14 ; mov rbx, rax ; je 0x10ca1c
read: r14 rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
0010c88b: RLP; mov qword ptr [rsp + 0x30], r12 ; lea r12, [r14 + 0xc8] ; lea rsi, [r14 + 0xa8] ; xor ecx, ecx ; mov edx, 0x18 ; mov qword ptr [rsp + 0x10], rax ; mov rdi, r12 ; mov dword ptr [rsp + 0x18], 0 ; mov qword ptr [rsp + 0x20], 2 ; mov qword ptr [rsp + 0x28], r13 ; call 0x11493c
read: ecx r12 r13 rax rip rsp 
write: ecx edx r12 rdi rflags rsi rsp 
--------------------------------------------------------------------------------
0010c8cc: RLP; lea rsi, [rsp + 0x10] ; mov rdi, r12 ; call 0x1083ec
read: r12 rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
0010c8dd: RLP; test eax, eax ; je 0x10c96c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010c8f6: RLP; mov dword ptr [r14 + 0xc0], eax ; mov rax, qword ptr [r14 + 0xd0] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x10c916
read: eax rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
0010c916: RLP; mov edx, dword ptr [rsp + 8] ; mov esi, dword ptr [rsp + 4] ; lea r9, [rip - 0x419] ; lea r8, [rip - 0x390] ; mov rcx, r14 ; mov rdi, r12 ; call 0x109a4c
read: r12 r14 rip rsp 
write: edx esi r8 r9 rcx rdi rsp 
--------------------------------------------------------------------------------
0010c93b: RLP; lea rax, [rip + 0x259e1a] ; mov qword ptr [rbx + 0x10], r14 ; mov qword ptr [rbx + 8], rax ; call 0x10667c
read: r14 rax rip rsp 
write: rax rsp 
--------------------------------------------------------------------------------
0010c953: RLP; mov qword ptr [rbx], rax ; add rsp, 0x78 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rax rbx rsp 
write: r12 r13 r14 r15 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010c981: RLP; mov rdi, rbx ; call 0x1f46c
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0010c98d: RLP; add rsp, 0x78 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: eax rsp 
write: eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010c9b0: RLP; jmp 0x10c975
read: 
write: 
--------------------------------------------------------------------------------
0010c9d1: RLP; lea rdi, [r15 + 2] ; mov dword ptr [rbp], eax ; mov dword ptr [rsp + 0xc], eax ; call 0x856dc
read: eax rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0010c9e5: RLP; mov ecx, dword ptr [rsp + 0xc] ; lea edx, [rax + 3] ; test ecx, ecx ; js 0x10ca7c
read: ecx rflags 
write: ecx edx rflags 
--------------------------------------------------------------------------------
0010ca02: RLP; test eax, eax ; js 0x10ca7c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010ca25: RLP; lea rsi, [rip + 0x2ab9a] ; lea rdi, [rip + 0x27f7a] ; mov edx, 5 ; mov rbp, rax ; call 0x2f4bc
read: rax rip rsp 
write: edx rbp rdi rsi rsp 
--------------------------------------------------------------------------------
0010ca44: RLP; lea rdx, [rip + 0x30361] ; lea rsi, [rip + 0x2a22a] ; mov rcx, rax ; xor edi, edi ; xor eax, eax ; call 0x6bcbc
read: eax edi rax rip rsp 
write: eax edi rcx rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0010ca62: RLP; mov dword ptr [rbp], 0xc ; mov dword ptr [rbp + 0x10], 0xc ; jmp 0x10c975
read: 
write: 
--------------------------------------------------------------------------------
0010ca85: RLP; mov rdx, qword ptr [rip + 0x25c3d8] ; mov dword ptr [rax], 0xc ; mov edx, dword ptr fs:[rdx] ; mov dword ptr [rax + 0x10], edx ; mov edi, dword ptr [rbp] ; cmp edi, -1 ; jne 0x10c9a7
read: edi edx rflags 
write: edi edx rdx rflags 
--------------------------------------------------------------------------------
0010cada: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0010cb11: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0010cb36: RLP; mov edi, dword ptr [rbx] ; call 0xd711c
read: rip rsp 
write: edi rsp 
--------------------------------------------------------------------------------
0010cb41: RLP; cmp word ptr [rbx + 4], 0 ; jne 0x10cb84
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
0010cb5f: RLP; mov rdi, rbp ; call 0x1f46c
read: rbp rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0010cb6b: RLP; mov rdi, rbx ; call 0x1f46c
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0010cb77: RLP; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010cbbf: RLP; mov edi, 0x1d0 ; mov rbx, rax ; call 0x1f3cc
read: rax rip rsp 
write: edi rbx rsp 
--------------------------------------------------------------------------------
0010cbd0: RLP; test rax, rax ; mov rbp, rax ; je 0x10cc54
read: rax rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
0010cc07: RLP; lea rax, [rip + 0x259bce] ; mov qword ptr [rbx + 0x40], rbp ; xor edx, edx ; add rbp, 0x40 ; mov rdi, rbx ; mov dword ptr [rbx], r12d ; mov qword ptr [rbx + 0x30], rbp ; mov qword ptr [rbx + 8], rax ; mov qword ptr [rbx + 0x48], 0 ; mov dword ptr [rbx + 0x10], 0 ; mov word ptr [rbx + 4], dx ; call 0x1115cc
read: dx edx r12d rax rbp rbx rip rsp 
write: edx rax rbp rdi rflags rsp 
--------------------------------------------------------------------------------
0010cc42: RLP; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: rbx rsp 
write: r12 r13 r14 rax rbp rbx rsp 
--------------------------------------------------------------------------------
0010cc70: RLP; lea rdx, [rip + 0x2a986] ; lea rsi, [rip + 0x29ffe] ; mov rcx, rax ; xor edi, edi ; xor eax, eax ; call 0x6bcbc
read: eax edi rax rip rsp 
write: eax edi rcx rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0010cc8e: RLP; mov rdi, rbx ; call 0x1f46c
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0010cc9a: RLP; mov rdi, rbp ; call 0x1f46c
read: rbp rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0010cca6: RLP; pop rbx ; pop rbp ; pop r12 ; pop r13 ; xor eax, eax ; pop r14 ; ret
read: eax rsp 
write: eax r12 r13 r14 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010cd0a: RLP; test eax, eax ; js 0x10cce4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010cd3d: RLP; mov rdx, qword ptr [rsp + 0x10] ; mov qword ptr [rax + 0x14], rdx ; mov rdx, qword ptr [rsp + 0x18] ; mov qword ptr [rax + 0x1c], rdx ; mov edx, dword ptr [rsp + 0xc] ; mov dword ptr [rax + 0x10], edx ; add rsp, 0x98 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: eax edx rdx rsp 
write: eax edx r12 r13 rbp rbx rdx rflags rsp 
--------------------------------------------------------------------------------
0010cd75: RLP; add rsp, 0x98 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: eax rsp 
write: eax r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010cdb8: RLP; mov rdi, rbx ; mov esi, 1 ; mov ebp, eax ; call 0x109ccc
read: eax rbx rip rsp 
write: ebp esi rdi rsp 
--------------------------------------------------------------------------------
0010cdcb: RLP; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
read: ebp rsp 
write: eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010cdfd: RLP; cmp eax, 1 ; sbb eax, eax ; add rsp, 8 ; add eax, 2 ; ret
read: eax rflags rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
0010ce32: RLP; mov rsi, rbp ; mov rdi, r12 ; call 0x10859c
read: r12 rbp rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
0010ce41: RLP; test eax, eax ; jne 0x10ce5c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010cedc: RLP; mov r14d, eax ; call 0xb3dcc
read: eax rip rsp 
write: r14d rsp 
--------------------------------------------------------------------------------
0010cee8: RLP; mov r15d, eax ; call 0xb3dec
read: eax rip rsp 
write: r15d rsp 
--------------------------------------------------------------------------------
0010cef4: RLP; mov dword ptr [rip + 0x26107a], eax ; movsxd rax, r12d ; mov dword ptr [rip + 0x261068], r14d ; mov qword ptr [rsp + 0x28], rax ; mov rax, qword ptr [rsp + 0x10] ; mov dword ptr [rip + 0x26105b], r15d ; mov dword ptr [rip + 0x261045], 1 ; mov dword ptr [rip + 0x26103f], 2 ; mov qword ptr [rip + 0x261028], 0x1c ; mov qword ptr [rsp + 0x40], rax ; lea rax, [rip + 0x26101c] ; mov qword ptr [rsp + 0x20], r13 ; mov qword ptr [rsp + 0x48], 1 ; mov qword ptr [rsp + 0x30], 0 ; mov dword ptr [rsp + 0x38], 0
read: eax r12d r13 r14d r15d rax 
write: rax 
--------------------------------------------------------------------------------
0010cf99: RLP; test eax, eax ; movsxd rdx, eax ; js 0x10cf7c
read: eax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
0010d040: RLP; cmp eax, -1 ; je 0x10d134
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010d0da: RLP; test eax, eax ; je 0x10d0f1
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010d101: RLP; test eax, eax ; js 0x10d0e4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010d1b9: RLP; lea rdi, [rbx + 2] ; lea edx, [rax + 1] ; mov r14, rax ; mov rsi, r12 ; call 0x8e3dc
read: r12 rax rip rsp 
write: edx r14 rdi rsi rsp 
--------------------------------------------------------------------------------
0010d1cf: RLP; lea edx, [r14 + 3] ; mov rsi, rbx ; mov edi, ebp ; mov dword ptr [rsp + 0x1c], edx ; call 0xe433c
read: ebp edx rbx rip rsp 
write: edi edx rsi rsp 
--------------------------------------------------------------------------------
0010d1e5: RLP; lea rdx, [rsp + 0x1c] ; mov rsi, rbx ; mov edi, ebp ; call 0xe440c
read: ebp rbx rip rsp 
write: edi rdx rsi rsp 
--------------------------------------------------------------------------------
0010d1f8: RLP; test eax, eax ; je 0x10d244
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010d218: RLP; mov rdi, rax ; call 0x694fc
read: rax rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0010d224: RLP; test r13d, r13d ; jne 0x10d2f4
read: r13d rflags 
write: rflags 
--------------------------------------------------------------------------------
0010d254: RLP; test eax, eax ; jne 0x10d1fc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010d266: RLP; mov edi, 0x150 ; mov r12, rax ; call 0x1f3cc
read: rax rip rsp 
write: edi r12 rsp 
--------------------------------------------------------------------------------
0010d277: RLP; test rax, rax ; mov rbx, rax ; je 0x10d33c
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
0010d2e8: RLP; mov rax, rbx ; jmp 0x10d22f
read: rbx 
write: rax 
--------------------------------------------------------------------------------
0010d2ff: RLP; jmp 0x10d22d
read: 
write: 
--------------------------------------------------------------------------------
0010d321: RLP; test eax, eax ; mov ebp, eax ; js 0x10d395
read: eax rflags 
write: ebp rflags 
--------------------------------------------------------------------------------
0010d358: RLP; lea rdx, [rip + 0x2a2b4] ; lea rsi, [rip + 0x29916] ; mov rcx, rax ; xor edi, edi ; xor eax, eax ; call 0x6bcbc
read: eax edi rax rip rsp 
write: eax edi rcx rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0010d376: RLP; mov rdi, r12 ; call 0x1f46c
read: r12 rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0010d382: RLP; mov rdi, rbx ; call 0x1f46c
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0010d38e: RLP; xor eax, eax ; jmp 0x10d22f
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
0010d3b1: RLP; mov rdi, rax ; call 0x694fc
read: rax rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0010d3bd: RLP; xor eax, eax ; jmp 0x10d22f
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
0010d3dd: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0010d432: RLP; add rsp, 0x80 ; call 0xb3d6c
read: rip rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0010d442: RLP; cmp dword ptr [rip + 0x260b5c], eax ; mov ebx, eax ; mov rbp, rsp ; je 0x10d482
read: eax rflags rsp 
write: ebx rbp rflags 
--------------------------------------------------------------------------------
0010d45d: RLP; mov rdi, qword ptr [rsp + 8] ; xor rdi, qword ptr [rsp] ; movsxd rax, ebx ; lea rsi, [rip + 0x260b1c] ; xor rdi, rax ; call 0x39ebc
read: ebx rax rdi rip rsp 
write: rax rdi rflags rsi rsp 
--------------------------------------------------------------------------------
0010d47c: RLP; mov dword ptr [rip + 0x260b22], ebx ; lea rdi, [rip + 0x260b03] ; mov rsi, rbp ; call 0x39dbc
read: ebx rbp rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
0010d495: RLP; cmp dword ptr [rip + 0x2612d4], 0 ; je 0x10d4a9
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
0010d4c8: RLP; add rsp, 0x80 ; mov rax, qword ptr [rsp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010d509: RLP; mov rdi, qword ptr [rbx + 0x10] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0010d516: RLP; mov rdi, rbx ; call 0x1f46c
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0010d522: RLP; mov rdi, rbp ; call 0x1f46c
read: rbp rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0010d52e: RLP; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010d58d: RLP; cmp eax, 1 ; jg 0x10d550
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010d5bc: RLP; test eax, eax ; jne 0x10d550
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010d602: RLP; mov eax, dword ptr [rbx + 0x38] ; add eax, dword ptr [rsp + 0x38] ; mov edx, dword ptr [rbx + 0x34] ; add edx, dword ptr [rsp + 0x30] ; cmp eax, 0xf423f ; mov dword ptr [rbx + 0x74], edx ; ja 0x10d76c
read: eax edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
0010d676: RLP; cmp eax, 1 ; jle 0x10d6aa
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010d6a5: RLP; cmp eax, 1 ; jg 0x10d67b
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010d6e7: RLP; test rax, rax ; je 0x10d7a4
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010d70f: RLP; test eax, eax ; je 0x10d67b
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010d733: RLP; test rax, rax ; je 0x10d7df
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010d75b: RLP; test eax, eax ; setne al ; add rsp, 0x40 ; pop rbx ; pop rbp ; movzx eax, al ; pop r12 ; ret
read: al eax rflags rsp 
write: al eax r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010d7b6: RLP; test eax, eax ; je 0x10d67b
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010d7d2: RLP; test eax, eax ; jne 0x10d6ff
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010d7f2: RLP; test eax, eax ; je 0x10d67b
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010d80e: RLP; test eax, eax ; jne 0x10d74b
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010d858: RLP; mov rdi, qword ptr [rbx + 0x10] ; lea rdx, [rbx + 0x7c] ; add eax, 1 ; mov rsi, r12 ; mov dword ptr [rsp + 0x10], eax ; call 0x11088c
read: eax r12 rip rsp 
write: eax rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0010d873: RLP; test eax, eax ; js 0x10d924
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010d8c7: RLP; test eax, eax ; js 0x10d90c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010d8d9: RLP; mov ecx, dword ptr [rbx + 0x38] ; mov eax, dword ptr [rbx + 0x34] ; mov rdx, qword ptr [rsp + 0x18] ; sub eax, dword ptr [rsp + 0x10] ; mov esi, ecx ; cmp rdx, rsi ; mov dword ptr [rbx + 0x34], eax ; jle 0x10d8fe
read: eax ecx rdx rflags rsi 
write: eax ecx esi rdx rflags 
--------------------------------------------------------------------------------
0010d96f: RLP; mov edi, 0x488 ; mov rbx, rax ; call 0x1f3cc
read: rax rip rsp 
write: edi rbx rsp 
--------------------------------------------------------------------------------
0010d980: RLP; test rax, rax ; mov r14, rax ; jne 0x10d9ec
read: rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
0010d999: RLP; test r14, r14 ; je 0x10db7c
read: r14 rflags 
write: rflags 
--------------------------------------------------------------------------------
0010d9b3: RLP; mov rdi, qword ptr [r14 + 0x10] ; test rdi, rdi ; je 0x10d9c5
read: rdi rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
0010d9c5: RLP; mov rdi, r14 ; call 0x1f46c
read: r14 rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0010d9d1: RLP; xor eax, eax ; add rsp, 0x128 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: eax rsp 
write: eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010da1a: RLP; mov rdi, r15 ; call 0x110f2c
read: r15 rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0010da26: RLP; test eax, eax ; je 0x10d98d
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010da84: RLP; mov rdi, r13 ; mov qword ptr [r14], rax ; mov qword ptr [rsp + 8], rax ; call 0x856dc
read: r13 rax rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0010da98: RLP; mov dword ptr [r14 + 0x18], eax ; add eax, 1 ; mov rdi, rax ; mov qword ptr [rsp + 0x10], rax ; call 0x1f3cc
read: eax rax rip rsp 
write: eax rdi rflags rsp 
--------------------------------------------------------------------------------
0010dab0: RLP; mov r9, qword ptr [rsp + 8] ; mov qword ptr [r14 + 0x10], rax ; test r9, r9 ; je 0x10d98d
read: r9 rax rflags 
write: r9 rflags 
--------------------------------------------------------------------------------
0010dae4: RLP; mov rcx, qword ptr [rsp + 8] ; mov rdx, qword ptr [rsp + 0x10] ; mov rsi, r13 ; mov rdi, rcx ; call 0x8e3dc
read: r13 rcx rip rsp 
write: rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
0010dafd: RLP; test rbp, rbp ; mov dword ptr [r14 + 0x38], 0 ; mov dword ptr [r14 + 0x34], 0 ; je 0x10db83
read: rbp rflags 
write: rflags 
--------------------------------------------------------------------------------
0010db67: RLP; test eax, eax ; je 0x10d98d
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010db9a: RLP; test eax, eax ; jns 0x10db3f
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010dbdb: RLP; xor edx, edx ; test eax, eax ; je 0x10dc44
read: eax edx rflags 
write: edx rflags 
--------------------------------------------------------------------------------
0010dc41: RLP; mov rdx, rax ; add rsp, 0x410 ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: rax rdx rsp 
write: r12 r13 r14 rax rbp rbx rdx rflags rsp 
--------------------------------------------------------------------------------
0010dc93: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0010dcba: RLP; mov rdi, qword ptr [rbp + 0x20] ; test rdi, rdi ; je 0x10dccc
read: rdi rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
0010dccc: RLP; mov rdi, qword ptr [rbx + 0x40] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0010dcd9: RLP; mov rdi, qword ptr [rbx + 0x20] ; test rdi, rdi ; je 0x10dceb
read: rdi rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
0010dceb: RLP; mov rdi, rbx ; call 0x1f46c
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0010dcf7: RLP; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010dd3a: RLP; mov rsi, rbp ; mov rdi, rsp ; call 0x10826c
read: rbp rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
0010dd49: RLP; test eax, eax ; je 0x10dd61
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010dd5d: RLP; test eax, eax ; jne 0x10ddb4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010dd7d: RLP; mov rdi, rax ; call 0x694fc
read: rax rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0010dd89: RLP; mov rax, qword ptr [rsp + 8] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x10dda0
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
0010dda0: RLP; add rsp, 0x30 ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
read: rsp 
write: eax r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010ddc3: RLP; mov dword ptr [r12 + 0x1c8], eax ; jmp 0x10dd89
read: eax 
write: 
--------------------------------------------------------------------------------
0010de35: RLP; mov rsi, r14 ; mov rdi, rbp ; call 0x10670c
read: r14 rbp rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
0010de44: RLP; test eax, eax ; mov r13d, eax ; jne 0x10de8c
read: eax rflags 
write: r13d rflags 
--------------------------------------------------------------------------------
0010de62: RLP; mov rax, qword ptr [rsp + 0x48] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x10de79
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
0010de79: RLP; add rsp, 0x70 ; mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: r13d rsp 
write: eax r12 r13 r14 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010de9a: RLP; mov rax, qword ptr [rsp] ; xor esi, esi ; mov rdi, rbp ; mov dword ptr [rsp + 0x40], 0 ; mov qword ptr [rsp + 0x10], rax ; mov rax, qword ptr [rsp + 0x48] ; call qword ptr [rax + 0x28]
read: esi rax rbp rsp 
write: esi rax rdi rflags rsp 
--------------------------------------------------------------------------------
0010debc: RLP; mov rsi, r14 ; mov rdi, rbp ; call 0x10670c
read: r14 rbp rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
0010decb: RLP; test eax, eax ; mov r13d, eax ; je 0x10de4b
read: eax rflags 
write: r13d rflags 
--------------------------------------------------------------------------------
0010defb: RLP; jmp 0x10de4b
read: 
write: 
--------------------------------------------------------------------------------
0010df48: RLP; mov rdi, qword ptr [rbp + 0x20] ; test rdi, rdi ; je 0x10df62
read: rdi rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
0010df5a: RLP; mov qword ptr [rbp + 0x20], 0 ; lea r13, [rbp + 0x18] ; mov rdi, r12 ; mov rsi, r13 ; call 0x10826c
read: r12 r13 rip rsp 
write: r13 rdi rsi rsp 
--------------------------------------------------------------------------------
0010df75: RLP; test eax, eax ; je 0x10dfac
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010df9c: RLP; add rsp, 0x38 ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rsp 
write: eax r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010dfc2: RLP; mov rax, qword ptr [rbp] ; mov qword ptr [rbp + 0x20], 0 ; mov qword ptr [rbx], rax ; mov rax, qword ptr [rbp + 8] ; mov qword ptr [rbx + 8], rax ; mov rax, qword ptr [rbp + 0x10] ; mov qword ptr [rbx + 0x10], rax ; jmp 0x10df90
read: rax 
write: rax 
--------------------------------------------------------------------------------
0010e01f: RLP; mov edi, 0x1d0 ; mov r13, rax ; call 0x1f3cc
read: rax rip rsp 
write: edi r13 rsp 
--------------------------------------------------------------------------------
0010e030: RLP; test rax, rax ; mov rbx, rax ; je 0x10e17c
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
0010e099: RLP; mov rax, qword ptr [rsp + 0x10] ; mov dword ptr [rsp + 0x38], r12d ; lea r12, [rsp + 0x80] ; mov qword ptr [rsp + 0x40], rbp ; lea rbp, [rsp + 0x50] ; xor ecx, ecx ; mov edx, 0x190 ; mov rsi, r12 ; mov qword ptr [rsp + 0x28], r15 ; mov qword ptr [rsp + 0x20], rax ; mov eax, dword ptr [rsp + 0xc] ; mov rdi, rbp ; mov dword ptr [rsp + 0x30], r14d ; mov dword ptr [rsp + 0x34], eax ; call 0x11493c
read: eax ecx r12 r12d r14d r15 rax rbp rip rsp 
write: eax ecx edx r12 rax rbp rdi rflags rsi rsp 
--------------------------------------------------------------------------------
0010e0e2: RLP; lea rsi, [rsp + 0x20] ; mov rdi, rbp ; call 0x10670c
read: rbp rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
0010e0f3: RLP; test eax, eax ; je 0x10e1d2
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010e10a: RLP; mov ebp, eax ; mov dword ptr [rbx + 0x10], eax ; mov dword ptr [rbx], 1 ; mov rdi, rbp ; call 0x1f3cc
read: eax rbp rip rsp 
write: ebp rdi rsp 
--------------------------------------------------------------------------------
0010e121: RLP; test rax, rax ; mov qword ptr [rbx + 8], rax ; je 0x10e17c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010e13c: RLP; mov rax, qword ptr [rbx] ; mov rdi, r13 ; mov qword ptr [r13], rax ; mov rax, qword ptr [rbx + 8] ; mov qword ptr [r13 + 8], rax ; mov rax, qword ptr [rbx + 0x10] ; mov qword ptr [r13 + 0x10], rax ; call 0x10dd0c
read: r13 rax rip rsp 
write: rax rdi rsp 
--------------------------------------------------------------------------------
0010e15f: RLP; mov rax, r13 ; add rsp, 0x218 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: r13 rsp 
write: r12 r13 r14 r15 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010e198: RLP; lea rdx, [rip + 0x2ec1d] ; lea rsi, [rip + 0x28ad6] ; mov rcx, rax ; xor edi, edi ; xor eax, eax ; call 0x6bcbc
read: eax edi rax rip rsp 
write: eax edi rcx rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0010e1b6: RLP; mov rdi, r13 ; call 0x1f46c
read: r13 rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0010e1c2: RLP; mov rdi, rbx ; call 0x1f46c
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0010e1ce: RLP; xor eax, eax ; jmp 0x10e162
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
0010e20c: RLP; cmp eax, -1 ; je 0x10e36a
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010e22a: RLP; mov dword ptr [rbp - 0x134], eax ; call 0xb3dec
read: eax rip rsp 
write: rsp 
--------------------------------------------------------------------------------
0010e239: RLP; mov dword ptr [rbp - 0x138], eax ; jmp 0x10e2a6
read: eax 
write: 
--------------------------------------------------------------------------------
0010e276: RLP; cmp eax, -1 ; jne 0x10e2ec
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010e2b3: RLP; cmp eax, 0xff ; mov r15d, eax ; jbe 0x10e244
read: eax rflags 
write: r15d rflags 
--------------------------------------------------------------------------------
0010e2cd: RLP; test rax, rax ; mov r14, rax ; jne 0x10e267
read: rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
0010e312: RLP; cmp r15d, 0xff ; mov r12, rax ; ja 0x10e34c
read: r15d rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
0010e340: RLP; jmp 0x10e2a1
read: 
write: 
--------------------------------------------------------------------------------
0010e358: RLP; lea rsp, [rbp - 0x28] ; mov rax, r12 ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: r12 rsp 
write: r12 r13 r14 r15 rax rbp rbx rsp 
--------------------------------------------------------------------------------
0010e3fb: RLP; mov rdx, qword ptr [rbp - 0x108] ; mov rsi, qword ptr [rbp - 0x100] ; lea rcx, [rbp - 0xe8] ; xor r9d, r9d ; xor r8d, r8d ; mov rdi, rbx ; mov dword ptr [rbp - 0xe8], 0xffffffff ; call 0x10c77c
read: r8d r9d rbx rip rsp 
write: r8d r9d rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0010e42c: RLP; lea rsp, [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rsp 
--------------------------------------------------------------------------------
0010e4b2: RLP; test eax, eax ; jne 0x10e4c2
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010e4d4: RLP; mov dword ptr [rax], 0xd ; lea rsp, [rbp - 0x28] ; xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: eax rsp 
write: eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010e54f: RLP; sub rsp, 0x410 ; lea rdx, [rsp + 0xf] ; and rdx, 0xfffffffffffffff0 ; jmp 0x10e580
read: rdx rsp 
write: rdx rflags rsp 
--------------------------------------------------------------------------------
0010e599: RLP; test eax, eax ; jne 0x10e5a9
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010e5bf: RLP; mov dword ptr [rax], 0x11 ; mov dword ptr [rax + 0x10], 0x60 ; xor eax, eax ; jmp 0x10e42c
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
0010e5dc: RLP; mov dword ptr [rax], 0xc ; mov dword ptr [rax + 0x10], 0x61 ; xor eax, eax ; jmp 0x10e42c
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
0010e630: RLP; jmp 0x10e42c
read: 
write: 
--------------------------------------------------------------------------------
0010e65c: RLP; jmp 0x10e42c
read: 
write: 
--------------------------------------------------------------------------------
0010e66a: RLP; mov dword ptr [rax], 0xc ; mov dword ptr [rax + 0x10], 0x60 ; xor eax, eax ; jmp 0x10e42c
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
0010e6cf: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0010e706: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0010e730: RLP; mov edi, dword ptr [rsp + 0x10] ; call 0x10e68c
read: rip rsp 
write: edi rsp 
--------------------------------------------------------------------------------
0010e73d: RLP; cmp dword ptr [rsp + 0x10], 0x11 ; mov rbp, rax ; ja 0x10e8cc
read: rax rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
0010e78e: RLP; lea rdi, [rsp + 8] ; mov rsi, rax ; mov r9, r13 ; mov r8, r12 ; mov rcx, rbp ; mov rdx, rbx ; xor eax, eax ; call 0x523bc
read: eax r12 r13 rax rbp rbx rip rsp 
write: eax r8 r9 rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0010e7ad: RLP; test eax, eax ; js 0x10e8fc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010e7be: RLP; mov rdx, qword ptr [rsp + 8] ; mov rdi, qword ptr [rax + 0xb0] ; mov qword ptr [rax + 0xb0], rdx ; call 0x1f46c
read: rdx rip rsp 
write: rdi rdx rsp 
--------------------------------------------------------------------------------
0010e7da: RLP; mov rax, qword ptr [rsp + 8] ; add rsp, 0x438 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rsp 
write: r12 r13 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010e83c: RLP; lea rdi, [rsp + 8] ; mov rsi, rax ; mov r8d, r12d ; mov rcx, rbp ; mov rdx, rbx ; xor eax, eax ; call 0x523bc
read: eax r12d rax rbp rbx rip rsp 
write: eax r8d rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0010e858: RLP; jmp 0x10e7ad
read: 
write: 
--------------------------------------------------------------------------------
0010e885: RLP; jmp 0x10e7ad
read: 
write: 
--------------------------------------------------------------------------------
0010e8a7: RLP; lea rdi, [rsp + 8] ; lea rsi, [rip + 0x28d8e] ; mov r8, rax ; mov rcx, rbp ; mov rdx, rbx ; xor eax, eax ; call 0x523bc
read: eax rax rbp rbx rip rsp 
write: eax r8 rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0010e8c7: RLP; jmp 0x10e7ad
read: 
write: 
--------------------------------------------------------------------------------
0010e8f3: RLP; jmp 0x10e7ad
read: 
write: 
--------------------------------------------------------------------------------
0010e936: RLP; test rax, rax ; mov r12, rax ; je 0x10e97b
read: rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
0010e95a: RLP; lea rdi, [rsp + 8] ; mov rsi, rax ; mov r8, r12 ; mov rcx, rbp ; mov rdx, rbx ; xor eax, eax ; call 0x523bc
read: eax r12 rax rbp rbx rip rsp 
write: eax r8 rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0010e976: RLP; jmp 0x10e7ad
read: 
write: 
--------------------------------------------------------------------------------
0010e99d: RLP; lea rsi, [rip + 0x28264] ; mov rdx, rax ; xor edi, edi ; xor eax, eax ; call 0x6bcbc
read: eax edi rax rip rsp 
write: eax edi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0010e9b4: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0010e9cd: RLP; lea rsi, [rip + 0x28234] ; mov rdx, rax ; xor edi, edi ; xor eax, eax ; call 0x6bcbc
read: eax edi rax rip rsp 
write: eax edi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0010e9e4: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0010ea07: RLP; mov edi, dword ptr [rax] ; mov rbx, rax ; cmp edi, 0xc ; je 0x10eab4
read: edi rax rflags 
write: edi rbx rflags 
--------------------------------------------------------------------------------
0010ea2d: RLP; lea rdi, [rsp + 8] ; lea rsi, [rip + 0x28c4d] ; mov rcx, rax ; mov r9, rbp ; xor eax, eax ; mov r8, rbx ; mov rdx, r12 ; call 0x523bc
read: eax r12 rax rbp rbx rip rsp 
write: eax r8 r9 rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0010ea50: RLP; test eax, eax ; js 0x10eadc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010ea61: RLP; mov rdx, qword ptr [rsp + 8] ; mov rdi, qword ptr [rax + 0xb0] ; mov qword ptr [rax + 0xb0], rdx ; call 0x1f46c
read: rdx rip rsp 
write: rdi rdx rsp 
--------------------------------------------------------------------------------
0010ea7d: RLP; mov rax, qword ptr [rsp + 8] ; add rsp, 0x410 ; pop rbx ; pop rbp ; pop r12 ; ret
read: rsp 
write: r12 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010eaa0: RLP; mov edi, dword ptr [rbx] ; mov rbp, rax ; lea rbx, [rip + 0x28bd6] ; jmp 0x10ea24
read: rax 
write: edi rbp rbx 
--------------------------------------------------------------------------------
0010eaca: RLP; mov edi, dword ptr [rbx] ; mov rbp, rax ; lea rbx, [rip + 0x28bac] ; jmp 0x10ea24
read: rax 
write: edi rbp rbx 
--------------------------------------------------------------------------------
0010eafd: RLP; lea rsi, [rip + 0x28104] ; mov rdx, rax ; xor edi, edi ; xor eax, eax ; call 0x6bcbc
read: eax edi rax rip rsp 
write: eax edi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0010eb14: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0010eb61: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0010ebab: RLP; mov rdi, rbx ; call 0x1f46c
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0010ebb7: RLP; mov rdi, rbp ; call 0x1f46c
read: rbp rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0010ebc3: RLP; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010ebd7: RLP; jmp 0x10eb94
read: 
write: 
--------------------------------------------------------------------------------
0010ee01: RLP; test eax, eax ; je 0x10ef9c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010ee1c: RLP; test eax, eax ; je 0x10ef9c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010ee36: RLP; test eax, eax ; je 0x10ef9c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010ee53: RLP; test eax, eax ; je 0x10ef9c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010ee6a: RLP; test eax, eax ; je 0x10efc3
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010eed8: RLP; test eax, eax ; je 0x10ef54
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010eeeb: RLP; test eax, eax ; jne 0x10ef0c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010ef28: RLP; mov eax, dword ptr [rbx + 0x30] ; test eax, eax ; je 0x10efd8
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0010ef49: RLP; test eax, eax ; jne 0x10edcf
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010efbb: RLP; mov eax, dword ptr [rbx + 0x30] ; jmp 0x10eef6
read: 
write: eax 
--------------------------------------------------------------------------------
0010efec: RLP; test eax, eax ; jne 0x10f02a
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010f022: RLP; mov eax, dword ptr [rbx + 0x30] ; jmp 0x10eef6
read: 
write: eax 
--------------------------------------------------------------------------------
0010f03f: RLP; test eax, eax ; jne 0x10effe
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010f09a: RLP; cmp eax, -1 ; jne 0x10f07c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010f14f: RLP; cmp eax, -1 ; je 0x10f1bc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010f185: RLP; cmp eax, -1 ; mov edx, eax ; je 0x10f1dc
read: eax rflags 
write: edx rflags 
--------------------------------------------------------------------------------
0010f232: RLP; mov edi, 0x98 ; mov rbx, rax ; call 0x1f3cc
read: rax rip rsp 
write: edi rbx rsp 
--------------------------------------------------------------------------------
0010f243: RLP; test rax, rax ; mov r14, rax ; je 0x10f44c
read: rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
0010f2a7: RLP; mov qword ptr [rsp + 0x30], r12 ; lea r12, [r14 + 0x68] ; lea rsi, [r14 + 0x48] ; xor ecx, ecx ; mov edx, 0x18 ; mov qword ptr [rsp + 0x10], rax ; mov rdi, r12 ; mov dword ptr [rsp + 0x18], 0 ; mov qword ptr [rsp + 0x20], 2 ; mov qword ptr [rsp + 0x28], r13 ; call 0x11493c
read: ecx r12 r13 rax rip rsp 
write: ecx edx r12 rdi rflags rsi rsp 
--------------------------------------------------------------------------------
0010f2e2: RLP; lea rsi, [rsp + 0x10] ; mov rdi, r12 ; call 0x1083ec
read: r12 rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
0010f2f3: RLP; test eax, eax ; je 0x10f40c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010f309: RLP; mov dword ptr [r14 + 0x60], eax ; mov rax, qword ptr [r14 + 0x70] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x10f323
read: eax rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
0010f323: RLP; mov edx, dword ptr [rsp + 0xc] ; mov esi, dword ptr [rsp + 8] ; lea r9, [rip - 0x2d6] ; lea r8, [rip - 0x25d] ; mov rcx, r14 ; mov rdi, r12 ; call 0x109a4c
read: r12 r14 rip rsp 
write: edx esi r8 r9 rcx rdi rsp 
--------------------------------------------------------------------------------
0010f348: RLP; lea rax, [rip + 0x25754d] ; mov qword ptr [rbx + 0x10], r14 ; mov qword ptr [rbx + 8], rax ; call 0x10667c
read: r14 rax rip rsp 
write: rax rsp 
--------------------------------------------------------------------------------
0010f360: RLP; mov qword ptr [rbx], rax ; add rsp, 0x78 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rax rbx rsp 
write: r12 r13 r14 r15 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010f393: RLP; test ax, ax ; je 0x10f421
read: ax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010f3ca: RLP; xor esi, esi ; mov edi, eax ; mov dword ptr [rbp], eax ; call 0x1067bc
read: eax esi rip rsp 
write: edi esi rflags rsp 
--------------------------------------------------------------------------------
0010f3da: RLP; mov edi, dword ptr [rbp] ; test edi, edi ; js 0x10f4ac
read: edi rflags 
write: edi rflags 
--------------------------------------------------------------------------------
0010f3f6: RLP; test eax, eax ; js 0x10f4ac
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010f421: RLP; mov rdi, r14 ; call 0x1f46c
read: r14 rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0010f42d: RLP; mov rdi, rbx ; call 0x1f46c
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0010f439: RLP; add rsp, 0x78 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: eax rsp 
write: eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010f455: RLP; lea rsi, [rip + 0x2816a] ; lea rdi, [rip + 0x2554a] ; mov edx, 5 ; mov rbp, rax ; call 0x2f4bc
read: rax rip rsp 
write: edx rbp rdi rsi rsp 
--------------------------------------------------------------------------------
0010f474: RLP; lea rdx, [rip + 0x28217] ; lea rsi, [rip + 0x277fa] ; mov rcx, rax ; xor edi, edi ; xor eax, eax ; call 0x6bcbc
read: eax edi rax rip rsp 
write: eax edi rcx rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0010f492: RLP; mov dword ptr [rbp], 0xc ; mov dword ptr [rbp + 0x10], 0xc ; jmp 0x10f421
read: 
write: 
--------------------------------------------------------------------------------
0010f4b5: RLP; mov rdx, qword ptr [rip + 0x2599a8] ; mov dword ptr [rax], 0xc ; mov edx, dword ptr fs:[rdx] ; mov dword ptr [rax + 0x10], edx ; mov edi, dword ptr [rbp] ; test edi, edi ; jns 0x10f418
read: edi edx rflags 
write: edi edx rdx rflags 
--------------------------------------------------------------------------------
0010f521: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0010f74b: RLP; mov rdi, rbx ; call 0x1f46c
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0010f757: RLP; mov rdi, rbp ; call 0x1f46c
read: rbp rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0010f763: RLP; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0010f777: RLP; jmp 0x10f734
read: 
write: 
--------------------------------------------------------------------------------
0010f8a5: RLP; mov rax, qword ptr [r14 + 0x90] ; mov rsi, qword ptr [rbp - 0x180] ; mov rdi, r13 ; add dword ptr [rax], 1 ; mov rax, qword ptr [r14 + 0x60] ; call qword ptr [rax + 8]
read: r13 rsp 
write: rax rdi rflags rsi rsp 
--------------------------------------------------------------------------------
0010f8c4: RLP; test eax, eax ; je 0x10fc3c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010f8dd: RLP; test eax, eax ; je 0x10fc3c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010f8fe: RLP; test eax, eax ; je 0x10fc3c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010f914: RLP; mov dword ptr [rbp - 0x15c], eax ; movsxd r12, dword ptr [rbp - 0x15c] ; mov rsi, qword ptr [r14 + 0x90] ; lea r8, [r14 + 8] ; mov r9d, dword ptr [r14 + 0x18] ; mov edi, dword ptr [r14] ; xor ecx, ecx ; mov rdx, r12 ; call 0xe476c
read: eax ecx r12 rip rsp 
write: ecx edi r12 r8 r9d rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0010f941: RLP; cmp rax, r12 ; jne 0x10fe4c
read: r12 rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010f9fc: RLP; cmp eax, -1 ; je 0x10fbfc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010fa2e: RLP; test eax, eax ; jne 0x10fc2c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010fa79: RLP; mov dword ptr [r15 + 0x40], 4 ; mov eax, 4 ; lea rsp, [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: rsp 
write: eax r12 r13 r14 r15 rbp rbx rsp 
--------------------------------------------------------------------------------
0010fb12: RLP; test eax, eax ; js 0x10fad4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010fb44: RLP; test eax, eax ; jne 0x10f9e1
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010fb82: RLP; mov rax, qword ptr [rbp - 0x1c8] ; lea r12, [rbp - 0x90] ; mov rsi, r12 ; mov rdi, rax ; call 0x10837c
read: r12 rax rip rsp 
write: r12 rax rdi rsi rsp 
--------------------------------------------------------------------------------
0010fb9f: RLP; test eax, eax ; je 0x10ff2f
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010fbb7: RLP; mov eax, dword ptr [r14 + 0x40] ; test eax, eax ; je 0x10fed5
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0010fbde: RLP; test eax, eax ; jne 0x10f87a
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010fcec: RLP; test eax, eax ; mov rbx, rax ; js 0x10fac1
read: eax rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
0010fd0d: RLP; test eax, eax ; jne 0x10fac1
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010fdbd: RLP; mov rax, qword ptr [r14 + 0x20] ; add rbx, qword ptr [r14 + 0x28] ; add qword ptr [rbp - 0x198], rax ; mov rax, qword ptr [rbp - 0x198] ; add rax, 1 ; cmp rbx, 0xf423f ; jle 0x10fe02
read: rax rbx rflags 
write: rax rbx rflags 
--------------------------------------------------------------------------------
0010fe9c: RLP; test eax, eax ; jne 0x10fac1
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010feee: RLP; test eax, eax ; jne 0x10ff02
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0010ff26: RLP; mov eax, dword ptr [r15 + 0x40] ; jmp 0x10fa86
read: 
write: eax 
--------------------------------------------------------------------------------
0010ff8b: RLP; mov rbx, rax ; mov eax, dword ptr [rsp + 0xe0] ; lea r13d, [rax + 3] ; mov eax, dword ptr [rsp + 0xe8] ; and r13d, 0xfffffffc ; lea r14d, [rax + 3] ; mov eax, r13d ; and r14d, 0xfffffffc ; mov r12d, r14d ; lea rdi, [r12 + rax + 0xa0] ; call 0x1f3cc
read: r13d r14d rax rip rsp 
write: eax r12d r13d r14d rbx rdi rflags rsp 
--------------------------------------------------------------------------------
0010ffc3: RLP; test rax, rax ; mov r15, rax ; je 0x110164
read: rax rflags 
write: r15 rflags 
--------------------------------------------------------------------------------
00110009: RLP; test ax, ax ; jne 0x11004c
read: ax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011001a: RLP; xor ebp, ebp ; test rbx, rbx ; je 0x11002d
read: ebp rbx rflags 
write: ebp rflags 
--------------------------------------------------------------------------------
0011002d: RLP; add rsp, 0xa8 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rbp rsp 
write: r12 r13 r14 r15 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
001100bc: RLP; mov qword ptr [rsp + 0x40], rax ; mov rax, qword ptr [rsp + 8] ; xor ecx, ecx ; mov rsi, qword ptr [r15 + 0x90] ; mov edx, r13d ; mov rdi, rbp ; mov dword ptr [rsp + 0x48], 0 ; mov qword ptr [rsp + 0x50], 2 ; mov qword ptr [rsp + 0x58], rax ; mov rax, qword ptr [rsp + 0x10] ; mov qword ptr [rsp + 0x60], rax ; call 0x11493c
read: ecx r13d rax rbp rip rsp 
write: ecx edx rax rdi rflags rsi rsp 
--------------------------------------------------------------------------------
001100fe: RLP; lea rsi, [rsp + 0x40] ; mov rdi, rbp ; call 0x1083ec
read: rbp rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
0011010f: RLP; test eax, eax ; je 0x11000e
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00110125: RLP; mov dword ptr [r15 + 0x88], eax ; mov rax, qword ptr [rsp + 0x28] ; mov esi, dword ptr [rax] ; test esi, esi ; js 0x1101cc
read: eax esi rflags 
write: esi rax rflags 
--------------------------------------------------------------------------------
00110159: RLP; mov qword ptr [rbx], rax ; jmp 0x11002d
read: rax 
write: 
--------------------------------------------------------------------------------
0011016d: RLP; lea rsi, [rip + 0x27452] ; lea rdi, [rip + 0x24832] ; mov edx, 5 ; mov rbp, rax ; call 0x2f4bc
read: rax rip rsp 
write: edx rbp rdi rsi rsp 
--------------------------------------------------------------------------------
0011018c: RLP; lea rdx, [rip + 0x2750e] ; lea rsi, [rip + 0x26ae2] ; mov rcx, rax ; xor edi, edi ; xor eax, eax ; call 0x6bcbc
read: eax edi rax rip rsp 
write: eax edi rcx rdx rflags rsi rsp 
--------------------------------------------------------------------------------
001101aa: RLP; test r15, r15 ; mov dword ptr [rbp], 0xc ; mov dword ptr [rbp + 0x10], 0xc ; je 0x11001a
read: r15 rflags 
write: rflags 
--------------------------------------------------------------------------------
001101ec: RLP; mov rcx, qword ptr [rsp + 0x28] ; test eax, eax ; mov dword ptr [rcx], eax ; js 0x11023b
read: eax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
00110204: RLP; mov rax, qword ptr [rsp + 0x28] ; lea rcx, [rsp + 0x3c] ; mov r8d, 4 ; mov edx, 0xb ; xor esi, esi ; mov dword ptr [rsp + 0x3c], 1 ; mov edi, dword ptr [rax] ; call 0xe47dc
read: esi rip rsp 
write: edi edx esi r8d rax rcx rflags rsp 
--------------------------------------------------------------------------------
0011022e: RLP; mov dword ptr [r15 + 4], 1 ; jmp 0x110143
read: 
write: 
--------------------------------------------------------------------------------
00110244: RLP; mov rdx, qword ptr [rip + 0x258c19] ; mov dword ptr [rax], 0xc ; mov edx, dword ptr fs:[rdx] ; mov dword ptr [rax + 0x10], edx ; jmp 0x11000e
read: edx 
write: edx rdx 
--------------------------------------------------------------------------------
00110284: RLP; add rsp, 0x28 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
001102b4: RLP; add rsp, 0x28 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
001102d6: RLP; test eax, eax ; jne 0x110345
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00110335: RLP; add rsp, 0x10 ; pop rbx ; ret
read: rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
00110355: RLP; mov edi, 1 ; call 0x38aec
read: rip rsp 
write: edi rsp 
--------------------------------------------------------------------------------
00110386: RLP; mov rbx, qword ptr [rax + 0xc8] ; mov rbp, rax ; mov dword ptr [rsp + 0x1c], 0x6e ; test rbx, rbx ; je 0x11059c
read: rax rbx rflags 
write: rbp rbx rflags 
--------------------------------------------------------------------------------
001103b3: RLP; cmp ebp, eax ; je 0x1104ac
read: eax ebp rflags 
write: rflags 
--------------------------------------------------------------------------------
001103cc: RLP; mov rdi, qword ptr [rbx] ; mov rax, qword ptr [rdi + 8] ; call qword ptr [rax + 0x20]
read: rsp 
write: rax rdi rsp 
--------------------------------------------------------------------------------
001103da: RLP; mov qword ptr [rbx], 0 ; movsxd rdx, dword ptr [rsp + 0xc] ; lea rcx, [rip + 0x27235] ; lea rdi, [rip + 0x272bc] ; mov esi, 0x186bd ; call 0x10e37c
read: rip rsp 
write: esi rcx rdi rdx rsp 
--------------------------------------------------------------------------------
00110402: RLP; test rax, rax ; mov qword ptr [rbx], rax ; je 0x1105d7
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00110417: RLP; mov dword ptr [rbx + 0xc], eax ; call 0xb3d6c
read: eax rip rsp 
write: rsp 
--------------------------------------------------------------------------------
00110423: RLP; mov esi, dword ptr [rbx + 0xc] ; lea rdi, [rip + 0x244e5] ; xor r8d, r8d ; xor ecx, ecx ; xor edx, edx ; mov dword ptr [rbx + 8], eax ; mov rbp, qword ptr [rbx] ; call 0x10dfec
read: eax ecx edx r8d rip rsp 
write: ecx edx esi r8d rbp rdi rflags rsp 
--------------------------------------------------------------------------------
00110443: RLP; mov rdi, qword ptr [rbx] ; mov qword ptr [rbp], rax ; cmp qword ptr [rdi], 0 ; je 0x1105c5
read: rax rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
0011047b: RLP; mov rdi, qword ptr [rbx] ; lea rdx, [rsp + 0x18] ; mov esi, 6 ; mov rax, qword ptr [rdi + 8] ; call qword ptr [rax + 0x28]
read: rsp 
write: esi rax rdi rdx rsp 
--------------------------------------------------------------------------------
00110493: RLP; test eax, eax ; jne 0x11057c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001104cd: RLP; mov edi, dword ptr [rsp + 0x18] ; lea rsi, [rsp + 0x30] ; lea rdx, [rsp + 0x1c] ; call 0xe43dc
read: rip rsp 
write: edi rdx rsi rsp 
--------------------------------------------------------------------------------
001104e4: RLP; cmp eax, -1 ; je 0x1103bb
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00110503: RLP; cmp ebp, eax ; je 0x110574
read: eax ebp rflags 
write: rflags 
--------------------------------------------------------------------------------
00110510: RLP; mov dword ptr [rbx + 0xc], eax ; mov rax, qword ptr [rbx] ; mov rdi, qword ptr [rax] ; mov rax, qword ptr [rdi + 0x38] ; call qword ptr [rax + 0x20]
read: eax rsp 
write: rax rdi rsp 
--------------------------------------------------------------------------------
00110524: RLP; mov esi, dword ptr [rbx + 0xc] ; lea rdi, [rip + 0x243e4] ; xor r8d, r8d ; xor ecx, ecx ; xor edx, edx ; mov rbp, qword ptr [rbx] ; call 0x10dfec
read: ecx edx r8d rip rsp 
write: ecx edx esi r8d rbp rdi rflags rsp 
--------------------------------------------------------------------------------
00110541: RLP; mov rdi, qword ptr [rbx] ; mov qword ptr [rbp], rax ; cmp qword ptr [rdi], 0 ; je 0x1105c5
read: rax rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
00110563: RLP; mov rax, qword ptr [rbx] ; add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00110595: RLP; jmp 0x11049b
read: 
write: 
--------------------------------------------------------------------------------
001105aa: RLP; test rax, rax ; mov rbx, rax ; je 0x1105d7
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
001105d0: RLP; mov qword ptr [rbx], 0 ; xor eax, eax ; jmp 0x110566
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
00110637: RLP; add rsp, 0x80 ; lea rax, [rbx - 6] ; cmp rax, 4 ; jbe 0x1106e4
read: rax rflags rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
0011065a: RLP; mov rdi, rax ; xor edx, edx ; test rdi, rdi ; je 0x110695
read: edx rax rdi rflags 
write: edx rdi rflags 
--------------------------------------------------------------------------------
0011068e: RLP; xor edx, edx ; test eax, eax ; sete dl ; cmp dword ptr [rip + 0x25e0d4], 0 ; je 0x1106a9
read: eax edx rflags 
write: dl edx rflags 
--------------------------------------------------------------------------------
001106c8: RLP; add rsp, 0x80 ; add rsp, 0x10 ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: edx rsp 
write: eax r12 r13 r14 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
001106f2: RLP; mov rdi, rax ; jmp 0x11065d
read: rax 
write: rdi 
--------------------------------------------------------------------------------
00110728: RLP; test eax, eax ; je 0x110744
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00110782: RLP; test eax, eax ; je 0x11079c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001107e9: RLP; test eax, eax ; je 0x11080c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00110859: RLP; test eax, eax ; je 0x11087c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001108cf: RLP; lea rsi, [rsp + 0x10] ; mov edi, eax ; call rbp
read: eax rbp rsp 
write: edi rsi rsp 
--------------------------------------------------------------------------------
001108dc: RLP; mov rdx, qword ptr [rax] ; mov qword ptr [rsp], rdx ; mov eax, dword ptr [rax + 8] ; mov dword ptr [rsp + 8], eax ; mov r8d, dword ptr [rsp] ; test r8d, r8d ; jne 0x110934
read: eax r8d rdx rflags 
write: eax r8d rdx rflags 
--------------------------------------------------------------------------------
00110930: RLP; test eax, eax ; jne 0x1108ea
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011097f: RLP; lea rsi, [rsp + 0x10] ; mov edi, eax ; call rbp
read: eax rbp rsp 
write: edi rsi rsp 
--------------------------------------------------------------------------------
0011098c: RLP; mov rdx, qword ptr [rax] ; mov qword ptr [rsp], rdx ; mov eax, dword ptr [rax + 8] ; mov dword ptr [rsp + 8], eax ; mov r9d, dword ptr [rsp] ; test r9d, r9d ; jne 0x1109e4
read: eax r9d rdx rflags 
write: eax r9d rdx rflags 
--------------------------------------------------------------------------------
001109e0: RLP; test eax, eax ; jne 0x11099a
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00110a61: RLP; test rax, rax ; mov rbx, rax ; je 0x110adc
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
00110aa5: RLP; mov ebp, eax ; mov rax, qword ptr [rbx + 8] ; mov rdi, rbx ; call qword ptr [rax + 0x20]
read: eax rbx rsp 
write: ebp rax rdi rsp 
--------------------------------------------------------------------------------
00110ab5: RLP; mov edi, dword ptr [rsp + 0x1c] ; call 0xd711c
read: rip rsp 
write: edi rsp 
--------------------------------------------------------------------------------
00110ac2: RLP; xor eax, eax ; test ebp, ebp ; setne al ; neg eax ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
read: eax ebp rflags rsp 
write: al eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00110b18: RLP; test eax, eax ; je 0x110b34
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00110b6a: RLP; test eax, eax ; je 0x110b8c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00110baa: RLP; mov rbx, qword ptr [rax + 0xc8] ; test rbx, rbx ; je 0x110bee
read: rbx rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
00110bd1: RLP; mov rax, qword ptr [rbx] ; mov rdx, qword ptr [rax + 8] ; mov rdi, rax ; call qword ptr [rdx + 0x20]
read: rax rsp 
write: rax rdi rdx rsp 
--------------------------------------------------------------------------------
00110be2: RLP; mov rdi, rbx ; call 0x1f46c
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
00110bee: RLP; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
00110c31: RLP; mov byte ptr [rsp + 0xff], 0 ; mov rdx, rbx ; mov r9d, dword ptr [rdx] ; add rdx, 4 ; lea eax, [r9 - 0x1010101] ; not r9d ; and eax, r9d ; and eax, 0x80808080 ; je 0x110c3c
read: eax r9d rbx rdx rflags 
write: eax r9d rdx rflags 
--------------------------------------------------------------------------------
00110cb6: RLP; mov rdi, rbp ; call 0x856dc
read: rbp rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
00110cc2: RLP; lea rdx, [rbp + rax - 1] ; mov eax, 1 ; cmp byte ptr [rdx], 0x2e ; jne 0x110c84
read: rflags 
write: eax rdx rflags 
--------------------------------------------------------------------------------
00110cf4: RLP; test eax, eax ; jns 0x110c39
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00110d45: RLP; mov byte ptr [rsp + 0x40], 0 ; mov esi, 0x2e ; mov rdi, rbp ; call 0x83a5c
read: rbp rip rsp 
write: esi rdi rsp 
--------------------------------------------------------------------------------
00110d5b: RLP; test r13, r13 ; mov r14, rax ; je 0x110eb4
read: r13 rax rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
00110d80: RLP; mov byte ptr [rsp + 0x90], 0 ; mov rsi, rbx ; mov ecx, dword ptr [rsi] ; add rsi, 4 ; lea edx, [rcx - 0x1010101] ; not ecx ; and edx, ecx ; and edx, 0x80808080 ; je 0x110d8b
read: ecx edx rbx rflags rsi 
write: ecx edx rflags rsi 
--------------------------------------------------------------------------------
00110e7f: RLP; add rsp, 0xa0 ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: rsp 
write: eax r12 r13 r14 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00110ed3: RLP; mov byte ptr [rsp + 0x90], 0 ; jmp 0x110d88
read: 
write: 
--------------------------------------------------------------------------------
00110f03: RLP; jmp 0x110d4a
read: 
write: 
--------------------------------------------------------------------------------
00110f27: RLP; jmp 0x110d88
read: 
write: 
--------------------------------------------------------------------------------
00110f3d: RLP; xor edx, edx ; test eax, eax ; je 0x110f5c
read: eax edx rflags 
write: edx rflags 
--------------------------------------------------------------------------------
00110f51: RLP; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
00110f6a: RLP; pop rbx ; nop ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
00110ffe: RLP; mov rcx, qword ptr [rsp] ; mov rdi, qword ptr [rsp + 8] ; lea rsi, [rip + 0x266c9] ; xor r9d, r9d ; xor edx, edx ; mov r8d, eax ; mov ebx, eax ; call 0x10506c
read: eax edx r9d rip rsp 
write: ebx edx r8d r9d rcx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00111021: RLP; test eax, eax ; je 0x110fe4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00111062: RLP; test eax, eax ; je 0x111079
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001110b8: RLP; test rax, rax ; je 0x1110e2
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
001110d2: RLP; test rax, rax ; je 0x1110e2
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
001110fe: RLP; mov byte ptr [r12 + rbx], 0 ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
read: rsp 
write: eax r12 rbp rbx rsp 
--------------------------------------------------------------------------------
00111141: RLP; test eax, eax ; mov ebx, eax ; js 0x11119c
read: eax rflags 
write: ebx rflags 
--------------------------------------------------------------------------------
00111172: RLP; test eax, eax ; js 0x1111a3
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00111189: RLP; test eax, eax ; js 0x1111a3
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001111ae: RLP; or eax, 0xffffffff ; jmp 0x11118f
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
00111232: RLP; mov r13, rax ; test r13, r13 ; je 0x1112c7
read: r13 rax rflags 
write: r13 rflags 
--------------------------------------------------------------------------------
00111247: RLP; mov qword ptr [rsp + 0x18], rax ; mov eax, ebp ; mov rdx, qword ptr [rsp + 0x10] ; mov qword ptr [rsp + 0x40], rax ; mov rax, qword ptr [r13 + 8] ; lea rcx, [rsp + 0x30] ; mov qword ptr [rsp + 0x30], r15 ; mov qword ptr [rsp + 0x38], r14 ; lea r9, [rsp + 0x2a] ; mov qword ptr [rsp], rdx ; mov qword ptr [rsp + 0x48], 0 ; lea r8, [rip + 0x2ad8] ; mov qword ptr [rsp + 8], 0 ; lea rdx, [rip - 0x9b98] ; mov esi, 3
read: ebp r14 r15 rax rdx 
write: eax esi r8 r9 rax rcx rdx 
--------------------------------------------------------------------------------
001112a2: RLP; test eax, eax ; jne 0x1112fc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001112c7: RLP; test r12b, r12b ; je 0x1112d9
read: r12b rflags 
write: rflags 
--------------------------------------------------------------------------------
001112d9: RLP; xor ecx, ecx ; movzx eax, word ptr [rsp + 0x2a] ; mov word ptr [rbx + 2], cx ; add rsp, 0x58 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: cx ecx rsp 
write: eax ecx r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00111319: RLP; jmp 0x1112b9
read: 
write: 
--------------------------------------------------------------------------------
00111328: RLP; lea rcx, [rsp + 0x2c] ; cmp eax, -1 ; mov r9d, 0x190 ; mov r8d, 0x190 ; mov edx, 2 ; mov esi, 0x186a0 ; mov rdi, rbx ; mov dword ptr [rsp + 0x2c], eax ; setne r12b ; call 0x10f1fc
read: eax rbx rflags rip rsp 
write: edx esi r12b r8d r9d rcx rdi rflags rsp 
--------------------------------------------------------------------------------
0011135a: RLP; mov r13, rax ; jmp 0x111235
read: rax 
write: r13 
--------------------------------------------------------------------------------
00111389: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00111403: RLP; test rax, rax ; je 0x1113d1
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011143c: RLP; mov rax, qword ptr fs:[rbx] ; test rax, rax ; je 0x1113f0
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
0011147d: RLP; lea rdx, [rip + 0x25cb78] ; cmp rax, rdx ; je 0x111494
read: rax rdx rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
001114bd: RLP; lea rdx, [rip + 0x25cb38] ; cmp rax, rdx ; je 0x1114dc
read: rax rdx rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
001114fd: RLP; lea rdx, [rip + 0x25caf8] ; cmp rax, rdx ; je 0x11151c
read: rax rdx rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
0011153d: RLP; lea rdx, [rip + 0x25cab8] ; cmp rax, rdx ; je 0x11155c
read: rax rdx rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
00111586: RLP; mov rcx, qword ptr [rax + 0xe8] ; test rcx, rcx ; je 0x1115c5
read: rcx rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
001115e8: RLP; cmp qword ptr [rax + 0xe0], 0 ; mov rbx, rax ; je 0x11170c
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
00111602: RLP; cmp ebp, eax ; jge 0x1116a0
read: eax ebp rflags 
write: rflags 
--------------------------------------------------------------------------------
0011162d: RLP; mov r12, rax ; mov ebx, dword ptr [rax] ; call 0x1114ec
read: rax rip rsp 
write: ebx r12 rsp 
--------------------------------------------------------------------------------
0011163b: RLP; mov rdi, qword ptr [rax] ; mov r13, rax ; xor ecx, ecx ; mov rdx, rdi ; jmp 0x111660
read: ecx rax rdi 
write: ecx r13 rdi rdx rflags 
--------------------------------------------------------------------------------
00111677: RLP; test rax, rax ; je 0x1116a0
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
001116b5: RLP; lea edx, [rbp + 0x3f] ; test ebp, ebp ; cmovns edx, ebp ; sar edx, 6 ; movsxd rsi, edx ; mov edx, ebp ; sar edx, 0x1f ; shr edx, 0x1a ; lea ecx, [rbp + rdx] ; and ecx, 0x3f ; sub ecx, edx ; mov edx, 1 ; shl rdx, cl ; or qword ptr [rax + rsi*8], rdx ; jmp 0x111624
read: cl ebp ecx edx rdx rflags 
write: ecx edx rdx rflags rsi 
--------------------------------------------------------------------------------
00111715: RLP; movsxd rdi, eax ; shl rdi, 3 ; call 0x1f3cc
read: eax rdi rip rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
00111725: RLP; test rax, rax ; mov qword ptr [rbx + 0xe0], rax ; jne 0x1115f9
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00111758: RLP; cmp ebp, eax ; jge 0x111778
read: eax ebp rflags 
write: rflags 
--------------------------------------------------------------------------------
00111765: RLP; mov rax, qword ptr [rax + 0xe0] ; movsxd rdx, ebp ; lea rax, [rax + rdx*8] ; cmp qword ptr [rax], rbx ; je 0x11178c
read: ebp rbx rflags 
write: rax rdx rflags 
--------------------------------------------------------------------------------
001117a4: RLP; lea edx, [rbp + 0x3f] ; test ebp, ebp ; cmovns edx, ebp ; sar edx, 6 ; movsxd rsi, edx ; mov edx, ebp ; sar edx, 0x1f ; shr edx, 0x1a ; lea ecx, [rbp + rdx] ; and ecx, 0x3f ; sub ecx, edx ; mov rdx, -2 ; rol rdx, cl ; and qword ptr [rax + rsi*8], rdx ; call 0x11152c
read: cl ebp ecx edx rdx rflags rip rsp 
write: ecx edx rdx rflags rsi rsp 
--------------------------------------------------------------------------------
001117da: RLP; xor ebx, ebx ; mov r13, rax ; mov r12d, dword ptr [rax] ; jmp 0x1117f0
read: ebx rax 
write: ebx r12d r13 rflags 
--------------------------------------------------------------------------------
001117fe: RLP; mov rdx, qword ptr [rax] ; lea rdx, [rdx + rbx*8] ; cmp dword ptr [rdx], ebp ; jne 0x1117ec
read: ebp rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
00111851: RLP; test rax, rax ; mov rbx, rax ; je 0x11187c
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
0011188a: RLP; test rax, rax ; mov rbx, rax ; je 0x11185f
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
001118a7: RLP; mov rdx, qword ptr [rax + 0xe8] ; mov dword ptr [rbx + 0x20], 0 ; mov qword ptr [rbx], rdx ; mov qword ptr [rax + 0xe8], rbx ; test r15, r15 ; mov r13d, 1 ; je 0x111862
read: r15 rbx rdx rflags 
write: r13d rdx rflags 
--------------------------------------------------------------------------------
001118e1: RLP; test eax, eax ; je 0x11185f
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011191b: RLP; test rax, rax ; mov rdi, rax ; je 0x111974
read: rax rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
00111943: RLP; lea rdx, [rsp + 0x18] ; mov rsi, r12 ; mov rdi, rbp ; call 0x11156c
read: r12 rbp rip rsp 
write: rdi rdx rsi rsp 
--------------------------------------------------------------------------------
00111957: RLP; test rax, rax ; je 0x111965
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00111974: RLP; add rsp, 0x28 ; pop rbp ; pop r12 ; ret
read: rsp 
write: r12 rbp rflags rsp 
--------------------------------------------------------------------------------
0011198a: RLP; mov rdi, qword ptr [rsp + 8] ; mov rdx, qword ptr [rdi] ; mov qword ptr [rax + 0xe8], rdx ; jmp 0x111933
read: rdx 
write: rdi rdx 
--------------------------------------------------------------------------------
001119ef: RLP; add rsp, 0x68 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00111a45: RLP; add rsp, 0x68 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00111a95: RLP; add rsp, 0x68 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00111ae5: RLP; add rsp, 0x68 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00111b1e: RLP; add rsp, 0x68 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00111b62: RLP; add rsp, 0x68 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00111bb5: RLP; add rsp, 0x68 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00111c0f: RLP; add rsp, 0x68 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00111c5a: RLP; mov rbp, rax ; mov rax, qword ptr [rax + 0xe0] ; mov r15, qword ptr [rax + rbx*8] ; test r15, r15 ; je 0x111d9d
read: r15 rax rflags 
write: r15 rax rbp rflags 
--------------------------------------------------------------------------------
00111c9c: RLP; test eax, eax ; je 0x111d82
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00111d82: RLP; mov rax, qword ptr [r15 + 8] ; mov rdi, r15 ; call qword ptr [rax + 8]
read: r15 rsp 
write: rax rdi rsp 
--------------------------------------------------------------------------------
00111d90: RLP; test eax, eax ; je 0x111dd2
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00111dc0: RLP; mov rax, qword ptr [r15 + 8] ; mov rdi, r15 ; call qword ptr [rax + 8]
read: r15 rsp 
write: rax rdi rsp 
--------------------------------------------------------------------------------
00111dce: RLP; test eax, eax ; jne 0x111d94
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00111de0: RLP; jmp 0x111d9d
read: 
write: 
--------------------------------------------------------------------------------
00111dfb: RLP; test eax, eax ; je 0x111d0c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00111e3c: RLP; jmp 0x111d82
read: 
write: 
--------------------------------------------------------------------------------
00111e51: RLP; jmp 0x111d82
read: 
write: 
--------------------------------------------------------------------------------
00111e87: RLP; cmp eax, 0x400 ; cmovle r15d, eax ; xor r12d, r12d ; test r15d, r15d ; jle 0x111ee1
read: eax r12d r15d rflags 
write: r12d r15d rflags 
--------------------------------------------------------------------------------
00111eba: RLP; lea ecx, [rbx - 1] ; mov eax, 1 ; shl rax, cl ; xor rbp, rax ; bsf rbx, rbp ; cmove rbx, r13 ; add rbx, 1 ; test ebx, ebx ; jne 0x111eac
read: cl ebx r13 rax rbp rbx rflags 
write: eax ecx rax rbp rbx rflags 
--------------------------------------------------------------------------------
00111f28: RLP; add rsp, 0x88 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00111f6a: RLP; mov r14, rax ; mov eax, dword ptr [rax] ; jmp 0x111fa4
read: rax 
write: eax r14 
--------------------------------------------------------------------------------
00111f7d: RLP; mov rax, qword ptr [rax + 0xe0] ; add r15d, 1 ; mov rdi, qword ptr [rax + r12*8] ; call 0x11173c
read: r15d rip rsp 
write: r15d rax rdi rflags rsp 
--------------------------------------------------------------------------------
00111f95: RLP; cmp r13d, r15d ; jle 0x111fdc
read: r13d r15d rflags 
write: rflags 
--------------------------------------------------------------------------------
00111fcf: RLP; cmp r13d, r15d ; jg 0x111f9a
read: r13d r15d rflags 
write: rflags 
--------------------------------------------------------------------------------
00112027: RLP; add rsp, 0x18 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011203a: RLP; mov rbx, rax ; jmp 0x112055
read: rax 
write: rbx 
--------------------------------------------------------------------------------
00112055: RLP; mov rdx, qword ptr [rbx + 0xe8] ; test rdx, rdx ; jne 0x112044
read: rdx rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
0011209a: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
001120d1: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
001120f6: RLP; mov edi, dword ptr [rbx] ; call 0xd711c
read: rip rsp 
write: edi rsp 
--------------------------------------------------------------------------------
00112101: RLP; cmp word ptr [rbx + 4], 0 ; jne 0x112144
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
0011211f: RLP; mov rdi, rbp ; call 0x1f46c
read: rbp rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0011212b: RLP; mov rdi, rbx ; call 0x1f46c
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
00112137: RLP; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0011217f: RLP; mov edi, 0x1d0 ; mov rbx, rax ; call 0x1f3cc
read: rax rip rsp 
write: edi rbx rsp 
--------------------------------------------------------------------------------
00112190: RLP; test rax, rax ; mov rbp, rax ; je 0x112214
read: rax rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
001121c7: RLP; lea rax, [rip + 0x25478e] ; mov qword ptr [rbx + 0x40], rbp ; xor edx, edx ; add rbp, 0x40 ; mov rdi, rbx ; mov dword ptr [rbx], r12d ; mov qword ptr [rbx + 0x30], rbp ; mov qword ptr [rbx + 8], rax ; mov qword ptr [rbx + 0x48], 0 ; mov dword ptr [rbx + 0x10], 0 ; mov word ptr [rbx + 4], dx ; call 0x1115cc
read: dx edx r12d rax rbp rbx rip rsp 
write: edx rax rbp rdi rflags rsp 
--------------------------------------------------------------------------------
00112202: RLP; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: rbx rsp 
write: r12 r13 r14 rax rbp rbx rsp 
--------------------------------------------------------------------------------
00112230: RLP; lea rdx, [rip + 0x254ad] ; lea rsi, [rip + 0x24a3e] ; mov rcx, rax ; xor edi, edi ; xor eax, eax ; call 0x6bcbc
read: eax edi rax rip rsp 
write: eax edi rcx rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0011224e: RLP; mov rdi, rbx ; call 0x1f46c
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0011225a: RLP; mov rdi, rbp ; call 0x1f46c
read: rbp rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
00112266: RLP; pop rbx ; pop rbp ; pop r12 ; pop r13 ; xor eax, eax ; pop r14 ; ret
read: eax rsp 
write: eax r12 r13 r14 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
001122cb: RLP; test eax, eax ; js 0x1122a4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001122e2: RLP; mov rdx, qword ptr [rbx] ; mov qword ptr [rax + 0x14], rdx ; mov rdx, qword ptr [rbx + 8] ; mov qword ptr [rax + 0x1c], rdx ; mov edx, dword ptr [rsp + 0xc] ; mov dword ptr [rax + 0x10], edx ; add rsp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: eax edx rdx rsp 
write: eax edx r12 r13 rbp rbx rdx rflags rsp 
--------------------------------------------------------------------------------
00112315: RLP; add rsp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: eax rsp 
write: eax r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00112358: RLP; mov rdi, rbx ; mov esi, 1 ; mov ebp, eax ; call 0x109ccc
read: eax rbx rip rsp 
write: ebp esi rdi rsp 
--------------------------------------------------------------------------------
0011236b: RLP; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
read: ebp rsp 
write: eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0011239d: RLP; cmp eax, 1 ; sbb eax, eax ; add rsp, 8 ; add eax, 2 ; ret
read: eax rflags rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
001123d2: RLP; mov rsi, r12 ; mov rdi, rbp ; call 0x10859c
read: r12 rbp rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
001123e1: RLP; test eax, eax ; jne 0x1123fc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011245a: RLP; test eax, eax ; jns 0x11243c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001124cd: RLP; cmp eax, -1 ; je 0x11251c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001124f4: RLP; test eax, eax ; jg 0x11250c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00112597: RLP; test eax, eax ; jne 0x1126cc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001125b2: RLP; test eax, eax ; je 0x1125fc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001125d2: RLP; mov rdi, rax ; call 0x694fc
read: rax rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
001125de: RLP; test r12d, r12d ; jne 0x1126b4
read: r12d rflags 
write: rflags 
--------------------------------------------------------------------------------
0011260c: RLP; test eax, eax ; jne 0x1125b6
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011261e: RLP; mov edi, 0x150 ; mov r12, rax ; call 0x1f3cc
read: rax rip rsp 
write: edi r12 rsp 
--------------------------------------------------------------------------------
0011262f: RLP; test rax, rax ; mov rbp, rax ; je 0x11271c
read: rax rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
001126a1: RLP; add rsp, 0x20 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: rbp rsp 
write: r12 r13 r14 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
001126bf: RLP; jmp 0x1125e7
read: 
write: 
--------------------------------------------------------------------------------
001126e5: RLP; jmp 0x11259f
read: 
write: 
--------------------------------------------------------------------------------
00112704: RLP; test eax, eax ; mov ebx, eax ; js 0x112775
read: eax rflags 
write: ebx rflags 
--------------------------------------------------------------------------------
00112738: RLP; lea rdx, [rip + 0x24fba] ; lea rsi, [rip + 0x24536] ; mov rcx, rax ; xor edi, edi ; xor eax, eax ; call 0x6bcbc
read: eax edi rax rip rsp 
write: eax edi rcx rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00112756: RLP; mov rdi, r12 ; call 0x1f46c
read: r12 rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
00112762: RLP; mov rdi, rbp ; call 0x1f46c
read: rbp rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0011276e: RLP; xor eax, eax ; jmp 0x1125e9
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
00112791: RLP; mov rdi, rax ; call 0x694fc
read: rax rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0011279d: RLP; xor eax, eax ; jmp 0x1125e9
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
001127bd: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
001127fa: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00112831: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00112856: RLP; mov edi, dword ptr [rbx] ; call 0xd711c
read: rip rsp 
write: edi rsp 
--------------------------------------------------------------------------------
00112861: RLP; mov rax, qword ptr [rbp + 0x18] ; mov rax, qword ptr [rax + 0x38] ; test rax, rax ; je 0x112878
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
00112878: RLP; mov rdi, qword ptr [rbx + 0x40] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
00112885: RLP; mov rdi, rbp ; call 0x1f46c
read: rbp rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
00112891: RLP; mov rdi, rbx ; call 0x1f46c
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0011289d: RLP; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00112954: RLP; test eax, eax ; mov edx, eax ; js 0x112b4b
read: eax rflags 
write: edx rflags 
--------------------------------------------------------------------------------
00112a05: RLP; mov r15, qword ptr [rsp + 8] ; mov rdi, r13 ; mov rsi, r15 ; call 0x10859c
read: r13 r15 rip rsp 
write: r15 rdi rsi rsp 
--------------------------------------------------------------------------------
00112a19: RLP; test eax, eax ; je 0x112b8c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00112ac1: RLP; test eax, eax ; jne 0x112a7c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00112af3: RLP; mov eax, 1 ; jmp 0x112b79
read: 
write: eax 
--------------------------------------------------------------------------------
00112b49: RLP; mov edx, eax ; mov eax, dword ptr [rsp + 0x1c] ; cmp edx, -1 ; mov dword ptr [r12 + 0x10], eax ; jne 0x1129e1
read: eax edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
00112b77: RLP; xor eax, eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: eax rsp 
write: eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00112c02: RLP; mov eax, 1 ; jmp 0x112b79
read: 
write: eax 
--------------------------------------------------------------------------------
00112c43: RLP; mov rax, qword ptr [rbx + 8] ; mov rsi, r13 ; mov rdi, r12 ; mov qword ptr [r13], rax ; call 0x10837c
read: r12 r13 rax rip rsp 
write: rax rdi rsi rsp 
--------------------------------------------------------------------------------
00112c5a: RLP; test eax, eax ; jne 0x112c74
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00112c82: RLP; cmp qword ptr [rbp + 0x78], 0 ; mov r12d, eax ; jne 0x112d6c
read: eax rflags 
write: r12d rflags 
--------------------------------------------------------------------------------
00112cad: RLP; cmp eax, r12d ; jne 0x112c5e
read: eax r12d rflags 
write: rflags 
--------------------------------------------------------------------------------
00112d4e: RLP; lea rsi, [rip + 0x24321] ; mov rdx, rax ; xor edi, edi ; xor eax, eax ; call 0x6bcbc
read: eax edi rax rip rsp 
write: eax edi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00112d65: RLP; jmp 0x112c60
read: 
write: 
--------------------------------------------------------------------------------
00112d8d: RLP; jmp 0x112cad
read: 
write: 
--------------------------------------------------------------------------------
00112dd6: RLP; mov rdx, qword ptr [r13 + 0x30] ; mov rax, qword ptr [r14 + 8] ; mov qword ptr [r12 + 8], rdx ; mov rdx, qword ptr [r13 + 0x28] ; mov qword ptr [r12], rax ; mov qword ptr [r12 + 0x10], rdx ; mov rdx, qword ptr [r13 + 0x20] ; mov qword ptr [r12 + 0x18], rdx ; mov rsi, qword ptr [r13 + 0x38] ; mov rdi, qword ptr [r13 + 0x40] ; mov qword ptr [r12 + 0x20], rsi ; mov qword ptr [r12 + 0x28], rdi ; mov rdx, qword ptr [rbp + 0x48] ; mov rdx, qword ptr [rdx + 0x1d0] ; mov rcx, qword ptr [rdx]
read: rax rdi rdx rsi 
write: rax rcx rdi rdx rsi 
--------------------------------------------------------------------------------
00112e64: RLP; test rax, rax ; mov r12, rax ; mov edx, 5 ; lea rsi, [rip + 0x296e6] ; je 0x112eb2
read: rax rflags 
write: edx r12 rflags rsi 
--------------------------------------------------------------------------------
00112e8a: RLP; test rax, rax ; mov rsi, rax ; mov edx, dword ptr [rsp + 0xc] ; jne 0x112db0
read: rax rflags 
write: edx rflags rsi 
--------------------------------------------------------------------------------
00112ea6: RLP; lea rsi, [rip + 0x296cf] ; mov edx, 5 ; lea rdi, [rip + 0x21af4] ; call 0x2f4bc
read: rip rsp 
write: edx rdi rsi rsp 
--------------------------------------------------------------------------------
00112ec2: RLP; lea rsi, [rip + 0x241ad] ; mov rdx, rax ; xor edi, edi ; xor eax, eax ; call 0x6bcbc
read: eax edi rax rip rsp 
write: eax edi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00112ed9: RLP; jmp 0x112c60
read: 
write: 
--------------------------------------------------------------------------------
00112f49: RLP; test eax, eax ; jne 0x1130dc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00112f64: RLP; test eax, eax ; mov r15d, eax ; jne 0x11309c
read: eax rflags 
write: r15d rflags 
--------------------------------------------------------------------------------
00112f7d: RLP; mov edi, 0x1d8 ; mov rbp, rax ; call 0x1f3cc
read: rax rip rsp 
write: edi rbp rsp 
--------------------------------------------------------------------------------
00112f8e: RLP; cmp r14d, r13d ; mov r12, rax ; cmovae r13d, r14d ; add r13d, 3 ; and r13d, 0xfffffffc ; mov edi, r13d ; call 0x1f3cc
read: r13d r14d rax rflags rip rsp 
write: edi r12 r13d rflags rsp 
--------------------------------------------------------------------------------
00112fac: RLP; test rbp, rbp ; mov r14, rax ; je 0x11313c
read: rax rbp rflags 
write: r14 rflags 
--------------------------------------------------------------------------------
00112feb: RLP; lea rax, [rip + 0x2539aa] ; mov qword ptr [r12 + 0x1d0], 0 ; mov qword ptr [rbp + 0x48], r12 ; lea rcx, [rsp + 0xc] ; add r12, 0x40 ; xor esi, esi ; mov qword ptr [rbp + 8], rax ; mov qword ptr [rbp + 0x30], r12 ; mov r8d, 4 ; movzx eax, word ptr [rsp + 0x12] ; mov dword ptr [rbp], ebx ; mov edx, 8 ; ror ax, 8 ; mov edi, ebx ; mov word ptr [rbp + 4], ax
read: ax ebx esi r12 rax 
write: ax eax edi edx esi r12 r8d rax rcx rflags 
--------------------------------------------------------------------------------
00113043: RLP; test eax, eax ; jne 0x11312c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00113086: RLP; add rsp, 0x28 ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rbp rsp 
write: r12 r13 r14 r15 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
001130ba: RLP; mov rdi, rax ; call 0x694fc
read: rax rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
001130c6: RLP; test r12d, r12d ; je 0x113086
read: r12d rflags 
write: rflags 
--------------------------------------------------------------------------------
001130d6: RLP; jmp 0x113086
read: 
write: 
--------------------------------------------------------------------------------
001130f5: RLP; jmp 0x112f51
read: 
write: 
--------------------------------------------------------------------------------
00113114: RLP; test eax, eax ; mov ebx, eax ; js 0x1131a1
read: eax rflags 
write: ebx rflags 
--------------------------------------------------------------------------------
00113158: RLP; lea rdx, [rip + 0x245c4] ; lea rsi, [rip + 0x23b16] ; mov rcx, rax ; xor edi, edi ; xor eax, eax ; call 0x6bcbc
read: eax edi rax rip rsp 
write: eax edi rcx rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00113176: RLP; mov rdi, rbp ; xor ebp, ebp ; call 0x1f46c
read: ebp rbp rip rsp 
write: ebp rdi rflags rsp 
--------------------------------------------------------------------------------
00113184: RLP; mov rdi, r12 ; call 0x1f46c
read: r12 rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
00113190: RLP; mov rdi, r14 ; call 0x1f46c
read: r14 rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0011319c: RLP; jmp 0x113086
read: 
write: 
--------------------------------------------------------------------------------
001131bf: RLP; mov rdi, rax ; call 0x694fc
read: rax rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
001131cb: RLP; jmp 0x113086
read: 
write: 
--------------------------------------------------------------------------------
001131f7: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00113234: RLP; lea rsi, [rip + 0x23e3b] ; mov rdx, rax ; xor edi, edi ; xor eax, eax ; call 0x6bcbc
read: eax edi rax rip rsp 
write: eax edi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0011324b: RLP; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: eax rsp 
write: eax r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0011326d: RLP; test rax, rax ; mov r12, rax ; je 0x1132dc
read: rax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
00113296: RLP; test rax, rax ; mov r13, rax ; mov qword ptr [r12 + 8], rax ; je 0x1132f4
read: rax rflags 
write: r13 rflags 
--------------------------------------------------------------------------------
001132b4: RLP; test rax, rax ; mov qword ptr [r12 + 0x10], rax ; je 0x113311
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00113300: RLP; mov edx, 5 ; lea rsi, [rip + 0x29340] ; jmp 0x113224
read: 
write: edx rsi 
--------------------------------------------------------------------------------
0011331d: RLP; mov rdi, r12 ; call 0x1f46c
read: r12 rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
00113329: RLP; mov edx, 5 ; lea rsi, [rip + 0x29347] ; jmp 0x113224
read: 
write: edx rsi 
--------------------------------------------------------------------------------
00113470: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011349b: RLP; mov rbx, rax ; shr rbx, 1 ; mov edi, ebx ; call 0x1f3cc
read: ebx rax rbx rip rsp 
write: edi rbx rflags rsp 
--------------------------------------------------------------------------------
001134ac: RLP; mov rsi, r12 ; mov rdx, rax ; mov edi, ebx ; mov rbp, rax ; call 0x11333c
read: ebx r12 rax rip rsp 
write: edi rbp rdx rsi rsp 
--------------------------------------------------------------------------------
001134c0: RLP; mov rsi, rsp ; mov rdi, r14 ; call 0x11342c
read: r14 rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
001134cf: RLP; lea r8, [rsp + 0x10] ; xor ecx, ecx ; mov edx, ebx ; mov rsi, rbp ; mov rdi, rsp ; mov qword ptr [rsp + 0x10], 0 ; call 0x10a05c
read: ebx ecx rbp rip rsp 
write: ecx edx r8 rdi rflags rsi rsp 
--------------------------------------------------------------------------------
001134f0: RLP; cmp eax, 1 ; jle 0x113514
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00113501: RLP; add rsp, 0x20 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: eax rsp 
write: eax r12 r13 r14 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00113525: RLP; mov rdi, rbp ; call 0x1f46c
read: rbp rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
00113531: RLP; add rsp, 0x20 ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: rsp 
write: eax r12 r13 r14 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0011356b: RLP; mov rbx, rax ; shr rbx, 1 ; mov edi, ebx ; call 0x1f3cc
read: ebx rax rbx rip rsp 
write: edi rbx rflags rsp 
--------------------------------------------------------------------------------
0011357c: RLP; mov rsi, r12 ; mov rdx, rax ; mov edi, ebx ; mov rbp, rax ; call 0x11333c
read: ebx r12 rax rip rsp 
write: edi rbp rdx rsi rsp 
--------------------------------------------------------------------------------
00113590: RLP; mov rsi, rsp ; mov rdi, r14 ; call 0x11342c
read: r14 rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
0011359f: RLP; lea r8, [rsp + 0x10] ; mov ecx, 1 ; mov edx, ebx ; mov rsi, rbp ; mov rdi, rsp ; mov qword ptr [rsp + 0x10], 0 ; call 0x10a05c
read: ebx rbp rip rsp 
write: ecx edx r8 rdi rsi rsp 
--------------------------------------------------------------------------------
001135c3: RLP; cmp eax, 1 ; jle 0x1135ec
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001135d4: RLP; add rsp, 0x20 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: eax rsp 
write: eax r12 r13 r14 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
001135fd: RLP; mov rdi, rbp ; call 0x1f46c
read: rbp rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
00113609: RLP; add rsp, 0x20 ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: rsp 
write: eax r12 r13 r14 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00113650: RLP; xor r8d, r8d ; test eax, eax ; je 0x113669
read: eax r8d rflags 
write: r8d rflags 
--------------------------------------------------------------------------------
001136c4: RLP; test eax, eax ; jne 0x1136a4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001136e5: RLP; mov qword ptr [rbx], 0 ; mov r8d, dword ptr [rsp + 0xc] ; jmp 0x113669
read: 
write: r8d 
--------------------------------------------------------------------------------
00113731: RLP; mov rbx, rax ; mov rax, qword ptr [rsp] ; test rbx, rbx ; mov qword ptr [rax], rbx ; jne 0x11369a
read: rax rbx rflags 
write: rax rbx rflags 
--------------------------------------------------------------------------------
00113760: RLP; lea rdx, [rip + 0x23fca] ; lea rsi, [rip + 0x2350e] ; mov rcx, rax ; xor edi, edi ; xor eax, eax ; call 0x6bcbc
read: eax edi rax rip rsp 
write: eax edi rcx rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0011377e: RLP; xor r8d, r8d ; jmp 0x113669
read: r8d 
write: r8d rflags 
--------------------------------------------------------------------------------
001137db: RLP; test eax, eax ; jne 0x1137bc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011385a: RLP; test eax, eax ; je 0x1138a4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00113879: RLP; jmp 0x11383b
read: 
write: 
--------------------------------------------------------------------------------
0011388a: RLP; test eax, eax ; je 0x1138a4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001138cb: RLP; jmp 0x11383b
read: 
write: 
--------------------------------------------------------------------------------
001138f9: RLP; add rsp, 0x38 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00113953: RLP; mov edx, eax ; xor eax, eax ; test edx, edx ; je 0x11393a
read: eax edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
0011398c: RLP; add rsp, 0x10 ; pop rbx ; ret
read: rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
001139d3: RLP; mov edx, eax ; xor eax, eax ; test edx, edx ; je 0x1139ba
read: eax edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
00113a0b: RLP; add rsp, 0x10 ; pop rbx ; ret
read: rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
00113a5b: RLP; nop ; jmp 0x113a3e
read: 
write: 
--------------------------------------------------------------------------------
00113a6f: RLP; jmp 0x113a3e
read: 
write: 
--------------------------------------------------------------------------------
00113ab3: RLP; mov edx, eax ; xor eax, eax ; test edx, edx ; je 0x113a9a
read: eax edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
00113aeb: RLP; jmp 0x113a9a
read: 
write: 
--------------------------------------------------------------------------------
00113b4d: RLP; test eax, eax ; jne 0x113b5c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00113b6f: RLP; test eax, eax ; setne al ; add rsp, 0x18 ; pop rbx ; movzx eax, al ; pop rbp ; ret
read: al eax rflags rsp 
write: al eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00113b91: RLP; test eax, eax ; je 0x113b51
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00113ba7: RLP; test eax, eax ; je 0x113b51
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00113c1d: RLP; test eax, eax ; jne 0x113c2c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00113c3f: RLP; test eax, eax ; setne al ; add rsp, 0x18 ; pop rbx ; movzx eax, al ; pop rbp ; ret
read: al eax rflags rsp 
write: al eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00113c61: RLP; test eax, eax ; je 0x113c21
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00113c77: RLP; test eax, eax ; je 0x113c21
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00113cad: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00113ccd: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00113d13: RLP; mov edx, eax ; xor eax, eax ; test edx, edx ; je 0x113cfa
read: eax edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
00113d4d: RLP; add rsp, 0x10 ; pop rbx ; ret
read: rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
00113d93: RLP; mov edx, eax ; xor eax, eax ; test edx, edx ; je 0x113d7a
read: eax edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
00113dcc: RLP; add rsp, 0x10 ; pop rbx ; ret
read: rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
00113dfd: RLP; xor edx, edx ; test eax, eax ; je 0x113e0b
read: eax edx rflags 
write: edx rflags 
--------------------------------------------------------------------------------
00113e3d: RLP; xor edx, edx ; test eax, eax ; je 0x113e4b
read: eax edx rflags 
write: edx rflags 
--------------------------------------------------------------------------------
00113e93: RLP; mov edx, eax ; xor eax, eax ; test edx, edx ; je 0x113e7a
read: eax edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
00113eda: RLP; add rsp, 0x10 ; pop rbx ; ret
read: rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
00113f23: RLP; mov edx, eax ; xor eax, eax ; test edx, edx ; je 0x113f0a
read: eax edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
00113f5c: RLP; add rsp, 0x10 ; pop rbx ; ret
read: rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
00113f86: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00113fbc: RLP; test eax, eax ; je 0x113fdc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00114010: RLP; mov qword ptr [r13], 0 ; jmp 0x113fdc
read: 
write: 
--------------------------------------------------------------------------------
0011404a: RLP; mov r12d, eax ; jmp 0x113fdc
read: eax 
write: r12d 
--------------------------------------------------------------------------------
0011405e: RLP; test rax, rax ; mov r14, rax ; mov qword ptr [r13], rax ; mov edx, dword ptr [rsp + 0xc] ; jne 0x11403b
read: rax rflags 
write: edx r14 rflags 
--------------------------------------------------------------------------------
0011408d: RLP; lea rdx, [rip + 0x236b2] ; lea rsi, [rip + 0x22be1] ; mov rcx, rax ; xor edi, edi ; xor eax, eax ; call 0x6bcbc
read: eax edi rax rip rsp 
write: eax edi rcx rdx rflags rsi rsp 
--------------------------------------------------------------------------------
001140ab: RLP; jmp 0x113fdc
read: 
write: 
--------------------------------------------------------------------------------
001140d9: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00114110: RLP; xor ecx, ecx ; test eax, eax ; je 0x114152
read: eax ecx rflags 
write: ecx rflags 
--------------------------------------------------------------------------------
00114150: RLP; mov ecx, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; mov eax, ecx ; pop r14 ; ret
read: eax ecx rsp 
write: eax ecx r12 r13 r14 rbp rbx rsp 
--------------------------------------------------------------------------------
0011417f: RLP; pop rbx ; pop rbp ; pop r12 ; mov ecx, eax ; pop r13 ; mov eax, ecx ; pop r14 ; ret
read: eax ecx rsp 
write: eax ecx r12 r13 r14 rbp rbx rsp 
--------------------------------------------------------------------------------
001141cc: RLP; mov dword ptr [rsp + 0xc], eax ; lea rsi, [rsp + 0xc] ; mov rdi, rbx ; call 0x11399c
read: eax rbx rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
001141e1: RLP; test eax, eax ; je 0x11423c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00114215: RLP; mov qword ptr [r12], 0 ; add rsp, 0x10 ; mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: rsp 
write: eax r12 r13 r14 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0011427a: RLP; jmp 0x11423e
read: 
write: 
--------------------------------------------------------------------------------
00114287: RLP; test rax, rax ; mov rbp, rax ; mov qword ptr [r12], rax ; jne 0x114251
read: rax rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
001142af: RLP; lea rdx, [rip + 0x23485] ; lea rsi, [rip + 0x229bf] ; mov rcx, rax ; xor edi, edi ; xor eax, eax ; call 0x6bcbc
read: eax edi rax rip rsp 
write: eax edi rcx rdx rflags rsi rsp 
--------------------------------------------------------------------------------
001142cd: RLP; xor eax, eax ; jmp 0x11423e
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
001142f2: RLP; test eax, eax ; setne al ; add rsp, 8 ; movzx eax, al ; ret
read: al eax rflags rsp 
write: al eax rflags rsp 
--------------------------------------------------------------------------------
0011434c: RLP; test eax, eax ; jne 0x1143a4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011437e: RLP; test eax, eax ; je 0x114350
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00114395: RLP; test eax, eax ; setne al ; movzx eax, al ; jmp 0x11432e
read: al eax rflags 
write: al eax rflags 
--------------------------------------------------------------------------------
001143b7: RLP; test eax, eax ; je 0x114350
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001143ed: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011443c: RLP; test eax, eax ; jne 0x114494
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011446e: RLP; test eax, eax ; je 0x114440
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00114485: RLP; test eax, eax ; setne al ; movzx eax, al ; jmp 0x11441e
read: al eax rflags 
write: al eax rflags 
--------------------------------------------------------------------------------
001144a7: RLP; test eax, eax ; je 0x114440
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001144dd: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00114517: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00114527: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00114557: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00114567: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
001145a4: RLP; mov edx, eax ; xor eax, eax ; test edx, edx ; je 0x11458a
read: eax edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
001145db: RLP; add rsp, 0x10 ; pop rbx ; ret
read: rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
00114624: RLP; mov edx, eax ; xor eax, eax ; test edx, edx ; je 0x11460a
read: eax edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
0011465b: RLP; add rsp, 0x10 ; pop rbx ; ret
read: rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
001146a4: RLP; mov edx, eax ; xor eax, eax ; test edx, edx ; je 0x11468a
read: eax edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
001146db: RLP; add rsp, 0x10 ; pop rbx ; ret
read: rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
00114724: RLP; mov edx, eax ; xor eax, eax ; test edx, edx ; je 0x11470a
read: eax edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
0011475b: RLP; add rsp, 0x10 ; pop rbx ; ret
read: rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
001148e9: RLP; add qword ptr [rbx + 0x18], rbp ; mov eax, 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: rbp rsp 
write: eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0011492c: RLP; add qword ptr [rbx + 0x18], rbp ; mov eax, 1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: rbp rsp 
write: eax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00114989: RLP; cmp dword ptr [rbp], 2 ; je 0x1149bc
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
001149cc: RLP; mov qword ptr [r12], 0 ; mov eax, dword ptr [rsp + 8] ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
read: rsp 
write: eax r12 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
001149f9: RLP; test rax, rax ; mov rbx, rax ; mov qword ptr [r12], rax ; mov rcx, qword ptr [rsp + 8] ; jne 0x114976
read: rax rflags 
write: rbx rcx rflags 
--------------------------------------------------------------------------------
00114a2a: RLP; lea rdx, [rip + 0x22d1f] ; lea rsi, [rip + 0x22244] ; mov rcx, rax ; xor edi, edi ; xor eax, eax ; call 0x6bcbc
read: eax edi rax rip rsp 
write: eax edi rcx rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00114a48: RLP; xor eax, eax ; jmp 0x11498f
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
00114a91: RLP; xor esi, esi ; test eax, eax ; je 0x114aa9
read: eax esi rflags 
write: esi rflags 
--------------------------------------------------------------------------------
00114ad1: RLP; add rsp, 0x18 ; mov esi, eax ; pop rbx ; pop rbp ; pop r12 ; mov eax, esi ; pop r13 ; ret
read: eax esi rsp 
write: eax esi r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00114b75: RLP; mov qword ptr [rbx + 0x18], 0 ; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
00114bcc: RLP; mov rdi, r12 ; call 0x1f3cc
read: r12 rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
00114bd8: RLP; test rax, rax ; mov qword ptr [rbx + 0x18], rax ; je 0x114bfb
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00114cb8: RLP; mov rdi, qword ptr [rsp + 0x18] ; mov ebx, eax ; call 0x1f46c
read: eax rip rsp 
write: ebx rdi rsp 
--------------------------------------------------------------------------------
00114cc8: RLP; mov eax, dword ptr [rsp + 0x28] ; xor edx, edx ; cmp ebx, 1 ; cmove rdx, rax ; sub rsp, -0x80 ; mov rax, rdx ; pop rbx ; ret
read: ebx edx rax rdx rflags rsp 
write: eax edx rax rbx rdx rflags rsp 
--------------------------------------------------------------------------------
00114d28: RLP; cmp rax, 1 ; sete al ; add rsp, 0x18 ; movzx eax, al ; ret
read: al rax rflags rsp 
write: al eax rflags rsp 
--------------------------------------------------------------------------------
00114d69: RLP; cmp rax, 1 ; sete al ; add rsp, 0x18 ; movzx eax, al ; ret
read: al rax rflags rsp 
write: al eax rflags rsp 
--------------------------------------------------------------------------------
00114da4: RLP; xor edx, edx ; cmp rax, 1 ; jne 0x114db6
read: edx rax rflags 
write: edx rflags 
--------------------------------------------------------------------------------
00114df4: RLP; xor edx, edx ; cmp rax, 1 ; jne 0x114e09
read: edx rax rflags 
write: edx rflags 
--------------------------------------------------------------------------------
00114e31: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00114e55: RLP; not eax ; add rsp, 8 ; shr eax, 0x1f ; ret
read: eax rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
00114e81: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00114ebb: RLP; cmp rax, 1 ; sete al ; add rsp, 8 ; movzx eax, al ; ret
read: al rax rflags rsp 
write: al eax rflags rsp 
--------------------------------------------------------------------------------
00114efb: RLP; cmp rax, 1 ; sete al ; add rsp, 8 ; movzx eax, al ; ret
read: al rax rflags rsp 
write: al eax rflags rsp 
--------------------------------------------------------------------------------
00114f4a: RLP; mov rdi, qword ptr [rax] ; mov rbx, rax ; call 0x1f46c
read: rax rip rsp 
write: rbx rdi rsp 
--------------------------------------------------------------------------------
00114f59: RLP; mov qword ptr [rbx], 0 ; call 0x11152c
read: rip rsp 
write: rsp 
--------------------------------------------------------------------------------
00114f69: RLP; mov dword ptr [rax], 0 ; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
00114f96: RLP; mov r13, rax ; nop dword ptr [rax] ; mov r14d, dword ptr [r13] ; test r14d, r14d ; jne 0x114fb8
read: r14d rax rflags 
write: r13 r14d rflags 
--------------------------------------------------------------------------------
00114fae: RLP; cmp qword ptr [rax], 0 ; je 0x1150a5
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
00114fd8: RLP; test rax, rax ; je 0x1150ba
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00114ff5: RLP; mov rdx, qword ptr [rax] ; sub r14d, 1 ; mov rcx, rbx ; lea rsi, [rdx + r14*8 + 8] ; nop dword ptr [rax + rax] ; mov eax, dword ptr [rdx] ; add rdx, 8 ; add rcx, 8 ; mov dword ptr [rcx - 8], eax ; movzx eax, word ptr [rdx - 4] ; mov word ptr [rcx - 4], ax ; xor eax, eax ; mov word ptr [rcx - 2], ax ; cmp rdx, rsi ; jne 0x11500c
read: ax eax r14d rbx rcx rdx rflags rsi 
write: eax r14d rcx rdx rflags rsi 
--------------------------------------------------------------------------------
00115040: RLP; cmp eax, -1 ; je 0x11506c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011505b: RLP; jmp 0x114f9c
read: 
write: 
--------------------------------------------------------------------------------
00115099: RLP; mov rdi, rax ; call 0x694fc
read: rax rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
001150a5: RLP; mov rdi, rbx ; call 0x1f46c
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
001150b1: RLP; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: rsp 
write: r12 r13 r14 rbp rbx rsp 
--------------------------------------------------------------------------------
001150d6: RLP; mov rdi, rax ; call 0x694fc
read: rax rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
001150e2: RLP; jmp 0x1150a5
read: 
write: 
--------------------------------------------------------------------------------
0011527c: RLP; mov rbx, rax ; lea rax, [rsp + 0x60] ; mov rbp, rbx ; mov rbx, r15 ; mov r15d, r14d ; mov r14, qword ptr [rsp + 0xd0] ; mov qword ptr [rsp + 0x10], rax ; cmp rbp, -1 ; je 0x1153cc
read: r14d r15 rax rbp rbx rflags 
write: r14 r15d rax rbp rbx rflags 
--------------------------------------------------------------------------------
001152c2: RLP; test rax, rax ; je 0x1153cc
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
001153ec: RLP; cmp eax, -1 ; mov ecx, eax ; je 0x115596
read: eax rflags 
write: ecx rflags 
--------------------------------------------------------------------------------
001154b2: RLP; mov rax, qword ptr [r12] ; mov r10, qword ptr [rsp + 0x20] ; mov ecx, dword ptr [rsp + 0x1c] ; mov r9, qword ptr [rsp + 0x28] ; mov r11, qword ptr [rsp + 0x30] ; cmp byte ptr [rax + r10 - 1], 0 ; jne 0x1154ec
read: rflags 
write: ecx r10 r11 r9 rax rflags 
--------------------------------------------------------------------------------
00115518: RLP; jmp 0x115381
read: 
write: 
--------------------------------------------------------------------------------
0011557e: RLP; mov r8, qword ptr [rsp + 0x20] ; mov ecx, dword ptr [rsp + 0x1c] ; cmp r8, rax ; jne 0x1155f8
read: r8 rax rflags 
write: ecx r8 rflags 
--------------------------------------------------------------------------------
001155bc: RLP; mov edx, dword ptr [rsp + 0x1c] ; jmp 0x1153bc
read: 
write: edx 
--------------------------------------------------------------------------------
00115649: RLP; lea rsi, [rax + 1] ; mov qword ptr [rsp], r14 ; mov r9, r13 ; mov r8, r12 ; mov rcx, rbp ; xor edx, edx ; mov rdi, rbx ; call 0x11522c
read: edx r12 r13 r14 rbp rbx rip rsp 
write: edx r8 r9 rcx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00115668: RLP; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: rsp 
write: r12 r13 r14 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
001156c9: RLP; lea rsi, [rbx + 0xc] ; mov qword ptr [rsp], r14 ; mov r9, r13 ; mov r8, r12 ; mov rcx, rbp ; mov edx, 1 ; sub rsi, rax ; mov rdi, rax ; call 0x11522c
read: r12 r13 r14 rax rbp rip rsi rsp 
write: edx r8 r9 rcx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
001156ee: RLP; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: rsp 
write: r12 r13 r14 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00115758: RLP; mov rbx, rax ; mov rax, r12 ; mov qword ptr [rbp - 0xd8], 0 ; neg rax ; mov dword ptr [rbp - 0x84], 0 ; mov qword ptr [rbp - 0xa8], rax ; and qword ptr [rbp - 0xa8], 7 ; lea rax, [rbp - 0x50] ; add r12, qword ptr [rbp - 0xa8] ; mov qword ptr [rbp - 0xe0], rax ; mov qword ptr [rbp - 0xc8], r12 ; nop word ptr [rax + rax] ; cmp rbx, -1 ; je 0x1158ed
read: r12 rax rbx rflags 
write: r12 rax rbx rflags 
--------------------------------------------------------------------------------
001157d4: RLP; test rax, rax ; je 0x1158ed
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011592c: RLP; cmp eax, -1 ; mov ecx, eax ; mov r9, qword ptr [rbp - 0xb0] ; mov r10, qword ptr [rbp - 0xb8] ; je 0x115c27
read: eax rflags 
write: ecx r10 r9 rflags 
--------------------------------------------------------------------------------
001159e1: RLP; mov r10, qword ptr [rbp - 0xc0] ; mov r9, qword ptr [rbp - 0xb8] ; mov ecx, dword ptr [rbp - 0xb0] ; mov esi, dword ptr [rbp - 0x5c] ; mov rax, qword ptr [r14 + 0x18] ; movsxd rdx, esi ; test esi, esi ; mov qword ptr [rax + rdx*8], 0 ; jle 0x115dbb
read: esi rflags 
write: ecx esi r10 r9 rax rdx rflags 
--------------------------------------------------------------------------------
00115a81: RLP; mov rax, qword ptr [r14] ; mov r9, qword ptr [rbp - 0xb8] ; mov ecx, dword ptr [rbp - 0xb0] ; cmp byte ptr [rax + r9 - 1], 0 ; jne 0x115b2c
read: rflags 
write: ecx r9 rax rflags 
--------------------------------------------------------------------------------
00115b18: RLP; jmp 0x1158a2
read: 
write: 
--------------------------------------------------------------------------------
00115b86: RLP; mov r8, qword ptr [rbp - 0xb8] ; mov ecx, dword ptr [rbp - 0xb0] ; mov r9, qword ptr [rbp - 0xc0] ; mov r10, qword ptr [rbp - 0xd0] ; cmp rax, r8 ; je 0x1159f5
read: r8 rax rflags 
write: ecx r10 r8 r9 rflags 
--------------------------------------------------------------------------------
00115be7: RLP; mov r8, qword ptr [rbp - 0xb8] ; mov ecx, dword ptr [rbp - 0xb0] ; cmp r8, rax ; je 0x115af8
read: r8 rax rflags 
write: ecx r8 rflags 
--------------------------------------------------------------------------------
00115c48: RLP; jmp 0x1158e0
read: 
write: 
--------------------------------------------------------------------------------
00115d31: RLP; mov r11, qword ptr [rbp - 0xb8] ; cmp r13, rax ; mov ecx, dword ptr [rbp - 0xb0] ; mov r13, r11 ; jne 0x115baa
read: r11 r13 rax rflags 
write: ecx r11 r13 rflags 
--------------------------------------------------------------------------------
00115e04: RLP; lea rsi, [rax + 1] ; mov qword ptr [rsp], r14 ; mov r9, r13 ; mov r8, r12 ; mov rcx, rbp ; mov rdi, rbx ; mov edx, 2 ; call 0x1156fc
read: r12 r13 r14 rbp rbx rip rsp 
write: edx r8 r9 rcx rdi rsi rsp 
--------------------------------------------------------------------------------
00115e26: RLP; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: rsp 
write: r12 r13 r14 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00115e79: RLP; lea rsi, [rbx + 0xc] ; mov qword ptr [rsp], r14 ; mov r9, r13 ; mov r8, r12 ; mov rcx, rbp ; mov edx, 3 ; sub rsi, rax ; mov rdi, rax ; call 0x1156fc
read: r12 r13 r14 rax rbp rip rsi rsp 
write: edx r8 r9 rcx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00115e9e: RLP; add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
read: rsp 
write: r12 r13 r14 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00115f1a: RLP; mov rbx, qword ptr [rbp - 0xd8] ; mov r14, rax ; lea rax, [rbp - 0x90] ; mov dword ptr [rbp - 0xa8], 0 ; mov qword ptr [rbp - 0xc8], rax ; mov rax, rbx ; neg rax ; mov qword ptr [rbp - 0xd0], rax ; and qword ptr [rbp - 0xd0], 7 ; mov rax, rbx ; add rax, qword ptr [rbp - 0xd0] ; mov qword ptr [rbp - 0xf8], rax ; cmp r14, -1 ; je 0x116061
read: r14 rax rbx rflags 
write: r14 rax rbx rflags 
--------------------------------------------------------------------------------
00115f92: RLP; test rax, rax ; je 0x116061
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011601e: RLP; mov edx, dword ptr [rbp - 0xa4] ; jmp 0x115ff4
read: 
write: edx 
--------------------------------------------------------------------------------
0011608b: RLP; cmp eax, -1 ; mov r12d, eax ; je 0x1165dc
read: eax rflags 
write: r12d rflags 
--------------------------------------------------------------------------------
001162f8: RLP; mov rax, qword ptr [r15 + 0x18] ; mov r10, qword ptr [rbp - 0x100] ; mov r11, qword ptr [rbp - 0xf0] ; mov rdi, qword ptr [rax] ; mov rsi, r10 ; mov qword ptr [rbp - 0xe0], r10 ; mov rdx, r11 ; call 0x8e3dc
read: r10 r11 rip rsp 
write: r10 r11 rax rdi rdx rsi rsp 
--------------------------------------------------------------------------------
00116323: RLP; mov r11, qword ptr [rbp - 0xf0] ; mov r10, qword ptr [rbp - 0xe0] ; movsxd rsi, dword ptr [rbp - 0x84] ; test esi, esi ; jle 0x1165f5
read: esi rflags 
write: r10 r11 rflags rsi 
--------------------------------------------------------------------------------
001163c3: RLP; movsxd rax, dword ptr [rbp - 0x88] ; mov rdx, qword ptr [r15] ; cmp byte ptr [rdx + rax - 1], 0 ; jne 0x11644c
read: rflags 
write: rax rdx rflags 
--------------------------------------------------------------------------------
00116521: RLP; cmp rax, qword ptr [rbp - 0x100] ; mov edx, 0xffffffff ; mov r10, qword ptr [rbp - 0xe0] ; mov r11, qword ptr [rbp - 0xf0] ; jne 0x1160e9
read: rax rflags 
write: edx r10 r11 rflags 
--------------------------------------------------------------------------------
00116572: RLP; mov rcx, qword ptr [rbp - 0xc0] ; cmp rax, rcx ; jne 0x116463
read: rax rcx rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
00116656: RLP; mov edx, dword ptr [rbp - 0xc0] ; jmp 0x116055
read: 
write: edx 
--------------------------------------------------------------------------------
001166c5: RLP; cmp rax, 1 ; sbb eax, eax ; or eax, 1 ; test eax, eax ; mov dword ptr [rip + 0x2582aa], eax ; jle 0x115ef7
read: eax rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00116735: RLP; mov r9, qword ptr [rsp + 0x18] ; add ebx, 5 ; lea rsi, [rax + 1] ; mov qword ptr [rsp], r15 ; mov r8, r13 ; mov rcx, r12 ; mov edx, ebx ; mov rdi, rbp ; mov qword ptr [rsp + 8], r9 ; mov r9, r14 ; call 0x115eac
read: ebx r12 r13 r14 r15 r9 rbp rip rsp 
write: ebx edx r8 r9 rcx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00116761: RLP; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
001167ae: RLP; lea rsi, [rax + 1] ; mov rax, qword ptr [rsp + 0x50] ; add ebx, 4 ; mov qword ptr [rsp], r15 ; mov r9, r14 ; mov r8, r13 ; mov rcx, r12 ; mov edx, ebx ; mov rdi, rbp ; mov qword ptr [rsp + 8], rax ; call 0x115eac
read: ebx r12 r13 r14 r15 rax rbp rip rsp 
write: ebx edx r8 r9 rax rcx rdi rflags rsi rsp 
--------------------------------------------------------------------------------
001167da: RLP; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00116821: RLP; add rsp, 0x18 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
001168cb: RLP; add rbp, 0x12c ; cmp rbp, rax ; jae 0x11690c
read: rax rbp rflags 
write: rbp rflags 
--------------------------------------------------------------------------------
001168f3: RLP; cmp rax, -1 ; je 0x116904
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00116964: RLP; lea rcx, [rsp + 0x3c] ; lea rdx, [rip + 0x25801c] ; lea rsi, [rip + 0x1fcc2] ; mov edi, 0xd ; lea r12, [rax + 1] ; call 0x118b4c
read: rip rsp 
write: edi r12 rcx rdx rsi rsp 
--------------------------------------------------------------------------------
00116989: RLP; mov r14, rax ; lea rax, [rsp + 0x40] ; mov qword ptr [rsp + 8], rax ; nop word ptr [rax + rax] ; cmp r14, -1 ; je 0x116a2c
read: r14 rax rflags 
write: r14 rax rflags 
--------------------------------------------------------------------------------
001169c3: RLP; test rax, rax ; je 0x116a2c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00116a4b: RLP; cmp eax, -1 ; mov ecx, eax ; je 0x116c24
read: eax rflags 
write: ecx rflags 
--------------------------------------------------------------------------------
00116ac8: RLP; jmp 0x116a19
read: 
write: 
--------------------------------------------------------------------------------
00116b4f: RLP; test rax, rax ; mov r8, rax ; mov r10, qword ptr [rsp + 0x10] ; mov ecx, dword ptr [rsp + 0x18] ; movsxd rdx, dword ptr [rsp + 0x20] ; movsxd r11, dword ptr [rsp + 0x28] ; mov esi, dword ptr [rsp + 0x2c] ; je 0x116c39
read: rax rflags 
write: ecx esi r10 r11 r8 rdx rflags 
--------------------------------------------------------------------------------
00116bb0: RLP; mov r8, qword ptr [rsp + 0x10] ; mov ecx, dword ptr [rsp + 0x18] ; mov rax, qword ptr [r8 + 8] ; test rax, rax ; je 0x116c14
read: rax rflags 
write: ecx r8 rax rflags 
--------------------------------------------------------------------------------
00116bf3: RLP; mov r8, qword ptr [rsp + 0x10] ; mov ecx, dword ptr [rsp + 0x18] ; jmp 0x116a94
read: 
write: ecx r8 
--------------------------------------------------------------------------------
00116c6d: RLP; mov r10, qword ptr [rsp + 0x18] ; mov ecx, dword ptr [rsp + 0x10] ; mov r8, qword ptr [rsp + 0x20] ; cmp rax, r10 ; je 0x116cb3
read: r10 rax rflags 
write: ecx r10 r8 rflags 
--------------------------------------------------------------------------------
00116c95: RLP; mov rax, qword ptr [rsp] ; mov r15d, 0xffffffff ; mov r8, qword ptr [rsp + 0x10] ; mov ecx, dword ptr [rsp + 0x18] ; mov dword ptr [rax], 0xffffffff ; jmp 0x116a94
read: 
write: ecx r15d r8 rax 
--------------------------------------------------------------------------------
00116ce6: RLP; jmp 0x11699c
read: 
write: 
--------------------------------------------------------------------------------
00116d1d: RLP; cmp r15d, -1 ; mov r8, qword ptr [rsp + 0x10] ; jne 0x116cfe
read: r15d rflags 
write: r8 rflags 
--------------------------------------------------------------------------------
00116d92: RLP; cmp rax, 1 ; sbb eax, eax ; or eax, 1 ; test eax, eax ; mov dword ptr [rip + 0x257bdd], eax ; jle 0x116956
read: eax rax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
00116dd7: RLP; lea rcx, [rsp + 0x3c] ; lea rdx, [rip + 0x257b79] ; lea rsi, [rip + 0x1fa9e] ; add rax, 1 ; mov edi, 0xc ; mov qword ptr [rsp + 8], rax ; call 0x118b4c
read: rax rip rsp 
write: edi rax rcx rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00116e01: RLP; mov r13, rax ; lea rax, [rsp + 0x40] ; mov qword ptr [rsp + 0x18], rax ; nop word ptr [rax + rax] ; cmp r13, -1 ; je 0x116f34
read: r13 rax rflags 
write: r13 rax rflags 
--------------------------------------------------------------------------------
00116e3f: RLP; test rax, rax ; je 0x116f34
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00116f57: RLP; cmp eax, -1 ; mov ecx, eax ; je 0x1170bd
read: eax rflags 
write: ecx rflags 
--------------------------------------------------------------------------------
00116fb8: RLP; mov ecx, dword ptr [rsp + 0x24] ; test r15d, r15d ; js 0x116ebf
read: r15d rflags 
write: ecx rflags 
--------------------------------------------------------------------------------
00117010: RLP; jmp 0x116eef
read: 
write: 
--------------------------------------------------------------------------------
0011703a: RLP; test rax, rax ; mov ecx, dword ptr [rsp + 0x24] ; mov r11, qword ptr [rsp + 0x28] ; je 0x11709c
read: rax rflags 
write: ecx r11 rflags 
--------------------------------------------------------------------------------
00117083: RLP; mov r15d, dword ptr [rsp + 0x48] ; mov ecx, dword ptr [rsp + 0x24] ; movsxd rdx, r15d ; shl rdx, 2 ; cmp rax, rdx ; je 0x116fbc
read: r15d rax rdx rflags 
write: ecx r15d rdx rflags 
--------------------------------------------------------------------------------
00117120: RLP; jmp 0x116f27
read: 
write: 
--------------------------------------------------------------------------------
00117191: RLP; test r13, r13 ; mov rbx, rax ; je 0x1177ac
read: r13 rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
001171a9: RLP; mov r14, rax ; lea rax, [r14 + r12 + 2] ; cmp rax, 0x1000 ; mov qword ptr [rbp - 0x98], rax ; ja 0x1178a5
read: rax rflags 
write: r14 rax rflags 
--------------------------------------------------------------------------------
00117234: RLP; mov rdx, qword ptr [rbp - 0x88] ; lea rdi, [rax + 1] ; mov byte ptr [rax], 0x2f ; mov rsi, r14 ; call 0x8e3dc
read: r14 rip rsp 
write: rdi rdx rsi rsp 
--------------------------------------------------------------------------------
0011724e: RLP; mov rdi, qword ptr [rbp - 0xb0] ; lea rax, [rbp - 0x70] ; mov dword ptr [rbp - 0x88], 0 ; mov qword ptr [rbp - 0xa8], rax ; mov rax, rdi ; neg rax ; mov qword ptr [rbp - 0xb8], rax ; and qword ptr [rbp - 0xb8], 7 ; mov rax, rdi ; add rax, qword ptr [rbp - 0xb8] ; mov qword ptr [rbp - 0xd0], rax ; nop dword ptr [rax] ; cmp rbx, -1 ; je 0x11735c
read: rax rbx rdi rflags 
write: rax rdi rflags 
--------------------------------------------------------------------------------
001172c4: RLP; test rax, rax ; je 0x11735c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00117386: RLP; cmp eax, -1 ; mov r14d, eax ; je 0x117794
read: eax rflags 
write: r14d rflags 
--------------------------------------------------------------------------------
00117415: RLP; mov r10d, dword ptr [rbp - 0x88] ; mov edx, dword ptr [rbp - 0x98] ; test r10d, r10d ; jne 0x11733c
read: r10d rflags 
write: edx r10d rflags 
--------------------------------------------------------------------------------
0011743d: RLP; mov edx, dword ptr [rbp - 0x88] ; mov eax, edx ; mov edx, dword ptr [rbp - 0xa0] ; test edx, edx ; jne 0x11734c
read: edx rflags 
write: eax edx rflags 
--------------------------------------------------------------------------------
00117469: RLP; mov eax, dword ptr [rbp - 0x88] ; lea rsp, [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: rsp 
write: eax r12 r13 r14 r15 rbp rbx rsp 
--------------------------------------------------------------------------------
00117577: RLP; mov r10d, dword ptr [rbp - 0xe4] ; mov r9, qword ptr [rbp - 0xe0] ; mov r8, qword ptr [rbp - 0xd8] ; movsxd rsi, dword ptr [rbp - 0x60] ; test esi, esi ; jle 0x1177b4
read: esi rflags 
write: r10d r8 r9 rflags rsi 
--------------------------------------------------------------------------------
0011760e: RLP; movsxd rax, dword ptr [rbp - 0x68] ; mov rdx, qword ptr [r15] ; mov r10d, dword ptr [rbp - 0xc0] ; cmp byte ptr [rdx + rax - 1], 0 ; je 0x11763c
read: rflags 
write: r10d rax rdx rflags 
--------------------------------------------------------------------------------
00117744: RLP; mov rcx, qword ptr [rbp - 0xc0] ; mov edx, 0xffffffff ; mov r8, qword ptr [rbp - 0xc8] ; mov r9, qword ptr [rbp - 0xd8] ; mov r10d, dword ptr [rbp - 0xe0] ; cmp rax, rcx ; jne 0x1173d4
read: rax rcx rflags 
write: edx r10d r8 r9 rcx rflags 
--------------------------------------------------------------------------------
001177e1: RLP; mov rcx, qword ptr [rbp - 0xc0] ; mov edx, 0xffffffff ; mov r10d, dword ptr [rbp - 0xc8] ; cmp rax, rcx ; jne 0x1173d4
read: rax rcx rflags 
write: edx r10d rcx rflags 
--------------------------------------------------------------------------------
0011783a: RLP; nop ; jmp 0x117294
read: 
write: 
--------------------------------------------------------------------------------
0011787d: RLP; mov edx, dword ptr [rbp - 0xc8] ; mov r10d, dword ptr [rbp - 0xc0] ; jmp 0x11784b
read: 
write: edx r10d 
--------------------------------------------------------------------------------
001178b1: RLP; test eax, eax ; jne 0x1171c4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001178c9: RLP; test rax, rax ; mov qword ptr [rbp - 0x90], rax ; je 0x117a06
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00117941: RLP; test eax, eax ; mov rcx, qword ptr [rbp - 0xc0] ; mov r8, qword ptr [rbp - 0xc8] ; mov r9, qword ptr [rbp - 0xd8] ; mov r11, qword ptr [rbp - 0xe0] ; mov r10d, dword ptr [rbp - 0xe4] ; jne 0x1176e1
read: eax rflags 
write: r10d r11 r8 r9 rcx rflags 
--------------------------------------------------------------------------------
0011799b: RLP; test rax, rax ; mov r12, rax ; mov r11, qword ptr [rbp - 0xc0] ; mov rcx, qword ptr [rbp - 0xc8] ; mov r8, qword ptr [rbp - 0xd8] ; mov r9, qword ptr [rbp - 0xe0] ; mov r10d, dword ptr [rbp - 0xe4] ; jne 0x117708
read: rax rflags 
write: r10d r11 r12 r8 r9 rcx rflags 
--------------------------------------------------------------------------------
00117a49: RLP; mov qword ptr [rsp + 8], r15 ; mov qword ptr [rsp], r14 ; mov r9, r13 ; mov r8, r12 ; mov rdx, rbp ; mov rdi, rbx ; mov ecx, 0x10 ; mov rsi, rax ; call 0x11713c
read: r12 r13 r14 r15 rax rbp rbx rip rsp 
write: ecx r8 r9 rdi rdx rsi rsp 
--------------------------------------------------------------------------------
00117a6f: RLP; add rsp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00117acd: RLP; sub rbx, rax ; mov qword ptr [rsp + 8], r15 ; mov qword ptr [rsp], r14 ; mov rsi, rbx ; mov r9, r13 ; mov r8, r12 ; mov rdx, rbp ; mov ecx, 0x11 ; mov rdi, rax ; call 0x11713c
read: r12 r13 r14 r15 rax rbp rbx rip rsp 
write: ecx r8 r9 rbx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00117af6: RLP; add rsp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
00117b39: RLP; xor eax, eax ; add rsp, 8 ; ret
read: eax rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
00117b74: RLP; lea rdx, [rip + 0x2565a1] ; lea rsi, [rip + 0x1f93e] ; add rax, 1 ; mov rcx, r14 ; mov edi, 0x15 ; mov qword ptr [rsp + 8], rax ; call 0x118b4c
read: r14 rax rip rsp 
write: edi rax rcx rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00117b9c: RLP; mov r13, rax ; lea rax, [rsp + 0x40] ; mov qword ptr [rsp + 0x10], rax ; cmp r13, -1 ; je 0x117c8a
read: r13 rax rflags 
write: r13 rax rflags 
--------------------------------------------------------------------------------
00117bd2: RLP; test rax, rax ; je 0x117c8a
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00117c4c: RLP; test eax, eax ; je 0x117d0c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00117cab: RLP; cmp eax, -1 ; mov r10d, eax ; je 0x117db5
read: eax rflags 
write: r10d rflags 
--------------------------------------------------------------------------------
00117d30: RLP; jmp 0x117c79
read: 
write: 
--------------------------------------------------------------------------------
00117d52: RLP; test rax, rax ; mov r15d, 0xffffffff ; mov r10d, dword ptr [rsp + 0x1c] ; je 0x117c2d
read: rax rflags 
write: r10d r15d rflags 
--------------------------------------------------------------------------------
00117d87: RLP; mov r11, qword ptr [rsp + 0x28] ; mov r10d, dword ptr [rsp + 0x1c] ; mov rcx, qword ptr [rsp + 0x20] ; cmp rax, r11 ; je 0x117cd2
read: r11 rax rflags 
write: r10d r11 rcx rflags 
--------------------------------------------------------------------------------
00117dab: RLP; mov r10d, dword ptr [rsp + 0x1c] ; jmp 0x117c2d
read: 
write: r10d 
--------------------------------------------------------------------------------
00117e06: RLP; test rbx, rbx ; mov qword ptr [rbp - 0x58], rax ; je 0x11810c
read: rax rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
00117e1f: RLP; test r12, r12 ; mov r13, rax ; je 0x11811c
read: r12 rax rflags 
write: r13 rflags 
--------------------------------------------------------------------------------
00117e37: RLP; mov rdx, rax ; test r14, r14 ; je 0x1180fc
read: r14 rax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
00117e53: RLP; mov rdx, qword ptr [rbp - 0x60] ; mov rcx, qword ptr [rbp - 0x58] ; lea r13, [r13 + rcx + 7] ; add r13, rdx ; add r13, rax ; cmp r13, 0x1000 ; ja 0x118132
read: r13 rax rdx rflags 
write: r13 rcx rdx rflags 
--------------------------------------------------------------------------------
00117e9a: RLP; test rbx, rbx ; je 0x1180a4
read: rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
00117eb7: RLP; test r12, r12 ; lea rdi, [rax + 1] ; je 0x1180b5
read: r12 rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
00117ed7: RLP; test r14, r14 ; lea rdx, [rax + 1] ; je 0x1180c5
read: r14 rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
00117ef7: RLP; lea r14, [rax + 1] ; lea rax, [rbp - 0x44] ; lea rdx, [rip + 0x256216] ; lea rsi, [rip + 0x1f5b3] ; mov edi, 0x15 ; sub r14, r13 ; xor r12d, r12d ; mov rcx, rax ; mov qword ptr [rbp - 0x58], rax ; call 0x118b4c
read: r12d r13 r14 rax rip rsp 
write: edi r12d r14 rax rcx rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00117f28: RLP; mov r15, rax ; lea rax, [rbp - 0x40] ; mov qword ptr [rbp - 0x60], rax ; cmp r15, -1 ; je 0x117fc6
read: r15 rax rflags 
write: r15 rax rflags 
--------------------------------------------------------------------------------
00117f5a: RLP; test rax, rax ; je 0x117fc6
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00117f91: RLP; test eax, eax ; je 0x11803c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00117fe4: RLP; cmp eax, -1 ; je 0x11808c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00118031: RLP; test eax, eax ; jne 0x117f99
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00118080: RLP; jmp 0x117fba
read: 
write: 
--------------------------------------------------------------------------------
001180e3: RLP; mov eax, dword ptr [rbp - 0x58] ; lea rsp, [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: rsp 
write: eax r12 r13 r14 r15 rbp rbx rsp 
--------------------------------------------------------------------------------
0011813e: RLP; test eax, eax ; jne 0x117e73
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00118152: RLP; test rax, rax ; mov r13, rax ; je 0x118163
read: rax rflags 
write: r13 rflags 
--------------------------------------------------------------------------------
001181b1: RLP; cmp eax, -1 ; mov rbp, rsp ; je 0x1181cc
read: eax rflags rsp 
write: rbp rflags 
--------------------------------------------------------------------------------
001181f7: RLP; mov rax, qword ptr [rsp + 0x18] ; mov ecx, 0x3e8 ; imul rsi, qword ptr [rsp + 0x10], 0x3e8 ; add rax, 0x1f4 ; cqo ; idiv rcx ; add rsi, rbx ; lea r14, [rsi + rax] ; jmp 0x118266
read: rax rbx rcx rdx rsi 
write: ecx r14 rax rdx rflags rsi 
--------------------------------------------------------------------------------
00118233: RLP; mov rax, qword ptr [rsp + 0x18] ; lea rcx, [rax + 0x1f4] ; mov rax, rcx ; imul r13 ; mov rax, rcx ; sar rax, 0x3f ; sar rdx, 7 ; sub rax, rdx ; mov rdx, qword ptr [rsp + 0x10] ; imul rdx, rdx, -0x3e8 ; add rax, rdx ; lea rbx, [rax + r14] ; mov edx, ebx ; mov esi, 1 ; mov rdi, rbp
read: ebx r13 rax rbp rcx rdx 
write: edx esi rax rbx rcx rdi rdx rflags 
--------------------------------------------------------------------------------
00118279: RLP; cmp eax, -1 ; je 0x11821e
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001182c6: RLP; test eax, eax ; mov ebx, eax ; js 0x11848c
read: eax rflags 
write: ebx rflags 
--------------------------------------------------------------------------------
00118344: RLP; test eax, eax ; lea r12, [r13*4] ; js 0x1183dc
read: eax rflags 
write: r12 rflags 
--------------------------------------------------------------------------------
00118395: RLP; lea rax, [rbp - 0xd0] ; mov r13, rax ; mov rdx, qword ptr [rbp - 0xd8] ; mov ecx, 0x4000 ; mov rsi, r12 ; mov edi, ebx ; call 0xe463c
read: ebx r12 rax rip rsp 
write: ecx edi r13 rax rdx rsi rsp 
--------------------------------------------------------------------------------
001183b9: RLP; cmp rax, -1 ; je 0x118404
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00118430: RLP; test r14b, r14b ; je 0x118496
read: r14b rflags 
write: rflags 
--------------------------------------------------------------------------------
0011847a: RLP; test eax, eax ; jle 0x1183ed
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001184f6: RLP; cmp rax, -1 ; mov rbx, rax ; je 0x11851c
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
0011855b: RLP; test eax, eax ; jg 0x1184e4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001185b1: RLP; cmp rax, -1 ; mov rbx, rax ; je 0x11858c
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
0011862f: RLP; mov r8, qword ptr [rbp - 0x38] ; mov rax, qword ptr [r15 + 8] ; cmp rax, r13 ; jbe 0x11867c
read: r13 rax rflags 
write: r8 rax rflags 
--------------------------------------------------------------------------------
0011865c: RLP; cmp rax, -1 ; mov r13, rax ; mov r8, qword ptr [rbp - 0x38] ; je 0x118689
read: rax rflags 
write: r13 r8 rflags 
--------------------------------------------------------------------------------
001186fd: RLP; test eax, eax ; mov r8, qword ptr [rbp - 0x38] ; jg 0x118646
read: eax rflags 
write: r8 rflags 
--------------------------------------------------------------------------------
0011872b: RLP; mov rdi, rbx ; call 0x1f46c
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
00118737: RLP; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
0011878f: RLP; mov r12, qword ptr [rip + 0x2506ce] ; mov r14, rax ; lea rax, [rax + 1] ; mov edi, ebx ; mov rsi, r13 ; mov rcx, rax ; mov qword ptr [rbp - 0x158], rax ; mov eax, dword ptr fs:[r12] ; mov rdx, rcx ; mov dword ptr [rbp - 0x15c], eax ; lea rax, [r14 + 0x10] ; and rax, 0xfffffffffffffff0 ; sub rsp, rax ; mov qword ptr [rbp - 0x168], rsp ; call 0x11828c
read: eax ebx r13 rax rcx rip rsp 
write: eax edi r12 r14 rax rcx rdx rflags rsi rsp 
--------------------------------------------------------------------------------
001187d5: RLP; test eax, eax ; mov ebx, eax ; mov rdx, -1 ; js 0x1188b3
read: eax rflags 
write: ebx rdx rflags 
--------------------------------------------------------------------------------
0011888f: RLP; test eax, eax ; jg 0x1188f4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001188ac: RLP; mov rdx, qword ptr [rbp - 0x158] ; mov rdi, qword ptr [r15] ; mov eax, dword ptr [rbp - 0x15c] ; test rdi, rdi ; mov dword ptr fs:[r12], eax ; mov qword ptr [r15], rdx ; je 0x1188d4
read: eax rdi rdx rflags 
write: eax rdi rdx rflags 
--------------------------------------------------------------------------------
00118907: RLP; cmp rax, -1 ; je 0x1188ec
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00118960: RLP; test eax, eax ; jne 0x1189cb
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011897c: RLP; test eax, eax ; jne 0x1189cb
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001189ac: RLP; mov rdx, qword ptr [rbp - 0x158] ; jmp 0x1188d4
read: 
write: rdx 
--------------------------------------------------------------------------------
001189cb: RLP; mov rdx, -1 ; nop word ptr cs:[rax + rax] ; mov edi, r13d ; mov qword ptr [rbp - 0x158], rdx ; call 0xd711c
read: r13d rdx rip rsp 
write: edi rdx rsp 
--------------------------------------------------------------------------------
001189ef: RLP; mov rdx, qword ptr [rbp - 0x158] ; jmp 0x11889a
read: 
write: rdx 
--------------------------------------------------------------------------------
00118a1b: RLP; test eax, eax ; jne 0x1189cb
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00118a41: RLP; cmp rax, -1 ; mov rcx, rax ; je 0x1189cb
read: rax rflags 
write: rcx rflags 
--------------------------------------------------------------------------------
00118ac3: RLP; test rax, rax ; mov rdx, rax ; mov rcx, qword ptr [rbp - 0x158] ; je 0x1189b8
read: rax rflags 
write: rcx rdx rflags 
--------------------------------------------------------------------------------
00118b1f: RLP; mov rcx, qword ptr [rbp - 0x158] ; add r14, 0x12c ; cmp r14, rax ; jb 0x118b3b
read: r14 rax rflags 
write: r14 rcx rflags 
--------------------------------------------------------------------------------
00118bf4: RLP; cmp rax, -1 ; mov rbx, rax ; je 0x118c51
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
00118c38: RLP; mov rsi, qword ptr [rsp + 8] ; add r14, 0x12c ; cmp r14, rax ; jb 0x118be4
read: r14 rax rflags 
write: r14 rflags rsi 
--------------------------------------------------------------------------------
00118c9e: RLP; mov rsi, qword ptr [rbp] ; xor edx, edx ; mov r8, qword ptr [rbp + 0x20] ; div dword ptr [rsi + 0x28] ; mov rax, r8 ; mov edx, edx ; mov ebx, dword ptr [rsi + rdx*4 + 0x78] ; movabs rdx, 0xcccccccccccccccd ; mul rdx ; shr rdx, 5 ; cmp ebx, -1 ; je 0x118dec
read: eax ebx edx r8 rax rdx rflags 
write: eax ebx edx r8 rax rdx rflags rsi 
--------------------------------------------------------------------------------
00118d95: RLP; test eax, eax ; mov r10, qword ptr [rsp + 0x18] ; mov r8, qword ptr [rsp + 0x20] ; mov rcx, qword ptr [rsp + 0x28] ; jne 0x118cfc
read: eax rflags 
write: r10 r8 rcx rflags 
--------------------------------------------------------------------------------
00118e4c: RLP; test eax, eax ; mov ebx, eax ; js 0x118ea7
read: eax rflags 
write: ebx rflags 
--------------------------------------------------------------------------------
00118e62: RLP; test eax, eax ; jg 0x118e74
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00118e85: RLP; cmp rax, -1 ; je 0x118e6c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00118ed4: RLP; add rsp, 8 ; sar eax, 0x1f ; ret
read: eax rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
00118fe4: RLP; test eax, eax ; jne 0x11908c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00118ff5: RLP; lea rsi, [rbx + 5] ; lea rdi, [rsp + 0x18] ; mov edx, 0x20 ; lea rbp, [rsp + 0x10] ; call 0x8740c
read: rip rsp 
write: edx rbp rdi rsi rsp 
--------------------------------------------------------------------------------
00119011: RLP; lea rdx, [rsp + 8] ; lea rsi, [rsp + 0x190] ; mov rdi, rbp ; call 0x119c3c
read: rbp rip rsp 
write: rdi rdx rsi rsp 
--------------------------------------------------------------------------------
0011902a: RLP; test eax, eax ; js 0x119074
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00119053: RLP; mov byte ptr [rip + 0x255102], 0 ; call 0x1199cc
read: rip rsp 
write: rsp 
--------------------------------------------------------------------------------
00119063: RLP; add rsp, 0x518 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
read: rbx rsp 
write: rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
001190c9: RLP; test eax, eax ; js 0x1190ec
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001190f5: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00119130: RLP; test eax, eax ; mov ebx, eax ; mov ebp, eax ; je 0x11914c
read: eax rflags 
write: ebp ebx rflags 
--------------------------------------------------------------------------------
00119164: RLP; mov esi, 1 ; mov eax, ebx ; cmp dword ptr [rip + 0x2555fe], 0 ; je 0x119180
read: ebx rflags 
write: eax esi rflags 
--------------------------------------------------------------------------------
001191a0: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x251576] ; call qword ptr [rax]
read: rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
001191b4: RLP; mov rax, qword ptr [rip + 0x251569] ; lea rdx, [rsp + 8] ; lea rsi, [rsp + 0x190] ; lea rdi, [rsp + 0x10] ; call qword ptr [rax + 0x18]
read: rsp 
write: rax rdi rdx rsi rsp 
--------------------------------------------------------------------------------
001191d4: RLP; test eax, eax ; mov ebp, eax ; js 0x119274
read: eax rflags 
write: ebp rflags 
--------------------------------------------------------------------------------
001191ec: RLP; lea rax, [rip + 0x24d8a9] ; mov qword ptr [rip + 0x25152a], rax ; cmp dword ptr [rip + 0x25556f], 0 ; je 0x11920e
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
0011922d: RLP; add rsp, 0x80 ; test ebp, ebp ; jne 0x119138
read: ebp rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00119251: RLP; lea rdx, [rax + 1] ; cmp rdx, r13 ; jbe 0x119294
read: r13 rdx rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
001192a3: RLP; jmp 0x119138
read: 
write: 
--------------------------------------------------------------------------------
001192e3: RLP; cmp eax, -1 ; mov r12d, eax ; je 0x119494
read: eax rflags 
write: r12d rflags 
--------------------------------------------------------------------------------
00119321: RLP; movsxd rdx, eax ; cmp rdx, -1 ; je 0x1192fc
read: eax rdx rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
00119367: RLP; mov r12, rax ; mov rax, qword ptr [rbp - 0x80] ; cmp rax, rbx ; je 0x119494
read: rax rbx rflags 
write: r12 rax rflags 
--------------------------------------------------------------------------------
00119410: RLP; cmp eax, 0x22 ; je 0x1193ac
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00119435: RLP; lea rdx, [rax + 1] ; cmp rdx, qword ptr [rbp - 0x90] ; jbe 0x1194b6
read: rdx rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
00119479: RLP; mov eax, dword ptr [rbp - 0x84] ; lea rsp, [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: rsp 
write: eax r12 r13 r14 r15 rbp rbx rsp 
--------------------------------------------------------------------------------
001194c9: RLP; xor edx, edx ; jmp 0x11945c
read: edx 
write: edx rflags 
--------------------------------------------------------------------------------
001194e0: RLP; test eax, eax ; mov r8, qword ptr [rbp - 0xa0] ; jne 0x1193bd
read: eax rflags 
write: r8 rflags 
--------------------------------------------------------------------------------
0011950f: RLP; test rax, rax ; mov r8, qword ptr [rbp - 0xa0] ; je 0x119527
read: rax rflags 
write: r8 rflags 
--------------------------------------------------------------------------------
00119555: RLP; test eax, eax ; js 0x119564
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00119573: RLP; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
001195b2: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
001195ee: RLP; test eax, eax ; js 0x11961c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00119609: RLP; test rax, rax ; mov qword ptr [rip + 0x2512a9], rax ; je 0x11961c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011963e: RLP; test eax, eax ; je 0x119650
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00119676: RLP; test eax, eax ; je 0x1196a4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00119698: RLP; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
001196d7: RLP; test eax, eax ; je 0x119704
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
001196fc: RLP; pop rbx ; pop rbp ; pop r12 ; ret
read: rsp 
write: r12 rbp rbx rsp 
--------------------------------------------------------------------------------
00119737: RLP; test eax, eax ; je 0x119764
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011975c: RLP; pop rbx ; pop rbp ; pop r12 ; ret
read: rsp 
write: r12 rbp rbx rsp 
--------------------------------------------------------------------------------
0011978e: RLP; xor edx, edx ; test eax, eax ; je 0x1197b2
read: eax edx rflags 
write: edx rflags 
--------------------------------------------------------------------------------
001197af: RLP; mov rdx, rax ; mov rax, rdx ; pop rbx ; ret
read: rax rdx rsp 
write: rax rbx rdx rsp 
--------------------------------------------------------------------------------
00119810: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x250f06] ; call qword ptr [rax]
read: rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
00119824: RLP; cmp dword ptr [rip + 0x254f45], 0 ; je 0x119838
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
00119857: RLP; add rsp, 0x80 ; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
001198b6: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x250e60] ; mov rsi, r9 ; mov rdi, r8 ; call qword ptr [rax + 8]
read: r8 r9 rsp 
write: rax rdi rflags rsi rsp 
--------------------------------------------------------------------------------
001198d1: RLP; mov edx, eax ; cmp dword ptr [rip + 0x254e96], 0 ; je 0x1198e7
read: eax rflags 
write: edx rflags 
--------------------------------------------------------------------------------
00119906: RLP; add rsp, 0x80 ; mov eax, edx ; add rsp, 8 ; ret
read: edx rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
00119963: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x250db3] ; mov rdi, rdx ; call qword ptr [rax + 0x20]
read: rdx rsp 
write: rax rdi rflags rsp 
--------------------------------------------------------------------------------
0011997b: RLP; mov rdx, rax ; cmp dword ptr [rip + 0x254deb], 0 ; je 0x119992
read: rax rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
001199b1: RLP; add rsp, 0x80 ; mov rax, rdx ; add rsp, 8 ; ret
read: rdx rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
00119a10: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x250d06] ; call qword ptr [rax + 0x28]
read: rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
00119a25: RLP; lea rax, [rip + 0x24d070] ; mov qword ptr [rip + 0x250cf1], rax ; cmp dword ptr [rip + 0x254d36], 0 ; je 0x119a47
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
00119a66: RLP; add rsp, 0x80 ; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
00119aa5: RLP; test eax, eax ; js 0x119adc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00119aca: RLP; test rax, rax ; mov qword ptr [rip + 0x250df0], rax ; je 0x119adc
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00119b15: RLP; test eax, eax ; js 0x119b4c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00119b3a: RLP; test rax, rax ; mov qword ptr [rip + 0x250d88], rax ; je 0x119b4c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00119bcf: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x250b47] ; mov rsi, r10 ; mov rdi, r9 ; call qword ptr [rax + 0x10]
read: r10 r9 rsp 
write: rax rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00119bea: RLP; mov edx, eax ; cmp dword ptr [rip + 0x254b7d], 0 ; je 0x119c00
read: eax rflags 
write: edx rflags 
--------------------------------------------------------------------------------
00119c1f: RLP; add rsp, 0x80 ; mov eax, edx ; add rsp, 8 ; ret
read: edx rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
00119c86: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x250a90] ; mov rsi, r10 ; mov rdi, r9 ; call qword ptr [rax + 0x18]
read: r10 r9 rsp 
write: rax rdi rflags rsi rsp 
--------------------------------------------------------------------------------
00119ca1: RLP; mov edx, eax ; cmp dword ptr [rip + 0x254ac6], 0 ; je 0x119cb7
read: eax rflags 
write: edx rflags 
--------------------------------------------------------------------------------
00119cd6: RLP; add rsp, 0x80 ; mov eax, edx ; add rsp, 8 ; ret
read: edx rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
00119d26: RLP; test eax, eax ; mov ebx, eax ; js 0x119f0c
read: eax rflags 
write: ebx rflags 
--------------------------------------------------------------------------------
00119d48: RLP; lea rsi, [rsp + 0x30] ; mov r13d, eax ; lea rax, [rip - 0x6b] ; mov ecx, 0x10 ; mov dword ptr [rsp + 0xb8], 0 ; mov r12d, 0xffffffff ; lea rdx, [rsi + 8] ; mov qword ptr [rsp + 0x30], rax ; xor eax, eax ; mov rdi, rdx ; mov rdx, rbp ; rep stosq qword ptr [rdi], rax ; mov edi, 0xe ; call 0x3617c
read: eax rax rbp rcx rdi rdx rflags rip rsp 
write: eax ecx edi r12d r13d rax rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
00119d8f: RLP; mov edi, 0xa ; call 0xb2b3c
read: rip rsp 
write: edi rsp 
--------------------------------------------------------------------------------
00119d9d: RLP; mov edx, 1 ; mov qword ptr [rsp + 0x10], 0 ; xor eax, eax ; mov word ptr [rsp + 0x10], dx ; mov esi, 7 ; mov rdx, r15 ; mov edi, ebx ; mov qword ptr [rsp + 0x18], 0 ; mov qword ptr [rsp + 0x20], 0 ; mov qword ptr [rsp + 0x28], 0 ; call 0xd6efc
read: dx eax ebx r15 rip rsp 
write: eax edi edx esi rdx rflags rsp 
--------------------------------------------------------------------------------
00119de0: RLP; test eax, eax ; js 0x119e74
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00119dfa: RLP; movabs rdx, 0xaaaaaaaaaaaaaaab ; mov r14, rax ; mul rdx ; shr rdx, 8 ; lea rax, [rdx + rdx*2] ; mov rdx, r14 ; shl rax, 7 ; sub rdx, rax ; jne 0x119ebc
read: r14 rax rdx rflags 
write: r14 rax rdx rflags 
--------------------------------------------------------------------------------
00119e3a: RLP; cmp eax, 0x180 ; je 0x119e55
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
00119e55: RLP; mov eax, 2 ; mov rdx, r15 ; mov esi, 7 ; mov word ptr [rsp + 0x10], ax ; mov edi, ebx ; xor eax, eax ; call 0xd6efc
read: ax eax ebx r15 rip rsp 
write: eax edi esi rdx rflags rsp 
--------------------------------------------------------------------------------
00119e74: RLP; xor edi, edi ; call 0xb2b3c
read: edi rip rsp 
write: edi rflags rsp 
--------------------------------------------------------------------------------
00119e7f: RLP; xor edx, edx ; mov rsi, rbp ; mov edi, 0xe ; call 0x3617c
read: edx rbp rip rsp 
write: edi edx rflags rsi rsp 
--------------------------------------------------------------------------------
00119e92: RLP; test r13d, r13d ; jne 0x119ef4
read: r13d rflags 
write: rflags 
--------------------------------------------------------------------------------
00119ecd: RLP; xor esi, esi ; mov edx, 2 ; mov edi, ebx ; call 0xe35bc
read: ebx esi rip rsp 
write: edi edx esi rflags rsp 
--------------------------------------------------------------------------------
00119edf: RLP; test rax, rax ; jns 0x119e22
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
00119f00: RLP; jmp 0x119e97
read: 
write: 
--------------------------------------------------------------------------------
00119f3b: RLP; mov ecx, 0xffffffff ; mov qword ptr [rip + 0x2543b1], 0 ; mov eax, 1 ; mov word ptr [rip + 0x254225], cx ; add rsp, 8 ; ret
read: cx rsp 
write: eax ecx rflags rsp 
--------------------------------------------------------------------------------
00119fe9: RLP; cmp eax, -1 ; mov dword ptr [rip + 0x24f2fa], eax ; je 0x11a094
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011a016: RLP; test eax, eax ; lea rdi, [rip + 0x1d86f] ; je 0x119fd2
read: eax rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
0011a046: RLP; test eax, eax ; lea rdi, [rip + 0x1d830] ; je 0x119fd2
read: eax rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
0011a072: RLP; test eax, eax ; lea rdi, [rip + 0x1d822] ; jne 0x119fd2
read: eax rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
0011a0aa: RLP; lea rdi, [rip + 0x1d7fa] ; test eax, eax ; cmove rdi, qword ptr [rip + 0x24fe51] ; jmp 0x119fd2
read: eax rdi rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
0011a10d: RLP; test eax, eax ; je 0x11a13c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011a132: RLP; test eax, eax ; je 0x11a13c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011a193: RLP; lea rsi, [rsp + 0x20] ; mov r14d, eax ; lea rax, [rip - 0x4b6] ; mov ecx, 0x10 ; lea r12, [rsp + 0xc0] ; mov dword ptr [rsp + 0xa8], 0 ; lea rdx, [rsi + 8] ; mov qword ptr [rsp + 0x20], rax ; xor eax, eax ; add rbx, 8 ; mov r13, rsp ; mov rdi, rdx ; mov rdx, r12 ; rep stosq qword ptr [rdi], rax ; mov edi, 0xe
read: eax r12 rax rbx rcx rdi rdx rflags rsp 
write: eax ecx edi r12 r13 r14d rax rbx rcx rdi rdx rflags rsi 
--------------------------------------------------------------------------------
0011a1e3: RLP; mov edi, 0xa ; call 0xb2b3c
read: rip rsp 
write: edi rsp 
--------------------------------------------------------------------------------
0011a1f1: RLP; mov edi, dword ptr [rip + 0x24f0f5] ; xor eax, eax ; mov rdx, rsp ; mov esi, 7 ; mov qword ptr [rsp], 0 ; mov qword ptr [rsp + 8], 0 ; mov qword ptr [rsp + 0x10], 0 ; mov qword ptr [rsp + 0x18], 0 ; call 0xd6efc
read: eax rip rsp 
write: eax edi esi rdx rflags rsp 
--------------------------------------------------------------------------------
0011a22d: RLP; test eax, eax ; js 0x11a39c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011a257: RLP; cmp eax, 0x180 ; jne 0x11a304
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011a295: RLP; test eax, eax ; jne 0x11a23c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011a347: RLP; xor edi, edi ; call 0xb2b3c
read: edi rip rsp 
write: edi rflags rsp 
--------------------------------------------------------------------------------
0011a352: RLP; xor edx, edx ; mov rsi, r12 ; mov edi, 0xe ; call 0x3617c
read: edx r12 rip rsp 
write: edi edx rflags rsi rsp 
--------------------------------------------------------------------------------
0011a365: RLP; test r14d, r14d ; jne 0x11a38c
read: r14d rflags 
write: rflags 
--------------------------------------------------------------------------------
0011a398: RLP; jmp 0x11a36a
read: 
write: 
--------------------------------------------------------------------------------
0011a478: RLP; lea rsi, [rsp + 0x20] ; mov r13d, eax ; lea rax, [rip - 0x79b] ; mov ecx, 0x10 ; mov dword ptr [rsp + 0xa8], 0 ; xor r14d, r14d ; lea rdx, [rsi + 8] ; mov qword ptr [rsp + 0x20], rax ; xor eax, eax ; mov rdi, rdx ; mov rdx, r12 ; rep stosq qword ptr [rdi], rax ; mov edi, 0xe ; call 0x3617c
read: eax r12 r14d rax rcx rdi rdx rflags rip rsp 
write: eax ecx edi r13d r14d rax rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0011a4bc: RLP; mov edi, 0xa ; call 0xb2b3c
read: rip rsp 
write: edi rsp 
--------------------------------------------------------------------------------
0011a4ca: RLP; mov edi, dword ptr [rip + 0x24ee1c] ; xor eax, eax ; mov rdx, rsp ; mov esi, 7 ; mov qword ptr [rsp], 0 ; mov qword ptr [rsp + 8], 0 ; mov qword ptr [rsp + 0x10], 0 ; mov qword ptr [rsp + 0x18], 0 ; call 0xd6efc
read: eax rip rsp 
write: eax edi esi rdx rflags rsp 
--------------------------------------------------------------------------------
0011a506: RLP; test eax, eax ; js 0x11a54c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011a525: RLP; mov edi, dword ptr [rip + 0x24edc1] ; movsxd r14, eax ; mov r9d, 2 ; mov rdx, rsp ; mov esi, 7 ; xor eax, eax ; mov word ptr [rsp], r9w ; call 0xd6efc
read: eax r9w rip rsp 
write: eax edi esi r14 r9d rdx rflags rsp 
--------------------------------------------------------------------------------
0011a54c: RLP; xor edi, edi ; call 0xb2b3c
read: edi rip rsp 
write: edi rflags rsp 
--------------------------------------------------------------------------------
0011a557: RLP; xor edx, edx ; mov rsi, r12 ; mov edi, 0xe ; call 0x3617c
read: edx r12 rip rsp 
write: edi edx rflags rsi rsp 
--------------------------------------------------------------------------------
0011a56a: RLP; test r13d, r13d ; jne 0x11a62c
read: r13d rflags 
write: rflags 
--------------------------------------------------------------------------------
0011a638: RLP; cmp r14, 0x180 ; je 0x11a580
read: r14 rflags 
write: rflags 
--------------------------------------------------------------------------------
0011a765: RLP; lea rsi, [rsp + 0x20] ; mov r14d, eax ; lea rax, [rip - 0xa88] ; mov ecx, 0x10 ; lea r12, [rsp + 0xc0] ; mov dword ptr [rsp + 0xa8], 0 ; lea rdx, [rsi + 8] ; mov qword ptr [rsp + 0x20], rax ; xor eax, eax ; mov r13, rsp ; mov rdi, rdx ; mov rdx, r12 ; rep stosq qword ptr [rdi], rax ; mov edi, 0xe ; call 0x3617c
read: eax r12 rax rcx rdi rdx rflags rip rsp 
write: eax ecx edi r12 r13 r14d rax rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0011a7b1: RLP; mov edi, 0xa ; call 0xb2b3c
read: rip rsp 
write: edi rsp 
--------------------------------------------------------------------------------
0011a7bf: RLP; mov edi, dword ptr [rip + 0x24eb27] ; xor eax, eax ; mov rdx, rsp ; mov esi, 7 ; mov qword ptr [rsp], 0 ; mov qword ptr [rsp + 8], 0 ; mov qword ptr [rsp + 0x10], 0 ; mov qword ptr [rsp + 0x18], 0 ; call 0xd6efc
read: eax rip rsp 
write: eax edi esi rdx rflags rsp 
--------------------------------------------------------------------------------
0011a7fb: RLP; test eax, eax ; js 0x11a92b
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011a84b: RLP; cmp eax, 0x180 ; je 0x11a81c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011a892: RLP; xor edi, edi ; call 0xb2b3c
read: edi rip rsp 
write: edi rflags rsp 
--------------------------------------------------------------------------------
0011a89d: RLP; xor edx, edx ; mov rsi, r12 ; mov edi, 0xe ; call 0x3617c
read: edx r12 rip rsp 
write: edi edx rflags rsi rsp 
--------------------------------------------------------------------------------
0011a8b0: RLP; test r14d, r14d ; je 0x11a8c1
read: r14d rflags 
write: rflags 
--------------------------------------------------------------------------------
0011a8c1: RLP; add rsp, 0x168 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: ebx rsp 
write: eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0011a8f6: RLP; test eax, eax ; jne 0x11a924
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011a911: RLP; cmp eax, 0x180 ; je 0x11a8dc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011a982: RLP; test eax, eax ; js 0x11aa6c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011ab63: RLP; cmp eax, -1 ; mov ebp, eax ; je 0x11b00c
read: eax rflags 
write: ebp rflags 
--------------------------------------------------------------------------------
0011ab84: RLP; xor edx, edx ; mov rsi, rax ; mov edi, ebp ; call 0xe35bc
read: ebp edx rax rip rsp 
write: edi edx rflags rsi rsp 
--------------------------------------------------------------------------------
0011ab94: RLP; cmp rax, -1 ; je 0x11afac
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011abaf: RLP; test eax, eax ; js 0x11afac
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011abf5: RLP; test eax, eax ; jne 0x11ad49
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011ac24: RLP; cmp byte ptr [rsp + 0xc0], 0 ; mov r14d, eax ; jne 0x11b032
read: eax rflags 
write: r14d rflags 
--------------------------------------------------------------------------------
0011ac43: RLP; lea rsi, [rsp + 0x20] ; mov r12d, eax ; lea rax, [rip - 0xf66] ; mov ecx, 0x10 ; mov dword ptr [rsp + 0xa8], 0 ; lea rdx, [rsi + 8] ; mov qword ptr [rsp + 0x20], rax ; xor eax, eax ; mov rdi, rdx ; mov rdx, rbp ; rep stosq qword ptr [rdi], rax ; mov edi, 0xe ; call 0x3617c
read: eax rax rbp rcx rdi rdx rflags rip rsp 
write: eax ecx edi r12d rax rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0011ac84: RLP; mov edi, 0xa ; call 0xb2b3c
read: rip rsp 
write: edi rsp 
--------------------------------------------------------------------------------
0011ac92: RLP; mov edi, dword ptr [rip + 0x24e654] ; mov eax, 1 ; mov qword ptr [rsp], 0 ; mov rdx, rsp ; mov word ptr [rsp], ax ; mov esi, 7 ; xor eax, eax ; mov qword ptr [rsp + 8], 0 ; mov qword ptr [rsp + 0x10], 0 ; mov qword ptr [rsp + 0x18], 0 ; call 0xd6efc
read: ax eax rip rsp 
write: eax edi esi rdx rflags rsp 
--------------------------------------------------------------------------------
0011acd7: RLP; test eax, eax ; js 0x11adec
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011ad0e: RLP; mov edi, dword ptr [rip + 0x24e5d8] ; mov edx, 0x180 ; mov rsi, rbx ; call 0xd6ad9
read: rbx rip rsp 
write: edi edx rsi rsp 
--------------------------------------------------------------------------------
0011ad25: RLP; cmp eax, 0x180 ; je 0x11adf4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011ad5f: RLP; lea rsi, [rsp + 0x20] ; mov r12d, eax ; lea rax, [rip - 0x1082] ; mov ecx, 0x20 ; mov dword ptr [rsp + 0xa8], 0 ; mov r13, rsp ; lea rdx, [rsi + 8] ; mov qword ptr [rsp + 0x20], rax ; mov eax, r14d ; mov rdi, rdx ; mov rdx, rbp ; rep stosd dword ptr [rdi], eax ; mov edi, 0xe ; call 0x3617c
read: eax r14d rax rbp rcx rdi rdx rflags rip rsp 
write: eax ecx edi r12d r13 rax rcx rdi rdx rsi rsp 
--------------------------------------------------------------------------------
0011ada3: RLP; mov edi, 0xa ; call 0xb2b3c
read: rip rsp 
write: edi rsp 
--------------------------------------------------------------------------------
0011adb1: RLP; mov eax, r14d ; mov ecx, 8 ; mov rdi, rsp ; rep stosd dword ptr [rdi], eax ; mov edi, dword ptr [rip + 0x24e528] ; mov rdx, rsp ; mov esi, 7 ; mov word ptr [rsp], 1 ; call 0xd6efc
read: eax r14d rcx rdi rflags rip rsp 
write: eax ecx edi esi rcx rdi rdx rsp 
--------------------------------------------------------------------------------
0011addb: RLP; test eax, eax ; jns 0x11ace8
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011ae21: RLP; xor edi, edi ; call 0xb2b3c
read: edi rip rsp 
write: edi rflags rsp 
--------------------------------------------------------------------------------
0011ae2c: RLP; xor edx, edx ; mov rsi, rbp ; mov edi, 0xe ; call 0x3617c
read: edx rbp rip rsp 
write: edi edx rflags rsi rsp 
--------------------------------------------------------------------------------
0011ae3f: RLP; test r12d, r12d ; jne 0x11ae5c
read: r12d rflags 
write: rflags 
--------------------------------------------------------------------------------
0011ae68: RLP; jmp 0x11ae44
read: 
write: 
--------------------------------------------------------------------------------
0011ae82: RLP; movabs rdx, 0xaaaaaaaaaaaaaaab ; mov rsi, rax ; mov qword ptr [rip + 0x253466], rax ; mul rdx ; shr rdx, 8 ; lea rax, [rdx + rdx*2] ; mov rdx, rsi ; shl rax, 7 ; sub rdx, rax ; jne 0x11afc4
read: rax rdx rflags rsi 
write: rax rdx rflags rsi 
--------------------------------------------------------------------------------
0011aec8: RLP; cmp eax, 0x180 ; je 0x11adf4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011aeeb: RLP; jmp 0x11adff
read: 
write: 
--------------------------------------------------------------------------------
0011af06: RLP; test eax, eax ; lea rdi, [rip + 0x1c97f] ; je 0x11ab53
read: eax rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
0011af36: RLP; test eax, eax ; lea rdi, [rip + 0x1c940] ; je 0x11ab53
read: eax rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
0011af62: RLP; test eax, eax ; lea rdi, [rip + 0x1c932] ; jne 0x11ab53
read: eax rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
0011af92: RLP; lea rdi, [rip + 0x1c912] ; test eax, eax ; cmove rdi, qword ptr [rip + 0x24ef69] ; jmp 0x11ab53
read: eax rdi rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
0011afdd: RLP; mov edi, dword ptr [rip + 0x24e309] ; xor esi, esi ; mov edx, 2 ; call 0xe35bc
read: esi rip rsp 
write: edi edx esi rflags rsp 
--------------------------------------------------------------------------------
0011aff3: RLP; test rax, rax ; jns 0x11aeb1
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011b099: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x24f67d] ; xor ebp, ebp ; call qword ptr [rax + 0x28]
read: ebp rsp 
write: ebp rax rflags rsp 
--------------------------------------------------------------------------------
0011b0b0: RLP; mov r12, qword ptr [rip + 0x24ee55] ; lea rax, [rip + 0x24b9de] ; mov rdi, rbx ; mov qword ptr [rip + 0x24f65c], rax ; mov rsi, r12 ; call 0x83c8c
read: r12 rax rbx rip rsp 
write: r12 rax rdi rsi rsp 
--------------------------------------------------------------------------------
0011b0d4: RLP; test eax, eax ; je 0x11b120
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011b0fa: RLP; test rax, rax ; mov rbx, rax ; je 0x11b181
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
0011b117: RLP; mov qword ptr [rip + 0x24edee], rbx ; xor ebp, ebp ; cmp dword ptr [rip + 0x253649], 0 ; je 0x11b134
read: ebp rbx rflags 
write: ebp rflags 
--------------------------------------------------------------------------------
0011b153: RLP; add rsp, 0x80 ; add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: ebp rsp 
write: eax r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0011b178: RLP; mov qword ptr [rip + 0x24ed8d], r13 ; jmp 0x11b120
read: r13 
write: 
--------------------------------------------------------------------------------
0011b1fe: RLP; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0011b21e: RLP; test eax, eax ; jne 0x11b1af
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011b23e: RLP; test eax, eax ; jne 0x11b1c2
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011b25a: RLP; test eax, eax ; je 0x11b1d8
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011b27a: RLP; test eax, eax ; lea rax, [rip + 0x1c628] ; cmovne rbx, rax ; jmp 0x11b1ee
read: eax rax rbx rflags 
write: rax rbx rflags 
--------------------------------------------------------------------------------
0011b2bb: RLP; cmp eax, -1 ; mov ebx, eax ; je 0x11b35c
read: eax rflags 
write: ebx rflags 
--------------------------------------------------------------------------------
0011b302: RLP; test eax, eax ; jne 0x11b310
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011b323: RLP; test eax, eax ; jne 0x11b331
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011b33c: RLP; mov rax, qword ptr [rip + 0x24db21] ; mov dword ptr [rip + 0x252fbf], 1 ; mov dword ptr fs:[rax], 2 ; mov eax, 0xffffffff ; jmp 0x11b2dc
read: 
write: eax rax 
--------------------------------------------------------------------------------
0011b422: RLP; cmp eax, -1 ; je 0x11b3f4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011b472: RLP; cmp eax, -1 ; je 0x11b47c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011b485: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011b4dd: RLP; test rax, rax ; je 0x11b53c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011b4ff: RLP; test eax, eax ; jne 0x11b59c
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011b518: RLP; test rax, rax ; jne 0x11b5b3
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011b535: RLP; test rax, rax ; jne 0x11b4e2
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011b55b: RLP; xor eax, eax ; mov esi, 1 ; mov edi, r14d ; mov r12d, dword ptr fs:[rbx] ; call 0xd6f3c
read: eax r14d rip rsp 
write: eax edi esi r12d rflags rsp 
--------------------------------------------------------------------------------
0011b572: RLP; cmp eax, -1 ; je 0x11b672
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011b5bc: RLP; cmp dword ptr [rbp - 0x10a4], eax ; mov ebx, eax ; jne 0x11b636
read: eax rflags 
write: ebx rflags 
--------------------------------------------------------------------------------
0011b5f1: RLP; test eax, eax ; js 0x11b652
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011b621: RLP; mov eax, dword ptr [rbp - 0x10f4] ; lea rsp, [rbp - 0x28] ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
read: rsp 
write: eax r12 r13 r14 r15 rbp rbx rsp 
--------------------------------------------------------------------------------
0011b64a: RLP; test eax, eax ; jns 0x11b5cc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011b66d: RLP; sar eax, 0x1f ; jmp 0x11b60a
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
0011b68c: RLP; mov edx, 0x400 ; cmp rax, -1 ; lea rsi, [rbp - 0x10e0] ; cmove rax, rdx ; lea r8, [rbp - 0x10e8] ; lea rdi, [rip + 0x1a333] ; lea rdx, [rax + 0x1e] ; mov rcx, rax ; and rdx, 0xfffffffffffffff0 ; sub rsp, rdx ; lea rdx, [rsp + 0xf] ; and rdx, 0xfffffffffffffff0 ; call 0xb0acc
read: rax rdx rflags rip rsp 
write: edx r8 rax rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0011b6ce: RLP; mov rax, qword ptr [rbp - 0x10e8] ; mov edx, dword ptr [rip + 0x24dc15] ; test rax, rax ; je 0x11b6e9
read: rax rflags 
write: edx rax rflags 
--------------------------------------------------------------------------------
0011b6fb: RLP; mov edx, eax ; jmp 0x11b5db
read: eax 
write: edx 
--------------------------------------------------------------------------------
0011b74d: RLP; test eax, eax ; je 0x11b761
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011b7a3: RLP; test eax, eax ; jne 0x11b7e4
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011b7fc: RLP; test eax, eax ; je 0x11b824
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011b847: RLP; lea rdx, [r15 + 0x15] ; sub rdx, rax ; lea rcx, [rdx + 9] ; cmp rcx, r12 ; jbe 0x11b868
read: r12 rax rcx rdx rflags 
write: rcx rdx rflags 
--------------------------------------------------------------------------------
0011b88f: RLP; mov rdx, r13 ; mov rsi, rbp ; mov edi, 1 ; call 0xd639c
read: r13 rbp rip rsp 
write: edi rdx rsi rsp 
--------------------------------------------------------------------------------
0011b8a3: RLP; test eax, eax ; js 0x11b992
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011b8e4: RLP; test eax, eax ; js 0x11b992
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011b94e: RLP; mov edx, r15d ; cmp rdx, rax ; jae 0x11b8bf
read: r15d rax rdx rflags 
write: edx rflags 
--------------------------------------------------------------------------------
0011ba33: RLP; add rsp, 0x98 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011ba59: RLP; xor edx, edx ; test eax, eax ; lea rax, [rip + 0x2528b8] ; cmove rdx, rax ; add rsp, 8 ; mov rax, rdx ; ret
read: eax edx rax rdx rflags rsp 
write: edx rax rdx rflags rsp 
--------------------------------------------------------------------------------
0011ba92: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011babd: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011badd: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011bafd: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011bb1d: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011bb3d: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011bb5d: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011bb7d: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011bb9d: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011bca3: RLP; mov rax, qword ptr [r12 + 0x900] ; mov ebp, dword ptr [r12 + 8] ; mov r15, qword ptr [rsp + 0x98] ; lea rcx, [rax - 1] ; test rcx, rcx ; jle 0x11be4d
read: rcx rflags 
write: ebp r15 rax rcx rflags 
--------------------------------------------------------------------------------
0011bd6c: RLP; test eax, eax ; jne 0x11be22
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011bdf2: RLP; mov qword ptr [rsp + 0x58], rax ; jmp 0x11bd54
read: rax 
write: 
--------------------------------------------------------------------------------
0011be10: RLP; mov rcx, qword ptr [rsp + 8] ; test eax, eax ; cmovne r14, rcx ; jmp 0x11bd1c
read: eax r14 rcx rflags 
write: r14 rcx rflags 
--------------------------------------------------------------------------------
0011be3a: RLP; mov eax, dword ptr [rsp + 8] ; add rsp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0011be96: RLP; mov rdi, rbp ; call 0x1f42c
read: rbp rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0011bea2: RLP; test rax, rax ; je 0x11c0fc
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011c017: RLP; add rsp, 0x28 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: ebx rsp 
write: eax r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0011c1cd: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011c20e: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011c266: RLP; mov qword ptr [rbx + 0x18], rax ; add rsp, 0x10 ; pop rbx ; ret
read: rax rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
0011c2c9: RLP; mov qword ptr [rbx + 0x10], rax ; add rsp, 0x10 ; pop rbx ; ret
read: rax rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
0011c2f5: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011c333: RLP; test eax, eax ; jne 0x11c354
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011c36d: RLP; mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x38 ; ret
read: rsp 
write: eax rflags rsp 
--------------------------------------------------------------------------------
0011c3b5: RLP; xor edx, edx ; test eax, eax ; cmove rdx, qword ptr [rsp + 0x18] ; mov rax, rdx ; add rsp, 0x28 ; ret
read: eax edx rdx rflags rsp 
write: edx rax rdx rflags rsp 
--------------------------------------------------------------------------------
0011c3cd: RLP; mov rdx, rax ; jmp 0x11c3bf
read: rax 
write: rdx 
--------------------------------------------------------------------------------
0011c40c: RLP; xor edx, edx ; test eax, eax ; jne 0x11c428
read: eax edx rflags 
write: edx rflags 
--------------------------------------------------------------------------------
0011c43f: RLP; mov rdx, rax ; jmp 0x11c428
read: rax 
write: rdx 
--------------------------------------------------------------------------------
0011c473: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011c47f: RLP; jmp 0x11c473
read: 
write: 
--------------------------------------------------------------------------------
0011c4d1: RLP; mov qword ptr [rbx], rax ; add rsp, 0x10 ; pop rbx ; ret
read: rax rsp 
write: rbx rflags rsp 
--------------------------------------------------------------------------------
0011c51b: RLP; test rax, rax ; mov rbx, rax ; mov r8d, dword ptr [rbp - 0x88] ; je 0x11c684
read: rax rflags 
write: r8d rbx rflags 
--------------------------------------------------------------------------------
0011c578: RLP; mov r13, rax ; mov rcx, qword ptr [rbp - 0x78] ; test rcx, rcx ; je 0x11c6dc
read: rax rcx rflags 
write: r13 rcx rflags 
--------------------------------------------------------------------------------
0011c63a: RLP; mov r13, rax ; jmp 0x11c57b
read: rax 
write: r13 
--------------------------------------------------------------------------------
0011c6bc: RLP; mov r8, rax ; mov rax, qword ptr [rbp - 0x78] ; movzx edx, byte ptr [rax + 4] ; and edx, 0xf ; jmp 0x11c5a9
read: edx rax 
write: edx r8 rax rflags 
--------------------------------------------------------------------------------
0011c6ea: RLP; mov r8, rax ; jmp 0x11c5b2
read: rax 
write: r8 
--------------------------------------------------------------------------------
0011c7cc: RLP; cmp qword ptr [rbp - 0x58], rax ; mov r11, qword ptr [rbp - 0xa0] ; je 0x11c7e2
read: rax rflags 
write: r11 rflags 
--------------------------------------------------------------------------------
0011c85a: RLP; mov dword ptr [rbp - 0x88], eax ; xor eax, eax ; xchg dword ptr fs:[0x1c], eax ; cmp eax, 2 ; jne 0x11c88a
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0011c8d7: RLP; jmp 0x11c5f3
read: 
write: 
--------------------------------------------------------------------------------
0011c914: RLP; mov rsi, qword ptr [rbp - 0x70] ; mov qword ptr [rbp - 0x90], rax ; mov rcx, r15 ; mov eax, r14d ; mov rdi, rsi ; repne scasb al, byte ptr [rdi] ; mov rdx, rcx ; not rdx ; lea rax, [rdx + 0x1e] ; and rax, 0xfffffffffffffff0 ; sub rsp, rax ; lea rdi, [rsp + 0x1f] ; and rdi, 0xfffffffffffffff0 ; call 0x8e3dc
read: al r14d r15 rax rcx rdi rdx rflags rip rsi rsp 
write: eax rax rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0011c94d: RLP; cmp byte ptr [rbp - 0x79], 0 ; je 0x11c96d
read: rflags 
write: rflags 
--------------------------------------------------------------------------------
0011c966: RLP; mov rax, qword ptr [rbp - 0x98] ; mov rcx, qword ptr [rbp - 0x90] ; xor edx, edx ; mov rsi, rax ; mov edi, dword ptr [rbp - 0x88] ; call qword ptr [r12 + 0xd8]
read: edx rax rsp 
write: edi edx rax rcx rflags rsi rsp 
--------------------------------------------------------------------------------
0011c98b: RLP; jmp 0x11c893
read: 
write: 
--------------------------------------------------------------------------------
0011ca68: RLP; add rsp, 0x28 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011ca95: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011cb31: RLP; mov rdx, qword ptr [rsp + 0x18] ; test rdx, rdx ; je 0x11cb4c
read: rdx rflags 
write: rdx rflags 
--------------------------------------------------------------------------------
0011cb82: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011cbc1: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011cbe5: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011cc05: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011cc24: RLP; add rsp, 0x18 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011cc44: RLP; add rsp, 0x18 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011cc81: RLP; mov rdi, rbx ; mov qword ptr [rsp + 0x10], rax ; lea r13, [rax + 1] ; call 0xaeb5c
read: rax rbx rip rsp 
write: r13 rdi rsp 
--------------------------------------------------------------------------------
0011cc96: RLP; test rax, rax ; mov rbx, rax ; je 0x11ce8c
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
0011ccc8: RLP; test rax, rax ; je 0x11ce24
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011cd4f: RLP; mov rdx, qword ptr [rsp] ; mov rsi, r15 ; mov edi, 1 ; call 0xd639c
read: r15 rip rsp 
write: edi rdx rsi rsp 
--------------------------------------------------------------------------------
0011cd64: RLP; test eax, eax ; jne 0x11ccbc
read: eax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011cd9c: RLP; mov rax, qword ptr [rip + 0x24c0c1] ; mov ebx, dword ptr [rsp + 0x24] ; mov dword ptr fs:[rax], ebx ; mov rax, qword ptr [rip + 0x24da03] ; jmp 0x11ce40
read: ebx 
write: ebx rax 
--------------------------------------------------------------------------------
0011cdd1: RLP; lea rdi, [r15 + r15] ; mov qword ptr [rip + 0x24f1e0], rdi ; call 0x1f3cc
read: rdi rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0011cde5: RLP; test rax, rax ; mov r15, rax ; mov qword ptr [rip + 0x24d9c2], rax ; mov rcx, qword ptr [rsp + 0x18] ; je 0x11ce74
read: rax rflags 
write: r15 rcx rflags 
--------------------------------------------------------------------------------
0011ce14: RLP; mov rcx, qword ptr [rsp + 0x18] ; mov byte ptr [rax], 0x2f ; jmp 0x11cd3c
read: 
write: rcx 
--------------------------------------------------------------------------------
0011ce30: RLP; mov rax, qword ptr [rip + 0x24c02d] ; mov ebx, dword ptr [rsp + 0x24] ; mov dword ptr fs:[rax], ebx ; xor eax, eax ; add rsp, 0xc8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: eax ebx rsp 
write: eax ebx r12 r13 r14 r15 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0011ce6c: RLP; mov byte ptr [rax], 0x2f ; jmp 0x11ccaf
read: 
write: 
--------------------------------------------------------------------------------
0011ce88: RLP; xor eax, eax ; jmp 0x11ce40
read: eax 
write: eax rflags 
--------------------------------------------------------------------------------
0011ced2: RLP; mov rdi, r15 ; mov qword ptr [rsp], rax ; call 0xaeb5c
read: r15 rax rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0011cee2: RLP; test rax, rax ; mov rbx, rax ; je 0x11d03f
read: rax rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
0011cf20: RLP; test rax, rax ; je 0x11d00c
read: rax rflags 
write: rflags 
--------------------------------------------------------------------------------
0011cf7d: RLP; lea rdx, [rax + 1] ; cmp rdx, qword ptr [rsp + 8] ; mov r8, qword ptr [rsp] ; ja 0x11d053
read: rdx rflags 
write: r8 rdx rflags 
--------------------------------------------------------------------------------
0011cfa1: RLP; mov rdx, qword ptr [rsp + 0x18] ; mov byte ptr [rax], 0 ; mov rsi, r15 ; mov edi, 1 ; call 0xd639c
read: r15 rip rsp 
write: edi rdx rsi rsp 
--------------------------------------------------------------------------------
0011cfba: RLP; test eax, eax ; mov edx, eax ; jne 0x11cf14
read: eax rflags 
write: edx rflags 
--------------------------------------------------------------------------------
0011cff7: RLP; mov rax, qword ptr [rip + 0x24be66] ; mov ebx, dword ptr [rsp + 0x24] ; mov edx, dword ptr [rsp] ; mov dword ptr fs:[rax], ebx ; jmp 0x11d02b
read: ebx 
write: ebx edx rax 
--------------------------------------------------------------------------------
0011d018: RLP; mov rax, qword ptr [rip + 0x24be45] ; mov ebx, dword ptr [rsp + 0x24] ; mov edx, 0x19 ; mov dword ptr fs:[rax], ebx ; add rsp, 0xc8 ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: ebx edx rsp 
write: eax ebx edx r12 r13 r14 r15 rax rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0011d067: RLP; mov rax, qword ptr [rip + 0x24bdf6] ; mov edx, 0x22 ; mov dword ptr fs:[rax], 0x22 ; jmp 0x11d02b
read: 
write: edx rax 
--------------------------------------------------------------------------------
0011d09d: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011d0e2: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011d122: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011d162: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011d1a2: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011d1e2: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011d222: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011d298: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011d2c2: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011d2e2: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011d302: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011d322: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011d342: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011d362: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011d382: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011d3a2: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011d3c2: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011d3e2: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011d402: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011d422: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011d48b: RLP; mov rdi, rbx ; add rdi, qword ptr [r13 + 0x10] ; call rbp
read: rbp rbx rdi rsp 
write: rdi rflags rsp 
--------------------------------------------------------------------------------
0011d498: RLP; mov rdx, qword ptr [r13 + 0x10] ; add r12, 1 ; add rbx, 0x68 ; cmp qword ptr [r13 + 0x18], r12 ; ja 0x11d454
read: r12 rbx rflags 
write: r12 rbx rdx rflags 
--------------------------------------------------------------------------------
0011d4bc: RLP; mov rax, qword ptr [r13 + 0x18] ; lea rdx, [rax + rax*2] ; lea rax, [rax + rdx*4] ; mov rdx, qword ptr [r13 + 0x10] ; lea rax, [rdx + rax*8] ; mov rdi, qword ptr [rax - 0x48] ; call 0x1f46c
read: rip rsp 
write: rax rdi rdx rsp 
--------------------------------------------------------------------------------
0011d4dd: RLP; mov rdi, qword ptr [r13 + 0x10] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0011d4ea: RLP; mov rdi, r13 ; call 0x1f46c
read: r13 rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0011d4f6: RLP; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rsp 
write: r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0011d54b: RLP; mov rdi, qword ptr [rbx + 0x30] ; test rdi, rdi ; je 0x11d56c
read: rdi rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
0011d55d: RLP; jmp 0x11d56c
read: 
write: 
--------------------------------------------------------------------------------
0011d585: RLP; test rbp, rbp ; jne 0x11d569
read: rbp rflags 
write: rflags 
--------------------------------------------------------------------------------
0011d5ad: RLP; call 0x11da3c
read: rip rsp 
write: rsp 
--------------------------------------------------------------------------------
0011d5b6: RLP; mov rdi, qword ptr [rip + 0x250d9f] ; test rdi, rdi ; je 0x11d5d2
read: rdi rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
0011d5d2: RLP; mov rdi, qword ptr [rip + 0x250d93] ; test rdi, rdi ; je 0x11d5e7
read: rdi rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
0011d5e7: RLP; mov rdi, qword ptr [rip + 0x24d30e] ; test rdi, rdi ; je 0x11d603
read: rdi rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
0011d603: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011d635: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011d66a: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011d67d: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011d6a6: RLP; mov rdi, rbx ; call 0x1f46c
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0011d6b2: RLP; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
0011d6db: RLP; mov qword ptr [rip + 0x24d246], 0 ; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011d762: RLP; mov rdi, qword ptr [r12] ; lea rax, [rip + 0x18943] ; cmp rdi, rax ; je 0x11d786
read: rax rdi rflags 
write: rax rdi rflags 
--------------------------------------------------------------------------------
0011d77b: RLP; lea rax, [rip + 0x1892e] ; mov qword ptr [r12], rax ; test r15, r15 ; jne 0x11d7b8
read: r15 rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
0011d7a4: RLP; mov rdi, r15 ; call 0x1f46c
read: r15 rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0011d7b0: RLP; test r14, r14 ; je 0x11d7d4
read: r14 rflags 
write: rflags 
--------------------------------------------------------------------------------
0011d7cf: RLP; jmp 0x11d794
read: 
write: 
--------------------------------------------------------------------------------
0011d807: RLP; lea rax, [rip + 0x188a2] ; mov qword ptr [rip + 0x24c7b7], rax ; call 0x11d83c
read: rax rip rsp 
write: rax rsp 
--------------------------------------------------------------------------------
0011d81e: RLP; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0011d874: RLP; jmp 0x11d882
read: 
write: 
--------------------------------------------------------------------------------
0011d8a3: RLP; mov rdi, qword ptr [r12 + 0x10] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0011d8b1: RLP; cmp ebp, 0xd ; jne 0x11d87c
read: ebp rflags 
write: rflags 
--------------------------------------------------------------------------------
0011d8c2: RLP; test r14, r14 ; je 0x11d8cc
read: r14 rflags 
write: rflags 
--------------------------------------------------------------------------------
0011d90c: RLP; mov rbx, qword ptr [rip + 0x24d129] ; test rbx, rbx ; jne 0x11d91f
read: rbx rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
0011d932: RLP; mov rdi, rbx ; call 0x1f46c
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0011d93e: RLP; test rbp, rbp ; jne 0x11d91c
read: rbp rflags 
write: rflags 
--------------------------------------------------------------------------------
0011d9a5: RLP; mov rdi, qword ptr [rbx + 0x10] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0011d9b2: RLP; mov rdi, rbx ; call 0x1f46c
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0011d9be: RLP; mov rbx, qword ptr [rbp] ; test rbx, rbx ; jne 0x11d98c
read: rbx rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
0011d9e3: RLP; mov rdi, qword ptr [rip + 0x24d172] ; mov rsi, qword ptr [rip + 0x24b5a3] ; call 0xe1a4c
read: rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
0011d9fa: RLP; mov rdi, qword ptr [rip + 0x24d153] ; mov qword ptr [rip + 0x24d150], 0 ; test rdi, rdi ; jne 0x11da1f
read: rdi rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
0011da32: RLP; test rbx, rbx ; jne 0x11da1c
read: rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
0011da71: RLP; mov rdi, qword ptr [rbx] ; mov rbp, qword ptr [rbx + 0x18] ; call 0x1f46c
read: rip rsp 
write: rbp rdi rsp 
--------------------------------------------------------------------------------
0011da81: RLP; mov rdi, rbx ; call 0x1f46c
read: rbx rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0011da8d: RLP; test rbp, rbp ; jne 0x11da5c
read: rbp rflags 
write: rflags 
--------------------------------------------------------------------------------
0011dac9: RLP; xor r12d, r12d ; xor ebp, ebp ; cmp qword ptr [r13 + 0x78], 0 ; jne 0x11dafd
read: ebp r12d rflags 
write: ebp r12d rflags 
--------------------------------------------------------------------------------
0011daef: RLP; add rbp, 1 ; add r12, 0x18 ; cmp qword ptr [r13 + 0x78], rbp ; jbe 0x11db2c
read: r12 rbp rflags 
write: r12 rbp rflags 
--------------------------------------------------------------------------------
0011db10: RLP; mov rdi, qword ptr [rbx + 0x10] ; lea rax, [rdi - 1] ; cmp rax, -3 ; ja 0x11dadc
read: rax rflags 
write: rax rdi rflags 
--------------------------------------------------------------------------------
0011db27: RLP; jmp 0x11dadc
read: 
write: 
--------------------------------------------------------------------------------
0011db39: RLP; mov rdi, qword ptr [r13 + 0x20] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0011db46: RLP; mov eax, dword ptr [r13 + 8] ; test eax, eax ; jne 0x11db7c
read: eax rflags 
write: eax rflags 
--------------------------------------------------------------------------------
0011db5b: RLP; mov rdi, r13 ; call 0x1f46c
read: r13 rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0011db67: RLP; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
read: rsp 
write: r12 r13 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0011db8d: RLP; jmp 0x11db5b
read: 
write: 
--------------------------------------------------------------------------------
0011dbad: RLP; mov rsi, qword ptr [rip + 0x24b3e0] ; mov rdi, qword ptr [rip + 0x24d081] ; call 0xe1a4c
read: rip rsp 
write: rdi rsi rsp 
--------------------------------------------------------------------------------
0011dbc4: RLP; mov qword ptr [rip + 0x24d06d], 0 ; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011dc0f: RLP; mov rdi, rbx ; test rdi, rdi ; jne 0x11dbfd
read: rbx rdi rflags 
write: rdi rflags 
--------------------------------------------------------------------------------
0011dc5b: RLP; test rbx, rbx ; jne 0x11dc4c
read: rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
0011dc80: RLP; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0011dcd1: RLP; mov rax, qword ptr [rip + 0x24da84] ; mov rax, qword ptr [rax + 0xa8] ; test rax, rax ; mov qword ptr [rip + 0x24da73], rax ; jne 0x11dcac
read: rax rflags 
write: rax rflags 
--------------------------------------------------------------------------------
0011dd17: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011dd5f: RLP; cmp rbx, rbp ; jae 0x11dd7b
read: rbp rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
0011dd72: RLP; add rbx, 8 ; cmp rbx, rbp ; jb 0x11dd6c
read: rbp rbx rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
0011dda4: RLP; cmp rbx, rbp ; jb 0x11dd94
read: rbp rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
0011ddea: RLP; test rbx, rbx ; jne 0x11ddd4
read: rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
0011ddff: RLP; mov qword ptr [rip + 0x24dcc2], 0 ; pop rbx ; ret
read: rsp 
write: rbx rsp 
--------------------------------------------------------------------------------
0011de24: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011de57: RLP; mov rdi, qword ptr [rip + 0x24e126] ; lea rax, [rip + 0x14457] ; cmp rdi, rax ; je 0x11de7a
read: rax rdi rflags 
write: rax rdi rflags 
--------------------------------------------------------------------------------
0011de7a: RLP; mov rdi, qword ptr [rip + 0x24e113] ; lea rax, [rip + 0x14574] ; cmp rdi, rax ; je 0x11de9d
read: rax rdi rflags 
write: rax rdi rflags 
--------------------------------------------------------------------------------
0011de9d: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011dec4: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011defa: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011df4c: RLP; add rsp, 0x80 ; lea rsi, [rip + 0x24e922] ; xor eax, eax ; mov ecx, 0x121 ; mov rdx, qword ptr [rip + 0x24e914] ; mov qword ptr [rip + 0x2505e1], 0 ; mov rdi, rsi ; rep stosq qword ptr [rdi], rax ; cmp dword ptr [rip + 0x2507f0], 0 ; je 0x11df8d
read: eax rax rcx rdi rflags rsi rsp 
write: eax ecx rcx rdi rdx rflags rsi rsp 
--------------------------------------------------------------------------------
0011dfac: RLP; add rsp, 0x80 ; test rdx, rdx ; je 0x11dfd4
read: rdx rflags rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011dfce: RLP; test rbx, rbx ; jne 0x11dfbc
read: rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
0011e004: RLP; pop rbp ; mov qword ptr [rip + 0x24f184], 0 ; ret
read: rsp 
write: rbp rsp 
--------------------------------------------------------------------------------
0011e041: RLP; mov qword ptr [rip + 0x24f180], 1 ; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011e07d: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011e0b4: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011e0e8: RLP; mov rbx, qword ptr [r12 + 8] ; test rbx, rbx ; jne 0x11e114
read: rbx rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
0011e10c: RLP; test rbp, rbp ; je 0x11e134
read: rbp rflags 
write: rflags 
--------------------------------------------------------------------------------
0011e12b: RLP; jmp 0x11e0fc
read: 
write: 
--------------------------------------------------------------------------------
0011e140: RLP; pop rbx ; pop rbp ; pop r12 ; ret
read: rsp 
write: r12 rbp rbx rsp 
--------------------------------------------------------------------------------
0011e15d: RLP; mov rdi, qword ptr [rax + 0xb0] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0011e16d: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011e1a5: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011e1d5: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011e205: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011e235: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011e265: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011e292: RLP; test al, al ; je 0x11e2e0
read: al rflags 
write: rflags 
--------------------------------------------------------------------------------
0011e2d5: RLP; mov eax, dword ptr [rsp + 0xc] ; mov qword ptr [rbx], 0 ; add rsp, 0x10 ; pop rbx ; ret
read: rsp 
write: eax rbx rflags rsp 
--------------------------------------------------------------------------------
0011e343: RLP; cmp rbx, rbp ; jne 0x11e334
read: rbp rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
0011e3a8: RLP; test rbx, rbx ; jne 0x11e391
read: rbx rflags 
write: rflags 
--------------------------------------------------------------------------------
0011e410: RLP; mov rdi, qword ptr [r13 + 0xf78] ; mov qword ptr [r13 + 0xf78], 0 ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0011e42b: RLP; add rsp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
read: rsp 
write: r12 r13 r14 r15 rbp rbx rflags rsp 
--------------------------------------------------------------------------------
0011e44c: RLP; jmp 0x11e3bb
read: 
write: 
--------------------------------------------------------------------------------
0011e461: RLP; jmp 0x11e410
read: 
write: 
--------------------------------------------------------------------------------
0011e48f: RLP; jmp 0x11e3da
read: 
write: 
--------------------------------------------------------------------------------
0011e4f8: RLP; add rsp, 0x80 ; mov rax, qword ptr [rip + 0x24d346] ; mov qword ptr [rip + 0x24d33f], rdx ; mov qword ptr [rdx + 0x870], rax ; cmp dword ptr [rip + 0x250255], 0 ; je 0x11e528
read: rax rdx rflags rsp 
write: rax rflags rsp 
--------------------------------------------------------------------------------
0011e547: RLP; add rsp, 0x80 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011e582: RLP; add rbx, 8 ; cmp rbx, rbp ; jb 0x11e57c
read: rbp rbx rflags 
write: rbx rflags 
--------------------------------------------------------------------------------
0011e5b4: RLP; mov rdi, qword ptr [rax + 0x50] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0011e5c4: RLP; add rsp, 8 ; ret
read: rsp 
write: rflags rsp 
--------------------------------------------------------------------------------
0011e5fa: RLP; mov rax, qword ptr fs:[rbx] ; mov qword ptr [rax + 8], 0 ; pop rbx ; ret
read: rsp 
write: rax rbx rsp 
--------------------------------------------------------------------------------
0011e634: RLP; call 0x10713c
read: rip rsp 
write: rsp 
--------------------------------------------------------------------------------
0011e63d: RLP; call 0x110b9c
read: rip rsp 
write: rsp 
--------------------------------------------------------------------------------
0011e646: RLP; mov rdi, qword ptr [rbx + 0xb0] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0011e656: RLP; mov rdi, qword ptr [rbx + 0xb8] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0011e666: RLP; mov rdi, qword ptr [rbx + 0xf0] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0011e676: RLP; mov rdi, qword ptr [rbx + 0xd0] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0011e686: RLP; mov rdi, qword ptr [rbx + 0xd8] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0011e696: RLP; mov rdi, qword ptr [rbx + 0xe0] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0011e6a6: RLP; mov rdi, qword ptr [rbx + 0xa0] ; call 0x1f46c
read: rip rsp 
write: rdi rsp 
--------------------------------------------------------------------------------
0011e6b6: RLP; lea rax, [rip + 0x24f93f] ; cmp rbx, rax ; je 0x11e6ce
read: rax rbx rflags 
write: rax rflags 
--------------------------------------------------------------------------------
0011e6ce: RLP; mov qword ptr fs:[rbp], 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
read: rsp 
write: rbp rbx rflags rsp 
--------------------------------------------------------------------------------
section gadget count: 13688
Gadgets information
============================================================

Unique gadgets found: 0
